#ifndef ERROR_CODE_H
#define ERROR_CODE_H

#include <string>

enum ErrorCode {
    SUCCESS,
    MEMORY_OPERAND,
    PCREL_OPERAND,
    UNKNOWN_OPERAND,
    PSEUDO_INSTRUCTION,
    INSTRUCION_PREFIX,
    MAY_LOAD,
    MAY_STORE,
    IS_CALL,
    IS_META_INSTRUCTION,
    IS_RETURN,
    IS_BRANCH,
    IS_CODE_GEN_ONLY,
    IS_X87FP,
    SKIP_MANUALLY,
    DOES_NOT_EMIT_INST,
    ERROR_TEMPLATE,
    ERROR_NO_HELPER,
    ERROR_ASSEMBLY,
    ERROR_MMAP,
    ERROR_FORK,
    ERROR_SIGSEGV,
    ERROR_TARGET_DETECT,
    ERROR_CPU_DETECT,
    ERROR_FILE,
    ILLEGAL_INSTRUCTION,
    ERROR_SIGNAL,
    ERROR_UNREACHABLE,
    ERROR_NO_REGISTERS,
    ERROR_GEN_REQUIREMENT,
    ERROR_UNSUPPORTED_ARCH,
    WARNING_MULTIPLE_DEPENDENCIES,
    ERROR_SIGFPE,
    ERROR_EXEC,
    NO_ERROR_CODE,
    ERROR_GENERIC,
};

std::string ecToString(ErrorCode EC);

// returns true if EC is SUCCESS, a warning or the default EC
bool isError(ErrorCode EC);

#endif // ERROR_CODE_H