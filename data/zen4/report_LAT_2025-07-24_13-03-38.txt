Creating new database: genoa.yaml
Timestamp: 2025-07-24_13-03-38
Command: ./winic -f 1.5 LAT -o genoa.yaml 
Frequency: 1.5 GHz
Arch: znver4
Mode: Latency
No instructions specified, measuring all instructions from opcode 0 to 22803
Number of measurements: 30168


Report on finding helpers for dependency types:
-----Reg<AL> -> Class<GR8> and Class<GR8> -> Reg<AL>-----
	1 measurements of first Type
	13 measurements of reversed Type
	Measuring CMPXCHG8rr(impl(Reg<AL>) -> 0(Class<GR8>))  and DIV8r(0(Class<GR8>) -> impl(Reg<AL>))  was unsuccessful, EC: ERROR_SIGNAL
	 assuming DIV8r(0(Class<GR8>) -> impl(Reg<AL>))  was the problem and blacklisting it
	Measuring CMPXCHG8rr(impl(Reg<AL>) -> 0(Class<GR8>))  and DIV8r_EVEX(0(Class<GR8>) -> impl(Reg<AL>))  was unsuccessful, EC: ERROR_ILLEGAL_INSTRUCTION
	 assuming DIV8r_EVEX(0(Class<GR8>) -> impl(Reg<AL>))  was the problem and blacklisting it
	Measuring CMPXCHG8rr(impl(Reg<AL>) -> 0(Class<GR8>))  and DIV8r_NF(0(Class<GR8>) -> impl(Reg<AL>))  was unsuccessful, EC: ERROR_ILLEGAL_INSTRUCTION
	 assuming DIV8r_NF(0(Class<GR8>) -> impl(Reg<AL>))  was the problem and blacklisting it
	Measuring CMPXCHG8rr(impl(Reg<AL>) -> 0(Class<GR8>))  and IDIV8r(0(Class<GR8>) -> impl(Reg<AL>))  was unsuccessful, EC: ERROR_SIGNAL
	 assuming IDIV8r(0(Class<GR8>) -> impl(Reg<AL>))  was the problem and blacklisting it
	Measuring CMPXCHG8rr(impl(Reg<AL>) -> 0(Class<GR8>))  and IDIV8r_EVEX(0(Class<GR8>) -> impl(Reg<AL>))  was unsuccessful, EC: ERROR_ILLEGAL_INSTRUCTION
	 assuming IDIV8r_EVEX(0(Class<GR8>) -> impl(Reg<AL>))  was the problem and blacklisting it
	Measuring CMPXCHG8rr(impl(Reg<AL>) -> 0(Class<GR8>))  and IDIV8r_NF(0(Class<GR8>) -> impl(Reg<AL>))  was unsuccessful, EC: ERROR_ILLEGAL_INSTRUCTION
	 assuming IDIV8r_NF(0(Class<GR8>) -> impl(Reg<AL>))  was the problem and blacklisting it
	Found helper instructions CMPXCHG8rr(impl(Reg<AL>) -> 0(Class<GR8>))  and CMPXCHG8rr(1(Class<GR8>) -> impl(Reg<AL>))  with combined latency 6.0375
-----Reg<CL> -> Class<GR8> and Class<GR8> -> Reg<CL>-----
	31 measurements of first Type
	no measurements of type Class<GR8> -> Reg<CL> so Reg<CL> -> Class<GR8> can also not be measured
-----Reg<EFLAGS> -> Class<GR8> and Class<GR8> -> Reg<EFLAGS>-----
	42 measurements of first Type
	212 measurements of reversed Type
	New pair: ADC8ri8(impl(Reg<EFLAGS>) -> 0(Class<GR8>))  ADC8ri(1(Class<GR8>) -> impl(Reg<EFLAGS>)) with latency 2.01625
	Found helper instructions ADC8ri8(impl(Reg<EFLAGS>) -> 0(Class<GR8>))  and ADC8ri(1(Class<GR8>) -> impl(Reg<EFLAGS>))  with combined latency 2.01625
-----Class<GR8> -> Class<GR16> and Class<GR16> -> Class<GR8>-----
	2 measurements of first Type
	no measurements of type Class<GR16> -> Class<GR8> so Class<GR8> -> Class<GR16> can also not be measured
-----Class<SEGMENT_REG> -> Class<GR16> and Class<GR16> -> Class<SEGMENT_REG>-----
	1 measurements of first Type
	1 measurements of reversed Type
	no measurement of type Class<GR16> -> Class<SEGMENT_REG> can be executed successfully
-----Class<GR32> -> Class<GR16> and Class<GR16> -> Class<GR32>-----
	1 measurements of first Type
	6 measurements of reversed Type
	no measurement of type Class<GR32> -> Class<GR16> can be executed successfully
-----Reg<AX> -> Class<GR16> and Class<GR16> -> Reg<AX>-----
	2 measurements of first Type
	14 measurements of reversed Type
	New pair: XCHG16ar(impl(Reg<AX>) -> 0(Class<GR16>))  CMPXCHG16rr(1(Class<GR16>) -> impl(Reg<AX>)) with latency 3.03875
	New pair: XCHG16ar(impl(Reg<AX>) -> 0(Class<GR16>))  MUL16r(0(Class<GR16>) -> impl(Reg<AX>)) with latency 3.03125
	Found helper instructions XCHG16ar(impl(Reg<AX>) -> 0(Class<GR16>))  and MUL16r(0(Class<GR16>) -> impl(Reg<AX>))  with combined latency 3.03125
-----Reg<CL> -> Class<GR16> and Class<GR16> -> Reg<CL>-----
	41 measurements of first Type
	no measurements of type Class<GR16> -> Reg<CL> so Reg<CL> -> Class<GR16> can also not be measured
-----Reg<EFLAGS> -> Class<GR16> and Class<GR16> -> Reg<EFLAGS>-----
	48 measurements of first Type
	295 measurements of reversed Type
	New pair: ADC16rr(impl(Reg<EFLAGS>) -> 0(Class<GR16>))  ADC16ri(1(Class<GR16>) -> impl(Reg<EFLAGS>)) with latency 2.01875
	Found helper instructions ADC16rr(impl(Reg<EFLAGS>) -> 0(Class<GR16>))  and ADC16ri(1(Class<GR16>) -> impl(Reg<EFLAGS>))  with combined latency 2.01875
-----Class<VK1WM> -> Class<VK1> and Class<VK1> -> Class<VK1WM>-----
	9 measurements of first Type
	no measurements of type Class<VK1> -> Class<VK1WM> so Class<VK1WM> -> Class<VK1> can also not be measured
-----Class<FR16X> -> Class<VK1> and Class<VK1> -> Class<FR16X>-----
	2 measurements of first Type
	no measurements of type Class<VK1> -> Class<FR16X> so Class<FR16X> -> Class<VK1> can also not be measured
-----Class<FR32X> -> Class<VK1> and Class<VK1> -> Class<FR32X>-----
	2 measurements of first Type
	no measurements of type Class<VK1> -> Class<FR32X> so Class<FR32X> -> Class<VK1> can also not be measured
-----Class<FR64X> -> Class<VK1> and Class<VK1> -> Class<FR64X>-----
	2 measurements of first Type
	no measurements of type Class<VK1> -> Class<FR64X> so Class<FR64X> -> Class<VK1> can also not be measured
-----Class<VR128X> -> Class<VK1> and Class<VK1> -> Class<VR128X>-----
	30 measurements of first Type
	no measurements of type Class<VK1> -> Class<VR128X> so Class<VR128X> -> Class<VK1> can also not be measured
-----Reg<EFLAGS> -> Class<VK1> and Class<VK1> -> Reg<EFLAGS>-----
	1 measurements of first Type
	no measurements of type Class<VK1> -> Reg<EFLAGS> so Reg<EFLAGS> -> Class<VK1> can also not be measured
-----Reg<MXCSR> -> Class<VK1> and Class<VK1> -> Reg<MXCSR>-----
	21 measurements of first Type
	no measurements of type Class<VK1> -> Reg<MXCSR> so Reg<MXCSR> -> Class<VK1> can also not be measured
-----Class<VK8> -> Class<VK16> and Class<VK16> -> Class<VK8>-----
	2 measurements of first Type
	no measurements of type Class<VK16> -> Class<VK8> so Class<VK8> -> Class<VK16> can also not be measured
-----Class<VK16WM> -> Class<VK16> and Class<VK16> -> Class<VK16WM>-----
	27 measurements of first Type
	no measurements of type Class<VK16> -> Class<VK16WM> so Class<VK16WM> -> Class<VK16> can also not be measured
-----Class<GR32> -> Class<VK16> and Class<VK16> -> Class<GR32>-----
	2 measurements of first Type
	2 measurements of reversed Type
	New pair: KMOVWkr_EVEX(1(Class<GR32>) -> 0(Class<VK16>))  KMOVWrk(1(Class<VK16>) -> 0(Class<GR32>)) with latency 9.06
	Found helper instructions KMOVWkr_EVEX(1(Class<GR32>) -> 0(Class<VK16>))  and KMOVWrk(1(Class<VK16>) -> 0(Class<GR32>))  with combined latency 9.06
-----Class<VR128X> -> Class<VK16> and Class<VK16> -> Class<VR128X>-----
	29 measurements of first Type
	2 measurements of reversed Type
	New pair: VPCMPBZ128rrik(2(Class<VR128X>) -> 0(Class<VK16>))  VPBROADCASTMW2DZ128rr(1(Class<VK16>) -> 0(Class<VR128X>)) with latency 5.03375
	New pair: VPCMPBZ128rrik(2(Class<VR128X>) -> 0(Class<VK16>))  VPMOVM2BZ128rk(1(Class<VK16>) -> 0(Class<VR128X>)) with latency 4.045
	New pair: VPCMPBZ128rrik(3(Class<VR128X>) -> 0(Class<VK16>))  VPMOVM2BZ128rk(1(Class<VK16>) -> 0(Class<VR128X>)) with latency 4.035
	New pair: VPCMPEQBZ128rr(2(Class<VR128X>) -> 0(Class<VK16>))  VPMOVM2BZ128rk(1(Class<VK16>) -> 0(Class<VR128X>)) with latency 4.03375
	New pair: VPCMPEQBZ128rrk(2(Class<VR128X>) -> 0(Class<VK16>))  VPMOVM2BZ128rk(1(Class<VK16>) -> 0(Class<VR128X>)) with latency 4.03
	New pair: VPCMPUBZ128rri(2(Class<VR128X>) -> 0(Class<VK16>))  VPMOVM2BZ128rk(1(Class<VK16>) -> 0(Class<VR128X>)) with latency 4.02875
	New pair: VPMOVB2MZ128kr(1(Class<VR128X>) -> 0(Class<VK16>))  VPMOVM2BZ128rk(1(Class<VK16>) -> 0(Class<VR128X>)) with latency 4.0175
	Found helper instructions VPMOVB2MZ128kr(1(Class<VR128X>) -> 0(Class<VK16>))  and VPMOVM2BZ128rk(1(Class<VK16>) -> 0(Class<VR128X>))  with combined latency 4.0175
-----Class<VR256X> -> Class<VK16> and Class<VK16> -> Class<VR256X>-----
	41 measurements of first Type
	2 measurements of reversed Type
	New pair: VPCMPEQWZ256rr(2(Class<VR256X>) -> 0(Class<VK16>))  VPBROADCASTMW2DZ256rr(1(Class<VK16>) -> 0(Class<VR256X>)) with latency 6.0425
	New pair: VPCMPEQWZ256rr(2(Class<VR256X>) -> 0(Class<VK16>))  VPMOVM2WZ256rk(1(Class<VK16>) -> 0(Class<VR256X>)) with latency 5.0275
	Found helper instructions VPCMPEQWZ256rr(2(Class<VR256X>) -> 0(Class<VK16>))  and VPMOVM2WZ256rk(1(Class<VK16>) -> 0(Class<VR256X>))  with combined latency 5.0275
-----Class<VR512> -> Class<VK16> and Class<VK16> -> Class<VR512>-----
	35 measurements of first Type
	2 measurements of reversed Type
	New pair: VCMPPSZrri(2(Class<VR512>) -> 0(Class<VK16>))  VPBROADCASTMW2DZrr(1(Class<VK16>) -> 0(Class<VR512>)) with latency 7.05375
	New pair: VCMPPSZrri(2(Class<VR512>) -> 0(Class<VK16>))  VPMOVM2DZrk(1(Class<VK16>) -> 0(Class<VR512>)) with latency 6.19375
	New pair: VCMPPSZrrib(1(Class<VR512>) -> 0(Class<VK16>))  VPMOVM2DZrk(1(Class<VK16>) -> 0(Class<VR512>)) with latency 6.16125
	New pair: VCMPPSZrrib(2(Class<VR512>) -> 0(Class<VK16>))  VPMOVM2DZrk(1(Class<VK16>) -> 0(Class<VR512>)) with latency 6.15375
	New pair: VCMPPSZrribk(3(Class<VR512>) -> 0(Class<VK16>))  VPMOVM2DZrk(1(Class<VK16>) -> 0(Class<VR512>)) with latency 6.14625
	New pair: VPCMPDZrri(1(Class<VR512>) -> 0(Class<VK16>))  VPMOVM2DZrk(1(Class<VK16>) -> 0(Class<VR512>)) with latency 6.13625
	New pair: VPTESTNMDZrr(2(Class<VR512>) -> 0(Class<VK16>))  VPMOVM2DZrk(1(Class<VK16>) -> 0(Class<VR512>)) with latency 6.13375
	Found helper instructions VPTESTNMDZrr(2(Class<VR512>) -> 0(Class<VK16>))  and VPMOVM2DZrk(1(Class<VK16>) -> 0(Class<VR512>))  with combined latency 6.13375
-----Reg<EFLAGS> -> Class<VK16> and Class<VK16> -> Reg<EFLAGS>-----
	1 measurements of first Type
	4 measurements of reversed Type
	Found helper instructions CMOV_VK16(impl(Reg<EFLAGS>) -> 0(Class<VK16>))  and KORTESTWkk(0(Class<VK16>) -> impl(Reg<EFLAGS>))  with combined latency 1.20375
-----Reg<MXCSR> -> Class<VK16> and Class<VK16> -> Reg<MXCSR>-----
	12 measurements of first Type
	no measurements of type Class<VK16> -> Reg<MXCSR> so Reg<MXCSR> -> Class<VK16> can also not be measured
-----Class<VK2WM> -> Class<VK2> and Class<VK2> -> Class<VK2WM>-----
	8 measurements of first Type
	no measurements of type Class<VK2> -> Class<VK2WM> so Class<VK2WM> -> Class<VK2> can also not be measured
-----Class<VR128X> -> Class<VK2> and Class<VK2> -> Class<VR128X>-----
	31 measurements of first Type
	1 measurements of reversed Type
	New pair: VCMPPDZ128rri(2(Class<VR128X>) -> 0(Class<VK2>))  VPMOVM2QZ128rk(1(Class<VK2>) -> 0(Class<VR128X>)) with latency 4.0275
	New pair: VPCMPGTQZ128rr(2(Class<VR128X>) -> 0(Class<VK2>))  VPMOVM2QZ128rk(1(Class<VK2>) -> 0(Class<VR128X>)) with latency 4.02625
	New pair: VPCMPQZ128rri(2(Class<VR128X>) -> 0(Class<VK2>))  VPMOVM2QZ128rk(1(Class<VK2>) -> 0(Class<VR128X>)) with latency 4.01625
	Found helper instructions VPCMPQZ128rri(2(Class<VR128X>) -> 0(Class<VK2>))  and VPMOVM2QZ128rk(1(Class<VK2>) -> 0(Class<VR128X>))  with combined latency 4.01625
-----Reg<EFLAGS> -> Class<VK2> and Class<VK2> -> Reg<EFLAGS>-----
	1 measurements of first Type
	no measurements of type Class<VK2> -> Reg<EFLAGS> so Reg<EFLAGS> -> Class<VK2> can also not be measured
-----Reg<MXCSR> -> Class<VK2> and Class<VK2> -> Reg<MXCSR>-----
	4 measurements of first Type
	no measurements of type Class<VK2> -> Reg<MXCSR> so Reg<MXCSR> -> Class<VK2> can also not be measured
-----Class<VK4WM> -> Class<VK4> and Class<VK4> -> Class<VK4WM>-----
	17 measurements of first Type
	no measurements of type Class<VK4> -> Class<VK4WM> so Class<VK4WM> -> Class<VK4> can also not be measured
-----Class<VR128X> -> Class<VK4> and Class<VK4> -> Class<VR128X>-----
	31 measurements of first Type
	1 measurements of reversed Type
	New pair: VCMPPSZ128rrik(3(Class<VR128X>) -> 0(Class<VK4>))  VPMOVM2DZ128rk(1(Class<VK4>) -> 0(Class<VR128X>)) with latency 4.03125
	New pair: VPCMPDZ128rrik(2(Class<VR128X>) -> 0(Class<VK4>))  VPMOVM2DZ128rk(1(Class<VK4>) -> 0(Class<VR128X>)) with latency 4.0275
	New pair: VPCMPEQDZ128rr(2(Class<VR128X>) -> 0(Class<VK4>))  VPMOVM2DZ128rk(1(Class<VK4>) -> 0(Class<VR128X>)) with latency 4.02625
	Found helper instructions VPCMPEQDZ128rr(2(Class<VR128X>) -> 0(Class<VK4>))  and VPMOVM2DZ128rk(1(Class<VK4>) -> 0(Class<VR128X>))  with combined latency 4.02625
-----Class<VR256X> -> Class<VK4> and Class<VK4> -> Class<VR256X>-----
	35 measurements of first Type
	1 measurements of reversed Type
	Measuring VCMPPDZ256rrib(1(Class<VR256X>) -> 0(Class<VK4>))  and VPMOVM2QZ256rk(1(Class<VK4>) -> 0(Class<VR256X>))  was unsuccessful, EC: ERROR_ILLEGAL_INSTRUCTION
	 assuming VCMPPDZ256rrib(1(Class<VR256X>) -> 0(Class<VK4>))  was the problem and blacklisting it
	Measuring VCMPPDZ256rribk(2(Class<VR256X>) -> 0(Class<VK4>))  and VPMOVM2QZ256rk(1(Class<VK4>) -> 0(Class<VR256X>))  was unsuccessful, EC: ERROR_ILLEGAL_INSTRUCTION
	 assuming VCMPPDZ256rribk(2(Class<VR256X>) -> 0(Class<VK4>))  was the problem and blacklisting it
	New pair: VCMPPDZ256rrik(2(Class<VR256X>) -> 0(Class<VK4>))  VPMOVM2QZ256rk(1(Class<VK4>) -> 0(Class<VR256X>)) with latency 5.03875
	New pair: VCMPPDZ256rrik(3(Class<VR256X>) -> 0(Class<VK4>))  VPMOVM2QZ256rk(1(Class<VK4>) -> 0(Class<VR256X>)) with latency 5.03375
	New pair: VPCMPGTQZ256rrk(2(Class<VR256X>) -> 0(Class<VK4>))  VPMOVM2QZ256rk(1(Class<VK4>) -> 0(Class<VR256X>)) with latency 5.0325
	New pair: VPTESTNMQZ256rrk(2(Class<VR256X>) -> 0(Class<VK4>))  VPMOVM2QZ256rk(1(Class<VK4>) -> 0(Class<VR256X>)) with latency 5.02875
	Found helper instructions VPTESTNMQZ256rrk(2(Class<VR256X>) -> 0(Class<VK4>))  and VPMOVM2QZ256rk(1(Class<VK4>) -> 0(Class<VR256X>))  with combined latency 5.02875
-----Reg<EFLAGS> -> Class<VK4> and Class<VK4> -> Reg<EFLAGS>-----
	1 measurements of first Type
	no measurements of type Class<VK4> -> Reg<EFLAGS> so Reg<EFLAGS> -> Class<VK4> can also not be measured
-----Reg<MXCSR> -> Class<VK4> and Class<VK4> -> Reg<MXCSR>-----
	10 measurements of first Type
	no measurements of type Class<VK4> -> Reg<MXCSR> so Reg<MXCSR> -> Class<VK4> can also not be measured
-----Class<VK8WM> -> Class<VK8> and Class<VK8> -> Class<VK8WM>-----
	28 measurements of first Type
	no measurements of type Class<VK8> -> Class<VK8WM> so Class<VK8WM> -> Class<VK8> can also not be measured
-----Class<GR32> -> Class<VK8> and Class<VK8> -> Class<GR32>-----
	2 measurements of first Type
	2 measurements of reversed Type
	Found helper instructions KMOVBkr(1(Class<GR32>) -> 0(Class<VK8>))  and KMOVBrk(1(Class<VK8>) -> 0(Class<GR32>))  with combined latency 9.07875
-----Class<VR128X> -> Class<VK8> and Class<VK8> -> Class<VR128X>-----
	37 measurements of first Type
	2 measurements of reversed Type
	New pair: VPCMPEQWZ128rr(2(Class<VR128X>) -> 0(Class<VK8>))  VPBROADCASTMB2QZ128rr(1(Class<VK8>) -> 0(Class<VR128X>)) with latency 5.03875
	New pair: VPCMPEQWZ128rr(2(Class<VR128X>) -> 0(Class<VK8>))  VPMOVM2WZ128rk(1(Class<VK8>) -> 0(Class<VR128X>)) with latency 4.0325
	New pair: VPCMPEQWZ128rrk(2(Class<VR128X>) -> 0(Class<VK8>))  VPMOVM2WZ128rk(1(Class<VK8>) -> 0(Class<VR128X>)) with latency 4.03125
	New pair: VPCMPGTWZ128rr(1(Class<VR128X>) -> 0(Class<VK8>))  VPMOVM2WZ128rk(1(Class<VK8>) -> 0(Class<VR128X>)) with latency 4.02
	Found helper instructions VPCMPGTWZ128rr(1(Class<VR128X>) -> 0(Class<VK8>))  and VPMOVM2WZ128rk(1(Class<VK8>) -> 0(Class<VR128X>))  with combined latency 4.02
-----Class<VR256X> -> Class<VK8> and Class<VK8> -> Class<VR256X>-----
	35 measurements of first Type
	2 measurements of reversed Type
	Measuring VCMPPSZ256rrib(1(Class<VR256X>) -> 0(Class<VK8>))  and VPBROADCASTMB2QZ256rr(1(Class<VK8>) -> 0(Class<VR256X>))  was unsuccessful, EC: ERROR_ILLEGAL_INSTRUCTION
	 assuming VCMPPSZ256rrib(1(Class<VR256X>) -> 0(Class<VK8>))  was the problem and blacklisting it
	Measuring VCMPPSZ256rribk(2(Class<VR256X>) -> 0(Class<VK8>))  and VPBROADCASTMB2QZ256rr(1(Class<VK8>) -> 0(Class<VR256X>))  was unsuccessful, EC: ERROR_ILLEGAL_INSTRUCTION
	 assuming VCMPPSZ256rribk(2(Class<VR256X>) -> 0(Class<VK8>))  was the problem and blacklisting it
	New pair: VCMPPSZ256rri(1(Class<VR256X>) -> 0(Class<VK8>))  VPMOVM2DZ256rk(1(Class<VK8>) -> 0(Class<VR256X>)) with latency 5.03875
	Found helper instructions VCMPPSZ256rri(1(Class<VR256X>) -> 0(Class<VK8>))  and VPMOVM2DZ256rk(1(Class<VK8>) -> 0(Class<VR256X>))  with combined latency 5.03875
-----Class<VR512> -> Class<VK8> and Class<VK8> -> Class<VR512>-----
	35 measurements of first Type
	2 measurements of reversed Type
	New pair: VCMPPDZrri(2(Class<VR512>) -> 0(Class<VK8>))  VPBROADCASTMB2QZrr(1(Class<VK8>) -> 0(Class<VR512>)) with latency 7.05375
	New pair: VCMPPDZrri(2(Class<VR512>) -> 0(Class<VK8>))  VPMOVM2QZrk(1(Class<VK8>) -> 0(Class<VR512>)) with latency 6.18375
	New pair: VCMPPDZrrib(1(Class<VR512>) -> 0(Class<VK8>))  VPMOVM2QZrk(1(Class<VK8>) -> 0(Class<VR512>)) with latency 6.12375
	New pair: VPCMPQZrrik(2(Class<VR512>) -> 0(Class<VK8>))  VPMOVM2QZrk(1(Class<VK8>) -> 0(Class<VR512>)) with latency 6.105
	Found helper instructions VPCMPQZrrik(2(Class<VR512>) -> 0(Class<VK8>))  and VPMOVM2QZrk(1(Class<VK8>) -> 0(Class<VR512>))  with combined latency 6.105
-----Reg<EFLAGS> -> Class<VK8> and Class<VK8> -> Reg<EFLAGS>-----
	1 measurements of first Type
	4 measurements of reversed Type
	Found helper instructions CMOV_VK8(impl(Reg<EFLAGS>) -> 0(Class<VK8>))  and KORTESTBkk(0(Class<VK8>) -> impl(Reg<EFLAGS>))  with combined latency 1.21625
-----Reg<MXCSR> -> Class<VK8> and Class<VK8> -> Reg<MXCSR>-----
	16 measurements of first Type
	no measurements of type Class<VK8> -> Reg<MXCSR> so Reg<MXCSR> -> Class<VK8> can also not be measured
-----Class<GR32> -> Class<SEGMENT_REG> and Class<SEGMENT_REG> -> Class<GR32>-----
	1 measurements of first Type
	1 measurements of reversed Type
	no measurement of type Class<GR32> -> Class<SEGMENT_REG> can be executed successfully
-----Class<GR64> -> Class<SEGMENT_REG> and Class<SEGMENT_REG> -> Class<GR64>-----
	1 measurements of first Type
	1 measurements of reversed Type
	no measurement of type Class<GR64> -> Class<SEGMENT_REG> can be executed successfully
-----Class<FR32X> -> Class<FR16X> and Class<FR16X> -> Class<FR32X>-----
	1 measurements of first Type
	1 measurements of reversed Type
	no measurement of type Class<FR32X> -> Class<FR16X> can be executed successfully
-----Class<GR32> -> Class<FR16X> and Class<FR16X> -> Class<GR32>-----
	2 measurements of first Type
	2 measurements of reversed Type
	no measurement of type Class<GR32> -> Class<FR16X> can be executed successfully
-----Class<GR64> -> Class<FR16X> and Class<FR16X> -> Class<GR64>-----
	2 measurements of first Type
	2 measurements of reversed Type
	no measurement of type Class<GR64> -> Class<FR16X> can be executed successfully
-----Class<FR64X> -> Class<FR16X> and Class<FR16X> -> Class<FR64X>-----
	1 measurements of first Type
	1 measurements of reversed Type
	no measurement of type Class<FR64X> -> Class<FR16X> can be executed successfully
-----Reg<EFLAGS> -> Class<FR16X> and Class<FR16X> -> Reg<EFLAGS>-----
	1 measurements of first Type
	8 measurements of reversed Type
	no measurement of type Class<FR16X> -> Reg<EFLAGS> can be executed successfully
-----Reg<MXCSR> -> Class<FR16X> and Class<FR16X> -> Reg<MXCSR>-----
	40 measurements of first Type
	no measurements of type Class<FR16X> -> Reg<MXCSR> so Reg<MXCSR> -> Class<FR16X> can also not be measured
-----Reg<EFLAGS> -> Class<FR16> and Class<FR16> -> Reg<EFLAGS>-----
	1 measurements of first Type
	no measurements of type Class<FR16> -> Reg<EFLAGS> so Reg<EFLAGS> -> Class<FR16> can also not be measured
-----Class<VR512> -> Class<VK16PAIR> and Class<VK16PAIR> -> Class<VR512>-----
	2 measurements of first Type
	no measurements of type Class<VK16PAIR> -> Class<VR512> so Class<VR512> -> Class<VK16PAIR> can also not be measured
-----Class<VR128X> -> Class<VK2PAIR> and Class<VK2PAIR> -> Class<VR128X>-----
	2 measurements of first Type
	no measurements of type Class<VK2PAIR> -> Class<VR128X> so Class<VR128X> -> Class<VK2PAIR> can also not be measured
-----Class<VR128X> -> Class<VK4PAIR> and Class<VK4PAIR> -> Class<VR128X>-----
	2 measurements of first Type
	no measurements of type Class<VK4PAIR> -> Class<VR128X> so Class<VR128X> -> Class<VK4PAIR> can also not be measured
-----Class<VR256X> -> Class<VK4PAIR> and Class<VK4PAIR> -> Class<VR256X>-----
	2 measurements of first Type
	no measurements of type Class<VK4PAIR> -> Class<VR256X> so Class<VR256X> -> Class<VK4PAIR> can also not be measured
-----Class<VR256X> -> Class<VK8PAIR> and Class<VK8PAIR> -> Class<VR256X>-----
	2 measurements of first Type
	no measurements of type Class<VK8PAIR> -> Class<VR256X> so Class<VR256X> -> Class<VK8PAIR> can also not be measured
-----Class<VR512> -> Class<VK8PAIR> and Class<VK8PAIR> -> Class<VR512>-----
	2 measurements of first Type
	no measurements of type Class<VK8PAIR> -> Class<VR512> so Class<VR512> -> Class<VK8PAIR> can also not be measured
-----Class<GR32> -> Class<FR32X> and Class<FR32X> -> Class<GR32>-----
	3 measurements of first Type
	6 measurements of reversed Type
	New pair: VMOVDI2SSZrr(1(Class<GR32>) -> 0(Class<FR32X>))  VCVTSS2SIZrr(1(Class<FR32X>) -> 0(Class<GR32>)) with latency 9.07
	Measuring VMOVDI2SSZrr(1(Class<GR32>) -> 0(Class<FR32X>))  and VCVTTSS2SISrr(1(Class<FR32X>) -> 0(Class<GR32>))  was unsuccessful, EC: ERROR_ILLEGAL_INSTRUCTION
	 assuming VCVTTSS2SISrr(1(Class<FR32X>) -> 0(Class<GR32>))  was the problem and blacklisting it
	New pair: VMOVDI2SSZrr(1(Class<GR32>) -> 0(Class<FR32X>))  VCVTTSS2SIZrr(1(Class<FR32X>) -> 0(Class<GR32>)) with latency 9.06125
	Measuring VMOVDI2SSZrr(1(Class<GR32>) -> 0(Class<FR32X>))  and VCVTTSS2USISrr(1(Class<FR32X>) -> 0(Class<GR32>))  was unsuccessful, EC: ERROR_ILLEGAL_INSTRUCTION
	 assuming VCVTTSS2USISrr(1(Class<FR32X>) -> 0(Class<GR32>))  was the problem and blacklisting it
	New pair: VMOVDI2SSZrr(1(Class<GR32>) -> 0(Class<FR32X>))  VMOVSS2DIZrr(1(Class<FR32X>) -> 0(Class<GR32>)) with latency 6.045
	Found helper instructions VMOVDI2SSZrr(1(Class<GR32>) -> 0(Class<FR32X>))  and VMOVSS2DIZrr(1(Class<FR32X>) -> 0(Class<GR32>))  with combined latency 6.045
-----Class<GR64> -> Class<FR32X> and Class<FR32X> -> Class<GR64>-----
	2 measurements of first Type
	5 measurements of reversed Type
	New pair: VCVTUSI642SSZrr(2(Class<GR64>) -> 0(Class<FR32X>))  VCVTSS2SI64Zrr(1(Class<FR32X>) -> 0(Class<GR64>)) with latency 12.0787
	Measuring VCVTUSI642SSZrr(2(Class<GR64>) -> 0(Class<FR32X>))  and VCVTTSS2SI64Srr(1(Class<FR32X>) -> 0(Class<GR64>))  was unsuccessful, EC: ERROR_ILLEGAL_INSTRUCTION
	 assuming VCVTTSS2SI64Srr(1(Class<FR32X>) -> 0(Class<GR64>))  was the problem and blacklisting it
	Measuring VCVTUSI642SSZrr(2(Class<GR64>) -> 0(Class<FR32X>))  and VCVTTSS2USI64Srr(1(Class<FR32X>) -> 0(Class<GR64>))  was unsuccessful, EC: ERROR_ILLEGAL_INSTRUCTION
	 assuming VCVTTSS2USI64Srr(1(Class<FR32X>) -> 0(Class<GR64>))  was the problem and blacklisting it
	Found helper instructions VCVTUSI642SSZrr(2(Class<GR64>) -> 0(Class<FR32X>))  and VCVTSS2SI64Zrr(1(Class<FR32X>) -> 0(Class<GR64>))  with combined latency 12.0787
-----Class<FR64X> -> Class<FR32X> and Class<FR32X> -> Class<FR64X>-----
	1 measurements of first Type
	1 measurements of reversed Type
	Found helper instructions VCVTSD2SSZrr(2(Class<FR64X>) -> 0(Class<FR32X>))  and VCVTSS2SDZrr(2(Class<FR32X>) -> 0(Class<FR64X>))  with combined latency 6.0675
-----Reg<EFLAGS> -> Class<FR32X> and Class<FR32X> -> Reg<EFLAGS>-----
	1 measurements of first Type
	6 measurements of reversed Type
	Measuring CMOV_FR32X(impl(Reg<EFLAGS>) -> 0(Class<FR32X>))  and VUCOMXSSZrr(0(Class<FR32X>) -> impl(Reg<EFLAGS>))  was unsuccessful, EC: ERROR_ILLEGAL_INSTRUCTION
	 assuming VUCOMXSSZrr(0(Class<FR32X>) -> impl(Reg<EFLAGS>))  was the problem and blacklisting it
	Found helper instructions CMOV_FR32X(impl(Reg<EFLAGS>) -> 0(Class<FR32X>))  and VCOMISSZrr(0(Class<FR32X>) -> impl(Reg<EFLAGS>))  with combined latency 1
-----Reg<MXCSR> -> Class<FR32X> and Class<FR32X> -> Reg<MXCSR>-----
	40 measurements of first Type
	no measurements of type Class<FR32X> -> Reg<MXCSR> so Reg<MXCSR> -> Class<FR32X> can also not be measured
-----Class<GR8> -> Class<GR32> and Class<GR32> -> Class<GR8>-----
	4 measurements of first Type
	no measurements of type Class<GR32> -> Class<GR8> so Class<GR8> -> Class<GR32> can also not be measured
-----Class<DEBUG_REG> -> Class<GR32> and Class<GR32> -> Class<DEBUG_REG>-----
	1 measurements of first Type
	1 measurements of reversed Type
	no measurement of type Class<DEBUG_REG> -> Class<GR32> can be executed successfully
-----Class<FR32> -> Class<GR32> and Class<GR32> -> Class<FR32>-----
	6 measurements of first Type
	4 measurements of reversed Type
	New pair: CVTTSS2SIrr(1(Class<FR32>) -> 0(Class<GR32>))  CVTSI2SSrr(1(Class<GR32>) -> 0(Class<FR32>)) with latency 12.08
	New pair: CVTTSS2SIrr(1(Class<FR32>) -> 0(Class<GR32>))  MOVDI2SSrr(1(Class<GR32>) -> 0(Class<FR32>)) with latency 10.0775
	New pair: MOVSS2DIrr(1(Class<FR32>) -> 0(Class<GR32>))  MOVDI2SSrr(1(Class<GR32>) -> 0(Class<FR32>)) with latency 7.04625
	New pair: MOVSS2DIrr(1(Class<FR32>) -> 0(Class<GR32>))  VMOVDI2SSrr(1(Class<GR32>) -> 0(Class<FR32>)) with latency 6.05625
	New pair: VMOVSS2DIrr(1(Class<FR32>) -> 0(Class<GR32>))  VMOVDI2SSrr(1(Class<GR32>) -> 0(Class<FR32>)) with latency 6.05375
	Found helper instructions VMOVSS2DIrr(1(Class<FR32>) -> 0(Class<GR32>))  and VMOVDI2SSrr(1(Class<GR32>) -> 0(Class<FR32>))  with combined latency 6.05375
-----Class<VK32> -> Class<GR32> and Class<GR32> -> Class<VK32>-----
	2 measurements of first Type
	2 measurements of reversed Type
	Found helper instructions KMOVDrk(1(Class<VK32>) -> 0(Class<GR32>))  and KMOVDkr(1(Class<GR32>) -> 0(Class<VK32>))  with combined latency 9.07125
-----Class<FR64X> -> Class<GR32> and Class<GR32> -> Class<FR64X>-----
	5 measurements of first Type
	2 measurements of reversed Type
	Measuring VCVTTSD2SISrr(1(Class<FR64X>) -> 0(Class<GR32>))  and VCVTSI2SDZrr(2(Class<GR32>) -> 0(Class<FR64X>))  was unsuccessful, EC: ERROR_ILLEGAL_INSTRUCTION
	 assuming VCVTTSD2SISrr(1(Class<FR64X>) -> 0(Class<GR32>))  was the problem and blacklisting it
	Measuring VCVTTSD2USISrr(1(Class<FR64X>) -> 0(Class<GR32>))  and VCVTSI2SDZrr(2(Class<GR32>) -> 0(Class<FR64X>))  was unsuccessful, EC: ERROR_ILLEGAL_INSTRUCTION
	 assuming VCVTTSD2USISrr(1(Class<FR64X>) -> 0(Class<GR32>))  was the problem and blacklisting it
	New pair: VCVTTSD2USIZrr(1(Class<FR64X>) -> 0(Class<GR32>))  VCVTSI2SDZrr(2(Class<GR32>) -> 0(Class<FR64X>)) with latency 12.0663
	Found helper instructions VCVTTSD2USIZrr(1(Class<FR64X>) -> 0(Class<GR32>))  and VCVTSI2SDZrr(2(Class<GR32>) -> 0(Class<FR64X>))  with combined latency 12.0663
-----Class<CONTROL_REG> -> Class<GR32> and Class<GR32> -> Class<CONTROL_REG>-----
	1 measurements of first Type
	1 measurements of reversed Type
	no measurement of type Class<CONTROL_REG> -> Class<GR32> can be executed successfully
-----Class<FR64> -> Class<GR32> and Class<GR32> -> Class<FR64>-----
	4 measurements of first Type
	2 measurements of reversed Type
	Found helper instructions CVTSD2SIrr(1(Class<FR64>) -> 0(Class<GR32>))  and CVTSI2SDrr(1(Class<GR32>) -> 0(Class<FR64>))  with combined latency 12.065
-----Class<VR64> -> Class<GR32> and Class<GR32> -> Class<VR64>-----
	3 measurements of first Type
	2 measurements of reversed Type
	New pair: MMX_PMOVMSKBrr(1(Class<VR64>) -> 0(Class<GR32>))  MMX_MOVD64rr(1(Class<GR32>) -> 0(Class<VR64>)) with latency 7.05375
	New pair: MMX_PMOVMSKBrr(1(Class<VR64>) -> 0(Class<GR32>))  MMX_PINSRWrri(2(Class<GR32>) -> 0(Class<VR64>)) with latency 7.04
	Found helper instructions MMX_PMOVMSKBrr(1(Class<VR64>) -> 0(Class<GR32>))  and MMX_PINSRWrri(2(Class<GR32>) -> 0(Class<VR64>))  with combined latency 7.04
-----Class<VR128X> -> Class<GR32> and Class<GR32> -> Class<VR128X>-----
	39 measurements of first Type
	24 measurements of reversed Type
	New pair: VCVTSD2SIZrrb_Int(1(Class<VR128X>) -> 0(Class<GR32>))  VCVTSI2SDZrr_Int(2(Class<GR32>) -> 0(Class<VR128X>)) with latency 12.0725
	New pair: VCVTSD2SIZrrb_Int(1(Class<VR128X>) -> 0(Class<GR32>))  VCVTUSI2SSZrr_Int(2(Class<GR32>) -> 0(Class<VR128X>)) with latency 12.0575
	Measuring VCVTSH2SIZrr_Int(1(Class<VR128X>) -> 0(Class<GR32>))  and VCVTUSI2SSZrr_Int(2(Class<GR32>) -> 0(Class<VR128X>))  was unsuccessful, EC: ERROR_ILLEGAL_INSTRUCTION
	 assuming VCVTSH2SIZrr_Int(1(Class<VR128X>) -> 0(Class<GR32>))  was the problem and blacklisting it
	Measuring VCVTSH2SIZrrb_Int(1(Class<VR128X>) -> 0(Class<GR32>))  and VCVTUSI2SSZrr_Int(2(Class<GR32>) -> 0(Class<VR128X>))  was unsuccessful, EC: ERROR_ILLEGAL_INSTRUCTION
	 assuming VCVTSH2SIZrrb_Int(1(Class<VR128X>) -> 0(Class<GR32>))  was the problem and blacklisting it
	Measuring VCVTSH2USIZrr_Int(1(Class<VR128X>) -> 0(Class<GR32>))  and VCVTUSI2SSZrr_Int(2(Class<GR32>) -> 0(Class<VR128X>))  was unsuccessful, EC: ERROR_ILLEGAL_INSTRUCTION
	 assuming VCVTSH2USIZrr_Int(1(Class<VR128X>) -> 0(Class<GR32>))  was the problem and blacklisting it
	Measuring VCVTSH2USIZrrb_Int(1(Class<VR128X>) -> 0(Class<GR32>))  and VCVTUSI2SSZrr_Int(2(Class<GR32>) -> 0(Class<VR128X>))  was unsuccessful, EC: ERROR_ILLEGAL_INSTRUCTION
	 assuming VCVTSH2USIZrrb_Int(1(Class<VR128X>) -> 0(Class<GR32>))  was the problem and blacklisting it
	Measuring VCVTTSD2SISrr_Int(1(Class<VR128X>) -> 0(Class<GR32>))  and VCVTUSI2SSZrr_Int(2(Class<GR32>) -> 0(Class<VR128X>))  was unsuccessful, EC: ERROR_ILLEGAL_INSTRUCTION
	 assuming VCVTTSD2SISrr_Int(1(Class<VR128X>) -> 0(Class<GR32>))  was the problem and blacklisting it
	Measuring VCVTTSD2SISrrb_Int(1(Class<VR128X>) -> 0(Class<GR32>))  and VCVTUSI2SSZrr_Int(2(Class<GR32>) -> 0(Class<VR128X>))  was unsuccessful, EC: ERROR_ILLEGAL_INSTRUCTION
	 assuming VCVTTSD2SISrrb_Int(1(Class<VR128X>) -> 0(Class<GR32>))  was the problem and blacklisting it
	Measuring VCVTTSD2USISrr_Int(1(Class<VR128X>) -> 0(Class<GR32>))  and VCVTUSI2SSZrr_Int(2(Class<GR32>) -> 0(Class<VR128X>))  was unsuccessful, EC: ERROR_ILLEGAL_INSTRUCTION
	 assuming VCVTTSD2USISrr_Int(1(Class<VR128X>) -> 0(Class<GR32>))  was the problem and blacklisting it
	Measuring VCVTTSD2USISrrb_Int(1(Class<VR128X>) -> 0(Class<GR32>))  and VCVTUSI2SSZrr_Int(2(Class<GR32>) -> 0(Class<VR128X>))  was unsuccessful, EC: ERROR_ILLEGAL_INSTRUCTION
	 assuming VCVTTSD2USISrrb_Int(1(Class<VR128X>) -> 0(Class<GR32>))  was the problem and blacklisting it
	Measuring VCVTTSH2SIZrr_Int(1(Class<VR128X>) -> 0(Class<GR32>))  and VCVTUSI2SSZrr_Int(2(Class<GR32>) -> 0(Class<VR128X>))  was unsuccessful, EC: ERROR_ILLEGAL_INSTRUCTION
	 assuming VCVTTSH2SIZrr_Int(1(Class<VR128X>) -> 0(Class<GR32>))  was the problem and blacklisting it
	Measuring VCVTTSH2SIZrrb_Int(1(Class<VR128X>) -> 0(Class<GR32>))  and VCVTUSI2SSZrr_Int(2(Class<GR32>) -> 0(Class<VR128X>))  was unsuccessful, EC: ERROR_ILLEGAL_INSTRUCTION
	 assuming VCVTTSH2SIZrrb_Int(1(Class<VR128X>) -> 0(Class<GR32>))  was the problem and blacklisting it
	Measuring VCVTTSH2USIZrr_Int(1(Class<VR128X>) -> 0(Class<GR32>))  and VCVTUSI2SSZrr_Int(2(Class<GR32>) -> 0(Class<VR128X>))  was unsuccessful, EC: ERROR_ILLEGAL_INSTRUCTION
	 assuming VCVTTSH2USIZrr_Int(1(Class<VR128X>) -> 0(Class<GR32>))  was the problem and blacklisting it
	Measuring VCVTTSH2USIZrrb_Int(1(Class<VR128X>) -> 0(Class<GR32>))  and VCVTUSI2SSZrr_Int(2(Class<GR32>) -> 0(Class<VR128X>))  was unsuccessful, EC: ERROR_ILLEGAL_INSTRUCTION
	 assuming VCVTTSH2USIZrrb_Int(1(Class<VR128X>) -> 0(Class<GR32>))  was the problem and blacklisting it
	Measuring VCVTTSS2SISrr_Int(1(Class<VR128X>) -> 0(Class<GR32>))  and VCVTUSI2SSZrr_Int(2(Class<GR32>) -> 0(Class<VR128X>))  was unsuccessful, EC: ERROR_ILLEGAL_INSTRUCTION
	 assuming VCVTTSS2SISrr_Int(1(Class<VR128X>) -> 0(Class<GR32>))  was the problem and blacklisting it
	Measuring VCVTTSS2SISrrb_Int(1(Class<VR128X>) -> 0(Class<GR32>))  and VCVTUSI2SSZrr_Int(2(Class<GR32>) -> 0(Class<VR128X>))  was unsuccessful, EC: ERROR_ILLEGAL_INSTRUCTION
	 assuming VCVTTSS2SISrrb_Int(1(Class<VR128X>) -> 0(Class<GR32>))  was the problem and blacklisting it
	Measuring VCVTTSS2USISrr_Int(1(Class<VR128X>) -> 0(Class<GR32>))  and VCVTUSI2SSZrr_Int(2(Class<GR32>) -> 0(Class<VR128X>))  was unsuccessful, EC: ERROR_ILLEGAL_INSTRUCTION
	 assuming VCVTTSS2USISrr_Int(1(Class<VR128X>) -> 0(Class<GR32>))  was the problem and blacklisting it
	Measuring VCVTTSS2USISrrb_Int(1(Class<VR128X>) -> 0(Class<GR32>))  and VCVTUSI2SSZrr_Int(2(Class<GR32>) -> 0(Class<VR128X>))  was unsuccessful, EC: ERROR_ILLEGAL_INSTRUCTION
	 assuming VCVTTSS2USISrrb_Int(1(Class<VR128X>) -> 0(Class<GR32>))  was the problem and blacklisting it
	New pair: VEXTRACTPSZrri(1(Class<VR128X>) -> 0(Class<GR32>))  VCVTUSI2SSZrr_Int(2(Class<GR32>) -> 0(Class<VR128X>)) with latency 10.0712
	New pair: VEXTRACTPSZrri(1(Class<VR128X>) -> 0(Class<GR32>))  VMOVDI2PDIZrr(1(Class<GR32>) -> 0(Class<VR128X>)) with latency 7.05375
	New pair: VMOVPDI2DIZrr(1(Class<VR128X>) -> 0(Class<GR32>))  VMOVDI2PDIZrr(1(Class<GR32>) -> 0(Class<VR128X>)) with latency 6.055
	Measuring VMOVPDI2DIZrr(1(Class<VR128X>) -> 0(Class<GR32>))  and VMOVW2SHrr(1(Class<GR32>) -> 0(Class<VR128X>))  was unsuccessful, EC: ERROR_ILLEGAL_INSTRUCTION
	 assuming VMOVW2SHrr(1(Class<GR32>) -> 0(Class<VR128X>))  was the problem and blacklisting it
	Measuring VMOVSH2Wrr(1(Class<VR128X>) -> 0(Class<GR32>))  and VMOVDI2PDIZrr(1(Class<GR32>) -> 0(Class<VR128X>))  was unsuccessful, EC: ERROR_ILLEGAL_INSTRUCTION
	 assuming VMOVSH2Wrr(1(Class<VR128X>) -> 0(Class<GR32>))  was the problem and blacklisting it
	Found helper instructions VMOVPDI2DIZrr(1(Class<VR128X>) -> 0(Class<GR32>))  and VMOVDI2PDIZrr(1(Class<GR32>) -> 0(Class<VR128X>))  with combined latency 6.055
-----Class<VR128> -> Class<GR32> and Class<GR32> -> Class<VR128>-----
	26 measurements of first Type
	12 measurements of reversed Type
	New pair: CVTSS2SIrr_Int(1(Class<VR128>) -> 0(Class<GR32>))  CVTSI2SDrr_Int(2(Class<GR32>) -> 0(Class<VR128>)) with latency 12.0813
	New pair: CVTSS2SIrr_Int(1(Class<VR128>) -> 0(Class<GR32>))  MOVDI2PDIrr(1(Class<GR32>) -> 0(Class<VR128>)) with latency 10.0762
	New pair: CVTTSD2SIrr_Int(1(Class<VR128>) -> 0(Class<GR32>))  MOVDI2PDIrr(1(Class<GR32>) -> 0(Class<VR128>)) with latency 10.06
	New pair: CVTTSD2SIrr_Int(1(Class<VR128>) -> 0(Class<GR32>))  PINSRWrri(2(Class<GR32>) -> 0(Class<VR128>)) with latency 10.0587
	New pair: EXTRACTPSrri(1(Class<VR128>) -> 0(Class<GR32>))  PINSRWrri(2(Class<GR32>) -> 0(Class<VR128>)) with latency 8.0625
	New pair: EXTRACTPSrri(1(Class<VR128>) -> 0(Class<GR32>))  VMOVDI2PDIrr(1(Class<GR32>) -> 0(Class<VR128>)) with latency 7.05875
	New pair: MOVMSKPDrr(1(Class<VR128>) -> 0(Class<GR32>))  VMOVDI2PDIrr(1(Class<GR32>) -> 0(Class<VR128>)) with latency 6.045
	New pair: MOVMSKPSrr(1(Class<VR128>) -> 0(Class<GR32>))  VMOVDI2PDIrr(1(Class<GR32>) -> 0(Class<VR128>)) with latency 6.0375
	Found helper instructions MOVMSKPSrr(1(Class<VR128>) -> 0(Class<GR32>))  and VMOVDI2PDIrr(1(Class<GR32>) -> 0(Class<VR128>))  with combined latency 6.0375
-----Class<VR256> -> Class<GR32> and Class<GR32> -> Class<VR256>-----
	3 measurements of first Type
	no measurements of type Class<GR32> -> Class<VR256> so Class<VR256> -> Class<GR32> can also not be measured
-----Reg<CL> -> Class<GR32> and Class<GR32> -> Reg<CL>-----
	41 measurements of first Type
	no measurements of type Class<GR32> -> Reg<CL> so Reg<CL> -> Class<GR32> can also not be measured
-----Reg<EAX> -> Class<GR32> and Class<GR32> -> Reg<EAX>-----
	2 measurements of first Type
	17 measurements of reversed Type
	New pair: XCHG32ar(impl(Reg<EAX>) -> 0(Class<GR32>))  CMPXCHG32rr(1(Class<GR32>) -> impl(Reg<EAX>)) with latency 3.01875
	Unusual 0.33375 from XCHG32ar(impl(Reg<EAX>) -> 0(Class<GR32>))  and DYN_ALLOCA_32(0(Class<GR32>) -> impl(Reg<EAX>)) latency would be lower but current candidate pair has clean latency, discarding this result
	New pair: XCHG32ar(impl(Reg<EAX>) -> 0(Class<GR32>))  MUL32r(0(Class<GR32>) -> impl(Reg<EAX>)) with latency 3.01625
	Unusual 0.33375 from XCHG32ar(impl(Reg<EAX>) -> 0(Class<GR32>))  and PROBED_ALLOCA_32(1(Class<GR32>) -> impl(Reg<EAX>)) latency would be lower but current candidate pair has clean latency, discarding this result
	Unusual 0.33375 from XCHG32ar(impl(Reg<EAX>) -> 0(Class<GR32>))  and SEG_ALLOCA_32(1(Class<GR32>) -> impl(Reg<EAX>)) latency would be lower but current candidate pair has clean latency, discarding this result
	Found helper instructions XCHG32ar(impl(Reg<EAX>) -> 0(Class<GR32>))  and MUL32r(0(Class<GR32>) -> impl(Reg<EAX>))  with combined latency 3.01625
-----Reg<EDX> -> Class<GR32> and Class<GR32> -> Reg<EDX>-----
	4 measurements of first Type
	12 measurements of reversed Type
	New pair: MULX32rr(impl(Reg<EDX>) -> 1(Class<GR32>))  IMUL32r(0(Class<GR32>) -> impl(Reg<EDX>)) with latency 7.07375
	New pair: MULX32rr(impl(Reg<EDX>) -> 1(Class<GR32>))  MUL32r(0(Class<GR32>) -> impl(Reg<EDX>)) with latency 7.0525
	Found helper instructions MULX32rr(impl(Reg<EDX>) -> 1(Class<GR32>))  and MUL32r(0(Class<GR32>) -> impl(Reg<EDX>))  with combined latency 7.0525
-----Reg<EFLAGS> -> Class<GR32> and Class<GR32> -> Reg<EFLAGS>-----
	54 measurements of first Type
	338 measurements of reversed Type
	New pair: ADC32ri8(impl(Reg<EFLAGS>) -> 0(Class<GR32>))  ADC32ri(1(Class<GR32>) -> impl(Reg<EFLAGS>)) with latency 2.01875
	Found helper instructions ADC32ri8(impl(Reg<EFLAGS>) -> 0(Class<GR32>))  and ADC32ri(1(Class<GR32>) -> impl(Reg<EFLAGS>))  with combined latency 2.01875
-----Reg<ESP> -> Class<GR32> and Class<GR32> -> Reg<ESP>-----
	2 measurements of first Type
	3 measurements of reversed Type
	Detected multiple dependencys between SEG_ALLOCA_32(impl(Reg<ESP>) -> 0(Class<GR32>))  and DYN_ALLOCA_32(0(Class<GR32>) -> impl(Reg<ESP>)) so result of their combination will not be considered for finding helpers
	Detected multiple dependencys between PROBED_ALLOCA_32(impl(Reg<ESP>) -> 0(Class<GR32>))  and SEG_ALLOCA_32(1(Class<GR32>) -> impl(Reg<ESP>)) so result of their combination will not be considered for finding helpers
	Found helper instructions PROBED_ALLOCA_32(impl(Reg<ESP>) -> 0(Class<GR32>))  and DYN_ALLOCA_32(0(Class<GR32>) -> impl(Reg<ESP>))  with combined latency -0.00125
-----Reg<MXCSR> -> Class<GR32> and Class<GR32> -> Reg<MXCSR>-----
	60 measurements of first Type
	no measurements of type Class<GR32> -> Reg<MXCSR> so Reg<MXCSR> -> Class<GR32> can also not be measured
-----Reg<XMM0> -> Class<GR32> and Class<GR32> -> Reg<XMM0>-----
	2 measurements of first Type
	2 measurements of reversed Type
	no measurement of type Reg<XMM0> -> Class<GR32> can be executed successfully
-----Reg<XMM1> -> Class<GR32> and Class<GR32> -> Reg<XMM1>-----
	1 measurements of first Type
	2 measurements of reversed Type
	no measurement of type Reg<XMM1> -> Class<GR32> can be executed successfully
-----Class<GR64> -> Class<DEBUG_REG> and Class<DEBUG_REG> -> Class<GR64>-----
	1 measurements of first Type
	1 measurements of reversed Type
	no measurement of type Class<GR64> -> Class<DEBUG_REG> can be executed successfully
-----Class<GR64> -> Class<FR32> and Class<FR32> -> Class<GR64>-----
	2 measurements of first Type
	4 measurements of reversed Type
	New pair: VCVTSI642SSrr(2(Class<GR64>) -> 0(Class<FR32>))  CVTSS2SI64rr(1(Class<FR32>) -> 0(Class<GR64>)) with latency 12.0663
	Found helper instructions VCVTSI642SSrr(2(Class<GR64>) -> 0(Class<FR32>))  and CVTSS2SI64rr(1(Class<FR32>) -> 0(Class<GR64>))  with combined latency 12.0663
-----Class<FR64> -> Class<FR32> and Class<FR32> -> Class<FR64>-----
	2 measurements of first Type
	2 measurements of reversed Type
	Found helper instructions VCVTSD2SSrr(2(Class<FR64>) -> 0(Class<FR32>))  and CVTSS2SDrr(1(Class<FR32>) -> 0(Class<FR64>))  with combined latency 6.05
-----Reg<EFLAGS> -> Class<FR32> and Class<FR32> -> Reg<EFLAGS>-----
	1 measurements of first Type
	8 measurements of reversed Type
	Unusual 1.00875 from CMOV_FR32(impl(Reg<EFLAGS>) -> 0(Class<FR32>))  and UCOMISSrr(0(Class<FR32>) -> impl(Reg<EFLAGS>)) lower than 2, discarding this result
	Unusual 1.0125 from CMOV_FR32(impl(Reg<EFLAGS>) -> 0(Class<FR32>))  and UCOMISSrr(1(Class<FR32>) -> impl(Reg<EFLAGS>)) lower than 2, discarding this result
	Unusual 1.00875 from CMOV_FR32(impl(Reg<EFLAGS>) -> 0(Class<FR32>))  and VCOMISSrr(0(Class<FR32>) -> impl(Reg<EFLAGS>)) lower than 2, discarding this result
	Unusual 1.0125 from CMOV_FR32(impl(Reg<EFLAGS>) -> 0(Class<FR32>))  and VUCOMISSrr(0(Class<FR32>) -> impl(Reg<EFLAGS>)) lower than 2, discarding this result
	Unusual 1.01375 from CMOV_FR32(impl(Reg<EFLAGS>) -> 0(Class<FR32>))  and VUCOMISSrr(1(Class<FR32>) -> impl(Reg<EFLAGS>)) lower than 2, discarding this result
	Found helper instructions CMOV_FR32(impl(Reg<EFLAGS>) -> 0(Class<FR32>))  and COMISSrr(0(Class<FR32>) -> impl(Reg<EFLAGS>))  with combined latency 1.015
-----Reg<MXCSR> -> Class<FR32> and Class<FR32> -> Reg<MXCSR>-----
	48 measurements of first Type
	no measurements of type Class<FR32> -> Reg<MXCSR> so Reg<MXCSR> -> Class<FR32> can also not be measured
-----Class<GR8_NOREX> -> Class<GR32_NOREX> and Class<GR32_NOREX> -> Class<GR8_NOREX>-----
	2 measurements of first Type
	no measurements of type Class<GR32_NOREX> -> Class<GR8_NOREX> so Class<GR8_NOREX> -> Class<GR32_NOREX> can also not be measured
-----Class<VK16> -> Class<VK32> and Class<VK32> -> Class<VK16>-----
	2 measurements of first Type
	no measurements of type Class<VK32> -> Class<VK16> so Class<VK16> -> Class<VK32> can also not be measured
-----Class<VK32WM> -> Class<VK32> and Class<VK32> -> Class<VK32WM>-----
	18 measurements of first Type
	no measurements of type Class<VK32> -> Class<VK32WM> so Class<VK32WM> -> Class<VK32> can also not be measured
-----Class<VR256X> -> Class<VK32> and Class<VK32> -> Class<VR256X>-----
	29 measurements of first Type
	1 measurements of reversed Type
	New pair: VPCMPBZ256rri(2(Class<VR256X>) -> 0(Class<VK32>))  VPMOVM2BZ256rk(1(Class<VK32>) -> 0(Class<VR256X>)) with latency 5.035
	New pair: VPCMPUBZ256rri(1(Class<VR256X>) -> 0(Class<VK32>))  VPMOVM2BZ256rk(1(Class<VK32>) -> 0(Class<VR256X>)) with latency 5.03375
	New pair: VPSHUFBITQMBZ256rr(1(Class<VR256X>) -> 0(Class<VK32>))  VPMOVM2BZ256rk(1(Class<VK32>) -> 0(Class<VR256X>)) with latency 5.02125
	Found helper instructions VPSHUFBITQMBZ256rr(1(Class<VR256X>) -> 0(Class<VK32>))  and VPMOVM2BZ256rk(1(Class<VK32>) -> 0(Class<VR256X>))  with combined latency 5.02125
-----Class<VR512> -> Class<VK32> and Class<VK32> -> Class<VR512>-----
	41 measurements of first Type
	1 measurements of reversed Type
	New pair: VPCMPUWZrrik(3(Class<VR512>) -> 0(Class<VK32>))  VPMOVM2WZrk(1(Class<VK32>) -> 0(Class<VR512>)) with latency 6.14125
	Found helper instructions VPCMPUWZrrik(3(Class<VR512>) -> 0(Class<VK32>))  and VPMOVM2WZrk(1(Class<VK32>) -> 0(Class<VR512>))  with combined latency 6.14125
-----Reg<EFLAGS> -> Class<VK32> and Class<VK32> -> Reg<EFLAGS>-----
	1 measurements of first Type
	4 measurements of reversed Type
	Unusual 1.255 from CMOV_VK32(impl(Reg<EFLAGS>) -> 0(Class<VK32>))  and KTESTDkk(1(Class<VK32>) -> impl(Reg<EFLAGS>)) lower than 2, discarding this result
	Found helper instructions CMOV_VK32(impl(Reg<EFLAGS>) -> 0(Class<VK32>))  and KORTESTDkk(0(Class<VK32>) -> impl(Reg<EFLAGS>))  with combined latency 1.25625
-----Reg<MXCSR> -> Class<VK32> and Class<VK32> -> Reg<MXCSR>-----
	6 measurements of first Type
	no measurements of type Class<VK32> -> Reg<MXCSR> so Reg<MXCSR> -> Class<VK32> can also not be measured
-----Reg<EFLAGS> -> Class<RFP32> and Class<RFP32> -> Reg<EFLAGS>-----
	1 measurements of first Type
	no measurements of type Class<RFP32> -> Reg<EFLAGS> so Reg<EFLAGS> -> Class<RFP32> can also not be measured
-----Reg<EFLAGS> -> Class<RFP64> and Class<RFP64> -> Reg<EFLAGS>-----
	1 measurements of first Type
	no measurements of type Class<RFP64> -> Reg<EFLAGS> so Reg<EFLAGS> -> Class<RFP64> can also not be measured
-----Class<GR8> -> Class<GR64> and Class<GR64> -> Class<GR8>-----
	4 measurements of first Type
	no measurements of type Class<GR64> -> Class<GR8> so Class<GR8> -> Class<GR64> can also not be measured
-----Class<GR16> -> Class<GR64> and Class<GR64> -> Class<GR16>-----
	4 measurements of first Type
	no measurements of type Class<GR64> -> Class<GR16> so Class<GR16> -> Class<GR64> can also not be measured
-----Class<GR32> -> Class<GR64> and Class<GR64> -> Class<GR32>-----
	1 measurements of first Type
	no measurements of type Class<GR64> -> Class<GR32> so Class<GR32> -> Class<GR64> can also not be measured
-----Class<FR64X> -> Class<GR64> and Class<GR64> -> Class<FR64X>-----
	6 measurements of first Type
	3 measurements of reversed Type
	Measuring VCVTTSD2SI64Srr(1(Class<FR64X>) -> 0(Class<GR64>))  and VCVTSI642SDZrr(2(Class<GR64>) -> 0(Class<FR64X>))  was unsuccessful, EC: ERROR_ILLEGAL_INSTRUCTION
	 assuming VCVTTSD2SI64Srr(1(Class<FR64X>) -> 0(Class<GR64>))  was the problem and blacklisting it
	Measuring VCVTTSD2USI64Srr(1(Class<FR64X>) -> 0(Class<GR64>))  and VCVTSI642SDZrr(2(Class<GR64>) -> 0(Class<FR64X>))  was unsuccessful, EC: ERROR_ILLEGAL_INSTRUCTION
	 assuming VCVTTSD2USI64Srr(1(Class<FR64X>) -> 0(Class<GR64>))  was the problem and blacklisting it
	New pair: VMOVSDto64Zrr(1(Class<FR64X>) -> 0(Class<GR64>))  VCVTSI642SDZrr(2(Class<GR64>) -> 0(Class<FR64X>)) with latency 9.055
	New pair: VMOVSDto64Zrr(1(Class<FR64X>) -> 0(Class<GR64>))  VCVTUSI642SDZrr(2(Class<GR64>) -> 0(Class<FR64X>)) with latency 9.0525
	New pair: VMOVSDto64Zrr(1(Class<FR64X>) -> 0(Class<GR64>))  VMOV64toSDZrr(1(Class<GR64>) -> 0(Class<FR64X>)) with latency 6.0575
	Found helper instructions VMOVSDto64Zrr(1(Class<FR64X>) -> 0(Class<GR64>))  and VMOV64toSDZrr(1(Class<GR64>) -> 0(Class<FR64X>))  with combined latency 6.0575
-----Class<CONTROL_REG> -> Class<GR64> and Class<GR64> -> Class<CONTROL_REG>-----
	1 measurements of first Type
	1 measurements of reversed Type
	no measurement of type Class<CONTROL_REG> -> Class<GR64> can be executed successfully
-----Class<FR64> -> Class<GR64> and Class<GR64> -> Class<FR64>-----
	6 measurements of first Type
	4 measurements of reversed Type
	New pair: CVTTSD2SI64rr(1(Class<FR64>) -> 0(Class<GR64>))  CVTSI642SDrr(1(Class<GR64>) -> 0(Class<FR64>)) with latency 12.0675
	New pair: CVTTSD2SI64rr(1(Class<FR64>) -> 0(Class<GR64>))  MOV64toSDrr(1(Class<GR64>) -> 0(Class<FR64>)) with latency 10.0987
	New pair: MOVSDto64rr(1(Class<FR64>) -> 0(Class<GR64>))  MOV64toSDrr(1(Class<GR64>) -> 0(Class<FR64>)) with latency 7.04625
	New pair: MOVSDto64rr(1(Class<FR64>) -> 0(Class<GR64>))  VMOV64toSDrr(1(Class<GR64>) -> 0(Class<FR64>)) with latency 6.05375
	New pair: VMOVSDto64rr(1(Class<FR64>) -> 0(Class<GR64>))  VMOV64toSDrr(1(Class<GR64>) -> 0(Class<FR64>)) with latency 6.04
	Found helper instructions VMOVSDto64rr(1(Class<FR64>) -> 0(Class<GR64>))  and VMOV64toSDrr(1(Class<GR64>) -> 0(Class<FR64>))  with combined latency 6.04
-----Class<VK64> -> Class<GR64> and Class<GR64> -> Class<VK64>-----
	2 measurements of first Type
	2 measurements of reversed Type
	New pair: KMOVQrk_EVEX(1(Class<VK64>) -> 0(Class<GR64>))  KMOVQkr(1(Class<GR64>) -> 0(Class<VK64>)) with latency 10.0475
	Found helper instructions KMOVQrk_EVEX(1(Class<VK64>) -> 0(Class<GR64>))  and KMOVQkr(1(Class<GR64>) -> 0(Class<VK64>))  with combined latency 10.0475
-----Class<VR64> -> Class<GR64> and Class<GR64> -> Class<VR64>-----
	1 measurements of first Type
	1 measurements of reversed Type
	Found helper instructions MMX_MOVD64from64rr(1(Class<VR64>) -> 0(Class<GR64>))  and MMX_MOVD64to64rr(1(Class<GR64>) -> 0(Class<VR64>))  with combined latency 7.04875
-----Class<VR128X> -> Class<GR64> and Class<GR64> -> Class<VR128X>-----
	35 measurements of first Type
	18 measurements of reversed Type
	New pair: VCVTSD2SI64Zrrb_Int(1(Class<VR128X>) -> 0(Class<GR64>))  VCVTSI642SDZrr_Int(2(Class<GR64>) -> 0(Class<VR128X>)) with latency 12.075
	New pair: VCVTSD2SI64Zrrb_Int(1(Class<VR128X>) -> 0(Class<GR64>))  VMOV64toPQIZrr(1(Class<GR64>) -> 0(Class<VR128X>)) with latency 9.08
	New pair: VCVTSD2USI64Zrr_Int(1(Class<VR128X>) -> 0(Class<GR64>))  VMOV64toPQIZrr(1(Class<GR64>) -> 0(Class<VR128X>)) with latency 9.04125
	Measuring VCVTSD2USI64Zrr_Int(1(Class<VR128X>) -> 0(Class<GR64>))  and VMOVW64toSHrr(1(Class<GR64>) -> 0(Class<VR128X>))  was unsuccessful, EC: ERROR_ILLEGAL_INSTRUCTION
	 assuming VMOVW64toSHrr(1(Class<GR64>) -> 0(Class<VR128X>))  was the problem and blacklisting it
	Measuring VCVTSH2SI64Zrr_Int(1(Class<VR128X>) -> 0(Class<GR64>))  and VMOV64toPQIZrr(1(Class<GR64>) -> 0(Class<VR128X>))  was unsuccessful, EC: ERROR_ILLEGAL_INSTRUCTION
	 assuming VCVTSH2SI64Zrr_Int(1(Class<VR128X>) -> 0(Class<GR64>))  was the problem and blacklisting it
	Measuring VCVTSH2SI64Zrrb_Int(1(Class<VR128X>) -> 0(Class<GR64>))  and VMOV64toPQIZrr(1(Class<GR64>) -> 0(Class<VR128X>))  was unsuccessful, EC: ERROR_ILLEGAL_INSTRUCTION
	 assuming VCVTSH2SI64Zrrb_Int(1(Class<VR128X>) -> 0(Class<GR64>))  was the problem and blacklisting it
	Measuring VCVTSH2USI64Zrr_Int(1(Class<VR128X>) -> 0(Class<GR64>))  and VMOV64toPQIZrr(1(Class<GR64>) -> 0(Class<VR128X>))  was unsuccessful, EC: ERROR_ILLEGAL_INSTRUCTION
	 assuming VCVTSH2USI64Zrr_Int(1(Class<VR128X>) -> 0(Class<GR64>))  was the problem and blacklisting it
	Measuring VCVTSH2USI64Zrrb_Int(1(Class<VR128X>) -> 0(Class<GR64>))  and VMOV64toPQIZrr(1(Class<GR64>) -> 0(Class<VR128X>))  was unsuccessful, EC: ERROR_ILLEGAL_INSTRUCTION
	 assuming VCVTSH2USI64Zrrb_Int(1(Class<VR128X>) -> 0(Class<GR64>))  was the problem and blacklisting it
	Measuring VCVTTSD2SI64Srr_Int(1(Class<VR128X>) -> 0(Class<GR64>))  and VMOV64toPQIZrr(1(Class<GR64>) -> 0(Class<VR128X>))  was unsuccessful, EC: ERROR_ILLEGAL_INSTRUCTION
	 assuming VCVTTSD2SI64Srr_Int(1(Class<VR128X>) -> 0(Class<GR64>))  was the problem and blacklisting it
	Measuring VCVTTSD2SI64Srrb_Int(1(Class<VR128X>) -> 0(Class<GR64>))  and VMOV64toPQIZrr(1(Class<GR64>) -> 0(Class<VR128X>))  was unsuccessful, EC: ERROR_ILLEGAL_INSTRUCTION
	 assuming VCVTTSD2SI64Srrb_Int(1(Class<VR128X>) -> 0(Class<GR64>))  was the problem and blacklisting it
	Measuring VCVTTSD2USI64Srr_Int(1(Class<VR128X>) -> 0(Class<GR64>))  and VMOV64toPQIZrr(1(Class<GR64>) -> 0(Class<VR128X>))  was unsuccessful, EC: ERROR_ILLEGAL_INSTRUCTION
	 assuming VCVTTSD2USI64Srr_Int(1(Class<VR128X>) -> 0(Class<GR64>))  was the problem and blacklisting it
	Measuring VCVTTSD2USI64Srrb_Int(1(Class<VR128X>) -> 0(Class<GR64>))  and VMOV64toPQIZrr(1(Class<GR64>) -> 0(Class<VR128X>))  was unsuccessful, EC: ERROR_ILLEGAL_INSTRUCTION
	 assuming VCVTTSD2USI64Srrb_Int(1(Class<VR128X>) -> 0(Class<GR64>))  was the problem and blacklisting it
	Measuring VCVTTSH2SI64Zrr_Int(1(Class<VR128X>) -> 0(Class<GR64>))  and VMOV64toPQIZrr(1(Class<GR64>) -> 0(Class<VR128X>))  was unsuccessful, EC: ERROR_ILLEGAL_INSTRUCTION
	 assuming VCVTTSH2SI64Zrr_Int(1(Class<VR128X>) -> 0(Class<GR64>))  was the problem and blacklisting it
	Measuring VCVTTSH2SI64Zrrb_Int(1(Class<VR128X>) -> 0(Class<GR64>))  and VMOV64toPQIZrr(1(Class<GR64>) -> 0(Class<VR128X>))  was unsuccessful, EC: ERROR_ILLEGAL_INSTRUCTION
	 assuming VCVTTSH2SI64Zrrb_Int(1(Class<VR128X>) -> 0(Class<GR64>))  was the problem and blacklisting it
	Measuring VCVTTSH2USI64Zrr_Int(1(Class<VR128X>) -> 0(Class<GR64>))  and VMOV64toPQIZrr(1(Class<GR64>) -> 0(Class<VR128X>))  was unsuccessful, EC: ERROR_ILLEGAL_INSTRUCTION
	 assuming VCVTTSH2USI64Zrr_Int(1(Class<VR128X>) -> 0(Class<GR64>))  was the problem and blacklisting it
	Measuring VCVTTSH2USI64Zrrb_Int(1(Class<VR128X>) -> 0(Class<GR64>))  and VMOV64toPQIZrr(1(Class<GR64>) -> 0(Class<VR128X>))  was unsuccessful, EC: ERROR_ILLEGAL_INSTRUCTION
	 assuming VCVTTSH2USI64Zrrb_Int(1(Class<VR128X>) -> 0(Class<GR64>))  was the problem and blacklisting it
	Measuring VCVTTSS2SI64Srr_Int(1(Class<VR128X>) -> 0(Class<GR64>))  and VMOV64toPQIZrr(1(Class<GR64>) -> 0(Class<VR128X>))  was unsuccessful, EC: ERROR_ILLEGAL_INSTRUCTION
	 assuming VCVTTSS2SI64Srr_Int(1(Class<VR128X>) -> 0(Class<GR64>))  was the problem and blacklisting it
	Measuring VCVTTSS2SI64Srrb_Int(1(Class<VR128X>) -> 0(Class<GR64>))  and VMOV64toPQIZrr(1(Class<GR64>) -> 0(Class<VR128X>))  was unsuccessful, EC: ERROR_ILLEGAL_INSTRUCTION
	 assuming VCVTTSS2SI64Srrb_Int(1(Class<VR128X>) -> 0(Class<GR64>))  was the problem and blacklisting it
	Measuring VCVTTSS2USI64Srr_Int(1(Class<VR128X>) -> 0(Class<GR64>))  and VMOV64toPQIZrr(1(Class<GR64>) -> 0(Class<VR128X>))  was unsuccessful, EC: ERROR_ILLEGAL_INSTRUCTION
	 assuming VCVTTSS2USI64Srr_Int(1(Class<VR128X>) -> 0(Class<GR64>))  was the problem and blacklisting it
	Measuring VCVTTSS2USI64Srrb_Int(1(Class<VR128X>) -> 0(Class<GR64>))  and VMOV64toPQIZrr(1(Class<GR64>) -> 0(Class<VR128X>))  was unsuccessful, EC: ERROR_ILLEGAL_INSTRUCTION
	 assuming VCVTTSS2USI64Srrb_Int(1(Class<VR128X>) -> 0(Class<GR64>))  was the problem and blacklisting it
	New pair: VMOVPQIto64Zrr(1(Class<VR128X>) -> 0(Class<GR64>))  VMOV64toPQIZrr(1(Class<GR64>) -> 0(Class<VR128X>)) with latency 6.035
	Measuring VMOVSHtoW64rr(1(Class<VR128X>) -> 0(Class<GR64>))  and VMOV64toPQIZrr(1(Class<GR64>) -> 0(Class<VR128X>))  was unsuccessful, EC: ERROR_ILLEGAL_INSTRUCTION
	 assuming VMOVSHtoW64rr(1(Class<VR128X>) -> 0(Class<GR64>))  was the problem and blacklisting it
	Found helper instructions VMOVPQIto64Zrr(1(Class<VR128X>) -> 0(Class<GR64>))  and VMOV64toPQIZrr(1(Class<GR64>) -> 0(Class<VR128X>))  with combined latency 6.035
-----Class<VR128> -> Class<GR64> and Class<GR64> -> Class<VR128>-----
	12 measurements of first Type
	8 measurements of reversed Type
	New pair: CVTSS2SI64rr_Int(1(Class<VR128>) -> 0(Class<GR64>))  CVTSI642SDrr_Int(2(Class<GR64>) -> 0(Class<VR128>)) with latency 12.0875
	New pair: CVTSS2SI64rr_Int(1(Class<VR128>) -> 0(Class<GR64>))  CVTSI642SSrr_Int(2(Class<GR64>) -> 0(Class<VR128>)) with latency 12.075
	New pair: MOVPQIto64rr(1(Class<VR128>) -> 0(Class<GR64>))  CVTSI642SSrr_Int(2(Class<GR64>) -> 0(Class<VR128>)) with latency 9.085
	New pair: MOVPQIto64rr(1(Class<VR128>) -> 0(Class<GR64>))  MOV64toPQIrr(1(Class<GR64>) -> 0(Class<VR128>)) with latency 7.04375
	New pair: MOVPQIto64rr(1(Class<VR128>) -> 0(Class<GR64>))  VMOV64toPQIrr(1(Class<GR64>) -> 0(Class<VR128>)) with latency 6.03875
	Found helper instructions MOVPQIto64rr(1(Class<VR128>) -> 0(Class<GR64>))  and VMOV64toPQIrr(1(Class<GR64>) -> 0(Class<VR128>))  with combined latency 6.03875
-----Reg<CL> -> Class<GR64> and Class<GR64> -> Reg<CL>-----
	41 measurements of first Type
	no measurements of type Class<GR64> -> Reg<CL> so Reg<CL> -> Class<GR64> can also not be measured
-----Reg<EFLAGS> -> Class<GR64> and Class<GR64> -> Reg<EFLAGS>-----
	53 measurements of first Type
	332 measurements of reversed Type
	New pair: ADC64rr(impl(Reg<EFLAGS>) -> 0(Class<GR64>))  ADC64ri32(1(Class<GR64>) -> impl(Reg<EFLAGS>)) with latency 2.01625
	Found helper instructions ADC64rr(impl(Reg<EFLAGS>) -> 0(Class<GR64>))  and ADC64ri32(1(Class<GR64>) -> impl(Reg<EFLAGS>))  with combined latency 2.01625
-----Reg<MXCSR> -> Class<GR64> and Class<GR64> -> Reg<MXCSR>-----
	60 measurements of first Type
	no measurements of type Class<GR64> -> Reg<MXCSR> so Reg<MXCSR> -> Class<GR64> can also not be measured
-----Reg<RAX> -> Class<GR64> and Class<GR64> -> Reg<RAX>-----
	2 measurements of first Type
	17 measurements of reversed Type
	New pair: XCHG64ar(impl(Reg<RAX>) -> 0(Class<GR64>))  CMPXCHG64rr(1(Class<GR64>) -> impl(Reg<RAX>)) with latency 3.03
	Unusual 0.0825 from XCHG64ar(impl(Reg<RAX>) -> 0(Class<GR64>))  and DYN_ALLOCA_64(0(Class<GR64>) -> impl(Reg<RAX>)) latency would be lower but current candidate pair has clean latency, discarding this result
	Unusual 0.0825 from XCHG64ar(impl(Reg<RAX>) -> 0(Class<GR64>))  and PROBED_ALLOCA_64(1(Class<GR64>) -> impl(Reg<RAX>)) latency would be lower but current candidate pair has clean latency, discarding this result
	Unusual 0.0825 from XCHG64ar(impl(Reg<RAX>) -> 0(Class<GR64>))  and SEG_ALLOCA_64(1(Class<GR64>) -> impl(Reg<RAX>)) latency would be lower but current candidate pair has clean latency, discarding this result
	Found helper instructions XCHG64ar(impl(Reg<RAX>) -> 0(Class<GR64>))  and CMPXCHG64rr(1(Class<GR64>) -> impl(Reg<RAX>))  with combined latency 3.03
-----Reg<RDX> -> Class<GR64> and Class<GR64> -> Reg<RDX>-----
	4 measurements of first Type
	12 measurements of reversed Type
	New pair: MULX64rr(impl(Reg<RDX>) -> 1(Class<GR64>))  IMUL64r(0(Class<GR64>) -> impl(Reg<RDX>)) with latency 7.04625
	New pair: MULX64rr(impl(Reg<RDX>) -> 1(Class<GR64>))  MUL64r(0(Class<GR64>) -> impl(Reg<RDX>)) with latency 7.0425
	Found helper instructions MULX64rr(impl(Reg<RDX>) -> 1(Class<GR64>))  and MUL64r(0(Class<GR64>) -> impl(Reg<RDX>))  with combined latency 7.0425
-----Reg<RSP> -> Class<GR64> and Class<GR64> -> Reg<RSP>-----
	2 measurements of first Type
	3 measurements of reversed Type
	Detected multiple dependencys between SEG_ALLOCA_64(impl(Reg<RSP>) -> 0(Class<GR64>))  and DYN_ALLOCA_64(0(Class<GR64>) -> impl(Reg<RSP>)) so result of their combination will not be considered for finding helpers
	Detected multiple dependencys between PROBED_ALLOCA_64(impl(Reg<RSP>) -> 0(Class<GR64>))  and SEG_ALLOCA_64(1(Class<GR64>) -> impl(Reg<RSP>)) so result of their combination will not be considered for finding helpers
	Found helper instructions PROBED_ALLOCA_64(impl(Reg<RSP>) -> 0(Class<GR64>))  and DYN_ALLOCA_64(0(Class<GR64>) -> impl(Reg<RSP>))  with combined latency -0.00125
-----Reg<EFLAGS> -> Class<FR64X> and Class<FR64X> -> Reg<EFLAGS>-----
	1 measurements of first Type
	6 measurements of reversed Type
	Unusual 1.0025 from CMOV_FR64X(impl(Reg<EFLAGS>) -> 0(Class<FR64X>))  and VUCOMISDZrr(0(Class<FR64X>) -> impl(Reg<EFLAGS>)) lower than 2, discarding this result
	Unusual 1.01125 from CMOV_FR64X(impl(Reg<EFLAGS>) -> 0(Class<FR64X>))  and VUCOMISDZrr(1(Class<FR64X>) -> impl(Reg<EFLAGS>)) lower than 2, discarding this result
	Measuring CMOV_FR64X(impl(Reg<EFLAGS>) -> 0(Class<FR64X>))  and VUCOMXSDZrr(0(Class<FR64X>) -> impl(Reg<EFLAGS>))  was unsuccessful, EC: ERROR_ILLEGAL_INSTRUCTION
	 assuming VUCOMXSDZrr(0(Class<FR64X>) -> impl(Reg<EFLAGS>))  was the problem and blacklisting it
	Found helper instructions CMOV_FR64X(impl(Reg<EFLAGS>) -> 0(Class<FR64X>))  and VCOMISDZrr(0(Class<FR64X>) -> impl(Reg<EFLAGS>))  with combined latency 1.015
-----Reg<MXCSR> -> Class<FR64X> and Class<FR64X> -> Reg<MXCSR>-----
	38 measurements of first Type
	no measurements of type Class<FR64X> -> Reg<MXCSR> so Reg<MXCSR> -> Class<FR64X> can also not be measured
-----Class<VR64> -> Class<FR64> and Class<FR64> -> Class<VR64>-----
	1 measurements of first Type
	1 measurements of reversed Type
	Found helper instructions MMX_MOVQ2FR64rr(1(Class<VR64>) -> 0(Class<FR64>))  and MMX_MOVFR642Qrr(1(Class<FR64>) -> 0(Class<VR64>))  with combined latency 3.03125
-----Reg<EFLAGS> -> Class<FR64> and Class<FR64> -> Reg<EFLAGS>-----
	1 measurements of first Type
	8 measurements of reversed Type
	Unusual 1.00625 from CMOV_FR64(impl(Reg<EFLAGS>) -> 0(Class<FR64>))  and VCOMISDrr(0(Class<FR64>) -> impl(Reg<EFLAGS>)) lower than 2, discarding this result
	Unusual 1.0075 from CMOV_FR64(impl(Reg<EFLAGS>) -> 0(Class<FR64>))  and VCOMISDrr(1(Class<FR64>) -> impl(Reg<EFLAGS>)) lower than 2, discarding this result
	Unusual 1.00125 from CMOV_FR64(impl(Reg<EFLAGS>) -> 0(Class<FR64>))  and VUCOMISDrr(0(Class<FR64>) -> impl(Reg<EFLAGS>)) lower than 2, discarding this result
	Unusual 0.9975 from CMOV_FR64(impl(Reg<EFLAGS>) -> 0(Class<FR64>))  and VUCOMISDrr(1(Class<FR64>) -> impl(Reg<EFLAGS>)) lower than 2, discarding this result
	Found helper instructions CMOV_FR64(impl(Reg<EFLAGS>) -> 0(Class<FR64>))  and COMISDrr(0(Class<FR64>) -> impl(Reg<EFLAGS>))  with combined latency 1.00875
-----Reg<MXCSR> -> Class<FR64> and Class<FR64> -> Reg<MXCSR>-----
	46 measurements of first Type
	no measurements of type Class<FR64> -> Reg<MXCSR> so Reg<MXCSR> -> Class<FR64> can also not be measured
-----Class<VK32> -> Class<VK64> and Class<VK64> -> Class<VK32>-----
	2 measurements of first Type
	no measurements of type Class<VK64> -> Class<VK32> so Class<VK32> -> Class<VK64> can also not be measured
-----Class<VK64WM> -> Class<VK64> and Class<VK64> -> Class<VK64WM>-----
	7 measurements of first Type
	no measurements of type Class<VK64> -> Class<VK64WM> so Class<VK64WM> -> Class<VK64> can also not be measured
-----Class<VR512> -> Class<VK64> and Class<VK64> -> Class<VR512>-----
	29 measurements of first Type
	1 measurements of reversed Type
	New pair: VPCMPBZrri(2(Class<VR512>) -> 0(Class<VK64>))  VPMOVM2BZrk(1(Class<VK64>) -> 0(Class<VR512>)) with latency 6.135
	New pair: VPMOVB2MZkr(1(Class<VR512>) -> 0(Class<VK64>))  VPMOVM2BZrk(1(Class<VK64>) -> 0(Class<VR512>)) with latency 5.17
	New pair: VPSHUFBITQMBZrr(2(Class<VR512>) -> 0(Class<VK64>))  VPMOVM2BZrk(1(Class<VK64>) -> 0(Class<VR512>)) with latency 5.16
	New pair: VPTESTNMBZrr(1(Class<VR512>) -> 0(Class<VK64>))  VPMOVM2BZrk(1(Class<VK64>) -> 0(Class<VR512>)) with latency 5.155
	Found helper instructions VPTESTNMBZrr(1(Class<VR512>) -> 0(Class<VK64>))  and VPMOVM2BZrk(1(Class<VK64>) -> 0(Class<VR512>))  with combined latency 5.155
-----Reg<EFLAGS> -> Class<VK64> and Class<VK64> -> Reg<EFLAGS>-----
	1 measurements of first Type
	4 measurements of reversed Type
	Unusual 1.01125 from CMOV_VK64(impl(Reg<EFLAGS>) -> 0(Class<VK64>))  and KTESTQkk(0(Class<VK64>) -> impl(Reg<EFLAGS>)) lower than 2, discarding this result
	Unusual 1.03125 from CMOV_VK64(impl(Reg<EFLAGS>) -> 0(Class<VK64>))  and KTESTQkk(1(Class<VK64>) -> impl(Reg<EFLAGS>)) lower than 2, discarding this result
	Found helper instructions CMOV_VK64(impl(Reg<EFLAGS>) -> 0(Class<VK64>))  and KORTESTQkk(0(Class<VK64>) -> impl(Reg<EFLAGS>))  with combined latency 1.0525
-----Class<VR128> -> Class<VR64> and Class<VR64> -> Class<VR128>-----
	5 measurements of first Type
	3 measurements of reversed Type
	New pair: MMX_CVTTPS2PIrr(1(Class<VR128>) -> 0(Class<VR64>))  MMX_CVTPI2PDrr(1(Class<VR64>) -> 0(Class<VR128>)) with latency 7.04375
	New pair: MMX_CVTTPS2PIrr(1(Class<VR128>) -> 0(Class<VR64>))  MMX_MOVQ2DQrr(1(Class<VR64>) -> 0(Class<VR128>)) with latency 5.04125
	New pair: MMX_MOVDQ2Qrr(1(Class<VR128>) -> 0(Class<VR64>))  MMX_MOVQ2DQrr(1(Class<VR64>) -> 0(Class<VR128>)) with latency 3.025
	Found helper instructions MMX_MOVDQ2Qrr(1(Class<VR128>) -> 0(Class<VR64>))  and MMX_MOVQ2DQrr(1(Class<VR64>) -> 0(Class<VR128>))  with combined latency 3.025
-----Reg<EFLAGS> -> Class<VR64> and Class<VR64> -> Reg<EFLAGS>-----
	1 measurements of first Type
	no measurements of type Class<VR64> -> Reg<EFLAGS> so Reg<EFLAGS> -> Class<VR64> can also not be measured
-----Reg<MXCSR> -> Class<VR64> and Class<VR64> -> Reg<MXCSR>-----
	4 measurements of first Type
	no measurements of type Class<VR64> -> Reg<MXCSR> so Reg<MXCSR> -> Class<VR64> can also not be measured
-----Reg<EFLAGS> -> Class<RFP80> and Class<RFP80> -> Reg<EFLAGS>-----
	1 measurements of first Type
	no measurements of type Class<RFP80> -> Reg<EFLAGS> so Reg<EFLAGS> -> Class<RFP80> can also not be measured
-----Class<VK16WM> -> Class<VR128X> and Class<VR128X> -> Class<VK16WM>-----
	102 measurements of first Type
	no measurements of type Class<VR128X> -> Class<VK16WM> so Class<VK16WM> -> Class<VR128X> can also not be measured
-----Class<VK1WM> -> Class<VR128X> and Class<VR128X> -> Class<VK1WM>-----
	384 measurements of first Type
	no measurements of type Class<VR128X> -> Class<VK1WM> so Class<VK1WM> -> Class<VR128X> can also not be measured
-----Class<VK2WM> -> Class<VR128X> and Class<VR128X> -> Class<VK2WM>-----
	324 measurements of first Type
	no measurements of type Class<VR128X> -> Class<VK2WM> so Class<VK2WM> -> Class<VR128X> can also not be measured
-----Class<VK4WM> -> Class<VR128X> and Class<VR128X> -> Class<VK4WM>-----
	398 measurements of first Type
	no measurements of type Class<VR128X> -> Class<VK4WM> so Class<VK4WM> -> Class<VR128X> can also not be measured
-----Class<VK8WM> -> Class<VR128X> and Class<VR128X> -> Class<VK8WM>-----
	346 measurements of first Type
	no measurements of type Class<VR128X> -> Class<VK8WM> so Class<VK8WM> -> Class<VR128X> can also not be measured
-----Class<VR256X> -> Class<VR128X> and Class<VR128X> -> Class<VR256X>-----
	201 measurements of first Type
	216 measurements of reversed Type
	New pair: VCVTNEPS2BF16Z256rrk(3(Class<VR256X>) -> 0(Class<VR128X>))  VBROADCASTF32X2Z256rr(1(Class<VR128X>) -> 0(Class<VR256X>)) with latency 7.03375
	Measuring VCVTNEPS2BF16Z256rrk(3(Class<VR256X>) -> 0(Class<VR128X>))  and VCVTHF82PHZ256rr(1(Class<VR128X>) -> 0(Class<VR256X>))  was unsuccessful, EC: ERROR_ILLEGAL_INSTRUCTION
	 assuming VCVTHF82PHZ256rr(1(Class<VR128X>) -> 0(Class<VR256X>))  was the problem and blacklisting it
	Measuring VCVTNEPS2BF16Z256rrk(3(Class<VR256X>) -> 0(Class<VR128X>))  and VCVTHF82PHZ256rrkz(2(Class<VR128X>) -> 0(Class<VR256X>))  was unsuccessful, EC: ERROR_ILLEGAL_INSTRUCTION
	 assuming VCVTHF82PHZ256rrkz(2(Class<VR128X>) -> 0(Class<VR256X>))  was the problem and blacklisting it
	Measuring VCVTNEPS2BF16Z256rrk(3(Class<VR256X>) -> 0(Class<VR128X>))  and VCVTPH2DQZ256rr(1(Class<VR128X>) -> 0(Class<VR256X>))  was unsuccessful, EC: ERROR_ILLEGAL_INSTRUCTION
	 assuming VCVTPH2DQZ256rr(1(Class<VR128X>) -> 0(Class<VR256X>))  was the problem and blacklisting it
	Measuring VCVTNEPS2BF16Z256rrk(3(Class<VR256X>) -> 0(Class<VR128X>))  and VCVTPH2DQZ256rrb(1(Class<VR128X>) -> 0(Class<VR256X>))  was unsuccessful, EC: ERROR_ILLEGAL_INSTRUCTION
	 assuming VCVTPH2DQZ256rrb(1(Class<VR128X>) -> 0(Class<VR256X>))  was the problem and blacklisting it
	Measuring VCVTNEPS2BF16Z256rrk(3(Class<VR256X>) -> 0(Class<VR128X>))  and VCVTPH2DQZ256rrbkz(2(Class<VR128X>) -> 0(Class<VR256X>))  was unsuccessful, EC: ERROR_ILLEGAL_INSTRUCTION
	 assuming VCVTPH2DQZ256rrbkz(2(Class<VR128X>) -> 0(Class<VR256X>))  was the problem and blacklisting it
	Measuring VCVTNEPS2BF16Z256rrk(3(Class<VR256X>) -> 0(Class<VR128X>))  and VCVTPH2DQZ256rrkz(2(Class<VR128X>) -> 0(Class<VR256X>))  was unsuccessful, EC: ERROR_ILLEGAL_INSTRUCTION
	 assuming VCVTPH2DQZ256rrkz(2(Class<VR128X>) -> 0(Class<VR256X>))  was the problem and blacklisting it
	Measuring VCVTNEPS2BF16Z256rrk(3(Class<VR256X>) -> 0(Class<VR128X>))  and VCVTPH2PDZ256rr(1(Class<VR128X>) -> 0(Class<VR256X>))  was unsuccessful, EC: ERROR_ILLEGAL_INSTRUCTION
	 assuming VCVTPH2PDZ256rr(1(Class<VR128X>) -> 0(Class<VR256X>))  was the problem and blacklisting it
	Measuring VCVTNEPS2BF16Z256rrk(3(Class<VR256X>) -> 0(Class<VR128X>))  and VCVTPH2PDZ256rrb(1(Class<VR128X>) -> 0(Class<VR256X>))  was unsuccessful, EC: ERROR_ILLEGAL_INSTRUCTION
	 assuming VCVTPH2PDZ256rrb(1(Class<VR128X>) -> 0(Class<VR256X>))  was the problem and blacklisting it
	Measuring VCVTNEPS2BF16Z256rrk(3(Class<VR256X>) -> 0(Class<VR128X>))  and VCVTPH2PDZ256rrbkz(2(Class<VR128X>) -> 0(Class<VR256X>))  was unsuccessful, EC: ERROR_ILLEGAL_INSTRUCTION
	 assuming VCVTPH2PDZ256rrbkz(2(Class<VR128X>) -> 0(Class<VR256X>))  was the problem and blacklisting it
	Measuring VCVTNEPS2BF16Z256rrk(3(Class<VR256X>) -> 0(Class<VR128X>))  and VCVTPH2PDZ256rrkz(2(Class<VR128X>) -> 0(Class<VR256X>))  was unsuccessful, EC: ERROR_ILLEGAL_INSTRUCTION
	 assuming VCVTPH2PDZ256rrkz(2(Class<VR128X>) -> 0(Class<VR256X>))  was the problem and blacklisting it
	Measuring VCVTNEPS2BF16Z256rrk(3(Class<VR256X>) -> 0(Class<VR128X>))  and VCVTPH2PSXZ256rr(1(Class<VR128X>) -> 0(Class<VR256X>))  was unsuccessful, EC: ERROR_ILLEGAL_INSTRUCTION
	 assuming VCVTPH2PSXZ256rr(1(Class<VR128X>) -> 0(Class<VR256X>))  was the problem and blacklisting it
	Measuring VCVTNEPS2BF16Z256rrk(3(Class<VR256X>) -> 0(Class<VR128X>))  and VCVTPH2PSXZ256rrb(1(Class<VR128X>) -> 0(Class<VR256X>))  was unsuccessful, EC: ERROR_ILLEGAL_INSTRUCTION
	 assuming VCVTPH2PSXZ256rrb(1(Class<VR128X>) -> 0(Class<VR256X>))  was the problem and blacklisting it
	Measuring VCVTNEPS2BF16Z256rrk(3(Class<VR256X>) -> 0(Class<VR128X>))  and VCVTPH2PSXZ256rrbkz(2(Class<VR128X>) -> 0(Class<VR256X>))  was unsuccessful, EC: ERROR_ILLEGAL_INSTRUCTION
	 assuming VCVTPH2PSXZ256rrbkz(2(Class<VR128X>) -> 0(Class<VR256X>))  was the problem and blacklisting it
	Measuring VCVTNEPS2BF16Z256rrk(3(Class<VR256X>) -> 0(Class<VR128X>))  and VCVTPH2PSXZ256rrkz(2(Class<VR128X>) -> 0(Class<VR256X>))  was unsuccessful, EC: ERROR_ILLEGAL_INSTRUCTION
	 assuming VCVTPH2PSXZ256rrkz(2(Class<VR128X>) -> 0(Class<VR256X>))  was the problem and blacklisting it
	Measuring VCVTNEPS2BF16Z256rrk(3(Class<VR256X>) -> 0(Class<VR128X>))  and VCVTPH2PSZ256rrb(1(Class<VR128X>) -> 0(Class<VR256X>))  was unsuccessful, EC: ERROR_ILLEGAL_INSTRUCTION
	 assuming VCVTPH2PSZ256rrb(1(Class<VR128X>) -> 0(Class<VR256X>))  was the problem and blacklisting it
	Measuring VCVTNEPS2BF16Z256rrk(3(Class<VR256X>) -> 0(Class<VR128X>))  and VCVTPH2PSZ256rrbkz(2(Class<VR128X>) -> 0(Class<VR256X>))  was unsuccessful, EC: ERROR_ILLEGAL_INSTRUCTION
	 assuming VCVTPH2PSZ256rrbkz(2(Class<VR128X>) -> 0(Class<VR256X>))  was the problem and blacklisting it
	Measuring VCVTNEPS2BF16Z256rrk(3(Class<VR256X>) -> 0(Class<VR128X>))  and VCVTPH2QQZ256rr(1(Class<VR128X>) -> 0(Class<VR256X>))  was unsuccessful, EC: ERROR_ILLEGAL_INSTRUCTION
	 assuming VCVTPH2QQZ256rr(1(Class<VR128X>) -> 0(Class<VR256X>))  was the problem and blacklisting it
	Measuring VCVTNEPS2BF16Z256rrk(3(Class<VR256X>) -> 0(Class<VR128X>))  and VCVTPH2QQZ256rrb(1(Class<VR128X>) -> 0(Class<VR256X>))  was unsuccessful, EC: ERROR_ILLEGAL_INSTRUCTION
	 assuming VCVTPH2QQZ256rrb(1(Class<VR128X>) -> 0(Class<VR256X>))  was the problem and blacklisting it
	Measuring VCVTNEPS2BF16Z256rrk(3(Class<VR256X>) -> 0(Class<VR128X>))  and VCVTPH2QQZ256rrbkz(2(Class<VR128X>) -> 0(Class<VR256X>))  was unsuccessful, EC: ERROR_ILLEGAL_INSTRUCTION
	 assuming VCVTPH2QQZ256rrbkz(2(Class<VR128X>) -> 0(Class<VR256X>))  was the problem and blacklisting it
	Measuring VCVTNEPS2BF16Z256rrk(3(Class<VR256X>) -> 0(Class<VR128X>))  and VCVTPH2QQZ256rrkz(2(Class<VR128X>) -> 0(Class<VR256X>))  was unsuccessful, EC: ERROR_ILLEGAL_INSTRUCTION
	 assuming VCVTPH2QQZ256rrkz(2(Class<VR128X>) -> 0(Class<VR256X>))  was the problem and blacklisting it
	Measuring VCVTNEPS2BF16Z256rrk(3(Class<VR256X>) -> 0(Class<VR128X>))  and VCVTPH2UDQZ256rr(1(Class<VR128X>) -> 0(Class<VR256X>))  was unsuccessful, EC: ERROR_ILLEGAL_INSTRUCTION
	 assuming VCVTPH2UDQZ256rr(1(Class<VR128X>) -> 0(Class<VR256X>))  was the problem and blacklisting it
	Measuring VCVTNEPS2BF16Z256rrk(3(Class<VR256X>) -> 0(Class<VR128X>))  and VCVTPH2UDQZ256rrb(1(Class<VR128X>) -> 0(Class<VR256X>))  was unsuccessful, EC: ERROR_ILLEGAL_INSTRUCTION
	 assuming VCVTPH2UDQZ256rrb(1(Class<VR128X>) -> 0(Class<VR256X>))  was the problem and blacklisting it
	Measuring VCVTNEPS2BF16Z256rrk(3(Class<VR256X>) -> 0(Class<VR128X>))  and VCVTPH2UDQZ256rrbkz(2(Class<VR128X>) -> 0(Class<VR256X>))  was unsuccessful, EC: ERROR_ILLEGAL_INSTRUCTION
	 assuming VCVTPH2UDQZ256rrbkz(2(Class<VR128X>) -> 0(Class<VR256X>))  was the problem and blacklisting it
	Measuring VCVTNEPS2BF16Z256rrk(3(Class<VR256X>) -> 0(Class<VR128X>))  and VCVTPH2UDQZ256rrkz(2(Class<VR128X>) -> 0(Class<VR256X>))  was unsuccessful, EC: ERROR_ILLEGAL_INSTRUCTION
	 assuming VCVTPH2UDQZ256rrkz(2(Class<VR128X>) -> 0(Class<VR256X>))  was the problem and blacklisting it
	Measuring VCVTNEPS2BF16Z256rrk(3(Class<VR256X>) -> 0(Class<VR128X>))  and VCVTPH2UQQZ256rr(1(Class<VR128X>) -> 0(Class<VR256X>))  was unsuccessful, EC: ERROR_ILLEGAL_INSTRUCTION
	 assuming VCVTPH2UQQZ256rr(1(Class<VR128X>) -> 0(Class<VR256X>))  was the problem and blacklisting it
	Measuring VCVTNEPS2BF16Z256rrk(3(Class<VR256X>) -> 0(Class<VR128X>))  and VCVTPH2UQQZ256rrb(1(Class<VR128X>) -> 0(Class<VR256X>))  was unsuccessful, EC: ERROR_ILLEGAL_INSTRUCTION
	 assuming VCVTPH2UQQZ256rrb(1(Class<VR128X>) -> 0(Class<VR256X>))  was the problem and blacklisting it
	Measuring VCVTNEPS2BF16Z256rrk(3(Class<VR256X>) -> 0(Class<VR128X>))  and VCVTPH2UQQZ256rrbkz(2(Class<VR128X>) -> 0(Class<VR256X>))  was unsuccessful, EC: ERROR_ILLEGAL_INSTRUCTION
	 assuming VCVTPH2UQQZ256rrbkz(2(Class<VR128X>) -> 0(Class<VR256X>))  was the problem and blacklisting it
	Measuring VCVTNEPS2BF16Z256rrk(3(Class<VR256X>) -> 0(Class<VR128X>))  and VCVTPH2UQQZ256rrkz(2(Class<VR128X>) -> 0(Class<VR256X>))  was unsuccessful, EC: ERROR_ILLEGAL_INSTRUCTION
	 assuming VCVTPH2UQQZ256rrkz(2(Class<VR128X>) -> 0(Class<VR256X>))  was the problem and blacklisting it
	Measuring VCVTNEPS2BF16Z256rrk(3(Class<VR256X>) -> 0(Class<VR128X>))  and VCVTPS2PDZ256rrb(1(Class<VR128X>) -> 0(Class<VR256X>))  was unsuccessful, EC: ERROR_ILLEGAL_INSTRUCTION
	 assuming VCVTPS2PDZ256rrb(1(Class<VR128X>) -> 0(Class<VR256X>))  was the problem and blacklisting it
	Measuring VCVTNEPS2BF16Z256rrk(3(Class<VR256X>) -> 0(Class<VR128X>))  and VCVTPS2PDZ256rrbkz(2(Class<VR128X>) -> 0(Class<VR256X>))  was unsuccessful, EC: ERROR_ILLEGAL_INSTRUCTION
	 assuming VCVTPS2PDZ256rrbkz(2(Class<VR128X>) -> 0(Class<VR256X>))  was the problem and blacklisting it
	Measuring VCVTNEPS2BF16Z256rrk(3(Class<VR256X>) -> 0(Class<VR128X>))  and VCVTPS2QQZ256rrb(1(Class<VR128X>) -> 0(Class<VR256X>))  was unsuccessful, EC: ERROR_ILLEGAL_INSTRUCTION
	 assuming VCVTPS2QQZ256rrb(1(Class<VR128X>) -> 0(Class<VR256X>))  was the problem and blacklisting it
	Measuring VCVTNEPS2BF16Z256rrk(3(Class<VR256X>) -> 0(Class<VR128X>))  and VCVTPS2QQZ256rrbkz(2(Class<VR128X>) -> 0(Class<VR256X>))  was unsuccessful, EC: ERROR_ILLEGAL_INSTRUCTION
	 assuming VCVTPS2QQZ256rrbkz(2(Class<VR128X>) -> 0(Class<VR256X>))  was the problem and blacklisting it
	Measuring VCVTNEPS2BF16Z256rrk(3(Class<VR256X>) -> 0(Class<VR128X>))  and VCVTPS2UQQZ256rrb(1(Class<VR128X>) -> 0(Class<VR256X>))  was unsuccessful, EC: ERROR_ILLEGAL_INSTRUCTION
	 assuming VCVTPS2UQQZ256rrb(1(Class<VR128X>) -> 0(Class<VR256X>))  was the problem and blacklisting it
	Measuring VCVTNEPS2BF16Z256rrk(3(Class<VR256X>) -> 0(Class<VR128X>))  and VCVTPS2UQQZ256rrbkz(2(Class<VR128X>) -> 0(Class<VR256X>))  was unsuccessful, EC: ERROR_ILLEGAL_INSTRUCTION
	 assuming VCVTPS2UQQZ256rrbkz(2(Class<VR128X>) -> 0(Class<VR256X>))  was the problem and blacklisting it
	Measuring VCVTNEPS2BF16Z256rrk(3(Class<VR256X>) -> 0(Class<VR128X>))  and VCVTTPH2DQZ256rr(1(Class<VR128X>) -> 0(Class<VR256X>))  was unsuccessful, EC: ERROR_ILLEGAL_INSTRUCTION
	 assuming VCVTTPH2DQZ256rr(1(Class<VR128X>) -> 0(Class<VR256X>))  was the problem and blacklisting it
	Measuring VCVTNEPS2BF16Z256rrk(3(Class<VR256X>) -> 0(Class<VR128X>))  and VCVTTPH2DQZ256rrb(1(Class<VR128X>) -> 0(Class<VR256X>))  was unsuccessful, EC: ERROR_ILLEGAL_INSTRUCTION
	 assuming VCVTTPH2DQZ256rrb(1(Class<VR128X>) -> 0(Class<VR256X>))  was the problem and blacklisting it
	Measuring VCVTNEPS2BF16Z256rrk(3(Class<VR256X>) -> 0(Class<VR128X>))  and VCVTTPH2DQZ256rrbkz(2(Class<VR128X>) -> 0(Class<VR256X>))  was unsuccessful, EC: ERROR_ILLEGAL_INSTRUCTION
	 assuming VCVTTPH2DQZ256rrbkz(2(Class<VR128X>) -> 0(Class<VR256X>))  was the problem and blacklisting it
	Measuring VCVTNEPS2BF16Z256rrk(3(Class<VR256X>) -> 0(Class<VR128X>))  and VCVTTPH2DQZ256rrkz(2(Class<VR128X>) -> 0(Class<VR256X>))  was unsuccessful, EC: ERROR_ILLEGAL_INSTRUCTION
	 assuming VCVTTPH2DQZ256rrkz(2(Class<VR128X>) -> 0(Class<VR256X>))  was the problem and blacklisting it
	Measuring VCVTNEPS2BF16Z256rrk(3(Class<VR256X>) -> 0(Class<VR128X>))  and VCVTTPH2QQZ256rr(1(Class<VR128X>) -> 0(Class<VR256X>))  was unsuccessful, EC: ERROR_ILLEGAL_INSTRUCTION
	 assuming VCVTTPH2QQZ256rr(1(Class<VR128X>) -> 0(Class<VR256X>))  was the problem and blacklisting it
	Measuring VCVTNEPS2BF16Z256rrk(3(Class<VR256X>) -> 0(Class<VR128X>))  and VCVTTPH2QQZ256rrb(1(Class<VR128X>) -> 0(Class<VR256X>))  was unsuccessful, EC: ERROR_ILLEGAL_INSTRUCTION
	 assuming VCVTTPH2QQZ256rrb(1(Class<VR128X>) -> 0(Class<VR256X>))  was the problem and blacklisting it
	Measuring VCVTNEPS2BF16Z256rrk(3(Class<VR256X>) -> 0(Class<VR128X>))  and VCVTTPH2QQZ256rrbkz(2(Class<VR128X>) -> 0(Class<VR256X>))  was unsuccessful, EC: ERROR_ILLEGAL_INSTRUCTION
	 assuming VCVTTPH2QQZ256rrbkz(2(Class<VR128X>) -> 0(Class<VR256X>))  was the problem and blacklisting it
	Measuring VCVTNEPS2BF16Z256rrk(3(Class<VR256X>) -> 0(Class<VR128X>))  and VCVTTPH2QQZ256rrkz(2(Class<VR128X>) -> 0(Class<VR256X>))  was unsuccessful, EC: ERROR_ILLEGAL_INSTRUCTION
	 assuming VCVTTPH2QQZ256rrkz(2(Class<VR128X>) -> 0(Class<VR256X>))  was the problem and blacklisting it
	Measuring VCVTNEPS2BF16Z256rrk(3(Class<VR256X>) -> 0(Class<VR128X>))  and VCVTTPH2UDQZ256rr(1(Class<VR128X>) -> 0(Class<VR256X>))  was unsuccessful, EC: ERROR_ILLEGAL_INSTRUCTION
	 assuming VCVTTPH2UDQZ256rr(1(Class<VR128X>) -> 0(Class<VR256X>))  was the problem and blacklisting it
	Measuring VCVTNEPS2BF16Z256rrk(3(Class<VR256X>) -> 0(Class<VR128X>))  and VCVTTPH2UDQZ256rrb(1(Class<VR128X>) -> 0(Class<VR256X>))  was unsuccessful, EC: ERROR_ILLEGAL_INSTRUCTION
	 assuming VCVTTPH2UDQZ256rrb(1(Class<VR128X>) -> 0(Class<VR256X>))  was the problem and blacklisting it
	Measuring VCVTNEPS2BF16Z256rrk(3(Class<VR256X>) -> 0(Class<VR128X>))  and VCVTTPH2UDQZ256rrbkz(2(Class<VR128X>) -> 0(Class<VR256X>))  was unsuccessful, EC: ERROR_ILLEGAL_INSTRUCTION
	 assuming VCVTTPH2UDQZ256rrbkz(2(Class<VR128X>) -> 0(Class<VR256X>))  was the problem and blacklisting it
	Measuring VCVTNEPS2BF16Z256rrk(3(Class<VR256X>) -> 0(Class<VR128X>))  and VCVTTPH2UDQZ256rrkz(2(Class<VR128X>) -> 0(Class<VR256X>))  was unsuccessful, EC: ERROR_ILLEGAL_INSTRUCTION
	 assuming VCVTTPH2UDQZ256rrkz(2(Class<VR128X>) -> 0(Class<VR256X>))  was the problem and blacklisting it
	Measuring VCVTNEPS2BF16Z256rrk(3(Class<VR256X>) -> 0(Class<VR128X>))  and VCVTTPH2UQQZ256rr(1(Class<VR128X>) -> 0(Class<VR256X>))  was unsuccessful, EC: ERROR_ILLEGAL_INSTRUCTION
	 assuming VCVTTPH2UQQZ256rr(1(Class<VR128X>) -> 0(Class<VR256X>))  was the problem and blacklisting it
	Measuring VCVTNEPS2BF16Z256rrk(3(Class<VR256X>) -> 0(Class<VR128X>))  and VCVTTPH2UQQZ256rrb(1(Class<VR128X>) -> 0(Class<VR256X>))  was unsuccessful, EC: ERROR_ILLEGAL_INSTRUCTION
	 assuming VCVTTPH2UQQZ256rrb(1(Class<VR128X>) -> 0(Class<VR256X>))  was the problem and blacklisting it
	Measuring VCVTNEPS2BF16Z256rrk(3(Class<VR256X>) -> 0(Class<VR128X>))  and VCVTTPH2UQQZ256rrbkz(2(Class<VR128X>) -> 0(Class<VR256X>))  was unsuccessful, EC: ERROR_ILLEGAL_INSTRUCTION
	 assuming VCVTTPH2UQQZ256rrbkz(2(Class<VR128X>) -> 0(Class<VR256X>))  was the problem and blacklisting it
	Measuring VCVTNEPS2BF16Z256rrk(3(Class<VR256X>) -> 0(Class<VR128X>))  and VCVTTPH2UQQZ256rrkz(2(Class<VR128X>) -> 0(Class<VR256X>))  was unsuccessful, EC: ERROR_ILLEGAL_INSTRUCTION
	 assuming VCVTTPH2UQQZ256rrkz(2(Class<VR128X>) -> 0(Class<VR256X>))  was the problem and blacklisting it
	Measuring VCVTNEPS2BF16Z256rrk(3(Class<VR256X>) -> 0(Class<VR128X>))  and VCVTTPS2QQSZ256rr(1(Class<VR128X>) -> 0(Class<VR256X>))  was unsuccessful, EC: ERROR_ILLEGAL_INSTRUCTION
	 assuming VCVTTPS2QQSZ256rr(1(Class<VR128X>) -> 0(Class<VR256X>))  was the problem and blacklisting it
	Measuring VCVTNEPS2BF16Z256rrk(3(Class<VR256X>) -> 0(Class<VR128X>))  and VCVTTPS2QQSZ256rrb(1(Class<VR128X>) -> 0(Class<VR256X>))  was unsuccessful, EC: ERROR_ILLEGAL_INSTRUCTION
	 assuming VCVTTPS2QQSZ256rrb(1(Class<VR128X>) -> 0(Class<VR256X>))  was the problem and blacklisting it
	Measuring VCVTNEPS2BF16Z256rrk(3(Class<VR256X>) -> 0(Class<VR128X>))  and VCVTTPS2QQSZ256rrbkz(2(Class<VR128X>) -> 0(Class<VR256X>))  was unsuccessful, EC: ERROR_ILLEGAL_INSTRUCTION
	 assuming VCVTTPS2QQSZ256rrbkz(2(Class<VR128X>) -> 0(Class<VR256X>))  was the problem and blacklisting it
	Measuring VCVTNEPS2BF16Z256rrk(3(Class<VR256X>) -> 0(Class<VR128X>))  and VCVTTPS2QQSZ256rrkz(2(Class<VR128X>) -> 0(Class<VR256X>))  was unsuccessful, EC: ERROR_ILLEGAL_INSTRUCTION
	 assuming VCVTTPS2QQSZ256rrkz(2(Class<VR128X>) -> 0(Class<VR256X>))  was the problem and blacklisting it
	Measuring VCVTNEPS2BF16Z256rrk(3(Class<VR256X>) -> 0(Class<VR128X>))  and VCVTTPS2QQZ256rrb(1(Class<VR128X>) -> 0(Class<VR256X>))  was unsuccessful, EC: ERROR_ILLEGAL_INSTRUCTION
	 assuming VCVTTPS2QQZ256rrb(1(Class<VR128X>) -> 0(Class<VR256X>))  was the problem and blacklisting it
	Measuring VCVTNEPS2BF16Z256rrk(3(Class<VR256X>) -> 0(Class<VR128X>))  and VCVTTPS2QQZ256rrbkz(2(Class<VR128X>) -> 0(Class<VR256X>))  was unsuccessful, EC: ERROR_ILLEGAL_INSTRUCTION
	 assuming VCVTTPS2QQZ256rrbkz(2(Class<VR128X>) -> 0(Class<VR256X>))  was the problem and blacklisting it
	Measuring VCVTNEPS2BF16Z256rrk(3(Class<VR256X>) -> 0(Class<VR128X>))  and VCVTTPS2UQQSZ256rr(1(Class<VR128X>) -> 0(Class<VR256X>))  was unsuccessful, EC: ERROR_ILLEGAL_INSTRUCTION
	 assuming VCVTTPS2UQQSZ256rr(1(Class<VR128X>) -> 0(Class<VR256X>))  was the problem and blacklisting it
	Measuring VCVTNEPS2BF16Z256rrk(3(Class<VR256X>) -> 0(Class<VR128X>))  and VCVTTPS2UQQSZ256rrb(1(Class<VR128X>) -> 0(Class<VR256X>))  was unsuccessful, EC: ERROR_ILLEGAL_INSTRUCTION
	 assuming VCVTTPS2UQQSZ256rrb(1(Class<VR128X>) -> 0(Class<VR256X>))  was the problem and blacklisting it
	Measuring VCVTNEPS2BF16Z256rrk(3(Class<VR256X>) -> 0(Class<VR128X>))  and VCVTTPS2UQQSZ256rrbkz(2(Class<VR128X>) -> 0(Class<VR256X>))  was unsuccessful, EC: ERROR_ILLEGAL_INSTRUCTION
	 assuming VCVTTPS2UQQSZ256rrbkz(2(Class<VR128X>) -> 0(Class<VR256X>))  was the problem and blacklisting it
	Measuring VCVTNEPS2BF16Z256rrk(3(Class<VR256X>) -> 0(Class<VR128X>))  and VCVTTPS2UQQSZ256rrkz(2(Class<VR128X>) -> 0(Class<VR256X>))  was unsuccessful, EC: ERROR_ILLEGAL_INSTRUCTION
	 assuming VCVTTPS2UQQSZ256rrkz(2(Class<VR128X>) -> 0(Class<VR256X>))  was the problem and blacklisting it
	Measuring VCVTNEPS2BF16Z256rrk(3(Class<VR256X>) -> 0(Class<VR128X>))  and VCVTTPS2UQQZ256rrb(1(Class<VR128X>) -> 0(Class<VR256X>))  was unsuccessful, EC: ERROR_ILLEGAL_INSTRUCTION
	 assuming VCVTTPS2UQQZ256rrb(1(Class<VR128X>) -> 0(Class<VR256X>))  was the problem and blacklisting it
	Measuring VCVTNEPS2BF16Z256rrk(3(Class<VR256X>) -> 0(Class<VR128X>))  and VCVTTPS2UQQZ256rrbkz(2(Class<VR128X>) -> 0(Class<VR256X>))  was unsuccessful, EC: ERROR_ILLEGAL_INSTRUCTION
	 assuming VCVTTPS2UQQZ256rrbkz(2(Class<VR128X>) -> 0(Class<VR256X>))  was the problem and blacklisting it
	Measuring VCVTPD2DQZ256rrb(1(Class<VR256X>) -> 0(Class<VR128X>))  and VBROADCASTF32X2Z256rr(1(Class<VR128X>) -> 0(Class<VR256X>))  was unsuccessful, EC: ERROR_ILLEGAL_INSTRUCTION
	 assuming VCVTPD2DQZ256rrb(1(Class<VR256X>) -> 0(Class<VR128X>))  was the problem and blacklisting it
	Measuring VCVTPD2DQZ256rrbkz(2(Class<VR256X>) -> 0(Class<VR128X>))  and VBROADCASTF32X2Z256rr(1(Class<VR128X>) -> 0(Class<VR256X>))  was unsuccessful, EC: ERROR_ILLEGAL_INSTRUCTION
	 assuming VCVTPD2DQZ256rrbkz(2(Class<VR256X>) -> 0(Class<VR128X>))  was the problem and blacklisting it
	Measuring VCVTPD2PHZ256rr(1(Class<VR256X>) -> 0(Class<VR128X>))  and VBROADCASTF32X2Z256rr(1(Class<VR128X>) -> 0(Class<VR256X>))  was unsuccessful, EC: ERROR_ILLEGAL_INSTRUCTION
	 assuming VCVTPD2PHZ256rr(1(Class<VR256X>) -> 0(Class<VR128X>))  was the problem and blacklisting it
	Measuring VCVTPD2PHZ256rrb(1(Class<VR256X>) -> 0(Class<VR128X>))  and VBROADCASTF32X2Z256rr(1(Class<VR128X>) -> 0(Class<VR256X>))  was unsuccessful, EC: ERROR_ILLEGAL_INSTRUCTION
	 assuming VCVTPD2PHZ256rrb(1(Class<VR256X>) -> 0(Class<VR128X>))  was the problem and blacklisting it
	Measuring VCVTPD2PHZ256rrbkz(2(Class<VR256X>) -> 0(Class<VR128X>))  and VBROADCASTF32X2Z256rr(1(Class<VR128X>) -> 0(Class<VR256X>))  was unsuccessful, EC: ERROR_ILLEGAL_INSTRUCTION
	 assuming VCVTPD2PHZ256rrbkz(2(Class<VR256X>) -> 0(Class<VR128X>))  was the problem and blacklisting it
	Measuring VCVTPD2PHZ256rrkz(2(Class<VR256X>) -> 0(Class<VR128X>))  and VBROADCASTF32X2Z256rr(1(Class<VR128X>) -> 0(Class<VR256X>))  was unsuccessful, EC: ERROR_ILLEGAL_INSTRUCTION
	 assuming VCVTPD2PHZ256rrkz(2(Class<VR256X>) -> 0(Class<VR128X>))  was the problem and blacklisting it
	Measuring VCVTPD2PSZ256rrb(1(Class<VR256X>) -> 0(Class<VR128X>))  and VBROADCASTF32X2Z256rr(1(Class<VR128X>) -> 0(Class<VR256X>))  was unsuccessful, EC: ERROR_ILLEGAL_INSTRUCTION
	 assuming VCVTPD2PSZ256rrb(1(Class<VR256X>) -> 0(Class<VR128X>))  was the problem and blacklisting it
	Measuring VCVTPD2PSZ256rrbkz(2(Class<VR256X>) -> 0(Class<VR128X>))  and VBROADCASTF32X2Z256rr(1(Class<VR128X>) -> 0(Class<VR256X>))  was unsuccessful, EC: ERROR_ILLEGAL_INSTRUCTION
	 assuming VCVTPD2PSZ256rrbkz(2(Class<VR256X>) -> 0(Class<VR128X>))  was the problem and blacklisting it
	New pair: VCVTPD2PSZ256rrkz(2(Class<VR256X>) -> 0(Class<VR128X>))  VBROADCASTF32X2Z256rr(1(Class<VR128X>) -> 0(Class<VR256X>)) with latency 7.03125
	Measuring VCVTPD2UDQZ256rrb(1(Class<VR256X>) -> 0(Class<VR128X>))  and VBROADCASTF32X2Z256rr(1(Class<VR128X>) -> 0(Class<VR256X>))  was unsuccessful, EC: ERROR_ILLEGAL_INSTRUCTION
	 assuming VCVTPD2UDQZ256rrb(1(Class<VR256X>) -> 0(Class<VR128X>))  was the problem and blacklisting it
	Measuring VCVTPD2UDQZ256rrbkz(2(Class<VR256X>) -> 0(Class<VR128X>))  and VBROADCASTF32X2Z256rr(1(Class<VR128X>) -> 0(Class<VR256X>))  was unsuccessful, EC: ERROR_ILLEGAL_INSTRUCTION
	 assuming VCVTPD2UDQZ256rrbkz(2(Class<VR256X>) -> 0(Class<VR128X>))  was the problem and blacklisting it
	Measuring VCVTPH2BF8SZ256rr(1(Class<VR256X>) -> 0(Class<VR128X>))  and VBROADCASTF32X2Z256rr(1(Class<VR128X>) -> 0(Class<VR256X>))  was unsuccessful, EC: ERROR_ILLEGAL_INSTRUCTION
	 assuming VCVTPH2BF8SZ256rr(1(Class<VR256X>) -> 0(Class<VR128X>))  was the problem and blacklisting it
	Measuring VCVTPH2BF8SZ256rrkz(2(Class<VR256X>) -> 0(Class<VR128X>))  and VBROADCASTF32X2Z256rr(1(Class<VR128X>) -> 0(Class<VR256X>))  was unsuccessful, EC: ERROR_ILLEGAL_INSTRUCTION
	 assuming VCVTPH2BF8SZ256rrkz(2(Class<VR256X>) -> 0(Class<VR128X>))  was the problem and blacklisting it
	Measuring VCVTPH2BF8Z256rr(1(Class<VR256X>) -> 0(Class<VR128X>))  and VBROADCASTF32X2Z256rr(1(Class<VR128X>) -> 0(Class<VR256X>))  was unsuccessful, EC: ERROR_ILLEGAL_INSTRUCTION
	 assuming VCVTPH2BF8Z256rr(1(Class<VR256X>) -> 0(Class<VR128X>))  was the problem and blacklisting it
	Measuring VCVTPH2BF8Z256rrkz(2(Class<VR256X>) -> 0(Class<VR128X>))  and VBROADCASTF32X2Z256rr(1(Class<VR128X>) -> 0(Class<VR256X>))  was unsuccessful, EC: ERROR_ILLEGAL_INSTRUCTION
	 assuming VCVTPH2BF8Z256rrkz(2(Class<VR256X>) -> 0(Class<VR128X>))  was the problem and blacklisting it
	Measuring VCVTPH2HF8SZ256rr(1(Class<VR256X>) -> 0(Class<VR128X>))  and VBROADCASTF32X2Z256rr(1(Class<VR128X>) -> 0(Class<VR256X>))  was unsuccessful, EC: ERROR_ILLEGAL_INSTRUCTION
	 assuming VCVTPH2HF8SZ256rr(1(Class<VR256X>) -> 0(Class<VR128X>))  was the problem and blacklisting it
	Measuring VCVTPH2HF8SZ256rrkz(2(Class<VR256X>) -> 0(Class<VR128X>))  and VBROADCASTF32X2Z256rr(1(Class<VR128X>) -> 0(Class<VR256X>))  was unsuccessful, EC: ERROR_ILLEGAL_INSTRUCTION
	 assuming VCVTPH2HF8SZ256rrkz(2(Class<VR256X>) -> 0(Class<VR128X>))  was the problem and blacklisting it
	Measuring VCVTPH2HF8Z256rr(1(Class<VR256X>) -> 0(Class<VR128X>))  and VBROADCASTF32X2Z256rr(1(Class<VR128X>) -> 0(Class<VR256X>))  was unsuccessful, EC: ERROR_ILLEGAL_INSTRUCTION
	 assuming VCVTPH2HF8Z256rr(1(Class<VR256X>) -> 0(Class<VR128X>))  was the problem and blacklisting it
	Measuring VCVTPH2HF8Z256rrkz(2(Class<VR256X>) -> 0(Class<VR128X>))  and VBROADCASTF32X2Z256rr(1(Class<VR128X>) -> 0(Class<VR256X>))  was unsuccessful, EC: ERROR_ILLEGAL_INSTRUCTION
	 assuming VCVTPH2HF8Z256rrkz(2(Class<VR256X>) -> 0(Class<VR128X>))  was the problem and blacklisting it
	Measuring VCVTPS2PHXZ256rr(1(Class<VR256X>) -> 0(Class<VR128X>))  and VBROADCASTF32X2Z256rr(1(Class<VR128X>) -> 0(Class<VR256X>))  was unsuccessful, EC: ERROR_ILLEGAL_INSTRUCTION
	 assuming VCVTPS2PHXZ256rr(1(Class<VR256X>) -> 0(Class<VR128X>))  was the problem and blacklisting it
	Measuring VCVTPS2PHXZ256rrb(1(Class<VR256X>) -> 0(Class<VR128X>))  and VBROADCASTF32X2Z256rr(1(Class<VR128X>) -> 0(Class<VR256X>))  was unsuccessful, EC: ERROR_ILLEGAL_INSTRUCTION
	 assuming VCVTPS2PHXZ256rrb(1(Class<VR256X>) -> 0(Class<VR128X>))  was the problem and blacklisting it
	Measuring VCVTPS2PHXZ256rrbkz(2(Class<VR256X>) -> 0(Class<VR128X>))  and VBROADCASTF32X2Z256rr(1(Class<VR128X>) -> 0(Class<VR256X>))  was unsuccessful, EC: ERROR_ILLEGAL_INSTRUCTION
	 assuming VCVTPS2PHXZ256rrbkz(2(Class<VR256X>) -> 0(Class<VR128X>))  was the problem and blacklisting it
	Measuring VCVTPS2PHXZ256rrkz(2(Class<VR256X>) -> 0(Class<VR128X>))  and VBROADCASTF32X2Z256rr(1(Class<VR128X>) -> 0(Class<VR256X>))  was unsuccessful, EC: ERROR_ILLEGAL_INSTRUCTION
	 assuming VCVTPS2PHXZ256rrkz(2(Class<VR256X>) -> 0(Class<VR128X>))  was the problem and blacklisting it
	Measuring VCVTPS2PHZ256rrb(1(Class<VR256X>) -> 0(Class<VR128X>))  and VBROADCASTF32X2Z256rr(1(Class<VR128X>) -> 0(Class<VR256X>))  was unsuccessful, EC: ERROR_ILLEGAL_INSTRUCTION
	 assuming VCVTPS2PHZ256rrb(1(Class<VR256X>) -> 0(Class<VR128X>))  was the problem and blacklisting it
	Measuring VCVTPS2PHZ256rrbkz(2(Class<VR256X>) -> 0(Class<VR128X>))  and VBROADCASTF32X2Z256rr(1(Class<VR128X>) -> 0(Class<VR256X>))  was unsuccessful, EC: ERROR_ILLEGAL_INSTRUCTION
	 assuming VCVTPS2PHZ256rrbkz(2(Class<VR256X>) -> 0(Class<VR128X>))  was the problem and blacklisting it
	Measuring VCVTQQ2PHZ256rr(1(Class<VR256X>) -> 0(Class<VR128X>))  and VBROADCASTF32X2Z256rr(1(Class<VR128X>) -> 0(Class<VR256X>))  was unsuccessful, EC: ERROR_ILLEGAL_INSTRUCTION
	 assuming VCVTQQ2PHZ256rr(1(Class<VR256X>) -> 0(Class<VR128X>))  was the problem and blacklisting it
	Measuring VCVTQQ2PHZ256rrb(1(Class<VR256X>) -> 0(Class<VR128X>))  and VBROADCASTF32X2Z256rr(1(Class<VR128X>) -> 0(Class<VR256X>))  was unsuccessful, EC: ERROR_ILLEGAL_INSTRUCTION
	 assuming VCVTQQ2PHZ256rrb(1(Class<VR256X>) -> 0(Class<VR128X>))  was the problem and blacklisting it
	Measuring VCVTQQ2PHZ256rrbkz(2(Class<VR256X>) -> 0(Class<VR128X>))  and VBROADCASTF32X2Z256rr(1(Class<VR128X>) -> 0(Class<VR256X>))  was unsuccessful, EC: ERROR_ILLEGAL_INSTRUCTION
	 assuming VCVTQQ2PHZ256rrbkz(2(Class<VR256X>) -> 0(Class<VR128X>))  was the problem and blacklisting it
	Measuring VCVTQQ2PHZ256rrkz(2(Class<VR256X>) -> 0(Class<VR128X>))  and VBROADCASTF32X2Z256rr(1(Class<VR128X>) -> 0(Class<VR256X>))  was unsuccessful, EC: ERROR_ILLEGAL_INSTRUCTION
	 assuming VCVTQQ2PHZ256rrkz(2(Class<VR256X>) -> 0(Class<VR128X>))  was the problem and blacklisting it
	Measuring VCVTQQ2PSZ256rrb(1(Class<VR256X>) -> 0(Class<VR128X>))  and VBROADCASTF32X2Z256rr(1(Class<VR128X>) -> 0(Class<VR256X>))  was unsuccessful, EC: ERROR_ILLEGAL_INSTRUCTION
	 assuming VCVTQQ2PSZ256rrb(1(Class<VR256X>) -> 0(Class<VR128X>))  was the problem and blacklisting it
	Measuring VCVTQQ2PSZ256rrbkz(2(Class<VR256X>) -> 0(Class<VR128X>))  and VBROADCASTF32X2Z256rr(1(Class<VR128X>) -> 0(Class<VR256X>))  was unsuccessful, EC: ERROR_ILLEGAL_INSTRUCTION
	 assuming VCVTQQ2PSZ256rrbkz(2(Class<VR256X>) -> 0(Class<VR128X>))  was the problem and blacklisting it
	Measuring VCVTTPD2DQSZ256rr(1(Class<VR256X>) -> 0(Class<VR128X>))  and VBROADCASTF32X2Z256rr(1(Class<VR128X>) -> 0(Class<VR256X>))  was unsuccessful, EC: ERROR_ILLEGAL_INSTRUCTION
	 assuming VCVTTPD2DQSZ256rr(1(Class<VR256X>) -> 0(Class<VR128X>))  was the problem and blacklisting it
	Measuring VCVTTPD2DQSZ256rrb(1(Class<VR256X>) -> 0(Class<VR128X>))  and VBROADCASTF32X2Z256rr(1(Class<VR128X>) -> 0(Class<VR256X>))  was unsuccessful, EC: ERROR_ILLEGAL_INSTRUCTION
	 assuming VCVTTPD2DQSZ256rrb(1(Class<VR256X>) -> 0(Class<VR128X>))  was the problem and blacklisting it
	Measuring VCVTTPD2DQSZ256rrbkz(2(Class<VR256X>) -> 0(Class<VR128X>))  and VBROADCASTF32X2Z256rr(1(Class<VR128X>) -> 0(Class<VR256X>))  was unsuccessful, EC: ERROR_ILLEGAL_INSTRUCTION
	 assuming VCVTTPD2DQSZ256rrbkz(2(Class<VR256X>) -> 0(Class<VR128X>))  was the problem and blacklisting it
	Measuring VCVTTPD2DQSZ256rrkz(2(Class<VR256X>) -> 0(Class<VR128X>))  and VBROADCASTF32X2Z256rr(1(Class<VR128X>) -> 0(Class<VR256X>))  was unsuccessful, EC: ERROR_ILLEGAL_INSTRUCTION
	 assuming VCVTTPD2DQSZ256rrkz(2(Class<VR256X>) -> 0(Class<VR128X>))  was the problem and blacklisting it
	Measuring VCVTTPD2DQZ256rrb(1(Class<VR256X>) -> 0(Class<VR128X>))  and VBROADCASTF32X2Z256rr(1(Class<VR128X>) -> 0(Class<VR256X>))  was unsuccessful, EC: ERROR_ILLEGAL_INSTRUCTION
	 assuming VCVTTPD2DQZ256rrb(1(Class<VR256X>) -> 0(Class<VR128X>))  was the problem and blacklisting it
	Measuring VCVTTPD2DQZ256rrbkz(2(Class<VR256X>) -> 0(Class<VR128X>))  and VBROADCASTF32X2Z256rr(1(Class<VR128X>) -> 0(Class<VR256X>))  was unsuccessful, EC: ERROR_ILLEGAL_INSTRUCTION
	 assuming VCVTTPD2DQZ256rrbkz(2(Class<VR256X>) -> 0(Class<VR128X>))  was the problem and blacklisting it
	Measuring VCVTTPD2UDQSZ256rr(1(Class<VR256X>) -> 0(Class<VR128X>))  and VBROADCASTF32X2Z256rr(1(Class<VR128X>) -> 0(Class<VR256X>))  was unsuccessful, EC: ERROR_ILLEGAL_INSTRUCTION
	 assuming VCVTTPD2UDQSZ256rr(1(Class<VR256X>) -> 0(Class<VR128X>))  was the problem and blacklisting it
	Measuring VCVTTPD2UDQSZ256rrb(1(Class<VR256X>) -> 0(Class<VR128X>))  and VBROADCASTF32X2Z256rr(1(Class<VR128X>) -> 0(Class<VR256X>))  was unsuccessful, EC: ERROR_ILLEGAL_INSTRUCTION
	 assuming VCVTTPD2UDQSZ256rrb(1(Class<VR256X>) -> 0(Class<VR128X>))  was the problem and blacklisting it
	Measuring VCVTTPD2UDQSZ256rrbkz(2(Class<VR256X>) -> 0(Class<VR128X>))  and VBROADCASTF32X2Z256rr(1(Class<VR128X>) -> 0(Class<VR256X>))  was unsuccessful, EC: ERROR_ILLEGAL_INSTRUCTION
	 assuming VCVTTPD2UDQSZ256rrbkz(2(Class<VR256X>) -> 0(Class<VR128X>))  was the problem and blacklisting it
	Measuring VCVTTPD2UDQSZ256rrkz(2(Class<VR256X>) -> 0(Class<VR128X>))  and VBROADCASTF32X2Z256rr(1(Class<VR128X>) -> 0(Class<VR256X>))  was unsuccessful, EC: ERROR_ILLEGAL_INSTRUCTION
	 assuming VCVTTPD2UDQSZ256rrkz(2(Class<VR256X>) -> 0(Class<VR128X>))  was the problem and blacklisting it
	Measuring VCVTTPD2UDQZ256rrb(1(Class<VR256X>) -> 0(Class<VR128X>))  and VBROADCASTF32X2Z256rr(1(Class<VR128X>) -> 0(Class<VR256X>))  was unsuccessful, EC: ERROR_ILLEGAL_INSTRUCTION
	 assuming VCVTTPD2UDQZ256rrb(1(Class<VR256X>) -> 0(Class<VR128X>))  was the problem and blacklisting it
	Measuring VCVTTPD2UDQZ256rrbkz(2(Class<VR256X>) -> 0(Class<VR128X>))  and VBROADCASTF32X2Z256rr(1(Class<VR128X>) -> 0(Class<VR256X>))  was unsuccessful, EC: ERROR_ILLEGAL_INSTRUCTION
	 assuming VCVTTPD2UDQZ256rrbkz(2(Class<VR256X>) -> 0(Class<VR128X>))  was the problem and blacklisting it
	Measuring VCVTUDQ2PHZ256rr(1(Class<VR256X>) -> 0(Class<VR128X>))  and VBROADCASTF32X2Z256rr(1(Class<VR128X>) -> 0(Class<VR256X>))  was unsuccessful, EC: ERROR_ILLEGAL_INSTRUCTION
	 assuming VCVTUDQ2PHZ256rr(1(Class<VR256X>) -> 0(Class<VR128X>))  was the problem and blacklisting it
	Measuring VCVTUDQ2PHZ256rrb(1(Class<VR256X>) -> 0(Class<VR128X>))  and VBROADCASTF32X2Z256rr(1(Class<VR128X>) -> 0(Class<VR256X>))  was unsuccessful, EC: ERROR_ILLEGAL_INSTRUCTION
	 assuming VCVTUDQ2PHZ256rrb(1(Class<VR256X>) -> 0(Class<VR128X>))  was the problem and blacklisting it
	Measuring VCVTUDQ2PHZ256rrbkz(2(Class<VR256X>) -> 0(Class<VR128X>))  and VBROADCASTF32X2Z256rr(1(Class<VR128X>) -> 0(Class<VR256X>))  was unsuccessful, EC: ERROR_ILLEGAL_INSTRUCTION
	 assuming VCVTUDQ2PHZ256rrbkz(2(Class<VR256X>) -> 0(Class<VR128X>))  was the problem and blacklisting it
	Measuring VCVTUDQ2PHZ256rrkz(2(Class<VR256X>) -> 0(Class<VR128X>))  and VBROADCASTF32X2Z256rr(1(Class<VR128X>) -> 0(Class<VR256X>))  was unsuccessful, EC: ERROR_ILLEGAL_INSTRUCTION
	 assuming VCVTUDQ2PHZ256rrkz(2(Class<VR256X>) -> 0(Class<VR128X>))  was the problem and blacklisting it
	Measuring VCVTUQQ2PHZ256rr(1(Class<VR256X>) -> 0(Class<VR128X>))  and VBROADCASTF32X2Z256rr(1(Class<VR128X>) -> 0(Class<VR256X>))  was unsuccessful, EC: ERROR_ILLEGAL_INSTRUCTION
	 assuming VCVTUQQ2PHZ256rr(1(Class<VR256X>) -> 0(Class<VR128X>))  was the problem and blacklisting it
	Measuring VCVTUQQ2PHZ256rrb(1(Class<VR256X>) -> 0(Class<VR128X>))  and VBROADCASTF32X2Z256rr(1(Class<VR128X>) -> 0(Class<VR256X>))  was unsuccessful, EC: ERROR_ILLEGAL_INSTRUCTION
	 assuming VCVTUQQ2PHZ256rrb(1(Class<VR256X>) -> 0(Class<VR128X>))  was the problem and blacklisting it
	Measuring VCVTUQQ2PHZ256rrbkz(2(Class<VR256X>) -> 0(Class<VR128X>))  and VBROADCASTF32X2Z256rr(1(Class<VR128X>) -> 0(Class<VR256X>))  was unsuccessful, EC: ERROR_ILLEGAL_INSTRUCTION
	 assuming VCVTUQQ2PHZ256rrbkz(2(Class<VR256X>) -> 0(Class<VR128X>))  was the problem and blacklisting it
	Measuring VCVTUQQ2PHZ256rrkz(2(Class<VR256X>) -> 0(Class<VR128X>))  and VBROADCASTF32X2Z256rr(1(Class<VR128X>) -> 0(Class<VR256X>))  was unsuccessful, EC: ERROR_ILLEGAL_INSTRUCTION
	 assuming VCVTUQQ2PHZ256rrkz(2(Class<VR256X>) -> 0(Class<VR128X>))  was the problem and blacklisting it
	Measuring VCVTUQQ2PSZ256rrb(1(Class<VR256X>) -> 0(Class<VR128X>))  and VBROADCASTF32X2Z256rr(1(Class<VR128X>) -> 0(Class<VR256X>))  was unsuccessful, EC: ERROR_ILLEGAL_INSTRUCTION
	 assuming VCVTUQQ2PSZ256rrb(1(Class<VR256X>) -> 0(Class<VR128X>))  was the problem and blacklisting it
	Measuring VCVTUQQ2PSZ256rrbkz(2(Class<VR256X>) -> 0(Class<VR128X>))  and VBROADCASTF32X2Z256rr(1(Class<VR128X>) -> 0(Class<VR256X>))  was unsuccessful, EC: ERROR_ILLEGAL_INSTRUCTION
	 assuming VCVTUQQ2PSZ256rrbkz(2(Class<VR256X>) -> 0(Class<VR128X>))  was the problem and blacklisting it
	New pair: VEXTRACTF32X4Z256rri(1(Class<VR256X>) -> 0(Class<VR128X>))  VBROADCASTF32X2Z256rr(1(Class<VR128X>) -> 0(Class<VR256X>)) with latency 4.045
	New pair: VEXTRACTF32X4Z256rrik(3(Class<VR256X>) -> 0(Class<VR128X>))  VBROADCASTF32X2Z256rr(1(Class<VR128X>) -> 0(Class<VR256X>)) with latency 4.04
	New pair: VEXTRACTF32X4Z256rrikz(2(Class<VR256X>) -> 0(Class<VR128X>))  VBROADCASTF32X2Z256rr(1(Class<VR128X>) -> 0(Class<VR256X>)) with latency 4.02625
	New pair: VEXTRACTI32X4Z256rrik(3(Class<VR256X>) -> 0(Class<VR128X>))  VBROADCASTF32X2Z256rr(1(Class<VR128X>) -> 0(Class<VR256X>)) with latency 4.02125
	Found helper instructions VEXTRACTI32X4Z256rrik(3(Class<VR256X>) -> 0(Class<VR128X>))  and VBROADCASTF32X2Z256rr(1(Class<VR128X>) -> 0(Class<VR256X>))  with combined latency 4.02125
-----Class<VR512> -> Class<VR128X> and Class<VR128X> -> Class<VR512>-----
	57 measurements of first Type
	111 measurements of reversed Type
	New pair: VEXTRACTF32X4Zrrikz(2(Class<VR512>) -> 0(Class<VR128X>))  VBROADCASTF32X2Zrr(1(Class<VR128X>) -> 0(Class<VR512>)) with latency 5.05375
	Measuring VEXTRACTF32X4Zrrikz(2(Class<VR512>) -> 0(Class<VR128X>))  and VCVTPH2PDZrr(1(Class<VR128X>) -> 0(Class<VR512>))  was unsuccessful, EC: ERROR_ILLEGAL_INSTRUCTION
	 assuming VCVTPH2PDZrr(1(Class<VR128X>) -> 0(Class<VR512>))  was the problem and blacklisting it
	Measuring VEXTRACTF32X4Zrrikz(2(Class<VR512>) -> 0(Class<VR128X>))  and VCVTPH2PDZrrb(1(Class<VR128X>) -> 0(Class<VR512>))  was unsuccessful, EC: ERROR_ILLEGAL_INSTRUCTION
	 assuming VCVTPH2PDZrrb(1(Class<VR128X>) -> 0(Class<VR512>))  was the problem and blacklisting it
	Measuring VEXTRACTF32X4Zrrikz(2(Class<VR512>) -> 0(Class<VR128X>))  and VCVTPH2PDZrrbkz(2(Class<VR128X>) -> 0(Class<VR512>))  was unsuccessful, EC: ERROR_ILLEGAL_INSTRUCTION
	 assuming VCVTPH2PDZrrbkz(2(Class<VR128X>) -> 0(Class<VR512>))  was the problem and blacklisting it
	Measuring VEXTRACTF32X4Zrrikz(2(Class<VR512>) -> 0(Class<VR128X>))  and VCVTPH2PDZrrkz(2(Class<VR128X>) -> 0(Class<VR512>))  was unsuccessful, EC: ERROR_ILLEGAL_INSTRUCTION
	 assuming VCVTPH2PDZrrkz(2(Class<VR128X>) -> 0(Class<VR512>))  was the problem and blacklisting it
	Measuring VEXTRACTF32X4Zrrikz(2(Class<VR512>) -> 0(Class<VR128X>))  and VCVTPH2QQZrr(1(Class<VR128X>) -> 0(Class<VR512>))  was unsuccessful, EC: ERROR_ILLEGAL_INSTRUCTION
	 assuming VCVTPH2QQZrr(1(Class<VR128X>) -> 0(Class<VR512>))  was the problem and blacklisting it
	Measuring VEXTRACTF32X4Zrrikz(2(Class<VR512>) -> 0(Class<VR128X>))  and VCVTPH2QQZrrb(1(Class<VR128X>) -> 0(Class<VR512>))  was unsuccessful, EC: ERROR_ILLEGAL_INSTRUCTION
	 assuming VCVTPH2QQZrrb(1(Class<VR128X>) -> 0(Class<VR512>))  was the problem and blacklisting it
	Measuring VEXTRACTF32X4Zrrikz(2(Class<VR512>) -> 0(Class<VR128X>))  and VCVTPH2QQZrrbkz(2(Class<VR128X>) -> 0(Class<VR512>))  was unsuccessful, EC: ERROR_ILLEGAL_INSTRUCTION
	 assuming VCVTPH2QQZrrbkz(2(Class<VR128X>) -> 0(Class<VR512>))  was the problem and blacklisting it
	Measuring VEXTRACTF32X4Zrrikz(2(Class<VR512>) -> 0(Class<VR128X>))  and VCVTPH2QQZrrkz(2(Class<VR128X>) -> 0(Class<VR512>))  was unsuccessful, EC: ERROR_ILLEGAL_INSTRUCTION
	 assuming VCVTPH2QQZrrkz(2(Class<VR128X>) -> 0(Class<VR512>))  was the problem and blacklisting it
	Measuring VEXTRACTF32X4Zrrikz(2(Class<VR512>) -> 0(Class<VR128X>))  and VCVTPH2UQQZrr(1(Class<VR128X>) -> 0(Class<VR512>))  was unsuccessful, EC: ERROR_ILLEGAL_INSTRUCTION
	 assuming VCVTPH2UQQZrr(1(Class<VR128X>) -> 0(Class<VR512>))  was the problem and blacklisting it
	Measuring VEXTRACTF32X4Zrrikz(2(Class<VR512>) -> 0(Class<VR128X>))  and VCVTPH2UQQZrrb(1(Class<VR128X>) -> 0(Class<VR512>))  was unsuccessful, EC: ERROR_ILLEGAL_INSTRUCTION
	 assuming VCVTPH2UQQZrrb(1(Class<VR128X>) -> 0(Class<VR512>))  was the problem and blacklisting it
	Measuring VEXTRACTF32X4Zrrikz(2(Class<VR512>) -> 0(Class<VR128X>))  and VCVTPH2UQQZrrbkz(2(Class<VR128X>) -> 0(Class<VR512>))  was unsuccessful, EC: ERROR_ILLEGAL_INSTRUCTION
	 assuming VCVTPH2UQQZrrbkz(2(Class<VR128X>) -> 0(Class<VR512>))  was the problem and blacklisting it
	Measuring VEXTRACTF32X4Zrrikz(2(Class<VR512>) -> 0(Class<VR128X>))  and VCVTPH2UQQZrrkz(2(Class<VR128X>) -> 0(Class<VR512>))  was unsuccessful, EC: ERROR_ILLEGAL_INSTRUCTION
	 assuming VCVTPH2UQQZrrkz(2(Class<VR128X>) -> 0(Class<VR512>))  was the problem and blacklisting it
	Measuring VEXTRACTF32X4Zrrikz(2(Class<VR512>) -> 0(Class<VR128X>))  and VCVTTPH2QQZrr(1(Class<VR128X>) -> 0(Class<VR512>))  was unsuccessful, EC: ERROR_ILLEGAL_INSTRUCTION
	 assuming VCVTTPH2QQZrr(1(Class<VR128X>) -> 0(Class<VR512>))  was the problem and blacklisting it
	Measuring VEXTRACTF32X4Zrrikz(2(Class<VR512>) -> 0(Class<VR128X>))  and VCVTTPH2QQZrrb(1(Class<VR128X>) -> 0(Class<VR512>))  was unsuccessful, EC: ERROR_ILLEGAL_INSTRUCTION
	 assuming VCVTTPH2QQZrrb(1(Class<VR128X>) -> 0(Class<VR512>))  was the problem and blacklisting it
	Measuring VEXTRACTF32X4Zrrikz(2(Class<VR512>) -> 0(Class<VR128X>))  and VCVTTPH2QQZrrbkz(2(Class<VR128X>) -> 0(Class<VR512>))  was unsuccessful, EC: ERROR_ILLEGAL_INSTRUCTION
	 assuming VCVTTPH2QQZrrbkz(2(Class<VR128X>) -> 0(Class<VR512>))  was the problem and blacklisting it
	Measuring VEXTRACTF32X4Zrrikz(2(Class<VR512>) -> 0(Class<VR128X>))  and VCVTTPH2QQZrrkz(2(Class<VR128X>) -> 0(Class<VR512>))  was unsuccessful, EC: ERROR_ILLEGAL_INSTRUCTION
	 assuming VCVTTPH2QQZrrkz(2(Class<VR128X>) -> 0(Class<VR512>))  was the problem and blacklisting it
	Measuring VEXTRACTF32X4Zrrikz(2(Class<VR512>) -> 0(Class<VR128X>))  and VCVTTPH2UQQZrr(1(Class<VR128X>) -> 0(Class<VR512>))  was unsuccessful, EC: ERROR_ILLEGAL_INSTRUCTION
	 assuming VCVTTPH2UQQZrr(1(Class<VR128X>) -> 0(Class<VR512>))  was the problem and blacklisting it
	Measuring VEXTRACTF32X4Zrrikz(2(Class<VR512>) -> 0(Class<VR128X>))  and VCVTTPH2UQQZrrb(1(Class<VR128X>) -> 0(Class<VR512>))  was unsuccessful, EC: ERROR_ILLEGAL_INSTRUCTION
	 assuming VCVTTPH2UQQZrrb(1(Class<VR128X>) -> 0(Class<VR512>))  was the problem and blacklisting it
	Measuring VEXTRACTF32X4Zrrikz(2(Class<VR512>) -> 0(Class<VR128X>))  and VCVTTPH2UQQZrrbkz(2(Class<VR128X>) -> 0(Class<VR512>))  was unsuccessful, EC: ERROR_ILLEGAL_INSTRUCTION
	 assuming VCVTTPH2UQQZrrbkz(2(Class<VR128X>) -> 0(Class<VR512>))  was the problem and blacklisting it
	Measuring VEXTRACTF32X4Zrrikz(2(Class<VR512>) -> 0(Class<VR128X>))  and VCVTTPH2UQQZrrkz(2(Class<VR128X>) -> 0(Class<VR512>))  was unsuccessful, EC: ERROR_ILLEGAL_INSTRUCTION
	 assuming VCVTTPH2UQQZrrkz(2(Class<VR128X>) -> 0(Class<VR512>))  was the problem and blacklisting it
	New pair: VEXTRACTF32X4Zrrikz(2(Class<VR512>) -> 0(Class<VR128X>))  VINSERTF32X4Zrri(2(Class<VR128X>) -> 0(Class<VR512>)) with latency 5.0375
	New pair: VEXTRACTF64X2Zrri(1(Class<VR512>) -> 0(Class<VR128X>))  VINSERTF32X4Zrri(2(Class<VR128X>) -> 0(Class<VR512>)) with latency 5.0225
	Found helper instructions VEXTRACTF64X2Zrri(1(Class<VR512>) -> 0(Class<VR128X>))  and VINSERTF32X4Zrri(2(Class<VR128X>) -> 0(Class<VR512>))  with combined latency 5.0225
-----Reg<EFLAGS> -> Class<VR128X> and Class<VR128X> -> Reg<EFLAGS>-----
	1 measurements of first Type
	50 measurements of reversed Type
	Unusual 0.99875 from CMOV_VR128X(impl(Reg<EFLAGS>) -> 0(Class<VR128X>))  and VCOMISDZrrb(0(Class<VR128X>) -> impl(Reg<EFLAGS>)) lower than 2, discarding this result
	Measuring CMOV_VR128X(impl(Reg<EFLAGS>) -> 0(Class<VR128X>))  and VCOMISHZrr_Int(0(Class<VR128X>) -> impl(Reg<EFLAGS>))  was unsuccessful, EC: ERROR_ILLEGAL_INSTRUCTION
	 assuming VCOMISHZrr_Int(0(Class<VR128X>) -> impl(Reg<EFLAGS>))  was the problem and blacklisting it
	Measuring CMOV_VR128X(impl(Reg<EFLAGS>) -> 0(Class<VR128X>))  and VCOMISHZrrb(0(Class<VR128X>) -> impl(Reg<EFLAGS>))  was unsuccessful, EC: ERROR_ILLEGAL_INSTRUCTION
	 assuming VCOMISHZrrb(0(Class<VR128X>) -> impl(Reg<EFLAGS>))  was the problem and blacklisting it
	Measuring CMOV_VR128X(impl(Reg<EFLAGS>) -> 0(Class<VR128X>))  and VCOMXSDZrr_Int(0(Class<VR128X>) -> impl(Reg<EFLAGS>))  was unsuccessful, EC: ERROR_ILLEGAL_INSTRUCTION
	 assuming VCOMXSDZrr_Int(0(Class<VR128X>) -> impl(Reg<EFLAGS>))  was the problem and blacklisting it
	Measuring CMOV_VR128X(impl(Reg<EFLAGS>) -> 0(Class<VR128X>))  and VCOMXSDZrrb_Int(0(Class<VR128X>) -> impl(Reg<EFLAGS>))  was unsuccessful, EC: ERROR_ILLEGAL_INSTRUCTION
	 assuming VCOMXSDZrrb_Int(0(Class<VR128X>) -> impl(Reg<EFLAGS>))  was the problem and blacklisting it
	Measuring CMOV_VR128X(impl(Reg<EFLAGS>) -> 0(Class<VR128X>))  and VCOMXSHZrr_Int(0(Class<VR128X>) -> impl(Reg<EFLAGS>))  was unsuccessful, EC: ERROR_ILLEGAL_INSTRUCTION
	 assuming VCOMXSHZrr_Int(0(Class<VR128X>) -> impl(Reg<EFLAGS>))  was the problem and blacklisting it
	Measuring CMOV_VR128X(impl(Reg<EFLAGS>) -> 0(Class<VR128X>))  and VCOMXSHZrrb_Int(0(Class<VR128X>) -> impl(Reg<EFLAGS>))  was unsuccessful, EC: ERROR_ILLEGAL_INSTRUCTION
	 assuming VCOMXSHZrrb_Int(0(Class<VR128X>) -> impl(Reg<EFLAGS>))  was the problem and blacklisting it
	Measuring CMOV_VR128X(impl(Reg<EFLAGS>) -> 0(Class<VR128X>))  and VCOMXSSZrr_Int(0(Class<VR128X>) -> impl(Reg<EFLAGS>))  was unsuccessful, EC: ERROR_ILLEGAL_INSTRUCTION
	 assuming VCOMXSSZrr_Int(0(Class<VR128X>) -> impl(Reg<EFLAGS>))  was the problem and blacklisting it
	Measuring CMOV_VR128X(impl(Reg<EFLAGS>) -> 0(Class<VR128X>))  and VCOMXSSZrrb_Int(0(Class<VR128X>) -> impl(Reg<EFLAGS>))  was unsuccessful, EC: ERROR_ILLEGAL_INSTRUCTION
	 assuming VCOMXSSZrrb_Int(0(Class<VR128X>) -> impl(Reg<EFLAGS>))  was the problem and blacklisting it
	Unusual 1 from CMOV_VR128X(impl(Reg<EFLAGS>) -> 0(Class<VR128X>))  and VUCOMISDZrr_Int(1(Class<VR128X>) -> impl(Reg<EFLAGS>)) lower than 2, discarding this result
	Measuring CMOV_VR128X(impl(Reg<EFLAGS>) -> 0(Class<VR128X>))  and VUCOMISHZrr_Int(0(Class<VR128X>) -> impl(Reg<EFLAGS>))  was unsuccessful, EC: ERROR_ILLEGAL_INSTRUCTION
	 assuming VUCOMISHZrr_Int(0(Class<VR128X>) -> impl(Reg<EFLAGS>))  was the problem and blacklisting it
	Measuring CMOV_VR128X(impl(Reg<EFLAGS>) -> 0(Class<VR128X>))  and VUCOMISHZrrb(0(Class<VR128X>) -> impl(Reg<EFLAGS>))  was unsuccessful, EC: ERROR_ILLEGAL_INSTRUCTION
	 assuming VUCOMISHZrrb(0(Class<VR128X>) -> impl(Reg<EFLAGS>))  was the problem and blacklisting it
	Unusual 0.99875 from CMOV_VR128X(impl(Reg<EFLAGS>) -> 0(Class<VR128X>))  and VUCOMISSZrr_Int(1(Class<VR128X>) -> impl(Reg<EFLAGS>)) lower than 2, discarding this result
	Measuring CMOV_VR128X(impl(Reg<EFLAGS>) -> 0(Class<VR128X>))  and VUCOMXSDZrr_Int(0(Class<VR128X>) -> impl(Reg<EFLAGS>))  was unsuccessful, EC: ERROR_ILLEGAL_INSTRUCTION
	 assuming VUCOMXSDZrr_Int(0(Class<VR128X>) -> impl(Reg<EFLAGS>))  was the problem and blacklisting it
	Measuring CMOV_VR128X(impl(Reg<EFLAGS>) -> 0(Class<VR128X>))  and VUCOMXSDZrrb_Int(0(Class<VR128X>) -> impl(Reg<EFLAGS>))  was unsuccessful, EC: ERROR_ILLEGAL_INSTRUCTION
	 assuming VUCOMXSDZrrb_Int(0(Class<VR128X>) -> impl(Reg<EFLAGS>))  was the problem and blacklisting it
	Measuring CMOV_VR128X(impl(Reg<EFLAGS>) -> 0(Class<VR128X>))  and VUCOMXSHZrr_Int(0(Class<VR128X>) -> impl(Reg<EFLAGS>))  was unsuccessful, EC: ERROR_ILLEGAL_INSTRUCTION
	 assuming VUCOMXSHZrr_Int(0(Class<VR128X>) -> impl(Reg<EFLAGS>))  was the problem and blacklisting it
	Measuring CMOV_VR128X(impl(Reg<EFLAGS>) -> 0(Class<VR128X>))  and VUCOMXSHZrrb_Int(0(Class<VR128X>) -> impl(Reg<EFLAGS>))  was unsuccessful, EC: ERROR_ILLEGAL_INSTRUCTION
	 assuming VUCOMXSHZrrb_Int(0(Class<VR128X>) -> impl(Reg<EFLAGS>))  was the problem and blacklisting it
	Measuring CMOV_VR128X(impl(Reg<EFLAGS>) -> 0(Class<VR128X>))  and VUCOMXSSZrr_Int(0(Class<VR128X>) -> impl(Reg<EFLAGS>))  was unsuccessful, EC: ERROR_ILLEGAL_INSTRUCTION
	 assuming VUCOMXSSZrr_Int(0(Class<VR128X>) -> impl(Reg<EFLAGS>))  was the problem and blacklisting it
	Measuring CMOV_VR128X(impl(Reg<EFLAGS>) -> 0(Class<VR128X>))  and VUCOMXSSZrrb_Int(0(Class<VR128X>) -> impl(Reg<EFLAGS>))  was unsuccessful, EC: ERROR_ILLEGAL_INSTRUCTION
	 assuming VUCOMXSSZrrb_Int(0(Class<VR128X>) -> impl(Reg<EFLAGS>))  was the problem and blacklisting it
	Found helper instructions CMOV_VR128X(impl(Reg<EFLAGS>) -> 0(Class<VR128X>))  and VCOMISDZrr_Int(0(Class<VR128X>) -> impl(Reg<EFLAGS>))  with combined latency 1.00125
-----Reg<MXCSR> -> Class<VR128X> and Class<VR128X> -> Reg<MXCSR>-----
	1191 measurements of first Type
	no measurements of type Class<VR128X> -> Reg<MXCSR> so Reg<MXCSR> -> Class<VR128X> can also not be measured
-----Class<VR256> -> Class<VR128> and Class<VR128> -> Class<VR256>-----
	7 measurements of first Type
	33 measurements of reversed Type
	New pair: VCVTPD2PSYrr(1(Class<VR256>) -> 0(Class<VR128>))  VBROADCASTSDYrr(1(Class<VR128>) -> 0(Class<VR256>)) with latency 7.05625
	New pair: VCVTPD2PSYrr(1(Class<VR256>) -> 0(Class<VR128>))  VBROADCASTSSYrr(1(Class<VR128>) -> 0(Class<VR256>)) with latency 7.0475
	New pair: VEXTRACTF128rri(1(Class<VR256>) -> 0(Class<VR128>))  VBROADCASTSSYrr(1(Class<VR128>) -> 0(Class<VR256>)) with latency 4.0375
	New pair: VEXTRACTF128rri(1(Class<VR256>) -> 0(Class<VR128>))  VINSERTI128rri(2(Class<VR128>) -> 0(Class<VR256>)) with latency 4.03625
	New pair: VEXTRACTF128rri(1(Class<VR256>) -> 0(Class<VR128>))  VPBROADCASTWYrr(1(Class<VR128>) -> 0(Class<VR256>)) with latency 4.0325
	Found helper instructions VEXTRACTF128rri(1(Class<VR256>) -> 0(Class<VR128>))  and VPBROADCASTWYrr(1(Class<VR128>) -> 0(Class<VR256>))  with combined latency 4.0325
-----Reg<EFLAGS> -> Class<VR128> and Class<VR128> -> Reg<EFLAGS>-----
	1 measurements of first Type
	40 measurements of reversed Type
	Unusual 0.9975 from CMOV_VR128(impl(Reg<EFLAGS>) -> 0(Class<VR128>))  and COMISDrr_Int(1(Class<VR128>) -> impl(Reg<EFLAGS>)) lower than 2, discarding this result
	Unusual 1.005 from CMOV_VR128(impl(Reg<EFLAGS>) -> 0(Class<VR128>))  and COMISSrr_Int(0(Class<VR128>) -> impl(Reg<EFLAGS>)) lower than 2, discarding this result
	Unusual 1 from CMOV_VR128(impl(Reg<EFLAGS>) -> 0(Class<VR128>))  and PTESTrr(1(Class<VR128>) -> impl(Reg<EFLAGS>)) lower than 2, discarding this result
	Unusual 1.005 from CMOV_VR128(impl(Reg<EFLAGS>) -> 0(Class<VR128>))  and VCOMISDrr_Int(1(Class<VR128>) -> impl(Reg<EFLAGS>)) lower than 2, discarding this result
	Unusual 1 from CMOV_VR128(impl(Reg<EFLAGS>) -> 0(Class<VR128>))  and VCOMISSrr_Int(1(Class<VR128>) -> impl(Reg<EFLAGS>)) lower than 2, discarding this result
	Unusual 0.99875 from CMOV_VR128(impl(Reg<EFLAGS>) -> 0(Class<VR128>))  and VTESTPDrr(1(Class<VR128>) -> impl(Reg<EFLAGS>)) lower than 2, discarding this result
	Found helper instructions CMOV_VR128(impl(Reg<EFLAGS>) -> 0(Class<VR128>))  and COMISDrr_Int(0(Class<VR128>) -> impl(Reg<EFLAGS>))  with combined latency 1.00625
-----Reg<MXCSR> -> Class<VR128> and Class<VR128> -> Reg<MXCSR>-----
	227 measurements of first Type
	no measurements of type Class<VR128> -> Reg<MXCSR> so Reg<MXCSR> -> Class<VR128> can also not be measured
-----Reg<XMM0> -> Class<VR128> and Class<VR128> -> Reg<XMM0>-----
	4 measurements of first Type
	8 measurements of reversed Type
	New pair: PBLENDVBrr0(impl(Reg<XMM0>) -> 0(Class<VR128>))  PCMPESTRMrri(0(Class<VR128>) -> impl(Reg<XMM0>)) with latency 8.09125
	New pair: PBLENDVBrr0(impl(Reg<XMM0>) -> 0(Class<VR128>))  PCMPESTRMrri(1(Class<VR128>) -> impl(Reg<XMM0>)) with latency 8.07
	New pair: PBLENDVBrr0(impl(Reg<XMM0>) -> 0(Class<VR128>))  PCMPISTRMrri(1(Class<VR128>) -> impl(Reg<XMM0>)) with latency 8.06125
	New pair: PBLENDVBrr0(impl(Reg<XMM0>) -> 0(Class<VR128>))  VPCMPESTRMrri(1(Class<VR128>) -> impl(Reg<XMM0>)) with latency 8.0575
	New pair: PBLENDVBrr0(impl(Reg<XMM0>) -> 0(Class<VR128>))  VPCMPISTRMrri(0(Class<VR128>) -> impl(Reg<XMM0>)) with latency 8.04625
	Found helper instructions PBLENDVBrr0(impl(Reg<XMM0>) -> 0(Class<VR128>))  and VPCMPISTRMrri(0(Class<VR128>) -> impl(Reg<XMM0>))  with combined latency 8.04625
-----Class<VK16WM> -> Class<VR256X> and Class<VR256X> -> Class<VK16WM>-----
	368 measurements of first Type
	no measurements of type Class<VR256X> -> Class<VK16WM> so Class<VK16WM> -> Class<VR256X> can also not be measured
-----Class<VK4WM> -> Class<VR256X> and Class<VR256X> -> Class<VK4WM>-----
	398 measurements of first Type
	no measurements of type Class<VR256X> -> Class<VK4WM> so Class<VK4WM> -> Class<VR256X> can also not be measured
-----Class<VK8WM> -> Class<VR256X> and Class<VR256X> -> Class<VK8WM>-----
	474 measurements of first Type
	no measurements of type Class<VR256X> -> Class<VK8WM> so Class<VK8WM> -> Class<VR256X> can also not be measured
-----Class<GR32> -> Class<VR256X> and Class<VR256X> -> Class<GR32>-----
	9 measurements of first Type
	no measurements of type Class<VR256X> -> Class<GR32> so Class<GR32> -> Class<VR256X> can also not be measured
-----Class<VK32WM> -> Class<VR256X> and Class<VR256X> -> Class<VK32WM>-----
	96 measurements of first Type
	no measurements of type Class<VR256X> -> Class<VK32WM> so Class<VK32WM> -> Class<VR256X> can also not be measured
-----Class<GR64> -> Class<VR256X> and Class<VR256X> -> Class<GR64>-----
	3 measurements of first Type
	no measurements of type Class<VR256X> -> Class<GR64> so Class<GR64> -> Class<VR256X> can also not be measured
-----Class<VR512> -> Class<VR256X> and Class<VR256X> -> Class<VR512>-----
	156 measurements of first Type
	117 measurements of reversed Type
	New pair: VCVTNEPS2BF16Zrrkz(2(Class<VR512>) -> 0(Class<VR256X>))  VCVTDQ2PDZrr(1(Class<VR256X>) -> 0(Class<VR512>)) with latency 13.0638
	Measuring VCVTNEPS2BF16Zrrkz(2(Class<VR512>) -> 0(Class<VR256X>))  and VCVTHF82PHZrr(1(Class<VR256X>) -> 0(Class<VR512>))  was unsuccessful, EC: ERROR_ILLEGAL_INSTRUCTION
	 assuming VCVTHF82PHZrr(1(Class<VR256X>) -> 0(Class<VR512>))  was the problem and blacklisting it
	Measuring VCVTNEPS2BF16Zrrkz(2(Class<VR512>) -> 0(Class<VR256X>))  and VCVTHF82PHZrrkz(2(Class<VR256X>) -> 0(Class<VR512>))  was unsuccessful, EC: ERROR_ILLEGAL_INSTRUCTION
	 assuming VCVTHF82PHZrrkz(2(Class<VR256X>) -> 0(Class<VR512>))  was the problem and blacklisting it
	Measuring VCVTNEPS2BF16Zrrkz(2(Class<VR512>) -> 0(Class<VR256X>))  and VCVTPH2DQZrr(1(Class<VR256X>) -> 0(Class<VR512>))  was unsuccessful, EC: ERROR_ILLEGAL_INSTRUCTION
	 assuming VCVTPH2DQZrr(1(Class<VR256X>) -> 0(Class<VR512>))  was the problem and blacklisting it
	Measuring VCVTNEPS2BF16Zrrkz(2(Class<VR512>) -> 0(Class<VR256X>))  and VCVTPH2DQZrrb(1(Class<VR256X>) -> 0(Class<VR512>))  was unsuccessful, EC: ERROR_ILLEGAL_INSTRUCTION
	 assuming VCVTPH2DQZrrb(1(Class<VR256X>) -> 0(Class<VR512>))  was the problem and blacklisting it
	Measuring VCVTNEPS2BF16Zrrkz(2(Class<VR512>) -> 0(Class<VR256X>))  and VCVTPH2DQZrrbkz(2(Class<VR256X>) -> 0(Class<VR512>))  was unsuccessful, EC: ERROR_ILLEGAL_INSTRUCTION
	 assuming VCVTPH2DQZrrbkz(2(Class<VR256X>) -> 0(Class<VR512>))  was the problem and blacklisting it
	Measuring VCVTNEPS2BF16Zrrkz(2(Class<VR512>) -> 0(Class<VR256X>))  and VCVTPH2DQZrrkz(2(Class<VR256X>) -> 0(Class<VR512>))  was unsuccessful, EC: ERROR_ILLEGAL_INSTRUCTION
	 assuming VCVTPH2DQZrrkz(2(Class<VR256X>) -> 0(Class<VR512>))  was the problem and blacklisting it
	Measuring VCVTNEPS2BF16Zrrkz(2(Class<VR512>) -> 0(Class<VR256X>))  and VCVTPH2PSXZrr(1(Class<VR256X>) -> 0(Class<VR512>))  was unsuccessful, EC: ERROR_ILLEGAL_INSTRUCTION
	 assuming VCVTPH2PSXZrr(1(Class<VR256X>) -> 0(Class<VR512>))  was the problem and blacklisting it
	Measuring VCVTNEPS2BF16Zrrkz(2(Class<VR512>) -> 0(Class<VR256X>))  and VCVTPH2PSXZrrb(1(Class<VR256X>) -> 0(Class<VR512>))  was unsuccessful, EC: ERROR_ILLEGAL_INSTRUCTION
	 assuming VCVTPH2PSXZrrb(1(Class<VR256X>) -> 0(Class<VR512>))  was the problem and blacklisting it
	Measuring VCVTNEPS2BF16Zrrkz(2(Class<VR512>) -> 0(Class<VR256X>))  and VCVTPH2PSXZrrbkz(2(Class<VR256X>) -> 0(Class<VR512>))  was unsuccessful, EC: ERROR_ILLEGAL_INSTRUCTION
	 assuming VCVTPH2PSXZrrbkz(2(Class<VR256X>) -> 0(Class<VR512>))  was the problem and blacklisting it
	Measuring VCVTNEPS2BF16Zrrkz(2(Class<VR512>) -> 0(Class<VR256X>))  and VCVTPH2PSXZrrkz(2(Class<VR256X>) -> 0(Class<VR512>))  was unsuccessful, EC: ERROR_ILLEGAL_INSTRUCTION
	 assuming VCVTPH2PSXZrrkz(2(Class<VR256X>) -> 0(Class<VR512>))  was the problem and blacklisting it
	Measuring VCVTNEPS2BF16Zrrkz(2(Class<VR512>) -> 0(Class<VR256X>))  and VCVTPH2UDQZrr(1(Class<VR256X>) -> 0(Class<VR512>))  was unsuccessful, EC: ERROR_ILLEGAL_INSTRUCTION
	 assuming VCVTPH2UDQZrr(1(Class<VR256X>) -> 0(Class<VR512>))  was the problem and blacklisting it
	Measuring VCVTNEPS2BF16Zrrkz(2(Class<VR512>) -> 0(Class<VR256X>))  and VCVTPH2UDQZrrb(1(Class<VR256X>) -> 0(Class<VR512>))  was unsuccessful, EC: ERROR_ILLEGAL_INSTRUCTION
	 assuming VCVTPH2UDQZrrb(1(Class<VR256X>) -> 0(Class<VR512>))  was the problem and blacklisting it
	Measuring VCVTNEPS2BF16Zrrkz(2(Class<VR512>) -> 0(Class<VR256X>))  and VCVTPH2UDQZrrbkz(2(Class<VR256X>) -> 0(Class<VR512>))  was unsuccessful, EC: ERROR_ILLEGAL_INSTRUCTION
	 assuming VCVTPH2UDQZrrbkz(2(Class<VR256X>) -> 0(Class<VR512>))  was the problem and blacklisting it
	Measuring VCVTNEPS2BF16Zrrkz(2(Class<VR512>) -> 0(Class<VR256X>))  and VCVTPH2UDQZrrkz(2(Class<VR256X>) -> 0(Class<VR512>))  was unsuccessful, EC: ERROR_ILLEGAL_INSTRUCTION
	 assuming VCVTPH2UDQZrrkz(2(Class<VR256X>) -> 0(Class<VR512>))  was the problem and blacklisting it
	New pair: VCVTNEPS2BF16Zrrkz(2(Class<VR512>) -> 0(Class<VR256X>))  VCVTPS2QQZrrb(1(Class<VR256X>) -> 0(Class<VR512>)) with latency 13.055
	New pair: VCVTPD2PSZrrk(3(Class<VR512>) -> 0(Class<VR256X>))  VCVTPS2QQZrrb(1(Class<VR256X>) -> 0(Class<VR512>)) with latency 13.05
	Measuring VCVTPD2PSZrrk(3(Class<VR512>) -> 0(Class<VR256X>))  and VCVTTPH2DQZrr(1(Class<VR256X>) -> 0(Class<VR512>))  was unsuccessful, EC: ERROR_ILLEGAL_INSTRUCTION
	 assuming VCVTTPH2DQZrr(1(Class<VR256X>) -> 0(Class<VR512>))  was the problem and blacklisting it
	Measuring VCVTPD2PSZrrk(3(Class<VR512>) -> 0(Class<VR256X>))  and VCVTTPH2DQZrrb(1(Class<VR256X>) -> 0(Class<VR512>))  was unsuccessful, EC: ERROR_ILLEGAL_INSTRUCTION
	 assuming VCVTTPH2DQZrrb(1(Class<VR256X>) -> 0(Class<VR512>))  was the problem and blacklisting it
	Measuring VCVTPD2PSZrrk(3(Class<VR512>) -> 0(Class<VR256X>))  and VCVTTPH2DQZrrbkz(2(Class<VR256X>) -> 0(Class<VR512>))  was unsuccessful, EC: ERROR_ILLEGAL_INSTRUCTION
	 assuming VCVTTPH2DQZrrbkz(2(Class<VR256X>) -> 0(Class<VR512>))  was the problem and blacklisting it
	Measuring VCVTPD2PSZrrk(3(Class<VR512>) -> 0(Class<VR256X>))  and VCVTTPH2DQZrrkz(2(Class<VR256X>) -> 0(Class<VR512>))  was unsuccessful, EC: ERROR_ILLEGAL_INSTRUCTION
	 assuming VCVTTPH2DQZrrkz(2(Class<VR256X>) -> 0(Class<VR512>))  was the problem and blacklisting it
	Measuring VCVTPD2PSZrrk(3(Class<VR512>) -> 0(Class<VR256X>))  and VCVTTPH2UDQZrr(1(Class<VR256X>) -> 0(Class<VR512>))  was unsuccessful, EC: ERROR_ILLEGAL_INSTRUCTION
	 assuming VCVTTPH2UDQZrr(1(Class<VR256X>) -> 0(Class<VR512>))  was the problem and blacklisting it
	Measuring VCVTPD2PSZrrk(3(Class<VR512>) -> 0(Class<VR256X>))  and VCVTTPH2UDQZrrb(1(Class<VR256X>) -> 0(Class<VR512>))  was unsuccessful, EC: ERROR_ILLEGAL_INSTRUCTION
	 assuming VCVTTPH2UDQZrrb(1(Class<VR256X>) -> 0(Class<VR512>))  was the problem and blacklisting it
	Measuring VCVTPD2PSZrrk(3(Class<VR512>) -> 0(Class<VR256X>))  and VCVTTPH2UDQZrrbkz(2(Class<VR256X>) -> 0(Class<VR512>))  was unsuccessful, EC: ERROR_ILLEGAL_INSTRUCTION
	 assuming VCVTTPH2UDQZrrbkz(2(Class<VR256X>) -> 0(Class<VR512>))  was the problem and blacklisting it
	Measuring VCVTPD2PSZrrk(3(Class<VR512>) -> 0(Class<VR256X>))  and VCVTTPH2UDQZrrkz(2(Class<VR256X>) -> 0(Class<VR512>))  was unsuccessful, EC: ERROR_ILLEGAL_INSTRUCTION
	 assuming VCVTTPH2UDQZrrkz(2(Class<VR256X>) -> 0(Class<VR512>))  was the problem and blacklisting it
	Measuring VCVTPD2PSZrrk(3(Class<VR512>) -> 0(Class<VR256X>))  and VCVTTPS2QQSZrr(1(Class<VR256X>) -> 0(Class<VR512>))  was unsuccessful, EC: ERROR_ILLEGAL_INSTRUCTION
	 assuming VCVTTPS2QQSZrr(1(Class<VR256X>) -> 0(Class<VR512>))  was the problem and blacklisting it
	Measuring VCVTPD2PSZrrk(3(Class<VR512>) -> 0(Class<VR256X>))  and VCVTTPS2QQSZrrb(1(Class<VR256X>) -> 0(Class<VR512>))  was unsuccessful, EC: ERROR_ILLEGAL_INSTRUCTION
	 assuming VCVTTPS2QQSZrrb(1(Class<VR256X>) -> 0(Class<VR512>))  was the problem and blacklisting it
	Measuring VCVTPD2PSZrrk(3(Class<VR512>) -> 0(Class<VR256X>))  and VCVTTPS2QQSZrrbkz(2(Class<VR256X>) -> 0(Class<VR512>))  was unsuccessful, EC: ERROR_ILLEGAL_INSTRUCTION
	 assuming VCVTTPS2QQSZrrbkz(2(Class<VR256X>) -> 0(Class<VR512>))  was the problem and blacklisting it
	Measuring VCVTPD2PSZrrk(3(Class<VR512>) -> 0(Class<VR256X>))  and VCVTTPS2QQSZrrkz(2(Class<VR256X>) -> 0(Class<VR512>))  was unsuccessful, EC: ERROR_ILLEGAL_INSTRUCTION
	 assuming VCVTTPS2QQSZrrkz(2(Class<VR256X>) -> 0(Class<VR512>))  was the problem and blacklisting it
	Measuring VCVTPD2PSZrrk(3(Class<VR512>) -> 0(Class<VR256X>))  and VCVTTPS2UQQSZrr(1(Class<VR256X>) -> 0(Class<VR512>))  was unsuccessful, EC: ERROR_ILLEGAL_INSTRUCTION
	 assuming VCVTTPS2UQQSZrr(1(Class<VR256X>) -> 0(Class<VR512>))  was the problem and blacklisting it
	Measuring VCVTPD2PSZrrk(3(Class<VR512>) -> 0(Class<VR256X>))  and VCVTTPS2UQQSZrrb(1(Class<VR256X>) -> 0(Class<VR512>))  was unsuccessful, EC: ERROR_ILLEGAL_INSTRUCTION
	 assuming VCVTTPS2UQQSZrrb(1(Class<VR256X>) -> 0(Class<VR512>))  was the problem and blacklisting it
	Measuring VCVTPD2PSZrrk(3(Class<VR512>) -> 0(Class<VR256X>))  and VCVTTPS2UQQSZrrbkz(2(Class<VR256X>) -> 0(Class<VR512>))  was unsuccessful, EC: ERROR_ILLEGAL_INSTRUCTION
	 assuming VCVTTPS2UQQSZrrbkz(2(Class<VR256X>) -> 0(Class<VR512>))  was the problem and blacklisting it
	Measuring VCVTPD2PSZrrk(3(Class<VR512>) -> 0(Class<VR256X>))  and VCVTTPS2UQQSZrrkz(2(Class<VR256X>) -> 0(Class<VR512>))  was unsuccessful, EC: ERROR_ILLEGAL_INSTRUCTION
	 assuming VCVTTPS2UQQSZrrkz(2(Class<VR256X>) -> 0(Class<VR512>))  was the problem and blacklisting it
	New pair: VCVTPD2PSZrrk(3(Class<VR512>) -> 0(Class<VR256X>))  VINSERTF32X8Zrri(2(Class<VR256X>) -> 0(Class<VR512>)) with latency 8.40625
	New pair: VCVTPD2PSZrrkz(2(Class<VR512>) -> 0(Class<VR256X>))  VINSERTF32X8Zrri(2(Class<VR256X>) -> 0(Class<VR512>)) with latency 8.39125
	New pair: VCVTPD2PSZrrkz(2(Class<VR512>) -> 0(Class<VR256X>))  VINSERTF64X4Zrri(2(Class<VR256X>) -> 0(Class<VR512>)) with latency 8.385
	Measuring VCVTPH2BF8SZrr(1(Class<VR512>) -> 0(Class<VR256X>))  and VINSERTF64X4Zrri(2(Class<VR256X>) -> 0(Class<VR512>))  was unsuccessful, EC: ERROR_ILLEGAL_INSTRUCTION
	 assuming VCVTPH2BF8SZrr(1(Class<VR512>) -> 0(Class<VR256X>))  was the problem and blacklisting it
	Measuring VCVTPH2BF8SZrrkz(2(Class<VR512>) -> 0(Class<VR256X>))  and VINSERTF64X4Zrri(2(Class<VR256X>) -> 0(Class<VR512>))  was unsuccessful, EC: ERROR_ILLEGAL_INSTRUCTION
	 assuming VCVTPH2BF8SZrrkz(2(Class<VR512>) -> 0(Class<VR256X>))  was the problem and blacklisting it
	Measuring VCVTPH2BF8Zrr(1(Class<VR512>) -> 0(Class<VR256X>))  and VINSERTF64X4Zrri(2(Class<VR256X>) -> 0(Class<VR512>))  was unsuccessful, EC: ERROR_ILLEGAL_INSTRUCTION
	 assuming VCVTPH2BF8Zrr(1(Class<VR512>) -> 0(Class<VR256X>))  was the problem and blacklisting it
	Measuring VCVTPH2BF8Zrrkz(2(Class<VR512>) -> 0(Class<VR256X>))  and VINSERTF64X4Zrri(2(Class<VR256X>) -> 0(Class<VR512>))  was unsuccessful, EC: ERROR_ILLEGAL_INSTRUCTION
	 assuming VCVTPH2BF8Zrrkz(2(Class<VR512>) -> 0(Class<VR256X>))  was the problem and blacklisting it
	Measuring VCVTPH2HF8SZrr(1(Class<VR512>) -> 0(Class<VR256X>))  and VINSERTF64X4Zrri(2(Class<VR256X>) -> 0(Class<VR512>))  was unsuccessful, EC: ERROR_ILLEGAL_INSTRUCTION
	 assuming VCVTPH2HF8SZrr(1(Class<VR512>) -> 0(Class<VR256X>))  was the problem and blacklisting it
	Measuring VCVTPH2HF8SZrrkz(2(Class<VR512>) -> 0(Class<VR256X>))  and VINSERTF64X4Zrri(2(Class<VR256X>) -> 0(Class<VR512>))  was unsuccessful, EC: ERROR_ILLEGAL_INSTRUCTION
	 assuming VCVTPH2HF8SZrrkz(2(Class<VR512>) -> 0(Class<VR256X>))  was the problem and blacklisting it
	Measuring VCVTPH2HF8Zrr(1(Class<VR512>) -> 0(Class<VR256X>))  and VINSERTF64X4Zrri(2(Class<VR256X>) -> 0(Class<VR512>))  was unsuccessful, EC: ERROR_ILLEGAL_INSTRUCTION
	 assuming VCVTPH2HF8Zrr(1(Class<VR512>) -> 0(Class<VR256X>))  was the problem and blacklisting it
	Measuring VCVTPH2HF8Zrrkz(2(Class<VR512>) -> 0(Class<VR256X>))  and VINSERTF64X4Zrri(2(Class<VR256X>) -> 0(Class<VR512>))  was unsuccessful, EC: ERROR_ILLEGAL_INSTRUCTION
	 assuming VCVTPH2HF8Zrrkz(2(Class<VR512>) -> 0(Class<VR256X>))  was the problem and blacklisting it
	Measuring VCVTPS2PHXZrr(1(Class<VR512>) -> 0(Class<VR256X>))  and VINSERTF64X4Zrri(2(Class<VR256X>) -> 0(Class<VR512>))  was unsuccessful, EC: ERROR_ILLEGAL_INSTRUCTION
	 assuming VCVTPS2PHXZrr(1(Class<VR512>) -> 0(Class<VR256X>))  was the problem and blacklisting it
	Measuring VCVTPS2PHXZrrb(1(Class<VR512>) -> 0(Class<VR256X>))  and VINSERTF64X4Zrri(2(Class<VR256X>) -> 0(Class<VR512>))  was unsuccessful, EC: ERROR_ILLEGAL_INSTRUCTION
	 assuming VCVTPS2PHXZrrb(1(Class<VR512>) -> 0(Class<VR256X>))  was the problem and blacklisting it
	Measuring VCVTPS2PHXZrrbkz(2(Class<VR512>) -> 0(Class<VR256X>))  and VINSERTF64X4Zrri(2(Class<VR256X>) -> 0(Class<VR512>))  was unsuccessful, EC: ERROR_ILLEGAL_INSTRUCTION
	 assuming VCVTPS2PHXZrrbkz(2(Class<VR512>) -> 0(Class<VR256X>))  was the problem and blacklisting it
	Measuring VCVTPS2PHXZrrkz(2(Class<VR512>) -> 0(Class<VR256X>))  and VINSERTF64X4Zrri(2(Class<VR256X>) -> 0(Class<VR512>))  was unsuccessful, EC: ERROR_ILLEGAL_INSTRUCTION
	 assuming VCVTPS2PHXZrrkz(2(Class<VR512>) -> 0(Class<VR256X>))  was the problem and blacklisting it
	New pair: VCVTPS2PHZrrbkz(2(Class<VR512>) -> 0(Class<VR256X>))  VINSERTF64X4Zrri(2(Class<VR256X>) -> 0(Class<VR512>)) with latency 8.3825
	New pair: VCVTQQ2PSZrrkz(2(Class<VR512>) -> 0(Class<VR256X>))  VINSERTF64X4Zrri(2(Class<VR256X>) -> 0(Class<VR512>)) with latency 8.38125
	Measuring VCVTTPD2DQSZrr(1(Class<VR512>) -> 0(Class<VR256X>))  and VINSERTF64X4Zrri(2(Class<VR256X>) -> 0(Class<VR512>))  was unsuccessful, EC: ERROR_ILLEGAL_INSTRUCTION
	 assuming VCVTTPD2DQSZrr(1(Class<VR512>) -> 0(Class<VR256X>))  was the problem and blacklisting it
	Measuring VCVTTPD2DQSZrrb(1(Class<VR512>) -> 0(Class<VR256X>))  and VINSERTF64X4Zrri(2(Class<VR256X>) -> 0(Class<VR512>))  was unsuccessful, EC: ERROR_ILLEGAL_INSTRUCTION
	 assuming VCVTTPD2DQSZrrb(1(Class<VR512>) -> 0(Class<VR256X>))  was the problem and blacklisting it
	Measuring VCVTTPD2DQSZrrbkz(2(Class<VR512>) -> 0(Class<VR256X>))  and VINSERTF64X4Zrri(2(Class<VR256X>) -> 0(Class<VR512>))  was unsuccessful, EC: ERROR_ILLEGAL_INSTRUCTION
	 assuming VCVTTPD2DQSZrrbkz(2(Class<VR512>) -> 0(Class<VR256X>))  was the problem and blacklisting it
	Measuring VCVTTPD2DQSZrrkz(2(Class<VR512>) -> 0(Class<VR256X>))  and VINSERTF64X4Zrri(2(Class<VR256X>) -> 0(Class<VR512>))  was unsuccessful, EC: ERROR_ILLEGAL_INSTRUCTION
	 assuming VCVTTPD2DQSZrrkz(2(Class<VR512>) -> 0(Class<VR256X>))  was the problem and blacklisting it
	New pair: VCVTTPD2DQZrrbkz(2(Class<VR512>) -> 0(Class<VR256X>))  VINSERTF64X4Zrri(2(Class<VR256X>) -> 0(Class<VR512>)) with latency 8.38
	Measuring VCVTTPD2UDQSZrr(1(Class<VR512>) -> 0(Class<VR256X>))  and VINSERTF64X4Zrri(2(Class<VR256X>) -> 0(Class<VR512>))  was unsuccessful, EC: ERROR_ILLEGAL_INSTRUCTION
	 assuming VCVTTPD2UDQSZrr(1(Class<VR512>) -> 0(Class<VR256X>))  was the problem and blacklisting it
	Measuring VCVTTPD2UDQSZrrb(1(Class<VR512>) -> 0(Class<VR256X>))  and VINSERTF64X4Zrri(2(Class<VR256X>) -> 0(Class<VR512>))  was unsuccessful, EC: ERROR_ILLEGAL_INSTRUCTION
	 assuming VCVTTPD2UDQSZrrb(1(Class<VR512>) -> 0(Class<VR256X>))  was the problem and blacklisting it
	Measuring VCVTTPD2UDQSZrrbkz(2(Class<VR512>) -> 0(Class<VR256X>))  and VINSERTF64X4Zrri(2(Class<VR256X>) -> 0(Class<VR512>))  was unsuccessful, EC: ERROR_ILLEGAL_INSTRUCTION
	 assuming VCVTTPD2UDQSZrrbkz(2(Class<VR512>) -> 0(Class<VR256X>))  was the problem and blacklisting it
	Measuring VCVTTPD2UDQSZrrkz(2(Class<VR512>) -> 0(Class<VR256X>))  and VINSERTF64X4Zrri(2(Class<VR256X>) -> 0(Class<VR512>))  was unsuccessful, EC: ERROR_ILLEGAL_INSTRUCTION
	 assuming VCVTTPD2UDQSZrrkz(2(Class<VR512>) -> 0(Class<VR256X>))  was the problem and blacklisting it
	New pair: VCVTTPD2UDQZrr(1(Class<VR512>) -> 0(Class<VR256X>))  VINSERTF64X4Zrri(2(Class<VR256X>) -> 0(Class<VR512>)) with latency 8.365
	Measuring VCVTUDQ2PHZrr(1(Class<VR512>) -> 0(Class<VR256X>))  and VINSERTF64X4Zrri(2(Class<VR256X>) -> 0(Class<VR512>))  was unsuccessful, EC: ERROR_ILLEGAL_INSTRUCTION
	 assuming VCVTUDQ2PHZrr(1(Class<VR512>) -> 0(Class<VR256X>))  was the problem and blacklisting it
	Measuring VCVTUDQ2PHZrrb(1(Class<VR512>) -> 0(Class<VR256X>))  and VINSERTF64X4Zrri(2(Class<VR256X>) -> 0(Class<VR512>))  was unsuccessful, EC: ERROR_ILLEGAL_INSTRUCTION
	 assuming VCVTUDQ2PHZrrb(1(Class<VR512>) -> 0(Class<VR256X>))  was the problem and blacklisting it
	Measuring VCVTUDQ2PHZrrbkz(2(Class<VR512>) -> 0(Class<VR256X>))  and VINSERTF64X4Zrri(2(Class<VR256X>) -> 0(Class<VR512>))  was unsuccessful, EC: ERROR_ILLEGAL_INSTRUCTION
	 assuming VCVTUDQ2PHZrrbkz(2(Class<VR512>) -> 0(Class<VR256X>))  was the problem and blacklisting it
	Measuring VCVTUDQ2PHZrrkz(2(Class<VR512>) -> 0(Class<VR256X>))  and VINSERTF64X4Zrri(2(Class<VR256X>) -> 0(Class<VR512>))  was unsuccessful, EC: ERROR_ILLEGAL_INSTRUCTION
	 assuming VCVTUDQ2PHZrrkz(2(Class<VR512>) -> 0(Class<VR256X>))  was the problem and blacklisting it
	New pair: VEXTRACTF32X8Zrri(1(Class<VR512>) -> 0(Class<VR256X>))  VINSERTF64X4Zrri(2(Class<VR256X>) -> 0(Class<VR512>)) with latency 5.0375
	New pair: VPMOVDWZrr(1(Class<VR512>) -> 0(Class<VR256X>))  VINSERTF64X4Zrri(2(Class<VR256X>) -> 0(Class<VR512>)) with latency 5.025
	Found helper instructions VPMOVDWZrr(1(Class<VR512>) -> 0(Class<VR256X>))  and VINSERTF64X4Zrri(2(Class<VR256X>) -> 0(Class<VR512>))  with combined latency 5.025
-----Reg<EFLAGS> -> Class<VR256X> and Class<VR256X> -> Reg<EFLAGS>-----
	1 measurements of first Type
	no measurements of type Class<VR256X> -> Reg<EFLAGS> so Reg<EFLAGS> -> Class<VR256X> can also not be measured
-----Reg<MXCSR> -> Class<VR256X> and Class<VR256X> -> Reg<MXCSR>-----
	936 measurements of first Type
	no measurements of type Class<VR256X> -> Reg<MXCSR> so Reg<MXCSR> -> Class<VR256X> can also not be measured
-----Reg<EFLAGS> -> Class<VR256> and Class<VR256> -> Reg<EFLAGS>-----
	1 measurements of first Type
	6 measurements of reversed Type
	Found helper instructions CMOV_VR256(impl(Reg<EFLAGS>) -> 0(Class<VR256>))  and VPTESTYrr(0(Class<VR256>) -> impl(Reg<EFLAGS>))  with combined latency 1
-----Reg<MXCSR> -> Class<VR256> and Class<VR256> -> Reg<MXCSR>-----
	94 measurements of first Type
	no measurements of type Class<VR256> -> Reg<MXCSR> so Reg<MXCSR> -> Class<VR256> can also not be measured
-----Class<VK16WM> -> Class<VR512> and Class<VR512> -> Class<VK16WM>-----
	444 measurements of first Type
	no measurements of type Class<VR512> -> Class<VK16WM> so Class<VK16WM> -> Class<VR512> can also not be measured
-----Class<VK8WM> -> Class<VR512> and Class<VR512> -> Class<VK8WM>-----
	410 measurements of first Type
	no measurements of type Class<VR512> -> Class<VK8WM> so Class<VK8WM> -> Class<VR512> can also not be measured
-----Class<GR32> -> Class<VR512> and Class<VR512> -> Class<GR32>-----
	15 measurements of first Type
	no measurements of type Class<VR512> -> Class<GR32> so Class<GR32> -> Class<VR512> can also not be measured
-----Class<VK32WM> -> Class<VR512> and Class<VR512> -> Class<VK32WM>-----
	344 measurements of first Type
	no measurements of type Class<VR512> -> Class<VK32WM> so Class<VK32WM> -> Class<VR512> can also not be measured
-----Class<GR64> -> Class<VR512> and Class<VR512> -> Class<GR64>-----
	3 measurements of first Type
	no measurements of type Class<VR512> -> Class<GR64> so Class<GR64> -> Class<VR512> can also not be measured
-----Class<VK64WM> -> Class<VR512> and Class<VR512> -> Class<VK64WM>-----
	74 measurements of first Type
	no measurements of type Class<VR512> -> Class<VK64WM> so Class<VK64WM> -> Class<VR512> can also not be measured
-----Class<TILE> -> Class<VR512> and Class<VR512> -> Class<TILE>-----
	12 measurements of first Type
	no measurements of type Class<VR512> -> Class<TILE> so Class<TILE> -> Class<VR512> can also not be measured
-----Reg<EFLAGS> -> Class<VR512> and Class<VR512> -> Reg<EFLAGS>-----
	1 measurements of first Type
	no measurements of type Class<VR512> -> Reg<EFLAGS> so Reg<EFLAGS> -> Class<VR512> can also not be measured
-----Reg<MXCSR> -> Class<VR512> and Class<VR512> -> Reg<MXCSR>-----
	936 measurements of first Type
	no measurements of type Class<VR512> -> Reg<MXCSR> so Reg<MXCSR> -> Class<VR512> can also not be measured
-----Class<GR8> -> Reg<AH> and Reg<AH> -> Class<GR8>-----
	6 measurements of first Type
	no measurements of type Reg<AH> -> Class<GR8> so Class<GR8> -> Reg<AH> can also not be measured
-----Reg<AX> -> Reg<AH> and Reg<AH> -> Reg<AX>-----
	6 measurements of first Type
	no measurements of type Reg<AH> -> Reg<AX> so Reg<AX> -> Reg<AH> can also not be measured
-----Reg<EFLAGS> -> Reg<AH> and Reg<AH> -> Reg<EFLAGS>-----
	1 measurements of first Type
	1 measurements of reversed Type
	Found helper instructions LAHF(impl(Reg<EFLAGS>) -> impl(Reg<AH>))  and SAHF(impl(Reg<AH>) -> impl(Reg<EFLAGS>))  with combined latency 2.0175
-----Reg<AX> -> Reg<AL> and Reg<AL> -> Reg<AX>-----
	6 measurements of first Type
	10 measurements of reversed Type
	no measurement of type Reg<AX> -> Reg<AL> can be executed successfully
-----Reg<DF> -> Reg<AL> and Reg<AL> -> Reg<DF>-----
	1 measurements of first Type
	no measurements of type Reg<AL> -> Reg<DF> so Reg<DF> -> Reg<AL> can also not be measured
-----Reg<DX> -> Reg<AL> and Reg<AL> -> Reg<DX>-----
	1 measurements of first Type
	no measurements of type Reg<AL> -> Reg<DX> so Reg<DX> -> Reg<AL> can also not be measured
-----Reg<EFLAGS> -> Reg<AL> and Reg<AL> -> Reg<EFLAGS>-----
	5 measurements of first Type
	20 measurements of reversed Type
	Measuring SALC(impl(Reg<EFLAGS>) -> impl(Reg<AL>))  and ADC8i8(impl(Reg<AL>) -> impl(Reg<EFLAGS>))  was unsuccessful, EC: ERROR_ASSEMBLY
	 assuming SALC(impl(Reg<EFLAGS>) -> impl(Reg<AL>))  was the problem and blacklisting it
	Detected multiple dependencys between SBB8i8(impl(Reg<EFLAGS>) -> impl(Reg<AL>))  and ADC8i8(impl(Reg<AL>) -> impl(Reg<EFLAGS>)) so result of their combination will not be considered for finding helpers
	Detected multiple dependencys between ADC8i8(impl(Reg<EFLAGS>) -> impl(Reg<AL>))  and ADD8i8(impl(Reg<AL>) -> impl(Reg<EFLAGS>)) so result of their combination will not be considered for finding helpers
	Detected multiple dependencys between ADC8i8(impl(Reg<EFLAGS>) -> impl(Reg<AL>))  and AND8i8(impl(Reg<AL>) -> impl(Reg<EFLAGS>)) so result of their combination will not be considered for finding helpers
	New pair: ADC8i8(impl(Reg<EFLAGS>) -> impl(Reg<AL>))  CMP8i8(impl(Reg<AL>) -> impl(Reg<EFLAGS>)) with latency 2.0175
	Found helper instructions ADC8i8(impl(Reg<EFLAGS>) -> impl(Reg<AL>))  and CMP8i8(impl(Reg<AL>) -> impl(Reg<EFLAGS>))  with combined latency 2.0175
-----Reg<ESI> -> Reg<AL> and Reg<AL> -> Reg<ESI>-----
	1 measurements of first Type
	no measurements of type Reg<AL> -> Reg<ESI> so Reg<ESI> -> Reg<AL> can also not be measured
-----Class<GR8> -> Reg<AX> and Reg<AX> -> Class<GR8>-----
	6 measurements of first Type
	no measurements of type Reg<AX> -> Class<GR8> so Class<GR8> -> Reg<AX> can also not be measured
-----Reg<DF> -> Reg<AX> and Reg<AX> -> Reg<DF>-----
	1 measurements of first Type
	no measurements of type Reg<AX> -> Reg<DF> so Reg<DF> -> Reg<AX> can also not be measured
-----Reg<DX> -> Reg<AX> and Reg<AX> -> Reg<DX>-----
	7 measurements of first Type
	13 measurements of reversed Type
	no measurement of type Reg<DX> -> Reg<AX> can be executed successfully
-----Reg<EFLAGS> -> Reg<AX> and Reg<AX> -> Reg<EFLAGS>-----
	4 measurements of first Type
	24 measurements of reversed Type
	Detected multiple dependencys between SBB16i16(impl(Reg<EFLAGS>) -> impl(Reg<AX>))  and ADC16i16(impl(Reg<AX>) -> impl(Reg<EFLAGS>)) so result of their combination will not be considered for finding helpers
	Detected multiple dependencys between ADC16i16(impl(Reg<EFLAGS>) -> impl(Reg<AX>))  and ADD16i16(impl(Reg<AX>) -> impl(Reg<EFLAGS>)) so result of their combination will not be considered for finding helpers
	Detected multiple dependencys between ADC16i16(impl(Reg<EFLAGS>) -> impl(Reg<AX>))  and AND16i16(impl(Reg<AX>) -> impl(Reg<EFLAGS>)) so result of their combination will not be considered for finding helpers
	Detected multiple dependencys between ADC16i16(impl(Reg<EFLAGS>) -> impl(Reg<AX>))  and CMPXCHG16rr(impl(Reg<AX>) -> impl(Reg<EFLAGS>)) so result of their combination will not be considered for finding helpers
	Detected multiple dependencys between ADC16i16(impl(Reg<EFLAGS>) -> impl(Reg<AX>))  and IMUL16r(impl(Reg<AX>) -> impl(Reg<EFLAGS>)) so result of their combination will not be considered for finding helpers
	Detected multiple dependencys between ADC16i16(impl(Reg<EFLAGS>) -> impl(Reg<AX>))  and MUL16r(impl(Reg<AX>) -> impl(Reg<EFLAGS>)) so result of their combination will not be considered for finding helpers
	Detected multiple dependencys between ADC16i16(impl(Reg<EFLAGS>) -> impl(Reg<AX>))  and OR16i16(impl(Reg<AX>) -> impl(Reg<EFLAGS>)) so result of their combination will not be considered for finding helpers
	Detected multiple dependencys between ADC16i16(impl(Reg<EFLAGS>) -> impl(Reg<AX>))  and SBB16i16(impl(Reg<AX>) -> impl(Reg<EFLAGS>)) so result of their combination will not be considered for finding helpers
	Detected multiple dependencys between ADC16i16(impl(Reg<EFLAGS>) -> impl(Reg<AX>))  and SUB16i16(impl(Reg<AX>) -> impl(Reg<EFLAGS>)) so result of their combination will not be considered for finding helpers
	Detected multiple dependencys between ADC16i16(impl(Reg<EFLAGS>) -> impl(Reg<AX>))  and XOR16i16(impl(Reg<AX>) -> impl(Reg<EFLAGS>)) so result of their combination will not be considered for finding helpers
	Found helper instructions ADC16i16(impl(Reg<EFLAGS>) -> impl(Reg<AX>))  and ADC16i16(impl(Reg<AX>) -> impl(Reg<EFLAGS>))  with combined latency 2.01625
-----Reg<ESI> -> Reg<AX> and Reg<AX> -> Reg<ESI>-----
	1 measurements of first Type
	no measurements of type Reg<AX> -> Reg<ESI> so Reg<ESI> -> Reg<AX> can also not be measured
-----Reg<ESP> -> Reg<DF> and Reg<DF> -> Reg<ESP>-----
	3 measurements of first Type
	no measurements of type Reg<DF> -> Reg<ESP> so Reg<ESP> -> Reg<DF> can also not be measured
-----Reg<RSP> -> Reg<DF> and Reg<DF> -> Reg<RSP>-----
	5 measurements of first Type
	no measurements of type Reg<DF> -> Reg<RSP> so Reg<RSP> -> Reg<DF> can also not be measured
-----Reg<SSP> -> Reg<DF> and Reg<DF> -> Reg<SSP>-----
	8 measurements of first Type
	no measurements of type Reg<DF> -> Reg<SSP> so Reg<SSP> -> Reg<DF> can also not be measured
-----Class<GR16> -> Reg<DX> and Reg<DX> -> Class<GR16>-----
	12 measurements of first Type
	no measurements of type Reg<DX> -> Class<GR16> so Class<GR16> -> Reg<DX> can also not be measured
-----Reg<AX> -> Reg<EAX> and Reg<EAX> -> Reg<AX>-----
	1 measurements of first Type
	no measurements of type Reg<EAX> -> Reg<AX> so Reg<AX> -> Reg<EAX> can also not be measured
-----Reg<DF> -> Reg<EAX> and Reg<EAX> -> Reg<DF>-----
	1 measurements of first Type
	no measurements of type Reg<EAX> -> Reg<DF> so Reg<DF> -> Reg<EAX> can also not be measured
-----Reg<DX> -> Reg<EAX> and Reg<EAX> -> Reg<DX>-----
	1 measurements of first Type
	no measurements of type Reg<EAX> -> Reg<DX> so Reg<DX> -> Reg<EAX> can also not be measured
-----Reg<ECX> -> Reg<EAX> and Reg<EAX> -> Reg<ECX>-----
	5 measurements of first Type
	2 measurements of reversed Type
	no measurement of type Reg<ECX> -> Reg<EAX> can be executed successfully
-----Reg<EDX> -> Reg<EAX> and Reg<EAX> -> Reg<EDX>-----
	7 measurements of first Type
	13 measurements of reversed Type
	no measurement of type Reg<EDX> -> Reg<EAX> can be executed successfully
-----Reg<EFLAGS> -> Reg<EAX> and Reg<EAX> -> Reg<EFLAGS>-----
	2 measurements of first Type
	26 measurements of reversed Type
	Detected multiple dependencys between SBB32i32(impl(Reg<EFLAGS>) -> impl(Reg<EAX>))  and ADC32i32(impl(Reg<EAX>) -> impl(Reg<EFLAGS>)) so result of their combination will not be considered for finding helpers
	Detected multiple dependencys between ADC32i32(impl(Reg<EFLAGS>) -> impl(Reg<EAX>))  and ADD32i32(impl(Reg<EAX>) -> impl(Reg<EFLAGS>)) so result of their combination will not be considered for finding helpers
	Detected multiple dependencys between ADC32i32(impl(Reg<EFLAGS>) -> impl(Reg<EAX>))  and AND32i32(impl(Reg<EAX>) -> impl(Reg<EFLAGS>)) so result of their combination will not be considered for finding helpers
	Detected multiple dependencys between ADC32i32(impl(Reg<EFLAGS>) -> impl(Reg<EAX>))  and CMPXCHG32rr(impl(Reg<EAX>) -> impl(Reg<EFLAGS>)) so result of their combination will not be considered for finding helpers
	Detected multiple dependencys between ADC32i32(impl(Reg<EFLAGS>) -> impl(Reg<EAX>))  and IMUL32r(impl(Reg<EAX>) -> impl(Reg<EFLAGS>)) so result of their combination will not be considered for finding helpers
	Detected multiple dependencys between ADC32i32(impl(Reg<EFLAGS>) -> impl(Reg<EAX>))  and MUL32r(impl(Reg<EAX>) -> impl(Reg<EFLAGS>)) so result of their combination will not be considered for finding helpers
	Detected multiple dependencys between ADC32i32(impl(Reg<EFLAGS>) -> impl(Reg<EAX>))  and OR32i32(impl(Reg<EAX>) -> impl(Reg<EFLAGS>)) so result of their combination will not be considered for finding helpers
	Detected multiple dependencys between ADC32i32(impl(Reg<EFLAGS>) -> impl(Reg<EAX>))  and SBB32i32(impl(Reg<EAX>) -> impl(Reg<EFLAGS>)) so result of their combination will not be considered for finding helpers
	Detected multiple dependencys between ADC32i32(impl(Reg<EFLAGS>) -> impl(Reg<EAX>))  and SUB32i32(impl(Reg<EAX>) -> impl(Reg<EFLAGS>)) so result of their combination will not be considered for finding helpers
	Measuring ADC32i32(impl(Reg<EFLAGS>) -> impl(Reg<EAX>))  and TPAUSE(impl(Reg<EAX>) -> impl(Reg<EFLAGS>))  was unsuccessful, EC: ERROR_ILLEGAL_INSTRUCTION
	 assuming TPAUSE(impl(Reg<EAX>) -> impl(Reg<EFLAGS>))  was the problem and blacklisting it
	Measuring ADC32i32(impl(Reg<EFLAGS>) -> impl(Reg<EAX>))  and UMWAIT(impl(Reg<EAX>) -> impl(Reg<EFLAGS>))  was unsuccessful, EC: ERROR_ILLEGAL_INSTRUCTION
	 assuming UMWAIT(impl(Reg<EAX>) -> impl(Reg<EFLAGS>))  was the problem and blacklisting it
	Detected multiple dependencys between ADC32i32(impl(Reg<EFLAGS>) -> impl(Reg<EAX>))  and XOR32i32(impl(Reg<EAX>) -> impl(Reg<EFLAGS>)) so result of their combination will not be considered for finding helpers
	Found helper instructions ADC32i32(impl(Reg<EFLAGS>) -> impl(Reg<EAX>))  and ADC32i32(impl(Reg<EAX>) -> impl(Reg<EFLAGS>))  with combined latency 2.0175
-----Reg<ESI> -> Reg<EAX> and Reg<EAX> -> Reg<ESI>-----
	1 measurements of first Type
	no measurements of type Reg<EAX> -> Reg<ESI> so Reg<ESI> -> Reg<EAX> can also not be measured
-----Reg<ESP> -> Reg<EAX> and Reg<EAX> -> Reg<ESP>-----
	6 measurements of first Type
	no measurements of type Reg<EAX> -> Reg<ESP> so Reg<ESP> -> Reg<EAX> can also not be measured
-----Reg<RAX> -> Reg<EAX> and Reg<EAX> -> Reg<RAX>-----
	4 measurements of first Type
	1 measurements of reversed Type
	no measurement of type Reg<RAX> -> Reg<EAX> can be executed successfully
-----Reg<RCX> -> Reg<EAX> and Reg<EAX> -> Reg<RCX>-----
	3 measurements of first Type
	no measurements of type Reg<EAX> -> Reg<RCX> so Reg<RCX> -> Reg<EAX> can also not be measured
-----Reg<RDX> -> Reg<EAX> and Reg<EAX> -> Reg<RDX>-----
	2 measurements of first Type
	no measurements of type Reg<EAX> -> Reg<RDX> so Reg<RDX> -> Reg<EAX> can also not be measured
-----Reg<RSP> -> Reg<EAX> and Reg<EAX> -> Reg<RSP>-----
	2 measurements of first Type
	no measurements of type Reg<EAX> -> Reg<RSP> so Reg<RSP> -> Reg<EAX> can also not be measured
-----Reg<SSP> -> Reg<EAX> and Reg<EAX> -> Reg<SSP>-----
	5 measurements of first Type
	no measurements of type Reg<EAX> -> Reg<SSP> so Reg<SSP> -> Reg<EAX> can also not be measured
-----Class<VR128> -> Reg<ECX> and Reg<ECX> -> Class<VR128>-----
	8 measurements of first Type
	no measurements of type Reg<ECX> -> Class<VR128> so Class<VR128> -> Reg<ECX> can also not be measured
-----Reg<DF> -> Reg<ECX> and Reg<ECX> -> Reg<DF>-----
	2 measurements of first Type
	no measurements of type Reg<ECX> -> Reg<DF> so Reg<DF> -> Reg<ECX> can also not be measured
-----Reg<EDX> -> Reg<ECX> and Reg<ECX> -> Reg<EDX>-----
	2 measurements of first Type
	4 measurements of reversed Type
	no measurement of type Reg<ECX> -> Reg<EDX> can be executed successfully
-----Reg<ESP> -> Reg<ECX> and Reg<ECX> -> Reg<ESP>-----
	3 measurements of first Type
	no measurements of type Reg<ECX> -> Reg<ESP> so Reg<ESP> -> Reg<ECX> can also not be measured
-----Reg<SSP> -> Reg<ECX> and Reg<ECX> -> Reg<SSP>-----
	3 measurements of first Type
	no measurements of type Reg<ECX> -> Reg<SSP> so Reg<SSP> -> Reg<ECX> can also not be measured
-----Reg<AL> -> Reg<EDI> and Reg<EDI> -> Reg<AL>-----
	2 measurements of first Type
	no measurements of type Reg<EDI> -> Reg<AL> so Reg<AL> -> Reg<EDI> can also not be measured
-----Reg<AX> -> Reg<EDI> and Reg<EDI> -> Reg<AX>-----
	2 measurements of first Type
	no measurements of type Reg<EDI> -> Reg<AX> so Reg<AX> -> Reg<EDI> can also not be measured
-----Reg<DF> -> Reg<EDI> and Reg<EDI> -> Reg<DF>-----
	18 measurements of first Type
	no measurements of type Reg<EDI> -> Reg<DF> so Reg<DF> -> Reg<EDI> can also not be measured
-----Reg<DX> -> Reg<EDI> and Reg<EDI> -> Reg<DX>-----
	3 measurements of first Type
	no measurements of type Reg<EDI> -> Reg<DX> so Reg<DX> -> Reg<EDI> can also not be measured
-----Reg<EAX> -> Reg<EDI> and Reg<EDI> -> Reg<EAX>-----
	2 measurements of first Type
	no measurements of type Reg<EDI> -> Reg<EAX> so Reg<EAX> -> Reg<EDI> can also not be measured
-----Reg<ESI> -> Reg<EDI> and Reg<EDI> -> Reg<ESI>-----
	8 measurements of first Type
	8 measurements of reversed Type
	no measurement of type Reg<ESI> -> Reg<EDI> can be executed successfully
-----Reg<RAX> -> Reg<EDI> and Reg<EDI> -> Reg<RAX>-----
	1 measurements of first Type
	no measurements of type Reg<EDI> -> Reg<RAX> so Reg<RAX> -> Reg<EDI> can also not be measured
-----Reg<ESP> -> Reg<EDX> and Reg<EDX> -> Reg<ESP>-----
	2 measurements of first Type
	no measurements of type Reg<EDX> -> Reg<ESP> so Reg<ESP> -> Reg<EDX> can also not be measured
-----Reg<SSP> -> Reg<EDX> and Reg<EDX> -> Reg<SSP>-----
	2 measurements of first Type
	no measurements of type Reg<EDX> -> Reg<SSP> so Reg<SSP> -> Reg<EDX> can also not be measured
-----Class<GR8_NOREX> -> Reg<EFLAGS> and Reg<EFLAGS> -> Class<GR8_NOREX>-----
	2 measurements of first Type
	no measurements of type Reg<EFLAGS> -> Class<GR8_NOREX> so Class<GR8_NOREX> -> Reg<EFLAGS> can also not be measured
-----Reg<CL> -> Reg<EFLAGS> and Reg<EFLAGS> -> Reg<CL>-----
	102 measurements of first Type
	no measurements of type Reg<EFLAGS> -> Reg<CL> so Reg<CL> -> Reg<EFLAGS> can also not be measured
-----Reg<DF> -> Reg<EFLAGS> and Reg<EFLAGS> -> Reg<DF>-----
	8 measurements of first Type
	no measurements of type Reg<EFLAGS> -> Reg<DF> so Reg<DF> -> Reg<EFLAGS> can also not be measured
-----Reg<DX> -> Reg<EFLAGS> and Reg<EFLAGS> -> Reg<DX>-----
	4 measurements of first Type
	no measurements of type Reg<EFLAGS> -> Reg<DX> so Reg<DX> -> Reg<EFLAGS> can also not be measured
-----Reg<ECX> -> Reg<EFLAGS> and Reg<EFLAGS> -> Reg<ECX>-----
	1 measurements of first Type
	no measurements of type Reg<EFLAGS> -> Reg<ECX> so Reg<ECX> -> Reg<EFLAGS> can also not be measured
-----Reg<EDI> -> Reg<EFLAGS> and Reg<EFLAGS> -> Reg<EDI>-----
	8 measurements of first Type
	no measurements of type Reg<EFLAGS> -> Reg<EDI> so Reg<EDI> -> Reg<EFLAGS> can also not be measured
-----Reg<EDX> -> Reg<EFLAGS> and Reg<EFLAGS> -> Reg<EDX>-----
	11 measurements of first Type
	no measurements of type Reg<EFLAGS> -> Reg<EDX> so Reg<EDX> -> Reg<EFLAGS> can also not be measured
-----Reg<ESI> -> Reg<EFLAGS> and Reg<EFLAGS> -> Reg<ESI>-----
	4 measurements of first Type
	no measurements of type Reg<EFLAGS> -> Reg<ESI> so Reg<ESI> -> Reg<EFLAGS> can also not be measured
-----Reg<ESP> -> Reg<EFLAGS> and Reg<EFLAGS> -> Reg<ESP>-----
	8 measurements of first Type
	no measurements of type Reg<EFLAGS> -> Reg<ESP> so Reg<ESP> -> Reg<EFLAGS> can also not be measured
-----Reg<MXCSR> -> Reg<EFLAGS> and Reg<EFLAGS> -> Reg<MXCSR>-----
	49 measurements of first Type
	no measurements of type Reg<EFLAGS> -> Reg<MXCSR> so Reg<MXCSR> -> Reg<EFLAGS> can also not be measured
-----Reg<RAX> -> Reg<EFLAGS> and Reg<EFLAGS> -> Reg<RAX>-----
	25 measurements of first Type
	2 measurements of reversed Type
	Detected multiple dependencys between ADD64i32(impl(Reg<RAX>) -> impl(Reg<EFLAGS>))  and ADC64i32(impl(Reg<EFLAGS>) -> impl(Reg<RAX>)) so result of their combination will not be considered for finding helpers
	Detected multiple dependencys between AND64i32(impl(Reg<RAX>) -> impl(Reg<EFLAGS>))  and ADC64i32(impl(Reg<EFLAGS>) -> impl(Reg<RAX>)) so result of their combination will not be considered for finding helpers
	New pair: CMP64i32(impl(Reg<RAX>) -> impl(Reg<EFLAGS>))  ADC64i32(impl(Reg<EFLAGS>) -> impl(Reg<RAX>)) with latency 2.0175
	Found helper instructions CMP64i32(impl(Reg<RAX>) -> impl(Reg<EFLAGS>))  and ADC64i32(impl(Reg<EFLAGS>) -> impl(Reg<RAX>))  with combined latency 2.0175
-----Reg<RBX> -> Reg<EFLAGS> and Reg<EFLAGS> -> Reg<RBX>-----
	2 measurements of first Type
	no measurements of type Reg<EFLAGS> -> Reg<RBX> so Reg<RBX> -> Reg<EFLAGS> can also not be measured
-----Reg<RCX> -> Reg<EFLAGS> and Reg<EFLAGS> -> Reg<RCX>-----
	5 measurements of first Type
	no measurements of type Reg<EFLAGS> -> Reg<RCX> so Reg<RCX> -> Reg<EFLAGS> can also not be measured
-----Reg<RDX> -> Reg<EFLAGS> and Reg<EFLAGS> -> Reg<RDX>-----
	8 measurements of first Type
	no measurements of type Reg<EFLAGS> -> Reg<RDX> so Reg<RDX> -> Reg<EFLAGS> can also not be measured
-----Reg<RSP> -> Reg<EFLAGS> and Reg<EFLAGS> -> Reg<RSP>-----
	12 measurements of first Type
	no measurements of type Reg<EFLAGS> -> Reg<RSP> so Reg<RSP> -> Reg<EFLAGS> can also not be measured
-----Reg<SSP> -> Reg<EFLAGS> and Reg<EFLAGS> -> Reg<SSP>-----
	14 measurements of first Type
	no measurements of type Reg<EFLAGS> -> Reg<SSP> so Reg<SSP> -> Reg<EFLAGS> can also not be measured
-----Reg<XMM0> -> Reg<EFLAGS> and Reg<EFLAGS> -> Reg<XMM0>-----
	2 measurements of first Type
	no measurements of type Reg<EFLAGS> -> Reg<XMM0> so Reg<XMM0> -> Reg<EFLAGS> can also not be measured
-----Reg<XMM1> -> Reg<EFLAGS> and Reg<EFLAGS> -> Reg<XMM1>-----
	1 measurements of first Type
	no measurements of type Reg<EFLAGS> -> Reg<XMM1> so Reg<XMM1> -> Reg<EFLAGS> can also not be measured
-----Reg<DF> -> Reg<ESI> and Reg<ESI> -> Reg<DF>-----
	15 measurements of first Type
	no measurements of type Reg<ESI> -> Reg<DF> so Reg<DF> -> Reg<ESI> can also not be measured
-----Reg<DX> -> Reg<ESI> and Reg<ESI> -> Reg<DX>-----
	3 measurements of first Type
	no measurements of type Reg<ESI> -> Reg<DX> so Reg<DX> -> Reg<ESI> can also not be measured
-----Reg<SSP> -> Reg<ESP> and Reg<ESP> -> Reg<SSP>-----
	2 measurements of first Type
	2 measurements of reversed Type
	Detected multiple dependencys between ADJCALLSTACKUP32(impl(Reg<SSP>) -> impl(Reg<ESP>))  and ADJCALLSTACKDOWN32(impl(Reg<ESP>) -> impl(Reg<SSP>)) so result of their combination will not be considered for finding helpers
	Detected multiple dependencys between ADJCALLSTACKDOWN32(impl(Reg<SSP>) -> impl(Reg<ESP>))  and ADJCALLSTACKUP32(impl(Reg<ESP>) -> impl(Reg<SSP>)) so result of their combination will not be considered for finding helpers
	Found helper instructions ADJCALLSTACKDOWN32(impl(Reg<SSP>) -> impl(Reg<ESP>))  and ADJCALLSTACKDOWN32(impl(Reg<ESP>) -> impl(Reg<SSP>))  with combined latency 0
-----Reg<DF> -> Reg<RAX> and Reg<RAX> -> Reg<DF>-----
	1 measurements of first Type
	no measurements of type Reg<RAX> -> Reg<DF> so Reg<DF> -> Reg<RAX> can also not be measured
-----Reg<ECX> -> Reg<RAX> and Reg<RAX> -> Reg<ECX>-----
	1 measurements of first Type
	no measurements of type Reg<RAX> -> Reg<ECX> so Reg<ECX> -> Reg<RAX> can also not be measured
-----Reg<ESI> -> Reg<RAX> and Reg<RAX> -> Reg<ESI>-----
	1 measurements of first Type
	no measurements of type Reg<RAX> -> Reg<ESI> so Reg<ESI> -> Reg<RAX> can also not be measured
-----Reg<RBX> -> Reg<RAX> and Reg<RAX> -> Reg<RBX>-----
	3 measurements of first Type
	2 measurements of reversed Type
	no measurement of type Reg<RBX> -> Reg<RAX> can be executed successfully
-----Reg<RCX> -> Reg<RAX> and Reg<RAX> -> Reg<RCX>-----
	3 measurements of first Type
	3 measurements of reversed Type
	no measurement of type Reg<RCX> -> Reg<RAX> can be executed successfully
-----Reg<RDI> -> Reg<RAX> and Reg<RAX> -> Reg<RDI>-----
	3 measurements of first Type
	3 measurements of reversed Type
	no measurement of type Reg<RDI> -> Reg<RAX> can be executed successfully
-----Reg<RDX> -> Reg<RAX> and Reg<RAX> -> Reg<RDX>-----
	10 measurements of first Type
	16 measurements of reversed Type
	no measurement of type Reg<RDX> -> Reg<RAX> can be executed successfully
-----Reg<RSI> -> Reg<RAX> and Reg<RAX> -> Reg<RSI>-----
	3 measurements of first Type
	3 measurements of reversed Type
	no measurement of type Reg<RSI> -> Reg<RAX> can be executed successfully
-----Reg<RSP> -> Reg<RAX> and Reg<RAX> -> Reg<RSP>-----
	8 measurements of first Type
	no measurements of type Reg<RAX> -> Reg<RSP> so Reg<RSP> -> Reg<RAX> can also not be measured
-----Reg<SSP> -> Reg<RAX> and Reg<RAX> -> Reg<SSP>-----
	5 measurements of first Type
	no measurements of type Reg<RAX> -> Reg<SSP> so Reg<SSP> -> Reg<RAX> can also not be measured
-----Reg<RCX> -> Reg<RBX> and Reg<RBX> -> Reg<RCX>-----
	2 measurements of first Type
	2 measurements of reversed Type
	no measurement of type Reg<RCX> -> Reg<RBX> can be executed successfully
-----Reg<RDX> -> Reg<RBX> and Reg<RBX> -> Reg<RDX>-----
	2 measurements of first Type
	1 measurements of reversed Type
	no measurement of type Reg<RDX> -> Reg<RBX> can be executed successfully
-----Reg<RDX> -> Reg<RCX> and Reg<RCX> -> Reg<RDX>-----
	3 measurements of first Type
	1 measurements of reversed Type
	no measurement of type Reg<RDX> -> Reg<RCX> can be executed successfully
-----Reg<RSP> -> Reg<RCX> and Reg<RCX> -> Reg<RSP>-----
	4 measurements of first Type
	no measurements of type Reg<RCX> -> Reg<RSP> so Reg<RSP> -> Reg<RCX> can also not be measured
-----Reg<SSP> -> Reg<RCX> and Reg<RCX> -> Reg<SSP>-----
	4 measurements of first Type
	no measurements of type Reg<RCX> -> Reg<SSP> so Reg<SSP> -> Reg<RCX> can also not be measured
-----Reg<DF> -> Reg<RDI> and Reg<RDI> -> Reg<DF>-----
	1 measurements of first Type
	no measurements of type Reg<RDI> -> Reg<DF> so Reg<DF> -> Reg<RDI> can also not be measured
-----Reg<RBX> -> Reg<RDI> and Reg<RDI> -> Reg<RBX>-----
	5 measurements of first Type
	no measurements of type Reg<RDI> -> Reg<RBX> so Reg<RBX> -> Reg<RDI> can also not be measured
-----Reg<RDX> -> Reg<RDI> and Reg<RDI> -> Reg<RDX>-----
	6 measurements of first Type
	no measurements of type Reg<RDI> -> Reg<RDX> so Reg<RDX> -> Reg<RDI> can also not be measured
-----Reg<RSI> -> Reg<RDI> and Reg<RDI> -> Reg<RSI>-----
	7 measurements of first Type
	7 measurements of reversed Type
	no measurement of type Reg<RSI> -> Reg<RDI> can be executed successfully
-----Reg<RSP> -> Reg<RDI> and Reg<RDI> -> Reg<RSP>-----
	4 measurements of first Type
	no measurements of type Reg<RDI> -> Reg<RSP> so Reg<RSP> -> Reg<RDI> can also not be measured
-----Reg<SSP> -> Reg<RDI> and Reg<RDI> -> Reg<SSP>-----
	4 measurements of first Type
	no measurements of type Reg<RDI> -> Reg<SSP> so Reg<SSP> -> Reg<RDI> can also not be measured
-----Reg<ECX> -> Reg<RDX> and Reg<RDX> -> Reg<ECX>-----
	1 measurements of first Type
	no measurements of type Reg<RDX> -> Reg<ECX> so Reg<ECX> -> Reg<RDX> can also not be measured
-----Reg<RSI> -> Reg<RDX> and Reg<RDX> -> Reg<RSI>-----
	1 measurements of first Type
	5 measurements of reversed Type
	no measurement of type Reg<RSI> -> Reg<RDX> can be executed successfully
-----Reg<RSP> -> Reg<RDX> and Reg<RDX> -> Reg<RSP>-----
	4 measurements of first Type
	no measurements of type Reg<RDX> -> Reg<RSP> so Reg<RSP> -> Reg<RDX> can also not be measured
-----Reg<SSP> -> Reg<RDX> and Reg<RDX> -> Reg<SSP>-----
	4 measurements of first Type
	no measurements of type Reg<RDX> -> Reg<SSP> so Reg<SSP> -> Reg<RDX> can also not be measured
-----Reg<RBX> -> Reg<RSI> and Reg<RSI> -> Reg<RBX>-----
	5 measurements of first Type
	no measurements of type Reg<RSI> -> Reg<RBX> so Reg<RBX> -> Reg<RSI> can also not be measured
-----Reg<RSP> -> Reg<RSI> and Reg<RSI> -> Reg<RSP>-----
	4 measurements of first Type
	no measurements of type Reg<RSI> -> Reg<RSP> so Reg<RSP> -> Reg<RSI> can also not be measured
-----Reg<SSP> -> Reg<RSI> and Reg<RSI> -> Reg<SSP>-----
	4 measurements of first Type
	no measurements of type Reg<RSI> -> Reg<SSP> so Reg<SSP> -> Reg<RSI> can also not be measured
-----Reg<SSP> -> Reg<RSP> and Reg<RSP> -> Reg<SSP>-----
	2 measurements of first Type
	2 measurements of reversed Type
	Detected multiple dependencys between ADJCALLSTACKUP64(impl(Reg<SSP>) -> impl(Reg<RSP>))  and ADJCALLSTACKDOWN64(impl(Reg<RSP>) -> impl(Reg<SSP>)) so result of their combination will not be considered for finding helpers
	Detected multiple dependencys between ADJCALLSTACKDOWN64(impl(Reg<SSP>) -> impl(Reg<RSP>))  and ADJCALLSTACKUP64(impl(Reg<RSP>) -> impl(Reg<SSP>)) so result of their combination will not be considered for finding helpers
	Found helper instructions ADJCALLSTACKDOWN64(impl(Reg<SSP>) -> impl(Reg<RSP>))  and ADJCALLSTACKDOWN64(impl(Reg<RSP>) -> impl(Reg<SSP>))  with combined latency -0.00125
-----Reg<ESP> -> Reg<FP0> and Reg<FP0> -> Reg<ESP>-----
	2 measurements of first Type
	no measurements of type Reg<FP0> -> Reg<ESP> so Reg<ESP> -> Reg<FP0> can also not be measured
-----Reg<RSP> -> Reg<FP0> and Reg<FP0> -> Reg<RSP>-----
	4 measurements of first Type
	no measurements of type Reg<FP0> -> Reg<RSP> so Reg<RSP> -> Reg<FP0> can also not be measured
-----Reg<SSP> -> Reg<FP0> and Reg<FP0> -> Reg<SSP>-----
	6 measurements of first Type
	no measurements of type Reg<FP0> -> Reg<SSP> so Reg<SSP> -> Reg<FP0> can also not be measured
-----Reg<ESP> -> Reg<FP1> and Reg<FP1> -> Reg<ESP>-----
	2 measurements of first Type
	no measurements of type Reg<FP1> -> Reg<ESP> so Reg<ESP> -> Reg<FP1> can also not be measured
-----Reg<RSP> -> Reg<FP1> and Reg<FP1> -> Reg<RSP>-----
	4 measurements of first Type
	no measurements of type Reg<FP1> -> Reg<RSP> so Reg<RSP> -> Reg<FP1> can also not be measured
-----Reg<SSP> -> Reg<FP1> and Reg<FP1> -> Reg<SSP>-----
	6 measurements of first Type
	no measurements of type Reg<FP1> -> Reg<SSP> so Reg<SSP> -> Reg<FP1> can also not be measured
-----Reg<ESP> -> Reg<FP2> and Reg<FP2> -> Reg<ESP>-----
	2 measurements of first Type
	no measurements of type Reg<FP2> -> Reg<ESP> so Reg<ESP> -> Reg<FP2> can also not be measured
-----Reg<RSP> -> Reg<FP2> and Reg<FP2> -> Reg<RSP>-----
	4 measurements of first Type
	no measurements of type Reg<FP2> -> Reg<RSP> so Reg<RSP> -> Reg<FP2> can also not be measured
-----Reg<SSP> -> Reg<FP2> and Reg<FP2> -> Reg<SSP>-----
	6 measurements of first Type
	no measurements of type Reg<FP2> -> Reg<SSP> so Reg<SSP> -> Reg<FP2> can also not be measured
-----Reg<ESP> -> Reg<FP3> and Reg<FP3> -> Reg<ESP>-----
	2 measurements of first Type
	no measurements of type Reg<FP3> -> Reg<ESP> so Reg<ESP> -> Reg<FP3> can also not be measured
-----Reg<RSP> -> Reg<FP3> and Reg<FP3> -> Reg<RSP>-----
	4 measurements of first Type
	no measurements of type Reg<FP3> -> Reg<RSP> so Reg<RSP> -> Reg<FP3> can also not be measured
-----Reg<SSP> -> Reg<FP3> and Reg<FP3> -> Reg<SSP>-----
	6 measurements of first Type
	no measurements of type Reg<FP3> -> Reg<SSP> so Reg<SSP> -> Reg<FP3> can also not be measured
-----Reg<ESP> -> Reg<FP4> and Reg<FP4> -> Reg<ESP>-----
	2 measurements of first Type
	no measurements of type Reg<FP4> -> Reg<ESP> so Reg<ESP> -> Reg<FP4> can also not be measured
-----Reg<RSP> -> Reg<FP4> and Reg<FP4> -> Reg<RSP>-----
	4 measurements of first Type
	no measurements of type Reg<FP4> -> Reg<RSP> so Reg<RSP> -> Reg<FP4> can also not be measured
-----Reg<SSP> -> Reg<FP4> and Reg<FP4> -> Reg<SSP>-----
	6 measurements of first Type
	no measurements of type Reg<FP4> -> Reg<SSP> so Reg<SSP> -> Reg<FP4> can also not be measured
-----Reg<ESP> -> Reg<FP5> and Reg<FP5> -> Reg<ESP>-----
	2 measurements of first Type
	no measurements of type Reg<FP5> -> Reg<ESP> so Reg<ESP> -> Reg<FP5> can also not be measured
-----Reg<RSP> -> Reg<FP5> and Reg<FP5> -> Reg<RSP>-----
	4 measurements of first Type
	no measurements of type Reg<FP5> -> Reg<RSP> so Reg<RSP> -> Reg<FP5> can also not be measured
-----Reg<SSP> -> Reg<FP5> and Reg<FP5> -> Reg<SSP>-----
	6 measurements of first Type
	no measurements of type Reg<FP5> -> Reg<SSP> so Reg<SSP> -> Reg<FP5> can also not be measured
-----Reg<ESP> -> Reg<FP6> and Reg<FP6> -> Reg<ESP>-----
	2 measurements of first Type
	no measurements of type Reg<FP6> -> Reg<ESP> so Reg<ESP> -> Reg<FP6> can also not be measured
-----Reg<RSP> -> Reg<FP6> and Reg<FP6> -> Reg<RSP>-----
	4 measurements of first Type
	no measurements of type Reg<FP6> -> Reg<RSP> so Reg<RSP> -> Reg<FP6> can also not be measured
-----Reg<SSP> -> Reg<FP6> and Reg<FP6> -> Reg<SSP>-----
	6 measurements of first Type
	no measurements of type Reg<FP6> -> Reg<SSP> so Reg<SSP> -> Reg<FP6> can also not be measured
-----Reg<ESP> -> Reg<FP7> and Reg<FP7> -> Reg<ESP>-----
	2 measurements of first Type
	no measurements of type Reg<FP7> -> Reg<ESP> so Reg<ESP> -> Reg<FP7> can also not be measured
-----Reg<RSP> -> Reg<FP7> and Reg<FP7> -> Reg<RSP>-----
	4 measurements of first Type
	no measurements of type Reg<FP7> -> Reg<RSP> so Reg<RSP> -> Reg<FP7> can also not be measured
-----Reg<SSP> -> Reg<FP7> and Reg<FP7> -> Reg<SSP>-----
	6 measurements of first Type
	no measurements of type Reg<FP7> -> Reg<SSP> so Reg<SSP> -> Reg<FP7> can also not be measured
-----Reg<ESP> -> Reg<MM0> and Reg<MM0> -> Reg<ESP>-----
	2 measurements of first Type
	no measurements of type Reg<MM0> -> Reg<ESP> so Reg<ESP> -> Reg<MM0> can also not be measured
-----Reg<RSP> -> Reg<MM0> and Reg<MM0> -> Reg<RSP>-----
	4 measurements of first Type
	no measurements of type Reg<MM0> -> Reg<RSP> so Reg<RSP> -> Reg<MM0> can also not be measured
-----Reg<SSP> -> Reg<MM0> and Reg<MM0> -> Reg<SSP>-----
	6 measurements of first Type
	no measurements of type Reg<MM0> -> Reg<SSP> so Reg<SSP> -> Reg<MM0> can also not be measured
-----Reg<ESP> -> Reg<MM1> and Reg<MM1> -> Reg<ESP>-----
	2 measurements of first Type
	no measurements of type Reg<MM1> -> Reg<ESP> so Reg<ESP> -> Reg<MM1> can also not be measured
-----Reg<RSP> -> Reg<MM1> and Reg<MM1> -> Reg<RSP>-----
	4 measurements of first Type
	no measurements of type Reg<MM1> -> Reg<RSP> so Reg<RSP> -> Reg<MM1> can also not be measured
-----Reg<SSP> -> Reg<MM1> and Reg<MM1> -> Reg<SSP>-----
	6 measurements of first Type
	no measurements of type Reg<MM1> -> Reg<SSP> so Reg<SSP> -> Reg<MM1> can also not be measured
-----Reg<ESP> -> Reg<MM2> and Reg<MM2> -> Reg<ESP>-----
	2 measurements of first Type
	no measurements of type Reg<MM2> -> Reg<ESP> so Reg<ESP> -> Reg<MM2> can also not be measured
-----Reg<RSP> -> Reg<MM2> and Reg<MM2> -> Reg<RSP>-----
	4 measurements of first Type
	no measurements of type Reg<MM2> -> Reg<RSP> so Reg<RSP> -> Reg<MM2> can also not be measured
-----Reg<SSP> -> Reg<MM2> and Reg<MM2> -> Reg<SSP>-----
	6 measurements of first Type
	no measurements of type Reg<MM2> -> Reg<SSP> so Reg<SSP> -> Reg<MM2> can also not be measured
-----Reg<ESP> -> Reg<MM3> and Reg<MM3> -> Reg<ESP>-----
	2 measurements of first Type
	no measurements of type Reg<MM3> -> Reg<ESP> so Reg<ESP> -> Reg<MM3> can also not be measured
-----Reg<RSP> -> Reg<MM3> and Reg<MM3> -> Reg<RSP>-----
	4 measurements of first Type
	no measurements of type Reg<MM3> -> Reg<RSP> so Reg<RSP> -> Reg<MM3> can also not be measured
-----Reg<SSP> -> Reg<MM3> and Reg<MM3> -> Reg<SSP>-----
	6 measurements of first Type
	no measurements of type Reg<MM3> -> Reg<SSP> so Reg<SSP> -> Reg<MM3> can also not be measured
-----Reg<ESP> -> Reg<MM4> and Reg<MM4> -> Reg<ESP>-----
	2 measurements of first Type
	no measurements of type Reg<MM4> -> Reg<ESP> so Reg<ESP> -> Reg<MM4> can also not be measured
-----Reg<RSP> -> Reg<MM4> and Reg<MM4> -> Reg<RSP>-----
	4 measurements of first Type
	no measurements of type Reg<MM4> -> Reg<RSP> so Reg<RSP> -> Reg<MM4> can also not be measured
-----Reg<SSP> -> Reg<MM4> and Reg<MM4> -> Reg<SSP>-----
	6 measurements of first Type
	no measurements of type Reg<MM4> -> Reg<SSP> so Reg<SSP> -> Reg<MM4> can also not be measured
-----Reg<ESP> -> Reg<MM5> and Reg<MM5> -> Reg<ESP>-----
	2 measurements of first Type
	no measurements of type Reg<MM5> -> Reg<ESP> so Reg<ESP> -> Reg<MM5> can also not be measured
-----Reg<RSP> -> Reg<MM5> and Reg<MM5> -> Reg<RSP>-----
	4 measurements of first Type
	no measurements of type Reg<MM5> -> Reg<RSP> so Reg<RSP> -> Reg<MM5> can also not be measured
-----Reg<SSP> -> Reg<MM5> and Reg<MM5> -> Reg<SSP>-----
	6 measurements of first Type
	no measurements of type Reg<MM5> -> Reg<SSP> so Reg<SSP> -> Reg<MM5> can also not be measured
-----Reg<ESP> -> Reg<MM6> and Reg<MM6> -> Reg<ESP>-----
	2 measurements of first Type
	no measurements of type Reg<MM6> -> Reg<ESP> so Reg<ESP> -> Reg<MM6> can also not be measured
-----Reg<RSP> -> Reg<MM6> and Reg<MM6> -> Reg<RSP>-----
	4 measurements of first Type
	no measurements of type Reg<MM6> -> Reg<RSP> so Reg<RSP> -> Reg<MM6> can also not be measured
-----Reg<SSP> -> Reg<MM6> and Reg<MM6> -> Reg<SSP>-----
	6 measurements of first Type
	no measurements of type Reg<MM6> -> Reg<SSP> so Reg<SSP> -> Reg<MM6> can also not be measured
-----Reg<ESP> -> Reg<MM7> and Reg<MM7> -> Reg<ESP>-----
	2 measurements of first Type
	no measurements of type Reg<MM7> -> Reg<ESP> so Reg<ESP> -> Reg<MM7> can also not be measured
-----Reg<RSP> -> Reg<MM7> and Reg<MM7> -> Reg<RSP>-----
	4 measurements of first Type
	no measurements of type Reg<MM7> -> Reg<RSP> so Reg<RSP> -> Reg<MM7> can also not be measured
-----Reg<SSP> -> Reg<MM7> and Reg<MM7> -> Reg<SSP>-----
	6 measurements of first Type
	no measurements of type Reg<MM7> -> Reg<SSP> so Reg<SSP> -> Reg<MM7> can also not be measured
-----Reg<RSP> -> Reg<R8> and Reg<R8> -> Reg<RSP>-----
	4 measurements of first Type
	no measurements of type Reg<R8> -> Reg<RSP> so Reg<RSP> -> Reg<R8> can also not be measured
-----Reg<SSP> -> Reg<R8> and Reg<R8> -> Reg<SSP>-----
	4 measurements of first Type
	no measurements of type Reg<R8> -> Reg<SSP> so Reg<SSP> -> Reg<R8> can also not be measured
-----Reg<RSP> -> Reg<R9> and Reg<R9> -> Reg<RSP>-----
	4 measurements of first Type
	no measurements of type Reg<R9> -> Reg<RSP> so Reg<RSP> -> Reg<R9> can also not be measured
-----Reg<SSP> -> Reg<R9> and Reg<R9> -> Reg<SSP>-----
	4 measurements of first Type
	no measurements of type Reg<R9> -> Reg<SSP> so Reg<SSP> -> Reg<R9> can also not be measured
-----Reg<RSP> -> Reg<R10> and Reg<R10> -> Reg<RSP>-----
	4 measurements of first Type
	no measurements of type Reg<R10> -> Reg<RSP> so Reg<RSP> -> Reg<R10> can also not be measured
-----Reg<SSP> -> Reg<R10> and Reg<R10> -> Reg<SSP>-----
	4 measurements of first Type
	no measurements of type Reg<R10> -> Reg<SSP> so Reg<SSP> -> Reg<R10> can also not be measured
-----Reg<RSP> -> Reg<R11> and Reg<R11> -> Reg<RSP>-----
	4 measurements of first Type
	no measurements of type Reg<R11> -> Reg<RSP> so Reg<RSP> -> Reg<R11> can also not be measured
-----Reg<SSP> -> Reg<R11> and Reg<R11> -> Reg<SSP>-----
	4 measurements of first Type
	no measurements of type Reg<R11> -> Reg<SSP> so Reg<SSP> -> Reg<R11> can also not be measured
-----Reg<ESP> -> Reg<ST0> and Reg<ST0> -> Reg<ESP>-----
	2 measurements of first Type
	no measurements of type Reg<ST0> -> Reg<ESP> so Reg<ESP> -> Reg<ST0> can also not be measured
-----Reg<RSP> -> Reg<ST0> and Reg<ST0> -> Reg<RSP>-----
	4 measurements of first Type
	no measurements of type Reg<ST0> -> Reg<RSP> so Reg<RSP> -> Reg<ST0> can also not be measured
-----Reg<SSP> -> Reg<ST0> and Reg<ST0> -> Reg<SSP>-----
	6 measurements of first Type
	no measurements of type Reg<ST0> -> Reg<SSP> so Reg<SSP> -> Reg<ST0> can also not be measured
-----Reg<ESP> -> Reg<ST1> and Reg<ST1> -> Reg<ESP>-----
	2 measurements of first Type
	no measurements of type Reg<ST1> -> Reg<ESP> so Reg<ESP> -> Reg<ST1> can also not be measured
-----Reg<RSP> -> Reg<ST1> and Reg<ST1> -> Reg<RSP>-----
	4 measurements of first Type
	no measurements of type Reg<ST1> -> Reg<RSP> so Reg<RSP> -> Reg<ST1> can also not be measured
-----Reg<SSP> -> Reg<ST1> and Reg<ST1> -> Reg<SSP>-----
	6 measurements of first Type
	no measurements of type Reg<ST1> -> Reg<SSP> so Reg<SSP> -> Reg<ST1> can also not be measured
-----Reg<ESP> -> Reg<ST2> and Reg<ST2> -> Reg<ESP>-----
	2 measurements of first Type
	no measurements of type Reg<ST2> -> Reg<ESP> so Reg<ESP> -> Reg<ST2> can also not be measured
-----Reg<RSP> -> Reg<ST2> and Reg<ST2> -> Reg<RSP>-----
	4 measurements of first Type
	no measurements of type Reg<ST2> -> Reg<RSP> so Reg<RSP> -> Reg<ST2> can also not be measured
-----Reg<SSP> -> Reg<ST2> and Reg<ST2> -> Reg<SSP>-----
	6 measurements of first Type
	no measurements of type Reg<ST2> -> Reg<SSP> so Reg<SSP> -> Reg<ST2> can also not be measured
-----Reg<ESP> -> Reg<ST3> and Reg<ST3> -> Reg<ESP>-----
	2 measurements of first Type
	no measurements of type Reg<ST3> -> Reg<ESP> so Reg<ESP> -> Reg<ST3> can also not be measured
-----Reg<RSP> -> Reg<ST3> and Reg<ST3> -> Reg<RSP>-----
	4 measurements of first Type
	no measurements of type Reg<ST3> -> Reg<RSP> so Reg<RSP> -> Reg<ST3> can also not be measured
-----Reg<SSP> -> Reg<ST3> and Reg<ST3> -> Reg<SSP>-----
	6 measurements of first Type
	no measurements of type Reg<ST3> -> Reg<SSP> so Reg<SSP> -> Reg<ST3> can also not be measured
-----Reg<ESP> -> Reg<ST4> and Reg<ST4> -> Reg<ESP>-----
	2 measurements of first Type
	no measurements of type Reg<ST4> -> Reg<ESP> so Reg<ESP> -> Reg<ST4> can also not be measured
-----Reg<RSP> -> Reg<ST4> and Reg<ST4> -> Reg<RSP>-----
	4 measurements of first Type
	no measurements of type Reg<ST4> -> Reg<RSP> so Reg<RSP> -> Reg<ST4> can also not be measured
-----Reg<SSP> -> Reg<ST4> and Reg<ST4> -> Reg<SSP>-----
	6 measurements of first Type
	no measurements of type Reg<ST4> -> Reg<SSP> so Reg<SSP> -> Reg<ST4> can also not be measured
-----Reg<ESP> -> Reg<ST5> and Reg<ST5> -> Reg<ESP>-----
	2 measurements of first Type
	no measurements of type Reg<ST5> -> Reg<ESP> so Reg<ESP> -> Reg<ST5> can also not be measured
-----Reg<RSP> -> Reg<ST5> and Reg<ST5> -> Reg<RSP>-----
	4 measurements of first Type
	no measurements of type Reg<ST5> -> Reg<RSP> so Reg<RSP> -> Reg<ST5> can also not be measured
-----Reg<SSP> -> Reg<ST5> and Reg<ST5> -> Reg<SSP>-----
	6 measurements of first Type
	no measurements of type Reg<ST5> -> Reg<SSP> so Reg<SSP> -> Reg<ST5> can also not be measured
-----Reg<ESP> -> Reg<ST6> and Reg<ST6> -> Reg<ESP>-----
	2 measurements of first Type
	no measurements of type Reg<ST6> -> Reg<ESP> so Reg<ESP> -> Reg<ST6> can also not be measured
-----Reg<RSP> -> Reg<ST6> and Reg<ST6> -> Reg<RSP>-----
	4 measurements of first Type
	no measurements of type Reg<ST6> -> Reg<RSP> so Reg<RSP> -> Reg<ST6> can also not be measured
-----Reg<SSP> -> Reg<ST6> and Reg<ST6> -> Reg<SSP>-----
	6 measurements of first Type
	no measurements of type Reg<ST6> -> Reg<SSP> so Reg<SSP> -> Reg<ST6> can also not be measured
-----Reg<ESP> -> Reg<ST7> and Reg<ST7> -> Reg<ESP>-----
	2 measurements of first Type
	no measurements of type Reg<ST7> -> Reg<ESP> so Reg<ESP> -> Reg<ST7> can also not be measured
-----Reg<RSP> -> Reg<ST7> and Reg<ST7> -> Reg<RSP>-----
	4 measurements of first Type
	no measurements of type Reg<ST7> -> Reg<RSP> so Reg<RSP> -> Reg<ST7> can also not be measured
-----Reg<SSP> -> Reg<ST7> and Reg<ST7> -> Reg<SSP>-----
	6 measurements of first Type
	no measurements of type Reg<ST7> -> Reg<SSP> so Reg<SSP> -> Reg<ST7> can also not be measured
-----Reg<EAX> -> Reg<XMM0> and Reg<XMM0> -> Reg<EAX>-----
	2 measurements of first Type
	no measurements of type Reg<XMM0> -> Reg<EAX> so Reg<EAX> -> Reg<XMM0> can also not be measured
-----Reg<EDX> -> Reg<XMM0> and Reg<XMM0> -> Reg<EDX>-----
	2 measurements of first Type
	no measurements of type Reg<XMM0> -> Reg<EDX> so Reg<EDX> -> Reg<XMM0> can also not be measured
-----Reg<ESP> -> Reg<XMM0> and Reg<XMM0> -> Reg<ESP>-----
	2 measurements of first Type
	no measurements of type Reg<XMM0> -> Reg<ESP> so Reg<ESP> -> Reg<XMM0> can also not be measured
-----Reg<RSP> -> Reg<XMM0> and Reg<XMM0> -> Reg<RSP>-----
	4 measurements of first Type
	no measurements of type Reg<XMM0> -> Reg<RSP> so Reg<RSP> -> Reg<XMM0> can also not be measured
-----Reg<SSP> -> Reg<XMM0> and Reg<XMM0> -> Reg<SSP>-----
	6 measurements of first Type
	no measurements of type Reg<XMM0> -> Reg<SSP> so Reg<SSP> -> Reg<XMM0> can also not be measured
-----Reg<XMM1> -> Reg<XMM0> and Reg<XMM0> -> Reg<XMM1>-----
	1 measurements of first Type
	2 measurements of reversed Type
	no measurement of type Reg<XMM1> -> Reg<XMM0> can be executed successfully
-----Reg<ESP> -> Reg<XMM1> and Reg<XMM1> -> Reg<ESP>-----
	2 measurements of first Type
	no measurements of type Reg<XMM1> -> Reg<ESP> so Reg<ESP> -> Reg<XMM1> can also not be measured
-----Reg<RSP> -> Reg<XMM1> and Reg<XMM1> -> Reg<RSP>-----
	4 measurements of first Type
	no measurements of type Reg<XMM1> -> Reg<RSP> so Reg<RSP> -> Reg<XMM1> can also not be measured
-----Reg<SSP> -> Reg<XMM1> and Reg<XMM1> -> Reg<SSP>-----
	6 measurements of first Type
	no measurements of type Reg<XMM1> -> Reg<SSP> so Reg<SSP> -> Reg<XMM1> can also not be measured
-----Class<GR32> -> Reg<XMM2> and Reg<XMM2> -> Class<GR32>-----
	2 measurements of first Type
	no measurements of type Reg<XMM2> -> Class<GR32> so Class<GR32> -> Reg<XMM2> can also not be measured
-----Reg<ESP> -> Reg<XMM2> and Reg<XMM2> -> Reg<ESP>-----
	2 measurements of first Type
	no measurements of type Reg<XMM2> -> Reg<ESP> so Reg<ESP> -> Reg<XMM2> can also not be measured
-----Reg<RSP> -> Reg<XMM2> and Reg<XMM2> -> Reg<RSP>-----
	4 measurements of first Type
	no measurements of type Reg<XMM2> -> Reg<RSP> so Reg<RSP> -> Reg<XMM2> can also not be measured
-----Reg<SSP> -> Reg<XMM2> and Reg<XMM2> -> Reg<SSP>-----
	6 measurements of first Type
	no measurements of type Reg<XMM2> -> Reg<SSP> so Reg<SSP> -> Reg<XMM2> can also not be measured
-----Reg<XMM0> -> Reg<XMM2> and Reg<XMM2> -> Reg<XMM0>-----
	2 measurements of first Type
	no measurements of type Reg<XMM2> -> Reg<XMM0> so Reg<XMM0> -> Reg<XMM2> can also not be measured
-----Reg<XMM1> -> Reg<XMM2> and Reg<XMM2> -> Reg<XMM1>-----
	1 measurements of first Type
	no measurements of type Reg<XMM2> -> Reg<XMM1> so Reg<XMM1> -> Reg<XMM2> can also not be measured
-----Class<GR32> -> Reg<XMM3> and Reg<XMM3> -> Class<GR32>-----
	1 measurements of first Type
	no measurements of type Reg<XMM3> -> Class<GR32> so Class<GR32> -> Reg<XMM3> can also not be measured
-----Reg<ESP> -> Reg<XMM3> and Reg<XMM3> -> Reg<ESP>-----
	2 measurements of first Type
	no measurements of type Reg<XMM3> -> Reg<ESP> so Reg<ESP> -> Reg<XMM3> can also not be measured
-----Reg<RSP> -> Reg<XMM3> and Reg<XMM3> -> Reg<RSP>-----
	4 measurements of first Type
	no measurements of type Reg<XMM3> -> Reg<RSP> so Reg<RSP> -> Reg<XMM3> can also not be measured
-----Reg<SSP> -> Reg<XMM3> and Reg<XMM3> -> Reg<SSP>-----
	6 measurements of first Type
	no measurements of type Reg<XMM3> -> Reg<SSP> so Reg<SSP> -> Reg<XMM3> can also not be measured
-----Reg<XMM0> -> Reg<XMM3> and Reg<XMM3> -> Reg<XMM0>-----
	1 measurements of first Type
	no measurements of type Reg<XMM3> -> Reg<XMM0> so Reg<XMM0> -> Reg<XMM3> can also not be measured
-----Reg<XMM1> -> Reg<XMM3> and Reg<XMM3> -> Reg<XMM1>-----
	1 measurements of first Type
	no measurements of type Reg<XMM3> -> Reg<XMM1> so Reg<XMM1> -> Reg<XMM3> can also not be measured
-----Class<GR32> -> Reg<XMM4> and Reg<XMM4> -> Class<GR32>-----
	2 measurements of first Type
	no measurements of type Reg<XMM4> -> Class<GR32> so Class<GR32> -> Reg<XMM4> can also not be measured
-----Reg<ESP> -> Reg<XMM4> and Reg<XMM4> -> Reg<ESP>-----
	2 measurements of first Type
	no measurements of type Reg<XMM4> -> Reg<ESP> so Reg<ESP> -> Reg<XMM4> can also not be measured
-----Reg<RSP> -> Reg<XMM4> and Reg<XMM4> -> Reg<RSP>-----
	4 measurements of first Type
	no measurements of type Reg<XMM4> -> Reg<RSP> so Reg<RSP> -> Reg<XMM4> can also not be measured
-----Reg<SSP> -> Reg<XMM4> and Reg<XMM4> -> Reg<SSP>-----
	6 measurements of first Type
	no measurements of type Reg<XMM4> -> Reg<SSP> so Reg<SSP> -> Reg<XMM4> can also not be measured
-----Reg<XMM0> -> Reg<XMM4> and Reg<XMM4> -> Reg<XMM0>-----
	2 measurements of first Type
	no measurements of type Reg<XMM4> -> Reg<XMM0> so Reg<XMM0> -> Reg<XMM4> can also not be measured
-----Reg<XMM1> -> Reg<XMM4> and Reg<XMM4> -> Reg<XMM1>-----
	1 measurements of first Type
	no measurements of type Reg<XMM4> -> Reg<XMM1> so Reg<XMM1> -> Reg<XMM4> can also not be measured
-----Class<GR32> -> Reg<XMM5> and Reg<XMM5> -> Class<GR32>-----
	2 measurements of first Type
	no measurements of type Reg<XMM5> -> Class<GR32> so Class<GR32> -> Reg<XMM5> can also not be measured
-----Reg<ESP> -> Reg<XMM5> and Reg<XMM5> -> Reg<ESP>-----
	2 measurements of first Type
	no measurements of type Reg<XMM5> -> Reg<ESP> so Reg<ESP> -> Reg<XMM5> can also not be measured
-----Reg<RSP> -> Reg<XMM5> and Reg<XMM5> -> Reg<RSP>-----
	4 measurements of first Type
	no measurements of type Reg<XMM5> -> Reg<RSP> so Reg<RSP> -> Reg<XMM5> can also not be measured
-----Reg<SSP> -> Reg<XMM5> and Reg<XMM5> -> Reg<SSP>-----
	6 measurements of first Type
	no measurements of type Reg<XMM5> -> Reg<SSP> so Reg<SSP> -> Reg<XMM5> can also not be measured
-----Reg<XMM0> -> Reg<XMM5> and Reg<XMM5> -> Reg<XMM0>-----
	2 measurements of first Type
	no measurements of type Reg<XMM5> -> Reg<XMM0> so Reg<XMM0> -> Reg<XMM5> can also not be measured
-----Reg<XMM1> -> Reg<XMM5> and Reg<XMM5> -> Reg<XMM1>-----
	1 measurements of first Type
	no measurements of type Reg<XMM5> -> Reg<XMM1> so Reg<XMM1> -> Reg<XMM5> can also not be measured
-----Class<GR32> -> Reg<XMM6> and Reg<XMM6> -> Class<GR32>-----
	2 measurements of first Type
	no measurements of type Reg<XMM6> -> Class<GR32> so Class<GR32> -> Reg<XMM6> can also not be measured
-----Reg<ESP> -> Reg<XMM6> and Reg<XMM6> -> Reg<ESP>-----
	2 measurements of first Type
	no measurements of type Reg<XMM6> -> Reg<ESP> so Reg<ESP> -> Reg<XMM6> can also not be measured
-----Reg<RSP> -> Reg<XMM6> and Reg<XMM6> -> Reg<RSP>-----
	4 measurements of first Type
	no measurements of type Reg<XMM6> -> Reg<RSP> so Reg<RSP> -> Reg<XMM6> can also not be measured
-----Reg<SSP> -> Reg<XMM6> and Reg<XMM6> -> Reg<SSP>-----
	6 measurements of first Type
	no measurements of type Reg<XMM6> -> Reg<SSP> so Reg<SSP> -> Reg<XMM6> can also not be measured
-----Reg<XMM0> -> Reg<XMM6> and Reg<XMM6> -> Reg<XMM0>-----
	2 measurements of first Type
	no measurements of type Reg<XMM6> -> Reg<XMM0> so Reg<XMM0> -> Reg<XMM6> can also not be measured
-----Reg<XMM1> -> Reg<XMM6> and Reg<XMM6> -> Reg<XMM1>-----
	1 measurements of first Type
	no measurements of type Reg<XMM6> -> Reg<XMM1> so Reg<XMM1> -> Reg<XMM6> can also not be measured
-----Reg<ESP> -> Reg<XMM7> and Reg<XMM7> -> Reg<ESP>-----
	2 measurements of first Type
	no measurements of type Reg<XMM7> -> Reg<ESP> so Reg<ESP> -> Reg<XMM7> can also not be measured
-----Reg<RSP> -> Reg<XMM7> and Reg<XMM7> -> Reg<RSP>-----
	4 measurements of first Type
	no measurements of type Reg<XMM7> -> Reg<RSP> so Reg<RSP> -> Reg<XMM7> can also not be measured
-----Reg<SSP> -> Reg<XMM7> and Reg<XMM7> -> Reg<SSP>-----
	6 measurements of first Type
	no measurements of type Reg<XMM7> -> Reg<SSP> so Reg<SSP> -> Reg<XMM7> can also not be measured
-----Reg<ESP> -> Reg<XMM8> and Reg<XMM8> -> Reg<ESP>-----
	2 measurements of first Type
	no measurements of type Reg<XMM8> -> Reg<ESP> so Reg<ESP> -> Reg<XMM8> can also not be measured
-----Reg<RSP> -> Reg<XMM8> and Reg<XMM8> -> Reg<RSP>-----
	4 measurements of first Type
	no measurements of type Reg<XMM8> -> Reg<RSP> so Reg<RSP> -> Reg<XMM8> can also not be measured
-----Reg<SSP> -> Reg<XMM8> and Reg<XMM8> -> Reg<SSP>-----
	6 measurements of first Type
	no measurements of type Reg<XMM8> -> Reg<SSP> so Reg<SSP> -> Reg<XMM8> can also not be measured
-----Reg<ESP> -> Reg<XMM9> and Reg<XMM9> -> Reg<ESP>-----
	2 measurements of first Type
	no measurements of type Reg<XMM9> -> Reg<ESP> so Reg<ESP> -> Reg<XMM9> can also not be measured
-----Reg<RSP> -> Reg<XMM9> and Reg<XMM9> -> Reg<RSP>-----
	4 measurements of first Type
	no measurements of type Reg<XMM9> -> Reg<RSP> so Reg<RSP> -> Reg<XMM9> can also not be measured
-----Reg<SSP> -> Reg<XMM9> and Reg<XMM9> -> Reg<SSP>-----
	6 measurements of first Type
	no measurements of type Reg<XMM9> -> Reg<SSP> so Reg<SSP> -> Reg<XMM9> can also not be measured
-----Reg<ESP> -> Reg<XMM10> and Reg<XMM10> -> Reg<ESP>-----
	2 measurements of first Type
	no measurements of type Reg<XMM10> -> Reg<ESP> so Reg<ESP> -> Reg<XMM10> can also not be measured
-----Reg<RSP> -> Reg<XMM10> and Reg<XMM10> -> Reg<RSP>-----
	4 measurements of first Type
	no measurements of type Reg<XMM10> -> Reg<RSP> so Reg<RSP> -> Reg<XMM10> can also not be measured
-----Reg<SSP> -> Reg<XMM10> and Reg<XMM10> -> Reg<SSP>-----
	6 measurements of first Type
	no measurements of type Reg<XMM10> -> Reg<SSP> so Reg<SSP> -> Reg<XMM10> can also not be measured
-----Reg<ESP> -> Reg<XMM11> and Reg<XMM11> -> Reg<ESP>-----
	2 measurements of first Type
	no measurements of type Reg<XMM11> -> Reg<ESP> so Reg<ESP> -> Reg<XMM11> can also not be measured
-----Reg<RSP> -> Reg<XMM11> and Reg<XMM11> -> Reg<RSP>-----
	4 measurements of first Type
	no measurements of type Reg<XMM11> -> Reg<RSP> so Reg<RSP> -> Reg<XMM11> can also not be measured
-----Reg<SSP> -> Reg<XMM11> and Reg<XMM11> -> Reg<SSP>-----
	6 measurements of first Type
	no measurements of type Reg<XMM11> -> Reg<SSP> so Reg<SSP> -> Reg<XMM11> can also not be measured
-----Reg<ESP> -> Reg<XMM12> and Reg<XMM12> -> Reg<ESP>-----
	2 measurements of first Type
	no measurements of type Reg<XMM12> -> Reg<ESP> so Reg<ESP> -> Reg<XMM12> can also not be measured
-----Reg<RSP> -> Reg<XMM12> and Reg<XMM12> -> Reg<RSP>-----
	4 measurements of first Type
	no measurements of type Reg<XMM12> -> Reg<RSP> so Reg<RSP> -> Reg<XMM12> can also not be measured
-----Reg<SSP> -> Reg<XMM12> and Reg<XMM12> -> Reg<SSP>-----
	6 measurements of first Type
	no measurements of type Reg<XMM12> -> Reg<SSP> so Reg<SSP> -> Reg<XMM12> can also not be measured
-----Reg<ESP> -> Reg<XMM13> and Reg<XMM13> -> Reg<ESP>-----
	2 measurements of first Type
	no measurements of type Reg<XMM13> -> Reg<ESP> so Reg<ESP> -> Reg<XMM13> can also not be measured
-----Reg<RSP> -> Reg<XMM13> and Reg<XMM13> -> Reg<RSP>-----
	4 measurements of first Type
	no measurements of type Reg<XMM13> -> Reg<RSP> so Reg<RSP> -> Reg<XMM13> can also not be measured
-----Reg<SSP> -> Reg<XMM13> and Reg<XMM13> -> Reg<SSP>-----
	6 measurements of first Type
	no measurements of type Reg<XMM13> -> Reg<SSP> so Reg<SSP> -> Reg<XMM13> can also not be measured
-----Reg<ESP> -> Reg<XMM14> and Reg<XMM14> -> Reg<ESP>-----
	2 measurements of first Type
	no measurements of type Reg<XMM14> -> Reg<ESP> so Reg<ESP> -> Reg<XMM14> can also not be measured
-----Reg<RSP> -> Reg<XMM14> and Reg<XMM14> -> Reg<RSP>-----
	4 measurements of first Type
	no measurements of type Reg<XMM14> -> Reg<RSP> so Reg<RSP> -> Reg<XMM14> can also not be measured
-----Reg<SSP> -> Reg<XMM14> and Reg<XMM14> -> Reg<SSP>-----
	6 measurements of first Type
	no measurements of type Reg<XMM14> -> Reg<SSP> so Reg<SSP> -> Reg<XMM14> can also not be measured
-----Reg<ESP> -> Reg<XMM15> and Reg<XMM15> -> Reg<ESP>-----
	2 measurements of first Type
	no measurements of type Reg<XMM15> -> Reg<ESP> so Reg<ESP> -> Reg<XMM15> can also not be measured
-----Reg<RSP> -> Reg<XMM15> and Reg<XMM15> -> Reg<RSP>-----
	4 measurements of first Type
	no measurements of type Reg<XMM15> -> Reg<RSP> so Reg<RSP> -> Reg<XMM15> can also not be measured
-----Reg<SSP> -> Reg<XMM15> and Reg<XMM15> -> Reg<SSP>-----
	6 measurements of first Type
	no measurements of type Reg<XMM15> -> Reg<SSP> so Reg<SSP> -> Reg<XMM15> can also not be measured


Report on individual measurements:
-----AAA-----
	AAA(impl(Reg<EFLAGS>) -> impl(Reg<EFLAGS>))  [ERROR_ASSEMBLY]
		ERROR_ASSEMBLY, this instruction cannot be measured on this platform

-----AAD8i8-----
	AAD8i8(impl(Reg<AX>) -> impl(Reg<AX>))  [ERROR_ASSEMBLY]
		ERROR_ASSEMBLY, this instruction cannot be measured on this platform

-----AAM8i8-----
	0x138383b5e198
		ERROR_ASSEMBLY, this instruction cannot be measured on this platform

-----AAS-----
	AAS(impl(Reg<EFLAGS>) -> impl(Reg<EFLAGS>))  [ERROR_ASSEMBLY]
		ERROR_ASSEMBLY, this instruction cannot be measured on this platform

-----ADC16i16-----
	ADC16i16(impl(Reg<AX>) -> impl(Reg<AX>))  [1;1]
		WARNING generated instructions have multiple dependencies. If they have different latencies the lower one will be shadowed
	ADC16i16(impl(Reg<EFLAGS>) -> impl(Reg<EFLAGS>))  [1.02;1.02]
		WARNING generated instructions have multiple dependencies. If they have different latencies the lower one will be shadowed
	ADC16i16(impl(Reg<EFLAGS>) -> impl(Reg<AX>))  [1.01;1.03]
		Dependencies:
			ADC16i16(impl(Reg<EFLAGS>) -> impl(Reg<AX>)) 
			ADC16i16(impl(Reg<AX>) -> impl(Reg<EFLAGS>)) 
		Combined result: 2.03 cycles
	ADC16i16(impl(Reg<AX>) -> impl(Reg<EFLAGS>))  [0.987;1]
		Dependencies:
			ADC16i16(impl(Reg<EFLAGS>) -> impl(Reg<AX>)) 
			ADC16i16(impl(Reg<AX>) -> impl(Reg<EFLAGS>)) 
		Combined result: 2.01 cycles

-----ADC16ri-----
	ADC16ri(1(Class<GR16>) -> 0(Class<GR16>))  [1.01;1.01]
		WARNING generated instructions have multiple dependencies. If they have different latencies the lower one will be shadowed
	ADC16ri(impl(Reg<EFLAGS>) -> impl(Reg<EFLAGS>))  [1.01;1.01]
		WARNING generated instructions have multiple dependencies. If they have different latencies the lower one will be shadowed
	ADC16ri(impl(Reg<EFLAGS>) -> 0(Class<GR16>))  [1.05;1.07]
		Dependencies:
			ADC16rr(impl(Reg<EFLAGS>) -> 0(Class<GR16>)) 
			ADC16ri(1(Class<GR16>) -> impl(Reg<EFLAGS>)) 
		Combined result: 2.07 cycles
	ADC16ri(1(Class<GR16>) -> impl(Reg<EFLAGS>))  [1.01;1.02]
		Dependencies:
			ADC16rr(impl(Reg<EFLAGS>) -> 0(Class<GR16>)) 
			ADC16ri(1(Class<GR16>) -> impl(Reg<EFLAGS>)) 
		Combined result: 2.02 cycles

-----ADC16ri8-----
	ADC16ri8(1(Class<GR16>) -> 0(Class<GR16>))  [0.999;0.999]
		WARNING generated instructions have multiple dependencies. If they have different latencies the lower one will be shadowed
	ADC16ri8(impl(Reg<EFLAGS>) -> impl(Reg<EFLAGS>))  [1.01;1.01]
		WARNING generated instructions have multiple dependencies. If they have different latencies the lower one will be shadowed
	ADC16ri8(impl(Reg<EFLAGS>) -> 0(Class<GR16>))  [1.05;1.06]
		Dependencies:
			ADC16rr(impl(Reg<EFLAGS>) -> 0(Class<GR16>)) 
			ADC16ri(1(Class<GR16>) -> impl(Reg<EFLAGS>)) 
		Combined result: 2.06 cycles
	ADC16ri8(1(Class<GR16>) -> impl(Reg<EFLAGS>))  [1;1.02]
		Dependencies:
			ADC16rr(impl(Reg<EFLAGS>) -> 0(Class<GR16>)) 
			ADC16ri(1(Class<GR16>) -> impl(Reg<EFLAGS>)) 
		Combined result: 2.02 cycles

-----ADC16ri8_EVEX-----
	ADC16ri8_EVEX(1(Class<GR16>) -> 0(Class<GR16>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	ADC16ri8_EVEX(impl(Reg<EFLAGS>) -> impl(Reg<EFLAGS>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----ADC16ri8_ND-----
	ADC16ri8_ND(1(Class<GR16>) -> 0(Class<GR16>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	ADC16ri8_ND(impl(Reg<EFLAGS>) -> impl(Reg<EFLAGS>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----ADC16ri_EVEX-----
	ADC16ri_EVEX(1(Class<GR16>) -> 0(Class<GR16>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	ADC16ri_EVEX(impl(Reg<EFLAGS>) -> impl(Reg<EFLAGS>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----ADC16ri_ND-----
	ADC16ri_ND(1(Class<GR16>) -> 0(Class<GR16>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	ADC16ri_ND(impl(Reg<EFLAGS>) -> impl(Reg<EFLAGS>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----ADC16rr-----
	ADC16rr(1(Class<GR16>) -> 0(Class<GR16>))  [0.999;0.999]
		WARNING generated instructions have multiple dependencies. If they have different latencies the lower one will be shadowed
	ADC16rr(2(Class<GR16>) -> 0(Class<GR16>))  [1.01;1.01]
		WARNING generated instructions have multiple dependencies. If they have different latencies the lower one will be shadowed
	ADC16rr(impl(Reg<EFLAGS>) -> impl(Reg<EFLAGS>))  [1;1]
		WARNING generated instructions have multiple dependencies. If they have different latencies the lower one will be shadowed
	ADC16rr(impl(Reg<EFLAGS>) -> 0(Class<GR16>))  [0.995;1.01]
		Dependencies:
			ADC16rr(impl(Reg<EFLAGS>) -> 0(Class<GR16>)) 
			ADC16ri(1(Class<GR16>) -> impl(Reg<EFLAGS>)) 
		Combined result: 2.01 cycles
	ADC16rr(1(Class<GR16>) -> impl(Reg<EFLAGS>))  [1.01;1.02]
		Dependencies:
			ADC16rr(impl(Reg<EFLAGS>) -> 0(Class<GR16>)) 
			ADC16ri(1(Class<GR16>) -> impl(Reg<EFLAGS>)) 
		Combined result: 2.02 cycles
	ADC16rr(2(Class<GR16>) -> impl(Reg<EFLAGS>))  [1;1.02]
		Dependencies:
			ADC16rr(impl(Reg<EFLAGS>) -> 0(Class<GR16>)) 
			ADC16ri(1(Class<GR16>) -> impl(Reg<EFLAGS>)) 
		Combined result: 2.01 cycles

-----ADC16rr_EVEX-----
	ADC16rr_EVEX(1(Class<GR16>) -> 0(Class<GR16>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	ADC16rr_EVEX(2(Class<GR16>) -> 0(Class<GR16>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	ADC16rr_EVEX(impl(Reg<EFLAGS>) -> impl(Reg<EFLAGS>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----ADC16rr_EVEX_REV-----
	ADC16rr_EVEX_REV(1(Class<GR16>) -> 0(Class<GR16>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	ADC16rr_EVEX_REV(2(Class<GR16>) -> 0(Class<GR16>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	ADC16rr_EVEX_REV(impl(Reg<EFLAGS>) -> impl(Reg<EFLAGS>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----ADC16rr_ND-----
	ADC16rr_ND(1(Class<GR16>) -> 0(Class<GR16>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	ADC16rr_ND(2(Class<GR16>) -> 0(Class<GR16>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	ADC16rr_ND(impl(Reg<EFLAGS>) -> impl(Reg<EFLAGS>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----ADC16rr_ND_REV-----
	ADC16rr_ND_REV(1(Class<GR16>) -> 0(Class<GR16>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	ADC16rr_ND_REV(2(Class<GR16>) -> 0(Class<GR16>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	ADC16rr_ND_REV(impl(Reg<EFLAGS>) -> impl(Reg<EFLAGS>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----ADC16rr_REV-----
	ADC16rr_REV(1(Class<GR16>) -> 0(Class<GR16>))  [1.01;1.01]
		WARNING generated instructions have multiple dependencies. If they have different latencies the lower one will be shadowed
	ADC16rr_REV(2(Class<GR16>) -> 0(Class<GR16>))  [1.01;1.01]
		WARNING generated instructions have multiple dependencies. If they have different latencies the lower one will be shadowed
	ADC16rr_REV(impl(Reg<EFLAGS>) -> impl(Reg<EFLAGS>))  [1.01;1.01]
		WARNING generated instructions have multiple dependencies. If they have different latencies the lower one will be shadowed
	ADC16rr_REV(impl(Reg<EFLAGS>) -> 0(Class<GR16>))  [0.976;0.995]
		Dependencies:
			ADC16rr(impl(Reg<EFLAGS>) -> 0(Class<GR16>)) 
			ADC16ri(1(Class<GR16>) -> impl(Reg<EFLAGS>)) 
		Combined result: 2 cycles
	ADC16rr_REV(1(Class<GR16>) -> impl(Reg<EFLAGS>))  [1.01;1.03]
		Dependencies:
			ADC16rr(impl(Reg<EFLAGS>) -> 0(Class<GR16>)) 
			ADC16ri(1(Class<GR16>) -> impl(Reg<EFLAGS>)) 
		Combined result: 2.02 cycles
	ADC16rr_REV(2(Class<GR16>) -> impl(Reg<EFLAGS>))  [1;1.02]
		Dependencies:
			ADC16rr(impl(Reg<EFLAGS>) -> 0(Class<GR16>)) 
			ADC16ri(1(Class<GR16>) -> impl(Reg<EFLAGS>)) 
		Combined result: 2.02 cycles

-----ADC32i32-----
	ADC32i32(impl(Reg<EAX>) -> impl(Reg<EAX>))  [1.01;1.01]
		WARNING generated instructions have multiple dependencies. If they have different latencies the lower one will be shadowed
	ADC32i32(impl(Reg<EFLAGS>) -> impl(Reg<EFLAGS>))  [1.02;1.02]
		WARNING generated instructions have multiple dependencies. If they have different latencies the lower one will be shadowed
	ADC32i32(impl(Reg<EFLAGS>) -> impl(Reg<EAX>))  [1;1.02]
		Dependencies:
			ADC32i32(impl(Reg<EFLAGS>) -> impl(Reg<EAX>)) 
			ADC32i32(impl(Reg<EAX>) -> impl(Reg<EFLAGS>)) 
		Combined result: 2.02 cycles
	ADC32i32(impl(Reg<EAX>) -> impl(Reg<EFLAGS>))  [1;1.02]
		Dependencies:
			ADC32i32(impl(Reg<EFLAGS>) -> impl(Reg<EAX>)) 
			ADC32i32(impl(Reg<EAX>) -> impl(Reg<EFLAGS>)) 
		Combined result: 2.02 cycles

-----ADC32ri-----
	ADC32ri(1(Class<GR32>) -> 0(Class<GR32>))  [1.01;1.01]
		WARNING generated instructions have multiple dependencies. If they have different latencies the lower one will be shadowed
	ADC32ri(impl(Reg<EFLAGS>) -> impl(Reg<EFLAGS>))  [1.01;1.01]
		WARNING generated instructions have multiple dependencies. If they have different latencies the lower one will be shadowed
	ADC32ri(impl(Reg<EFLAGS>) -> 0(Class<GR32>))  [0.989;1.01]
		Dependencies:
			ADC32ri8(impl(Reg<EFLAGS>) -> 0(Class<GR32>)) 
			ADC32ri(1(Class<GR32>) -> impl(Reg<EFLAGS>)) 
		Combined result: 2.01 cycles
	ADC32ri(1(Class<GR32>) -> impl(Reg<EFLAGS>))  [0.995;1.01]
		Dependencies:
			ADC32ri8(impl(Reg<EFLAGS>) -> 0(Class<GR32>)) 
			ADC32ri(1(Class<GR32>) -> impl(Reg<EFLAGS>)) 
		Combined result: 2.02 cycles

-----ADC32ri8-----
	ADC32ri8(1(Class<GR32>) -> 0(Class<GR32>))  [1.01;1.01]
		WARNING generated instructions have multiple dependencies. If they have different latencies the lower one will be shadowed
	ADC32ri8(impl(Reg<EFLAGS>) -> impl(Reg<EFLAGS>))  [1.01;1.01]
		WARNING generated instructions have multiple dependencies. If they have different latencies the lower one will be shadowed
	ADC32ri8(impl(Reg<EFLAGS>) -> 0(Class<GR32>))  [1.01;1.03]
		Dependencies:
			ADC32ri8(impl(Reg<EFLAGS>) -> 0(Class<GR32>)) 
			ADC32ri(1(Class<GR32>) -> impl(Reg<EFLAGS>)) 
		Combined result: 2.03 cycles
	ADC32ri8(1(Class<GR32>) -> impl(Reg<EFLAGS>))  [0.992;1.01]
		Dependencies:
			ADC32ri8(impl(Reg<EFLAGS>) -> 0(Class<GR32>)) 
			ADC32ri(1(Class<GR32>) -> impl(Reg<EFLAGS>)) 
		Combined result: 2.02 cycles

-----ADC32ri8_EVEX-----
	ADC32ri8_EVEX(1(Class<GR32>) -> 0(Class<GR32>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	ADC32ri8_EVEX(impl(Reg<EFLAGS>) -> impl(Reg<EFLAGS>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----ADC32ri8_ND-----
	ADC32ri8_ND(1(Class<GR32>) -> 0(Class<GR32>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	ADC32ri8_ND(impl(Reg<EFLAGS>) -> impl(Reg<EFLAGS>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----ADC32ri_EVEX-----
	ADC32ri_EVEX(1(Class<GR32>) -> 0(Class<GR32>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	ADC32ri_EVEX(impl(Reg<EFLAGS>) -> impl(Reg<EFLAGS>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----ADC32ri_ND-----
	ADC32ri_ND(1(Class<GR32>) -> 0(Class<GR32>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	ADC32ri_ND(impl(Reg<EFLAGS>) -> impl(Reg<EFLAGS>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----ADC32rr-----
	ADC32rr(1(Class<GR32>) -> 0(Class<GR32>))  [0.999;0.999]
		WARNING generated instructions have multiple dependencies. If they have different latencies the lower one will be shadowed
	ADC32rr(2(Class<GR32>) -> 0(Class<GR32>))  [1.02;1.02]
		WARNING generated instructions have multiple dependencies. If they have different latencies the lower one will be shadowed
	ADC32rr(impl(Reg<EFLAGS>) -> impl(Reg<EFLAGS>))  [1.01;1.01]
		WARNING generated instructions have multiple dependencies. If they have different latencies the lower one will be shadowed
	ADC32rr(impl(Reg<EFLAGS>) -> 0(Class<GR32>))  [1;1.02]
		Dependencies:
			ADC32ri8(impl(Reg<EFLAGS>) -> 0(Class<GR32>)) 
			ADC32ri(1(Class<GR32>) -> impl(Reg<EFLAGS>)) 
		Combined result: 2.02 cycles
	ADC32rr(1(Class<GR32>) -> impl(Reg<EFLAGS>))  [0.992;1.01]
		Dependencies:
			ADC32ri8(impl(Reg<EFLAGS>) -> 0(Class<GR32>)) 
			ADC32ri(1(Class<GR32>) -> impl(Reg<EFLAGS>)) 
		Combined result: 2.02 cycles
	ADC32rr(2(Class<GR32>) -> impl(Reg<EFLAGS>))  [0.996;1.01]
		Dependencies:
			ADC32ri8(impl(Reg<EFLAGS>) -> 0(Class<GR32>)) 
			ADC32ri(1(Class<GR32>) -> impl(Reg<EFLAGS>)) 
		Combined result: 2.02 cycles

-----ADC32rr_EVEX-----
	ADC32rr_EVEX(1(Class<GR32>) -> 0(Class<GR32>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	ADC32rr_EVEX(2(Class<GR32>) -> 0(Class<GR32>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	ADC32rr_EVEX(impl(Reg<EFLAGS>) -> impl(Reg<EFLAGS>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----ADC32rr_EVEX_REV-----
	ADC32rr_EVEX_REV(1(Class<GR32>) -> 0(Class<GR32>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	ADC32rr_EVEX_REV(2(Class<GR32>) -> 0(Class<GR32>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	ADC32rr_EVEX_REV(impl(Reg<EFLAGS>) -> impl(Reg<EFLAGS>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----ADC32rr_ND-----
	ADC32rr_ND(1(Class<GR32>) -> 0(Class<GR32>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	ADC32rr_ND(2(Class<GR32>) -> 0(Class<GR32>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	ADC32rr_ND(impl(Reg<EFLAGS>) -> impl(Reg<EFLAGS>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----ADC32rr_ND_REV-----
	ADC32rr_ND_REV(1(Class<GR32>) -> 0(Class<GR32>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	ADC32rr_ND_REV(2(Class<GR32>) -> 0(Class<GR32>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	ADC32rr_ND_REV(impl(Reg<EFLAGS>) -> impl(Reg<EFLAGS>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----ADC32rr_REV-----
	ADC32rr_REV(1(Class<GR32>) -> 0(Class<GR32>))  [1.01;1.01]
		WARNING generated instructions have multiple dependencies. If they have different latencies the lower one will be shadowed
	ADC32rr_REV(2(Class<GR32>) -> 0(Class<GR32>))  [1;1]
		WARNING generated instructions have multiple dependencies. If they have different latencies the lower one will be shadowed
	ADC32rr_REV(impl(Reg<EFLAGS>) -> impl(Reg<EFLAGS>))  [1.02;1.02]
		WARNING generated instructions have multiple dependencies. If they have different latencies the lower one will be shadowed
	ADC32rr_REV(impl(Reg<EFLAGS>) -> 0(Class<GR32>))  [1;1.02]
		Dependencies:
			ADC32ri8(impl(Reg<EFLAGS>) -> 0(Class<GR32>)) 
			ADC32ri(1(Class<GR32>) -> impl(Reg<EFLAGS>)) 
		Combined result: 2.02 cycles
	ADC32rr_REV(1(Class<GR32>) -> impl(Reg<EFLAGS>))  [1.01;1.03]
		Dependencies:
			ADC32ri8(impl(Reg<EFLAGS>) -> 0(Class<GR32>)) 
			ADC32ri(1(Class<GR32>) -> impl(Reg<EFLAGS>)) 
		Combined result: 2.04 cycles
	ADC32rr_REV(2(Class<GR32>) -> impl(Reg<EFLAGS>))  [0.991;1.01]
		Dependencies:
			ADC32ri8(impl(Reg<EFLAGS>) -> 0(Class<GR32>)) 
			ADC32ri(1(Class<GR32>) -> impl(Reg<EFLAGS>)) 
		Combined result: 2.02 cycles

-----ADC64i32-----
	ADC64i32(impl(Reg<RAX>) -> impl(Reg<RAX>))  [1.01;1.01]
		WARNING generated instructions have multiple dependencies. If they have different latencies the lower one will be shadowed
	ADC64i32(impl(Reg<EFLAGS>) -> impl(Reg<EFLAGS>))  [1;1]
		WARNING generated instructions have multiple dependencies. If they have different latencies the lower one will be shadowed
	ADC64i32(impl(Reg<RAX>) -> impl(Reg<EFLAGS>))  [1;1.02]
		Dependencies:
			CMP64i32(impl(Reg<RAX>) -> impl(Reg<EFLAGS>)) 
			ADC64i32(impl(Reg<EFLAGS>) -> impl(Reg<RAX>)) 
		Combined result: 2.02 cycles
	ADC64i32(impl(Reg<EFLAGS>) -> impl(Reg<RAX>))  [0.995;1.01]
		Dependencies:
			CMP64i32(impl(Reg<RAX>) -> impl(Reg<EFLAGS>)) 
			ADC64i32(impl(Reg<EFLAGS>) -> impl(Reg<RAX>)) 
		Combined result: 2.01 cycles

-----ADC64ri32-----
	ADC64ri32(1(Class<GR64>) -> 0(Class<GR64>))  [1;1]
		WARNING generated instructions have multiple dependencies. If they have different latencies the lower one will be shadowed
	ADC64ri32(impl(Reg<EFLAGS>) -> impl(Reg<EFLAGS>))  [1;1]
		WARNING generated instructions have multiple dependencies. If they have different latencies the lower one will be shadowed
	ADC64ri32(impl(Reg<EFLAGS>) -> 0(Class<GR64>))  [1.04;1.05]
		Dependencies:
			ADC64rr(impl(Reg<EFLAGS>) -> 0(Class<GR64>)) 
			ADC64ri32(1(Class<GR64>) -> impl(Reg<EFLAGS>)) 
		Combined result: 2.05 cycles
	ADC64ri32(1(Class<GR64>) -> impl(Reg<EFLAGS>))  [1;1.02]
		Dependencies:
			ADC64rr(impl(Reg<EFLAGS>) -> 0(Class<GR64>)) 
			ADC64ri32(1(Class<GR64>) -> impl(Reg<EFLAGS>)) 
		Combined result: 2.01 cycles

-----ADC64ri32_EVEX-----
	ADC64ri32_EVEX(1(Class<GR64>) -> 0(Class<GR64>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	ADC64ri32_EVEX(impl(Reg<EFLAGS>) -> impl(Reg<EFLAGS>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----ADC64ri32_ND-----
	ADC64ri32_ND(1(Class<GR64>) -> 0(Class<GR64>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	ADC64ri32_ND(impl(Reg<EFLAGS>) -> impl(Reg<EFLAGS>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----ADC64ri8-----
	ADC64ri8(1(Class<GR64>) -> 0(Class<GR64>))  [1;1]
		WARNING generated instructions have multiple dependencies. If they have different latencies the lower one will be shadowed
	ADC64ri8(impl(Reg<EFLAGS>) -> impl(Reg<EFLAGS>))  [1.01;1.01]
		WARNING generated instructions have multiple dependencies. If they have different latencies the lower one will be shadowed
	ADC64ri8(impl(Reg<EFLAGS>) -> 0(Class<GR64>))  [1.05;1.06]
		Dependencies:
			ADC64rr(impl(Reg<EFLAGS>) -> 0(Class<GR64>)) 
			ADC64ri32(1(Class<GR64>) -> impl(Reg<EFLAGS>)) 
		Combined result: 2.06 cycles
	ADC64ri8(1(Class<GR64>) -> impl(Reg<EFLAGS>))  [1.01;1.02]
		Dependencies:
			ADC64rr(impl(Reg<EFLAGS>) -> 0(Class<GR64>)) 
			ADC64ri32(1(Class<GR64>) -> impl(Reg<EFLAGS>)) 
		Combined result: 2.01 cycles

-----ADC64ri8_EVEX-----
	ADC64ri8_EVEX(1(Class<GR64>) -> 0(Class<GR64>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	ADC64ri8_EVEX(impl(Reg<EFLAGS>) -> impl(Reg<EFLAGS>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----ADC64ri8_ND-----
	ADC64ri8_ND(1(Class<GR64>) -> 0(Class<GR64>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	ADC64ri8_ND(impl(Reg<EFLAGS>) -> impl(Reg<EFLAGS>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----ADC64rr-----
	ADC64rr(1(Class<GR64>) -> 0(Class<GR64>))  [1;1]
		WARNING generated instructions have multiple dependencies. If they have different latencies the lower one will be shadowed
	ADC64rr(2(Class<GR64>) -> 0(Class<GR64>))  [1.01;1.01]
		WARNING generated instructions have multiple dependencies. If they have different latencies the lower one will be shadowed
	ADC64rr(impl(Reg<EFLAGS>) -> impl(Reg<EFLAGS>))  [1.01;1.01]
		WARNING generated instructions have multiple dependencies. If they have different latencies the lower one will be shadowed
	ADC64rr(impl(Reg<EFLAGS>) -> 0(Class<GR64>))  [0.991;1.01]
		Dependencies:
			ADC64rr(impl(Reg<EFLAGS>) -> 0(Class<GR64>)) 
			ADC64ri32(1(Class<GR64>) -> impl(Reg<EFLAGS>)) 
		Combined result: 2.01 cycles
	ADC64rr(1(Class<GR64>) -> impl(Reg<EFLAGS>))  [1.03;1.04]
		Dependencies:
			ADC64rr(impl(Reg<EFLAGS>) -> 0(Class<GR64>)) 
			ADC64ri32(1(Class<GR64>) -> impl(Reg<EFLAGS>)) 
		Combined result: 2.03 cycles
	ADC64rr(2(Class<GR64>) -> impl(Reg<EFLAGS>))  [1.01;1.03]
		Dependencies:
			ADC64rr(impl(Reg<EFLAGS>) -> 0(Class<GR64>)) 
			ADC64ri32(1(Class<GR64>) -> impl(Reg<EFLAGS>)) 
		Combined result: 2.02 cycles

-----ADC64rr_EVEX-----
	ADC64rr_EVEX(1(Class<GR64>) -> 0(Class<GR64>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	ADC64rr_EVEX(2(Class<GR64>) -> 0(Class<GR64>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	ADC64rr_EVEX(impl(Reg<EFLAGS>) -> impl(Reg<EFLAGS>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----ADC64rr_EVEX_REV-----
	ADC64rr_EVEX_REV(1(Class<GR64>) -> 0(Class<GR64>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	ADC64rr_EVEX_REV(2(Class<GR64>) -> 0(Class<GR64>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	ADC64rr_EVEX_REV(impl(Reg<EFLAGS>) -> impl(Reg<EFLAGS>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----ADC64rr_ND-----
	ADC64rr_ND(1(Class<GR64>) -> 0(Class<GR64>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	ADC64rr_ND(2(Class<GR64>) -> 0(Class<GR64>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	ADC64rr_ND(impl(Reg<EFLAGS>) -> impl(Reg<EFLAGS>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----ADC64rr_ND_REV-----
	ADC64rr_ND_REV(1(Class<GR64>) -> 0(Class<GR64>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	ADC64rr_ND_REV(2(Class<GR64>) -> 0(Class<GR64>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	ADC64rr_ND_REV(impl(Reg<EFLAGS>) -> impl(Reg<EFLAGS>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----ADC64rr_REV-----
	ADC64rr_REV(1(Class<GR64>) -> 0(Class<GR64>))  [1.02;1.02]
		WARNING generated instructions have multiple dependencies. If they have different latencies the lower one will be shadowed
	ADC64rr_REV(2(Class<GR64>) -> 0(Class<GR64>))  [1.01;1.01]
		WARNING generated instructions have multiple dependencies. If they have different latencies the lower one will be shadowed
	ADC64rr_REV(impl(Reg<EFLAGS>) -> impl(Reg<EFLAGS>))  [1;1]
		WARNING generated instructions have multiple dependencies. If they have different latencies the lower one will be shadowed
	ADC64rr_REV(impl(Reg<EFLAGS>) -> 0(Class<GR64>))  [1;1.02]
		Dependencies:
			ADC64rr(impl(Reg<EFLAGS>) -> 0(Class<GR64>)) 
			ADC64ri32(1(Class<GR64>) -> impl(Reg<EFLAGS>)) 
		Combined result: 2.02 cycles
	ADC64rr_REV(1(Class<GR64>) -> impl(Reg<EFLAGS>))  [1.01;1.02]
		Dependencies:
			ADC64rr(impl(Reg<EFLAGS>) -> 0(Class<GR64>)) 
			ADC64ri32(1(Class<GR64>) -> impl(Reg<EFLAGS>)) 
		Combined result: 2.02 cycles
	ADC64rr_REV(2(Class<GR64>) -> impl(Reg<EFLAGS>))  [1.02;1.03]
		Dependencies:
			ADC64rr(impl(Reg<EFLAGS>) -> 0(Class<GR64>)) 
			ADC64ri32(1(Class<GR64>) -> impl(Reg<EFLAGS>)) 
		Combined result: 2.02 cycles

-----ADC8i8-----
	ADC8i8(impl(Reg<AL>) -> impl(Reg<AL>))  [1;1]
		WARNING generated instructions have multiple dependencies. If they have different latencies the lower one will be shadowed
	ADC8i8(impl(Reg<EFLAGS>) -> impl(Reg<EFLAGS>))  [1.01;1.01]
		WARNING generated instructions have multiple dependencies. If they have different latencies the lower one will be shadowed
	ADC8i8(impl(Reg<EFLAGS>) -> impl(Reg<AL>))  [1;1.02]
		Dependencies:
			ADC8i8(impl(Reg<EFLAGS>) -> impl(Reg<AL>)) 
			CMP8i8(impl(Reg<AL>) -> impl(Reg<EFLAGS>)) 
		Combined result: 2.02 cycles
	ADC8i8(impl(Reg<AL>) -> impl(Reg<EFLAGS>))  [0.991;1.01]
		Dependencies:
			ADC8i8(impl(Reg<EFLAGS>) -> impl(Reg<AL>)) 
			CMP8i8(impl(Reg<AL>) -> impl(Reg<EFLAGS>)) 
		Combined result: 2.01 cycles

-----ADC8ri-----
	ADC8ri(1(Class<GR8>) -> 0(Class<GR8>))  [1;1]
		WARNING generated instructions have multiple dependencies. If they have different latencies the lower one will be shadowed
	ADC8ri(impl(Reg<EFLAGS>) -> impl(Reg<EFLAGS>))  [1;1]
		WARNING generated instructions have multiple dependencies. If they have different latencies the lower one will be shadowed
	ADC8ri(impl(Reg<EFLAGS>) -> 0(Class<GR8>))  [1;1.02]
		Dependencies:
			ADC8ri8(impl(Reg<EFLAGS>) -> 0(Class<GR8>)) 
			ADC8ri(1(Class<GR8>) -> impl(Reg<EFLAGS>)) 
		Combined result: 2.02 cycles
	ADC8ri(1(Class<GR8>) -> impl(Reg<EFLAGS>))  [1.01;1.02]
		Dependencies:
			ADC8ri8(impl(Reg<EFLAGS>) -> 0(Class<GR8>)) 
			ADC8ri(1(Class<GR8>) -> impl(Reg<EFLAGS>)) 
		Combined result: 2.02 cycles

-----ADC8ri8-----
	ADC8ri8(1(Class<GR8>) -> 0(Class<GR8>))  [1.01;1.01]
		WARNING generated instructions have multiple dependencies. If they have different latencies the lower one will be shadowed
	ADC8ri8(impl(Reg<EFLAGS>) -> impl(Reg<EFLAGS>))  [1.02;1.02]
		WARNING generated instructions have multiple dependencies. If they have different latencies the lower one will be shadowed
	ADC8ri8(impl(Reg<EFLAGS>) -> 0(Class<GR8>))  [1;1.02]
		Dependencies:
			ADC8ri8(impl(Reg<EFLAGS>) -> 0(Class<GR8>)) 
			ADC8ri(1(Class<GR8>) -> impl(Reg<EFLAGS>)) 
		Combined result: 2.02 cycles
	ADC8ri8(1(Class<GR8>) -> impl(Reg<EFLAGS>))  [0.996;1.01]
		Dependencies:
			ADC8ri8(impl(Reg<EFLAGS>) -> 0(Class<GR8>)) 
			ADC8ri(1(Class<GR8>) -> impl(Reg<EFLAGS>)) 
		Combined result: 2.01 cycles

-----ADC8ri_EVEX-----
	ADC8ri_EVEX(1(Class<GR8>) -> 0(Class<GR8>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	ADC8ri_EVEX(impl(Reg<EFLAGS>) -> impl(Reg<EFLAGS>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----ADC8ri_ND-----
	ADC8ri_ND(1(Class<GR8>) -> 0(Class<GR8>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	ADC8ri_ND(impl(Reg<EFLAGS>) -> impl(Reg<EFLAGS>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----ADC8rr-----
	ADC8rr(1(Class<GR8>) -> 0(Class<GR8>))  [1.01;1.01]
		WARNING generated instructions have multiple dependencies. If they have different latencies the lower one will be shadowed
	ADC8rr(2(Class<GR8>) -> 0(Class<GR8>))  [1.02;1.02]
		WARNING generated instructions have multiple dependencies. If they have different latencies the lower one will be shadowed
	ADC8rr(impl(Reg<EFLAGS>) -> impl(Reg<EFLAGS>))  [1;1]
		WARNING generated instructions have multiple dependencies. If they have different latencies the lower one will be shadowed
	ADC8rr(impl(Reg<EFLAGS>) -> 0(Class<GR8>))  [0.999;1.02]
		Dependencies:
			ADC8ri8(impl(Reg<EFLAGS>) -> 0(Class<GR8>)) 
			ADC8ri(1(Class<GR8>) -> impl(Reg<EFLAGS>)) 
		Combined result: 2.02 cycles
	ADC8rr(1(Class<GR8>) -> impl(Reg<EFLAGS>))  [0.998;1.01]
		Dependencies:
			ADC8ri8(impl(Reg<EFLAGS>) -> 0(Class<GR8>)) 
			ADC8ri(1(Class<GR8>) -> impl(Reg<EFLAGS>)) 
		Combined result: 2.01 cycles
	ADC8rr(2(Class<GR8>) -> impl(Reg<EFLAGS>))  [1.01;1.03]
		Dependencies:
			ADC8ri8(impl(Reg<EFLAGS>) -> 0(Class<GR8>)) 
			ADC8ri(1(Class<GR8>) -> impl(Reg<EFLAGS>)) 
		Combined result: 2.03 cycles

-----ADC8rr_EVEX-----
	ADC8rr_EVEX(1(Class<GR8>) -> 0(Class<GR8>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	ADC8rr_EVEX(2(Class<GR8>) -> 0(Class<GR8>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	ADC8rr_EVEX(impl(Reg<EFLAGS>) -> impl(Reg<EFLAGS>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----ADC8rr_EVEX_REV-----
	ADC8rr_EVEX_REV(1(Class<GR8>) -> 0(Class<GR8>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	ADC8rr_EVEX_REV(2(Class<GR8>) -> 0(Class<GR8>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	ADC8rr_EVEX_REV(impl(Reg<EFLAGS>) -> impl(Reg<EFLAGS>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----ADC8rr_ND-----
	ADC8rr_ND(1(Class<GR8>) -> 0(Class<GR8>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	ADC8rr_ND(2(Class<GR8>) -> 0(Class<GR8>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	ADC8rr_ND(impl(Reg<EFLAGS>) -> impl(Reg<EFLAGS>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----ADC8rr_ND_REV-----
	ADC8rr_ND_REV(1(Class<GR8>) -> 0(Class<GR8>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	ADC8rr_ND_REV(2(Class<GR8>) -> 0(Class<GR8>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	ADC8rr_ND_REV(impl(Reg<EFLAGS>) -> impl(Reg<EFLAGS>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----ADC8rr_REV-----
	ADC8rr_REV(1(Class<GR8>) -> 0(Class<GR8>))  [1;1]
		WARNING generated instructions have multiple dependencies. If they have different latencies the lower one will be shadowed
	ADC8rr_REV(2(Class<GR8>) -> 0(Class<GR8>))  [1;1]
		WARNING generated instructions have multiple dependencies. If they have different latencies the lower one will be shadowed
	ADC8rr_REV(impl(Reg<EFLAGS>) -> impl(Reg<EFLAGS>))  [1.01;1.01]
		WARNING generated instructions have multiple dependencies. If they have different latencies the lower one will be shadowed
	ADC8rr_REV(impl(Reg<EFLAGS>) -> 0(Class<GR8>))  [1.03;1.05]
		Dependencies:
			ADC8ri8(impl(Reg<EFLAGS>) -> 0(Class<GR8>)) 
			ADC8ri(1(Class<GR8>) -> impl(Reg<EFLAGS>)) 
		Combined result: 2.05 cycles
	ADC8rr_REV(1(Class<GR8>) -> impl(Reg<EFLAGS>))  [1.01;1.02]
		Dependencies:
			ADC8ri8(impl(Reg<EFLAGS>) -> 0(Class<GR8>)) 
			ADC8ri(1(Class<GR8>) -> impl(Reg<EFLAGS>)) 
		Combined result: 2.02 cycles
	ADC8rr_REV(2(Class<GR8>) -> impl(Reg<EFLAGS>))  [1.01;1.03]
		Dependencies:
			ADC8ri8(impl(Reg<EFLAGS>) -> 0(Class<GR8>)) 
			ADC8ri(1(Class<GR8>) -> impl(Reg<EFLAGS>)) 
		Combined result: 2.03 cycles

-----ADCX32rr-----
	ADCX32rr(1(Class<GR32>) -> 0(Class<GR32>))  [1;1]
		WARNING generated instructions have multiple dependencies. If they have different latencies the lower one will be shadowed
	ADCX32rr(2(Class<GR32>) -> 0(Class<GR32>))  [1;1]
		WARNING generated instructions have multiple dependencies. If they have different latencies the lower one will be shadowed
	ADCX32rr(impl(Reg<EFLAGS>) -> impl(Reg<EFLAGS>))  [1.02;1.02]
		WARNING generated instructions have multiple dependencies. If they have different latencies the lower one will be shadowed
	ADCX32rr(impl(Reg<EFLAGS>) -> 0(Class<GR32>))  [1.01;1.03]
		Dependencies:
			ADC32ri8(impl(Reg<EFLAGS>) -> 0(Class<GR32>)) 
			ADC32ri(1(Class<GR32>) -> impl(Reg<EFLAGS>)) 
		Combined result: 2.03 cycles
	ADCX32rr(1(Class<GR32>) -> impl(Reg<EFLAGS>))  [1;1.02]
		Dependencies:
			ADC32ri8(impl(Reg<EFLAGS>) -> 0(Class<GR32>)) 
			ADC32ri(1(Class<GR32>) -> impl(Reg<EFLAGS>)) 
		Combined result: 2.03 cycles
	ADCX32rr(2(Class<GR32>) -> impl(Reg<EFLAGS>))  [1.03;1.05]
		Dependencies:
			ADC32ri8(impl(Reg<EFLAGS>) -> 0(Class<GR32>)) 
			ADC32ri(1(Class<GR32>) -> impl(Reg<EFLAGS>)) 
		Combined result: 2.06 cycles

-----ADCX32rr_EVEX-----
	ADCX32rr_EVEX(1(Class<GR32>) -> 0(Class<GR32>))  [1.01;1.01]
		WARNING generated instructions have multiple dependencies. If they have different latencies the lower one will be shadowed
	ADCX32rr_EVEX(2(Class<GR32>) -> 0(Class<GR32>))  [1.01;1.01]
		WARNING generated instructions have multiple dependencies. If they have different latencies the lower one will be shadowed
	ADCX32rr_EVEX(impl(Reg<EFLAGS>) -> impl(Reg<EFLAGS>))  [0.999;0.999]
		WARNING generated instructions have multiple dependencies. If they have different latencies the lower one will be shadowed
	ADCX32rr_EVEX(impl(Reg<EFLAGS>) -> 0(Class<GR32>))  [0.999;1.02]
		Dependencies:
			ADC32ri8(impl(Reg<EFLAGS>) -> 0(Class<GR32>)) 
			ADC32ri(1(Class<GR32>) -> impl(Reg<EFLAGS>)) 
		Combined result: 2.02 cycles
	ADCX32rr_EVEX(1(Class<GR32>) -> impl(Reg<EFLAGS>))  [0.989;1.01]
		Dependencies:
			ADC32ri8(impl(Reg<EFLAGS>) -> 0(Class<GR32>)) 
			ADC32ri(1(Class<GR32>) -> impl(Reg<EFLAGS>)) 
		Combined result: 2.02 cycles
	ADCX32rr_EVEX(2(Class<GR32>) -> impl(Reg<EFLAGS>))  [1.03;1.05]
		Dependencies:
			ADC32ri8(impl(Reg<EFLAGS>) -> 0(Class<GR32>)) 
			ADC32ri(1(Class<GR32>) -> impl(Reg<EFLAGS>)) 
		Combined result: 2.06 cycles

-----ADCX32rr_ND-----
	ADCX32rr_ND(1(Class<GR32>) -> 0(Class<GR32>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	ADCX32rr_ND(2(Class<GR32>) -> 0(Class<GR32>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	ADCX32rr_ND(impl(Reg<EFLAGS>) -> impl(Reg<EFLAGS>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----ADCX64rr-----
	ADCX64rr(1(Class<GR64>) -> 0(Class<GR64>))  [1.01;1.01]
		WARNING generated instructions have multiple dependencies. If they have different latencies the lower one will be shadowed
	ADCX64rr(2(Class<GR64>) -> 0(Class<GR64>))  [1.01;1.01]
		WARNING generated instructions have multiple dependencies. If they have different latencies the lower one will be shadowed
	ADCX64rr(impl(Reg<EFLAGS>) -> impl(Reg<EFLAGS>))  [1.01;1.01]
		WARNING generated instructions have multiple dependencies. If they have different latencies the lower one will be shadowed
	ADCX64rr(impl(Reg<EFLAGS>) -> 0(Class<GR64>))  [1.01;1.02]
		Dependencies:
			ADC64rr(impl(Reg<EFLAGS>) -> 0(Class<GR64>)) 
			ADC64ri32(1(Class<GR64>) -> impl(Reg<EFLAGS>)) 
		Combined result: 2.02 cycles
	ADCX64rr(1(Class<GR64>) -> impl(Reg<EFLAGS>))  [1.01;1.03]
		Dependencies:
			ADC64rr(impl(Reg<EFLAGS>) -> 0(Class<GR64>)) 
			ADC64ri32(1(Class<GR64>) -> impl(Reg<EFLAGS>)) 
		Combined result: 2.02 cycles
	ADCX64rr(2(Class<GR64>) -> impl(Reg<EFLAGS>))  [1.01;1.03]
		Dependencies:
			ADC64rr(impl(Reg<EFLAGS>) -> 0(Class<GR64>)) 
			ADC64ri32(1(Class<GR64>) -> impl(Reg<EFLAGS>)) 
		Combined result: 2.02 cycles

-----ADCX64rr_EVEX-----
	ADCX64rr_EVEX(1(Class<GR64>) -> 0(Class<GR64>))  [1.01;1.01]
		WARNING generated instructions have multiple dependencies. If they have different latencies the lower one will be shadowed
	ADCX64rr_EVEX(2(Class<GR64>) -> 0(Class<GR64>))  [1.01;1.01]
		WARNING generated instructions have multiple dependencies. If they have different latencies the lower one will be shadowed
	ADCX64rr_EVEX(impl(Reg<EFLAGS>) -> impl(Reg<EFLAGS>))  [1.01;1.01]
		WARNING generated instructions have multiple dependencies. If they have different latencies the lower one will be shadowed
	ADCX64rr_EVEX(impl(Reg<EFLAGS>) -> 0(Class<GR64>))  [1;1.02]
		Dependencies:
			ADC64rr(impl(Reg<EFLAGS>) -> 0(Class<GR64>)) 
			ADC64ri32(1(Class<GR64>) -> impl(Reg<EFLAGS>)) 
		Combined result: 2.02 cycles
	ADCX64rr_EVEX(1(Class<GR64>) -> impl(Reg<EFLAGS>))  [1.01;1.02]
		Dependencies:
			ADC64rr(impl(Reg<EFLAGS>) -> 0(Class<GR64>)) 
			ADC64ri32(1(Class<GR64>) -> impl(Reg<EFLAGS>)) 
		Combined result: 2.01 cycles
	ADCX64rr_EVEX(2(Class<GR64>) -> impl(Reg<EFLAGS>))  [1.01;1.03]
		Dependencies:
			ADC64rr(impl(Reg<EFLAGS>) -> 0(Class<GR64>)) 
			ADC64ri32(1(Class<GR64>) -> impl(Reg<EFLAGS>)) 
		Combined result: 2.02 cycles

-----ADCX64rr_ND-----
	ADCX64rr_ND(1(Class<GR64>) -> 0(Class<GR64>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	ADCX64rr_ND(2(Class<GR64>) -> 0(Class<GR64>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	ADCX64rr_ND(impl(Reg<EFLAGS>) -> impl(Reg<EFLAGS>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----ADD16i16-----
	ADD16i16(impl(Reg<AX>) -> impl(Reg<AX>))  [1;1]
		 Successful, latency: 1
	ADD16i16(impl(Reg<AX>) -> impl(Reg<EFLAGS>))  [0.984;1]
		Dependencies:
			ADC16i16(impl(Reg<EFLAGS>) -> impl(Reg<AX>)) 
			ADC16i16(impl(Reg<AX>) -> impl(Reg<EFLAGS>)) 
		Combined result: 2.01 cycles

-----ADD16ri-----
	ADD16ri(1(Class<GR16>) -> 0(Class<GR16>))  [1.01;1.01]
		 Successful, latency: 1.01
	ADD16ri(1(Class<GR16>) -> impl(Reg<EFLAGS>))  [ERROR_UNUSUAL_LATENCY]
		Dependencies:
			ADC16rr(impl(Reg<EFLAGS>) -> 0(Class<GR16>)) 
			ADC16ri(1(Class<GR16>) -> impl(Reg<EFLAGS>)) 
		Combined result: 1 cycles

-----ADD16ri8-----
	ADD16ri8(1(Class<GR16>) -> 0(Class<GR16>))  [1.02;1.02]
		 Successful, latency: 1.02
	ADD16ri8(1(Class<GR16>) -> impl(Reg<EFLAGS>))  [ERROR_UNUSUAL_LATENCY]
		Dependencies:
			ADC16rr(impl(Reg<EFLAGS>) -> 0(Class<GR16>)) 
			ADC16ri(1(Class<GR16>) -> impl(Reg<EFLAGS>)) 
		Combined result: 1 cycles

-----ADD16ri8_EVEX-----
	ADD16ri8_EVEX(1(Class<GR16>) -> 0(Class<GR16>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----ADD16ri8_ND-----
	ADD16ri8_ND(1(Class<GR16>) -> 0(Class<GR16>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----ADD16ri8_NF-----
	ADD16ri8_NF(1(Class<GR16>) -> 0(Class<GR16>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----ADD16ri8_NF_ND-----
	ADD16ri8_NF_ND(1(Class<GR16>) -> 0(Class<GR16>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----ADD16ri_EVEX-----
	ADD16ri_EVEX(1(Class<GR16>) -> 0(Class<GR16>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----ADD16ri_ND-----
	ADD16ri_ND(1(Class<GR16>) -> 0(Class<GR16>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----ADD16ri_NF-----
	ADD16ri_NF(1(Class<GR16>) -> 0(Class<GR16>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----ADD16ri_NF_ND-----
	ADD16ri_NF_ND(1(Class<GR16>) -> 0(Class<GR16>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----ADD16rr-----
	ADD16rr(1(Class<GR16>) -> 0(Class<GR16>))  [1.01;1.01]
		 Successful, latency: 1.01
	ADD16rr(2(Class<GR16>) -> 0(Class<GR16>))  [1.02;1.02]
		 Successful, latency: 1.02
	ADD16rr(1(Class<GR16>) -> impl(Reg<EFLAGS>))  [ERROR_UNUSUAL_LATENCY]
		Dependencies:
			ADC16rr(impl(Reg<EFLAGS>) -> 0(Class<GR16>)) 
			ADC16ri(1(Class<GR16>) -> impl(Reg<EFLAGS>)) 
		Combined result: 1.03 cycles
	ADD16rr(2(Class<GR16>) -> impl(Reg<EFLAGS>))  [1;1.02]
		Dependencies:
			ADC16rr(impl(Reg<EFLAGS>) -> 0(Class<GR16>)) 
			ADC16ri(1(Class<GR16>) -> impl(Reg<EFLAGS>)) 
		Combined result: 2.02 cycles

-----ADD16rr_EVEX-----
	ADD16rr_EVEX(1(Class<GR16>) -> 0(Class<GR16>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	ADD16rr_EVEX(2(Class<GR16>) -> 0(Class<GR16>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----ADD16rr_EVEX_REV-----
	ADD16rr_EVEX_REV(1(Class<GR16>) -> 0(Class<GR16>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	ADD16rr_EVEX_REV(2(Class<GR16>) -> 0(Class<GR16>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----ADD16rr_ND-----
	ADD16rr_ND(1(Class<GR16>) -> 0(Class<GR16>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	ADD16rr_ND(2(Class<GR16>) -> 0(Class<GR16>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----ADD16rr_ND_REV-----
	ADD16rr_ND_REV(1(Class<GR16>) -> 0(Class<GR16>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	ADD16rr_ND_REV(2(Class<GR16>) -> 0(Class<GR16>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----ADD16rr_NF-----
	ADD16rr_NF(1(Class<GR16>) -> 0(Class<GR16>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	ADD16rr_NF(2(Class<GR16>) -> 0(Class<GR16>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----ADD16rr_NF_ND-----
	ADD16rr_NF_ND(1(Class<GR16>) -> 0(Class<GR16>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	ADD16rr_NF_ND(2(Class<GR16>) -> 0(Class<GR16>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----ADD16rr_NF_ND_REV-----
	ADD16rr_NF_ND_REV(1(Class<GR16>) -> 0(Class<GR16>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	ADD16rr_NF_ND_REV(2(Class<GR16>) -> 0(Class<GR16>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----ADD16rr_NF_REV-----
	ADD16rr_NF_REV(1(Class<GR16>) -> 0(Class<GR16>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	ADD16rr_NF_REV(2(Class<GR16>) -> 0(Class<GR16>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----ADD16rr_REV-----
	ADD16rr_REV(1(Class<GR16>) -> 0(Class<GR16>))  [1;1]
		 Successful, latency: 1
	ADD16rr_REV(2(Class<GR16>) -> 0(Class<GR16>))  [1.02;1.02]
		 Successful, latency: 1.02
	ADD16rr_REV(1(Class<GR16>) -> impl(Reg<EFLAGS>))  [ERROR_UNUSUAL_LATENCY]
		Dependencies:
			ADC16rr(impl(Reg<EFLAGS>) -> 0(Class<GR16>)) 
			ADC16ri(1(Class<GR16>) -> impl(Reg<EFLAGS>)) 
		Combined result: 1.01 cycles
	ADD16rr_REV(2(Class<GR16>) -> impl(Reg<EFLAGS>))  [1.01;1.03]
		Dependencies:
			ADC16rr(impl(Reg<EFLAGS>) -> 0(Class<GR16>)) 
			ADC16ri(1(Class<GR16>) -> impl(Reg<EFLAGS>)) 
		Combined result: 2.02 cycles

-----ADD32i32-----
	ADD32i32(impl(Reg<EAX>) -> impl(Reg<EAX>))  [1;1]
		 Successful, latency: 1
	ADD32i32(impl(Reg<EAX>) -> impl(Reg<EFLAGS>))  [0.99;1.01]
		Dependencies:
			ADC32i32(impl(Reg<EFLAGS>) -> impl(Reg<EAX>)) 
			ADC32i32(impl(Reg<EAX>) -> impl(Reg<EFLAGS>)) 
		Combined result: 2.01 cycles

-----ADD32ri-----
	ADD32ri(1(Class<GR32>) -> 0(Class<GR32>))  [1;1]
		 Successful, latency: 1
	ADD32ri(1(Class<GR32>) -> impl(Reg<EFLAGS>))  [ERROR_UNUSUAL_LATENCY]
		Dependencies:
			ADC32ri8(impl(Reg<EFLAGS>) -> 0(Class<GR32>)) 
			ADC32ri(1(Class<GR32>) -> impl(Reg<EFLAGS>)) 
		Combined result: 1.02 cycles

-----ADD32ri8-----
	ADD32ri8(1(Class<GR32>) -> 0(Class<GR32>))  [1.02;1.02]
		 Successful, latency: 1.02
	ADD32ri8(1(Class<GR32>) -> impl(Reg<EFLAGS>))  [ERROR_UNUSUAL_LATENCY]
		Dependencies:
			ADC32ri8(impl(Reg<EFLAGS>) -> 0(Class<GR32>)) 
			ADC32ri(1(Class<GR32>) -> impl(Reg<EFLAGS>)) 
		Combined result: 1 cycles

-----ADD32ri8_EVEX-----
	ADD32ri8_EVEX(1(Class<GR32>) -> 0(Class<GR32>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----ADD32ri8_ND-----
	ADD32ri8_ND(1(Class<GR32>) -> 0(Class<GR32>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----ADD32ri8_NF-----
	ADD32ri8_NF(1(Class<GR32>) -> 0(Class<GR32>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----ADD32ri8_NF_ND-----
	ADD32ri8_NF_ND(1(Class<GR32>) -> 0(Class<GR32>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----ADD32ri_EVEX-----
	ADD32ri_EVEX(1(Class<GR32>) -> 0(Class<GR32>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----ADD32ri_ND-----
	ADD32ri_ND(1(Class<GR32>) -> 0(Class<GR32>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----ADD32ri_NF-----
	ADD32ri_NF(1(Class<GR32>) -> 0(Class<GR32>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----ADD32ri_NF_ND-----
	ADD32ri_NF_ND(1(Class<GR32>) -> 0(Class<GR32>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----ADD32rr-----
	ADD32rr(1(Class<GR32>) -> 0(Class<GR32>))  [1.02;1.02]
		 Successful, latency: 1.02
	ADD32rr(2(Class<GR32>) -> 0(Class<GR32>))  [1;1]
		 Successful, latency: 1
	ADD32rr(1(Class<GR32>) -> impl(Reg<EFLAGS>))  [ERROR_UNUSUAL_LATENCY]
		Dependencies:
			ADC32ri8(impl(Reg<EFLAGS>) -> 0(Class<GR32>)) 
			ADC32ri(1(Class<GR32>) -> impl(Reg<EFLAGS>)) 
		Combined result: 1 cycles
	ADD32rr(2(Class<GR32>) -> impl(Reg<EFLAGS>))  [1;1.02]
		Dependencies:
			ADC32ri8(impl(Reg<EFLAGS>) -> 0(Class<GR32>)) 
			ADC32ri(1(Class<GR32>) -> impl(Reg<EFLAGS>)) 
		Combined result: 2.03 cycles

-----ADD32rr_EVEX-----
	ADD32rr_EVEX(1(Class<GR32>) -> 0(Class<GR32>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	ADD32rr_EVEX(2(Class<GR32>) -> 0(Class<GR32>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----ADD32rr_EVEX_REV-----
	ADD32rr_EVEX_REV(1(Class<GR32>) -> 0(Class<GR32>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	ADD32rr_EVEX_REV(2(Class<GR32>) -> 0(Class<GR32>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----ADD32rr_ND-----
	ADD32rr_ND(1(Class<GR32>) -> 0(Class<GR32>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	ADD32rr_ND(2(Class<GR32>) -> 0(Class<GR32>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----ADD32rr_ND_REV-----
	ADD32rr_ND_REV(1(Class<GR32>) -> 0(Class<GR32>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	ADD32rr_ND_REV(2(Class<GR32>) -> 0(Class<GR32>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----ADD32rr_NF-----
	ADD32rr_NF(1(Class<GR32>) -> 0(Class<GR32>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	ADD32rr_NF(2(Class<GR32>) -> 0(Class<GR32>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----ADD32rr_NF_ND-----
	ADD32rr_NF_ND(1(Class<GR32>) -> 0(Class<GR32>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	ADD32rr_NF_ND(2(Class<GR32>) -> 0(Class<GR32>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----ADD32rr_NF_ND_REV-----
	ADD32rr_NF_ND_REV(1(Class<GR32>) -> 0(Class<GR32>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	ADD32rr_NF_ND_REV(2(Class<GR32>) -> 0(Class<GR32>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----ADD32rr_NF_REV-----
	ADD32rr_NF_REV(1(Class<GR32>) -> 0(Class<GR32>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	ADD32rr_NF_REV(2(Class<GR32>) -> 0(Class<GR32>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----ADD32rr_REV-----
	ADD32rr_REV(1(Class<GR32>) -> 0(Class<GR32>))  [1;1]
		 Successful, latency: 1
	ADD32rr_REV(2(Class<GR32>) -> 0(Class<GR32>))  [1.01;1.01]
		 Successful, latency: 1.01
	ADD32rr_REV(1(Class<GR32>) -> impl(Reg<EFLAGS>))  [ERROR_UNUSUAL_LATENCY]
		Dependencies:
			ADC32ri8(impl(Reg<EFLAGS>) -> 0(Class<GR32>)) 
			ADC32ri(1(Class<GR32>) -> impl(Reg<EFLAGS>)) 
		Combined result: 1.01 cycles
	ADD32rr_REV(2(Class<GR32>) -> impl(Reg<EFLAGS>))  [0.986;1]
		Dependencies:
			ADC32ri8(impl(Reg<EFLAGS>) -> 0(Class<GR32>)) 
			ADC32ri(1(Class<GR32>) -> impl(Reg<EFLAGS>)) 
		Combined result: 2.01 cycles

-----ADD64i32-----
	ADD64i32(impl(Reg<RAX>) -> impl(Reg<RAX>))  [1.01;1.01]
		 Successful, latency: 1.01
	ADD64i32(impl(Reg<RAX>) -> impl(Reg<EFLAGS>))  [0.999;1.02]
		Dependencies:
			CMP64i32(impl(Reg<RAX>) -> impl(Reg<EFLAGS>)) 
			ADC64i32(impl(Reg<EFLAGS>) -> impl(Reg<RAX>)) 
		Combined result: 2.02 cycles

-----ADD64ri32-----
	ADD64ri32(1(Class<GR64>) -> 0(Class<GR64>))  [1;1]
		 Successful, latency: 1
	ADD64ri32(1(Class<GR64>) -> impl(Reg<EFLAGS>))  [ERROR_UNUSUAL_LATENCY]
		Dependencies:
			ADC64rr(impl(Reg<EFLAGS>) -> 0(Class<GR64>)) 
			ADC64ri32(1(Class<GR64>) -> impl(Reg<EFLAGS>)) 
		Combined result: 1 cycles

-----ADD64ri32_EVEX-----
	ADD64ri32_EVEX(1(Class<GR64>) -> 0(Class<GR64>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----ADD64ri32_ND-----
	ADD64ri32_ND(1(Class<GR64>) -> 0(Class<GR64>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----ADD64ri32_NF-----
	ADD64ri32_NF(1(Class<GR64>) -> 0(Class<GR64>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----ADD64ri32_NF_ND-----
	ADD64ri32_NF_ND(1(Class<GR64>) -> 0(Class<GR64>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----ADD64ri8-----
	ADD64ri8(1(Class<GR64>) -> 0(Class<GR64>))  [1;1]
		 Successful, latency: 1
	ADD64ri8(1(Class<GR64>) -> impl(Reg<EFLAGS>))  [ERROR_UNUSUAL_LATENCY]
		Dependencies:
			ADC64rr(impl(Reg<EFLAGS>) -> 0(Class<GR64>)) 
			ADC64ri32(1(Class<GR64>) -> impl(Reg<EFLAGS>)) 
		Combined result: 1.01 cycles

-----ADD64ri8_EVEX-----
	ADD64ri8_EVEX(1(Class<GR64>) -> 0(Class<GR64>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----ADD64ri8_ND-----
	ADD64ri8_ND(1(Class<GR64>) -> 0(Class<GR64>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----ADD64ri8_NF-----
	ADD64ri8_NF(1(Class<GR64>) -> 0(Class<GR64>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----ADD64ri8_NF_ND-----
	ADD64ri8_NF_ND(1(Class<GR64>) -> 0(Class<GR64>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----ADD64rr-----
	ADD64rr(1(Class<GR64>) -> 0(Class<GR64>))  [0.999;0.999]
		 Successful, latency: 0.999
	ADD64rr(2(Class<GR64>) -> 0(Class<GR64>))  [1;1]
		 Successful, latency: 1
	ADD64rr(1(Class<GR64>) -> impl(Reg<EFLAGS>))  [ERROR_UNUSUAL_LATENCY]
		Dependencies:
			ADC64rr(impl(Reg<EFLAGS>) -> 0(Class<GR64>)) 
			ADC64ri32(1(Class<GR64>) -> impl(Reg<EFLAGS>)) 
		Combined result: 1.01 cycles
	ADD64rr(2(Class<GR64>) -> impl(Reg<EFLAGS>))  [1.01;1.03]
		Dependencies:
			ADC64rr(impl(Reg<EFLAGS>) -> 0(Class<GR64>)) 
			ADC64ri32(1(Class<GR64>) -> impl(Reg<EFLAGS>)) 
		Combined result: 2.02 cycles

-----ADD64rr_EVEX-----
	ADD64rr_EVEX(1(Class<GR64>) -> 0(Class<GR64>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	ADD64rr_EVEX(2(Class<GR64>) -> 0(Class<GR64>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----ADD64rr_EVEX_REV-----
	ADD64rr_EVEX_REV(1(Class<GR64>) -> 0(Class<GR64>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	ADD64rr_EVEX_REV(2(Class<GR64>) -> 0(Class<GR64>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----ADD64rr_ND-----
	ADD64rr_ND(1(Class<GR64>) -> 0(Class<GR64>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	ADD64rr_ND(2(Class<GR64>) -> 0(Class<GR64>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----ADD64rr_ND_REV-----
	ADD64rr_ND_REV(1(Class<GR64>) -> 0(Class<GR64>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	ADD64rr_ND_REV(2(Class<GR64>) -> 0(Class<GR64>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----ADD64rr_NF-----
	ADD64rr_NF(1(Class<GR64>) -> 0(Class<GR64>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	ADD64rr_NF(2(Class<GR64>) -> 0(Class<GR64>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----ADD64rr_NF_ND-----
	ADD64rr_NF_ND(1(Class<GR64>) -> 0(Class<GR64>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	ADD64rr_NF_ND(2(Class<GR64>) -> 0(Class<GR64>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----ADD64rr_NF_ND_REV-----
	ADD64rr_NF_ND_REV(1(Class<GR64>) -> 0(Class<GR64>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	ADD64rr_NF_ND_REV(2(Class<GR64>) -> 0(Class<GR64>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----ADD64rr_NF_REV-----
	ADD64rr_NF_REV(1(Class<GR64>) -> 0(Class<GR64>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	ADD64rr_NF_REV(2(Class<GR64>) -> 0(Class<GR64>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----ADD64rr_REV-----
	ADD64rr_REV(1(Class<GR64>) -> 0(Class<GR64>))  [1.01;1.01]
		 Successful, latency: 1.01
	ADD64rr_REV(2(Class<GR64>) -> 0(Class<GR64>))  [1.01;1.01]
		 Successful, latency: 1.01
	ADD64rr_REV(1(Class<GR64>) -> impl(Reg<EFLAGS>))  [ERROR_UNUSUAL_LATENCY]
		Dependencies:
			ADC64rr(impl(Reg<EFLAGS>) -> 0(Class<GR64>)) 
			ADC64ri32(1(Class<GR64>) -> impl(Reg<EFLAGS>)) 
		Combined result: 1 cycles
	ADD64rr_REV(2(Class<GR64>) -> impl(Reg<EFLAGS>))  [1.01;1.03]
		Dependencies:
			ADC64rr(impl(Reg<EFLAGS>) -> 0(Class<GR64>)) 
			ADC64ri32(1(Class<GR64>) -> impl(Reg<EFLAGS>)) 
		Combined result: 2.02 cycles

-----ADD8i8-----
	ADD8i8(impl(Reg<AL>) -> impl(Reg<AL>))  [0.999;0.999]
		 Successful, latency: 0.999
	ADD8i8(impl(Reg<AL>) -> impl(Reg<EFLAGS>))  [1;1.02]
		Dependencies:
			ADC8i8(impl(Reg<EFLAGS>) -> impl(Reg<AL>)) 
			CMP8i8(impl(Reg<AL>) -> impl(Reg<EFLAGS>)) 
		Combined result: 2.02 cycles

-----ADD8ri-----
	ADD8ri(1(Class<GR8>) -> 0(Class<GR8>))  [1;1]
		 Successful, latency: 1
	ADD8ri(1(Class<GR8>) -> impl(Reg<EFLAGS>))  [ERROR_UNUSUAL_LATENCY]
		Dependencies:
			ADC8ri8(impl(Reg<EFLAGS>) -> 0(Class<GR8>)) 
			ADC8ri(1(Class<GR8>) -> impl(Reg<EFLAGS>)) 
		Combined result: 1.01 cycles

-----ADD8ri8-----
	ADD8ri8(1(Class<GR8>) -> 0(Class<GR8>))  [1.01;1.01]
		 Successful, latency: 1.01
	ADD8ri8(1(Class<GR8>) -> impl(Reg<EFLAGS>))  [ERROR_UNUSUAL_LATENCY]
		Dependencies:
			ADC8ri8(impl(Reg<EFLAGS>) -> 0(Class<GR8>)) 
			ADC8ri(1(Class<GR8>) -> impl(Reg<EFLAGS>)) 
		Combined result: 1.01 cycles

-----ADD8ri_EVEX-----
	ADD8ri_EVEX(1(Class<GR8>) -> 0(Class<GR8>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----ADD8ri_ND-----
	ADD8ri_ND(1(Class<GR8>) -> 0(Class<GR8>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----ADD8ri_NF-----
	ADD8ri_NF(1(Class<GR8>) -> 0(Class<GR8>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----ADD8ri_NF_ND-----
	ADD8ri_NF_ND(1(Class<GR8>) -> 0(Class<GR8>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----ADD8rr-----
	ADD8rr(1(Class<GR8>) -> 0(Class<GR8>))  [1.01;1.01]
		 Successful, latency: 1.01
	ADD8rr(2(Class<GR8>) -> 0(Class<GR8>))  [1;1]
		 Successful, latency: 1
	ADD8rr(1(Class<GR8>) -> impl(Reg<EFLAGS>))  [ERROR_UNUSUAL_LATENCY]
		Dependencies:
			ADC8ri8(impl(Reg<EFLAGS>) -> 0(Class<GR8>)) 
			ADC8ri(1(Class<GR8>) -> impl(Reg<EFLAGS>)) 
		Combined result: 1 cycles
	ADD8rr(2(Class<GR8>) -> impl(Reg<EFLAGS>))  [1;1.02]
		Dependencies:
			ADC8ri8(impl(Reg<EFLAGS>) -> 0(Class<GR8>)) 
			ADC8ri(1(Class<GR8>) -> impl(Reg<EFLAGS>)) 
		Combined result: 2.02 cycles

-----ADD8rr_EVEX-----
	ADD8rr_EVEX(1(Class<GR8>) -> 0(Class<GR8>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	ADD8rr_EVEX(2(Class<GR8>) -> 0(Class<GR8>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----ADD8rr_EVEX_REV-----
	ADD8rr_EVEX_REV(1(Class<GR8>) -> 0(Class<GR8>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	ADD8rr_EVEX_REV(2(Class<GR8>) -> 0(Class<GR8>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----ADD8rr_ND-----
	ADD8rr_ND(1(Class<GR8>) -> 0(Class<GR8>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	ADD8rr_ND(2(Class<GR8>) -> 0(Class<GR8>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----ADD8rr_ND_REV-----
	ADD8rr_ND_REV(1(Class<GR8>) -> 0(Class<GR8>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	ADD8rr_ND_REV(2(Class<GR8>) -> 0(Class<GR8>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----ADD8rr_NF-----
	ADD8rr_NF(1(Class<GR8>) -> 0(Class<GR8>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	ADD8rr_NF(2(Class<GR8>) -> 0(Class<GR8>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----ADD8rr_NF_ND-----
	ADD8rr_NF_ND(1(Class<GR8>) -> 0(Class<GR8>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	ADD8rr_NF_ND(2(Class<GR8>) -> 0(Class<GR8>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----ADD8rr_NF_ND_REV-----
	ADD8rr_NF_ND_REV(1(Class<GR8>) -> 0(Class<GR8>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	ADD8rr_NF_ND_REV(2(Class<GR8>) -> 0(Class<GR8>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----ADD8rr_NF_REV-----
	ADD8rr_NF_REV(1(Class<GR8>) -> 0(Class<GR8>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	ADD8rr_NF_REV(2(Class<GR8>) -> 0(Class<GR8>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----ADD8rr_REV-----
	ADD8rr_REV(1(Class<GR8>) -> 0(Class<GR8>))  [1.01;1.01]
		 Successful, latency: 1.01
	ADD8rr_REV(2(Class<GR8>) -> 0(Class<GR8>))  [0.999;0.999]
		 Successful, latency: 0.999
	ADD8rr_REV(1(Class<GR8>) -> impl(Reg<EFLAGS>))  [ERROR_UNUSUAL_LATENCY]
		Dependencies:
			ADC8ri8(impl(Reg<EFLAGS>) -> 0(Class<GR8>)) 
			ADC8ri(1(Class<GR8>) -> impl(Reg<EFLAGS>)) 
		Combined result: 1.02 cycles
	ADD8rr_REV(2(Class<GR8>) -> impl(Reg<EFLAGS>))  [0.991;1.01]
		Dependencies:
			ADC8ri8(impl(Reg<EFLAGS>) -> 0(Class<GR8>)) 
			ADC8ri(1(Class<GR8>) -> impl(Reg<EFLAGS>)) 
		Combined result: 2.01 cycles

-----ADDPDrr-----
	ADDPDrr(1(Class<VR128>) -> 0(Class<VR128>))  [3.04;3.04]
		 Successful, latency: 3.04
	ADDPDrr(2(Class<VR128>) -> 0(Class<VR128>))  [3.04;3.04]
		 Successful, latency: 3.04

-----ADDPSrr-----
	ADDPSrr(1(Class<VR128>) -> 0(Class<VR128>))  [3.02;3.02]
		 Successful, latency: 3.02
	ADDPSrr(2(Class<VR128>) -> 0(Class<VR128>))  [3.04;3.04]
		 Successful, latency: 3.04

-----ADDSDrr-----
	ADDSDrr(1(Class<FR64>) -> 0(Class<FR64>))  [3.02;3.02]
		 Successful, latency: 3.02
	ADDSDrr(2(Class<FR64>) -> 0(Class<FR64>))  [3.02;3.02]
		 Successful, latency: 3.02

-----ADDSDrr_Int-----
	ADDSDrr_Int(1(Class<VR128>) -> 0(Class<VR128>))  [3.05;3.05]
		 Successful, latency: 3.05
	ADDSDrr_Int(2(Class<VR128>) -> 0(Class<VR128>))  [3.06;3.06]
		 Successful, latency: 3.06

-----ADDSSrr-----
	ADDSSrr(1(Class<FR32>) -> 0(Class<FR32>))  [3.05;3.05]
		 Successful, latency: 3.05
	ADDSSrr(2(Class<FR32>) -> 0(Class<FR32>))  [3.06;3.06]
		 Successful, latency: 3.06

-----ADDSSrr_Int-----
	ADDSSrr_Int(1(Class<VR128>) -> 0(Class<VR128>))  [3.02;3.02]
		 Successful, latency: 3.02
	ADDSSrr_Int(2(Class<VR128>) -> 0(Class<VR128>))  [3.02;3.02]
		 Successful, latency: 3.02

-----ADDSUBPDrr-----
	ADDSUBPDrr(1(Class<VR128>) -> 0(Class<VR128>))  [3.05;3.05]
		 Successful, latency: 3.05
	ADDSUBPDrr(2(Class<VR128>) -> 0(Class<VR128>))  [3.03;3.03]
		 Successful, latency: 3.03

-----ADDSUBPSrr-----
	ADDSUBPSrr(1(Class<VR128>) -> 0(Class<VR128>))  [3.03;3.03]
		 Successful, latency: 3.03
	ADDSUBPSrr(2(Class<VR128>) -> 0(Class<VR128>))  [3.02;3.02]
		 Successful, latency: 3.02

-----ADJCALLSTACKDOWN32-----
	ADJCALLSTACKDOWN32(impl(Reg<ESP>) -> impl(Reg<ESP>))  [0;0]
		WARNING generated instructions have multiple dependencies. If they have different latencies the lower one will be shadowed
	ADJCALLSTACKDOWN32(impl(Reg<SSP>) -> impl(Reg<SSP>))  [0;0]
		WARNING generated instructions have multiple dependencies. If they have different latencies the lower one will be shadowed
	ADJCALLSTACKDOWN32(impl(Reg<SSP>) -> impl(Reg<ESP>))  [1;-1]
		Dependencies:
			ADJCALLSTACKDOWN32(impl(Reg<SSP>) -> impl(Reg<ESP>)) 
			ADJCALLSTACKDOWN32(impl(Reg<ESP>) -> impl(Reg<SSP>)) 
		Combined result: 0 cycles
	ADJCALLSTACKDOWN32(impl(Reg<ESP>) -> impl(Reg<SSP>))  [0.999;-1]
		Dependencies:
			ADJCALLSTACKDOWN32(impl(Reg<SSP>) -> impl(Reg<ESP>)) 
			ADJCALLSTACKDOWN32(impl(Reg<ESP>) -> impl(Reg<SSP>)) 
		Combined result: -0.00125 cycles

-----ADJCALLSTACKDOWN64-----
	ADJCALLSTACKDOWN64(impl(Reg<RSP>) -> impl(Reg<RSP>))  [0;0]
		WARNING generated instructions have multiple dependencies. If they have different latencies the lower one will be shadowed
	ADJCALLSTACKDOWN64(impl(Reg<SSP>) -> impl(Reg<SSP>))  [0;0]
		WARNING generated instructions have multiple dependencies. If they have different latencies the lower one will be shadowed
	ADJCALLSTACKDOWN64(impl(Reg<SSP>) -> impl(Reg<RSP>))  [1;-1]
		Dependencies:
			ADJCALLSTACKDOWN64(impl(Reg<SSP>) -> impl(Reg<RSP>)) 
			ADJCALLSTACKDOWN64(impl(Reg<RSP>) -> impl(Reg<SSP>)) 
		Combined result: 0 cycles
	ADJCALLSTACKDOWN64(impl(Reg<RSP>) -> impl(Reg<SSP>))  [1;-1]
		Dependencies:
			ADJCALLSTACKDOWN64(impl(Reg<SSP>) -> impl(Reg<RSP>)) 
			ADJCALLSTACKDOWN64(impl(Reg<RSP>) -> impl(Reg<SSP>)) 
		Combined result: 0.00125 cycles

-----ADJCALLSTACKUP32-----
	ADJCALLSTACKUP32(impl(Reg<ESP>) -> impl(Reg<ESP>))  [0;0]
		WARNING generated instructions have multiple dependencies. If they have different latencies the lower one will be shadowed
	ADJCALLSTACKUP32(impl(Reg<SSP>) -> impl(Reg<SSP>))  [0;0]
		WARNING generated instructions have multiple dependencies. If they have different latencies the lower one will be shadowed
	ADJCALLSTACKUP32(impl(Reg<SSP>) -> impl(Reg<ESP>))  [1;-1]
		Dependencies:
			ADJCALLSTACKDOWN32(impl(Reg<SSP>) -> impl(Reg<ESP>)) 
			ADJCALLSTACKDOWN32(impl(Reg<ESP>) -> impl(Reg<SSP>)) 
		Combined result: 0 cycles
	ADJCALLSTACKUP32(impl(Reg<ESP>) -> impl(Reg<SSP>))  [1;-1]
		Dependencies:
			ADJCALLSTACKDOWN32(impl(Reg<SSP>) -> impl(Reg<ESP>)) 
			ADJCALLSTACKDOWN32(impl(Reg<ESP>) -> impl(Reg<SSP>)) 
		Combined result: 0 cycles

-----ADJCALLSTACKUP64-----
	ADJCALLSTACKUP64(impl(Reg<RSP>) -> impl(Reg<RSP>))  [0.00125;0.00125]
		WARNING generated instructions have multiple dependencies. If they have different latencies the lower one will be shadowed
	ADJCALLSTACKUP64(impl(Reg<SSP>) -> impl(Reg<SSP>))  [0;0]
		WARNING generated instructions have multiple dependencies. If they have different latencies the lower one will be shadowed
	ADJCALLSTACKUP64(impl(Reg<SSP>) -> impl(Reg<RSP>))  [1;-0.999]
		Dependencies:
			ADJCALLSTACKDOWN64(impl(Reg<SSP>) -> impl(Reg<RSP>)) 
			ADJCALLSTACKDOWN64(impl(Reg<RSP>) -> impl(Reg<SSP>)) 
		Combined result: 0.00125 cycles
	ADJCALLSTACKUP64(impl(Reg<RSP>) -> impl(Reg<SSP>))  [0.999;-1]
		Dependencies:
			ADJCALLSTACKDOWN64(impl(Reg<SSP>) -> impl(Reg<RSP>)) 
			ADJCALLSTACKDOWN64(impl(Reg<RSP>) -> impl(Reg<SSP>)) 
		Combined result: -0.00125 cycles

-----ADOX32rr-----
	ADOX32rr(1(Class<GR32>) -> 0(Class<GR32>))  [1;1]
		WARNING generated instructions have multiple dependencies. If they have different latencies the lower one will be shadowed
	ADOX32rr(2(Class<GR32>) -> 0(Class<GR32>))  [0.999;0.999]
		WARNING generated instructions have multiple dependencies. If they have different latencies the lower one will be shadowed
	ADOX32rr(impl(Reg<EFLAGS>) -> impl(Reg<EFLAGS>))  [1.01;1.01]
		WARNING generated instructions have multiple dependencies. If they have different latencies the lower one will be shadowed
	ADOX32rr(impl(Reg<EFLAGS>) -> 0(Class<GR32>))  [-0.00125;0.0175]
		Dependencies:
			ADC32ri8(impl(Reg<EFLAGS>) -> 0(Class<GR32>)) 
			ADC32ri(1(Class<GR32>) -> impl(Reg<EFLAGS>)) 
		Combined result: 1.02 cycles
	ADOX32rr(1(Class<GR32>) -> impl(Reg<EFLAGS>))  [ERROR_UNUSUAL_LATENCY]
		Dependencies:
			ADC32ri8(impl(Reg<EFLAGS>) -> 0(Class<GR32>)) 
			ADC32ri(1(Class<GR32>) -> impl(Reg<EFLAGS>)) 
		Combined result: 1 cycles
	ADOX32rr(2(Class<GR32>) -> impl(Reg<EFLAGS>))  [ERROR_UNUSUAL_LATENCY]
		Dependencies:
			ADC32ri8(impl(Reg<EFLAGS>) -> 0(Class<GR32>)) 
			ADC32ri(1(Class<GR32>) -> impl(Reg<EFLAGS>)) 
		Combined result: 1.04 cycles

-----ADOX32rr_EVEX-----
	ADOX32rr_EVEX(1(Class<GR32>) -> 0(Class<GR32>))  [1;1]
		WARNING generated instructions have multiple dependencies. If they have different latencies the lower one will be shadowed
	ADOX32rr_EVEX(2(Class<GR32>) -> 0(Class<GR32>))  [1;1]
		WARNING generated instructions have multiple dependencies. If they have different latencies the lower one will be shadowed
	ADOX32rr_EVEX(impl(Reg<EFLAGS>) -> impl(Reg<EFLAGS>))  [1.01;1.01]
		WARNING generated instructions have multiple dependencies. If they have different latencies the lower one will be shadowed
	ADOX32rr_EVEX(impl(Reg<EFLAGS>) -> 0(Class<GR32>))  [-0.005;0.0137]
		Dependencies:
			ADC32ri8(impl(Reg<EFLAGS>) -> 0(Class<GR32>)) 
			ADC32ri(1(Class<GR32>) -> impl(Reg<EFLAGS>)) 
		Combined result: 1.01 cycles
	ADOX32rr_EVEX(1(Class<GR32>) -> impl(Reg<EFLAGS>))  [ERROR_UNUSUAL_LATENCY]
		Dependencies:
			ADC32ri8(impl(Reg<EFLAGS>) -> 0(Class<GR32>)) 
			ADC32ri(1(Class<GR32>) -> impl(Reg<EFLAGS>)) 
		Combined result: 1.01 cycles
	ADOX32rr_EVEX(2(Class<GR32>) -> impl(Reg<EFLAGS>))  [ERROR_UNUSUAL_LATENCY]
		Dependencies:
			ADC32ri8(impl(Reg<EFLAGS>) -> 0(Class<GR32>)) 
			ADC32ri(1(Class<GR32>) -> impl(Reg<EFLAGS>)) 
		Combined result: 1.05 cycles

-----ADOX32rr_ND-----
	ADOX32rr_ND(1(Class<GR32>) -> 0(Class<GR32>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	ADOX32rr_ND(2(Class<GR32>) -> 0(Class<GR32>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	ADOX32rr_ND(impl(Reg<EFLAGS>) -> impl(Reg<EFLAGS>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----ADOX64rr-----
	ADOX64rr(1(Class<GR64>) -> 0(Class<GR64>))  [0.998;0.998]
		WARNING generated instructions have multiple dependencies. If they have different latencies the lower one will be shadowed
	ADOX64rr(2(Class<GR64>) -> 0(Class<GR64>))  [1.01;1.01]
		WARNING generated instructions have multiple dependencies. If they have different latencies the lower one will be shadowed
	ADOX64rr(impl(Reg<EFLAGS>) -> impl(Reg<EFLAGS>))  [1.01;1.01]
		WARNING generated instructions have multiple dependencies. If they have different latencies the lower one will be shadowed
	ADOX64rr(impl(Reg<EFLAGS>) -> 0(Class<GR64>))  [-0.00125;0.015]
		Dependencies:
			ADC64rr(impl(Reg<EFLAGS>) -> 0(Class<GR64>)) 
			ADC64ri32(1(Class<GR64>) -> impl(Reg<EFLAGS>)) 
		Combined result: 1.01 cycles
	ADOX64rr(1(Class<GR64>) -> impl(Reg<EFLAGS>))  [ERROR_UNUSUAL_LATENCY]
		Dependencies:
			ADC64rr(impl(Reg<EFLAGS>) -> 0(Class<GR64>)) 
			ADC64ri32(1(Class<GR64>) -> impl(Reg<EFLAGS>)) 
		Combined result: 1.02 cycles
	ADOX64rr(2(Class<GR64>) -> impl(Reg<EFLAGS>))  [ERROR_UNUSUAL_LATENCY]
		Dependencies:
			ADC64rr(impl(Reg<EFLAGS>) -> 0(Class<GR64>)) 
			ADC64ri32(1(Class<GR64>) -> impl(Reg<EFLAGS>)) 
		Combined result: 1.01 cycles

-----ADOX64rr_EVEX-----
	ADOX64rr_EVEX(1(Class<GR64>) -> 0(Class<GR64>))  [1.01;1.01]
		WARNING generated instructions have multiple dependencies. If they have different latencies the lower one will be shadowed
	ADOX64rr_EVEX(2(Class<GR64>) -> 0(Class<GR64>))  [1.01;1.01]
		WARNING generated instructions have multiple dependencies. If they have different latencies the lower one will be shadowed
	ADOX64rr_EVEX(impl(Reg<EFLAGS>) -> impl(Reg<EFLAGS>))  [1.01;1.01]
		WARNING generated instructions have multiple dependencies. If they have different latencies the lower one will be shadowed
	ADOX64rr_EVEX(impl(Reg<EFLAGS>) -> 0(Class<GR64>))  [-0.005;0.0112]
		Dependencies:
			ADC64rr(impl(Reg<EFLAGS>) -> 0(Class<GR64>)) 
			ADC64ri32(1(Class<GR64>) -> impl(Reg<EFLAGS>)) 
		Combined result: 1.01 cycles
	ADOX64rr_EVEX(1(Class<GR64>) -> impl(Reg<EFLAGS>))  [ERROR_UNUSUAL_LATENCY]
		Dependencies:
			ADC64rr(impl(Reg<EFLAGS>) -> 0(Class<GR64>)) 
			ADC64ri32(1(Class<GR64>) -> impl(Reg<EFLAGS>)) 
		Combined result: 1.01 cycles
	ADOX64rr_EVEX(2(Class<GR64>) -> impl(Reg<EFLAGS>))  [ERROR_UNUSUAL_LATENCY]
		Dependencies:
			ADC64rr(impl(Reg<EFLAGS>) -> 0(Class<GR64>)) 
			ADC64ri32(1(Class<GR64>) -> impl(Reg<EFLAGS>)) 
		Combined result: 1.01 cycles

-----ADOX64rr_ND-----
	ADOX64rr_ND(1(Class<GR64>) -> 0(Class<GR64>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	ADOX64rr_ND(2(Class<GR64>) -> 0(Class<GR64>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	ADOX64rr_ND(impl(Reg<EFLAGS>) -> impl(Reg<EFLAGS>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----AESDECLASTrr-----
	AESDECLASTrr(1(Class<VR128>) -> 0(Class<VR128>))  [4.04;4.04]
		 Successful, latency: 4.04
	AESDECLASTrr(2(Class<VR128>) -> 0(Class<VR128>))  [4.01;4.01]
		 Successful, latency: 4.01

-----AESDECrr-----
	AESDECrr(1(Class<VR128>) -> 0(Class<VR128>))  [4.06;4.06]
		 Successful, latency: 4.06
	AESDECrr(2(Class<VR128>) -> 0(Class<VR128>))  [4.03;4.03]
		 Successful, latency: 4.03

-----AESENCLASTrr-----
	AESENCLASTrr(1(Class<VR128>) -> 0(Class<VR128>))  [4.06;4.06]
		 Successful, latency: 4.06
	AESENCLASTrr(2(Class<VR128>) -> 0(Class<VR128>))  [4.03;4.03]
		 Successful, latency: 4.03

-----AESENCrr-----
	AESENCrr(1(Class<VR128>) -> 0(Class<VR128>))  [4.03;4.03]
		 Successful, latency: 4.03
	AESENCrr(2(Class<VR128>) -> 0(Class<VR128>))  [4.05;4.05]
		 Successful, latency: 4.05

-----AESIMCrr-----
	AESIMCrr(1(Class<VR128>) -> 0(Class<VR128>))  [4.04;4.04]
		 Successful, latency: 4.04

-----AESKEYGENASSIST128rr-----
	AESKEYGENASSIST128rr(1(Class<VR128>) -> 0(Class<VR128>))  [4.04;4.04]
		 Successful, latency: 4.04

-----AND16i16-----
	AND16i16(impl(Reg<AX>) -> impl(Reg<AX>))  [1;1]
		 Successful, latency: 1
	AND16i16(impl(Reg<AX>) -> impl(Reg<EFLAGS>))  [0.985;1]
		Dependencies:
			ADC16i16(impl(Reg<EFLAGS>) -> impl(Reg<AX>)) 
			ADC16i16(impl(Reg<AX>) -> impl(Reg<EFLAGS>)) 
		Combined result: 2.01 cycles

-----AND16ri-----
	AND16ri(1(Class<GR16>) -> 0(Class<GR16>))  [1.01;1.01]
		 Successful, latency: 1.01
	AND16ri(1(Class<GR16>) -> impl(Reg<EFLAGS>))  [ERROR_UNUSUAL_LATENCY]
		Dependencies:
			ADC16rr(impl(Reg<EFLAGS>) -> 0(Class<GR16>)) 
			ADC16ri(1(Class<GR16>) -> impl(Reg<EFLAGS>)) 
		Combined result: 1 cycles

-----AND16ri8-----
	AND16ri8(1(Class<GR16>) -> 0(Class<GR16>))  [1.01;1.01]
		 Successful, latency: 1.01
	AND16ri8(1(Class<GR16>) -> impl(Reg<EFLAGS>))  [ERROR_UNUSUAL_LATENCY]
		Dependencies:
			ADC16rr(impl(Reg<EFLAGS>) -> 0(Class<GR16>)) 
			ADC16ri(1(Class<GR16>) -> impl(Reg<EFLAGS>)) 
		Combined result: 1 cycles

-----AND16ri8_EVEX-----
	AND16ri8_EVEX(1(Class<GR16>) -> 0(Class<GR16>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----AND16ri8_ND-----
	AND16ri8_ND(1(Class<GR16>) -> 0(Class<GR16>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----AND16ri8_NF-----
	AND16ri8_NF(1(Class<GR16>) -> 0(Class<GR16>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----AND16ri8_NF_ND-----
	AND16ri8_NF_ND(1(Class<GR16>) -> 0(Class<GR16>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----AND16ri_EVEX-----
	AND16ri_EVEX(1(Class<GR16>) -> 0(Class<GR16>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----AND16ri_ND-----
	AND16ri_ND(1(Class<GR16>) -> 0(Class<GR16>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----AND16ri_NF-----
	AND16ri_NF(1(Class<GR16>) -> 0(Class<GR16>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----AND16ri_NF_ND-----
	AND16ri_NF_ND(1(Class<GR16>) -> 0(Class<GR16>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----AND16rr-----
	AND16rr(1(Class<GR16>) -> 0(Class<GR16>))  [1.01;1.01]
		 Successful, latency: 1.01
	AND16rr(2(Class<GR16>) -> 0(Class<GR16>))  [1.02;1.02]
		 Successful, latency: 1.02
	AND16rr(1(Class<GR16>) -> impl(Reg<EFLAGS>))  [ERROR_UNUSUAL_LATENCY]
		Dependencies:
			ADC16rr(impl(Reg<EFLAGS>) -> 0(Class<GR16>)) 
			ADC16ri(1(Class<GR16>) -> impl(Reg<EFLAGS>)) 
		Combined result: 1.01 cycles
	AND16rr(2(Class<GR16>) -> impl(Reg<EFLAGS>))  [1.01;1.03]
		Dependencies:
			ADC16rr(impl(Reg<EFLAGS>) -> 0(Class<GR16>)) 
			ADC16ri(1(Class<GR16>) -> impl(Reg<EFLAGS>)) 
		Combined result: 2.03 cycles

-----AND16rr_EVEX-----
	AND16rr_EVEX(1(Class<GR16>) -> 0(Class<GR16>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	AND16rr_EVEX(2(Class<GR16>) -> 0(Class<GR16>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----AND16rr_EVEX_REV-----
	AND16rr_EVEX_REV(1(Class<GR16>) -> 0(Class<GR16>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	AND16rr_EVEX_REV(2(Class<GR16>) -> 0(Class<GR16>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----AND16rr_ND-----
	AND16rr_ND(1(Class<GR16>) -> 0(Class<GR16>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	AND16rr_ND(2(Class<GR16>) -> 0(Class<GR16>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----AND16rr_ND_REV-----
	AND16rr_ND_REV(1(Class<GR16>) -> 0(Class<GR16>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	AND16rr_ND_REV(2(Class<GR16>) -> 0(Class<GR16>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----AND16rr_NF-----
	AND16rr_NF(1(Class<GR16>) -> 0(Class<GR16>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	AND16rr_NF(2(Class<GR16>) -> 0(Class<GR16>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----AND16rr_NF_ND-----
	AND16rr_NF_ND(1(Class<GR16>) -> 0(Class<GR16>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	AND16rr_NF_ND(2(Class<GR16>) -> 0(Class<GR16>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----AND16rr_NF_ND_REV-----
	AND16rr_NF_ND_REV(1(Class<GR16>) -> 0(Class<GR16>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	AND16rr_NF_ND_REV(2(Class<GR16>) -> 0(Class<GR16>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----AND16rr_NF_REV-----
	AND16rr_NF_REV(1(Class<GR16>) -> 0(Class<GR16>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	AND16rr_NF_REV(2(Class<GR16>) -> 0(Class<GR16>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----AND16rr_REV-----
	AND16rr_REV(1(Class<GR16>) -> 0(Class<GR16>))  [1.01;1.01]
		 Successful, latency: 1.01
	AND16rr_REV(2(Class<GR16>) -> 0(Class<GR16>))  [1.01;1.01]
		 Successful, latency: 1.01
	AND16rr_REV(1(Class<GR16>) -> impl(Reg<EFLAGS>))  [ERROR_UNUSUAL_LATENCY]
		Dependencies:
			ADC16rr(impl(Reg<EFLAGS>) -> 0(Class<GR16>)) 
			ADC16ri(1(Class<GR16>) -> impl(Reg<EFLAGS>)) 
		Combined result: 1 cycles
	AND16rr_REV(2(Class<GR16>) -> impl(Reg<EFLAGS>))  [1;1.02]
		Dependencies:
			ADC16rr(impl(Reg<EFLAGS>) -> 0(Class<GR16>)) 
			ADC16ri(1(Class<GR16>) -> impl(Reg<EFLAGS>)) 
		Combined result: 2.02 cycles

-----AND32i32-----
	AND32i32(impl(Reg<EAX>) -> impl(Reg<EAX>))  [1.01;1.01]
		 Successful, latency: 1.01
	AND32i32(impl(Reg<EAX>) -> impl(Reg<EFLAGS>))  [1;1.02]
		Dependencies:
			ADC32i32(impl(Reg<EFLAGS>) -> impl(Reg<EAX>)) 
			ADC32i32(impl(Reg<EAX>) -> impl(Reg<EFLAGS>)) 
		Combined result: 2.02 cycles

-----AND32ri-----
	AND32ri(1(Class<GR32>) -> 0(Class<GR32>))  [1.01;1.01]
		 Successful, latency: 1.01
	AND32ri(1(Class<GR32>) -> impl(Reg<EFLAGS>))  [ERROR_UNUSUAL_LATENCY]
		Dependencies:
			ADC32ri8(impl(Reg<EFLAGS>) -> 0(Class<GR32>)) 
			ADC32ri(1(Class<GR32>) -> impl(Reg<EFLAGS>)) 
		Combined result: 1 cycles

-----AND32ri8-----
	AND32ri8(1(Class<GR32>) -> 0(Class<GR32>))  [1.01;1.01]
		 Successful, latency: 1.01
	AND32ri8(1(Class<GR32>) -> impl(Reg<EFLAGS>))  [ERROR_UNUSUAL_LATENCY]
		Dependencies:
			ADC32ri8(impl(Reg<EFLAGS>) -> 0(Class<GR32>)) 
			ADC32ri(1(Class<GR32>) -> impl(Reg<EFLAGS>)) 
		Combined result: 1.01 cycles

-----AND32ri8_EVEX-----
	AND32ri8_EVEX(1(Class<GR32>) -> 0(Class<GR32>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----AND32ri8_ND-----
	AND32ri8_ND(1(Class<GR32>) -> 0(Class<GR32>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----AND32ri8_NF-----
	AND32ri8_NF(1(Class<GR32>) -> 0(Class<GR32>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----AND32ri8_NF_ND-----
	AND32ri8_NF_ND(1(Class<GR32>) -> 0(Class<GR32>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----AND32ri_EVEX-----
	AND32ri_EVEX(1(Class<GR32>) -> 0(Class<GR32>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----AND32ri_ND-----
	AND32ri_ND(1(Class<GR32>) -> 0(Class<GR32>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----AND32ri_NF-----
	AND32ri_NF(1(Class<GR32>) -> 0(Class<GR32>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----AND32ri_NF_ND-----
	AND32ri_NF_ND(1(Class<GR32>) -> 0(Class<GR32>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----AND32rr-----
	AND32rr(1(Class<GR32>) -> 0(Class<GR32>))  [1.01;1.01]
		 Successful, latency: 1.01
	AND32rr(2(Class<GR32>) -> 0(Class<GR32>))  [1;1]
		 Successful, latency: 1
	AND32rr(1(Class<GR32>) -> impl(Reg<EFLAGS>))  [ERROR_UNUSUAL_LATENCY]
		Dependencies:
			ADC32ri8(impl(Reg<EFLAGS>) -> 0(Class<GR32>)) 
			ADC32ri(1(Class<GR32>) -> impl(Reg<EFLAGS>)) 
		Combined result: 1.01 cycles
	AND32rr(2(Class<GR32>) -> impl(Reg<EFLAGS>))  [1.02;1.04]
		Dependencies:
			ADC32ri8(impl(Reg<EFLAGS>) -> 0(Class<GR32>)) 
			ADC32ri(1(Class<GR32>) -> impl(Reg<EFLAGS>)) 
		Combined result: 2.05 cycles

-----AND32rr_EVEX-----
	AND32rr_EVEX(1(Class<GR32>) -> 0(Class<GR32>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	AND32rr_EVEX(2(Class<GR32>) -> 0(Class<GR32>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----AND32rr_EVEX_REV-----
	AND32rr_EVEX_REV(1(Class<GR32>) -> 0(Class<GR32>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	AND32rr_EVEX_REV(2(Class<GR32>) -> 0(Class<GR32>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----AND32rr_ND-----
	AND32rr_ND(1(Class<GR32>) -> 0(Class<GR32>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	AND32rr_ND(2(Class<GR32>) -> 0(Class<GR32>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----AND32rr_ND_REV-----
	AND32rr_ND_REV(1(Class<GR32>) -> 0(Class<GR32>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	AND32rr_ND_REV(2(Class<GR32>) -> 0(Class<GR32>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----AND32rr_NF-----
	AND32rr_NF(1(Class<GR32>) -> 0(Class<GR32>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	AND32rr_NF(2(Class<GR32>) -> 0(Class<GR32>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----AND32rr_NF_ND-----
	AND32rr_NF_ND(1(Class<GR32>) -> 0(Class<GR32>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	AND32rr_NF_ND(2(Class<GR32>) -> 0(Class<GR32>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----AND32rr_NF_ND_REV-----
	AND32rr_NF_ND_REV(1(Class<GR32>) -> 0(Class<GR32>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	AND32rr_NF_ND_REV(2(Class<GR32>) -> 0(Class<GR32>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----AND32rr_NF_REV-----
	AND32rr_NF_REV(1(Class<GR32>) -> 0(Class<GR32>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	AND32rr_NF_REV(2(Class<GR32>) -> 0(Class<GR32>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----AND32rr_REV-----
	AND32rr_REV(1(Class<GR32>) -> 0(Class<GR32>))  [0.999;0.999]
		 Successful, latency: 0.999
	AND32rr_REV(2(Class<GR32>) -> 0(Class<GR32>))  [1.01;1.01]
		 Successful, latency: 1.01
	AND32rr_REV(1(Class<GR32>) -> impl(Reg<EFLAGS>))  [ERROR_UNUSUAL_LATENCY]
		Dependencies:
			ADC32ri8(impl(Reg<EFLAGS>) -> 0(Class<GR32>)) 
			ADC32ri(1(Class<GR32>) -> impl(Reg<EFLAGS>)) 
		Combined result: 1.01 cycles
	AND32rr_REV(2(Class<GR32>) -> impl(Reg<EFLAGS>))  [0.987;1.01]
		Dependencies:
			ADC32ri8(impl(Reg<EFLAGS>) -> 0(Class<GR32>)) 
			ADC32ri(1(Class<GR32>) -> impl(Reg<EFLAGS>)) 
		Combined result: 2.01 cycles

-----AND64i32-----
	AND64i32(impl(Reg<RAX>) -> impl(Reg<RAX>))  [1.01;1.01]
		 Successful, latency: 1.01
	AND64i32(impl(Reg<RAX>) -> impl(Reg<EFLAGS>))  [0.992;1.01]
		Dependencies:
			CMP64i32(impl(Reg<RAX>) -> impl(Reg<EFLAGS>)) 
			ADC64i32(impl(Reg<EFLAGS>) -> impl(Reg<RAX>)) 
		Combined result: 2.01 cycles

-----AND64ri32-----
	AND64ri32(1(Class<GR64>) -> 0(Class<GR64>))  [0.999;0.999]
		 Successful, latency: 0.999
	AND64ri32(1(Class<GR64>) -> impl(Reg<EFLAGS>))  [ERROR_UNUSUAL_LATENCY]
		Dependencies:
			ADC64rr(impl(Reg<EFLAGS>) -> 0(Class<GR64>)) 
			ADC64ri32(1(Class<GR64>) -> impl(Reg<EFLAGS>)) 
		Combined result: 1.01 cycles

-----AND64ri32_EVEX-----
	AND64ri32_EVEX(1(Class<GR64>) -> 0(Class<GR64>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----AND64ri32_ND-----
	AND64ri32_ND(1(Class<GR64>) -> 0(Class<GR64>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----AND64ri32_NF-----
	AND64ri32_NF(1(Class<GR64>) -> 0(Class<GR64>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----AND64ri32_NF_ND-----
	AND64ri32_NF_ND(1(Class<GR64>) -> 0(Class<GR64>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----AND64ri8-----
	AND64ri8(1(Class<GR64>) -> 0(Class<GR64>))  [1.01;1.01]
		 Successful, latency: 1.01
	AND64ri8(1(Class<GR64>) -> impl(Reg<EFLAGS>))  [ERROR_UNUSUAL_LATENCY]
		Dependencies:
			ADC64rr(impl(Reg<EFLAGS>) -> 0(Class<GR64>)) 
			ADC64ri32(1(Class<GR64>) -> impl(Reg<EFLAGS>)) 
		Combined result: 1.01 cycles

-----AND64ri8_EVEX-----
	AND64ri8_EVEX(1(Class<GR64>) -> 0(Class<GR64>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----AND64ri8_ND-----
	AND64ri8_ND(1(Class<GR64>) -> 0(Class<GR64>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----AND64ri8_NF-----
	AND64ri8_NF(1(Class<GR64>) -> 0(Class<GR64>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----AND64ri8_NF_ND-----
	AND64ri8_NF_ND(1(Class<GR64>) -> 0(Class<GR64>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----AND64rr-----
	AND64rr(1(Class<GR64>) -> 0(Class<GR64>))  [1.01;1.01]
		 Successful, latency: 1.01
	AND64rr(2(Class<GR64>) -> 0(Class<GR64>))  [1.02;1.02]
		 Successful, latency: 1.02
	AND64rr(1(Class<GR64>) -> impl(Reg<EFLAGS>))  [ERROR_UNUSUAL_LATENCY]
		Dependencies:
			ADC64rr(impl(Reg<EFLAGS>) -> 0(Class<GR64>)) 
			ADC64ri32(1(Class<GR64>) -> impl(Reg<EFLAGS>)) 
		Combined result: 1.01 cycles
	AND64rr(2(Class<GR64>) -> impl(Reg<EFLAGS>))  [1.01;1.02]
		Dependencies:
			ADC64rr(impl(Reg<EFLAGS>) -> 0(Class<GR64>)) 
			ADC64ri32(1(Class<GR64>) -> impl(Reg<EFLAGS>)) 
		Combined result: 2.02 cycles

-----AND64rr_EVEX-----
	AND64rr_EVEX(1(Class<GR64>) -> 0(Class<GR64>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	AND64rr_EVEX(2(Class<GR64>) -> 0(Class<GR64>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----AND64rr_EVEX_REV-----
	AND64rr_EVEX_REV(1(Class<GR64>) -> 0(Class<GR64>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	AND64rr_EVEX_REV(2(Class<GR64>) -> 0(Class<GR64>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----AND64rr_ND-----
	AND64rr_ND(1(Class<GR64>) -> 0(Class<GR64>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	AND64rr_ND(2(Class<GR64>) -> 0(Class<GR64>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----AND64rr_ND_REV-----
	AND64rr_ND_REV(1(Class<GR64>) -> 0(Class<GR64>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	AND64rr_ND_REV(2(Class<GR64>) -> 0(Class<GR64>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----AND64rr_NF-----
	AND64rr_NF(1(Class<GR64>) -> 0(Class<GR64>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	AND64rr_NF(2(Class<GR64>) -> 0(Class<GR64>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----AND64rr_NF_ND-----
	AND64rr_NF_ND(1(Class<GR64>) -> 0(Class<GR64>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	AND64rr_NF_ND(2(Class<GR64>) -> 0(Class<GR64>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----AND64rr_NF_ND_REV-----
	AND64rr_NF_ND_REV(1(Class<GR64>) -> 0(Class<GR64>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	AND64rr_NF_ND_REV(2(Class<GR64>) -> 0(Class<GR64>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----AND64rr_NF_REV-----
	AND64rr_NF_REV(1(Class<GR64>) -> 0(Class<GR64>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	AND64rr_NF_REV(2(Class<GR64>) -> 0(Class<GR64>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----AND64rr_REV-----
	AND64rr_REV(1(Class<GR64>) -> 0(Class<GR64>))  [1.01;1.01]
		 Successful, latency: 1.01
	AND64rr_REV(2(Class<GR64>) -> 0(Class<GR64>))  [1;1]
		 Successful, latency: 1
	AND64rr_REV(1(Class<GR64>) -> impl(Reg<EFLAGS>))  [ERROR_UNUSUAL_LATENCY]
		Dependencies:
			ADC64rr(impl(Reg<EFLAGS>) -> 0(Class<GR64>)) 
			ADC64ri32(1(Class<GR64>) -> impl(Reg<EFLAGS>)) 
		Combined result: 1.01 cycles
	AND64rr_REV(2(Class<GR64>) -> impl(Reg<EFLAGS>))  [1.01;1.03]
		Dependencies:
			ADC64rr(impl(Reg<EFLAGS>) -> 0(Class<GR64>)) 
			ADC64ri32(1(Class<GR64>) -> impl(Reg<EFLAGS>)) 
		Combined result: 2.02 cycles

-----AND8i8-----
	AND8i8(impl(Reg<AL>) -> impl(Reg<AL>))  [1.01;1.01]
		 Successful, latency: 1.01
	AND8i8(impl(Reg<AL>) -> impl(Reg<EFLAGS>))  [0.989;1.01]
		Dependencies:
			ADC8i8(impl(Reg<EFLAGS>) -> impl(Reg<AL>)) 
			CMP8i8(impl(Reg<AL>) -> impl(Reg<EFLAGS>)) 
		Combined result: 2.01 cycles

-----AND8ri-----
	AND8ri(1(Class<GR8>) -> 0(Class<GR8>))  [1;1]
		 Successful, latency: 1
	AND8ri(1(Class<GR8>) -> impl(Reg<EFLAGS>))  [ERROR_UNUSUAL_LATENCY]
		Dependencies:
			ADC8ri8(impl(Reg<EFLAGS>) -> 0(Class<GR8>)) 
			ADC8ri(1(Class<GR8>) -> impl(Reg<EFLAGS>)) 
		Combined result: 1.02 cycles

-----AND8ri8-----
	AND8ri8(1(Class<GR8>) -> 0(Class<GR8>))  [1.01;1.01]
		 Successful, latency: 1.01
	AND8ri8(1(Class<GR8>) -> impl(Reg<EFLAGS>))  [ERROR_UNUSUAL_LATENCY]
		Dependencies:
			ADC8ri8(impl(Reg<EFLAGS>) -> 0(Class<GR8>)) 
			ADC8ri(1(Class<GR8>) -> impl(Reg<EFLAGS>)) 
		Combined result: 1 cycles

-----AND8ri_EVEX-----
	AND8ri_EVEX(1(Class<GR8>) -> 0(Class<GR8>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----AND8ri_ND-----
	AND8ri_ND(1(Class<GR8>) -> 0(Class<GR8>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----AND8ri_NF-----
	AND8ri_NF(1(Class<GR8>) -> 0(Class<GR8>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----AND8ri_NF_ND-----
	AND8ri_NF_ND(1(Class<GR8>) -> 0(Class<GR8>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----AND8rr-----
	AND8rr(1(Class<GR8>) -> 0(Class<GR8>))  [1.02;1.02]
		 Successful, latency: 1.02
	AND8rr(2(Class<GR8>) -> 0(Class<GR8>))  [1.01;1.01]
		 Successful, latency: 1.01
	AND8rr(1(Class<GR8>) -> impl(Reg<EFLAGS>))  [ERROR_UNUSUAL_LATENCY]
		Dependencies:
			ADC8ri8(impl(Reg<EFLAGS>) -> 0(Class<GR8>)) 
			ADC8ri(1(Class<GR8>) -> impl(Reg<EFLAGS>)) 
		Combined result: 1 cycles
	AND8rr(2(Class<GR8>) -> impl(Reg<EFLAGS>))  [1;1.02]
		Dependencies:
			ADC8ri8(impl(Reg<EFLAGS>) -> 0(Class<GR8>)) 
			ADC8ri(1(Class<GR8>) -> impl(Reg<EFLAGS>)) 
		Combined result: 2.02 cycles

-----AND8rr_EVEX-----
	AND8rr_EVEX(1(Class<GR8>) -> 0(Class<GR8>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	AND8rr_EVEX(2(Class<GR8>) -> 0(Class<GR8>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----AND8rr_EVEX_REV-----
	AND8rr_EVEX_REV(1(Class<GR8>) -> 0(Class<GR8>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	AND8rr_EVEX_REV(2(Class<GR8>) -> 0(Class<GR8>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----AND8rr_ND-----
	AND8rr_ND(1(Class<GR8>) -> 0(Class<GR8>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	AND8rr_ND(2(Class<GR8>) -> 0(Class<GR8>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----AND8rr_ND_REV-----
	AND8rr_ND_REV(1(Class<GR8>) -> 0(Class<GR8>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	AND8rr_ND_REV(2(Class<GR8>) -> 0(Class<GR8>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----AND8rr_NF-----
	AND8rr_NF(1(Class<GR8>) -> 0(Class<GR8>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	AND8rr_NF(2(Class<GR8>) -> 0(Class<GR8>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----AND8rr_NF_ND-----
	AND8rr_NF_ND(1(Class<GR8>) -> 0(Class<GR8>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	AND8rr_NF_ND(2(Class<GR8>) -> 0(Class<GR8>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----AND8rr_NF_ND_REV-----
	AND8rr_NF_ND_REV(1(Class<GR8>) -> 0(Class<GR8>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	AND8rr_NF_ND_REV(2(Class<GR8>) -> 0(Class<GR8>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----AND8rr_NF_REV-----
	AND8rr_NF_REV(1(Class<GR8>) -> 0(Class<GR8>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	AND8rr_NF_REV(2(Class<GR8>) -> 0(Class<GR8>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----AND8rr_REV-----
	AND8rr_REV(1(Class<GR8>) -> 0(Class<GR8>))  [1.01;1.01]
		 Successful, latency: 1.01
	AND8rr_REV(2(Class<GR8>) -> 0(Class<GR8>))  [1.01;1.01]
		 Successful, latency: 1.01
	AND8rr_REV(1(Class<GR8>) -> impl(Reg<EFLAGS>))  [ERROR_UNUSUAL_LATENCY]
		Dependencies:
			ADC8ri8(impl(Reg<EFLAGS>) -> 0(Class<GR8>)) 
			ADC8ri(1(Class<GR8>) -> impl(Reg<EFLAGS>)) 
		Combined result: 1.01 cycles
	AND8rr_REV(2(Class<GR8>) -> impl(Reg<EFLAGS>))  [0.988;1]
		Dependencies:
			ADC8ri8(impl(Reg<EFLAGS>) -> 0(Class<GR8>)) 
			ADC8ri(1(Class<GR8>) -> impl(Reg<EFLAGS>)) 
		Combined result: 2 cycles

-----ANDN32rm_NF-----
	ANDN32rm_NF(1(Class<GR32>) -> 0(Class<GR32>))  [SKIP_MEMORY_OPERAND]
		SKIP_MEMORY_OPERAND, this instruction cannot be measured on this platform

-----ANDN32rr-----
	ANDN32rr(1(Class<GR32>) -> 0(Class<GR32>))  [1;1]
		 Successful, latency: 1
	ANDN32rr(2(Class<GR32>) -> 0(Class<GR32>))  [1.02;1.02]
		 Successful, latency: 1.02
	ANDN32rr(1(Class<GR32>) -> impl(Reg<EFLAGS>))  [0.995;1.01]
		Dependencies:
			ADC32ri8(impl(Reg<EFLAGS>) -> 0(Class<GR32>)) 
			ADC32ri(1(Class<GR32>) -> impl(Reg<EFLAGS>)) 
		Combined result: 2.02 cycles
	ANDN32rr(2(Class<GR32>) -> impl(Reg<EFLAGS>))  [0.987;1.01]
		Dependencies:
			ADC32ri8(impl(Reg<EFLAGS>) -> 0(Class<GR32>)) 
			ADC32ri(1(Class<GR32>) -> impl(Reg<EFLAGS>)) 
		Combined result: 2.01 cycles

-----ANDN32rr_EVEX-----
	ANDN32rr_EVEX(1(Class<GR32>) -> 0(Class<GR32>))  [1;1]
		 Successful, latency: 1
	ANDN32rr_EVEX(2(Class<GR32>) -> 0(Class<GR32>))  [0.999;0.999]
		 Successful, latency: 0.999
	ANDN32rr_EVEX(1(Class<GR32>) -> impl(Reg<EFLAGS>))  [0.987;1.01]
		Dependencies:
			ADC32ri8(impl(Reg<EFLAGS>) -> 0(Class<GR32>)) 
			ADC32ri(1(Class<GR32>) -> impl(Reg<EFLAGS>)) 
		Combined result: 2.01 cycles
	ANDN32rr_EVEX(2(Class<GR32>) -> impl(Reg<EFLAGS>))  [0.99;1.01]
		Dependencies:
			ADC32ri8(impl(Reg<EFLAGS>) -> 0(Class<GR32>)) 
			ADC32ri(1(Class<GR32>) -> impl(Reg<EFLAGS>)) 
		Combined result: 2.02 cycles

-----ANDN32rr_NF-----
	ANDN32rr_NF(1(Class<GR32>) -> 0(Class<GR32>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	ANDN32rr_NF(2(Class<GR32>) -> 0(Class<GR32>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----ANDN64rm_NF-----
	ANDN64rm_NF(1(Class<GR64>) -> 0(Class<GR64>))  [SKIP_MEMORY_OPERAND]
		SKIP_MEMORY_OPERAND, this instruction cannot be measured on this platform

-----ANDN64rr-----
	ANDN64rr(1(Class<GR64>) -> 0(Class<GR64>))  [1.02;1.02]
		 Successful, latency: 1.02
	ANDN64rr(2(Class<GR64>) -> 0(Class<GR64>))  [1.01;1.01]
		 Successful, latency: 1.01
	ANDN64rr(1(Class<GR64>) -> impl(Reg<EFLAGS>))  [1.01;1.03]
		Dependencies:
			ADC64rr(impl(Reg<EFLAGS>) -> 0(Class<GR64>)) 
			ADC64ri32(1(Class<GR64>) -> impl(Reg<EFLAGS>)) 
		Combined result: 2.02 cycles
	ANDN64rr(2(Class<GR64>) -> impl(Reg<EFLAGS>))  [1.01;1.03]
		Dependencies:
			ADC64rr(impl(Reg<EFLAGS>) -> 0(Class<GR64>)) 
			ADC64ri32(1(Class<GR64>) -> impl(Reg<EFLAGS>)) 
		Combined result: 2.02 cycles

-----ANDN64rr_EVEX-----
	ANDN64rr_EVEX(1(Class<GR64>) -> 0(Class<GR64>))  [1.02;1.02]
		 Successful, latency: 1.02
	ANDN64rr_EVEX(2(Class<GR64>) -> 0(Class<GR64>))  [1;1]
		 Successful, latency: 1
	ANDN64rr_EVEX(1(Class<GR64>) -> impl(Reg<EFLAGS>))  [1.01;1.03]
		Dependencies:
			ADC64rr(impl(Reg<EFLAGS>) -> 0(Class<GR64>)) 
			ADC64ri32(1(Class<GR64>) -> impl(Reg<EFLAGS>)) 
		Combined result: 2.02 cycles
	ANDN64rr_EVEX(2(Class<GR64>) -> impl(Reg<EFLAGS>))  [1.01;1.03]
		Dependencies:
			ADC64rr(impl(Reg<EFLAGS>) -> 0(Class<GR64>)) 
			ADC64ri32(1(Class<GR64>) -> impl(Reg<EFLAGS>)) 
		Combined result: 2.02 cycles

-----ANDN64rr_NF-----
	ANDN64rr_NF(1(Class<GR64>) -> 0(Class<GR64>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	ANDN64rr_NF(2(Class<GR64>) -> 0(Class<GR64>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----ANDNPDrr-----
	ANDNPDrr(1(Class<VR128>) -> 0(Class<VR128>))  [0.999;0.999]
		 Successful, latency: 0.999
	ANDNPDrr(2(Class<VR128>) -> 0(Class<VR128>))  [0.25;0.25]
		 Successful, latency: 0.25

-----ANDNPSrr-----
	ANDNPSrr(1(Class<VR128>) -> 0(Class<VR128>))  [1.02;1.02]
		 Successful, latency: 1.02
	ANDNPSrr(2(Class<VR128>) -> 0(Class<VR128>))  [0.25;0.25]
		 Successful, latency: 0.25

-----ANDPDrr-----
	ANDPDrr(1(Class<VR128>) -> 0(Class<VR128>))  [1.01;1.01]
		 Successful, latency: 1.01
	ANDPDrr(2(Class<VR128>) -> 0(Class<VR128>))  [1.01;1.01]
		 Successful, latency: 1.01

-----ANDPSrr-----
	ANDPSrr(1(Class<VR128>) -> 0(Class<VR128>))  [1.01;1.01]
		 Successful, latency: 1.01
	ANDPSrr(2(Class<VR128>) -> 0(Class<VR128>))  [1;1]
		 Successful, latency: 1

-----ARPL16rr-----
	ARPL16rr(1(Class<GR16>) -> 0(Class<GR16>))  [ERROR_ASSEMBLY]
		ERROR_ASSEMBLY, this instruction cannot be measured on this platform

-----BEXTR32rr-----
	BEXTR32rr(1(Class<GR32>) -> 0(Class<GR32>))  [1.01;1.01]
		 Successful, latency: 1.01
	BEXTR32rr(2(Class<GR32>) -> 0(Class<GR32>))  [1.01;1.01]
		 Successful, latency: 1.01
	BEXTR32rr(1(Class<GR32>) -> impl(Reg<EFLAGS>))  [0.995;1.01]
		Dependencies:
			ADC32ri8(impl(Reg<EFLAGS>) -> 0(Class<GR32>)) 
			ADC32ri(1(Class<GR32>) -> impl(Reg<EFLAGS>)) 
		Combined result: 2.02 cycles
	BEXTR32rr(2(Class<GR32>) -> impl(Reg<EFLAGS>))  [0.994;1.01]
		Dependencies:
			ADC32ri8(impl(Reg<EFLAGS>) -> 0(Class<GR32>)) 
			ADC32ri(1(Class<GR32>) -> impl(Reg<EFLAGS>)) 
		Combined result: 2.02 cycles

-----BEXTR32rr_EVEX-----
	BEXTR32rr_EVEX(1(Class<GR32>) -> 0(Class<GR32>))  [1.01;1.01]
		 Successful, latency: 1.01
	BEXTR32rr_EVEX(2(Class<GR32>) -> 0(Class<GR32>))  [1.01;1.01]
		 Successful, latency: 1.01
	BEXTR32rr_EVEX(1(Class<GR32>) -> impl(Reg<EFLAGS>))  [0.99;1.01]
		Dependencies:
			ADC32ri8(impl(Reg<EFLAGS>) -> 0(Class<GR32>)) 
			ADC32ri(1(Class<GR32>) -> impl(Reg<EFLAGS>)) 
		Combined result: 2.02 cycles
	BEXTR32rr_EVEX(2(Class<GR32>) -> impl(Reg<EFLAGS>))  [0.989;1.01]
		Dependencies:
			ADC32ri8(impl(Reg<EFLAGS>) -> 0(Class<GR32>)) 
			ADC32ri(1(Class<GR32>) -> impl(Reg<EFLAGS>)) 
		Combined result: 2.02 cycles

-----BEXTR32rr_NF-----
	BEXTR32rr_NF(1(Class<GR32>) -> 0(Class<GR32>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	BEXTR32rr_NF(2(Class<GR32>) -> 0(Class<GR32>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----BEXTR64rr-----
	BEXTR64rr(1(Class<GR64>) -> 0(Class<GR64>))  [1;1]
		 Successful, latency: 1
	BEXTR64rr(2(Class<GR64>) -> 0(Class<GR64>))  [1.02;1.02]
		 Successful, latency: 1.02
	BEXTR64rr(1(Class<GR64>) -> impl(Reg<EFLAGS>))  [1.01;1.03]
		Dependencies:
			ADC64rr(impl(Reg<EFLAGS>) -> 0(Class<GR64>)) 
			ADC64ri32(1(Class<GR64>) -> impl(Reg<EFLAGS>)) 
		Combined result: 2.02 cycles
	BEXTR64rr(2(Class<GR64>) -> impl(Reg<EFLAGS>))  [1.02;1.04]
		Dependencies:
			ADC64rr(impl(Reg<EFLAGS>) -> 0(Class<GR64>)) 
			ADC64ri32(1(Class<GR64>) -> impl(Reg<EFLAGS>)) 
		Combined result: 2.03 cycles

-----BEXTR64rr_EVEX-----
	BEXTR64rr_EVEX(1(Class<GR64>) -> 0(Class<GR64>))  [1.02;1.02]
		 Successful, latency: 1.02
	BEXTR64rr_EVEX(2(Class<GR64>) -> 0(Class<GR64>))  [1;1]
		 Successful, latency: 1
	BEXTR64rr_EVEX(1(Class<GR64>) -> impl(Reg<EFLAGS>))  [1.01;1.03]
		Dependencies:
			ADC64rr(impl(Reg<EFLAGS>) -> 0(Class<GR64>)) 
			ADC64ri32(1(Class<GR64>) -> impl(Reg<EFLAGS>)) 
		Combined result: 2.02 cycles
	BEXTR64rr_EVEX(2(Class<GR64>) -> impl(Reg<EFLAGS>))  [1.01;1.03]
		Dependencies:
			ADC64rr(impl(Reg<EFLAGS>) -> 0(Class<GR64>)) 
			ADC64ri32(1(Class<GR64>) -> impl(Reg<EFLAGS>)) 
		Combined result: 2.02 cycles

-----BEXTR64rr_NF-----
	BEXTR64rr_NF(1(Class<GR64>) -> 0(Class<GR64>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	BEXTR64rr_NF(2(Class<GR64>) -> 0(Class<GR64>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----BEXTRI32ri-----
	BEXTRI32ri(1(Class<GR32>) -> 0(Class<GR32>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----BEXTRI64ri-----
	BEXTRI64ri(1(Class<GR64>) -> 0(Class<GR64>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----BLCFILL32rr-----
	BLCFILL32rr(1(Class<GR32>) -> 0(Class<GR32>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----BLCFILL64rr-----
	BLCFILL64rr(1(Class<GR64>) -> 0(Class<GR64>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----BLCI32rr-----
	BLCI32rr(1(Class<GR32>) -> 0(Class<GR32>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----BLCI64rr-----
	BLCI64rr(1(Class<GR64>) -> 0(Class<GR64>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----BLCIC32rr-----
	BLCIC32rr(1(Class<GR32>) -> 0(Class<GR32>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----BLCIC64rr-----
	BLCIC64rr(1(Class<GR64>) -> 0(Class<GR64>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----BLCMSK32rr-----
	BLCMSK32rr(1(Class<GR32>) -> 0(Class<GR32>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----BLCMSK64rr-----
	BLCMSK64rr(1(Class<GR64>) -> 0(Class<GR64>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----BLCS32rr-----
	BLCS32rr(1(Class<GR32>) -> 0(Class<GR32>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----BLCS64rr-----
	BLCS64rr(1(Class<GR64>) -> 0(Class<GR64>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----BLENDPDrri-----
	BLENDPDrri(1(Class<VR128>) -> 0(Class<VR128>))  [1.01;1.01]
		 Successful, latency: 1.01
	BLENDPDrri(2(Class<VR128>) -> 0(Class<VR128>))  [1.01;1.01]
		 Successful, latency: 1.01

-----BLENDPSrri-----
	BLENDPSrri(1(Class<VR128>) -> 0(Class<VR128>))  [1.02;1.02]
		 Successful, latency: 1.02
	BLENDPSrri(2(Class<VR128>) -> 0(Class<VR128>))  [1.01;1.01]
		 Successful, latency: 1.01

-----BLENDVPDrr0-----
	BLENDVPDrr0(1(Class<VR128>) -> 0(Class<VR128>))  [1.01;1.01]
		 Successful, latency: 1.01
	BLENDVPDrr0(2(Class<VR128>) -> 0(Class<VR128>))  [1;1]
		 Successful, latency: 1
	BLENDVPDrr0(impl(Reg<XMM0>) -> 0(Class<VR128>))  [1.05;7.1]
		Dependencies:
			PBLENDVBrr0(impl(Reg<XMM0>) -> 0(Class<VR128>)) 
			VPCMPISTRMrri(0(Class<VR128>) -> impl(Reg<XMM0>)) 
		Combined result: 8.1 cycles

-----BLENDVPSrr0-----
	BLENDVPSrr0(1(Class<VR128>) -> 0(Class<VR128>))  [1.02;1.02]
		 Successful, latency: 1.02
	BLENDVPSrr0(2(Class<VR128>) -> 0(Class<VR128>))  [1.02;1.02]
		 Successful, latency: 1.02
	BLENDVPSrr0(impl(Reg<XMM0>) -> 0(Class<VR128>))  [1.04;7.09]
		Dependencies:
			PBLENDVBrr0(impl(Reg<XMM0>) -> 0(Class<VR128>)) 
			VPCMPISTRMrri(0(Class<VR128>) -> impl(Reg<XMM0>)) 
		Combined result: 8.09 cycles

-----BLSFILL32rr-----
	BLSFILL32rr(1(Class<GR32>) -> 0(Class<GR32>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----BLSFILL64rr-----
	BLSFILL64rr(1(Class<GR64>) -> 0(Class<GR64>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----BLSI32rr-----
	BLSI32rr(1(Class<GR32>) -> 0(Class<GR32>))  [1;1]
		 Successful, latency: 1
	BLSI32rr(1(Class<GR32>) -> impl(Reg<EFLAGS>))  [1.04;1.05]
		Dependencies:
			ADC32ri8(impl(Reg<EFLAGS>) -> 0(Class<GR32>)) 
			ADC32ri(1(Class<GR32>) -> impl(Reg<EFLAGS>)) 
		Combined result: 2.06 cycles

-----BLSI32rr_EVEX-----
	BLSI32rr_EVEX(1(Class<GR32>) -> 0(Class<GR32>))  [1.01;1.01]
		 Successful, latency: 1.01
	BLSI32rr_EVEX(1(Class<GR32>) -> impl(Reg<EFLAGS>))  [1.03;1.05]
		Dependencies:
			ADC32ri8(impl(Reg<EFLAGS>) -> 0(Class<GR32>)) 
			ADC32ri(1(Class<GR32>) -> impl(Reg<EFLAGS>)) 
		Combined result: 2.06 cycles

-----BLSI32rr_NF-----
	BLSI32rr_NF(1(Class<GR32>) -> 0(Class<GR32>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----BLSI64rr-----
	BLSI64rr(1(Class<GR64>) -> 0(Class<GR64>))  [1.01;1.01]
		 Successful, latency: 1.01
	BLSI64rr(1(Class<GR64>) -> impl(Reg<EFLAGS>))  [1.01;1.02]
		Dependencies:
			ADC64rr(impl(Reg<EFLAGS>) -> 0(Class<GR64>)) 
			ADC64ri32(1(Class<GR64>) -> impl(Reg<EFLAGS>)) 
		Combined result: 2.02 cycles

-----BLSI64rr_EVEX-----
	BLSI64rr_EVEX(1(Class<GR64>) -> 0(Class<GR64>))  [1.01;1.01]
		 Successful, latency: 1.01
	BLSI64rr_EVEX(1(Class<GR64>) -> impl(Reg<EFLAGS>))  [1.02;1.04]
		Dependencies:
			ADC64rr(impl(Reg<EFLAGS>) -> 0(Class<GR64>)) 
			ADC64ri32(1(Class<GR64>) -> impl(Reg<EFLAGS>)) 
		Combined result: 2.03 cycles

-----BLSI64rr_NF-----
	BLSI64rr_NF(1(Class<GR64>) -> 0(Class<GR64>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----BLSIC32rr-----
	BLSIC32rr(1(Class<GR32>) -> 0(Class<GR32>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----BLSIC64rr-----
	BLSIC64rr(1(Class<GR64>) -> 0(Class<GR64>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----BLSMSK32rr-----
	BLSMSK32rr(1(Class<GR32>) -> 0(Class<GR32>))  [1.01;1.01]
		 Successful, latency: 1.01
	BLSMSK32rr(1(Class<GR32>) -> impl(Reg<EFLAGS>))  [1.03;1.05]
		Dependencies:
			ADC32ri8(impl(Reg<EFLAGS>) -> 0(Class<GR32>)) 
			ADC32ri(1(Class<GR32>) -> impl(Reg<EFLAGS>)) 
		Combined result: 2.06 cycles

-----BLSMSK32rr_EVEX-----
	BLSMSK32rr_EVEX(1(Class<GR32>) -> 0(Class<GR32>))  [1.02;1.02]
		 Successful, latency: 1.02
	BLSMSK32rr_EVEX(1(Class<GR32>) -> impl(Reg<EFLAGS>))  [1.03;1.05]
		Dependencies:
			ADC32ri8(impl(Reg<EFLAGS>) -> 0(Class<GR32>)) 
			ADC32ri(1(Class<GR32>) -> impl(Reg<EFLAGS>)) 
		Combined result: 2.06 cycles

-----BLSMSK32rr_NF-----
	BLSMSK32rr_NF(1(Class<GR32>) -> 0(Class<GR32>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----BLSMSK64rr-----
	BLSMSK64rr(1(Class<GR64>) -> 0(Class<GR64>))  [1;1]
		 Successful, latency: 1
	BLSMSK64rr(1(Class<GR64>) -> impl(Reg<EFLAGS>))  [1.01;1.03]
		Dependencies:
			ADC64rr(impl(Reg<EFLAGS>) -> 0(Class<GR64>)) 
			ADC64ri32(1(Class<GR64>) -> impl(Reg<EFLAGS>)) 
		Combined result: 2.02 cycles

-----BLSMSK64rr_EVEX-----
	BLSMSK64rr_EVEX(1(Class<GR64>) -> 0(Class<GR64>))  [1.01;1.01]
		 Successful, latency: 1.01
	BLSMSK64rr_EVEX(1(Class<GR64>) -> impl(Reg<EFLAGS>))  [1.01;1.03]
		Dependencies:
			ADC64rr(impl(Reg<EFLAGS>) -> 0(Class<GR64>)) 
			ADC64ri32(1(Class<GR64>) -> impl(Reg<EFLAGS>)) 
		Combined result: 2.02 cycles

-----BLSMSK64rr_NF-----
	BLSMSK64rr_NF(1(Class<GR64>) -> 0(Class<GR64>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----BLSR32rr-----
	BLSR32rr(1(Class<GR32>) -> 0(Class<GR32>))  [1.02;1.02]
		 Successful, latency: 1.02
	BLSR32rr(1(Class<GR32>) -> impl(Reg<EFLAGS>))  [1.03;1.05]
		Dependencies:
			ADC32ri8(impl(Reg<EFLAGS>) -> 0(Class<GR32>)) 
			ADC32ri(1(Class<GR32>) -> impl(Reg<EFLAGS>)) 
		Combined result: 2.06 cycles

-----BLSR32rr_EVEX-----
	BLSR32rr_EVEX(1(Class<GR32>) -> 0(Class<GR32>))  [1.02;1.02]
		 Successful, latency: 1.02
	BLSR32rr_EVEX(1(Class<GR32>) -> impl(Reg<EFLAGS>))  [1.03;1.05]
		Dependencies:
			ADC32ri8(impl(Reg<EFLAGS>) -> 0(Class<GR32>)) 
			ADC32ri(1(Class<GR32>) -> impl(Reg<EFLAGS>)) 
		Combined result: 2.06 cycles

-----BLSR32rr_NF-----
	BLSR32rr_NF(1(Class<GR32>) -> 0(Class<GR32>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----BLSR64rr-----
	BLSR64rr(1(Class<GR64>) -> 0(Class<GR64>))  [1.01;1.01]
		 Successful, latency: 1.01
	BLSR64rr(1(Class<GR64>) -> impl(Reg<EFLAGS>))  [1.01;1.03]
		Dependencies:
			ADC64rr(impl(Reg<EFLAGS>) -> 0(Class<GR64>)) 
			ADC64ri32(1(Class<GR64>) -> impl(Reg<EFLAGS>)) 
		Combined result: 2.02 cycles

-----BLSR64rr_EVEX-----
	BLSR64rr_EVEX(1(Class<GR64>) -> 0(Class<GR64>))  [1.02;1.02]
		 Successful, latency: 1.02
	BLSR64rr_EVEX(1(Class<GR64>) -> impl(Reg<EFLAGS>))  [1.02;1.04]
		Dependencies:
			ADC64rr(impl(Reg<EFLAGS>) -> 0(Class<GR64>)) 
			ADC64ri32(1(Class<GR64>) -> impl(Reg<EFLAGS>)) 
		Combined result: 2.03 cycles

-----BLSR64rr_NF-----
	BLSR64rr_NF(1(Class<GR64>) -> 0(Class<GR64>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----BSF16rr-----
	BSF16rr(1(Class<GR16>) -> 0(Class<GR16>))  [1.01;1.01]
		 Successful, latency: 1.01
	BSF16rr(2(Class<GR16>) -> 0(Class<GR16>))  [1.01;1.01]
		 Successful, latency: 1.01
	BSF16rr(1(Class<GR16>) -> impl(Reg<EFLAGS>))  [ERROR_UNUSUAL_LATENCY]
		Dependencies:
			ADC16rr(impl(Reg<EFLAGS>) -> 0(Class<GR16>)) 
			ADC16ri(1(Class<GR16>) -> impl(Reg<EFLAGS>)) 
		Combined result: 1 cycles
	BSF16rr(2(Class<GR16>) -> impl(Reg<EFLAGS>))  [1;1.02]
		Dependencies:
			ADC16rr(impl(Reg<EFLAGS>) -> 0(Class<GR16>)) 
			ADC16ri(1(Class<GR16>) -> impl(Reg<EFLAGS>)) 
		Combined result: 2.02 cycles

-----BSF32rr-----
	BSF32rr(1(Class<GR32>) -> 0(Class<GR32>))  [1;1]
		 Successful, latency: 1
	BSF32rr(2(Class<GR32>) -> 0(Class<GR32>))  [1.01;1.01]
		 Successful, latency: 1.01
	BSF32rr(1(Class<GR32>) -> impl(Reg<EFLAGS>))  [ERROR_UNUSUAL_LATENCY]
		Dependencies:
			ADC32ri8(impl(Reg<EFLAGS>) -> 0(Class<GR32>)) 
			ADC32ri(1(Class<GR32>) -> impl(Reg<EFLAGS>)) 
		Combined result: 1.01 cycles
	BSF32rr(2(Class<GR32>) -> impl(Reg<EFLAGS>))  [1.01;1.02]
		Dependencies:
			ADC32ri8(impl(Reg<EFLAGS>) -> 0(Class<GR32>)) 
			ADC32ri(1(Class<GR32>) -> impl(Reg<EFLAGS>)) 
		Combined result: 2.03 cycles

-----BSF64rr-----
	BSF64rr(1(Class<GR64>) -> 0(Class<GR64>))  [1;1]
		 Successful, latency: 1
	BSF64rr(2(Class<GR64>) -> 0(Class<GR64>))  [1.01;1.01]
		 Successful, latency: 1.01
	BSF64rr(1(Class<GR64>) -> impl(Reg<EFLAGS>))  [ERROR_UNUSUAL_LATENCY]
		Dependencies:
			ADC64rr(impl(Reg<EFLAGS>) -> 0(Class<GR64>)) 
			ADC64ri32(1(Class<GR64>) -> impl(Reg<EFLAGS>)) 
		Combined result: 1 cycles
	BSF64rr(2(Class<GR64>) -> impl(Reg<EFLAGS>))  [1;1.02]
		Dependencies:
			ADC64rr(impl(Reg<EFLAGS>) -> 0(Class<GR64>)) 
			ADC64ri32(1(Class<GR64>) -> impl(Reg<EFLAGS>)) 
		Combined result: 2.01 cycles

-----BSR16rr-----
	BSR16rr(1(Class<GR16>) -> 0(Class<GR16>))  [1.01;1.01]
		 Successful, latency: 1.01
	BSR16rr(2(Class<GR16>) -> 0(Class<GR16>))  [1.01;1.01]
		 Successful, latency: 1.01
	BSR16rr(1(Class<GR16>) -> impl(Reg<EFLAGS>))  [ERROR_UNUSUAL_LATENCY]
		Dependencies:
			ADC16rr(impl(Reg<EFLAGS>) -> 0(Class<GR16>)) 
			ADC16ri(1(Class<GR16>) -> impl(Reg<EFLAGS>)) 
		Combined result: 1.01 cycles
	BSR16rr(2(Class<GR16>) -> impl(Reg<EFLAGS>))  [1.01;1.02]
		Dependencies:
			ADC16rr(impl(Reg<EFLAGS>) -> 0(Class<GR16>)) 
			ADC16ri(1(Class<GR16>) -> impl(Reg<EFLAGS>)) 
		Combined result: 2.02 cycles

-----BSR32rr-----
	BSR32rr(1(Class<GR32>) -> 0(Class<GR32>))  [1.01;1.01]
		 Successful, latency: 1.01
	BSR32rr(2(Class<GR32>) -> 0(Class<GR32>))  [1.01;1.01]
		 Successful, latency: 1.01
	BSR32rr(1(Class<GR32>) -> impl(Reg<EFLAGS>))  [ERROR_UNUSUAL_LATENCY]
		Dependencies:
			ADC32ri8(impl(Reg<EFLAGS>) -> 0(Class<GR32>)) 
			ADC32ri(1(Class<GR32>) -> impl(Reg<EFLAGS>)) 
		Combined result: 1 cycles
	BSR32rr(2(Class<GR32>) -> impl(Reg<EFLAGS>))  [0.989;1.01]
		Dependencies:
			ADC32ri8(impl(Reg<EFLAGS>) -> 0(Class<GR32>)) 
			ADC32ri(1(Class<GR32>) -> impl(Reg<EFLAGS>)) 
		Combined result: 2.02 cycles

-----BSR64rr-----
	BSR64rr(1(Class<GR64>) -> 0(Class<GR64>))  [1.02;1.02]
		 Successful, latency: 1.02
	BSR64rr(2(Class<GR64>) -> 0(Class<GR64>))  [1.01;1.01]
		 Successful, latency: 1.01
	BSR64rr(1(Class<GR64>) -> impl(Reg<EFLAGS>))  [ERROR_UNUSUAL_LATENCY]
		Dependencies:
			ADC64rr(impl(Reg<EFLAGS>) -> 0(Class<GR64>)) 
			ADC64ri32(1(Class<GR64>) -> impl(Reg<EFLAGS>)) 
		Combined result: 1 cycles
	BSR64rr(2(Class<GR64>) -> impl(Reg<EFLAGS>))  [1.01;1.02]
		Dependencies:
			ADC64rr(impl(Reg<EFLAGS>) -> 0(Class<GR64>)) 
			ADC64ri32(1(Class<GR64>) -> impl(Reg<EFLAGS>)) 
		Combined result: 2.02 cycles

-----BSWAP16r_BAD-----
	BSWAP16r_BAD(1(Class<GR16>) -> 0(Class<GR16>))  [ERROR_ASSEMBLY]
		ERROR_ASSEMBLY, this instruction cannot be measured on this platform

-----BSWAP32r-----
	BSWAP32r(1(Class<GR32>) -> 0(Class<GR32>))  [1.01;1.01]
		 Successful, latency: 1.01

-----BSWAP64r-----
	BSWAP64r(1(Class<GR64>) -> 0(Class<GR64>))  [1.01;1.01]
		 Successful, latency: 1.01

-----BT16ri8-----
	BT16ri8(0(Class<GR16>) -> impl(Reg<EFLAGS>))  [1.05;1.07]
		Dependencies:
			ADC16rr(impl(Reg<EFLAGS>) -> 0(Class<GR16>)) 
			ADC16ri(1(Class<GR16>) -> impl(Reg<EFLAGS>)) 
		Combined result: 2.06 cycles

-----BT16rr-----
	BT16rr(0(Class<GR16>) -> impl(Reg<EFLAGS>))  [1.02;1.04]
		Dependencies:
			ADC16rr(impl(Reg<EFLAGS>) -> 0(Class<GR16>)) 
			ADC16ri(1(Class<GR16>) -> impl(Reg<EFLAGS>)) 
		Combined result: 2.03 cycles
	BT16rr(1(Class<GR16>) -> impl(Reg<EFLAGS>))  [1;1.02]
		Dependencies:
			ADC16rr(impl(Reg<EFLAGS>) -> 0(Class<GR16>)) 
			ADC16ri(1(Class<GR16>) -> impl(Reg<EFLAGS>)) 
		Combined result: 2.02 cycles

-----BT32ri8-----
	BT32ri8(0(Class<GR32>) -> impl(Reg<EFLAGS>))  [0.987;1.01]
		Dependencies:
			ADC32ri8(impl(Reg<EFLAGS>) -> 0(Class<GR32>)) 
			ADC32ri(1(Class<GR32>) -> impl(Reg<EFLAGS>)) 
		Combined result: 2.01 cycles

-----BT32rr-----
	BT32rr(0(Class<GR32>) -> impl(Reg<EFLAGS>))  [0.991;1.01]
		Dependencies:
			ADC32ri8(impl(Reg<EFLAGS>) -> 0(Class<GR32>)) 
			ADC32ri(1(Class<GR32>) -> impl(Reg<EFLAGS>)) 
		Combined result: 2.02 cycles
	BT32rr(1(Class<GR32>) -> impl(Reg<EFLAGS>))  [0.999;1.02]
		Dependencies:
			ADC32ri8(impl(Reg<EFLAGS>) -> 0(Class<GR32>)) 
			ADC32ri(1(Class<GR32>) -> impl(Reg<EFLAGS>)) 
		Combined result: 2.02 cycles

-----BT64ri8-----
	BT64ri8(0(Class<GR64>) -> impl(Reg<EFLAGS>))  [1.05;1.07]
		Dependencies:
			ADC64rr(impl(Reg<EFLAGS>) -> 0(Class<GR64>)) 
			ADC64ri32(1(Class<GR64>) -> impl(Reg<EFLAGS>)) 
		Combined result: 2.06 cycles

-----BT64rr-----
	BT64rr(0(Class<GR64>) -> impl(Reg<EFLAGS>))  [1.01;1.03]
		Dependencies:
			ADC64rr(impl(Reg<EFLAGS>) -> 0(Class<GR64>)) 
			ADC64ri32(1(Class<GR64>) -> impl(Reg<EFLAGS>)) 
		Combined result: 2.02 cycles
	BT64rr(1(Class<GR64>) -> impl(Reg<EFLAGS>))  [1.01;1.03]
		Dependencies:
			ADC64rr(impl(Reg<EFLAGS>) -> 0(Class<GR64>)) 
			ADC64ri32(1(Class<GR64>) -> impl(Reg<EFLAGS>)) 
		Combined result: 2.02 cycles

-----BTC16ri8-----
	BTC16ri8(1(Class<GR16>) -> 0(Class<GR16>))  [2.02;2.02]
		 Successful, latency: 2.02
	BTC16ri8(1(Class<GR16>) -> impl(Reg<EFLAGS>))  [0.995;1.01]
		Dependencies:
			ADC16rr(impl(Reg<EFLAGS>) -> 0(Class<GR16>)) 
			ADC16ri(1(Class<GR16>) -> impl(Reg<EFLAGS>)) 
		Combined result: 2.01 cycles

-----BTC16rr-----
	BTC16rr(1(Class<GR16>) -> 0(Class<GR16>))  [2;2]
		 Successful, latency: 2
	BTC16rr(2(Class<GR16>) -> 0(Class<GR16>))  [2.02;2.02]
		 Successful, latency: 2.02
	BTC16rr(1(Class<GR16>) -> impl(Reg<EFLAGS>))  [1.02;1.03]
		Dependencies:
			ADC16rr(impl(Reg<EFLAGS>) -> 0(Class<GR16>)) 
			ADC16ri(1(Class<GR16>) -> impl(Reg<EFLAGS>)) 
		Combined result: 2.03 cycles
	BTC16rr(2(Class<GR16>) -> impl(Reg<EFLAGS>))  [1.01;1.03]
		Dependencies:
			ADC16rr(impl(Reg<EFLAGS>) -> 0(Class<GR16>)) 
			ADC16ri(1(Class<GR16>) -> impl(Reg<EFLAGS>)) 
		Combined result: 2.02 cycles

-----BTC32ri8-----
	BTC32ri8(1(Class<GR32>) -> 0(Class<GR32>))  [2.02;2.02]
		 Successful, latency: 2.02
	BTC32ri8(1(Class<GR32>) -> impl(Reg<EFLAGS>))  [0.996;1.01]
		Dependencies:
			ADC32ri8(impl(Reg<EFLAGS>) -> 0(Class<GR32>)) 
			ADC32ri(1(Class<GR32>) -> impl(Reg<EFLAGS>)) 
		Combined result: 2.02 cycles

-----BTC32rr-----
	BTC32rr(1(Class<GR32>) -> 0(Class<GR32>))  [2.01;2.01]
		 Successful, latency: 2.01
	BTC32rr(2(Class<GR32>) -> 0(Class<GR32>))  [2.01;2.01]
		 Successful, latency: 2.01
	BTC32rr(1(Class<GR32>) -> impl(Reg<EFLAGS>))  [0.994;1.01]
		Dependencies:
			ADC32ri8(impl(Reg<EFLAGS>) -> 0(Class<GR32>)) 
			ADC32ri(1(Class<GR32>) -> impl(Reg<EFLAGS>)) 
		Combined result: 2.02 cycles
	BTC32rr(2(Class<GR32>) -> impl(Reg<EFLAGS>))  [1.01;1.03]
		Dependencies:
			ADC32ri8(impl(Reg<EFLAGS>) -> 0(Class<GR32>)) 
			ADC32ri(1(Class<GR32>) -> impl(Reg<EFLAGS>)) 
		Combined result: 2.04 cycles

-----BTC64ri8-----
	BTC64ri8(1(Class<GR64>) -> 0(Class<GR64>))  [2.01;2.01]
		 Successful, latency: 2.01
	BTC64ri8(1(Class<GR64>) -> impl(Reg<EFLAGS>))  [1.01;1.02]
		Dependencies:
			ADC64rr(impl(Reg<EFLAGS>) -> 0(Class<GR64>)) 
			ADC64ri32(1(Class<GR64>) -> impl(Reg<EFLAGS>)) 
		Combined result: 2.01 cycles

-----BTC64rr-----
	BTC64rr(1(Class<GR64>) -> 0(Class<GR64>))  [2.01;2.01]
		 Successful, latency: 2.01
	BTC64rr(2(Class<GR64>) -> 0(Class<GR64>))  [2.02;2.02]
		 Successful, latency: 2.02
	BTC64rr(1(Class<GR64>) -> impl(Reg<EFLAGS>))  [1.01;1.02]
		Dependencies:
			ADC64rr(impl(Reg<EFLAGS>) -> 0(Class<GR64>)) 
			ADC64ri32(1(Class<GR64>) -> impl(Reg<EFLAGS>)) 
		Combined result: 2.02 cycles
	BTC64rr(2(Class<GR64>) -> impl(Reg<EFLAGS>))  [1.02;1.04]
		Dependencies:
			ADC64rr(impl(Reg<EFLAGS>) -> 0(Class<GR64>)) 
			ADC64ri32(1(Class<GR64>) -> impl(Reg<EFLAGS>)) 
		Combined result: 2.03 cycles

-----BTR16ri8-----
	BTR16ri8(1(Class<GR16>) -> 0(Class<GR16>))  [2.02;2.02]
		 Successful, latency: 2.02
	BTR16ri8(1(Class<GR16>) -> impl(Reg<EFLAGS>))  [1;1.02]
		Dependencies:
			ADC16rr(impl(Reg<EFLAGS>) -> 0(Class<GR16>)) 
			ADC16ri(1(Class<GR16>) -> impl(Reg<EFLAGS>)) 
		Combined result: 2.01 cycles

-----BTR16rr-----
	BTR16rr(1(Class<GR16>) -> 0(Class<GR16>))  [2;2]
		 Successful, latency: 2
	BTR16rr(2(Class<GR16>) -> 0(Class<GR16>))  [2.02;2.02]
		 Successful, latency: 2.02
	BTR16rr(1(Class<GR16>) -> impl(Reg<EFLAGS>))  [1;1.02]
		Dependencies:
			ADC16rr(impl(Reg<EFLAGS>) -> 0(Class<GR16>)) 
			ADC16ri(1(Class<GR16>) -> impl(Reg<EFLAGS>)) 
		Combined result: 2.01 cycles
	BTR16rr(2(Class<GR16>) -> impl(Reg<EFLAGS>))  [1.01;1.03]
		Dependencies:
			ADC16rr(impl(Reg<EFLAGS>) -> 0(Class<GR16>)) 
			ADC16ri(1(Class<GR16>) -> impl(Reg<EFLAGS>)) 
		Combined result: 2.02 cycles

-----BTR32ri8-----
	BTR32ri8(1(Class<GR32>) -> 0(Class<GR32>))  [2.02;2.02]
		 Successful, latency: 2.02
	BTR32ri8(1(Class<GR32>) -> impl(Reg<EFLAGS>))  [0.994;1.01]
		Dependencies:
			ADC32ri8(impl(Reg<EFLAGS>) -> 0(Class<GR32>)) 
			ADC32ri(1(Class<GR32>) -> impl(Reg<EFLAGS>)) 
		Combined result: 2.02 cycles

-----BTR32rr-----
	BTR32rr(1(Class<GR32>) -> 0(Class<GR32>))  [2.01;2.01]
		 Successful, latency: 2.01
	BTR32rr(2(Class<GR32>) -> 0(Class<GR32>))  [2.02;2.02]
		 Successful, latency: 2.02
	BTR32rr(1(Class<GR32>) -> impl(Reg<EFLAGS>))  [0.992;1.01]
		Dependencies:
			ADC32ri8(impl(Reg<EFLAGS>) -> 0(Class<GR32>)) 
			ADC32ri(1(Class<GR32>) -> impl(Reg<EFLAGS>)) 
		Combined result: 2.02 cycles
	BTR32rr(2(Class<GR32>) -> impl(Reg<EFLAGS>))  [0.992;1.01]
		Dependencies:
			ADC32ri8(impl(Reg<EFLAGS>) -> 0(Class<GR32>)) 
			ADC32ri(1(Class<GR32>) -> impl(Reg<EFLAGS>)) 
		Combined result: 2.02 cycles

-----BTR64ri8-----
	BTR64ri8(1(Class<GR64>) -> 0(Class<GR64>))  [2.01;2.01]
		 Successful, latency: 2.01
	BTR64ri8(1(Class<GR64>) -> impl(Reg<EFLAGS>))  [1.01;1.03]
		Dependencies:
			ADC64rr(impl(Reg<EFLAGS>) -> 0(Class<GR64>)) 
			ADC64ri32(1(Class<GR64>) -> impl(Reg<EFLAGS>)) 
		Combined result: 2.02 cycles

-----BTR64rr-----
	BTR64rr(1(Class<GR64>) -> 0(Class<GR64>))  [2.02;2.02]
		 Successful, latency: 2.02
	BTR64rr(2(Class<GR64>) -> 0(Class<GR64>))  [2.02;2.02]
		 Successful, latency: 2.02
	BTR64rr(1(Class<GR64>) -> impl(Reg<EFLAGS>))  [1.01;1.02]
		Dependencies:
			ADC64rr(impl(Reg<EFLAGS>) -> 0(Class<GR64>)) 
			ADC64ri32(1(Class<GR64>) -> impl(Reg<EFLAGS>)) 
		Combined result: 2.02 cycles
	BTR64rr(2(Class<GR64>) -> impl(Reg<EFLAGS>))  [1.02;1.04]
		Dependencies:
			ADC64rr(impl(Reg<EFLAGS>) -> 0(Class<GR64>)) 
			ADC64ri32(1(Class<GR64>) -> impl(Reg<EFLAGS>)) 
		Combined result: 2.03 cycles

-----BTS16ri8-----
	BTS16ri8(1(Class<GR16>) -> 0(Class<GR16>))  [2.01;2.01]
		 Successful, latency: 2.01
	BTS16ri8(1(Class<GR16>) -> impl(Reg<EFLAGS>))  [1.01;1.03]
		Dependencies:
			ADC16rr(impl(Reg<EFLAGS>) -> 0(Class<GR16>)) 
			ADC16ri(1(Class<GR16>) -> impl(Reg<EFLAGS>)) 
		Combined result: 2.03 cycles

-----BTS16rr-----
	BTS16rr(1(Class<GR16>) -> 0(Class<GR16>))  [2.03;2.03]
		 Successful, latency: 2.03
	BTS16rr(2(Class<GR16>) -> 0(Class<GR16>))  [2.03;2.03]
		 Successful, latency: 2.03
	BTS16rr(1(Class<GR16>) -> impl(Reg<EFLAGS>))  [1.02;1.03]
		Dependencies:
			ADC16rr(impl(Reg<EFLAGS>) -> 0(Class<GR16>)) 
			ADC16ri(1(Class<GR16>) -> impl(Reg<EFLAGS>)) 
		Combined result: 2.03 cycles
	BTS16rr(2(Class<GR16>) -> impl(Reg<EFLAGS>))  [1;1.02]
		Dependencies:
			ADC16rr(impl(Reg<EFLAGS>) -> 0(Class<GR16>)) 
			ADC16ri(1(Class<GR16>) -> impl(Reg<EFLAGS>)) 
		Combined result: 2.02 cycles

-----BTS32ri8-----
	BTS32ri8(1(Class<GR32>) -> 0(Class<GR32>))  [2.02;2.02]
		 Successful, latency: 2.02
	BTS32ri8(1(Class<GR32>) -> impl(Reg<EFLAGS>))  [0.992;1.01]
		Dependencies:
			ADC32ri8(impl(Reg<EFLAGS>) -> 0(Class<GR32>)) 
			ADC32ri(1(Class<GR32>) -> impl(Reg<EFLAGS>)) 
		Combined result: 2.02 cycles

-----BTS32rr-----
	BTS32rr(1(Class<GR32>) -> 0(Class<GR32>))  [2.02;2.02]
		 Successful, latency: 2.02
	BTS32rr(2(Class<GR32>) -> 0(Class<GR32>))  [2.02;2.02]
		 Successful, latency: 2.02
	BTS32rr(1(Class<GR32>) -> impl(Reg<EFLAGS>))  [1.03;1.05]
		Dependencies:
			ADC32ri8(impl(Reg<EFLAGS>) -> 0(Class<GR32>)) 
			ADC32ri(1(Class<GR32>) -> impl(Reg<EFLAGS>)) 
		Combined result: 2.06 cycles
	BTS32rr(2(Class<GR32>) -> impl(Reg<EFLAGS>))  [1;1.02]
		Dependencies:
			ADC32ri8(impl(Reg<EFLAGS>) -> 0(Class<GR32>)) 
			ADC32ri(1(Class<GR32>) -> impl(Reg<EFLAGS>)) 
		Combined result: 2.03 cycles

-----BTS64ri8-----
	BTS64ri8(1(Class<GR64>) -> 0(Class<GR64>))  [2.02;2.02]
		 Successful, latency: 2.02
	BTS64ri8(1(Class<GR64>) -> impl(Reg<EFLAGS>))  [1.01;1.03]
		Dependencies:
			ADC64rr(impl(Reg<EFLAGS>) -> 0(Class<GR64>)) 
			ADC64ri32(1(Class<GR64>) -> impl(Reg<EFLAGS>)) 
		Combined result: 2.02 cycles

-----BTS64rr-----
	BTS64rr(1(Class<GR64>) -> 0(Class<GR64>))  [2.01;2.01]
		 Successful, latency: 2.01
	BTS64rr(2(Class<GR64>) -> 0(Class<GR64>))  [2.01;2.01]
		 Successful, latency: 2.01
	BTS64rr(1(Class<GR64>) -> impl(Reg<EFLAGS>))  [1.01;1.02]
		Dependencies:
			ADC64rr(impl(Reg<EFLAGS>) -> 0(Class<GR64>)) 
			ADC64ri32(1(Class<GR64>) -> impl(Reg<EFLAGS>)) 
		Combined result: 2.02 cycles
	BTS64rr(2(Class<GR64>) -> impl(Reg<EFLAGS>))  [1.01;1.03]
		Dependencies:
			ADC64rr(impl(Reg<EFLAGS>) -> 0(Class<GR64>)) 
			ADC64ri32(1(Class<GR64>) -> impl(Reg<EFLAGS>)) 
		Combined result: 2.02 cycles

-----BZHI32rr-----
	BZHI32rr(1(Class<GR32>) -> 0(Class<GR32>))  [1.01;1.01]
		 Successful, latency: 1.01
	BZHI32rr(2(Class<GR32>) -> 0(Class<GR32>))  [1.01;1.01]
		 Successful, latency: 1.01
	BZHI32rr(1(Class<GR32>) -> impl(Reg<EFLAGS>))  [0.99;1.01]
		Dependencies:
			ADC32ri8(impl(Reg<EFLAGS>) -> 0(Class<GR32>)) 
			ADC32ri(1(Class<GR32>) -> impl(Reg<EFLAGS>)) 
		Combined result: 2.02 cycles
	BZHI32rr(2(Class<GR32>) -> impl(Reg<EFLAGS>))  [1;1.02]
		Dependencies:
			ADC32ri8(impl(Reg<EFLAGS>) -> 0(Class<GR32>)) 
			ADC32ri(1(Class<GR32>) -> impl(Reg<EFLAGS>)) 
		Combined result: 2.03 cycles

-----BZHI32rr_EVEX-----
	BZHI32rr_EVEX(1(Class<GR32>) -> 0(Class<GR32>))  [1;1]
		 Successful, latency: 1
	BZHI32rr_EVEX(2(Class<GR32>) -> 0(Class<GR32>))  [1;1]
		 Successful, latency: 1
	BZHI32rr_EVEX(1(Class<GR32>) -> impl(Reg<EFLAGS>))  [0.99;1.01]
		Dependencies:
			ADC32ri8(impl(Reg<EFLAGS>) -> 0(Class<GR32>)) 
			ADC32ri(1(Class<GR32>) -> impl(Reg<EFLAGS>)) 
		Combined result: 2.02 cycles
	BZHI32rr_EVEX(2(Class<GR32>) -> impl(Reg<EFLAGS>))  [0.991;1.01]
		Dependencies:
			ADC32ri8(impl(Reg<EFLAGS>) -> 0(Class<GR32>)) 
			ADC32ri(1(Class<GR32>) -> impl(Reg<EFLAGS>)) 
		Combined result: 2.02 cycles

-----BZHI32rr_NF-----
	BZHI32rr_NF(1(Class<GR32>) -> 0(Class<GR32>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	BZHI32rr_NF(2(Class<GR32>) -> 0(Class<GR32>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----BZHI64rr-----
	BZHI64rr(1(Class<GR64>) -> 0(Class<GR64>))  [1.01;1.01]
		 Successful, latency: 1.01
	BZHI64rr(2(Class<GR64>) -> 0(Class<GR64>))  [1;1]
		 Successful, latency: 1
	BZHI64rr(1(Class<GR64>) -> impl(Reg<EFLAGS>))  [1.02;1.03]
		Dependencies:
			ADC64rr(impl(Reg<EFLAGS>) -> 0(Class<GR64>)) 
			ADC64ri32(1(Class<GR64>) -> impl(Reg<EFLAGS>)) 
		Combined result: 2.02 cycles
	BZHI64rr(2(Class<GR64>) -> impl(Reg<EFLAGS>))  [1;1.02]
		Dependencies:
			ADC64rr(impl(Reg<EFLAGS>) -> 0(Class<GR64>)) 
			ADC64ri32(1(Class<GR64>) -> impl(Reg<EFLAGS>)) 
		Combined result: 2.01 cycles

-----BZHI64rr_EVEX-----
	BZHI64rr_EVEX(1(Class<GR64>) -> 0(Class<GR64>))  [1.02;1.02]
		 Successful, latency: 1.02
	BZHI64rr_EVEX(2(Class<GR64>) -> 0(Class<GR64>))  [1.01;1.01]
		 Successful, latency: 1.01
	BZHI64rr_EVEX(1(Class<GR64>) -> impl(Reg<EFLAGS>))  [1.02;1.04]
		Dependencies:
			ADC64rr(impl(Reg<EFLAGS>) -> 0(Class<GR64>)) 
			ADC64ri32(1(Class<GR64>) -> impl(Reg<EFLAGS>)) 
		Combined result: 2.03 cycles
	BZHI64rr_EVEX(2(Class<GR64>) -> impl(Reg<EFLAGS>))  [1.02;1.04]
		Dependencies:
			ADC64rr(impl(Reg<EFLAGS>) -> 0(Class<GR64>)) 
			ADC64ri32(1(Class<GR64>) -> impl(Reg<EFLAGS>)) 
		Combined result: 2.03 cycles

-----BZHI64rr_NF-----
	BZHI64rr_NF(1(Class<GR64>) -> 0(Class<GR64>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	BZHI64rr_NF(2(Class<GR64>) -> 0(Class<GR64>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----CCMP16ri-----
	CCMP16ri(impl(Reg<EFLAGS>) -> impl(Reg<EFLAGS>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----CCMP16ri8-----
	CCMP16ri8(impl(Reg<EFLAGS>) -> impl(Reg<EFLAGS>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----CCMP16rr-----
	CCMP16rr(impl(Reg<EFLAGS>) -> impl(Reg<EFLAGS>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----CCMP16rr_REV-----
	CCMP16rr_REV(impl(Reg<EFLAGS>) -> impl(Reg<EFLAGS>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----CCMP32ri-----
	CCMP32ri(impl(Reg<EFLAGS>) -> impl(Reg<EFLAGS>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----CCMP32ri8-----
	CCMP32ri8(impl(Reg<EFLAGS>) -> impl(Reg<EFLAGS>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----CCMP32rr-----
	CCMP32rr(impl(Reg<EFLAGS>) -> impl(Reg<EFLAGS>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----CCMP32rr_REV-----
	CCMP32rr_REV(impl(Reg<EFLAGS>) -> impl(Reg<EFLAGS>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----CCMP64ri32-----
	CCMP64ri32(impl(Reg<EFLAGS>) -> impl(Reg<EFLAGS>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----CCMP64ri8-----
	CCMP64ri8(impl(Reg<EFLAGS>) -> impl(Reg<EFLAGS>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----CCMP64rr-----
	CCMP64rr(impl(Reg<EFLAGS>) -> impl(Reg<EFLAGS>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----CCMP64rr_REV-----
	CCMP64rr_REV(impl(Reg<EFLAGS>) -> impl(Reg<EFLAGS>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----CCMP8ri-----
	CCMP8ri(impl(Reg<EFLAGS>) -> impl(Reg<EFLAGS>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----CCMP8rr-----
	CCMP8rr(impl(Reg<EFLAGS>) -> impl(Reg<EFLAGS>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----CCMP8rr_REV-----
	CCMP8rr_REV(impl(Reg<EFLAGS>) -> impl(Reg<EFLAGS>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----CDQ-----
	CDQ(impl(Reg<EAX>) -> impl(Reg<EAX>))  [0.5;0.5]
		 Successful, latency: 0.5

-----CFCMOV16rr-----
	CFCMOV16rr(1(Class<GR16>) -> 0(Class<GR16>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----CFCMOV16rr_ND-----
	CFCMOV16rr_ND(1(Class<GR16>) -> 0(Class<GR16>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	CFCMOV16rr_ND(2(Class<GR16>) -> 0(Class<GR16>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----CFCMOV16rr_REV-----
	CFCMOV16rr_REV(1(Class<GR16>) -> 0(Class<GR16>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----CFCMOV32rr-----
	CFCMOV32rr(1(Class<GR32>) -> 0(Class<GR32>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----CFCMOV32rr_ND-----
	CFCMOV32rr_ND(1(Class<GR32>) -> 0(Class<GR32>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	CFCMOV32rr_ND(2(Class<GR32>) -> 0(Class<GR32>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----CFCMOV32rr_REV-----
	CFCMOV32rr_REV(1(Class<GR32>) -> 0(Class<GR32>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----CFCMOV64rr-----
	CFCMOV64rr(1(Class<GR64>) -> 0(Class<GR64>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----CFCMOV64rr_ND-----
	CFCMOV64rr_ND(1(Class<GR64>) -> 0(Class<GR64>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	CFCMOV64rr_ND(2(Class<GR64>) -> 0(Class<GR64>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----CFCMOV64rr_REV-----
	CFCMOV64rr_REV(1(Class<GR64>) -> 0(Class<GR64>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----CLC-----
	CLC(impl(Reg<EFLAGS>) -> impl(Reg<EFLAGS>))  [0.166;0.166]
		 Successful, latency: 0.166

-----CLI-----
	CLI(impl(Reg<EFLAGS>) -> impl(Reg<EFLAGS>))  [ERROR_SIGSEGV]
		ERROR_SIGSEGV, this instruction cannot be measured on this platform

-----CMC-----
	CMC(impl(Reg<EFLAGS>) -> impl(Reg<EFLAGS>))  [0.51;0.51]
		 Successful, latency: 0.51

-----CMOV16rr-----
	CMOV16rr(1(Class<GR16>) -> 0(Class<GR16>))  [1.01;1.01]
		 Successful, latency: 1.01
	CMOV16rr(2(Class<GR16>) -> 0(Class<GR16>))  [1.01;1.01]
		 Successful, latency: 1.01
	CMOV16rr(impl(Reg<EFLAGS>) -> 0(Class<GR16>))  [-0.0162;0.0025]
		Dependencies:
			ADC16rr(impl(Reg<EFLAGS>) -> 0(Class<GR16>)) 
			ADC16ri(1(Class<GR16>) -> impl(Reg<EFLAGS>)) 
		Combined result: 1 cycles

-----CMOV16rr_ND-----
	CMOV16rr_ND(1(Class<GR16>) -> 0(Class<GR16>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	CMOV16rr_ND(2(Class<GR16>) -> 0(Class<GR16>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----CMOV32rr-----
	CMOV32rr(1(Class<GR32>) -> 0(Class<GR32>))  [0.996;0.996]
		 Successful, latency: 0.996
	CMOV32rr(2(Class<GR32>) -> 0(Class<GR32>))  [1;1]
		 Successful, latency: 1
	CMOV32rr(impl(Reg<EFLAGS>) -> 0(Class<GR32>))  [-0.00875;0.01]
		Dependencies:
			ADC32ri8(impl(Reg<EFLAGS>) -> 0(Class<GR32>)) 
			ADC32ri(1(Class<GR32>) -> impl(Reg<EFLAGS>)) 
		Combined result: 1.01 cycles

-----CMOV32rr_ND-----
	CMOV32rr_ND(1(Class<GR32>) -> 0(Class<GR32>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	CMOV32rr_ND(2(Class<GR32>) -> 0(Class<GR32>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----CMOV64rr-----
	CMOV64rr(1(Class<GR64>) -> 0(Class<GR64>))  [1.01;1.01]
		 Successful, latency: 1.01
	CMOV64rr(2(Class<GR64>) -> 0(Class<GR64>))  [1.02;1.02]
		 Successful, latency: 1.02
	CMOV64rr(impl(Reg<EFLAGS>) -> 0(Class<GR64>))  [-0.005;0.0112]
		Dependencies:
			ADC64rr(impl(Reg<EFLAGS>) -> 0(Class<GR64>)) 
			ADC64ri32(1(Class<GR64>) -> impl(Reg<EFLAGS>)) 
		Combined result: 1.01 cycles

-----CMOV64rr_ND-----
	CMOV64rr_ND(1(Class<GR64>) -> 0(Class<GR64>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	CMOV64rr_ND(2(Class<GR64>) -> 0(Class<GR64>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----CMOV_FR16-----
	CMOV_FR16(1(Class<FR16>) -> 0(Class<FR16>))  [0;0]
		 Successful, latency: 0
	CMOV_FR16(2(Class<FR16>) -> 0(Class<FR16>))  [-0.00125;-0.00125]
		 Successful, latency: -0.00125

-----CMOV_FR16X-----
	CMOV_FR16X(1(Class<FR16X>) -> 0(Class<FR16X>))  [-0.00125;-0.00125]
		 Successful, latency: -0.00125
	CMOV_FR16X(2(Class<FR16X>) -> 0(Class<FR16X>))  [0;0]
		 Successful, latency: 0

-----CMOV_FR32-----
	CMOV_FR32(1(Class<FR32>) -> 0(Class<FR32>))  [0.00125;0.00125]
		 Successful, latency: 0.00125
	CMOV_FR32(2(Class<FR32>) -> 0(Class<FR32>))  [0;0]
		 Successful, latency: 0
	CMOV_FR32(impl(Reg<EFLAGS>) -> 0(Class<FR32>))  [1;0.0163]
		Dependencies:
			CMOV_FR32(impl(Reg<EFLAGS>) -> 0(Class<FR32>)) 
			COMISSrr(0(Class<FR32>) -> impl(Reg<EFLAGS>)) 
		Combined result: 1.02 cycles

-----CMOV_FR32X-----
	CMOV_FR32X(1(Class<FR32X>) -> 0(Class<FR32X>))  [0.00125;0.00125]
		 Successful, latency: 0.00125
	CMOV_FR32X(2(Class<FR32X>) -> 0(Class<FR32X>))  [0;0]
		 Successful, latency: 0
	CMOV_FR32X(impl(Reg<EFLAGS>) -> 0(Class<FR32X>))  [1.02;0.0175]
		Dependencies:
			CMOV_FR32X(impl(Reg<EFLAGS>) -> 0(Class<FR32X>)) 
			VCOMISSZrr(0(Class<FR32X>) -> impl(Reg<EFLAGS>)) 
		Combined result: 1.02 cycles

-----CMOV_FR64-----
	CMOV_FR64(1(Class<FR64>) -> 0(Class<FR64>))  [-0.00125;-0.00125]
		 Successful, latency: -0.00125
	CMOV_FR64(2(Class<FR64>) -> 0(Class<FR64>))  [0;0]
		 Successful, latency: 0
	CMOV_FR64(impl(Reg<EFLAGS>) -> 0(Class<FR64>))  [0.996;0.005]
		Dependencies:
			CMOV_FR64(impl(Reg<EFLAGS>) -> 0(Class<FR64>)) 
			COMISDrr(0(Class<FR64>) -> impl(Reg<EFLAGS>)) 
		Combined result: 1 cycles

-----CMOV_FR64X-----
	CMOV_FR64X(1(Class<FR64X>) -> 0(Class<FR64X>))  [0;0]
		 Successful, latency: 0
	CMOV_FR64X(2(Class<FR64X>) -> 0(Class<FR64X>))  [0;0]
		 Successful, latency: 0
	CMOV_FR64X(impl(Reg<EFLAGS>) -> 0(Class<FR64X>))  [1;0.0188]
		Dependencies:
			CMOV_FR64X(impl(Reg<EFLAGS>) -> 0(Class<FR64X>)) 
			VCOMISDZrr(0(Class<FR64X>) -> impl(Reg<EFLAGS>)) 
		Combined result: 1.02 cycles

-----CMOV_GR16-----
	CMOV_GR16(1(Class<GR16>) -> 0(Class<GR16>))  [0;0]
		 Successful, latency: 0
	CMOV_GR16(2(Class<GR16>) -> 0(Class<GR16>))  [-0.00125;-0.00125]
		 Successful, latency: -0.00125
	CMOV_GR16(impl(Reg<EFLAGS>) -> 0(Class<GR16>))  [-0.01;0.00875]
		Dependencies:
			ADC16rr(impl(Reg<EFLAGS>) -> 0(Class<GR16>)) 
			ADC16ri(1(Class<GR16>) -> impl(Reg<EFLAGS>)) 
		Combined result: 1.01 cycles

-----CMOV_GR32-----
	CMOV_GR32(1(Class<GR32>) -> 0(Class<GR32>))  [0;0]
		 Successful, latency: 0
	CMOV_GR32(2(Class<GR32>) -> 0(Class<GR32>))  [0;0]
		 Successful, latency: 0
	CMOV_GR32(impl(Reg<EFLAGS>) -> 0(Class<GR32>))  [-0.0162;0.0025]
		Dependencies:
			ADC32ri8(impl(Reg<EFLAGS>) -> 0(Class<GR32>)) 
			ADC32ri(1(Class<GR32>) -> impl(Reg<EFLAGS>)) 
		Combined result: 1 cycles

-----CMOV_GR8-----
	CMOV_GR8(1(Class<GR8>) -> 0(Class<GR8>))  [0.00125;0.00125]
		 Successful, latency: 0.00125
	CMOV_GR8(2(Class<GR8>) -> 0(Class<GR8>))  [0;0]
		 Successful, latency: 0
	CMOV_GR8(impl(Reg<EFLAGS>) -> 0(Class<GR8>))  [-0.00125;0.015]
		Dependencies:
			ADC8ri8(impl(Reg<EFLAGS>) -> 0(Class<GR8>)) 
			ADC8ri(1(Class<GR8>) -> impl(Reg<EFLAGS>)) 
		Combined result: 1.01 cycles

-----CMOV_RFP32-----
	CMOV_RFP32(1(Class<RFP32>) -> 0(Class<RFP32>))  [-0.00125;-0.00125]
		 Successful, latency: -0.00125
	CMOV_RFP32(2(Class<RFP32>) -> 0(Class<RFP32>))  [0;0]
		 Successful, latency: 0

-----CMOV_RFP64-----
	CMOV_RFP64(1(Class<RFP64>) -> 0(Class<RFP64>))  [0;0]
		 Successful, latency: 0
	CMOV_RFP64(2(Class<RFP64>) -> 0(Class<RFP64>))  [-0.00125;-0.00125]
		 Successful, latency: -0.00125

-----CMOV_RFP80-----
	CMOV_RFP80(1(Class<RFP80>) -> 0(Class<RFP80>))  [-0.00125;-0.00125]
		 Successful, latency: -0.00125
	CMOV_RFP80(2(Class<RFP80>) -> 0(Class<RFP80>))  [0.00125;0.00125]
		 Successful, latency: 0.00125

-----CMOV_VK1-----
	CMOV_VK1(1(Class<VK1>) -> 0(Class<VK1>))  [0;0]
		 Successful, latency: 0
	CMOV_VK1(2(Class<VK1>) -> 0(Class<VK1>))  [0.00125;0.00125]
		 Successful, latency: 0.00125

-----CMOV_VK16-----
	CMOV_VK16(1(Class<VK16>) -> 0(Class<VK16>))  [-0.00125;-0.00125]
		 Successful, latency: -0.00125
	CMOV_VK16(2(Class<VK16>) -> 0(Class<VK16>))  [0.00125;0.00125]
		 Successful, latency: 0.00125
	CMOV_VK16(impl(Reg<EFLAGS>) -> 0(Class<VK16>))  [1.05;0.256]
		Dependencies:
			CMOV_VK16(impl(Reg<EFLAGS>) -> 0(Class<VK16>)) 
			KORTESTWkk(0(Class<VK16>) -> impl(Reg<EFLAGS>)) 
		Combined result: 1.26 cycles

-----CMOV_VK2-----
	CMOV_VK2(1(Class<VK2>) -> 0(Class<VK2>))  [-0.00125;-0.00125]
		 Successful, latency: -0.00125
	CMOV_VK2(2(Class<VK2>) -> 0(Class<VK2>))  [0;0]
		 Successful, latency: 0

-----CMOV_VK32-----
	CMOV_VK32(1(Class<VK32>) -> 0(Class<VK32>))  [0.00125;0.00125]
		 Successful, latency: 0.00125
	CMOV_VK32(2(Class<VK32>) -> 0(Class<VK32>))  [0;0]
		 Successful, latency: 0
	CMOV_VK32(impl(Reg<EFLAGS>) -> 0(Class<VK32>))  [1;0.258]
		Dependencies:
			CMOV_VK32(impl(Reg<EFLAGS>) -> 0(Class<VK32>)) 
			KORTESTDkk(0(Class<VK32>) -> impl(Reg<EFLAGS>)) 
		Combined result: 1.26 cycles

-----CMOV_VK4-----
	CMOV_VK4(1(Class<VK4>) -> 0(Class<VK4>))  [0.00125;0.00125]
		 Successful, latency: 0.00125
	CMOV_VK4(2(Class<VK4>) -> 0(Class<VK4>))  [-0.00125;-0.00125]
		 Successful, latency: -0.00125

-----CMOV_VK64-----
	CMOV_VK64(1(Class<VK64>) -> 0(Class<VK64>))  [0;0]
		 Successful, latency: 0
	CMOV_VK64(2(Class<VK64>) -> 0(Class<VK64>))  [0;0]
		 Successful, latency: 0
	CMOV_VK64(impl(Reg<EFLAGS>) -> 0(Class<VK64>))  [1.01;0.0588]
		Dependencies:
			CMOV_VK64(impl(Reg<EFLAGS>) -> 0(Class<VK64>)) 
			KORTESTQkk(0(Class<VK64>) -> impl(Reg<EFLAGS>)) 
		Combined result: 1.06 cycles

-----CMOV_VK8-----
	CMOV_VK8(1(Class<VK8>) -> 0(Class<VK8>))  [-0.00125;-0.00125]
		 Successful, latency: -0.00125
	CMOV_VK8(2(Class<VK8>) -> 0(Class<VK8>))  [0;0]
		 Successful, latency: 0
	CMOV_VK8(impl(Reg<EFLAGS>) -> 0(Class<VK8>))  [1;0.22]
		Dependencies:
			CMOV_VK8(impl(Reg<EFLAGS>) -> 0(Class<VK8>)) 
			KORTESTBkk(0(Class<VK8>) -> impl(Reg<EFLAGS>)) 
		Combined result: 1.22 cycles

-----CMOV_VR128-----
	CMOV_VR128(1(Class<VR128>) -> 0(Class<VR128>))  [-0.00125;-0.00125]
		 Successful, latency: -0.00125
	CMOV_VR128(2(Class<VR128>) -> 0(Class<VR128>))  [0;0]
		 Successful, latency: 0
	CMOV_VR128(impl(Reg<EFLAGS>) -> 0(Class<VR128>))  [1.01;0.0175]
		Dependencies:
			CMOV_VR128(impl(Reg<EFLAGS>) -> 0(Class<VR128>)) 
			COMISDrr_Int(0(Class<VR128>) -> impl(Reg<EFLAGS>)) 
		Combined result: 1.02 cycles

-----CMOV_VR128X-----
	CMOV_VR128X(1(Class<VR128X>) -> 0(Class<VR128X>))  [-0.00125;-0.00125]
		 Successful, latency: -0.00125
	CMOV_VR128X(2(Class<VR128X>) -> 0(Class<VR128X>))  [0;0]
		 Successful, latency: 0
	CMOV_VR128X(impl(Reg<EFLAGS>) -> 0(Class<VR128X>))  [1.01;0.0137]
		Dependencies:
			CMOV_VR128X(impl(Reg<EFLAGS>) -> 0(Class<VR128X>)) 
			VCOMISDZrr_Int(0(Class<VR128X>) -> impl(Reg<EFLAGS>)) 
		Combined result: 1.01 cycles

-----CMOV_VR256-----
	CMOV_VR256(1(Class<VR256>) -> 0(Class<VR256>))  [-0.00125;-0.00125]
		 Successful, latency: -0.00125
	CMOV_VR256(2(Class<VR256>) -> 0(Class<VR256>))  [-0.00125;-0.00125]
		 Successful, latency: -0.00125
	CMOV_VR256(impl(Reg<EFLAGS>) -> 0(Class<VR256>))  [1.02;0.0163]
		Dependencies:
			CMOV_VR256(impl(Reg<EFLAGS>) -> 0(Class<VR256>)) 
			VPTESTYrr(0(Class<VR256>) -> impl(Reg<EFLAGS>)) 
		Combined result: 1.02 cycles

-----CMOV_VR256X-----
	CMOV_VR256X(1(Class<VR256X>) -> 0(Class<VR256X>))  [0;0]
		 Successful, latency: 0
	CMOV_VR256X(2(Class<VR256X>) -> 0(Class<VR256X>))  [0.00125;0.00125]
		 Successful, latency: 0.00125

-----CMOV_VR512-----
	CMOV_VR512(1(Class<VR512>) -> 0(Class<VR512>))  [0.00125;0.00125]
		 Successful, latency: 0.00125
	CMOV_VR512(2(Class<VR512>) -> 0(Class<VR512>))  [0;0]
		 Successful, latency: 0

-----CMOV_VR64-----
	CMOV_VR64(1(Class<VR64>) -> 0(Class<VR64>))  [-0.00125;-0.00125]
		 Successful, latency: -0.00125
	CMOV_VR64(2(Class<VR64>) -> 0(Class<VR64>))  [0.00125;0.00125]
		 Successful, latency: 0.00125

-----CMP16i16-----
	CMP16i16(impl(Reg<AX>) -> impl(Reg<EFLAGS>))  [1;1.02]
		Dependencies:
			ADC16i16(impl(Reg<EFLAGS>) -> impl(Reg<AX>)) 
			ADC16i16(impl(Reg<AX>) -> impl(Reg<EFLAGS>)) 
		Combined result: 2.03 cycles

-----CMP16ri-----
	CMP16ri(0(Class<GR16>) -> impl(Reg<EFLAGS>))  [0.994;1.01]
		Dependencies:
			ADC16rr(impl(Reg<EFLAGS>) -> 0(Class<GR16>)) 
			ADC16ri(1(Class<GR16>) -> impl(Reg<EFLAGS>)) 
		Combined result: 2.01 cycles

-----CMP16ri8-----
	CMP16ri8(0(Class<GR16>) -> impl(Reg<EFLAGS>))  [1;1.02]
		Dependencies:
			ADC16rr(impl(Reg<EFLAGS>) -> 0(Class<GR16>)) 
			ADC16ri(1(Class<GR16>) -> impl(Reg<EFLAGS>)) 
		Combined result: 2.02 cycles

-----CMP16rr-----
	CMP16rr(0(Class<GR16>) -> impl(Reg<EFLAGS>))  [1;1.02]
		Dependencies:
			ADC16rr(impl(Reg<EFLAGS>) -> 0(Class<GR16>)) 
			ADC16ri(1(Class<GR16>) -> impl(Reg<EFLAGS>)) 
		Combined result: 2.02 cycles
	CMP16rr(1(Class<GR16>) -> impl(Reg<EFLAGS>))  [0.996;1.01]
		Dependencies:
			ADC16rr(impl(Reg<EFLAGS>) -> 0(Class<GR16>)) 
			ADC16ri(1(Class<GR16>) -> impl(Reg<EFLAGS>)) 
		Combined result: 2.01 cycles

-----CMP16rr_REV-----
	CMP16rr_REV(0(Class<GR16>) -> impl(Reg<EFLAGS>))  [1.01;1.02]
		Dependencies:
			ADC16rr(impl(Reg<EFLAGS>) -> 0(Class<GR16>)) 
			ADC16ri(1(Class<GR16>) -> impl(Reg<EFLAGS>)) 
		Combined result: 2.02 cycles
	CMP16rr_REV(1(Class<GR16>) -> impl(Reg<EFLAGS>))  [1;1.02]
		Dependencies:
			ADC16rr(impl(Reg<EFLAGS>) -> 0(Class<GR16>)) 
			ADC16ri(1(Class<GR16>) -> impl(Reg<EFLAGS>)) 
		Combined result: 2.02 cycles

-----CMP32i32-----
	CMP32i32(impl(Reg<EAX>) -> impl(Reg<EFLAGS>))  [0.995;1.01]
		Dependencies:
			ADC32i32(impl(Reg<EFLAGS>) -> impl(Reg<EAX>)) 
			ADC32i32(impl(Reg<EAX>) -> impl(Reg<EFLAGS>)) 
		Combined result: 2.02 cycles

-----CMP32ri-----
	CMP32ri(0(Class<GR32>) -> impl(Reg<EFLAGS>))  [0.995;1.01]
		Dependencies:
			ADC32ri8(impl(Reg<EFLAGS>) -> 0(Class<GR32>)) 
			ADC32ri(1(Class<GR32>) -> impl(Reg<EFLAGS>)) 
		Combined result: 2.02 cycles

-----CMP32ri8-----
	CMP32ri8(0(Class<GR32>) -> impl(Reg<EFLAGS>))  [0.991;1.01]
		Dependencies:
			ADC32ri8(impl(Reg<EFLAGS>) -> 0(Class<GR32>)) 
			ADC32ri(1(Class<GR32>) -> impl(Reg<EFLAGS>)) 
		Combined result: 2.02 cycles

-----CMP32rr-----
	CMP32rr(0(Class<GR32>) -> impl(Reg<EFLAGS>))  [1.01;1.03]
		Dependencies:
			ADC32ri8(impl(Reg<EFLAGS>) -> 0(Class<GR32>)) 
			ADC32ri(1(Class<GR32>) -> impl(Reg<EFLAGS>)) 
		Combined result: 2.04 cycles
	CMP32rr(1(Class<GR32>) -> impl(Reg<EFLAGS>))  [0.985;1]
		Dependencies:
			ADC32ri8(impl(Reg<EFLAGS>) -> 0(Class<GR32>)) 
			ADC32ri(1(Class<GR32>) -> impl(Reg<EFLAGS>)) 
		Combined result: 2.01 cycles

-----CMP32rr_REV-----
	CMP32rr_REV(0(Class<GR32>) -> impl(Reg<EFLAGS>))  [1;1.02]
		Dependencies:
			ADC32ri8(impl(Reg<EFLAGS>) -> 0(Class<GR32>)) 
			ADC32ri(1(Class<GR32>) -> impl(Reg<EFLAGS>)) 
		Combined result: 2.03 cycles
	CMP32rr_REV(1(Class<GR32>) -> impl(Reg<EFLAGS>))  [0.984;1]
		Dependencies:
			ADC32ri8(impl(Reg<EFLAGS>) -> 0(Class<GR32>)) 
			ADC32ri(1(Class<GR32>) -> impl(Reg<EFLAGS>)) 
		Combined result: 2.01 cycles

-----CMP64i32-----
	CMP64i32(impl(Reg<RAX>) -> impl(Reg<EFLAGS>))  [1;1.02]
		Dependencies:
			CMP64i32(impl(Reg<RAX>) -> impl(Reg<EFLAGS>)) 
			ADC64i32(impl(Reg<EFLAGS>) -> impl(Reg<RAX>)) 
		Combined result: 2.02 cycles

-----CMP64ri32-----
	CMP64ri32(0(Class<GR64>) -> impl(Reg<EFLAGS>))  [1.01;1.03]
		Dependencies:
			ADC64rr(impl(Reg<EFLAGS>) -> 0(Class<GR64>)) 
			ADC64ri32(1(Class<GR64>) -> impl(Reg<EFLAGS>)) 
		Combined result: 2.02 cycles

-----CMP64ri8-----
	CMP64ri8(0(Class<GR64>) -> impl(Reg<EFLAGS>))  [1.02;1.04]
		Dependencies:
			ADC64rr(impl(Reg<EFLAGS>) -> 0(Class<GR64>)) 
			ADC64ri32(1(Class<GR64>) -> impl(Reg<EFLAGS>)) 
		Combined result: 2.03 cycles

-----CMP64rr-----
	CMP64rr(0(Class<GR64>) -> impl(Reg<EFLAGS>))  [1.02;1.03]
		Dependencies:
			ADC64rr(impl(Reg<EFLAGS>) -> 0(Class<GR64>)) 
			ADC64ri32(1(Class<GR64>) -> impl(Reg<EFLAGS>)) 
		Combined result: 2.02 cycles
	CMP64rr(1(Class<GR64>) -> impl(Reg<EFLAGS>))  [1;1.02]
		Dependencies:
			ADC64rr(impl(Reg<EFLAGS>) -> 0(Class<GR64>)) 
			ADC64ri32(1(Class<GR64>) -> impl(Reg<EFLAGS>)) 
		Combined result: 2.01 cycles

-----CMP64rr_REV-----
	CMP64rr_REV(0(Class<GR64>) -> impl(Reg<EFLAGS>))  [1.03;1.04]
		Dependencies:
			ADC64rr(impl(Reg<EFLAGS>) -> 0(Class<GR64>)) 
			ADC64ri32(1(Class<GR64>) -> impl(Reg<EFLAGS>)) 
		Combined result: 2.03 cycles
	CMP64rr_REV(1(Class<GR64>) -> impl(Reg<EFLAGS>))  [1.02;1.04]
		Dependencies:
			ADC64rr(impl(Reg<EFLAGS>) -> 0(Class<GR64>)) 
			ADC64ri32(1(Class<GR64>) -> impl(Reg<EFLAGS>)) 
		Combined result: 2.03 cycles

-----CMP8i8-----
	CMP8i8(impl(Reg<AL>) -> impl(Reg<EFLAGS>))  [0.999;1.02]
		Dependencies:
			ADC8i8(impl(Reg<EFLAGS>) -> impl(Reg<AL>)) 
			CMP8i8(impl(Reg<AL>) -> impl(Reg<EFLAGS>)) 
		Combined result: 2.02 cycles

-----CMP8ri-----
	CMP8ri(0(Class<GR8>) -> impl(Reg<EFLAGS>))  [0.998;1.01]
		Dependencies:
			ADC8ri8(impl(Reg<EFLAGS>) -> 0(Class<GR8>)) 
			ADC8ri(1(Class<GR8>) -> impl(Reg<EFLAGS>)) 
		Combined result: 2.01 cycles

-----CMP8ri8-----
	CMP8ri8(0(Class<GR8>) -> impl(Reg<EFLAGS>))  [0.994;1.01]
		Dependencies:
			ADC8ri8(impl(Reg<EFLAGS>) -> 0(Class<GR8>)) 
			ADC8ri(1(Class<GR8>) -> impl(Reg<EFLAGS>)) 
		Combined result: 2.01 cycles

-----CMP8rr-----
	CMP8rr(0(Class<GR8>) -> impl(Reg<EFLAGS>))  [0.99;1.01]
		Dependencies:
			ADC8ri8(impl(Reg<EFLAGS>) -> 0(Class<GR8>)) 
			ADC8ri(1(Class<GR8>) -> impl(Reg<EFLAGS>)) 
		Combined result: 2.01 cycles
	CMP8rr(1(Class<GR8>) -> impl(Reg<EFLAGS>))  [1.01;1.03]
		Dependencies:
			ADC8ri8(impl(Reg<EFLAGS>) -> 0(Class<GR8>)) 
			ADC8ri(1(Class<GR8>) -> impl(Reg<EFLAGS>)) 
		Combined result: 2.03 cycles

-----CMP8rr_REV-----
	CMP8rr_REV(0(Class<GR8>) -> impl(Reg<EFLAGS>))  [1;1.02]
		Dependencies:
			ADC8ri8(impl(Reg<EFLAGS>) -> 0(Class<GR8>)) 
			ADC8ri(1(Class<GR8>) -> impl(Reg<EFLAGS>)) 
		Combined result: 2.02 cycles
	CMP8rr_REV(1(Class<GR8>) -> impl(Reg<EFLAGS>))  [1;1.02]
		Dependencies:
			ADC8ri8(impl(Reg<EFLAGS>) -> 0(Class<GR8>)) 
			ADC8ri(1(Class<GR8>) -> impl(Reg<EFLAGS>)) 
		Combined result: 2.02 cycles

-----CMPPDrri-----
	CMPPDrri(1(Class<VR128>) -> 0(Class<VR128>))  [2.02;2.02]
		 Successful, latency: 2.02
	CMPPDrri(2(Class<VR128>) -> 0(Class<VR128>))  [2.02;2.02]
		 Successful, latency: 2.02

-----CMPPSrri-----
	CMPPSrri(1(Class<VR128>) -> 0(Class<VR128>))  [2.01;2.01]
		 Successful, latency: 2.01
	CMPPSrri(2(Class<VR128>) -> 0(Class<VR128>))  [2.02;2.02]
		 Successful, latency: 2.02

-----CMPSB-----
	CMPSB(impl(Reg<EDI>) -> impl(Reg<EDI>))  [SKIP_MEMORY_OPERAND]
		SKIP_MEMORY_OPERAND, this instruction cannot be measured on this platform
	CMPSB(impl(Reg<ESI>) -> impl(Reg<ESI>))  [SKIP_MEMORY_OPERAND]
		SKIP_MEMORY_OPERAND, this instruction cannot be measured on this platform

-----CMPSDrri-----
	CMPSDrri(1(Class<FR64>) -> 0(Class<FR64>))  [2.01;2.01]
		 Successful, latency: 2.01
	CMPSDrri(2(Class<FR64>) -> 0(Class<FR64>))  [2.03;2.03]
		 Successful, latency: 2.03

-----CMPSDrri_Int-----
	CMPSDrri_Int(1(Class<VR128>) -> 0(Class<VR128>))  [2.02;2.02]
		 Successful, latency: 2.02
	CMPSDrri_Int(2(Class<VR128>) -> 0(Class<VR128>))  [2.01;2.01]
		 Successful, latency: 2.01

-----CMPSL-----
	CMPSL(impl(Reg<EDI>) -> impl(Reg<EDI>))  [SKIP_MEMORY_OPERAND]
		SKIP_MEMORY_OPERAND, this instruction cannot be measured on this platform
	CMPSL(impl(Reg<ESI>) -> impl(Reg<ESI>))  [SKIP_MEMORY_OPERAND]
		SKIP_MEMORY_OPERAND, this instruction cannot be measured on this platform

-----CMPSQ-----
	CMPSQ(impl(Reg<EDI>) -> impl(Reg<EDI>))  [SKIP_MEMORY_OPERAND]
		SKIP_MEMORY_OPERAND, this instruction cannot be measured on this platform
	CMPSQ(impl(Reg<ESI>) -> impl(Reg<ESI>))  [SKIP_MEMORY_OPERAND]
		SKIP_MEMORY_OPERAND, this instruction cannot be measured on this platform

-----CMPSSrri-----
	CMPSSrri(1(Class<FR32>) -> 0(Class<FR32>))  [2.01;2.01]
		 Successful, latency: 2.01
	CMPSSrri(2(Class<FR32>) -> 0(Class<FR32>))  [2.03;2.03]
		 Successful, latency: 2.03

-----CMPSSrri_Int-----
	CMPSSrri_Int(1(Class<VR128>) -> 0(Class<VR128>))  [2.02;2.02]
		 Successful, latency: 2.02
	CMPSSrri_Int(2(Class<VR128>) -> 0(Class<VR128>))  [2.02;2.02]
		 Successful, latency: 2.02

-----CMPSW-----
	CMPSW(impl(Reg<EDI>) -> impl(Reg<EDI>))  [SKIP_MEMORY_OPERAND]
		SKIP_MEMORY_OPERAND, this instruction cannot be measured on this platform
	CMPSW(impl(Reg<ESI>) -> impl(Reg<ESI>))  [SKIP_MEMORY_OPERAND]
		SKIP_MEMORY_OPERAND, this instruction cannot be measured on this platform

-----CMPXCHG16rr-----
	CMPXCHG16rr(1(Class<GR16>) -> 0(Class<GR16>))  [3.02;3.02]
		 Successful, latency: 3.02
	CMPXCHG16rr(impl(Reg<AX>) -> impl(Reg<AX>))  [3.04;3.04]
		 Successful, latency: 3.04
	CMPXCHG16rr(impl(Reg<AX>) -> 0(Class<GR16>))  [5.02;6.05]
		Dependencies:
			XCHG16ar(impl(Reg<AX>) -> 0(Class<GR16>)) 
			MUL16r(0(Class<GR16>) -> impl(Reg<AX>)) 
		Combined result: 7.05 cycles
	CMPXCHG16rr(1(Class<GR16>) -> impl(Reg<AX>))  [0.995;2.03]
		Dependencies:
			XCHG16ar(impl(Reg<AX>) -> 0(Class<GR16>)) 
			MUL16r(0(Class<GR16>) -> impl(Reg<AX>)) 
		Combined result: 3.04 cycles
	CMPXCHG16rr(1(Class<GR16>) -> impl(Reg<EFLAGS>))  [2.02;2.04]
		Dependencies:
			ADC16rr(impl(Reg<EFLAGS>) -> 0(Class<GR16>)) 
			ADC16ri(1(Class<GR16>) -> impl(Reg<EFLAGS>)) 
		Combined result: 3.03 cycles
	CMPXCHG16rr(impl(Reg<AX>) -> impl(Reg<EFLAGS>))  [2.01;2.03]
		Dependencies:
			ADC16i16(impl(Reg<EFLAGS>) -> impl(Reg<AX>)) 
			ADC16i16(impl(Reg<AX>) -> impl(Reg<EFLAGS>)) 
		Combined result: 3.04 cycles

-----CMPXCHG32rr-----
	CMPXCHG32rr(1(Class<GR32>) -> 0(Class<GR32>))  [3.03;3.03]
		 Successful, latency: 3.03
	CMPXCHG32rr(impl(Reg<EAX>) -> impl(Reg<EAX>))  [3.02;3.02]
		 Successful, latency: 3.02
	CMPXCHG32rr(impl(Reg<EAX>) -> 0(Class<GR32>))  [4.04;5.05]
		Dependencies:
			XCHG32ar(impl(Reg<EAX>) -> 0(Class<GR32>)) 
			MUL32r(0(Class<GR32>) -> impl(Reg<EAX>)) 
		Combined result: 6.05 cycles
	CMPXCHG32rr(1(Class<GR32>) -> impl(Reg<EAX>))  [0.959;1.98]
		Dependencies:
			XCHG32ar(impl(Reg<EAX>) -> 0(Class<GR32>)) 
			MUL32r(0(Class<GR32>) -> impl(Reg<EAX>)) 
		Combined result: 3.02 cycles
	CMPXCHG32rr(1(Class<GR32>) -> impl(Reg<EFLAGS>))  [2.01;2.03]
		Dependencies:
			ADC32ri8(impl(Reg<EFLAGS>) -> 0(Class<GR32>)) 
			ADC32ri(1(Class<GR32>) -> impl(Reg<EFLAGS>)) 
		Combined result: 3.04 cycles
	CMPXCHG32rr(impl(Reg<EAX>) -> impl(Reg<EFLAGS>))  [2.01;2.03]
		Dependencies:
			ADC32i32(impl(Reg<EFLAGS>) -> impl(Reg<EAX>)) 
			ADC32i32(impl(Reg<EAX>) -> impl(Reg<EFLAGS>)) 
		Combined result: 3.03 cycles

-----CMPXCHG64rr-----
	CMPXCHG64rr(1(Class<GR64>) -> 0(Class<GR64>))  [3.05;3.05]
		 Successful, latency: 3.05
	CMPXCHG64rr(impl(Reg<RAX>) -> impl(Reg<RAX>))  [3.04;3.04]
		 Successful, latency: 3.04
	CMPXCHG64rr(1(Class<GR64>) -> impl(Reg<EFLAGS>))  [2.01;2.03]
		Dependencies:
			ADC64rr(impl(Reg<EFLAGS>) -> 0(Class<GR64>)) 
			ADC64ri32(1(Class<GR64>) -> impl(Reg<EFLAGS>)) 
		Combined result: 3.02 cycles
	CMPXCHG64rr(impl(Reg<RAX>) -> 0(Class<GR64>))  [4.03;5.05]
		Dependencies:
			XCHG64ar(impl(Reg<RAX>) -> 0(Class<GR64>)) 
			CMPXCHG64rr(1(Class<GR64>) -> impl(Reg<RAX>)) 
		Combined result: 6.05 cycles
	CMPXCHG64rr(1(Class<GR64>) -> impl(Reg<RAX>))  [0.995;2.02]
		Dependencies:
			XCHG64ar(impl(Reg<RAX>) -> 0(Class<GR64>)) 
			CMPXCHG64rr(1(Class<GR64>) -> impl(Reg<RAX>)) 
		Combined result: 3.03 cycles
	CMPXCHG64rr(impl(Reg<RAX>) -> impl(Reg<EFLAGS>))  [2.1;2.12]
		Dependencies:
			CMP64i32(impl(Reg<RAX>) -> impl(Reg<EFLAGS>)) 
			ADC64i32(impl(Reg<EFLAGS>) -> impl(Reg<RAX>)) 
		Combined result: 3.12 cycles

-----CMPXCHG8rr-----
	CMPXCHG8rr(1(Class<GR8>) -> 0(Class<GR8>))  [3.04;3.04]
		 Successful, latency: 3.04
	CMPXCHG8rr(impl(Reg<AL>) -> impl(Reg<AL>))  [3.08;3.08]
		 Successful, latency: 3.08
	CMPXCHG8rr(impl(Reg<AL>) -> 0(Class<GR8>))  [1.01;5.05]
		Dependencies:
			CMPXCHG8rr(impl(Reg<AL>) -> 0(Class<GR8>)) 
			CMPXCHG8rr(1(Class<GR8>) -> impl(Reg<AL>)) 
		Combined result: 6.05 cycles
	CMPXCHG8rr(1(Class<GR8>) -> impl(Reg<AL>))  [1.01;5.04]
		Dependencies:
			CMPXCHG8rr(impl(Reg<AL>) -> 0(Class<GR8>)) 
			CMPXCHG8rr(1(Class<GR8>) -> impl(Reg<AL>)) 
		Combined result: 6.06 cycles
	CMPXCHG8rr(1(Class<GR8>) -> impl(Reg<EFLAGS>))  [3.03;3.05]
		Dependencies:
			ADC8ri8(impl(Reg<EFLAGS>) -> 0(Class<GR8>)) 
			ADC8ri(1(Class<GR8>) -> impl(Reg<EFLAGS>)) 
		Combined result: 4.05 cycles
	CMPXCHG8rr(impl(Reg<AL>) -> impl(Reg<EFLAGS>))  [3.04;3.06]
		Dependencies:
			ADC8i8(impl(Reg<EFLAGS>) -> impl(Reg<AL>)) 
			CMP8i8(impl(Reg<AL>) -> impl(Reg<EFLAGS>)) 
		Combined result: 4.06 cycles

-----COMISDrr-----
	COMISDrr(0(Class<FR64>) -> impl(Reg<EFLAGS>))  [1.01;0.0188]
		Dependencies:
			CMOV_FR64(impl(Reg<EFLAGS>) -> 0(Class<FR64>)) 
			COMISDrr(0(Class<FR64>) -> impl(Reg<EFLAGS>)) 
		Combined result: 1.01 cycles
	COMISDrr(1(Class<FR64>) -> impl(Reg<EFLAGS>))  [0.999;0.0075]
		Dependencies:
			CMOV_FR64(impl(Reg<EFLAGS>) -> 0(Class<FR64>)) 
			COMISDrr(0(Class<FR64>) -> impl(Reg<EFLAGS>)) 
		Combined result: 1 cycles

-----COMISDrr_Int-----
	COMISDrr_Int(0(Class<VR128>) -> impl(Reg<EFLAGS>))  [0.986;-0.0075]
		Dependencies:
			CMOV_VR128(impl(Reg<EFLAGS>) -> 0(Class<VR128>)) 
			COMISDrr_Int(0(Class<VR128>) -> impl(Reg<EFLAGS>)) 
		Combined result: 1 cycles
	COMISDrr_Int(1(Class<VR128>) -> impl(Reg<EFLAGS>))  [0.981;-0.0125]
		Dependencies:
			CMOV_VR128(impl(Reg<EFLAGS>) -> 0(Class<VR128>)) 
			COMISDrr_Int(0(Class<VR128>) -> impl(Reg<EFLAGS>)) 
		Combined result: 0.999 cycles

-----COMISSrr-----
	COMISSrr(0(Class<FR32>) -> impl(Reg<EFLAGS>))  [0.996;0.0112]
		Dependencies:
			CMOV_FR32(impl(Reg<EFLAGS>) -> 0(Class<FR32>)) 
			COMISSrr(0(Class<FR32>) -> impl(Reg<EFLAGS>)) 
		Combined result: 1.01 cycles
	COMISSrr(1(Class<FR32>) -> impl(Reg<EFLAGS>))  [0.991;0.00625]
		Dependencies:
			CMOV_FR32(impl(Reg<EFLAGS>) -> 0(Class<FR32>)) 
			COMISSrr(0(Class<FR32>) -> impl(Reg<EFLAGS>)) 
		Combined result: 1.01 cycles

-----COMISSrr_Int-----
	COMISSrr_Int(0(Class<VR128>) -> impl(Reg<EFLAGS>))  [0.992;-0.00125]
		Dependencies:
			CMOV_VR128(impl(Reg<EFLAGS>) -> 0(Class<VR128>)) 
			COMISDrr_Int(0(Class<VR128>) -> impl(Reg<EFLAGS>)) 
		Combined result: 1.01 cycles
	COMISSrr_Int(1(Class<VR128>) -> impl(Reg<EFLAGS>))  [0.991;-0.0025]
		Dependencies:
			CMOV_VR128(impl(Reg<EFLAGS>) -> 0(Class<VR128>)) 
			COMISDrr_Int(0(Class<VR128>) -> impl(Reg<EFLAGS>)) 
		Combined result: 1.01 cycles

-----CQO-----
	CQO(impl(Reg<RAX>) -> impl(Reg<RAX>))  [0.51;0.51]
		 Successful, latency: 0.51

-----CRC32r32r16-----
	CRC32r32r16(1(Class<GR32>) -> 0(Class<GR32>))  [3.05;3.05]
		 Successful, latency: 3.05

-----CRC32r32r16_EVEX-----
	CRC32r32r16_EVEX(1(Class<GR32>) -> 0(Class<GR32>))  [3.04;3.04]
		 Successful, latency: 3.04

-----CRC32r32r32-----
	CRC32r32r32(1(Class<GR32>) -> 0(Class<GR32>))  [3.03;3.03]
		 Successful, latency: 3.03
	CRC32r32r32(2(Class<GR32>) -> 0(Class<GR32>))  [3.03;3.03]
		 Successful, latency: 3.03

-----CRC32r32r32_EVEX-----
	CRC32r32r32_EVEX(1(Class<GR32>) -> 0(Class<GR32>))  [3.06;3.06]
		 Successful, latency: 3.06
	CRC32r32r32_EVEX(2(Class<GR32>) -> 0(Class<GR32>))  [3.02;3.02]
		 Successful, latency: 3.02

-----CRC32r32r8-----
	CRC32r32r8(1(Class<GR32>) -> 0(Class<GR32>))  [3.02;3.02]
		 Successful, latency: 3.02

-----CRC32r32r8_EVEX-----
	CRC32r32r8_EVEX(1(Class<GR32>) -> 0(Class<GR32>))  [3.04;3.04]
		 Successful, latency: 3.04

-----CRC32r64r64-----
	CRC32r64r64(1(Class<GR64>) -> 0(Class<GR64>))  [3.03;3.03]
		 Successful, latency: 3.03
	CRC32r64r64(2(Class<GR64>) -> 0(Class<GR64>))  [3.02;3.02]
		 Successful, latency: 3.02

-----CRC32r64r64_EVEX-----
	CRC32r64r64_EVEX(1(Class<GR64>) -> 0(Class<GR64>))  [3.03;3.03]
		 Successful, latency: 3.03
	CRC32r64r64_EVEX(2(Class<GR64>) -> 0(Class<GR64>))  [3.02;3.02]
		 Successful, latency: 3.02

-----CRC32r64r8-----
	CRC32r64r8(1(Class<GR64>) -> 0(Class<GR64>))  [3.03;3.03]
		 Successful, latency: 3.03

-----CRC32r64r8_EVEX-----
	CRC32r64r8_EVEX(1(Class<GR64>) -> 0(Class<GR64>))  [3.02;3.02]
		 Successful, latency: 3.02

-----CTEST16ri-----
	CTEST16ri(impl(Reg<EFLAGS>) -> impl(Reg<EFLAGS>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----CTEST16rr-----
	CTEST16rr(impl(Reg<EFLAGS>) -> impl(Reg<EFLAGS>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----CTEST32ri-----
	CTEST32ri(impl(Reg<EFLAGS>) -> impl(Reg<EFLAGS>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----CTEST32rr-----
	CTEST32rr(impl(Reg<EFLAGS>) -> impl(Reg<EFLAGS>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----CTEST64ri32-----
	CTEST64ri32(impl(Reg<EFLAGS>) -> impl(Reg<EFLAGS>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----CTEST64rr-----
	CTEST64rr(impl(Reg<EFLAGS>) -> impl(Reg<EFLAGS>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----CTEST8ri-----
	CTEST8ri(impl(Reg<EFLAGS>) -> impl(Reg<EFLAGS>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----CTEST8rr-----
	CTEST8rr(impl(Reg<EFLAGS>) -> impl(Reg<EFLAGS>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----CVTDQ2PDrr-----
	CVTDQ2PDrr(1(Class<VR128>) -> 0(Class<VR128>))  [3.04;3.04]
		 Successful, latency: 3.04

-----CVTDQ2PSrr-----
	CVTDQ2PSrr(1(Class<VR128>) -> 0(Class<VR128>))  [3.03;3.03]
		 Successful, latency: 3.03

-----CVTPD2DQrr-----
	CVTPD2DQrr(1(Class<VR128>) -> 0(Class<VR128>))  [3.04;3.04]
		 Successful, latency: 3.04

-----CVTPD2PSrr-----
	CVTPD2PSrr(1(Class<VR128>) -> 0(Class<VR128>))  [3.03;3.03]
		 Successful, latency: 3.03

-----CVTPS2DQrr-----
	CVTPS2DQrr(1(Class<VR128>) -> 0(Class<VR128>))  [3.02;3.02]
		 Successful, latency: 3.02

-----CVTPS2PDrr-----
	CVTPS2PDrr(1(Class<VR128>) -> 0(Class<VR128>))  [3.02;3.02]
		 Successful, latency: 3.02

-----CVTSD2SI64rr-----
	CVTSD2SI64rr(1(Class<FR64>) -> 0(Class<GR64>))  [4.02;8.06]
		Dependencies:
			VMOVSDto64rr(1(Class<FR64>) -> 0(Class<GR64>)) 
			VMOV64toSDrr(1(Class<GR64>) -> 0(Class<FR64>)) 
		Combined result: 9.06 cycles

-----CVTSD2SI64rr_Int-----
	CVTSD2SI64rr_Int(1(Class<VR128>) -> 0(Class<GR64>))  [4.04;8.07]
		Dependencies:
			MOVPQIto64rr(1(Class<VR128>) -> 0(Class<GR64>)) 
			VMOV64toPQIrr(1(Class<GR64>) -> 0(Class<VR128>)) 
		Combined result: 9.07 cycles

-----CVTSD2SIrr-----
	CVTSD2SIrr(1(Class<FR64>) -> 0(Class<GR32>))  [1;11.1]
		Dependencies:
			CVTSD2SIrr(1(Class<FR64>) -> 0(Class<GR32>)) 
			CVTSI2SDrr(1(Class<GR32>) -> 0(Class<FR64>)) 
		Combined result: 12.1 cycles

-----CVTSD2SIrr_Int-----
	CVTSD2SIrr_Int(1(Class<VR128>) -> 0(Class<GR32>))  [4.01;8.05]
		Dependencies:
			MOVMSKPSrr(1(Class<VR128>) -> 0(Class<GR32>)) 
			VMOVDI2PDIrr(1(Class<GR32>) -> 0(Class<VR128>)) 
		Combined result: 9.05 cycles

-----CVTSD2SSrr-----
	0x138383b70728
		ERROR_GENERIC, this instruction cannot be measured on this platform

-----CVTSD2SSrr_Int-----
	CVTSD2SSrr_Int(1(Class<VR128>) -> 0(Class<VR128>))  [3.03;3.03]
		 Successful, latency: 3.03
	CVTSD2SSrr_Int(2(Class<VR128>) -> 0(Class<VR128>))  [3.02;3.02]
		 Successful, latency: 3.02

-----CVTSI2SDrr-----
	CVTSI2SDrr(1(Class<GR32>) -> 0(Class<FR64>))  [1;11.1]
		Dependencies:
			CVTSD2SIrr(1(Class<FR64>) -> 0(Class<GR32>)) 
			CVTSI2SDrr(1(Class<GR32>) -> 0(Class<FR64>)) 
		Combined result: 12.1 cycles

-----CVTSI2SDrr_Int-----
	CVTSI2SDrr_Int(1(Class<VR128>) -> 0(Class<VR128>))  [3.03;3.03]
		 Successful, latency: 3.03
	CVTSI2SDrr_Int(2(Class<GR32>) -> 0(Class<VR128>))  [4.01;8.05]
		Dependencies:
			MOVMSKPSrr(1(Class<VR128>) -> 0(Class<GR32>)) 
			VMOVDI2PDIrr(1(Class<GR32>) -> 0(Class<VR128>)) 
		Combined result: 9.07 cycles

-----CVTSI2SSrr-----
	CVTSI2SSrr(1(Class<GR32>) -> 0(Class<FR32>))  [3.99;8.04]
		Dependencies:
			VMOVSS2DIrr(1(Class<FR32>) -> 0(Class<GR32>)) 
			VMOVDI2SSrr(1(Class<GR32>) -> 0(Class<FR32>)) 
		Combined result: 9.09 cycles

-----CVTSI2SSrr_Int-----
	CVTSI2SSrr_Int(1(Class<VR128>) -> 0(Class<VR128>))  [3.02;3.02]
		 Successful, latency: 3.02
	CVTSI2SSrr_Int(2(Class<GR32>) -> 0(Class<VR128>))  [4.02;8.06]
		Dependencies:
			MOVMSKPSrr(1(Class<VR128>) -> 0(Class<GR32>)) 
			VMOVDI2PDIrr(1(Class<GR32>) -> 0(Class<VR128>)) 
		Combined result: 9.08 cycles

-----CVTSI642SDrr-----
	CVTSI642SDrr(1(Class<GR64>) -> 0(Class<FR64>))  [4.01;8.05]
		Dependencies:
			VMOVSDto64rr(1(Class<FR64>) -> 0(Class<GR64>)) 
			VMOV64toSDrr(1(Class<GR64>) -> 0(Class<FR64>)) 
		Combined result: 9.05 cycles

-----CVTSI642SDrr_Int-----
	CVTSI642SDrr_Int(1(Class<VR128>) -> 0(Class<VR128>))  [3.06;3.06]
		 Successful, latency: 3.06
	CVTSI642SDrr_Int(2(Class<GR64>) -> 0(Class<VR128>))  [4;8.04]
		Dependencies:
			MOVPQIto64rr(1(Class<VR128>) -> 0(Class<GR64>)) 
			VMOV64toPQIrr(1(Class<GR64>) -> 0(Class<VR128>)) 
		Combined result: 9.07 cycles

-----CVTSI642SSrr-----
	CVTSI642SSrr(1(Class<GR64>) -> 0(Class<FR32>))  [1.03;11.1]
		Dependencies:
			VCVTSI642SSrr(2(Class<GR64>) -> 0(Class<FR32>)) 
			CVTSS2SI64rr(1(Class<FR32>) -> 0(Class<GR64>)) 
		Combined result: 12.1 cycles

-----CVTSI642SSrr_Int-----
	CVTSI642SSrr_Int(1(Class<VR128>) -> 0(Class<VR128>))  [3.03;3.03]
		 Successful, latency: 3.03
	CVTSI642SSrr_Int(2(Class<GR64>) -> 0(Class<VR128>))  [4;8.04]
		Dependencies:
			MOVPQIto64rr(1(Class<VR128>) -> 0(Class<GR64>)) 
			VMOV64toPQIrr(1(Class<GR64>) -> 0(Class<VR128>)) 
		Combined result: 9.07 cycles

-----CVTSS2SDrr-----
	CVTSS2SDrr(1(Class<FR32>) -> 0(Class<FR64>))  [1;5.05]
		Dependencies:
			VCVTSD2SSrr(2(Class<FR64>) -> 0(Class<FR32>)) 
			CVTSS2SDrr(1(Class<FR32>) -> 0(Class<FR64>)) 
		Combined result: 6.04 cycles

-----CVTSS2SDrr_Int-----
	CVTSS2SDrr_Int(1(Class<VR128>) -> 0(Class<VR128>))  [3.03;3.03]
		 Successful, latency: 3.03
	CVTSS2SDrr_Int(2(Class<VR128>) -> 0(Class<VR128>))  [3.04;3.04]
		 Successful, latency: 3.04

-----CVTSS2SI64rr-----
	CVTSS2SI64rr(1(Class<FR32>) -> 0(Class<GR64>))  [1.01;11.1]
		Dependencies:
			VCVTSI642SSrr(2(Class<GR64>) -> 0(Class<FR32>)) 
			CVTSS2SI64rr(1(Class<FR32>) -> 0(Class<GR64>)) 
		Combined result: 12.1 cycles

-----CVTSS2SI64rr_Int-----
	CVTSS2SI64rr_Int(1(Class<VR128>) -> 0(Class<GR64>))  [4.02;8.05]
		Dependencies:
			MOVPQIto64rr(1(Class<VR128>) -> 0(Class<GR64>)) 
			VMOV64toPQIrr(1(Class<GR64>) -> 0(Class<VR128>)) 
		Combined result: 9.05 cycles

-----CVTSS2SIrr-----
	CVTSS2SIrr(1(Class<FR32>) -> 0(Class<GR32>))  [4.01;8.07]
		Dependencies:
			VMOVSS2DIrr(1(Class<FR32>) -> 0(Class<GR32>)) 
			VMOVDI2SSrr(1(Class<GR32>) -> 0(Class<FR32>)) 
		Combined result: 9.07 cycles

-----CVTSS2SIrr_Int-----
	CVTSS2SIrr_Int(1(Class<VR128>) -> 0(Class<GR32>))  [4.03;8.06]
		Dependencies:
			MOVMSKPSrr(1(Class<VR128>) -> 0(Class<GR32>)) 
			VMOVDI2PDIrr(1(Class<GR32>) -> 0(Class<VR128>)) 
		Combined result: 9.06 cycles

-----CVTTPD2DQrr-----
	CVTTPD2DQrr(1(Class<VR128>) -> 0(Class<VR128>))  [3.03;3.03]
		 Successful, latency: 3.03

-----CVTTPS2DQrr-----
	CVTTPS2DQrr(1(Class<VR128>) -> 0(Class<VR128>))  [3.02;3.02]
		 Successful, latency: 3.02

-----CVTTSD2SI64rr-----
	CVTTSD2SI64rr(1(Class<FR64>) -> 0(Class<GR64>))  [4.03;8.07]
		Dependencies:
			VMOVSDto64rr(1(Class<FR64>) -> 0(Class<GR64>)) 
			VMOV64toSDrr(1(Class<GR64>) -> 0(Class<FR64>)) 
		Combined result: 9.07 cycles

-----CVTTSD2SI64rr_Int-----
	CVTTSD2SI64rr_Int(1(Class<VR128>) -> 0(Class<GR64>))  [4.03;8.07]
		Dependencies:
			MOVPQIto64rr(1(Class<VR128>) -> 0(Class<GR64>)) 
			VMOV64toPQIrr(1(Class<GR64>) -> 0(Class<VR128>)) 
		Combined result: 9.07 cycles

-----CVTTSD2SIrr-----
	CVTTSD2SIrr(1(Class<FR64>) -> 0(Class<GR32>))  [1.03;11.1]
		Dependencies:
			CVTSD2SIrr(1(Class<FR64>) -> 0(Class<GR32>)) 
			CVTSI2SDrr(1(Class<GR32>) -> 0(Class<FR64>)) 
		Combined result: 12.1 cycles

-----CVTTSD2SIrr_Int-----
	CVTTSD2SIrr_Int(1(Class<VR128>) -> 0(Class<GR32>))  [4.01;8.05]
		Dependencies:
			MOVMSKPSrr(1(Class<VR128>) -> 0(Class<GR32>)) 
			VMOVDI2PDIrr(1(Class<GR32>) -> 0(Class<VR128>)) 
		Combined result: 9.05 cycles

-----CVTTSS2SI64rr-----
	CVTTSS2SI64rr(1(Class<FR32>) -> 0(Class<GR64>))  [1.02;11.1]
		Dependencies:
			VCVTSI642SSrr(2(Class<GR64>) -> 0(Class<FR32>)) 
			CVTSS2SI64rr(1(Class<FR32>) -> 0(Class<GR64>)) 
		Combined result: 12.1 cycles

-----CVTTSS2SI64rr_Int-----
	CVTTSS2SI64rr_Int(1(Class<VR128>) -> 0(Class<GR64>))  [4.03;8.07]
		Dependencies:
			MOVPQIto64rr(1(Class<VR128>) -> 0(Class<GR64>)) 
			VMOV64toPQIrr(1(Class<GR64>) -> 0(Class<VR128>)) 
		Combined result: 9.07 cycles

-----CVTTSS2SIrr-----
	CVTTSS2SIrr(1(Class<FR32>) -> 0(Class<GR32>))  [4.02;8.07]
		Dependencies:
			VMOVSS2DIrr(1(Class<FR32>) -> 0(Class<GR32>)) 
			VMOVDI2SSrr(1(Class<GR32>) -> 0(Class<FR32>)) 
		Combined result: 9.07 cycles

-----CVTTSS2SIrr_Int-----
	CVTTSS2SIrr_Int(1(Class<VR128>) -> 0(Class<GR32>))  [4.04;8.07]
		Dependencies:
			MOVMSKPSrr(1(Class<VR128>) -> 0(Class<GR32>)) 
			VMOVDI2PDIrr(1(Class<GR32>) -> 0(Class<VR128>)) 
		Combined result: 9.07 cycles

-----CWD-----
	CWD(impl(Reg<AX>) -> impl(Reg<AX>))  [1.01;1.01]
		 Successful, latency: 1.01

-----DAA-----
	DAA(impl(Reg<AL>) -> impl(Reg<AL>))  [ERROR_ASSEMBLY]
		ERROR_ASSEMBLY, this instruction cannot be measured on this platform
	DAA(impl(Reg<EFLAGS>) -> impl(Reg<EFLAGS>))  [ERROR_ASSEMBLY]
		ERROR_ASSEMBLY, this instruction cannot be measured on this platform

-----DAS-----
	DAS(impl(Reg<AL>) -> impl(Reg<AL>))  [ERROR_ASSEMBLY]
		ERROR_ASSEMBLY, this instruction cannot be measured on this platform
	DAS(impl(Reg<EFLAGS>) -> impl(Reg<EFLAGS>))  [ERROR_ASSEMBLY]
		ERROR_ASSEMBLY, this instruction cannot be measured on this platform

-----DEC16r-----
	DEC16r(1(Class<GR16>) -> 0(Class<GR16>))  [1.01;1.01]
		 Successful, latency: 1.01
	DEC16r(1(Class<GR16>) -> impl(Reg<EFLAGS>))  [ERROR_UNUSUAL_LATENCY]
		Dependencies:
			ADC16rr(impl(Reg<EFLAGS>) -> 0(Class<GR16>)) 
			ADC16ri(1(Class<GR16>) -> impl(Reg<EFLAGS>)) 
		Combined result: 1.01 cycles

-----DEC16r_EVEX-----
	DEC16r_EVEX(1(Class<GR16>) -> 0(Class<GR16>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----DEC16r_ND-----
	DEC16r_ND(1(Class<GR16>) -> 0(Class<GR16>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----DEC16r_NF-----
	DEC16r_NF(1(Class<GR16>) -> 0(Class<GR16>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----DEC16r_NF_ND-----
	DEC16r_NF_ND(1(Class<GR16>) -> 0(Class<GR16>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----DEC16r_alt-----
	DEC16r_alt(1(Class<GR16>) -> 0(Class<GR16>))  [1.01;1.01]
		 Successful, latency: 1.01
	DEC16r_alt(1(Class<GR16>) -> impl(Reg<EFLAGS>))  [ERROR_UNUSUAL_LATENCY]
		Dependencies:
			ADC16rr(impl(Reg<EFLAGS>) -> 0(Class<GR16>)) 
			ADC16ri(1(Class<GR16>) -> impl(Reg<EFLAGS>)) 
		Combined result: 1.02 cycles

-----DEC32r-----
	DEC32r(1(Class<GR32>) -> 0(Class<GR32>))  [1.01;1.01]
		 Successful, latency: 1.01
	DEC32r(1(Class<GR32>) -> impl(Reg<EFLAGS>))  [ERROR_UNUSUAL_LATENCY]
		Dependencies:
			ADC32ri8(impl(Reg<EFLAGS>) -> 0(Class<GR32>)) 
			ADC32ri(1(Class<GR32>) -> impl(Reg<EFLAGS>)) 
		Combined result: 1.01 cycles

-----DEC32r_EVEX-----
	DEC32r_EVEX(1(Class<GR32>) -> 0(Class<GR32>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----DEC32r_ND-----
	DEC32r_ND(1(Class<GR32>) -> 0(Class<GR32>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----DEC32r_NF-----
	DEC32r_NF(1(Class<GR32>) -> 0(Class<GR32>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----DEC32r_NF_ND-----
	DEC32r_NF_ND(1(Class<GR32>) -> 0(Class<GR32>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----DEC32r_alt-----
	DEC32r_alt(1(Class<GR32>) -> 0(Class<GR32>))  [1.01;1.01]
		 Successful, latency: 1.01
	DEC32r_alt(1(Class<GR32>) -> impl(Reg<EFLAGS>))  [ERROR_UNUSUAL_LATENCY]
		Dependencies:
			ADC32ri8(impl(Reg<EFLAGS>) -> 0(Class<GR32>)) 
			ADC32ri(1(Class<GR32>) -> impl(Reg<EFLAGS>)) 
		Combined result: 1 cycles

-----DEC64r-----
	DEC64r(1(Class<GR64>) -> 0(Class<GR64>))  [1;1]
		 Successful, latency: 1
	DEC64r(1(Class<GR64>) -> impl(Reg<EFLAGS>))  [ERROR_UNUSUAL_LATENCY]
		Dependencies:
			ADC64rr(impl(Reg<EFLAGS>) -> 0(Class<GR64>)) 
			ADC64ri32(1(Class<GR64>) -> impl(Reg<EFLAGS>)) 
		Combined result: 1 cycles

-----DEC64r_EVEX-----
	DEC64r_EVEX(1(Class<GR64>) -> 0(Class<GR64>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----DEC64r_ND-----
	DEC64r_ND(1(Class<GR64>) -> 0(Class<GR64>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----DEC64r_NF-----
	DEC64r_NF(1(Class<GR64>) -> 0(Class<GR64>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----DEC64r_NF_ND-----
	DEC64r_NF_ND(1(Class<GR64>) -> 0(Class<GR64>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----DEC8r-----
	DEC8r(1(Class<GR8>) -> 0(Class<GR8>))  [1.01;1.01]
		 Successful, latency: 1.01
	DEC8r(1(Class<GR8>) -> impl(Reg<EFLAGS>))  [ERROR_UNUSUAL_LATENCY]
		Dependencies:
			ADC8ri8(impl(Reg<EFLAGS>) -> 0(Class<GR8>)) 
			ADC8ri(1(Class<GR8>) -> impl(Reg<EFLAGS>)) 
		Combined result: 1.01 cycles

-----DEC8r_EVEX-----
	DEC8r_EVEX(1(Class<GR8>) -> 0(Class<GR8>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----DEC8r_ND-----
	DEC8r_ND(1(Class<GR8>) -> 0(Class<GR8>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----DEC8r_NF-----
	DEC8r_NF(1(Class<GR8>) -> 0(Class<GR8>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----DEC8r_NF_ND-----
	DEC8r_NF_ND(1(Class<GR8>) -> 0(Class<GR8>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----DIV16r-----
	DIV16r(impl(Reg<AX>) -> impl(Reg<AX>))  [ERROR_SIGNAL]
		ERROR_SIGNAL, this instruction cannot be measured on this platform
	DIV16r(impl(Reg<DX>) -> impl(Reg<DX>))  [ERROR_SIGNAL]
		ERROR_SIGNAL, this instruction cannot be measured on this platform

-----DIV16r_EVEX-----
	DIV16r_EVEX(impl(Reg<AX>) -> impl(Reg<AX>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	DIV16r_EVEX(impl(Reg<DX>) -> impl(Reg<DX>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----DIV16r_NF-----
	DIV16r_NF(impl(Reg<AX>) -> impl(Reg<AX>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	DIV16r_NF(impl(Reg<DX>) -> impl(Reg<DX>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----DIV32r-----
	DIV32r(impl(Reg<EAX>) -> impl(Reg<EAX>))  [ERROR_SIGNAL]
		ERROR_SIGNAL, this instruction cannot be measured on this platform
	DIV32r(impl(Reg<EDX>) -> impl(Reg<EDX>))  [ERROR_SIGNAL]
		ERROR_SIGNAL, this instruction cannot be measured on this platform

-----DIV32r_EVEX-----
	DIV32r_EVEX(impl(Reg<EAX>) -> impl(Reg<EAX>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	DIV32r_EVEX(impl(Reg<EDX>) -> impl(Reg<EDX>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----DIV32r_NF-----
	DIV32r_NF(impl(Reg<EAX>) -> impl(Reg<EAX>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	DIV32r_NF(impl(Reg<EDX>) -> impl(Reg<EDX>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----DIV64r-----
	DIV64r(impl(Reg<RAX>) -> impl(Reg<RAX>))  [ERROR_SIGNAL]
		ERROR_SIGNAL, this instruction cannot be measured on this platform
	DIV64r(impl(Reg<RDX>) -> impl(Reg<RDX>))  [ERROR_SIGNAL]
		ERROR_SIGNAL, this instruction cannot be measured on this platform

-----DIV64r_EVEX-----
	DIV64r_EVEX(impl(Reg<RAX>) -> impl(Reg<RAX>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	DIV64r_EVEX(impl(Reg<RDX>) -> impl(Reg<RDX>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----DIV64r_NF-----
	DIV64r_NF(impl(Reg<RAX>) -> impl(Reg<RAX>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	DIV64r_NF(impl(Reg<RDX>) -> impl(Reg<RDX>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----DIVPDrr-----
	DIVPDrr(1(Class<VR128>) -> 0(Class<VR128>))  [17.8;17.8]
		 Successful, latency: 17.8
	DIVPDrr(2(Class<VR128>) -> 0(Class<VR128>))  [13.1;13.1]
		 Successful, latency: 13.1

-----DIVPSrr-----
	DIVPSrr(1(Class<VR128>) -> 0(Class<VR128>))  [15.7;15.7]
		 Successful, latency: 15.7
	DIVPSrr(2(Class<VR128>) -> 0(Class<VR128>))  [11.1;11.1]
		 Successful, latency: 11.1

-----DIVSDrr-----
	DIVSDrr(1(Class<FR64>) -> 0(Class<FR64>))  [17.8;17.8]
		 Successful, latency: 17.8
	DIVSDrr(2(Class<FR64>) -> 0(Class<FR64>))  [13.1;13.1]
		 Successful, latency: 13.1

-----DIVSDrr_Int-----
	DIVSDrr_Int(1(Class<VR128>) -> 0(Class<VR128>))  [17.9;17.9]
		 Successful, latency: 17.9
	DIVSDrr_Int(2(Class<VR128>) -> 0(Class<VR128>))  [13.1;13.1]
		 Successful, latency: 13.1

-----DIVSSrr-----
	DIVSSrr(1(Class<FR32>) -> 0(Class<FR32>))  [15.6;15.6]
		 Successful, latency: 15.6
	DIVSSrr(2(Class<FR32>) -> 0(Class<FR32>))  [11.1;11.1]
		 Successful, latency: 11.1

-----DIVSSrr_Int-----
	DIVSSrr_Int(1(Class<VR128>) -> 0(Class<VR128>))  [15.7;15.7]
		 Successful, latency: 15.7
	DIVSSrr_Int(2(Class<VR128>) -> 0(Class<VR128>))  [11.1;11.1]
		 Successful, latency: 11.1

-----DPPDrri-----
	DPPDrri(1(Class<VR128>) -> 0(Class<VR128>))  [7.06;7.06]
		 Successful, latency: 7.06
	DPPDrri(2(Class<VR128>) -> 0(Class<VR128>))  [7.07;7.07]
		 Successful, latency: 7.07

-----DPPSrri-----
	DPPSrri(1(Class<VR128>) -> 0(Class<VR128>))  [11.1;11.1]
		 Successful, latency: 11.1
	DPPSrri(2(Class<VR128>) -> 0(Class<VR128>))  [11.1;11.1]
		 Successful, latency: 11.1

-----DYN_ALLOCA_32-----
	DYN_ALLOCA_32(impl(Reg<ESP>) -> impl(Reg<ESP>))  [-0.00125;-0.00125]
		WARNING generated instructions have multiple dependencies. If they have different latencies the lower one will be shadowed
	DYN_ALLOCA_32(0(Class<GR32>) -> impl(Reg<EAX>))  [ERROR_UNUSUAL_LATENCY]
		Dependencies:
			XCHG32ar(impl(Reg<EAX>) -> 0(Class<GR32>)) 
			MUL32r(0(Class<GR32>) -> impl(Reg<EAX>)) 
		Combined result: 0.334 cycles
	DYN_ALLOCA_32(0(Class<GR32>) -> impl(Reg<EFLAGS>))  [ERROR_UNUSUAL_LATENCY]
		Dependencies:
			ADC32ri8(impl(Reg<EFLAGS>) -> 0(Class<GR32>)) 
			ADC32ri(1(Class<GR32>) -> impl(Reg<EFLAGS>)) 
		Combined result: 1 cycles
	DYN_ALLOCA_32(0(Class<GR32>) -> impl(Reg<ESP>))  [1;-1]
		Dependencies:
			PROBED_ALLOCA_32(impl(Reg<ESP>) -> 0(Class<GR32>)) 
			DYN_ALLOCA_32(0(Class<GR32>) -> impl(Reg<ESP>)) 
		Combined result: 0 cycles

-----DYN_ALLOCA_64-----
	DYN_ALLOCA_64(impl(Reg<RSP>) -> impl(Reg<RSP>))  [0.00125;0.00125]
		WARNING generated instructions have multiple dependencies. If they have different latencies the lower one will be shadowed
	DYN_ALLOCA_64(0(Class<GR64>) -> impl(Reg<EFLAGS>))  [ERROR_UNUSUAL_LATENCY]
		Dependencies:
			ADC64rr(impl(Reg<EFLAGS>) -> 0(Class<GR64>)) 
			ADC64ri32(1(Class<GR64>) -> impl(Reg<EFLAGS>)) 
		Combined result: 1 cycles
	DYN_ALLOCA_64(0(Class<GR64>) -> impl(Reg<RAX>))  [ERROR_UNUSUAL_LATENCY]
		Dependencies:
			XCHG64ar(impl(Reg<RAX>) -> 0(Class<GR64>)) 
			CMPXCHG64rr(1(Class<GR64>) -> impl(Reg<RAX>)) 
		Combined result: 0.0825 cycles
	DYN_ALLOCA_64(0(Class<GR64>) -> impl(Reg<RSP>))  [0.999;-1]
		Dependencies:
			PROBED_ALLOCA_64(impl(Reg<RSP>) -> 0(Class<GR64>)) 
			DYN_ALLOCA_64(0(Class<GR64>) -> impl(Reg<RSP>)) 
		Combined result: 0 cycles

-----ENCODEKEY128-----
	ENCODEKEY128(1(Class<GR32>) -> 0(Class<GR32>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	ENCODEKEY128(impl(Reg<XMM0>) -> impl(Reg<XMM0>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----ENCODEKEY256-----
	ENCODEKEY256(1(Class<GR32>) -> 0(Class<GR32>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	ENCODEKEY256(impl(Reg<XMM0>) -> impl(Reg<XMM0>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	ENCODEKEY256(impl(Reg<XMM1>) -> impl(Reg<XMM1>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----ENQCMD16-----
	ENQCMD16(0(Class<GR16>) -> impl(Reg<EFLAGS>))  [ERROR_UNUSUAL_LATENCY]

-----ENQCMD32-----
	ENQCMD32(0(Class<GR32>) -> impl(Reg<EFLAGS>))  [ERROR_UNUSUAL_LATENCY]

-----ENQCMD32_EVEX-----
	ENQCMD32_EVEX(0(Class<GR32>) -> impl(Reg<EFLAGS>))  [ERROR_UNUSUAL_LATENCY]

-----ENQCMD64-----
	ENQCMD64(0(Class<GR64>) -> impl(Reg<EFLAGS>))  [ERROR_UNUSUAL_LATENCY]

-----ENQCMD64_EVEX-----
	ENQCMD64_EVEX(0(Class<GR64>) -> impl(Reg<EFLAGS>))  [ERROR_UNUSUAL_LATENCY]

-----ENQCMDS16-----
	ENQCMDS16(0(Class<GR16>) -> impl(Reg<EFLAGS>))  [ERROR_UNUSUAL_LATENCY]

-----ENQCMDS32-----
	ENQCMDS32(0(Class<GR32>) -> impl(Reg<EFLAGS>))  [ERROR_UNUSUAL_LATENCY]

-----ENQCMDS32_EVEX-----
	ENQCMDS32_EVEX(0(Class<GR32>) -> impl(Reg<EFLAGS>))  [ERROR_UNUSUAL_LATENCY]

-----ENQCMDS64-----
	ENQCMDS64(0(Class<GR64>) -> impl(Reg<EFLAGS>))  [ERROR_UNUSUAL_LATENCY]

-----ENQCMDS64_EVEX-----
	ENQCMDS64_EVEX(0(Class<GR64>) -> impl(Reg<EFLAGS>))  [ERROR_UNUSUAL_LATENCY]

-----EXTRACTPSrri-----
	EXTRACTPSrri(1(Class<VR128>) -> 0(Class<GR32>))  [2.02;6.06]
		Dependencies:
			MOVMSKPSrr(1(Class<VR128>) -> 0(Class<GR32>)) 
			VMOVDI2PDIrr(1(Class<GR32>) -> 0(Class<VR128>)) 
		Combined result: 7.06 cycles

-----EXTRQ-----
	EXTRQ(1(Class<VR128>) -> 0(Class<VR128>))  [3.06;3.06]
		 Successful, latency: 3.06
	EXTRQ(2(Class<VR128>) -> 0(Class<VR128>))  [3.01;3.01]
		 Successful, latency: 3.01

-----EXTRQI-----
	EXTRQI(1(Class<VR128>) -> 0(Class<VR128>))  [3.05;3.05]
		 Successful, latency: 3.05

-----GETSEC-----
	GETSEC(impl(Reg<RAX>) -> impl(Reg<RAX>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	GETSEC(impl(Reg<RBX>) -> impl(Reg<RBX>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	GETSEC(impl(Reg<RCX>) -> impl(Reg<RCX>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----GF2P8AFFINEINVQBrri-----
	GF2P8AFFINEINVQBrri(1(Class<VR128>) -> 0(Class<VR128>))  [3.04;3.04]
		 Successful, latency: 3.04
	GF2P8AFFINEINVQBrri(2(Class<VR128>) -> 0(Class<VR128>))  [3.02;3.02]
		 Successful, latency: 3.02

-----GF2P8AFFINEQBrri-----
	GF2P8AFFINEQBrri(1(Class<VR128>) -> 0(Class<VR128>))  [3.04;3.04]
		 Successful, latency: 3.04
	GF2P8AFFINEQBrri(2(Class<VR128>) -> 0(Class<VR128>))  [3.02;3.02]
		 Successful, latency: 3.02

-----GF2P8MULBrr-----
	GF2P8MULBrr(1(Class<VR128>) -> 0(Class<VR128>))  [3.08;3.08]
		 Successful, latency: 3.08
	GF2P8MULBrr(2(Class<VR128>) -> 0(Class<VR128>))  [3.04;3.04]
		 Successful, latency: 3.04

-----HADDPDrr-----
	HADDPDrr(1(Class<VR128>) -> 0(Class<VR128>))  [4.48;4.48]
		 Successful, latency: 4.48
	HADDPDrr(2(Class<VR128>) -> 0(Class<VR128>))  [4.48;4.48]
		 Successful, latency: 4.48

-----HADDPSrr-----
	HADDPSrr(1(Class<VR128>) -> 0(Class<VR128>))  [4.62;4.62]
		 Successful, latency: 4.62
	HADDPSrr(2(Class<VR128>) -> 0(Class<VR128>))  [4.45;4.45]
		 Successful, latency: 4.45

-----HSUBPDrr-----
	HSUBPDrr(1(Class<VR128>) -> 0(Class<VR128>))  [4.52;4.52]
		 Successful, latency: 4.52
	HSUBPDrr(2(Class<VR128>) -> 0(Class<VR128>))  [4.56;4.56]
		 Successful, latency: 4.56

-----HSUBPSrr-----
	HSUBPSrr(1(Class<VR128>) -> 0(Class<VR128>))  [4.5;4.5]
		 Successful, latency: 4.5
	HSUBPSrr(2(Class<VR128>) -> 0(Class<VR128>))  [4.47;4.47]
		 Successful, latency: 4.47

-----IDIV16r-----
	IDIV16r(impl(Reg<AX>) -> impl(Reg<AX>))  [ERROR_SIGNAL]
		ERROR_SIGNAL, this instruction cannot be measured on this platform
	IDIV16r(impl(Reg<DX>) -> impl(Reg<DX>))  [ERROR_SIGNAL]
		ERROR_SIGNAL, this instruction cannot be measured on this platform

-----IDIV16r_EVEX-----
	IDIV16r_EVEX(impl(Reg<AX>) -> impl(Reg<AX>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	IDIV16r_EVEX(impl(Reg<DX>) -> impl(Reg<DX>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----IDIV16r_NF-----
	IDIV16r_NF(impl(Reg<AX>) -> impl(Reg<AX>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	IDIV16r_NF(impl(Reg<DX>) -> impl(Reg<DX>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----IDIV32r-----
	IDIV32r(impl(Reg<EAX>) -> impl(Reg<EAX>))  [ERROR_SIGNAL]
		ERROR_SIGNAL, this instruction cannot be measured on this platform
	IDIV32r(impl(Reg<EDX>) -> impl(Reg<EDX>))  [ERROR_SIGNAL]
		ERROR_SIGNAL, this instruction cannot be measured on this platform

-----IDIV32r_EVEX-----
	IDIV32r_EVEX(impl(Reg<EAX>) -> impl(Reg<EAX>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	IDIV32r_EVEX(impl(Reg<EDX>) -> impl(Reg<EDX>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----IDIV32r_NF-----
	IDIV32r_NF(impl(Reg<EAX>) -> impl(Reg<EAX>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	IDIV32r_NF(impl(Reg<EDX>) -> impl(Reg<EDX>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----IDIV64r-----
	IDIV64r(impl(Reg<RAX>) -> impl(Reg<RAX>))  [ERROR_SIGNAL]
		ERROR_SIGNAL, this instruction cannot be measured on this platform
	IDIV64r(impl(Reg<RDX>) -> impl(Reg<RDX>))  [ERROR_SIGNAL]
		ERROR_SIGNAL, this instruction cannot be measured on this platform

-----IDIV64r_EVEX-----
	IDIV64r_EVEX(impl(Reg<RAX>) -> impl(Reg<RAX>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	IDIV64r_EVEX(impl(Reg<RDX>) -> impl(Reg<RDX>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----IDIV64r_NF-----
	IDIV64r_NF(impl(Reg<RAX>) -> impl(Reg<RAX>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	IDIV64r_NF(impl(Reg<RDX>) -> impl(Reg<RDX>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----IMUL16r-----
	IMUL16r(impl(Reg<AX>) -> impl(Reg<AX>))  [3.03;3.03]
		 Successful, latency: 3.03
	IMUL16r(0(Class<GR16>) -> impl(Reg<AX>))  [0.995;2.03]
		Dependencies:
			XCHG16ar(impl(Reg<AX>) -> 0(Class<GR16>)) 
			MUL16r(0(Class<GR16>) -> impl(Reg<AX>)) 
		Combined result: 3.04 cycles
	IMUL16r(0(Class<GR16>) -> impl(Reg<EFLAGS>))  [3.01;3.03]
		Dependencies:
			ADC16rr(impl(Reg<EFLAGS>) -> 0(Class<GR16>)) 
			ADC16ri(1(Class<GR16>) -> impl(Reg<EFLAGS>)) 
		Combined result: 4.03 cycles
	IMUL16r(impl(Reg<AX>) -> impl(Reg<EFLAGS>))  [3.02;3.04]
		Dependencies:
			ADC16i16(impl(Reg<EFLAGS>) -> impl(Reg<AX>)) 
			ADC16i16(impl(Reg<AX>) -> impl(Reg<EFLAGS>)) 
		Combined result: 4.05 cycles

-----IMUL16r_EVEX-----
	IMUL16r_EVEX(impl(Reg<AX>) -> impl(Reg<AX>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----IMUL16r_NF-----
	IMUL16r_NF(impl(Reg<AX>) -> impl(Reg<AX>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----IMUL16rr-----
	IMUL16rr(1(Class<GR16>) -> 0(Class<GR16>))  [3.02;3.02]
		 Successful, latency: 3.02
	IMUL16rr(2(Class<GR16>) -> 0(Class<GR16>))  [3.03;3.03]
		 Successful, latency: 3.03
	IMUL16rr(1(Class<GR16>) -> impl(Reg<EFLAGS>))  [2.01;2.03]
		Dependencies:
			ADC16rr(impl(Reg<EFLAGS>) -> 0(Class<GR16>)) 
			ADC16ri(1(Class<GR16>) -> impl(Reg<EFLAGS>)) 
		Combined result: 3.03 cycles
	IMUL16rr(2(Class<GR16>) -> impl(Reg<EFLAGS>))  [3.02;3.04]
		Dependencies:
			ADC16rr(impl(Reg<EFLAGS>) -> 0(Class<GR16>)) 
			ADC16ri(1(Class<GR16>) -> impl(Reg<EFLAGS>)) 
		Combined result: 4.03 cycles

-----IMUL16rr_EVEX-----
	IMUL16rr_EVEX(1(Class<GR16>) -> 0(Class<GR16>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	IMUL16rr_EVEX(2(Class<GR16>) -> 0(Class<GR16>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----IMUL16rr_ND-----
	IMUL16rr_ND(1(Class<GR16>) -> 0(Class<GR16>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	IMUL16rr_ND(2(Class<GR16>) -> 0(Class<GR16>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----IMUL16rr_NF-----
	IMUL16rr_NF(1(Class<GR16>) -> 0(Class<GR16>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	IMUL16rr_NF(2(Class<GR16>) -> 0(Class<GR16>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----IMUL16rr_NF_ND-----
	IMUL16rr_NF_ND(1(Class<GR16>) -> 0(Class<GR16>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	IMUL16rr_NF_ND(2(Class<GR16>) -> 0(Class<GR16>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----IMUL16rri-----
	IMUL16rri(1(Class<GR16>) -> 0(Class<GR16>))  [4.04;4.04]
		 Successful, latency: 4.04
	IMUL16rri(1(Class<GR16>) -> impl(Reg<EFLAGS>))  [4.02;4.04]
		Dependencies:
			ADC16rr(impl(Reg<EFLAGS>) -> 0(Class<GR16>)) 
			ADC16ri(1(Class<GR16>) -> impl(Reg<EFLAGS>)) 
		Combined result: 5.04 cycles

-----IMUL16rri8-----
	IMUL16rri8(1(Class<GR16>) -> 0(Class<GR16>))  [4.05;4.05]
		 Successful, latency: 4.05
	IMUL16rri8(1(Class<GR16>) -> impl(Reg<EFLAGS>))  [4.04;4.06]
		Dependencies:
			ADC16rr(impl(Reg<EFLAGS>) -> 0(Class<GR16>)) 
			ADC16ri(1(Class<GR16>) -> impl(Reg<EFLAGS>)) 
		Combined result: 5.05 cycles

-----IMUL16rri8_EVEX-----
	IMUL16rri8_EVEX(1(Class<GR16>) -> 0(Class<GR16>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----IMUL16rri8_NF-----
	IMUL16rri8_NF(1(Class<GR16>) -> 0(Class<GR16>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----IMUL16rri_EVEX-----
	IMUL16rri_EVEX(1(Class<GR16>) -> 0(Class<GR16>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----IMUL16rri_NF-----
	IMUL16rri_NF(1(Class<GR16>) -> 0(Class<GR16>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----IMUL32r-----
	IMUL32r(impl(Reg<EAX>) -> impl(Reg<EAX>))  [3.04;3.04]
		 Successful, latency: 3.04
	IMUL32r(0(Class<GR32>) -> impl(Reg<EAX>))  [0.963;1.98]
		Dependencies:
			XCHG32ar(impl(Reg<EAX>) -> 0(Class<GR32>)) 
			MUL32r(0(Class<GR32>) -> impl(Reg<EAX>)) 
		Combined result: 3.02 cycles
	IMUL32r(0(Class<GR32>) -> impl(Reg<EDX>))  [1;6.05]
		Dependencies:
			MULX32rr(impl(Reg<EDX>) -> 1(Class<GR32>)) 
			MUL32r(0(Class<GR32>) -> impl(Reg<EDX>)) 
		Combined result: 7.04 cycles
	IMUL32r(0(Class<GR32>) -> impl(Reg<EFLAGS>))  [ERROR_UNUSUAL_LATENCY]
		Dependencies:
			ADC32ri8(impl(Reg<EFLAGS>) -> 0(Class<GR32>)) 
			ADC32ri(1(Class<GR32>) -> impl(Reg<EFLAGS>)) 
		Combined result: 4.37 cycles
	IMUL32r(impl(Reg<EAX>) -> impl(Reg<EFLAGS>))  [ERROR_UNUSUAL_LATENCY]
		Dependencies:
			ADC32i32(impl(Reg<EFLAGS>) -> impl(Reg<EAX>)) 
			ADC32i32(impl(Reg<EAX>) -> impl(Reg<EFLAGS>)) 
		Combined result: 4.37 cycles

-----IMUL32r_EVEX-----
	IMUL32r_EVEX(impl(Reg<EAX>) -> impl(Reg<EAX>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----IMUL32r_NF-----
	IMUL32r_NF(impl(Reg<EAX>) -> impl(Reg<EAX>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----IMUL32rr-----
	IMUL32rr(1(Class<GR32>) -> 0(Class<GR32>))  [3.05;3.05]
		 Successful, latency: 3.05
	IMUL32rr(2(Class<GR32>) -> 0(Class<GR32>))  [3.04;3.04]
		 Successful, latency: 3.04
	IMUL32rr(1(Class<GR32>) -> impl(Reg<EFLAGS>))  [2.03;2.04]
		Dependencies:
			ADC32ri8(impl(Reg<EFLAGS>) -> 0(Class<GR32>)) 
			ADC32ri(1(Class<GR32>) -> impl(Reg<EFLAGS>)) 
		Combined result: 3.05 cycles
	IMUL32rr(2(Class<GR32>) -> impl(Reg<EFLAGS>))  [3.01;3.02]
		Dependencies:
			ADC32ri8(impl(Reg<EFLAGS>) -> 0(Class<GR32>)) 
			ADC32ri(1(Class<GR32>) -> impl(Reg<EFLAGS>)) 
		Combined result: 4.03 cycles

-----IMUL32rr_EVEX-----
	IMUL32rr_EVEX(1(Class<GR32>) -> 0(Class<GR32>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	IMUL32rr_EVEX(2(Class<GR32>) -> 0(Class<GR32>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----IMUL32rr_ND-----
	IMUL32rr_ND(1(Class<GR32>) -> 0(Class<GR32>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	IMUL32rr_ND(2(Class<GR32>) -> 0(Class<GR32>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----IMUL32rr_NF-----
	IMUL32rr_NF(1(Class<GR32>) -> 0(Class<GR32>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	IMUL32rr_NF(2(Class<GR32>) -> 0(Class<GR32>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----IMUL32rr_NF_ND-----
	IMUL32rr_NF_ND(1(Class<GR32>) -> 0(Class<GR32>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	IMUL32rr_NF_ND(2(Class<GR32>) -> 0(Class<GR32>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----IMUL32rri-----
	IMUL32rri(1(Class<GR32>) -> 0(Class<GR32>))  [3.05;3.05]
		 Successful, latency: 3.05
	IMUL32rri(1(Class<GR32>) -> impl(Reg<EFLAGS>))  [3;3.02]
		Dependencies:
			ADC32ri8(impl(Reg<EFLAGS>) -> 0(Class<GR32>)) 
			ADC32ri(1(Class<GR32>) -> impl(Reg<EFLAGS>)) 
		Combined result: 4.03 cycles

-----IMUL32rri8-----
	IMUL32rri8(1(Class<GR32>) -> 0(Class<GR32>))  [3.02;3.02]
		 Successful, latency: 3.02
	IMUL32rri8(1(Class<GR32>) -> impl(Reg<EFLAGS>))  [3;3.02]
		Dependencies:
			ADC32ri8(impl(Reg<EFLAGS>) -> 0(Class<GR32>)) 
			ADC32ri(1(Class<GR32>) -> impl(Reg<EFLAGS>)) 
		Combined result: 4.03 cycles

-----IMUL32rri8_EVEX-----
	IMUL32rri8_EVEX(1(Class<GR32>) -> 0(Class<GR32>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----IMUL32rri8_NF-----
	IMUL32rri8_NF(1(Class<GR32>) -> 0(Class<GR32>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----IMUL32rri_EVEX-----
	IMUL32rri_EVEX(1(Class<GR32>) -> 0(Class<GR32>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----IMUL32rri_NF-----
	IMUL32rri_NF(1(Class<GR32>) -> 0(Class<GR32>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----IMUL64r-----
	IMUL64r(impl(Reg<RAX>) -> impl(Reg<RAX>))  [3.05;3.05]
		 Successful, latency: 3.05
	IMUL64r(0(Class<GR64>) -> impl(Reg<EFLAGS>))  [ERROR_UNUSUAL_LATENCY]
		Dependencies:
			ADC64rr(impl(Reg<EFLAGS>) -> 0(Class<GR64>)) 
			ADC64ri32(1(Class<GR64>) -> impl(Reg<EFLAGS>)) 
		Combined result: 4.36 cycles
	IMUL64r(0(Class<GR64>) -> impl(Reg<RAX>))  [0.995;2.02]
		Dependencies:
			XCHG64ar(impl(Reg<RAX>) -> 0(Class<GR64>)) 
			CMPXCHG64rr(1(Class<GR64>) -> impl(Reg<RAX>)) 
		Combined result: 3.03 cycles
	IMUL64r(0(Class<GR64>) -> impl(Reg<RDX>))  [0.994;6.04]
		Dependencies:
			MULX64rr(impl(Reg<RDX>) -> 1(Class<GR64>)) 
			MUL64r(0(Class<GR64>) -> impl(Reg<RDX>)) 
		Combined result: 7.04 cycles
	IMUL64r(impl(Reg<RAX>) -> impl(Reg<EFLAGS>))  [3.34;3.36]
		Dependencies:
			CMP64i32(impl(Reg<RAX>) -> impl(Reg<EFLAGS>)) 
			ADC64i32(impl(Reg<EFLAGS>) -> impl(Reg<RAX>)) 
		Combined result: 4.36 cycles

-----IMUL64r_EVEX-----
	IMUL64r_EVEX(impl(Reg<RAX>) -> impl(Reg<RAX>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----IMUL64r_NF-----
	IMUL64r_NF(impl(Reg<RAX>) -> impl(Reg<RAX>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----IMUL64rr-----
	IMUL64rr(1(Class<GR64>) -> 0(Class<GR64>))  [3.05;3.05]
		 Successful, latency: 3.05
	IMUL64rr(2(Class<GR64>) -> 0(Class<GR64>))  [3.02;3.02]
		 Successful, latency: 3.02
	IMUL64rr(1(Class<GR64>) -> impl(Reg<EFLAGS>))  [2.05;2.07]
		Dependencies:
			ADC64rr(impl(Reg<EFLAGS>) -> 0(Class<GR64>)) 
			ADC64ri32(1(Class<GR64>) -> impl(Reg<EFLAGS>)) 
		Combined result: 3.06 cycles
	IMUL64rr(2(Class<GR64>) -> impl(Reg<EFLAGS>))  [3.03;3.04]
		Dependencies:
			ADC64rr(impl(Reg<EFLAGS>) -> 0(Class<GR64>)) 
			ADC64ri32(1(Class<GR64>) -> impl(Reg<EFLAGS>)) 
		Combined result: 4.04 cycles

-----IMUL64rr_EVEX-----
	IMUL64rr_EVEX(1(Class<GR64>) -> 0(Class<GR64>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	IMUL64rr_EVEX(2(Class<GR64>) -> 0(Class<GR64>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----IMUL64rr_ND-----
	IMUL64rr_ND(1(Class<GR64>) -> 0(Class<GR64>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	IMUL64rr_ND(2(Class<GR64>) -> 0(Class<GR64>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----IMUL64rr_NF-----
	IMUL64rr_NF(1(Class<GR64>) -> 0(Class<GR64>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	IMUL64rr_NF(2(Class<GR64>) -> 0(Class<GR64>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----IMUL64rr_NF_ND-----
	IMUL64rr_NF_ND(1(Class<GR64>) -> 0(Class<GR64>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	IMUL64rr_NF_ND(2(Class<GR64>) -> 0(Class<GR64>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----IMUL64rri32-----
	IMUL64rri32(1(Class<GR64>) -> 0(Class<GR64>))  [3.02;3.02]
		 Successful, latency: 3.02
	IMUL64rri32(1(Class<GR64>) -> impl(Reg<EFLAGS>))  [3.03;3.04]
		Dependencies:
			ADC64rr(impl(Reg<EFLAGS>) -> 0(Class<GR64>)) 
			ADC64ri32(1(Class<GR64>) -> impl(Reg<EFLAGS>)) 
		Combined result: 4.04 cycles

-----IMUL64rri32_EVEX-----
	IMUL64rri32_EVEX(1(Class<GR64>) -> 0(Class<GR64>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----IMUL64rri32_NF-----
	IMUL64rri32_NF(1(Class<GR64>) -> 0(Class<GR64>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----IMUL64rri8-----
	IMUL64rri8(1(Class<GR64>) -> 0(Class<GR64>))  [3.02;3.02]
		 Successful, latency: 3.02
	IMUL64rri8(1(Class<GR64>) -> impl(Reg<EFLAGS>))  [3.02;3.04]
		Dependencies:
			ADC64rr(impl(Reg<EFLAGS>) -> 0(Class<GR64>)) 
			ADC64ri32(1(Class<GR64>) -> impl(Reg<EFLAGS>)) 
		Combined result: 4.03 cycles

-----IMUL64rri8_EVEX-----
	IMUL64rri8_EVEX(1(Class<GR64>) -> 0(Class<GR64>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----IMUL64rri8_NF-----
	IMUL64rri8_NF(1(Class<GR64>) -> 0(Class<GR64>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----IMUL8r-----
	IMUL8r(impl(Reg<AL>) -> impl(Reg<AL>))  [3.03;3.03]
		 Successful, latency: 3.03
	IMUL8r(0(Class<GR8>) -> impl(Reg<AL>))  [1.01;5.04]
		Dependencies:
			CMPXCHG8rr(impl(Reg<AL>) -> 0(Class<GR8>)) 
			CMPXCHG8rr(1(Class<GR8>) -> impl(Reg<AL>)) 
		Combined result: 6.06 cycles
	IMUL8r(0(Class<GR8>) -> impl(Reg<EFLAGS>))  [3.02;3.04]
		Dependencies:
			ADC8ri8(impl(Reg<EFLAGS>) -> 0(Class<GR8>)) 
			ADC8ri(1(Class<GR8>) -> impl(Reg<EFLAGS>)) 
		Combined result: 4.04 cycles
	IMUL8r(impl(Reg<AL>) -> impl(Reg<EFLAGS>))  [3.03;3.04]
		Dependencies:
			ADC8i8(impl(Reg<EFLAGS>) -> impl(Reg<AL>)) 
			CMP8i8(impl(Reg<AL>) -> impl(Reg<EFLAGS>)) 
		Combined result: 4.04 cycles

-----IMUL8r_EVEX-----
	IMUL8r_EVEX(impl(Reg<AL>) -> impl(Reg<AL>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----IMUL8r_NF-----
	IMUL8r_NF(impl(Reg<AL>) -> impl(Reg<AL>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----IMULZU16rri-----
	IMULZU16rri(1(Class<GR16>) -> 0(Class<GR16>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----IMULZU16rri8-----
	IMULZU16rri8(1(Class<GR16>) -> 0(Class<GR16>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----IMULZU32rri-----
	IMULZU32rri(1(Class<GR32>) -> 0(Class<GR32>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----IMULZU32rri8-----
	IMULZU32rri8(1(Class<GR32>) -> 0(Class<GR32>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----IMULZU64rri32-----
	IMULZU64rri32(1(Class<GR64>) -> 0(Class<GR64>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----IMULZU64rri8-----
	IMULZU64rri8(1(Class<GR64>) -> 0(Class<GR64>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----IN16rr-----
	0x138383b780c8
		ERROR_SIGSEGV, this instruction cannot be measured on this platform

-----INC16r-----
	INC16r(1(Class<GR16>) -> 0(Class<GR16>))  [1.02;1.02]
		 Successful, latency: 1.02
	INC16r(1(Class<GR16>) -> impl(Reg<EFLAGS>))  [ERROR_UNUSUAL_LATENCY]
		Dependencies:
			ADC16rr(impl(Reg<EFLAGS>) -> 0(Class<GR16>)) 
			ADC16ri(1(Class<GR16>) -> impl(Reg<EFLAGS>)) 
		Combined result: 1 cycles

-----INC16r_EVEX-----
	INC16r_EVEX(1(Class<GR16>) -> 0(Class<GR16>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----INC16r_ND-----
	INC16r_ND(1(Class<GR16>) -> 0(Class<GR16>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----INC16r_NF-----
	INC16r_NF(1(Class<GR16>) -> 0(Class<GR16>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----INC16r_NF_ND-----
	INC16r_NF_ND(1(Class<GR16>) -> 0(Class<GR16>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----INC16r_alt-----
	INC16r_alt(1(Class<GR16>) -> 0(Class<GR16>))  [1;1]
		 Successful, latency: 1
	INC16r_alt(1(Class<GR16>) -> impl(Reg<EFLAGS>))  [ERROR_UNUSUAL_LATENCY]
		Dependencies:
			ADC16rr(impl(Reg<EFLAGS>) -> 0(Class<GR16>)) 
			ADC16ri(1(Class<GR16>) -> impl(Reg<EFLAGS>)) 
		Combined result: 1 cycles

-----INC32r-----
	INC32r(1(Class<GR32>) -> 0(Class<GR32>))  [1.01;1.01]
		 Successful, latency: 1.01
	INC32r(1(Class<GR32>) -> impl(Reg<EFLAGS>))  [ERROR_UNUSUAL_LATENCY]
		Dependencies:
			ADC32ri8(impl(Reg<EFLAGS>) -> 0(Class<GR32>)) 
			ADC32ri(1(Class<GR32>) -> impl(Reg<EFLAGS>)) 
		Combined result: 1.01 cycles

-----INC32r_EVEX-----
	INC32r_EVEX(1(Class<GR32>) -> 0(Class<GR32>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----INC32r_ND-----
	INC32r_ND(1(Class<GR32>) -> 0(Class<GR32>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----INC32r_NF-----
	INC32r_NF(1(Class<GR32>) -> 0(Class<GR32>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----INC32r_NF_ND-----
	INC32r_NF_ND(1(Class<GR32>) -> 0(Class<GR32>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----INC32r_alt-----
	INC32r_alt(1(Class<GR32>) -> 0(Class<GR32>))  [1;1]
		 Successful, latency: 1
	INC32r_alt(1(Class<GR32>) -> impl(Reg<EFLAGS>))  [ERROR_UNUSUAL_LATENCY]
		Dependencies:
			ADC32ri8(impl(Reg<EFLAGS>) -> 0(Class<GR32>)) 
			ADC32ri(1(Class<GR32>) -> impl(Reg<EFLAGS>)) 
		Combined result: 1.01 cycles

-----INC64r-----
	INC64r(1(Class<GR64>) -> 0(Class<GR64>))  [1.02;1.02]
		 Successful, latency: 1.02
	INC64r(1(Class<GR64>) -> impl(Reg<EFLAGS>))  [ERROR_UNUSUAL_LATENCY]
		Dependencies:
			ADC64rr(impl(Reg<EFLAGS>) -> 0(Class<GR64>)) 
			ADC64ri32(1(Class<GR64>) -> impl(Reg<EFLAGS>)) 
		Combined result: 1 cycles

-----INC64r_EVEX-----
	INC64r_EVEX(1(Class<GR64>) -> 0(Class<GR64>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----INC64r_ND-----
	INC64r_ND(1(Class<GR64>) -> 0(Class<GR64>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----INC64r_NF-----
	INC64r_NF(1(Class<GR64>) -> 0(Class<GR64>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----INC64r_NF_ND-----
	INC64r_NF_ND(1(Class<GR64>) -> 0(Class<GR64>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----INC8r-----
	INC8r(1(Class<GR8>) -> 0(Class<GR8>))  [1.01;1.01]
		 Successful, latency: 1.01
	INC8r(1(Class<GR8>) -> impl(Reg<EFLAGS>))  [ERROR_UNUSUAL_LATENCY]
		Dependencies:
			ADC8ri8(impl(Reg<EFLAGS>) -> 0(Class<GR8>)) 
			ADC8ri(1(Class<GR8>) -> impl(Reg<EFLAGS>)) 
		Combined result: 1 cycles

-----INC8r_EVEX-----
	INC8r_EVEX(1(Class<GR8>) -> 0(Class<GR8>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----INC8r_ND-----
	INC8r_ND(1(Class<GR8>) -> 0(Class<GR8>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----INC8r_NF-----
	INC8r_NF(1(Class<GR8>) -> 0(Class<GR8>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----INC8r_NF_ND-----
	INC8r_NF_ND(1(Class<GR8>) -> 0(Class<GR8>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----INSB-----
	INSB(impl(Reg<EDI>) -> impl(Reg<EDI>))  [SKIP_MEMORY_OPERAND]
		SKIP_MEMORY_OPERAND, this instruction cannot be measured on this platform

-----INSERTPSrri-----
	INSERTPSrri(1(Class<VR128>) -> 0(Class<VR128>))  [1;1]
		 Successful, latency: 1
	INSERTPSrri(2(Class<VR128>) -> 0(Class<VR128>))  [1;1]
		 Successful, latency: 1

-----INSERTQ-----
	INSERTQ(1(Class<VR128>) -> 0(Class<VR128>))  [3.02;3.02]
		 Successful, latency: 3.02
	INSERTQ(2(Class<VR128>) -> 0(Class<VR128>))  [3.02;3.02]
		 Successful, latency: 3.02

-----INSERTQI-----
	INSERTQI(1(Class<VR128>) -> 0(Class<VR128>))  [3.05;3.05]
		 Successful, latency: 3.05
	INSERTQI(2(Class<VR128>) -> 0(Class<VR128>))  [3.08;3.08]
		 Successful, latency: 3.08

-----INSL-----
	INSL(impl(Reg<EDI>) -> impl(Reg<EDI>))  [SKIP_MEMORY_OPERAND]
		SKIP_MEMORY_OPERAND, this instruction cannot be measured on this platform

-----INSW-----
	INSW(impl(Reg<EDI>) -> impl(Reg<EDI>))  [SKIP_MEMORY_OPERAND]
		SKIP_MEMORY_OPERAND, this instruction cannot be measured on this platform

-----KADDBkk-----
	KADDBkk(1(Class<VK8>) -> 0(Class<VK8>))  [1.01;1.01]
		 Successful, latency: 1.01
	KADDBkk(2(Class<VK8>) -> 0(Class<VK8>))  [1.02;1.02]
		 Successful, latency: 1.02

-----KADDDkk-----
	KADDDkk(1(Class<VK32>) -> 0(Class<VK32>))  [1;1]
		 Successful, latency: 1
	KADDDkk(2(Class<VK32>) -> 0(Class<VK32>))  [1;1]
		 Successful, latency: 1

-----KADDQkk-----
	KADDQkk(1(Class<VK64>) -> 0(Class<VK64>))  [1;1]
		 Successful, latency: 1
	KADDQkk(2(Class<VK64>) -> 0(Class<VK64>))  [1.09;1.09]
		 Successful, latency: 1.09

-----KADDWkk-----
	KADDWkk(1(Class<VK16>) -> 0(Class<VK16>))  [1.01;1.01]
		 Successful, latency: 1.01
	KADDWkk(2(Class<VK16>) -> 0(Class<VK16>))  [1.01;1.01]
		 Successful, latency: 1.01

-----KANDBkk-----
	KANDBkk(1(Class<VK8>) -> 0(Class<VK8>))  [1.02;1.02]
		 Successful, latency: 1.02
	KANDBkk(2(Class<VK8>) -> 0(Class<VK8>))  [1.01;1.01]
		 Successful, latency: 1.01

-----KANDDkk-----
	KANDDkk(1(Class<VK32>) -> 0(Class<VK32>))  [1.01;1.01]
		 Successful, latency: 1.01
	KANDDkk(2(Class<VK32>) -> 0(Class<VK32>))  [1;1]
		 Successful, latency: 1

-----KANDNBkk-----
	KANDNBkk(1(Class<VK8>) -> 0(Class<VK8>))  [1.02;1.02]
		 Successful, latency: 1.02
	KANDNBkk(2(Class<VK8>) -> 0(Class<VK8>))  [1.01;1.01]
		 Successful, latency: 1.01

-----KANDNDkk-----
	KANDNDkk(1(Class<VK32>) -> 0(Class<VK32>))  [1;1]
		 Successful, latency: 1
	KANDNDkk(2(Class<VK32>) -> 0(Class<VK32>))  [1.02;1.02]
		 Successful, latency: 1.02

-----KANDNQkk-----
	KANDNQkk(1(Class<VK64>) -> 0(Class<VK64>))  [1.04;1.04]
		 Successful, latency: 1.04
	KANDNQkk(2(Class<VK64>) -> 0(Class<VK64>))  [1.06;1.06]
		 Successful, latency: 1.06

-----KANDNWkk-----
	KANDNWkk(1(Class<VK16>) -> 0(Class<VK16>))  [1.01;1.01]
		 Successful, latency: 1.01
	KANDNWkk(2(Class<VK16>) -> 0(Class<VK16>))  [1.01;1.01]
		 Successful, latency: 1.01

-----KANDQkk-----
	KANDQkk(1(Class<VK64>) -> 0(Class<VK64>))  [1;1]
		 Successful, latency: 1
	KANDQkk(2(Class<VK64>) -> 0(Class<VK64>))  [0.949;0.949]
		 Successful, latency: 0.949

-----KANDWkk-----
	KANDWkk(1(Class<VK16>) -> 0(Class<VK16>))  [1.02;1.02]
		 Successful, latency: 1.02
	KANDWkk(2(Class<VK16>) -> 0(Class<VK16>))  [1.01;1.01]
		 Successful, latency: 1.01

-----KMOVBkk-----
	KMOVBkk(1(Class<VK8>) -> 0(Class<VK8>))  [1.02;1.02]
		 Successful, latency: 1.02

-----KMOVBkk_EVEX-----
	KMOVBkk_EVEX(1(Class<VK8>) -> 0(Class<VK8>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----KMOVBkr-----
	KMOVBkr(1(Class<GR32>) -> 0(Class<VK8>))  [1.01;8.09]
		Dependencies:
			KMOVBkr(1(Class<GR32>) -> 0(Class<VK8>)) 
			KMOVBrk(1(Class<VK8>) -> 0(Class<GR32>)) 
		Combined result: 9.09 cycles

-----KMOVBkr_EVEX-----
	KMOVBkr_EVEX(1(Class<GR32>) -> 0(Class<VK8>))  [0.994;8.07]
		Dependencies:
			KMOVBkr(1(Class<GR32>) -> 0(Class<VK8>)) 
			KMOVBrk(1(Class<VK8>) -> 0(Class<GR32>)) 
		Combined result: 9.07 cycles

-----KMOVBrk-----
	KMOVBrk(1(Class<VK8>) -> 0(Class<GR32>))  [1.01;8.09]
		Dependencies:
			KMOVBkr(1(Class<GR32>) -> 0(Class<VK8>)) 
			KMOVBrk(1(Class<VK8>) -> 0(Class<GR32>)) 
		Combined result: 9.1 cycles

-----KMOVBrk_EVEX-----
	KMOVBrk_EVEX(1(Class<VK8>) -> 0(Class<GR32>))  [0.989;8.07]
		Dependencies:
			KMOVBkr(1(Class<GR32>) -> 0(Class<VK8>)) 
			KMOVBrk(1(Class<VK8>) -> 0(Class<GR32>)) 
		Combined result: 9.08 cycles

-----KMOVDkk-----
	KMOVDkk(1(Class<VK32>) -> 0(Class<VK32>))  [1.01;1.01]
		 Successful, latency: 1.01

-----KMOVDkk_EVEX-----
	KMOVDkk_EVEX(1(Class<VK32>) -> 0(Class<VK32>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----KMOVDkr-----
	KMOVDkr(1(Class<GR32>) -> 0(Class<VK32>))  [1.03;8.1]
		Dependencies:
			KMOVDrk(1(Class<VK32>) -> 0(Class<GR32>)) 
			KMOVDkr(1(Class<GR32>) -> 0(Class<VK32>)) 
		Combined result: 9.1 cycles

-----KMOVDkr_EVEX-----
	KMOVDkr_EVEX(1(Class<GR32>) -> 0(Class<VK32>))  [1.02;8.09]
		Dependencies:
			KMOVDrk(1(Class<VK32>) -> 0(Class<GR32>)) 
			KMOVDkr(1(Class<GR32>) -> 0(Class<VK32>)) 
		Combined result: 9.09 cycles

-----KMOVDrk-----
	KMOVDrk(1(Class<VK32>) -> 0(Class<GR32>))  [0.995;8.07]
		Dependencies:
			KMOVDrk(1(Class<VK32>) -> 0(Class<GR32>)) 
			KMOVDkr(1(Class<GR32>) -> 0(Class<VK32>)) 
		Combined result: 9.07 cycles

-----KMOVDrk_EVEX-----
	KMOVDrk_EVEX(1(Class<VK32>) -> 0(Class<GR32>))  [1.01;8.08]
		Dependencies:
			KMOVDrk(1(Class<VK32>) -> 0(Class<GR32>)) 
			KMOVDkr(1(Class<GR32>) -> 0(Class<VK32>)) 
		Combined result: 9.08 cycles

-----KMOVQkk-----
	KMOVQkk(1(Class<VK64>) -> 0(Class<VK64>))  [0.915;0.915]
		 Successful, latency: 0.915

-----KMOVQkk_EVEX-----
	KMOVQkk_EVEX(1(Class<VK64>) -> 0(Class<VK64>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----KMOVQkr-----
	KMOVQkr(1(Class<GR64>) -> 0(Class<VK64>))  [1.01;9.05]
		Dependencies:
			KMOVQrk_EVEX(1(Class<VK64>) -> 0(Class<GR64>)) 
			KMOVQkr(1(Class<GR64>) -> 0(Class<VK64>)) 
		Combined result: 10.1 cycles

-----KMOVQkr_EVEX-----
	KMOVQkr_EVEX(1(Class<GR64>) -> 0(Class<VK64>))  [0.989;9.04]
		Dependencies:
			KMOVQrk_EVEX(1(Class<VK64>) -> 0(Class<GR64>)) 
			KMOVQkr(1(Class<GR64>) -> 0(Class<VK64>)) 
		Combined result: 10.1 cycles

-----KMOVQrk-----
	KMOVQrk(1(Class<VK64>) -> 0(Class<GR64>))  [1.02;9.07]
		Dependencies:
			KMOVQrk_EVEX(1(Class<VK64>) -> 0(Class<GR64>)) 
			KMOVQkr(1(Class<GR64>) -> 0(Class<VK64>)) 
		Combined result: 10.1 cycles

-----KMOVQrk_EVEX-----
	KMOVQrk_EVEX(1(Class<VK64>) -> 0(Class<GR64>))  [1.03;9.07]
		Dependencies:
			KMOVQrk_EVEX(1(Class<VK64>) -> 0(Class<GR64>)) 
			KMOVQkr(1(Class<GR64>) -> 0(Class<VK64>)) 
		Combined result: 10.1 cycles

-----KMOVWkk-----
	KMOVWkk(1(Class<VK16>) -> 0(Class<VK16>))  [1.01;1.01]
		 Successful, latency: 1.01

-----KMOVWkk_EVEX-----
	KMOVWkk_EVEX(1(Class<VK16>) -> 0(Class<VK16>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----KMOVWkr-----
	KMOVWkr(1(Class<GR32>) -> 0(Class<VK16>))  [1.01;8.07]
		Dependencies:
			KMOVWkr_EVEX(1(Class<GR32>) -> 0(Class<VK16>)) 
			KMOVWrk(1(Class<VK16>) -> 0(Class<GR32>)) 
		Combined result: 9.07 cycles

-----KMOVWkr_EVEX-----
	KMOVWkr_EVEX(1(Class<GR32>) -> 0(Class<VK16>))  [1.01;8.07]
		Dependencies:
			KMOVWkr_EVEX(1(Class<GR32>) -> 0(Class<VK16>)) 
			KMOVWrk(1(Class<VK16>) -> 0(Class<GR32>)) 
		Combined result: 9.07 cycles

-----KMOVWrk-----
	KMOVWrk(1(Class<VK16>) -> 0(Class<GR32>))  [1.02;8.08]
		Dependencies:
			KMOVWkr_EVEX(1(Class<GR32>) -> 0(Class<VK16>)) 
			KMOVWrk(1(Class<VK16>) -> 0(Class<GR32>)) 
		Combined result: 9.09 cycles

-----KMOVWrk_EVEX-----
	KMOVWrk_EVEX(1(Class<VK16>) -> 0(Class<GR32>))  [0.998;8.06]
		Dependencies:
			KMOVWkr_EVEX(1(Class<GR32>) -> 0(Class<VK16>)) 
			KMOVWrk(1(Class<VK16>) -> 0(Class<GR32>)) 
		Combined result: 9.07 cycles

-----KNOTBkk-----
	KNOTBkk(1(Class<VK8>) -> 0(Class<VK8>))  [1.02;1.02]
		 Successful, latency: 1.02

-----KNOTDkk-----
	KNOTDkk(1(Class<VK32>) -> 0(Class<VK32>))  [1.01;1.01]
		 Successful, latency: 1.01

-----KNOTQkk-----
	KNOTQkk(1(Class<VK64>) -> 0(Class<VK64>))  [0.894;0.894]
		 Successful, latency: 0.894

-----KNOTWkk-----
	KNOTWkk(1(Class<VK16>) -> 0(Class<VK16>))  [1;1]
		 Successful, latency: 1

-----KORBkk-----
	KORBkk(1(Class<VK8>) -> 0(Class<VK8>))  [1.02;1.02]
		 Successful, latency: 1.02
	KORBkk(2(Class<VK8>) -> 0(Class<VK8>))  [1.01;1.01]
		 Successful, latency: 1.01

-----KORDkk-----
	KORDkk(1(Class<VK32>) -> 0(Class<VK32>))  [1.01;1.01]
		 Successful, latency: 1.01
	KORDkk(2(Class<VK32>) -> 0(Class<VK32>))  [1.02;1.02]
		 Successful, latency: 1.02

-----KORQkk-----
	KORQkk(1(Class<VK64>) -> 0(Class<VK64>))  [1.04;1.04]
		 Successful, latency: 1.04
	KORQkk(2(Class<VK64>) -> 0(Class<VK64>))  [1;1]
		 Successful, latency: 1

-----KORTESTBkk-----
	KORTESTBkk(0(Class<VK8>) -> impl(Reg<EFLAGS>))  [1.04;0.254]
		Dependencies:
			CMOV_VK8(impl(Reg<EFLAGS>) -> 0(Class<VK8>)) 
			KORTESTBkk(0(Class<VK8>) -> impl(Reg<EFLAGS>)) 
		Combined result: 1.26 cycles
	KORTESTBkk(1(Class<VK8>) -> impl(Reg<EFLAGS>))  [1.04;0.253]
		Dependencies:
			CMOV_VK8(impl(Reg<EFLAGS>) -> 0(Class<VK8>)) 
			KORTESTBkk(0(Class<VK8>) -> impl(Reg<EFLAGS>)) 
		Combined result: 1.26 cycles

-----KORTESTDkk-----
	KORTESTDkk(0(Class<VK32>) -> impl(Reg<EFLAGS>))  [0.965;0.221]
		Dependencies:
			CMOV_VK32(impl(Reg<EFLAGS>) -> 0(Class<VK32>)) 
			KORTESTDkk(0(Class<VK32>) -> impl(Reg<EFLAGS>)) 
		Combined result: 1.22 cycles
	KORTESTDkk(1(Class<VK32>) -> impl(Reg<EFLAGS>))  [1.01;0.266]
		Dependencies:
			CMOV_VK32(impl(Reg<EFLAGS>) -> 0(Class<VK32>)) 
			KORTESTDkk(0(Class<VK32>) -> impl(Reg<EFLAGS>)) 
		Combined result: 1.27 cycles

-----KORTESTQkk-----
	KORTESTQkk(0(Class<VK64>) -> impl(Reg<EFLAGS>))  [1;0.0537]
		Dependencies:
			CMOV_VK64(impl(Reg<EFLAGS>) -> 0(Class<VK64>)) 
			KORTESTQkk(0(Class<VK64>) -> impl(Reg<EFLAGS>)) 
		Combined result: 1.06 cycles
	KORTESTQkk(1(Class<VK64>) -> impl(Reg<EFLAGS>))  [0.997;0.05]
		Dependencies:
			CMOV_VK64(impl(Reg<EFLAGS>) -> 0(Class<VK64>)) 
			KORTESTQkk(0(Class<VK64>) -> impl(Reg<EFLAGS>)) 
		Combined result: 1.06 cycles

-----KORTESTWkk-----
	KORTESTWkk(0(Class<VK16>) -> impl(Reg<EFLAGS>))  [0.999;0.202]
		Dependencies:
			CMOV_VK16(impl(Reg<EFLAGS>) -> 0(Class<VK16>)) 
			KORTESTWkk(0(Class<VK16>) -> impl(Reg<EFLAGS>)) 
		Combined result: 1.25 cycles
	KORTESTWkk(1(Class<VK16>) -> impl(Reg<EFLAGS>))  [0.944;0.147]
		Dependencies:
			CMOV_VK16(impl(Reg<EFLAGS>) -> 0(Class<VK16>)) 
			KORTESTWkk(0(Class<VK16>) -> impl(Reg<EFLAGS>)) 
		Combined result: 1.2 cycles

-----KORWkk-----
	KORWkk(1(Class<VK16>) -> 0(Class<VK16>))  [1.01;1.01]
		 Successful, latency: 1.01
	KORWkk(2(Class<VK16>) -> 0(Class<VK16>))  [1.02;1.02]
		 Successful, latency: 1.02

-----KSHIFTLBki-----
	KSHIFTLBki(1(Class<VK8>) -> 0(Class<VK8>))  [1.01;1.01]
		 Successful, latency: 1.01

-----KSHIFTLDki-----
	KSHIFTLDki(1(Class<VK32>) -> 0(Class<VK32>))  [1;1]
		 Successful, latency: 1

-----KSHIFTLQki-----
	KSHIFTLQki(1(Class<VK64>) -> 0(Class<VK64>))  [1.03;1.03]
		 Successful, latency: 1.03

-----KSHIFTLWki-----
	KSHIFTLWki(1(Class<VK16>) -> 0(Class<VK16>))  [1.01;1.01]
		 Successful, latency: 1.01

-----KSHIFTRBki-----
	KSHIFTRBki(1(Class<VK8>) -> 0(Class<VK8>))  [1.01;1.01]
		 Successful, latency: 1.01

-----KSHIFTRDki-----
	KSHIFTRDki(1(Class<VK32>) -> 0(Class<VK32>))  [1.01;1.01]
		 Successful, latency: 1.01

-----KSHIFTRQki-----
	KSHIFTRQki(1(Class<VK64>) -> 0(Class<VK64>))  [2.01;2.01]
		 Successful, latency: 2.01

-----KSHIFTRWki-----
	KSHIFTRWki(1(Class<VK16>) -> 0(Class<VK16>))  [0.999;0.999]
		 Successful, latency: 0.999

-----KTESTBkk-----
	KTESTBkk(0(Class<VK8>) -> impl(Reg<EFLAGS>))  [1.03;0.251]
		Dependencies:
			CMOV_VK8(impl(Reg<EFLAGS>) -> 0(Class<VK8>)) 
			KORTESTBkk(0(Class<VK8>) -> impl(Reg<EFLAGS>)) 
		Combined result: 1.25 cycles
	KTESTBkk(1(Class<VK8>) -> impl(Reg<EFLAGS>))  [1.03;0.246]
		Dependencies:
			CMOV_VK8(impl(Reg<EFLAGS>) -> 0(Class<VK8>)) 
			KORTESTBkk(0(Class<VK8>) -> impl(Reg<EFLAGS>)) 
		Combined result: 1.25 cycles

-----KTESTDkk-----
	KTESTDkk(0(Class<VK32>) -> impl(Reg<EFLAGS>))  [0.911;0.167]
		Dependencies:
			CMOV_VK32(impl(Reg<EFLAGS>) -> 0(Class<VK32>)) 
			KORTESTDkk(0(Class<VK32>) -> impl(Reg<EFLAGS>)) 
		Combined result: 1.17 cycles
	KTESTDkk(1(Class<VK32>) -> impl(Reg<EFLAGS>))  [0.996;0.252]
		Dependencies:
			CMOV_VK32(impl(Reg<EFLAGS>) -> 0(Class<VK32>)) 
			KORTESTDkk(0(Class<VK32>) -> impl(Reg<EFLAGS>)) 
		Combined result: 1.25 cycles

-----KTESTQkk-----
	KTESTQkk(0(Class<VK64>) -> impl(Reg<EFLAGS>))  [0.98;0.0325]
		Dependencies:
			CMOV_VK64(impl(Reg<EFLAGS>) -> 0(Class<VK64>)) 
			KORTESTQkk(0(Class<VK64>) -> impl(Reg<EFLAGS>)) 
		Combined result: 1.04 cycles
	KTESTQkk(1(Class<VK64>) -> impl(Reg<EFLAGS>))  [0.96;0.0125]
		Dependencies:
			CMOV_VK64(impl(Reg<EFLAGS>) -> 0(Class<VK64>)) 
			KORTESTQkk(0(Class<VK64>) -> impl(Reg<EFLAGS>)) 
		Combined result: 1.02 cycles

-----KTESTWkk-----
	KTESTWkk(0(Class<VK16>) -> impl(Reg<EFLAGS>))  [0.935;0.139]
		Dependencies:
			CMOV_VK16(impl(Reg<EFLAGS>) -> 0(Class<VK16>)) 
			KORTESTWkk(0(Class<VK16>) -> impl(Reg<EFLAGS>)) 
		Combined result: 1.19 cycles
	KTESTWkk(1(Class<VK16>) -> impl(Reg<EFLAGS>))  [1.01;0.213]
		Dependencies:
			CMOV_VK16(impl(Reg<EFLAGS>) -> 0(Class<VK16>)) 
			KORTESTWkk(0(Class<VK16>) -> impl(Reg<EFLAGS>)) 
		Combined result: 1.27 cycles

-----KXNORBkk-----
	KXNORBkk(1(Class<VK8>) -> 0(Class<VK8>))  [1;1]
		 Successful, latency: 1
	KXNORBkk(2(Class<VK8>) -> 0(Class<VK8>))  [1;1]
		 Successful, latency: 1

-----KXNORDkk-----
	KXNORDkk(1(Class<VK32>) -> 0(Class<VK32>))  [1.01;1.01]
		 Successful, latency: 1.01
	KXNORDkk(2(Class<VK32>) -> 0(Class<VK32>))  [1.01;1.01]
		 Successful, latency: 1.01

-----KXNORQkk-----
	KXNORQkk(1(Class<VK64>) -> 0(Class<VK64>))  [0.951;0.951]
		 Successful, latency: 0.951
	KXNORQkk(2(Class<VK64>) -> 0(Class<VK64>))  [1.07;1.07]
		 Successful, latency: 1.07

-----KXNORWkk-----
	KXNORWkk(1(Class<VK16>) -> 0(Class<VK16>))  [1;1]
		 Successful, latency: 1
	KXNORWkk(2(Class<VK16>) -> 0(Class<VK16>))  [1.02;1.02]
		 Successful, latency: 1.02

-----KXORBkk-----
	KXORBkk(1(Class<VK8>) -> 0(Class<VK8>))  [1.01;1.01]
		 Successful, latency: 1.01
	KXORBkk(2(Class<VK8>) -> 0(Class<VK8>))  [1.01;1.01]
		 Successful, latency: 1.01

-----KXORDkk-----
	KXORDkk(1(Class<VK32>) -> 0(Class<VK32>))  [1;1]
		 Successful, latency: 1
	KXORDkk(2(Class<VK32>) -> 0(Class<VK32>))  [1;1]
		 Successful, latency: 1

-----KXORQkk-----
	KXORQkk(1(Class<VK64>) -> 0(Class<VK64>))  [1;1]
		 Successful, latency: 1
	KXORQkk(2(Class<VK64>) -> 0(Class<VK64>))  [1.12;1.12]
		 Successful, latency: 1.12

-----KXORWkk-----
	KXORWkk(1(Class<VK16>) -> 0(Class<VK16>))  [1.01;1.01]
		 Successful, latency: 1.01
	KXORWkk(2(Class<VK16>) -> 0(Class<VK16>))  [1.01;1.01]
		 Successful, latency: 1.01

-----LAHF-----
	LAHF(impl(Reg<EFLAGS>) -> impl(Reg<AH>))  [0.999;1.02]
		Dependencies:
			LAHF(impl(Reg<EFLAGS>) -> impl(Reg<AH>)) 
			SAHF(impl(Reg<AH>) -> impl(Reg<EFLAGS>)) 
		Combined result: 2.02 cycles

-----LAR16rr-----
	LAR16rr(1(Class<GR16>) -> 0(Class<GR16>))  [99.2;99.2]
		 Successful, latency: 99.2
	LAR16rr(1(Class<GR16>) -> impl(Reg<EFLAGS>))  [98.4;98.4]
		Dependencies:
			ADC16rr(impl(Reg<EFLAGS>) -> 0(Class<GR16>)) 
			ADC16ri(1(Class<GR16>) -> impl(Reg<EFLAGS>)) 
		Combined result: 99.4 cycles

-----LAR32rr-----
	LAR32rr(1(Class<GR16>) -> impl(Reg<EFLAGS>))  [98.5;98.6]
		Dependencies:
			ADC16rr(impl(Reg<EFLAGS>) -> 0(Class<GR16>)) 
			ADC16ri(1(Class<GR16>) -> impl(Reg<EFLAGS>)) 
		Combined result: 99.6 cycles

-----LAR64rr-----
	LAR64rr(1(Class<GR16>) -> impl(Reg<EFLAGS>))  [98.4;98.4]
		Dependencies:
			ADC16rr(impl(Reg<EFLAGS>) -> 0(Class<GR16>)) 
			ADC16ri(1(Class<GR16>) -> impl(Reg<EFLAGS>)) 
		Combined result: 99.4 cycles

-----LODSB-----
	LODSB(impl(Reg<ESI>) -> impl(Reg<ESI>))  [SKIP_MEMORY_OPERAND]
		SKIP_MEMORY_OPERAND, this instruction cannot be measured on this platform

-----LODSL-----
	LODSL(impl(Reg<ESI>) -> impl(Reg<ESI>))  [SKIP_MEMORY_OPERAND]
		SKIP_MEMORY_OPERAND, this instruction cannot be measured on this platform

-----LODSQ-----
	LODSQ(impl(Reg<ESI>) -> impl(Reg<ESI>))  [SKIP_MEMORY_OPERAND]
		SKIP_MEMORY_OPERAND, this instruction cannot be measured on this platform

-----LODSW-----
	LODSW(impl(Reg<ESI>) -> impl(Reg<ESI>))  [SKIP_MEMORY_OPERAND]
		SKIP_MEMORY_OPERAND, this instruction cannot be measured on this platform

-----LSL16rr-----
	LSL16rr(1(Class<GR16>) -> 0(Class<GR16>))  [98.5;98.5]
		 Successful, latency: 98.5
	LSL16rr(1(Class<GR16>) -> impl(Reg<EFLAGS>))  [97.8;97.8]
		Dependencies:
			ADC16rr(impl(Reg<EFLAGS>) -> 0(Class<GR16>)) 
			ADC16ri(1(Class<GR16>) -> impl(Reg<EFLAGS>)) 
		Combined result: 98.8 cycles

-----LSL32rr-----
	LSL32rr(1(Class<GR16>) -> impl(Reg<EFLAGS>))  [97.9;97.9]
		Dependencies:
			ADC16rr(impl(Reg<EFLAGS>) -> 0(Class<GR16>)) 
			ADC16ri(1(Class<GR16>) -> impl(Reg<EFLAGS>)) 
		Combined result: 98.9 cycles

-----LSL64rr-----
	LSL64rr(1(Class<GR16>) -> impl(Reg<EFLAGS>))  [97.9;97.9]
		Dependencies:
			ADC16rr(impl(Reg<EFLAGS>) -> 0(Class<GR16>)) 
			ADC16ri(1(Class<GR16>) -> impl(Reg<EFLAGS>)) 
		Combined result: 98.9 cycles

-----LZCNT16rr-----
	LZCNT16rr(1(Class<GR16>) -> 0(Class<GR16>))  [1.01;1.01]
		 Successful, latency: 1.01
	LZCNT16rr(1(Class<GR16>) -> impl(Reg<EFLAGS>))  [0.999;1.02]
		Dependencies:
			ADC16rr(impl(Reg<EFLAGS>) -> 0(Class<GR16>)) 
			ADC16ri(1(Class<GR16>) -> impl(Reg<EFLAGS>)) 
		Combined result: 2.01 cycles

-----LZCNT16rr_EVEX-----
	LZCNT16rr_EVEX(1(Class<GR16>) -> 0(Class<GR16>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----LZCNT16rr_NF-----
	LZCNT16rr_NF(1(Class<GR16>) -> 0(Class<GR16>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----LZCNT32rr-----
	LZCNT32rr(1(Class<GR32>) -> 0(Class<GR32>))  [1;1]
		 Successful, latency: 1
	LZCNT32rr(1(Class<GR32>) -> impl(Reg<EFLAGS>))  [1;1.02]
		Dependencies:
			ADC32ri8(impl(Reg<EFLAGS>) -> 0(Class<GR32>)) 
			ADC32ri(1(Class<GR32>) -> impl(Reg<EFLAGS>)) 
		Combined result: 2.03 cycles

-----LZCNT32rr_EVEX-----
	LZCNT32rr_EVEX(1(Class<GR32>) -> 0(Class<GR32>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----LZCNT32rr_NF-----
	LZCNT32rr_NF(1(Class<GR32>) -> 0(Class<GR32>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----LZCNT64rr-----
	LZCNT64rr(1(Class<GR64>) -> 0(Class<GR64>))  [1.01;1.01]
		 Successful, latency: 1.01
	LZCNT64rr(1(Class<GR64>) -> impl(Reg<EFLAGS>))  [1.01;1.03]
		Dependencies:
			ADC64rr(impl(Reg<EFLAGS>) -> 0(Class<GR64>)) 
			ADC64ri32(1(Class<GR64>) -> impl(Reg<EFLAGS>)) 
		Combined result: 2.02 cycles

-----LZCNT64rr_EVEX-----
	LZCNT64rr_EVEX(1(Class<GR64>) -> 0(Class<GR64>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----LZCNT64rr_NF-----
	LZCNT64rr_NF(1(Class<GR64>) -> 0(Class<GR64>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----MAXCPDrr-----
	MAXCPDrr(1(Class<VR128>) -> 0(Class<VR128>))  [2.02;2.02]
		 Successful, latency: 2.02
	MAXCPDrr(2(Class<VR128>) -> 0(Class<VR128>))  [2.02;2.02]
		 Successful, latency: 2.02

-----MAXCPSrr-----
	MAXCPSrr(1(Class<VR128>) -> 0(Class<VR128>))  [2.02;2.02]
		 Successful, latency: 2.02
	MAXCPSrr(2(Class<VR128>) -> 0(Class<VR128>))  [2.01;2.01]
		 Successful, latency: 2.01

-----MAXCSDrr-----
	MAXCSDrr(1(Class<FR64>) -> 0(Class<FR64>))  [2.03;2.03]
		 Successful, latency: 2.03
	MAXCSDrr(2(Class<FR64>) -> 0(Class<FR64>))  [2.02;2.02]
		 Successful, latency: 2.02

-----MAXCSSrr-----
	MAXCSSrr(1(Class<FR32>) -> 0(Class<FR32>))  [2.02;2.02]
		 Successful, latency: 2.02
	MAXCSSrr(2(Class<FR32>) -> 0(Class<FR32>))  [2.02;2.02]
		 Successful, latency: 2.02

-----MAXPDrr-----
	MAXPDrr(1(Class<VR128>) -> 0(Class<VR128>))  [2.02;2.02]
		 Successful, latency: 2.02
	MAXPDrr(2(Class<VR128>) -> 0(Class<VR128>))  [2.02;2.02]
		 Successful, latency: 2.02

-----MAXPSrr-----
	MAXPSrr(1(Class<VR128>) -> 0(Class<VR128>))  [2.02;2.02]
		 Successful, latency: 2.02
	MAXPSrr(2(Class<VR128>) -> 0(Class<VR128>))  [2.02;2.02]
		 Successful, latency: 2.02

-----MAXSDrr-----
	MAXSDrr(1(Class<FR64>) -> 0(Class<FR64>))  [1.99;1.99]
		 Successful, latency: 1.99
	MAXSDrr(2(Class<FR64>) -> 0(Class<FR64>))  [2.02;2.02]
		 Successful, latency: 2.02

-----MAXSDrr_Int-----
	MAXSDrr_Int(1(Class<VR128>) -> 0(Class<VR128>))  [2.01;2.01]
		 Successful, latency: 2.01
	MAXSDrr_Int(2(Class<VR128>) -> 0(Class<VR128>))  [2.02;2.02]
		 Successful, latency: 2.02

-----MAXSSrr-----
	MAXSSrr(1(Class<FR32>) -> 0(Class<FR32>))  [2.03;2.03]
		 Successful, latency: 2.03
	MAXSSrr(2(Class<FR32>) -> 0(Class<FR32>))  [2.01;2.01]
		 Successful, latency: 2.01

-----MAXSSrr_Int-----
	MAXSSrr_Int(1(Class<VR128>) -> 0(Class<VR128>))  [2.02;2.02]
		 Successful, latency: 2.02
	MAXSSrr_Int(2(Class<VR128>) -> 0(Class<VR128>))  [2.02;2.02]
		 Successful, latency: 2.02

-----MINCPDrr-----
	MINCPDrr(1(Class<VR128>) -> 0(Class<VR128>))  [2.01;2.01]
		 Successful, latency: 2.01
	MINCPDrr(2(Class<VR128>) -> 0(Class<VR128>))  [2.02;2.02]
		 Successful, latency: 2.02

-----MINCPSrr-----
	MINCPSrr(1(Class<VR128>) -> 0(Class<VR128>))  [2.03;2.03]
		 Successful, latency: 2.03
	MINCPSrr(2(Class<VR128>) -> 0(Class<VR128>))  [2.03;2.03]
		 Successful, latency: 2.03

-----MINCSDrr-----
	MINCSDrr(1(Class<FR64>) -> 0(Class<FR64>))  [2.02;2.02]
		 Successful, latency: 2.02
	MINCSDrr(2(Class<FR64>) -> 0(Class<FR64>))  [2.01;2.01]
		 Successful, latency: 2.01

-----MINCSSrr-----
	MINCSSrr(1(Class<FR32>) -> 0(Class<FR32>))  [2.02;2.02]
		 Successful, latency: 2.02
	MINCSSrr(2(Class<FR32>) -> 0(Class<FR32>))  [2.01;2.01]
		 Successful, latency: 2.01

-----MINPDrr-----
	MINPDrr(1(Class<VR128>) -> 0(Class<VR128>))  [2.02;2.02]
		 Successful, latency: 2.02
	MINPDrr(2(Class<VR128>) -> 0(Class<VR128>))  [2.02;2.02]
		 Successful, latency: 2.02

-----MINPSrr-----
	MINPSrr(1(Class<VR128>) -> 0(Class<VR128>))  [2.01;2.01]
		 Successful, latency: 2.01
	MINPSrr(2(Class<VR128>) -> 0(Class<VR128>))  [2.01;2.01]
		 Successful, latency: 2.01

-----MINSDrr-----
	MINSDrr(1(Class<FR64>) -> 0(Class<FR64>))  [2.02;2.02]
		 Successful, latency: 2.02
	MINSDrr(2(Class<FR64>) -> 0(Class<FR64>))  [2.03;2.03]
		 Successful, latency: 2.03

-----MINSDrr_Int-----
	MINSDrr_Int(1(Class<VR128>) -> 0(Class<VR128>))  [2;2]
		 Successful, latency: 2
	MINSDrr_Int(2(Class<VR128>) -> 0(Class<VR128>))  [2.02;2.02]
		 Successful, latency: 2.02

-----MINSSrr-----
	MINSSrr(1(Class<FR32>) -> 0(Class<FR32>))  [2.02;2.02]
		 Successful, latency: 2.02
	MINSSrr(2(Class<FR32>) -> 0(Class<FR32>))  [2.02;2.02]
		 Successful, latency: 2.02

-----MINSSrr_Int-----
	MINSSrr_Int(1(Class<VR128>) -> 0(Class<VR128>))  [2.02;2.02]
		 Successful, latency: 2.02
	MINSSrr_Int(2(Class<VR128>) -> 0(Class<VR128>))  [2.01;2.01]
		 Successful, latency: 2.01

-----MMX_CVTPD2PIrr-----
	MMX_CVTPD2PIrr(1(Class<VR128>) -> 0(Class<VR64>))  [3.01;4.03]
		Dependencies:
			MMX_MOVDQ2Qrr(1(Class<VR128>) -> 0(Class<VR64>)) 
			MMX_MOVQ2DQrr(1(Class<VR64>) -> 0(Class<VR128>)) 
		Combined result: 5.03 cycles

-----MMX_CVTPI2PDrr-----
	MMX_CVTPI2PDrr(1(Class<VR64>) -> 0(Class<VR128>))  [3.03;4.06]
		Dependencies:
			MMX_MOVDQ2Qrr(1(Class<VR128>) -> 0(Class<VR64>)) 
			MMX_MOVQ2DQrr(1(Class<VR64>) -> 0(Class<VR128>)) 
		Combined result: 5.05 cycles

-----MMX_CVTPI2PSrr-----
	MMX_CVTPI2PSrr(1(Class<VR128>) -> 0(Class<VR128>))  [3.02;3.02]
		 Successful, latency: 3.02
	MMX_CVTPI2PSrr(2(Class<VR64>) -> 0(Class<VR128>))  [3.02;4.05]
		Dependencies:
			MMX_MOVDQ2Qrr(1(Class<VR128>) -> 0(Class<VR64>)) 
			MMX_MOVQ2DQrr(1(Class<VR64>) -> 0(Class<VR128>)) 
		Combined result: 5.05 cycles

-----MMX_CVTPS2PIrr-----
	MMX_CVTPS2PIrr(1(Class<VR128>) -> 0(Class<VR64>))  [3.02;4.04]
		Dependencies:
			MMX_MOVDQ2Qrr(1(Class<VR128>) -> 0(Class<VR64>)) 
			MMX_MOVQ2DQrr(1(Class<VR64>) -> 0(Class<VR128>)) 
		Combined result: 5.04 cycles

-----MMX_CVTTPD2PIrr-----
	MMX_CVTTPD2PIrr(1(Class<VR128>) -> 0(Class<VR64>))  [3.02;4.04]
		Dependencies:
			MMX_MOVDQ2Qrr(1(Class<VR128>) -> 0(Class<VR64>)) 
			MMX_MOVQ2DQrr(1(Class<VR64>) -> 0(Class<VR128>)) 
		Combined result: 5.04 cycles

-----MMX_CVTTPS2PIrr-----
	MMX_CVTTPS2PIrr(1(Class<VR128>) -> 0(Class<VR64>))  [3.02;4.04]
		Dependencies:
			MMX_MOVDQ2Qrr(1(Class<VR128>) -> 0(Class<VR64>)) 
			MMX_MOVQ2DQrr(1(Class<VR64>) -> 0(Class<VR128>)) 
		Combined result: 5.04 cycles

-----MMX_MOVD64from64rr-----
	MMX_MOVD64from64rr(1(Class<VR64>) -> 0(Class<GR64>))  [1.01;6.06]
		Dependencies:
			MMX_MOVD64from64rr(1(Class<VR64>) -> 0(Class<GR64>)) 
			MMX_MOVD64to64rr(1(Class<GR64>) -> 0(Class<VR64>)) 
		Combined result: 7.06 cycles

-----MMX_MOVD64grr-----
	MMX_MOVD64grr(1(Class<VR64>) -> 0(Class<GR32>))  [1.02;6.06]
		Dependencies:
			MMX_PMOVMSKBrr(1(Class<VR64>) -> 0(Class<GR32>)) 
			MMX_PINSRWrri(2(Class<GR32>) -> 0(Class<VR64>)) 
		Combined result: 7.06 cycles

-----MMX_MOVD64rr-----
	MMX_MOVD64rr(1(Class<GR32>) -> 0(Class<VR64>))  [1.02;6.06]
		Dependencies:
			MMX_PMOVMSKBrr(1(Class<VR64>) -> 0(Class<GR32>)) 
			MMX_PINSRWrri(2(Class<GR32>) -> 0(Class<VR64>)) 
		Combined result: 7.07 cycles

-----MMX_MOVD64to64rr-----
	MMX_MOVD64to64rr(1(Class<GR64>) -> 0(Class<VR64>))  [1.01;6.06]
		Dependencies:
			MMX_MOVD64from64rr(1(Class<VR64>) -> 0(Class<GR64>)) 
			MMX_MOVD64to64rr(1(Class<GR64>) -> 0(Class<VR64>)) 
		Combined result: 7.07 cycles

-----MMX_MOVDQ2Qrr-----
	MMX_MOVDQ2Qrr(1(Class<VR128>) -> 0(Class<VR64>))  [0.998;2.02]
		Dependencies:
			MMX_MOVDQ2Qrr(1(Class<VR128>) -> 0(Class<VR64>)) 
			MMX_MOVQ2DQrr(1(Class<VR64>) -> 0(Class<VR128>)) 
		Combined result: 3.02 cycles

-----MMX_MOVFR642Qrr-----
	MMX_MOVFR642Qrr(1(Class<FR64>) -> 0(Class<VR64>))  [1;2.04]
		Dependencies:
			MMX_MOVQ2FR64rr(1(Class<VR64>) -> 0(Class<FR64>)) 
			MMX_MOVFR642Qrr(1(Class<FR64>) -> 0(Class<VR64>)) 
		Combined result: 3.03 cycles

-----MMX_MOVQ2DQrr-----
	MMX_MOVQ2DQrr(1(Class<VR64>) -> 0(Class<VR128>))  [1.01;2.03]
		Dependencies:
			MMX_MOVDQ2Qrr(1(Class<VR128>) -> 0(Class<VR64>)) 
			MMX_MOVQ2DQrr(1(Class<VR64>) -> 0(Class<VR128>)) 
		Combined result: 3.03 cycles

-----MMX_MOVQ2FR64rr-----
	MMX_MOVQ2FR64rr(1(Class<VR64>) -> 0(Class<FR64>))  [0.99;2.02]
		Dependencies:
			MMX_MOVQ2FR64rr(1(Class<VR64>) -> 0(Class<FR64>)) 
			MMX_MOVFR642Qrr(1(Class<FR64>) -> 0(Class<VR64>)) 
		Combined result: 3.02 cycles

-----MMX_MOVQ64rr-----
	MMX_MOVQ64rr(1(Class<VR64>) -> 0(Class<VR64>))  [1.01;1.01]
		 Successful, latency: 1.01

-----MMX_MOVQ64rr_REV-----
	MMX_MOVQ64rr_REV(1(Class<VR64>) -> 0(Class<VR64>))  [0.999;0.999]
		 Successful, latency: 0.999

-----MMX_PABSBrr-----
	MMX_PABSBrr(1(Class<VR64>) -> 0(Class<VR64>))  [2.02;2.02]
		 Successful, latency: 2.02

-----MMX_PABSDrr-----
	MMX_PABSDrr(1(Class<VR64>) -> 0(Class<VR64>))  [2.02;2.02]
		 Successful, latency: 2.02

-----MMX_PABSWrr-----
	MMX_PABSWrr(1(Class<VR64>) -> 0(Class<VR64>))  [2.01;2.01]
		 Successful, latency: 2.01

-----MMX_PACKSSDWrr-----
	MMX_PACKSSDWrr(1(Class<VR64>) -> 0(Class<VR64>))  [2.02;2.02]
		 Successful, latency: 2.02
	MMX_PACKSSDWrr(2(Class<VR64>) -> 0(Class<VR64>))  [2.01;2.01]
		 Successful, latency: 2.01

-----MMX_PACKSSWBrr-----
	MMX_PACKSSWBrr(1(Class<VR64>) -> 0(Class<VR64>))  [2.03;2.03]
		 Successful, latency: 2.03
	MMX_PACKSSWBrr(2(Class<VR64>) -> 0(Class<VR64>))  [2.02;2.02]
		 Successful, latency: 2.02

-----MMX_PACKUSWBrr-----
	MMX_PACKUSWBrr(1(Class<VR64>) -> 0(Class<VR64>))  [2.03;2.03]
		 Successful, latency: 2.03
	MMX_PACKUSWBrr(2(Class<VR64>) -> 0(Class<VR64>))  [2.02;2.02]
		 Successful, latency: 2.02

-----MMX_PADDBrr-----
	MMX_PADDBrr(1(Class<VR64>) -> 0(Class<VR64>))  [1;1]
		 Successful, latency: 1
	MMX_PADDBrr(2(Class<VR64>) -> 0(Class<VR64>))  [1;1]
		 Successful, latency: 1

-----MMX_PADDDrr-----
	MMX_PADDDrr(1(Class<VR64>) -> 0(Class<VR64>))  [1.01;1.01]
		 Successful, latency: 1.01
	MMX_PADDDrr(2(Class<VR64>) -> 0(Class<VR64>))  [1.02;1.02]
		 Successful, latency: 1.02

-----MMX_PADDQrr-----
	MMX_PADDQrr(1(Class<VR64>) -> 0(Class<VR64>))  [1.01;1.01]
		 Successful, latency: 1.01
	MMX_PADDQrr(2(Class<VR64>) -> 0(Class<VR64>))  [1;1]
		 Successful, latency: 1

-----MMX_PADDSBrr-----
	MMX_PADDSBrr(1(Class<VR64>) -> 0(Class<VR64>))  [2.02;2.02]
		 Successful, latency: 2.02
	MMX_PADDSBrr(2(Class<VR64>) -> 0(Class<VR64>))  [2.01;2.01]
		 Successful, latency: 2.01

-----MMX_PADDSWrr-----
	MMX_PADDSWrr(1(Class<VR64>) -> 0(Class<VR64>))  [2.01;2.01]
		 Successful, latency: 2.01
	MMX_PADDSWrr(2(Class<VR64>) -> 0(Class<VR64>))  [2.02;2.02]
		 Successful, latency: 2.02

-----MMX_PADDUSBrr-----
	MMX_PADDUSBrr(1(Class<VR64>) -> 0(Class<VR64>))  [2.02;2.02]
		 Successful, latency: 2.02
	MMX_PADDUSBrr(2(Class<VR64>) -> 0(Class<VR64>))  [2.02;2.02]
		 Successful, latency: 2.02

-----MMX_PADDUSWrr-----
	MMX_PADDUSWrr(1(Class<VR64>) -> 0(Class<VR64>))  [2.02;2.02]
		 Successful, latency: 2.02
	MMX_PADDUSWrr(2(Class<VR64>) -> 0(Class<VR64>))  [2.02;2.02]
		 Successful, latency: 2.02

-----MMX_PADDWrr-----
	MMX_PADDWrr(1(Class<VR64>) -> 0(Class<VR64>))  [1.02;1.02]
		 Successful, latency: 1.02
	MMX_PADDWrr(2(Class<VR64>) -> 0(Class<VR64>))  [0.999;0.999]
		 Successful, latency: 0.999

-----MMX_PALIGNRrri-----
	MMX_PALIGNRrri(1(Class<VR64>) -> 0(Class<VR64>))  [2.01;2.01]
		 Successful, latency: 2.01
	MMX_PALIGNRrri(2(Class<VR64>) -> 0(Class<VR64>))  [2.03;2.03]
		 Successful, latency: 2.03

-----MMX_PANDNrr-----
	MMX_PANDNrr(1(Class<VR64>) -> 0(Class<VR64>))  [1.01;1.01]
		 Successful, latency: 1.01
	MMX_PANDNrr(2(Class<VR64>) -> 0(Class<VR64>))  [0.25;0.25]
		 Successful, latency: 0.25

-----MMX_PANDrr-----
	MMX_PANDrr(1(Class<VR64>) -> 0(Class<VR64>))  [1.01;1.01]
		 Successful, latency: 1.01
	MMX_PANDrr(2(Class<VR64>) -> 0(Class<VR64>))  [1;1]
		 Successful, latency: 1

-----MMX_PAVGBrr-----
	MMX_PAVGBrr(1(Class<VR64>) -> 0(Class<VR64>))  [2.02;2.02]
		 Successful, latency: 2.02
	MMX_PAVGBrr(2(Class<VR64>) -> 0(Class<VR64>))  [2.02;2.02]
		 Successful, latency: 2.02

-----MMX_PAVGWrr-----
	MMX_PAVGWrr(1(Class<VR64>) -> 0(Class<VR64>))  [2.02;2.02]
		 Successful, latency: 2.02
	MMX_PAVGWrr(2(Class<VR64>) -> 0(Class<VR64>))  [2.02;2.02]
		 Successful, latency: 2.02

-----MMX_PCMPEQBrr-----
	MMX_PCMPEQBrr(1(Class<VR64>) -> 0(Class<VR64>))  [1;1]
		 Successful, latency: 1
	MMX_PCMPEQBrr(2(Class<VR64>) -> 0(Class<VR64>))  [0.25;0.25]
		 Successful, latency: 0.25

-----MMX_PCMPEQDrr-----
	MMX_PCMPEQDrr(1(Class<VR64>) -> 0(Class<VR64>))  [1.01;1.01]
		 Successful, latency: 1.01
	MMX_PCMPEQDrr(2(Class<VR64>) -> 0(Class<VR64>))  [0.25;0.25]
		 Successful, latency: 0.25

-----MMX_PCMPEQWrr-----
	MMX_PCMPEQWrr(1(Class<VR64>) -> 0(Class<VR64>))  [1.01;1.01]
		 Successful, latency: 1.01
	MMX_PCMPEQWrr(2(Class<VR64>) -> 0(Class<VR64>))  [0.25;0.25]
		 Successful, latency: 0.25

-----MMX_PCMPGTBrr-----
	MMX_PCMPGTBrr(1(Class<VR64>) -> 0(Class<VR64>))  [1;1]
		 Successful, latency: 1
	MMX_PCMPGTBrr(2(Class<VR64>) -> 0(Class<VR64>))  [0.25;0.25]
		 Successful, latency: 0.25

-----MMX_PCMPGTDrr-----
	MMX_PCMPGTDrr(1(Class<VR64>) -> 0(Class<VR64>))  [1.01;1.01]
		 Successful, latency: 1.01
	MMX_PCMPGTDrr(2(Class<VR64>) -> 0(Class<VR64>))  [0.25;0.25]
		 Successful, latency: 0.25

-----MMX_PCMPGTWrr-----
	MMX_PCMPGTWrr(1(Class<VR64>) -> 0(Class<VR64>))  [0.998;0.998]
		 Successful, latency: 0.998
	MMX_PCMPGTWrr(2(Class<VR64>) -> 0(Class<VR64>))  [0.25;0.25]
		 Successful, latency: 0.25

-----MMX_PEXTRWrri-----
	MMX_PEXTRWrri(1(Class<VR64>) -> 0(Class<GR32>))  [2.04;7.08]
		Dependencies:
			MMX_PMOVMSKBrr(1(Class<VR64>) -> 0(Class<GR32>)) 
			MMX_PINSRWrri(2(Class<GR32>) -> 0(Class<VR64>)) 
		Combined result: 8.08 cycles

-----MMX_PHADDDrr-----
	MMX_PHADDDrr(1(Class<VR64>) -> 0(Class<VR64>))  [2.02;2.02]
		 Successful, latency: 2.02
	MMX_PHADDDrr(2(Class<VR64>) -> 0(Class<VR64>))  [2.02;2.02]
		 Successful, latency: 2.02

-----MMX_PHADDSWrr-----
	MMX_PHADDSWrr(1(Class<VR64>) -> 0(Class<VR64>))  [3.05;3.05]
		 Successful, latency: 3.05
	MMX_PHADDSWrr(2(Class<VR64>) -> 0(Class<VR64>))  [3.02;3.02]
		 Successful, latency: 3.02

-----MMX_PHADDWrr-----
	MMX_PHADDWrr(1(Class<VR64>) -> 0(Class<VR64>))  [2.02;2.02]
		 Successful, latency: 2.02
	MMX_PHADDWrr(2(Class<VR64>) -> 0(Class<VR64>))  [2.02;2.02]
		 Successful, latency: 2.02

-----MMX_PHSUBDrr-----
	MMX_PHSUBDrr(1(Class<VR64>) -> 0(Class<VR64>))  [2.03;2.03]
		 Successful, latency: 2.03
	MMX_PHSUBDrr(2(Class<VR64>) -> 0(Class<VR64>))  [2.02;2.02]
		 Successful, latency: 2.02

-----MMX_PHSUBSWrr-----
	MMX_PHSUBSWrr(1(Class<VR64>) -> 0(Class<VR64>))  [3.03;3.03]
		 Successful, latency: 3.03
	MMX_PHSUBSWrr(2(Class<VR64>) -> 0(Class<VR64>))  [3.04;3.04]
		 Successful, latency: 3.04

-----MMX_PHSUBWrr-----
	MMX_PHSUBWrr(1(Class<VR64>) -> 0(Class<VR64>))  [2.02;2.02]
		 Successful, latency: 2.02
	MMX_PHSUBWrr(2(Class<VR64>) -> 0(Class<VR64>))  [2.02;2.02]
		 Successful, latency: 2.02

-----MMX_PINSRWrri-----
	MMX_PINSRWrri(1(Class<VR64>) -> 0(Class<VR64>))  [0.772;0.772]
		 Successful, latency: 0.772
	MMX_PINSRWrri(2(Class<GR32>) -> 0(Class<VR64>))  [1.01;6.05]
		Dependencies:
			MMX_PMOVMSKBrr(1(Class<VR64>) -> 0(Class<GR32>)) 
			MMX_PINSRWrri(2(Class<GR32>) -> 0(Class<VR64>)) 
		Combined result: 7.06 cycles

-----MMX_PMADDUBSWrr-----
	MMX_PMADDUBSWrr(1(Class<VR64>) -> 0(Class<VR64>))  [3.02;3.02]
		 Successful, latency: 3.02
	MMX_PMADDUBSWrr(2(Class<VR64>) -> 0(Class<VR64>))  [3.03;3.03]
		 Successful, latency: 3.03

-----MMX_PMADDWDrr-----
	MMX_PMADDWDrr(1(Class<VR64>) -> 0(Class<VR64>))  [3.02;3.02]
		 Successful, latency: 3.02
	MMX_PMADDWDrr(2(Class<VR64>) -> 0(Class<VR64>))  [3.02;3.02]
		 Successful, latency: 3.02

-----MMX_PMAXSWrr-----
	MMX_PMAXSWrr(1(Class<VR64>) -> 0(Class<VR64>))  [1.01;1.01]
		 Successful, latency: 1.01
	MMX_PMAXSWrr(2(Class<VR64>) -> 0(Class<VR64>))  [1.01;1.01]
		 Successful, latency: 1.01

-----MMX_PMAXUBrr-----
	MMX_PMAXUBrr(1(Class<VR64>) -> 0(Class<VR64>))  [1.01;1.01]
		 Successful, latency: 1.01
	MMX_PMAXUBrr(2(Class<VR64>) -> 0(Class<VR64>))  [1;1]
		 Successful, latency: 1

-----MMX_PMINSWrr-----
	MMX_PMINSWrr(1(Class<VR64>) -> 0(Class<VR64>))  [1.01;1.01]
		 Successful, latency: 1.01
	MMX_PMINSWrr(2(Class<VR64>) -> 0(Class<VR64>))  [1.01;1.01]
		 Successful, latency: 1.01

-----MMX_PMINUBrr-----
	MMX_PMINUBrr(1(Class<VR64>) -> 0(Class<VR64>))  [1.01;1.01]
		 Successful, latency: 1.01
	MMX_PMINUBrr(2(Class<VR64>) -> 0(Class<VR64>))  [1;1]
		 Successful, latency: 1

-----MMX_PMOVMSKBrr-----
	MMX_PMOVMSKBrr(1(Class<VR64>) -> 0(Class<GR32>))  [1.01;6.05]
		Dependencies:
			MMX_PMOVMSKBrr(1(Class<VR64>) -> 0(Class<GR32>)) 
			MMX_PINSRWrri(2(Class<GR32>) -> 0(Class<VR64>)) 
		Combined result: 7.05 cycles

-----MMX_PMULHRSWrr-----
	MMX_PMULHRSWrr(1(Class<VR64>) -> 0(Class<VR64>))  [3.04;3.04]
		 Successful, latency: 3.04
	MMX_PMULHRSWrr(2(Class<VR64>) -> 0(Class<VR64>))  [3.02;3.02]
		 Successful, latency: 3.02

-----MMX_PMULHUWrr-----
	MMX_PMULHUWrr(1(Class<VR64>) -> 0(Class<VR64>))  [3.03;3.03]
		 Successful, latency: 3.03
	MMX_PMULHUWrr(2(Class<VR64>) -> 0(Class<VR64>))  [3.02;3.02]
		 Successful, latency: 3.02

-----MMX_PMULHWrr-----
	MMX_PMULHWrr(1(Class<VR64>) -> 0(Class<VR64>))  [3.03;3.03]
		 Successful, latency: 3.03
	MMX_PMULHWrr(2(Class<VR64>) -> 0(Class<VR64>))  [3.04;3.04]
		 Successful, latency: 3.04

-----MMX_PMULLWrr-----
	MMX_PMULLWrr(1(Class<VR64>) -> 0(Class<VR64>))  [3.02;3.02]
		 Successful, latency: 3.02
	MMX_PMULLWrr(2(Class<VR64>) -> 0(Class<VR64>))  [3.03;3.03]
		 Successful, latency: 3.03

-----MMX_PMULUDQrr-----
	MMX_PMULUDQrr(1(Class<VR64>) -> 0(Class<VR64>))  [3.03;3.03]
		 Successful, latency: 3.03
	MMX_PMULUDQrr(2(Class<VR64>) -> 0(Class<VR64>))  [3.01;3.01]
		 Successful, latency: 3.01

-----MMX_PORrr-----
	MMX_PORrr(1(Class<VR64>) -> 0(Class<VR64>))  [0.999;0.999]
		 Successful, latency: 0.999
	MMX_PORrr(2(Class<VR64>) -> 0(Class<VR64>))  [1.02;1.02]
		 Successful, latency: 1.02

-----MMX_PSADBWrr-----
	MMX_PSADBWrr(1(Class<VR64>) -> 0(Class<VR64>))  [3.03;3.03]
		 Successful, latency: 3.03
	MMX_PSADBWrr(2(Class<VR64>) -> 0(Class<VR64>))  [3.04;3.04]
		 Successful, latency: 3.04

-----MMX_PSHUFBrr-----
	MMX_PSHUFBrr(1(Class<VR64>) -> 0(Class<VR64>))  [2.01;2.01]
		 Successful, latency: 2.01
	MMX_PSHUFBrr(2(Class<VR64>) -> 0(Class<VR64>))  [2.03;2.03]
		 Successful, latency: 2.03

-----MMX_PSHUFWri-----
	MMX_PSHUFWri(1(Class<VR64>) -> 0(Class<VR64>))  [1.01;1.01]
		 Successful, latency: 1.01

-----MMX_PSIGNBrr-----
	MMX_PSIGNBrr(1(Class<VR64>) -> 0(Class<VR64>))  [2.02;2.02]
		 Successful, latency: 2.02
	MMX_PSIGNBrr(2(Class<VR64>) -> 0(Class<VR64>))  [2.02;2.02]
		 Successful, latency: 2.02

-----MMX_PSIGNDrr-----
	MMX_PSIGNDrr(1(Class<VR64>) -> 0(Class<VR64>))  [2.01;2.01]
		 Successful, latency: 2.01
	MMX_PSIGNDrr(2(Class<VR64>) -> 0(Class<VR64>))  [2.01;2.01]
		 Successful, latency: 2.01

-----MMX_PSIGNWrr-----
	MMX_PSIGNWrr(1(Class<VR64>) -> 0(Class<VR64>))  [2.03;2.03]
		 Successful, latency: 2.03
	MMX_PSIGNWrr(2(Class<VR64>) -> 0(Class<VR64>))  [2.02;2.02]
		 Successful, latency: 2.02

-----MMX_PSLLDri-----
	MMX_PSLLDri(1(Class<VR64>) -> 0(Class<VR64>))  [1;1]
		 Successful, latency: 1

-----MMX_PSLLDrr-----
	MMX_PSLLDrr(1(Class<VR64>) -> 0(Class<VR64>))  [2.01;2.01]
		 Successful, latency: 2.01
	MMX_PSLLDrr(2(Class<VR64>) -> 0(Class<VR64>))  [2.02;2.02]
		 Successful, latency: 2.02

-----MMX_PSLLQri-----
	MMX_PSLLQri(1(Class<VR64>) -> 0(Class<VR64>))  [1;1]
		 Successful, latency: 1

-----MMX_PSLLQrr-----
	MMX_PSLLQrr(1(Class<VR64>) -> 0(Class<VR64>))  [2.03;2.03]
		 Successful, latency: 2.03
	MMX_PSLLQrr(2(Class<VR64>) -> 0(Class<VR64>))  [2.02;2.02]
		 Successful, latency: 2.02

-----MMX_PSLLWri-----
	MMX_PSLLWri(1(Class<VR64>) -> 0(Class<VR64>))  [1.01;1.01]
		 Successful, latency: 1.01

-----MMX_PSLLWrr-----
	MMX_PSLLWrr(1(Class<VR64>) -> 0(Class<VR64>))  [2.03;2.03]
		 Successful, latency: 2.03
	MMX_PSLLWrr(2(Class<VR64>) -> 0(Class<VR64>))  [2.01;2.01]
		 Successful, latency: 2.01

-----MMX_PSRADri-----
	MMX_PSRADri(1(Class<VR64>) -> 0(Class<VR64>))  [1.01;1.01]
		 Successful, latency: 1.01

-----MMX_PSRADrr-----
	MMX_PSRADrr(1(Class<VR64>) -> 0(Class<VR64>))  [2.01;2.01]
		 Successful, latency: 2.01
	MMX_PSRADrr(2(Class<VR64>) -> 0(Class<VR64>))  [2.02;2.02]
		 Successful, latency: 2.02

-----MMX_PSRAWri-----
	MMX_PSRAWri(1(Class<VR64>) -> 0(Class<VR64>))  [1.01;1.01]
		 Successful, latency: 1.01

-----MMX_PSRAWrr-----
	MMX_PSRAWrr(1(Class<VR64>) -> 0(Class<VR64>))  [2.02;2.02]
		 Successful, latency: 2.02
	MMX_PSRAWrr(2(Class<VR64>) -> 0(Class<VR64>))  [2.02;2.02]
		 Successful, latency: 2.02

-----MMX_PSRLDri-----
	MMX_PSRLDri(1(Class<VR64>) -> 0(Class<VR64>))  [1;1]
		 Successful, latency: 1

-----MMX_PSRLDrr-----
	MMX_PSRLDrr(1(Class<VR64>) -> 0(Class<VR64>))  [2;2]
		 Successful, latency: 2
	MMX_PSRLDrr(2(Class<VR64>) -> 0(Class<VR64>))  [2.02;2.02]
		 Successful, latency: 2.02

-----MMX_PSRLQri-----
	MMX_PSRLQri(1(Class<VR64>) -> 0(Class<VR64>))  [1.01;1.01]
		 Successful, latency: 1.01

-----MMX_PSRLQrr-----
	MMX_PSRLQrr(1(Class<VR64>) -> 0(Class<VR64>))  [2.01;2.01]
		 Successful, latency: 2.01
	MMX_PSRLQrr(2(Class<VR64>) -> 0(Class<VR64>))  [2.02;2.02]
		 Successful, latency: 2.02

-----MMX_PSRLWri-----
	MMX_PSRLWri(1(Class<VR64>) -> 0(Class<VR64>))  [1.01;1.01]
		 Successful, latency: 1.01

-----MMX_PSRLWrr-----
	MMX_PSRLWrr(1(Class<VR64>) -> 0(Class<VR64>))  [2.02;2.02]
		 Successful, latency: 2.02
	MMX_PSRLWrr(2(Class<VR64>) -> 0(Class<VR64>))  [2.02;2.02]
		 Successful, latency: 2.02

-----MMX_PSUBBrr-----
	MMX_PSUBBrr(1(Class<VR64>) -> 0(Class<VR64>))  [1;1]
		 Successful, latency: 1
	MMX_PSUBBrr(2(Class<VR64>) -> 0(Class<VR64>))  [0.25;0.25]
		 Successful, latency: 0.25

-----MMX_PSUBDrr-----
	MMX_PSUBDrr(1(Class<VR64>) -> 0(Class<VR64>))  [1.02;1.02]
		 Successful, latency: 1.02
	MMX_PSUBDrr(2(Class<VR64>) -> 0(Class<VR64>))  [0.25;0.25]
		 Successful, latency: 0.25

-----MMX_PSUBQrr-----
	MMX_PSUBQrr(1(Class<VR64>) -> 0(Class<VR64>))  [1.02;1.02]
		 Successful, latency: 1.02
	MMX_PSUBQrr(2(Class<VR64>) -> 0(Class<VR64>))  [0.249;0.249]
		 Successful, latency: 0.249

-----MMX_PSUBSBrr-----
	MMX_PSUBSBrr(1(Class<VR64>) -> 0(Class<VR64>))  [2.02;2.02]
		 Successful, latency: 2.02
	MMX_PSUBSBrr(2(Class<VR64>) -> 0(Class<VR64>))  [0.5;0.5]
		 Successful, latency: 0.5

-----MMX_PSUBSWrr-----
	MMX_PSUBSWrr(1(Class<VR64>) -> 0(Class<VR64>))  [2.02;2.02]
		 Successful, latency: 2.02
	MMX_PSUBSWrr(2(Class<VR64>) -> 0(Class<VR64>))  [0.51;0.51]
		 Successful, latency: 0.51

-----MMX_PSUBUSBrr-----
	MMX_PSUBUSBrr(1(Class<VR64>) -> 0(Class<VR64>))  [2.01;2.01]
		 Successful, latency: 2.01
	MMX_PSUBUSBrr(2(Class<VR64>) -> 0(Class<VR64>))  [0.5;0.5]
		 Successful, latency: 0.5

-----MMX_PSUBUSWrr-----
	MMX_PSUBUSWrr(1(Class<VR64>) -> 0(Class<VR64>))  [2.03;2.03]
		 Successful, latency: 2.03
	MMX_PSUBUSWrr(2(Class<VR64>) -> 0(Class<VR64>))  [0.5;0.5]
		 Successful, latency: 0.5

-----MMX_PSUBWrr-----
	MMX_PSUBWrr(1(Class<VR64>) -> 0(Class<VR64>))  [1.02;1.02]
		 Successful, latency: 1.02
	MMX_PSUBWrr(2(Class<VR64>) -> 0(Class<VR64>))  [0.25;0.25]
		 Successful, latency: 0.25

-----MMX_PUNPCKHBWrr-----
	MMX_PUNPCKHBWrr(1(Class<VR64>) -> 0(Class<VR64>))  [1;1]
		 Successful, latency: 1
	MMX_PUNPCKHBWrr(2(Class<VR64>) -> 0(Class<VR64>))  [1.02;1.02]
		 Successful, latency: 1.02

-----MMX_PUNPCKHDQrr-----
	MMX_PUNPCKHDQrr(1(Class<VR64>) -> 0(Class<VR64>))  [1.01;1.01]
		 Successful, latency: 1.01
	MMX_PUNPCKHDQrr(2(Class<VR64>) -> 0(Class<VR64>))  [1;1]
		 Successful, latency: 1

-----MMX_PUNPCKHWDrr-----
	MMX_PUNPCKHWDrr(1(Class<VR64>) -> 0(Class<VR64>))  [1.01;1.01]
		 Successful, latency: 1.01
	MMX_PUNPCKHWDrr(2(Class<VR64>) -> 0(Class<VR64>))  [1.01;1.01]
		 Successful, latency: 1.01

-----MMX_PUNPCKLBWrr-----
	MMX_PUNPCKLBWrr(1(Class<VR64>) -> 0(Class<VR64>))  [1.01;1.01]
		 Successful, latency: 1.01
	MMX_PUNPCKLBWrr(2(Class<VR64>) -> 0(Class<VR64>))  [1.01;1.01]
		 Successful, latency: 1.01

-----MMX_PUNPCKLDQrr-----
	MMX_PUNPCKLDQrr(1(Class<VR64>) -> 0(Class<VR64>))  [1.01;1.01]
		 Successful, latency: 1.01
	MMX_PUNPCKLDQrr(2(Class<VR64>) -> 0(Class<VR64>))  [1.02;1.02]
		 Successful, latency: 1.02

-----MMX_PUNPCKLWDrr-----
	MMX_PUNPCKLWDrr(1(Class<VR64>) -> 0(Class<VR64>))  [1.02;1.02]
		 Successful, latency: 1.02
	MMX_PUNPCKLWDrr(2(Class<VR64>) -> 0(Class<VR64>))  [1;1]
		 Successful, latency: 1

-----MMX_PXORrr-----
	MMX_PXORrr(1(Class<VR64>) -> 0(Class<VR64>))  [1;1]
		 Successful, latency: 1
	MMX_PXORrr(2(Class<VR64>) -> 0(Class<VR64>))  [0.25;0.25]
		 Successful, latency: 0.25

-----MONTMUL-----
	MONTMUL(impl(Reg<RAX>) -> impl(Reg<RAX>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	MONTMUL(impl(Reg<RSI>) -> impl(Reg<RSI>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----MOV16rr-----
	MOV16rr(1(Class<GR16>) -> 0(Class<GR16>))  [1;1]
		 Successful, latency: 1

-----MOV16rr_REV-----
	MOV16rr_REV(1(Class<GR16>) -> 0(Class<GR16>))  [1;1]
		 Successful, latency: 1

-----MOV16sr-----
	0x138383b7e290
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----MOV32rc-----
	0x138383b7e338
		ERROR_ASSEMBLY, this instruction cannot be measured on this platform

-----MOV32rd-----
	0x138383b7e370
		ERROR_ASSEMBLY, this instruction cannot be measured on this platform

-----MOV32rr-----
	MOV32rr(1(Class<GR32>) -> 0(Class<GR32>))  [0.168;0.168]
		 Successful, latency: 0.168

-----MOV32rr_REV-----
	MOV32rr_REV(1(Class<GR32>) -> 0(Class<GR32>))  [0.166;0.166]
		 Successful, latency: 0.166

-----MOV32sr-----
	0x138383b7e450
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----MOV64dr-----
	0x138383b7e4c0
		ERROR_SIGSEGV, this instruction cannot be measured on this platform

-----MOV64rc-----
	0x138383b7e4f8
		ERROR_SIGSEGV, this instruction cannot be measured on this platform

-----MOV64rr-----
	MOV64rr(1(Class<GR64>) -> 0(Class<GR64>))  [0.166;0.166]
		 Successful, latency: 0.166

-----MOV64rr_REV-----
	MOV64rr_REV(1(Class<GR64>) -> 0(Class<GR64>))  [0.168;0.168]
		 Successful, latency: 0.168

-----MOV64sr-----
	0x138383b7e610
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----MOV64toPQIrr-----
	MOV64toPQIrr(1(Class<GR64>) -> 0(Class<VR128>))  [2;6.04]
		Dependencies:
			MOVPQIto64rr(1(Class<VR128>) -> 0(Class<GR64>)) 
			VMOV64toPQIrr(1(Class<GR64>) -> 0(Class<VR128>)) 
		Combined result: 7.08 cycles

-----MOV64toSDrr-----
	MOV64toSDrr(1(Class<GR64>) -> 0(Class<FR64>))  [2.02;6.06]
		Dependencies:
			VMOVSDto64rr(1(Class<FR64>) -> 0(Class<GR64>)) 
			VMOV64toSDrr(1(Class<GR64>) -> 0(Class<FR64>)) 
		Combined result: 7.06 cycles

-----MOV8rr-----
	MOV8rr(1(Class<GR8>) -> 0(Class<GR8>))  [1;1]
		 Successful, latency: 1

-----MOV8rr_NOREX-----
	MOV8rr_NOREX(1(Class<GR8_NOREX>) -> 0(Class<GR8_NOREX>))  [1.02;1.02]
		 Successful, latency: 1.02

-----MOV8rr_REV-----
	MOV8rr_REV(1(Class<GR8>) -> 0(Class<GR8>))  [1;1]
		 Successful, latency: 1

-----MOVAPDrr-----
	MOVAPDrr(1(Class<VR128>) -> 0(Class<VR128>))  [0.168;0.168]
		 Successful, latency: 0.168

-----MOVAPDrr_REV-----
	MOVAPDrr_REV(1(Class<VR128>) -> 0(Class<VR128>))  [0.168;0.168]
		 Successful, latency: 0.168

-----MOVAPSrr-----
	MOVAPSrr(1(Class<VR128>) -> 0(Class<VR128>))  [0.168;0.168]
		 Successful, latency: 0.168

-----MOVAPSrr_REV-----
	MOVAPSrr_REV(1(Class<VR128>) -> 0(Class<VR128>))  [0.166;0.166]
		 Successful, latency: 0.166

-----MOVBE16rr-----
	MOVBE16rr(1(Class<GR16>) -> 0(Class<GR16>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----MOVBE16rr_REV-----
	MOVBE16rr_REV(1(Class<GR16>) -> 0(Class<GR16>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----MOVBE32rr-----
	MOVBE32rr(1(Class<GR32>) -> 0(Class<GR32>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----MOVBE32rr_REV-----
	MOVBE32rr_REV(1(Class<GR32>) -> 0(Class<GR32>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----MOVBE64rr-----
	MOVBE64rr(1(Class<GR64>) -> 0(Class<GR64>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----MOVBE64rr_REV-----
	MOVBE64rr_REV(1(Class<GR64>) -> 0(Class<GR64>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----MOVDDUPrr-----
	MOVDDUPrr(1(Class<VR128>) -> 0(Class<VR128>))  [1.01;1.01]
		 Successful, latency: 1.01

-----MOVDI2PDIrr-----
	MOVDI2PDIrr(1(Class<GR32>) -> 0(Class<VR128>))  [2.02;6.05]
		Dependencies:
			MOVMSKPSrr(1(Class<VR128>) -> 0(Class<GR32>)) 
			VMOVDI2PDIrr(1(Class<GR32>) -> 0(Class<VR128>)) 
		Combined result: 7.08 cycles

-----MOVDI2SSrr-----
	MOVDI2SSrr(1(Class<GR32>) -> 0(Class<FR32>))  [1.96;6.02]
		Dependencies:
			VMOVSS2DIrr(1(Class<FR32>) -> 0(Class<GR32>)) 
			VMOVDI2SSrr(1(Class<GR32>) -> 0(Class<FR32>)) 
		Combined result: 7.06 cycles

-----MOVDQArr-----
	MOVDQArr(1(Class<VR128>) -> 0(Class<VR128>))  [0.166;0.166]
		 Successful, latency: 0.166

-----MOVDQArr_REV-----
	MOVDQArr_REV(1(Class<VR128>) -> 0(Class<VR128>))  [0.168;0.168]
		 Successful, latency: 0.168

-----MOVDQUrr-----
	MOVDQUrr(1(Class<VR128>) -> 0(Class<VR128>))  [0.166;0.166]
		 Successful, latency: 0.166

-----MOVDQUrr_REV-----
	MOVDQUrr_REV(1(Class<VR128>) -> 0(Class<VR128>))  [0.166;0.166]
		 Successful, latency: 0.166

-----MOVHLPSrr-----
	MOVHLPSrr(1(Class<VR128>) -> 0(Class<VR128>))  [1.01;1.01]
		 Successful, latency: 1.01
	MOVHLPSrr(2(Class<VR128>) -> 0(Class<VR128>))  [1;1]
		 Successful, latency: 1

-----MOVLHPSrr-----
	MOVLHPSrr(1(Class<VR128>) -> 0(Class<VR128>))  [1.01;1.01]
		 Successful, latency: 1.01
	MOVLHPSrr(2(Class<VR128>) -> 0(Class<VR128>))  [1.01;1.01]
		 Successful, latency: 1.01

-----MOVMSKPDrr-----
	MOVMSKPDrr(1(Class<VR128>) -> 0(Class<GR32>))  [1.01;5.05]
		Dependencies:
			MOVMSKPSrr(1(Class<VR128>) -> 0(Class<GR32>)) 
			VMOVDI2PDIrr(1(Class<GR32>) -> 0(Class<VR128>)) 
		Combined result: 6.05 cycles

-----MOVMSKPSrr-----
	MOVMSKPSrr(1(Class<VR128>) -> 0(Class<GR32>))  [1.02;5.06]
		Dependencies:
			MOVMSKPSrr(1(Class<VR128>) -> 0(Class<GR32>)) 
			VMOVDI2PDIrr(1(Class<GR32>) -> 0(Class<VR128>)) 
		Combined result: 6.06 cycles

-----MOVPDI2DIrr-----
	MOVPDI2DIrr(1(Class<VR128>) -> 0(Class<GR32>))  [0.99;5.03]
		Dependencies:
			MOVMSKPSrr(1(Class<VR128>) -> 0(Class<GR32>)) 
			VMOVDI2PDIrr(1(Class<GR32>) -> 0(Class<VR128>)) 
		Combined result: 6.03 cycles

-----MOVPQI2QIrr-----
	MOVPQI2QIrr(1(Class<VR128>) -> 0(Class<VR128>))  [1.02;1.02]
		 Successful, latency: 1.02

-----MOVPQIto64rr-----
	MOVPQIto64rr(1(Class<VR128>) -> 0(Class<GR64>))  [1.03;5.07]
		Dependencies:
			MOVPQIto64rr(1(Class<VR128>) -> 0(Class<GR64>)) 
			VMOV64toPQIrr(1(Class<GR64>) -> 0(Class<VR128>)) 
		Combined result: 6.07 cycles

-----MOVSB-----
	MOVSB(impl(Reg<EDI>) -> impl(Reg<EDI>))  [SKIP_MEMORY_OPERAND]
		SKIP_MEMORY_OPERAND, this instruction cannot be measured on this platform
	MOVSB(impl(Reg<ESI>) -> impl(Reg<ESI>))  [SKIP_MEMORY_OPERAND]
		SKIP_MEMORY_OPERAND, this instruction cannot be measured on this platform

-----MOVSDrr-----
	MOVSDrr(1(Class<VR128>) -> 0(Class<VR128>))  [1;1]
		 Successful, latency: 1
	MOVSDrr(2(Class<VR128>) -> 0(Class<VR128>))  [1.02;1.02]
		 Successful, latency: 1.02

-----MOVSDrr_REV-----
	MOVSDrr_REV(1(Class<VR128>) -> 0(Class<VR128>))  [1.01;1.01]
		 Successful, latency: 1.01
	MOVSDrr_REV(2(Class<VR128>) -> 0(Class<VR128>))  [1.01;1.01]
		 Successful, latency: 1.01

-----MOVSDto64rr-----
	MOVSDto64rr(1(Class<FR64>) -> 0(Class<GR64>))  [1.02;5.06]
		Dependencies:
			VMOVSDto64rr(1(Class<FR64>) -> 0(Class<GR64>)) 
			VMOV64toSDrr(1(Class<GR64>) -> 0(Class<FR64>)) 
		Combined result: 6.06 cycles

-----MOVSHDUPrr-----
	MOVSHDUPrr(1(Class<VR128>) -> 0(Class<VR128>))  [1.01;1.01]
		 Successful, latency: 1.01

-----MOVSL-----
	MOVSL(impl(Reg<EDI>) -> impl(Reg<EDI>))  [SKIP_MEMORY_OPERAND]
		SKIP_MEMORY_OPERAND, this instruction cannot be measured on this platform
	MOVSL(impl(Reg<ESI>) -> impl(Reg<ESI>))  [SKIP_MEMORY_OPERAND]
		SKIP_MEMORY_OPERAND, this instruction cannot be measured on this platform

-----MOVSLDUPrr-----
	MOVSLDUPrr(1(Class<VR128>) -> 0(Class<VR128>))  [1;1]
		 Successful, latency: 1

-----MOVSQ-----
	MOVSQ(impl(Reg<EDI>) -> impl(Reg<EDI>))  [SKIP_MEMORY_OPERAND]
		SKIP_MEMORY_OPERAND, this instruction cannot be measured on this platform
	MOVSQ(impl(Reg<ESI>) -> impl(Reg<ESI>))  [SKIP_MEMORY_OPERAND]
		SKIP_MEMORY_OPERAND, this instruction cannot be measured on this platform

-----MOVSS2DIrr-----
	MOVSS2DIrr(1(Class<FR32>) -> 0(Class<GR32>))  [0.99;5.04]
		Dependencies:
			VMOVSS2DIrr(1(Class<FR32>) -> 0(Class<GR32>)) 
			VMOVDI2SSrr(1(Class<GR32>) -> 0(Class<FR32>)) 
		Combined result: 6.04 cycles

-----MOVSSrr-----
	MOVSSrr(1(Class<VR128>) -> 0(Class<VR128>))  [1.01;1.01]
		 Successful, latency: 1.01
	MOVSSrr(2(Class<VR128>) -> 0(Class<VR128>))  [1;1]
		 Successful, latency: 1

-----MOVSSrr_REV-----
	MOVSSrr_REV(1(Class<VR128>) -> 0(Class<VR128>))  [1;1]
		 Successful, latency: 1
	MOVSSrr_REV(2(Class<VR128>) -> 0(Class<VR128>))  [1.01;1.01]
		 Successful, latency: 1.01

-----MOVSW-----
	MOVSW(impl(Reg<EDI>) -> impl(Reg<EDI>))  [SKIP_MEMORY_OPERAND]
		SKIP_MEMORY_OPERAND, this instruction cannot be measured on this platform
	MOVSW(impl(Reg<ESI>) -> impl(Reg<ESI>))  [SKIP_MEMORY_OPERAND]
		SKIP_MEMORY_OPERAND, this instruction cannot be measured on this platform

-----MOVSX16rr16-----
	MOVSX16rr16(1(Class<GR16>) -> 0(Class<GR16>))  [ERROR_ASSEMBLY]
		ERROR_ASSEMBLY, this instruction cannot be measured on this platform

-----MOVSX16rr32-----
	0x138383b7f528
		ERROR_ASSEMBLY, this instruction cannot be measured on this platform

-----MOVSX32rr32-----
	MOVSX32rr32(1(Class<GR32>) -> 0(Class<GR32>))  [ERROR_ASSEMBLY]
		ERROR_ASSEMBLY, this instruction cannot be measured on this platform

-----MOVUPDrr-----
	MOVUPDrr(1(Class<VR128>) -> 0(Class<VR128>))  [0.168;0.168]
		 Successful, latency: 0.168

-----MOVUPDrr_REV-----
	MOVUPDrr_REV(1(Class<VR128>) -> 0(Class<VR128>))  [0.166;0.166]
		 Successful, latency: 0.166

-----MOVUPSrr-----
	MOVUPSrr(1(Class<VR128>) -> 0(Class<VR128>))  [0.165;0.165]
		 Successful, latency: 0.165

-----MOVUPSrr_REV-----
	MOVUPSrr_REV(1(Class<VR128>) -> 0(Class<VR128>))  [0.168;0.168]
		 Successful, latency: 0.168

-----MOVZPQILo2PQIrr-----
	MOVZPQILo2PQIrr(1(Class<VR128>) -> 0(Class<VR128>))  [1.01;1.01]
		 Successful, latency: 1.01

-----MOVZX16rr16-----
	MOVZX16rr16(1(Class<GR16>) -> 0(Class<GR16>))  [ERROR_ASSEMBLY]
		ERROR_ASSEMBLY, this instruction cannot be measured on this platform

-----MPSADBWrri-----
	MPSADBWrri(1(Class<VR128>) -> 0(Class<VR128>))  [5.06;5.06]
		 Successful, latency: 5.06
	MPSADBWrri(2(Class<VR128>) -> 0(Class<VR128>))  [5.47;5.47]
		 Successful, latency: 5.47

-----MUL16r-----
	MUL16r(impl(Reg<AX>) -> impl(Reg<AX>))  [3.04;3.04]
		 Successful, latency: 3.04
	MUL16r(0(Class<GR16>) -> impl(Reg<AX>))  [0.975;2.01]
		Dependencies:
			XCHG16ar(impl(Reg<AX>) -> 0(Class<GR16>)) 
			MUL16r(0(Class<GR16>) -> impl(Reg<AX>)) 
		Combined result: 3.02 cycles
	MUL16r(0(Class<GR16>) -> impl(Reg<EFLAGS>))  [3.07;3.08]
		Dependencies:
			ADC16rr(impl(Reg<EFLAGS>) -> 0(Class<GR16>)) 
			ADC16ri(1(Class<GR16>) -> impl(Reg<EFLAGS>)) 
		Combined result: 4.08 cycles
	MUL16r(impl(Reg<AX>) -> impl(Reg<EFLAGS>))  [3.01;3.02]
		Dependencies:
			ADC16i16(impl(Reg<EFLAGS>) -> impl(Reg<AX>)) 
			ADC16i16(impl(Reg<AX>) -> impl(Reg<EFLAGS>)) 
		Combined result: 4.03 cycles

-----MUL16r_EVEX-----
	MUL16r_EVEX(impl(Reg<AX>) -> impl(Reg<AX>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----MUL16r_NF-----
	MUL16r_NF(impl(Reg<AX>) -> impl(Reg<AX>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----MUL32r-----
	MUL32r(impl(Reg<EAX>) -> impl(Reg<EAX>))  [3.03;3.03]
		 Successful, latency: 3.03
	MUL32r(0(Class<GR32>) -> impl(Reg<EAX>))  [0.965;1.98]
		Dependencies:
			XCHG32ar(impl(Reg<EAX>) -> 0(Class<GR32>)) 
			MUL32r(0(Class<GR32>) -> impl(Reg<EAX>)) 
		Combined result: 3.03 cycles
	MUL32r(0(Class<GR32>) -> impl(Reg<EDX>))  [1;6.05]
		Dependencies:
			MULX32rr(impl(Reg<EDX>) -> 1(Class<GR32>)) 
			MUL32r(0(Class<GR32>) -> impl(Reg<EDX>)) 
		Combined result: 7.04 cycles
	MUL32r(0(Class<GR32>) -> impl(Reg<EFLAGS>))  [ERROR_UNUSUAL_LATENCY]
		Dependencies:
			ADC32ri8(impl(Reg<EFLAGS>) -> 0(Class<GR32>)) 
			ADC32ri(1(Class<GR32>) -> impl(Reg<EFLAGS>)) 
		Combined result: 4.38 cycles
	MUL32r(impl(Reg<EAX>) -> impl(Reg<EFLAGS>))  [ERROR_UNUSUAL_LATENCY]
		Dependencies:
			ADC32i32(impl(Reg<EFLAGS>) -> impl(Reg<EAX>)) 
			ADC32i32(impl(Reg<EAX>) -> impl(Reg<EFLAGS>)) 
		Combined result: 4.36 cycles

-----MUL32r_EVEX-----
	MUL32r_EVEX(impl(Reg<EAX>) -> impl(Reg<EAX>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----MUL32r_NF-----
	MUL32r_NF(impl(Reg<EAX>) -> impl(Reg<EAX>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----MUL64r-----
	MUL64r(impl(Reg<RAX>) -> impl(Reg<RAX>))  [3.02;3.02]
		 Successful, latency: 3.02
	MUL64r(0(Class<GR64>) -> impl(Reg<EFLAGS>))  [ERROR_UNUSUAL_LATENCY]
		Dependencies:
			ADC64rr(impl(Reg<EFLAGS>) -> 0(Class<GR64>)) 
			ADC64ri32(1(Class<GR64>) -> impl(Reg<EFLAGS>)) 
		Combined result: 4.37 cycles
	MUL64r(0(Class<GR64>) -> impl(Reg<RAX>))  [0.987;2.02]
		Dependencies:
			XCHG64ar(impl(Reg<RAX>) -> 0(Class<GR64>)) 
			CMPXCHG64rr(1(Class<GR64>) -> impl(Reg<RAX>)) 
		Combined result: 3.02 cycles
	MUL64r(0(Class<GR64>) -> impl(Reg<RDX>))  [1.01;6.06]
		Dependencies:
			MULX64rr(impl(Reg<RDX>) -> 1(Class<GR64>)) 
			MUL64r(0(Class<GR64>) -> impl(Reg<RDX>)) 
		Combined result: 7.06 cycles
	MUL64r(impl(Reg<RAX>) -> impl(Reg<EFLAGS>))  [3.36;3.38]
		Dependencies:
			CMP64i32(impl(Reg<RAX>) -> impl(Reg<EFLAGS>)) 
			ADC64i32(impl(Reg<EFLAGS>) -> impl(Reg<RAX>)) 
		Combined result: 4.38 cycles

-----MUL64r_EVEX-----
	MUL64r_EVEX(impl(Reg<RAX>) -> impl(Reg<RAX>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----MUL64r_NF-----
	MUL64r_NF(impl(Reg<RAX>) -> impl(Reg<RAX>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----MUL8r-----
	MUL8r(impl(Reg<AL>) -> impl(Reg<AL>))  [3.06;3.06]
		 Successful, latency: 3.06
	MUL8r(0(Class<GR8>) -> impl(Reg<AL>))  [1.02;5.06]
		Dependencies:
			CMPXCHG8rr(impl(Reg<AL>) -> 0(Class<GR8>)) 
			CMPXCHG8rr(1(Class<GR8>) -> impl(Reg<AL>)) 
		Combined result: 6.07 cycles
	MUL8r(0(Class<GR8>) -> impl(Reg<EFLAGS>))  [3.01;3.03]
		Dependencies:
			ADC8ri8(impl(Reg<EFLAGS>) -> 0(Class<GR8>)) 
			ADC8ri(1(Class<GR8>) -> impl(Reg<EFLAGS>)) 
		Combined result: 4.03 cycles
	MUL8r(impl(Reg<AL>) -> impl(Reg<EFLAGS>))  [3.01;3.03]
		Dependencies:
			ADC8i8(impl(Reg<EFLAGS>) -> impl(Reg<AL>)) 
			CMP8i8(impl(Reg<AL>) -> impl(Reg<EFLAGS>)) 
		Combined result: 4.03 cycles

-----MUL8r_EVEX-----
	MUL8r_EVEX(impl(Reg<AL>) -> impl(Reg<AL>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----MUL8r_NF-----
	MUL8r_NF(impl(Reg<AL>) -> impl(Reg<AL>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----MULPDrr-----
	MULPDrr(1(Class<VR128>) -> 0(Class<VR128>))  [4.3;4.3]
		 Successful, latency: 4.3
	MULPDrr(2(Class<VR128>) -> 0(Class<VR128>))  [3.03;3.03]
		 Successful, latency: 3.03

-----MULPSrr-----
	MULPSrr(1(Class<VR128>) -> 0(Class<VR128>))  [4.59;4.59]
		 Successful, latency: 4.59
	MULPSrr(2(Class<VR128>) -> 0(Class<VR128>))  [3.03;3.03]
		 Successful, latency: 3.03

-----MULSDrr-----
	MULSDrr(1(Class<FR64>) -> 0(Class<FR64>))  [4.3;4.3]
		 Successful, latency: 4.3
	MULSDrr(2(Class<FR64>) -> 0(Class<FR64>))  [3.04;3.04]
		 Successful, latency: 3.04

-----MULSDrr_Int-----
	MULSDrr_Int(1(Class<VR128>) -> 0(Class<VR128>))  [4.28;4.28]
		 Successful, latency: 4.28
	MULSDrr_Int(2(Class<VR128>) -> 0(Class<VR128>))  [3.04;3.04]
		 Successful, latency: 3.04

-----MULSSrr-----
	MULSSrr(1(Class<FR32>) -> 0(Class<FR32>))  [4.6;4.6]
		 Successful, latency: 4.6
	MULSSrr(2(Class<FR32>) -> 0(Class<FR32>))  [3.06;3.06]
		 Successful, latency: 3.06

-----MULSSrr_Int-----
	MULSSrr_Int(1(Class<VR128>) -> 0(Class<VR128>))  [4.25;4.25]
		 Successful, latency: 4.25
	MULSSrr_Int(2(Class<VR128>) -> 0(Class<VR128>))  [3.05;3.05]
		 Successful, latency: 3.05

-----MULX32rr-----
	MULX32rr(2(Class<GR32>) -> 0(Class<GR32>))  [4.03;4.03]
		 Successful, latency: 4.03
	MULX32rr(2(Class<GR32>) -> 1(Class<GR32>))  [3.03;3.03]
		 Successful, latency: 3.03
	MULX32rr(impl(Reg<EDX>) -> 0(Class<GR32>))  [2.02;7.07]
		Dependencies:
			MULX32rr(impl(Reg<EDX>) -> 1(Class<GR32>)) 
			MUL32r(0(Class<GR32>) -> impl(Reg<EDX>)) 
		Combined result: 8.07 cycles
	MULX32rr(impl(Reg<EDX>) -> 1(Class<GR32>))  [0.991;6.04]
		Dependencies:
			MULX32rr(impl(Reg<EDX>) -> 1(Class<GR32>)) 
			MUL32r(0(Class<GR32>) -> impl(Reg<EDX>)) 
		Combined result: 7.04 cycles

-----MULX32rr_EVEX-----
	MULX32rr_EVEX(2(Class<GR32>) -> 0(Class<GR32>))  [4.03;4.03]
		 Successful, latency: 4.03
	MULX32rr_EVEX(2(Class<GR32>) -> 1(Class<GR32>))  [3.02;3.02]
		 Successful, latency: 3.02
	MULX32rr_EVEX(impl(Reg<EDX>) -> 0(Class<GR32>))  [1.98;7.03]
		Dependencies:
			MULX32rr(impl(Reg<EDX>) -> 1(Class<GR32>)) 
			MUL32r(0(Class<GR32>) -> impl(Reg<EDX>)) 
		Combined result: 8.03 cycles
	MULX32rr_EVEX(impl(Reg<EDX>) -> 1(Class<GR32>))  [1.01;6.07]
		Dependencies:
			MULX32rr(impl(Reg<EDX>) -> 1(Class<GR32>)) 
			MUL32r(0(Class<GR32>) -> impl(Reg<EDX>)) 
		Combined result: 7.07 cycles

-----MULX64rr-----
	MULX64rr(2(Class<GR64>) -> 0(Class<GR64>))  [4.04;4.04]
		 Successful, latency: 4.04
	MULX64rr(2(Class<GR64>) -> 1(Class<GR64>))  [3.02;3.02]
		 Successful, latency: 3.02
	MULX64rr(impl(Reg<RDX>) -> 0(Class<GR64>))  [2.01;7.05]
		Dependencies:
			MULX64rr(impl(Reg<RDX>) -> 1(Class<GR64>)) 
			MUL64r(0(Class<GR64>) -> impl(Reg<RDX>)) 
		Combined result: 8.05 cycles
	MULX64rr(impl(Reg<RDX>) -> 1(Class<GR64>))  [1.01;6.05]
		Dependencies:
			MULX64rr(impl(Reg<RDX>) -> 1(Class<GR64>)) 
			MUL64r(0(Class<GR64>) -> impl(Reg<RDX>)) 
		Combined result: 7.05 cycles

-----MULX64rr_EVEX-----
	MULX64rr_EVEX(2(Class<GR64>) -> 0(Class<GR64>))  [4.03;4.03]
		 Successful, latency: 4.03
	MULX64rr_EVEX(2(Class<GR64>) -> 1(Class<GR64>))  [3.03;3.03]
		 Successful, latency: 3.03
	MULX64rr_EVEX(impl(Reg<RDX>) -> 0(Class<GR64>))  [2.05;7.09]
		Dependencies:
			MULX64rr(impl(Reg<RDX>) -> 1(Class<GR64>)) 
			MUL64r(0(Class<GR64>) -> impl(Reg<RDX>)) 
		Combined result: 8.09 cycles
	MULX64rr_EVEX(impl(Reg<RDX>) -> 1(Class<GR64>))  [0.999;6.04]
		Dependencies:
			MULX64rr(impl(Reg<RDX>) -> 1(Class<GR64>)) 
			MUL64r(0(Class<GR64>) -> impl(Reg<RDX>)) 
		Combined result: 7.04 cycles

-----NEG16r-----
	NEG16r(1(Class<GR16>) -> 0(Class<GR16>))  [1;1]
		 Successful, latency: 1
	NEG16r(1(Class<GR16>) -> impl(Reg<EFLAGS>))  [ERROR_UNUSUAL_LATENCY]
		Dependencies:
			ADC16rr(impl(Reg<EFLAGS>) -> 0(Class<GR16>)) 
			ADC16ri(1(Class<GR16>) -> impl(Reg<EFLAGS>)) 
		Combined result: 1 cycles

-----NEG16r_EVEX-----
	NEG16r_EVEX(1(Class<GR16>) -> 0(Class<GR16>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----NEG16r_ND-----
	NEG16r_ND(1(Class<GR16>) -> 0(Class<GR16>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----NEG16r_NF-----
	NEG16r_NF(1(Class<GR16>) -> 0(Class<GR16>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----NEG16r_NF_ND-----
	NEG16r_NF_ND(1(Class<GR16>) -> 0(Class<GR16>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----NEG32r-----
	NEG32r(1(Class<GR32>) -> 0(Class<GR32>))  [1.01;1.01]
		 Successful, latency: 1.01
	NEG32r(1(Class<GR32>) -> impl(Reg<EFLAGS>))  [ERROR_UNUSUAL_LATENCY]
		Dependencies:
			ADC32ri8(impl(Reg<EFLAGS>) -> 0(Class<GR32>)) 
			ADC32ri(1(Class<GR32>) -> impl(Reg<EFLAGS>)) 
		Combined result: 1 cycles

-----NEG32r_EVEX-----
	NEG32r_EVEX(1(Class<GR32>) -> 0(Class<GR32>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----NEG32r_ND-----
	NEG32r_ND(1(Class<GR32>) -> 0(Class<GR32>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----NEG32r_NF-----
	NEG32r_NF(1(Class<GR32>) -> 0(Class<GR32>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----NEG32r_NF_ND-----
	NEG32r_NF_ND(1(Class<GR32>) -> 0(Class<GR32>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----NEG64r-----
	NEG64r(1(Class<GR64>) -> 0(Class<GR64>))  [1;1]
		 Successful, latency: 1
	NEG64r(1(Class<GR64>) -> impl(Reg<EFLAGS>))  [ERROR_UNUSUAL_LATENCY]
		Dependencies:
			ADC64rr(impl(Reg<EFLAGS>) -> 0(Class<GR64>)) 
			ADC64ri32(1(Class<GR64>) -> impl(Reg<EFLAGS>)) 
		Combined result: 1 cycles

-----NEG64r_EVEX-----
	NEG64r_EVEX(1(Class<GR64>) -> 0(Class<GR64>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----NEG64r_ND-----
	NEG64r_ND(1(Class<GR64>) -> 0(Class<GR64>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----NEG64r_NF-----
	NEG64r_NF(1(Class<GR64>) -> 0(Class<GR64>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----NEG64r_NF_ND-----
	NEG64r_NF_ND(1(Class<GR64>) -> 0(Class<GR64>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----NEG8r-----
	NEG8r(1(Class<GR8>) -> 0(Class<GR8>))  [1.01;1.01]
		 Successful, latency: 1.01
	NEG8r(1(Class<GR8>) -> impl(Reg<EFLAGS>))  [ERROR_UNUSUAL_LATENCY]
		Dependencies:
			ADC8ri8(impl(Reg<EFLAGS>) -> 0(Class<GR8>)) 
			ADC8ri(1(Class<GR8>) -> impl(Reg<EFLAGS>)) 
		Combined result: 0.998 cycles

-----NEG8r_EVEX-----
	NEG8r_EVEX(1(Class<GR8>) -> 0(Class<GR8>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----NEG8r_ND-----
	NEG8r_ND(1(Class<GR8>) -> 0(Class<GR8>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----NEG8r_NF-----
	NEG8r_NF(1(Class<GR8>) -> 0(Class<GR8>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----NEG8r_NF_ND-----
	NEG8r_NF_ND(1(Class<GR8>) -> 0(Class<GR8>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----NOT16r-----
	NOT16r(1(Class<GR16>) -> 0(Class<GR16>))  [1.01;1.01]
		 Successful, latency: 1.01

-----NOT16r_EVEX-----
	NOT16r_EVEX(1(Class<GR16>) -> 0(Class<GR16>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----NOT16r_ND-----
	NOT16r_ND(1(Class<GR16>) -> 0(Class<GR16>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----NOT32r-----
	NOT32r(1(Class<GR32>) -> 0(Class<GR32>))  [1.01;1.01]
		 Successful, latency: 1.01

-----NOT32r_EVEX-----
	NOT32r_EVEX(1(Class<GR32>) -> 0(Class<GR32>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----NOT32r_ND-----
	NOT32r_ND(1(Class<GR32>) -> 0(Class<GR32>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----NOT64r-----
	NOT64r(1(Class<GR64>) -> 0(Class<GR64>))  [1;1]
		 Successful, latency: 1

-----NOT64r_EVEX-----
	NOT64r_EVEX(1(Class<GR64>) -> 0(Class<GR64>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----NOT64r_ND-----
	NOT64r_ND(1(Class<GR64>) -> 0(Class<GR64>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----NOT8r-----
	NOT8r(1(Class<GR8>) -> 0(Class<GR8>))  [1.02;1.02]
		 Successful, latency: 1.02

-----NOT8r_EVEX-----
	NOT8r_EVEX(1(Class<GR8>) -> 0(Class<GR8>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----NOT8r_ND-----
	NOT8r_ND(1(Class<GR8>) -> 0(Class<GR8>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----OR16i16-----
	OR16i16(impl(Reg<AX>) -> impl(Reg<AX>))  [1.02;1.02]
		 Successful, latency: 1.02
	OR16i16(impl(Reg<AX>) -> impl(Reg<EFLAGS>))  [0.994;1.01]
		Dependencies:
			ADC16i16(impl(Reg<EFLAGS>) -> impl(Reg<AX>)) 
			ADC16i16(impl(Reg<AX>) -> impl(Reg<EFLAGS>)) 
		Combined result: 2.02 cycles

-----OR16ri-----
	OR16ri(1(Class<GR16>) -> 0(Class<GR16>))  [1.01;1.01]
		 Successful, latency: 1.01
	OR16ri(1(Class<GR16>) -> impl(Reg<EFLAGS>))  [ERROR_UNUSUAL_LATENCY]
		Dependencies:
			ADC16rr(impl(Reg<EFLAGS>) -> 0(Class<GR16>)) 
			ADC16ri(1(Class<GR16>) -> impl(Reg<EFLAGS>)) 
		Combined result: 1.01 cycles

-----OR16ri8-----
	OR16ri8(1(Class<GR16>) -> 0(Class<GR16>))  [0.998;0.998]
		 Successful, latency: 0.998
	OR16ri8(1(Class<GR16>) -> impl(Reg<EFLAGS>))  [ERROR_UNUSUAL_LATENCY]
		Dependencies:
			ADC16rr(impl(Reg<EFLAGS>) -> 0(Class<GR16>)) 
			ADC16ri(1(Class<GR16>) -> impl(Reg<EFLAGS>)) 
		Combined result: 1.01 cycles

-----OR16ri8_EVEX-----
	OR16ri8_EVEX(1(Class<GR16>) -> 0(Class<GR16>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----OR16ri8_ND-----
	OR16ri8_ND(1(Class<GR16>) -> 0(Class<GR16>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----OR16ri8_NF-----
	OR16ri8_NF(1(Class<GR16>) -> 0(Class<GR16>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----OR16ri8_NF_ND-----
	OR16ri8_NF_ND(1(Class<GR16>) -> 0(Class<GR16>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----OR16ri_EVEX-----
	OR16ri_EVEX(1(Class<GR16>) -> 0(Class<GR16>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----OR16ri_ND-----
	OR16ri_ND(1(Class<GR16>) -> 0(Class<GR16>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----OR16ri_NF-----
	OR16ri_NF(1(Class<GR16>) -> 0(Class<GR16>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----OR16ri_NF_ND-----
	OR16ri_NF_ND(1(Class<GR16>) -> 0(Class<GR16>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----OR16rr-----
	OR16rr(1(Class<GR16>) -> 0(Class<GR16>))  [1.01;1.01]
		 Successful, latency: 1.01
	OR16rr(2(Class<GR16>) -> 0(Class<GR16>))  [1.01;1.01]
		 Successful, latency: 1.01
	OR16rr(1(Class<GR16>) -> impl(Reg<EFLAGS>))  [ERROR_UNUSUAL_LATENCY]
		Dependencies:
			ADC16rr(impl(Reg<EFLAGS>) -> 0(Class<GR16>)) 
			ADC16ri(1(Class<GR16>) -> impl(Reg<EFLAGS>)) 
		Combined result: 1.01 cycles
	OR16rr(2(Class<GR16>) -> impl(Reg<EFLAGS>))  [1;1.02]
		Dependencies:
			ADC16rr(impl(Reg<EFLAGS>) -> 0(Class<GR16>)) 
			ADC16ri(1(Class<GR16>) -> impl(Reg<EFLAGS>)) 
		Combined result: 2.02 cycles

-----OR16rr_EVEX-----
	OR16rr_EVEX(1(Class<GR16>) -> 0(Class<GR16>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	OR16rr_EVEX(2(Class<GR16>) -> 0(Class<GR16>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----OR16rr_EVEX_REV-----
	OR16rr_EVEX_REV(1(Class<GR16>) -> 0(Class<GR16>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	OR16rr_EVEX_REV(2(Class<GR16>) -> 0(Class<GR16>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----OR16rr_ND-----
	OR16rr_ND(1(Class<GR16>) -> 0(Class<GR16>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	OR16rr_ND(2(Class<GR16>) -> 0(Class<GR16>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----OR16rr_ND_REV-----
	OR16rr_ND_REV(1(Class<GR16>) -> 0(Class<GR16>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	OR16rr_ND_REV(2(Class<GR16>) -> 0(Class<GR16>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----OR16rr_NF-----
	OR16rr_NF(1(Class<GR16>) -> 0(Class<GR16>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	OR16rr_NF(2(Class<GR16>) -> 0(Class<GR16>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----OR16rr_NF_ND-----
	OR16rr_NF_ND(1(Class<GR16>) -> 0(Class<GR16>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	OR16rr_NF_ND(2(Class<GR16>) -> 0(Class<GR16>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----OR16rr_NF_ND_REV-----
	OR16rr_NF_ND_REV(1(Class<GR16>) -> 0(Class<GR16>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	OR16rr_NF_ND_REV(2(Class<GR16>) -> 0(Class<GR16>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----OR16rr_NF_REV-----
	OR16rr_NF_REV(1(Class<GR16>) -> 0(Class<GR16>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	OR16rr_NF_REV(2(Class<GR16>) -> 0(Class<GR16>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----OR16rr_REV-----
	OR16rr_REV(1(Class<GR16>) -> 0(Class<GR16>))  [1.02;1.02]
		 Successful, latency: 1.02
	OR16rr_REV(2(Class<GR16>) -> 0(Class<GR16>))  [1.01;1.01]
		 Successful, latency: 1.01
	OR16rr_REV(1(Class<GR16>) -> impl(Reg<EFLAGS>))  [ERROR_UNUSUAL_LATENCY]
		Dependencies:
			ADC16rr(impl(Reg<EFLAGS>) -> 0(Class<GR16>)) 
			ADC16ri(1(Class<GR16>) -> impl(Reg<EFLAGS>)) 
		Combined result: 1 cycles
	OR16rr_REV(2(Class<GR16>) -> impl(Reg<EFLAGS>))  [0.993;1.01]
		Dependencies:
			ADC16rr(impl(Reg<EFLAGS>) -> 0(Class<GR16>)) 
			ADC16ri(1(Class<GR16>) -> impl(Reg<EFLAGS>)) 
		Combined result: 2.01 cycles

-----OR32i32-----
	OR32i32(impl(Reg<EAX>) -> impl(Reg<EAX>))  [1.01;1.01]
		 Successful, latency: 1.01
	OR32i32(impl(Reg<EAX>) -> impl(Reg<EFLAGS>))  [0.99;1.01]
		Dependencies:
			ADC32i32(impl(Reg<EFLAGS>) -> impl(Reg<EAX>)) 
			ADC32i32(impl(Reg<EAX>) -> impl(Reg<EFLAGS>)) 
		Combined result: 2.01 cycles

-----OR32ri-----
	OR32ri(1(Class<GR32>) -> 0(Class<GR32>))  [1;1]
		 Successful, latency: 1
	OR32ri(1(Class<GR32>) -> impl(Reg<EFLAGS>))  [ERROR_UNUSUAL_LATENCY]
		Dependencies:
			ADC32ri8(impl(Reg<EFLAGS>) -> 0(Class<GR32>)) 
			ADC32ri(1(Class<GR32>) -> impl(Reg<EFLAGS>)) 
		Combined result: 1 cycles

-----OR32ri8-----
	OR32ri8(1(Class<GR32>) -> 0(Class<GR32>))  [1.01;1.01]
		 Successful, latency: 1.01
	OR32ri8(1(Class<GR32>) -> impl(Reg<EFLAGS>))  [ERROR_UNUSUAL_LATENCY]
		Dependencies:
			ADC32ri8(impl(Reg<EFLAGS>) -> 0(Class<GR32>)) 
			ADC32ri(1(Class<GR32>) -> impl(Reg<EFLAGS>)) 
		Combined result: 1.02 cycles

-----OR32ri8_EVEX-----
	OR32ri8_EVEX(1(Class<GR32>) -> 0(Class<GR32>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----OR32ri8_ND-----
	OR32ri8_ND(1(Class<GR32>) -> 0(Class<GR32>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----OR32ri8_NF-----
	OR32ri8_NF(1(Class<GR32>) -> 0(Class<GR32>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----OR32ri8_NF_ND-----
	OR32ri8_NF_ND(1(Class<GR32>) -> 0(Class<GR32>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----OR32ri_EVEX-----
	OR32ri_EVEX(1(Class<GR32>) -> 0(Class<GR32>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----OR32ri_ND-----
	OR32ri_ND(1(Class<GR32>) -> 0(Class<GR32>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----OR32ri_NF-----
	OR32ri_NF(1(Class<GR32>) -> 0(Class<GR32>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----OR32ri_NF_ND-----
	OR32ri_NF_ND(1(Class<GR32>) -> 0(Class<GR32>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----OR32rr-----
	OR32rr(1(Class<GR32>) -> 0(Class<GR32>))  [1.01;1.01]
		 Successful, latency: 1.01
	OR32rr(2(Class<GR32>) -> 0(Class<GR32>))  [1;1]
		 Successful, latency: 1
	OR32rr(1(Class<GR32>) -> impl(Reg<EFLAGS>))  [ERROR_UNUSUAL_LATENCY]
		Dependencies:
			ADC32ri8(impl(Reg<EFLAGS>) -> 0(Class<GR32>)) 
			ADC32ri(1(Class<GR32>) -> impl(Reg<EFLAGS>)) 
		Combined result: 1 cycles
	OR32rr(2(Class<GR32>) -> impl(Reg<EFLAGS>))  [1;1.02]
		Dependencies:
			ADC32ri8(impl(Reg<EFLAGS>) -> 0(Class<GR32>)) 
			ADC32ri(1(Class<GR32>) -> impl(Reg<EFLAGS>)) 
		Combined result: 2.03 cycles

-----OR32rr_EVEX-----
	OR32rr_EVEX(1(Class<GR32>) -> 0(Class<GR32>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	OR32rr_EVEX(2(Class<GR32>) -> 0(Class<GR32>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----OR32rr_EVEX_REV-----
	OR32rr_EVEX_REV(1(Class<GR32>) -> 0(Class<GR32>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	OR32rr_EVEX_REV(2(Class<GR32>) -> 0(Class<GR32>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----OR32rr_ND-----
	OR32rr_ND(1(Class<GR32>) -> 0(Class<GR32>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	OR32rr_ND(2(Class<GR32>) -> 0(Class<GR32>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----OR32rr_ND_REV-----
	OR32rr_ND_REV(1(Class<GR32>) -> 0(Class<GR32>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	OR32rr_ND_REV(2(Class<GR32>) -> 0(Class<GR32>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----OR32rr_NF-----
	OR32rr_NF(1(Class<GR32>) -> 0(Class<GR32>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	OR32rr_NF(2(Class<GR32>) -> 0(Class<GR32>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----OR32rr_NF_ND-----
	OR32rr_NF_ND(1(Class<GR32>) -> 0(Class<GR32>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	OR32rr_NF_ND(2(Class<GR32>) -> 0(Class<GR32>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----OR32rr_NF_ND_REV-----
	OR32rr_NF_ND_REV(1(Class<GR32>) -> 0(Class<GR32>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	OR32rr_NF_ND_REV(2(Class<GR32>) -> 0(Class<GR32>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----OR32rr_NF_REV-----
	OR32rr_NF_REV(1(Class<GR32>) -> 0(Class<GR32>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	OR32rr_NF_REV(2(Class<GR32>) -> 0(Class<GR32>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----OR32rr_REV-----
	OR32rr_REV(1(Class<GR32>) -> 0(Class<GR32>))  [1.02;1.02]
		 Successful, latency: 1.02
	OR32rr_REV(2(Class<GR32>) -> 0(Class<GR32>))  [1.01;1.01]
		 Successful, latency: 1.01
	OR32rr_REV(1(Class<GR32>) -> impl(Reg<EFLAGS>))  [ERROR_UNUSUAL_LATENCY]
		Dependencies:
			ADC32ri8(impl(Reg<EFLAGS>) -> 0(Class<GR32>)) 
			ADC32ri(1(Class<GR32>) -> impl(Reg<EFLAGS>)) 
		Combined result: 1 cycles
	OR32rr_REV(2(Class<GR32>) -> impl(Reg<EFLAGS>))  [0.989;1.01]
		Dependencies:
			ADC32ri8(impl(Reg<EFLAGS>) -> 0(Class<GR32>)) 
			ADC32ri(1(Class<GR32>) -> impl(Reg<EFLAGS>)) 
		Combined result: 2.02 cycles

-----OR64i32-----
	OR64i32(impl(Reg<RAX>) -> impl(Reg<RAX>))  [1.01;1.01]
		 Successful, latency: 1.01
	OR64i32(impl(Reg<RAX>) -> impl(Reg<EFLAGS>))  [1.01;1.02]
		Dependencies:
			CMP64i32(impl(Reg<RAX>) -> impl(Reg<EFLAGS>)) 
			ADC64i32(impl(Reg<EFLAGS>) -> impl(Reg<RAX>)) 
		Combined result: 2.02 cycles

-----OR64ri32-----
	OR64ri32(1(Class<GR64>) -> 0(Class<GR64>))  [1.02;1.02]
		 Successful, latency: 1.02
	OR64ri32(1(Class<GR64>) -> impl(Reg<EFLAGS>))  [ERROR_UNUSUAL_LATENCY]
		Dependencies:
			ADC64rr(impl(Reg<EFLAGS>) -> 0(Class<GR64>)) 
			ADC64ri32(1(Class<GR64>) -> impl(Reg<EFLAGS>)) 
		Combined result: 1.01 cycles

-----OR64ri32_EVEX-----
	OR64ri32_EVEX(1(Class<GR64>) -> 0(Class<GR64>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----OR64ri32_ND-----
	OR64ri32_ND(1(Class<GR64>) -> 0(Class<GR64>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----OR64ri32_NF-----
	OR64ri32_NF(1(Class<GR64>) -> 0(Class<GR64>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----OR64ri32_NF_ND-----
	OR64ri32_NF_ND(1(Class<GR64>) -> 0(Class<GR64>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----OR64ri8-----
	OR64ri8(1(Class<GR64>) -> 0(Class<GR64>))  [1.01;1.01]
		 Successful, latency: 1.01
	OR64ri8(1(Class<GR64>) -> impl(Reg<EFLAGS>))  [ERROR_UNUSUAL_LATENCY]
		Dependencies:
			ADC64rr(impl(Reg<EFLAGS>) -> 0(Class<GR64>)) 
			ADC64ri32(1(Class<GR64>) -> impl(Reg<EFLAGS>)) 
		Combined result: 1.01 cycles

-----OR64ri8_EVEX-----
	OR64ri8_EVEX(1(Class<GR64>) -> 0(Class<GR64>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----OR64ri8_ND-----
	OR64ri8_ND(1(Class<GR64>) -> 0(Class<GR64>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----OR64ri8_NF-----
	OR64ri8_NF(1(Class<GR64>) -> 0(Class<GR64>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----OR64ri8_NF_ND-----
	OR64ri8_NF_ND(1(Class<GR64>) -> 0(Class<GR64>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----OR64rr-----
	OR64rr(1(Class<GR64>) -> 0(Class<GR64>))  [1.01;1.01]
		 Successful, latency: 1.01
	OR64rr(2(Class<GR64>) -> 0(Class<GR64>))  [1;1]
		 Successful, latency: 1
	OR64rr(1(Class<GR64>) -> impl(Reg<EFLAGS>))  [ERROR_UNUSUAL_LATENCY]
		Dependencies:
			ADC64rr(impl(Reg<EFLAGS>) -> 0(Class<GR64>)) 
			ADC64ri32(1(Class<GR64>) -> impl(Reg<EFLAGS>)) 
		Combined result: 1.01 cycles
	OR64rr(2(Class<GR64>) -> impl(Reg<EFLAGS>))  [1.01;1.02]
		Dependencies:
			ADC64rr(impl(Reg<EFLAGS>) -> 0(Class<GR64>)) 
			ADC64ri32(1(Class<GR64>) -> impl(Reg<EFLAGS>)) 
		Combined result: 2.01 cycles

-----OR64rr_EVEX-----
	OR64rr_EVEX(1(Class<GR64>) -> 0(Class<GR64>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	OR64rr_EVEX(2(Class<GR64>) -> 0(Class<GR64>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----OR64rr_EVEX_REV-----
	OR64rr_EVEX_REV(1(Class<GR64>) -> 0(Class<GR64>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	OR64rr_EVEX_REV(2(Class<GR64>) -> 0(Class<GR64>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----OR64rr_ND-----
	OR64rr_ND(1(Class<GR64>) -> 0(Class<GR64>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	OR64rr_ND(2(Class<GR64>) -> 0(Class<GR64>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----OR64rr_ND_REV-----
	OR64rr_ND_REV(1(Class<GR64>) -> 0(Class<GR64>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	OR64rr_ND_REV(2(Class<GR64>) -> 0(Class<GR64>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----OR64rr_NF-----
	OR64rr_NF(1(Class<GR64>) -> 0(Class<GR64>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	OR64rr_NF(2(Class<GR64>) -> 0(Class<GR64>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----OR64rr_NF_ND-----
	OR64rr_NF_ND(1(Class<GR64>) -> 0(Class<GR64>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	OR64rr_NF_ND(2(Class<GR64>) -> 0(Class<GR64>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----OR64rr_NF_ND_REV-----
	OR64rr_NF_ND_REV(1(Class<GR64>) -> 0(Class<GR64>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	OR64rr_NF_ND_REV(2(Class<GR64>) -> 0(Class<GR64>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----OR64rr_NF_REV-----
	OR64rr_NF_REV(1(Class<GR64>) -> 0(Class<GR64>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	OR64rr_NF_REV(2(Class<GR64>) -> 0(Class<GR64>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----OR64rr_REV-----
	OR64rr_REV(1(Class<GR64>) -> 0(Class<GR64>))  [1.02;1.02]
		 Successful, latency: 1.02
	OR64rr_REV(2(Class<GR64>) -> 0(Class<GR64>))  [1.01;1.01]
		 Successful, latency: 1.01
	OR64rr_REV(1(Class<GR64>) -> impl(Reg<EFLAGS>))  [ERROR_UNUSUAL_LATENCY]
		Dependencies:
			ADC64rr(impl(Reg<EFLAGS>) -> 0(Class<GR64>)) 
			ADC64ri32(1(Class<GR64>) -> impl(Reg<EFLAGS>)) 
		Combined result: 1.01 cycles
	OR64rr_REV(2(Class<GR64>) -> impl(Reg<EFLAGS>))  [1.01;1.02]
		Dependencies:
			ADC64rr(impl(Reg<EFLAGS>) -> 0(Class<GR64>)) 
			ADC64ri32(1(Class<GR64>) -> impl(Reg<EFLAGS>)) 
		Combined result: 2.02 cycles

-----OR8i8-----
	OR8i8(impl(Reg<AL>) -> impl(Reg<AL>))  [1;1]
		 Successful, latency: 1
	OR8i8(impl(Reg<AL>) -> impl(Reg<EFLAGS>))  [0.998;1.02]
		Dependencies:
			ADC8i8(impl(Reg<EFLAGS>) -> impl(Reg<AL>)) 
			CMP8i8(impl(Reg<AL>) -> impl(Reg<EFLAGS>)) 
		Combined result: 2.02 cycles

-----OR8ri-----
	OR8ri(1(Class<GR8>) -> 0(Class<GR8>))  [1;1]
		 Successful, latency: 1
	OR8ri(1(Class<GR8>) -> impl(Reg<EFLAGS>))  [ERROR_UNUSUAL_LATENCY]
		Dependencies:
			ADC8ri8(impl(Reg<EFLAGS>) -> 0(Class<GR8>)) 
			ADC8ri(1(Class<GR8>) -> impl(Reg<EFLAGS>)) 
		Combined result: 1 cycles

-----OR8ri8-----
	OR8ri8(1(Class<GR8>) -> 0(Class<GR8>))  [1.01;1.01]
		 Successful, latency: 1.01
	OR8ri8(1(Class<GR8>) -> impl(Reg<EFLAGS>))  [ERROR_UNUSUAL_LATENCY]
		Dependencies:
			ADC8ri8(impl(Reg<EFLAGS>) -> 0(Class<GR8>)) 
			ADC8ri(1(Class<GR8>) -> impl(Reg<EFLAGS>)) 
		Combined result: 1 cycles

-----OR8ri_EVEX-----
	OR8ri_EVEX(1(Class<GR8>) -> 0(Class<GR8>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----OR8ri_ND-----
	OR8ri_ND(1(Class<GR8>) -> 0(Class<GR8>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----OR8ri_NF-----
	OR8ri_NF(1(Class<GR8>) -> 0(Class<GR8>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----OR8ri_NF_ND-----
	OR8ri_NF_ND(1(Class<GR8>) -> 0(Class<GR8>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----OR8rr-----
	OR8rr(1(Class<GR8>) -> 0(Class<GR8>))  [1;1]
		 Successful, latency: 1
	OR8rr(2(Class<GR8>) -> 0(Class<GR8>))  [1.01;1.01]
		 Successful, latency: 1.01
	OR8rr(1(Class<GR8>) -> impl(Reg<EFLAGS>))  [ERROR_UNUSUAL_LATENCY]
		Dependencies:
			ADC8ri8(impl(Reg<EFLAGS>) -> 0(Class<GR8>)) 
			ADC8ri(1(Class<GR8>) -> impl(Reg<EFLAGS>)) 
		Combined result: 1.01 cycles
	OR8rr(2(Class<GR8>) -> impl(Reg<EFLAGS>))  [1;1.02]
		Dependencies:
			ADC8ri8(impl(Reg<EFLAGS>) -> 0(Class<GR8>)) 
			ADC8ri(1(Class<GR8>) -> impl(Reg<EFLAGS>)) 
		Combined result: 2.02 cycles

-----OR8rr_EVEX-----
	OR8rr_EVEX(1(Class<GR8>) -> 0(Class<GR8>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	OR8rr_EVEX(2(Class<GR8>) -> 0(Class<GR8>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----OR8rr_EVEX_REV-----
	OR8rr_EVEX_REV(1(Class<GR8>) -> 0(Class<GR8>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	OR8rr_EVEX_REV(2(Class<GR8>) -> 0(Class<GR8>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----OR8rr_ND-----
	OR8rr_ND(1(Class<GR8>) -> 0(Class<GR8>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	OR8rr_ND(2(Class<GR8>) -> 0(Class<GR8>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----OR8rr_ND_REV-----
	OR8rr_ND_REV(1(Class<GR8>) -> 0(Class<GR8>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	OR8rr_ND_REV(2(Class<GR8>) -> 0(Class<GR8>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----OR8rr_NF-----
	OR8rr_NF(1(Class<GR8>) -> 0(Class<GR8>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	OR8rr_NF(2(Class<GR8>) -> 0(Class<GR8>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----OR8rr_NF_ND-----
	OR8rr_NF_ND(1(Class<GR8>) -> 0(Class<GR8>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	OR8rr_NF_ND(2(Class<GR8>) -> 0(Class<GR8>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----OR8rr_NF_ND_REV-----
	OR8rr_NF_ND_REV(1(Class<GR8>) -> 0(Class<GR8>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	OR8rr_NF_ND_REV(2(Class<GR8>) -> 0(Class<GR8>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----OR8rr_NF_REV-----
	OR8rr_NF_REV(1(Class<GR8>) -> 0(Class<GR8>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	OR8rr_NF_REV(2(Class<GR8>) -> 0(Class<GR8>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----OR8rr_REV-----
	OR8rr_REV(1(Class<GR8>) -> 0(Class<GR8>))  [0.999;0.999]
		 Successful, latency: 0.999
	OR8rr_REV(2(Class<GR8>) -> 0(Class<GR8>))  [1.01;1.01]
		 Successful, latency: 1.01
	OR8rr_REV(1(Class<GR8>) -> impl(Reg<EFLAGS>))  [ERROR_UNUSUAL_LATENCY]
		Dependencies:
			ADC8ri8(impl(Reg<EFLAGS>) -> 0(Class<GR8>)) 
			ADC8ri(1(Class<GR8>) -> impl(Reg<EFLAGS>)) 
		Combined result: 1 cycles
	OR8rr_REV(2(Class<GR8>) -> impl(Reg<EFLAGS>))  [0.994;1.01]
		Dependencies:
			ADC8ri8(impl(Reg<EFLAGS>) -> 0(Class<GR8>)) 
			ADC8ri(1(Class<GR8>) -> impl(Reg<EFLAGS>)) 
		Combined result: 2.01 cycles

-----ORPDrr-----
	ORPDrr(1(Class<VR128>) -> 0(Class<VR128>))  [1.02;1.02]
		 Successful, latency: 1.02
	ORPDrr(2(Class<VR128>) -> 0(Class<VR128>))  [1;1]
		 Successful, latency: 1

-----ORPSrr-----
	ORPSrr(1(Class<VR128>) -> 0(Class<VR128>))  [1;1]
		 Successful, latency: 1
	ORPSrr(2(Class<VR128>) -> 0(Class<VR128>))  [1.01;1.01]
		 Successful, latency: 1.01

-----OUTSB-----
	OUTSB(impl(Reg<ESI>) -> impl(Reg<ESI>))  [SKIP_MEMORY_OPERAND]
		SKIP_MEMORY_OPERAND, this instruction cannot be measured on this platform

-----OUTSL-----
	OUTSL(impl(Reg<ESI>) -> impl(Reg<ESI>))  [SKIP_MEMORY_OPERAND]
		SKIP_MEMORY_OPERAND, this instruction cannot be measured on this platform

-----OUTSW-----
	OUTSW(impl(Reg<ESI>) -> impl(Reg<ESI>))  [SKIP_MEMORY_OPERAND]
		SKIP_MEMORY_OPERAND, this instruction cannot be measured on this platform

-----PABSBrr-----
	PABSBrr(1(Class<VR128>) -> 0(Class<VR128>))  [2.02;2.02]
		 Successful, latency: 2.02

-----PABSDrr-----
	PABSDrr(1(Class<VR128>) -> 0(Class<VR128>))  [2.02;2.02]
		 Successful, latency: 2.02

-----PABSWrr-----
	PABSWrr(1(Class<VR128>) -> 0(Class<VR128>))  [2.02;2.02]
		 Successful, latency: 2.02

-----PACKSSDWrr-----
	PACKSSDWrr(1(Class<VR128>) -> 0(Class<VR128>))  [2.03;2.03]
		 Successful, latency: 2.03
	PACKSSDWrr(2(Class<VR128>) -> 0(Class<VR128>))  [2.02;2.02]
		 Successful, latency: 2.02

-----PACKSSWBrr-----
	PACKSSWBrr(1(Class<VR128>) -> 0(Class<VR128>))  [2.02;2.02]
		 Successful, latency: 2.02
	PACKSSWBrr(2(Class<VR128>) -> 0(Class<VR128>))  [2.03;2.03]
		 Successful, latency: 2.03

-----PACKUSDWrr-----
	PACKUSDWrr(1(Class<VR128>) -> 0(Class<VR128>))  [2.02;2.02]
		 Successful, latency: 2.02
	PACKUSDWrr(2(Class<VR128>) -> 0(Class<VR128>))  [2.02;2.02]
		 Successful, latency: 2.02

-----PACKUSWBrr-----
	PACKUSWBrr(1(Class<VR128>) -> 0(Class<VR128>))  [2.02;2.02]
		 Successful, latency: 2.02
	PACKUSWBrr(2(Class<VR128>) -> 0(Class<VR128>))  [2.01;2.01]
		 Successful, latency: 2.01

-----PADDBrr-----
	PADDBrr(1(Class<VR128>) -> 0(Class<VR128>))  [0.999;0.999]
		 Successful, latency: 0.999
	PADDBrr(2(Class<VR128>) -> 0(Class<VR128>))  [1.01;1.01]
		 Successful, latency: 1.01

-----PADDDrr-----
	PADDDrr(1(Class<VR128>) -> 0(Class<VR128>))  [1.01;1.01]
		 Successful, latency: 1.01
	PADDDrr(2(Class<VR128>) -> 0(Class<VR128>))  [1.01;1.01]
		 Successful, latency: 1.01

-----PADDQrr-----
	PADDQrr(1(Class<VR128>) -> 0(Class<VR128>))  [1;1]
		 Successful, latency: 1
	PADDQrr(2(Class<VR128>) -> 0(Class<VR128>))  [1.01;1.01]
		 Successful, latency: 1.01

-----PADDSBrr-----
	PADDSBrr(1(Class<VR128>) -> 0(Class<VR128>))  [2.02;2.02]
		 Successful, latency: 2.02
	PADDSBrr(2(Class<VR128>) -> 0(Class<VR128>))  [2.01;2.01]
		 Successful, latency: 2.01

-----PADDSWrr-----
	PADDSWrr(1(Class<VR128>) -> 0(Class<VR128>))  [2.01;2.01]
		 Successful, latency: 2.01
	PADDSWrr(2(Class<VR128>) -> 0(Class<VR128>))  [2.02;2.02]
		 Successful, latency: 2.02

-----PADDUSBrr-----
	PADDUSBrr(1(Class<VR128>) -> 0(Class<VR128>))  [2.02;2.02]
		 Successful, latency: 2.02
	PADDUSBrr(2(Class<VR128>) -> 0(Class<VR128>))  [2.02;2.02]
		 Successful, latency: 2.02

-----PADDUSWrr-----
	PADDUSWrr(1(Class<VR128>) -> 0(Class<VR128>))  [2.03;2.03]
		 Successful, latency: 2.03
	PADDUSWrr(2(Class<VR128>) -> 0(Class<VR128>))  [2.02;2.02]
		 Successful, latency: 2.02

-----PADDWrr-----
	PADDWrr(1(Class<VR128>) -> 0(Class<VR128>))  [1.01;1.01]
		 Successful, latency: 1.01
	PADDWrr(2(Class<VR128>) -> 0(Class<VR128>))  [1.01;1.01]
		 Successful, latency: 1.01

-----PALIGNRrri-----
	PALIGNRrri(1(Class<VR128>) -> 0(Class<VR128>))  [2.01;2.01]
		 Successful, latency: 2.01
	PALIGNRrri(2(Class<VR128>) -> 0(Class<VR128>))  [2.01;2.01]
		 Successful, latency: 2.01

-----PANDNrr-----
	PANDNrr(1(Class<VR128>) -> 0(Class<VR128>))  [1;1]
		 Successful, latency: 1
	PANDNrr(2(Class<VR128>) -> 0(Class<VR128>))  [0.25;0.25]
		 Successful, latency: 0.25

-----PANDrr-----
	PANDrr(1(Class<VR128>) -> 0(Class<VR128>))  [1;1]
		 Successful, latency: 1
	PANDrr(2(Class<VR128>) -> 0(Class<VR128>))  [1.01;1.01]
		 Successful, latency: 1.01

-----PAVGBrr-----
	PAVGBrr(1(Class<VR128>) -> 0(Class<VR128>))  [2.02;2.02]
		 Successful, latency: 2.02
	PAVGBrr(2(Class<VR128>) -> 0(Class<VR128>))  [2.02;2.02]
		 Successful, latency: 2.02

-----PAVGUSBrr-----
	PAVGUSBrr(1(Class<VR64>) -> 0(Class<VR64>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	PAVGUSBrr(2(Class<VR64>) -> 0(Class<VR64>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----PAVGWrr-----
	PAVGWrr(1(Class<VR128>) -> 0(Class<VR128>))  [2.02;2.02]
		 Successful, latency: 2.02
	PAVGWrr(2(Class<VR128>) -> 0(Class<VR128>))  [2.03;2.03]
		 Successful, latency: 2.03

-----PBLENDVBrr0-----
	PBLENDVBrr0(1(Class<VR128>) -> 0(Class<VR128>))  [1.01;1.01]
		 Successful, latency: 1.01
	PBLENDVBrr0(2(Class<VR128>) -> 0(Class<VR128>))  [1.01;1.01]
		 Successful, latency: 1.01
	PBLENDVBrr0(impl(Reg<XMM0>) -> 0(Class<VR128>))  [1;7.05]
		Dependencies:
			PBLENDVBrr0(impl(Reg<XMM0>) -> 0(Class<VR128>)) 
			VPCMPISTRMrri(0(Class<VR128>) -> impl(Reg<XMM0>)) 
		Combined result: 8.05 cycles

-----PBLENDWrri-----
	PBLENDWrri(1(Class<VR128>) -> 0(Class<VR128>))  [1.01;1.01]
		 Successful, latency: 1.01
	PBLENDWrri(2(Class<VR128>) -> 0(Class<VR128>))  [1;1]
		 Successful, latency: 1

-----PBNDKB-----
	0x138383b85028
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----PCLMULQDQrri-----
	PCLMULQDQrri(1(Class<VR128>) -> 0(Class<VR128>))  [4.03;4.03]
		 Successful, latency: 4.03
	PCLMULQDQrri(2(Class<VR128>) -> 0(Class<VR128>))  [4.02;4.02]
		 Successful, latency: 4.02

-----PCMPEQBrr-----
	PCMPEQBrr(1(Class<VR128>) -> 0(Class<VR128>))  [1.02;1.02]
		 Successful, latency: 1.02
	PCMPEQBrr(2(Class<VR128>) -> 0(Class<VR128>))  [0.25;0.25]
		 Successful, latency: 0.25

-----PCMPEQDrr-----
	PCMPEQDrr(1(Class<VR128>) -> 0(Class<VR128>))  [1.01;1.01]
		 Successful, latency: 1.01
	PCMPEQDrr(2(Class<VR128>) -> 0(Class<VR128>))  [0.25;0.25]
		 Successful, latency: 0.25

-----PCMPEQQrr-----
	PCMPEQQrr(1(Class<VR128>) -> 0(Class<VR128>))  [2.02;2.02]
		 Successful, latency: 2.02
	PCMPEQQrr(2(Class<VR128>) -> 0(Class<VR128>))  [0.5;0.5]
		 Successful, latency: 0.5

-----PCMPEQWrr-----
	PCMPEQWrr(1(Class<VR128>) -> 0(Class<VR128>))  [1;1]
		 Successful, latency: 1
	PCMPEQWrr(2(Class<VR128>) -> 0(Class<VR128>))  [0.25;0.25]
		 Successful, latency: 0.25

-----PCMPESTRIrri-----
	PCMPESTRIrri(0(Class<VR128>) -> impl(Reg<EFLAGS>))  [3.01;2.02]
		Dependencies:
			CMOV_VR128(impl(Reg<EFLAGS>) -> 0(Class<VR128>)) 
			COMISDrr_Int(0(Class<VR128>) -> impl(Reg<EFLAGS>)) 
		Combined result: 3.03 cycles
	PCMPESTRIrri(1(Class<VR128>) -> impl(Reg<EFLAGS>))  [3.04;2.04]
		Dependencies:
			CMOV_VR128(impl(Reg<EFLAGS>) -> 0(Class<VR128>)) 
			COMISDrr_Int(0(Class<VR128>) -> impl(Reg<EFLAGS>)) 
		Combined result: 3.06 cycles
	PCMPESTRIrri(impl(Reg<EAX>) -> impl(Reg<EFLAGS>))  [15.1;15.1]
		Dependencies:
			ADC32i32(impl(Reg<EFLAGS>) -> impl(Reg<EAX>)) 
			ADC32i32(impl(Reg<EAX>) -> impl(Reg<EFLAGS>)) 
		Combined result: 16.1 cycles

-----PCMPESTRMrri-----
	PCMPESTRMrri(0(Class<VR128>) -> impl(Reg<EFLAGS>))  [7.02;6.03]
		Dependencies:
			CMOV_VR128(impl(Reg<EFLAGS>) -> 0(Class<VR128>)) 
			COMISDrr_Int(0(Class<VR128>) -> impl(Reg<EFLAGS>)) 
		Combined result: 7.04 cycles
	PCMPESTRMrri(1(Class<VR128>) -> impl(Reg<EFLAGS>))  [7.03;6.04]
		Dependencies:
			CMOV_VR128(impl(Reg<EFLAGS>) -> 0(Class<VR128>)) 
			COMISDrr_Int(0(Class<VR128>) -> impl(Reg<EFLAGS>)) 
		Combined result: 7.05 cycles
	PCMPESTRMrri(0(Class<VR128>) -> impl(Reg<XMM0>))  [1.04;7.09]
		Dependencies:
			PBLENDVBrr0(impl(Reg<XMM0>) -> 0(Class<VR128>)) 
			VPCMPISTRMrri(0(Class<VR128>) -> impl(Reg<XMM0>)) 
		Combined result: 8.09 cycles
	PCMPESTRMrri(1(Class<VR128>) -> impl(Reg<XMM0>))  [1.02;7.07]
		Dependencies:
			PBLENDVBrr0(impl(Reg<XMM0>) -> 0(Class<VR128>)) 
			VPCMPISTRMrri(0(Class<VR128>) -> impl(Reg<XMM0>)) 
		Combined result: 8.07 cycles
	PCMPESTRMrri(impl(Reg<EAX>) -> impl(Reg<EFLAGS>))  [15.1;15.1]
		Dependencies:
			ADC32i32(impl(Reg<EFLAGS>) -> impl(Reg<EAX>)) 
			ADC32i32(impl(Reg<EAX>) -> impl(Reg<EFLAGS>)) 
		Combined result: 16.1 cycles

-----PCMPGTBrr-----
	PCMPGTBrr(1(Class<VR128>) -> 0(Class<VR128>))  [1.01;1.01]
		 Successful, latency: 1.01
	PCMPGTBrr(2(Class<VR128>) -> 0(Class<VR128>))  [0.25;0.25]
		 Successful, latency: 0.25

-----PCMPGTDrr-----
	PCMPGTDrr(1(Class<VR128>) -> 0(Class<VR128>))  [1;1]
		 Successful, latency: 1
	PCMPGTDrr(2(Class<VR128>) -> 0(Class<VR128>))  [0.25;0.25]
		 Successful, latency: 0.25

-----PCMPGTQrr-----
	PCMPGTQrr(1(Class<VR128>) -> 0(Class<VR128>))  [2.02;2.02]
		 Successful, latency: 2.02
	PCMPGTQrr(2(Class<VR128>) -> 0(Class<VR128>))  [0.5;0.5]
		 Successful, latency: 0.5

-----PCMPGTWrr-----
	PCMPGTWrr(1(Class<VR128>) -> 0(Class<VR128>))  [1.01;1.01]
		 Successful, latency: 1.01
	PCMPGTWrr(2(Class<VR128>) -> 0(Class<VR128>))  [0.25;0.25]
		 Successful, latency: 0.25

-----PCMPISTRIrri-----
	PCMPISTRIrri(0(Class<VR128>) -> impl(Reg<EFLAGS>))  [2.01;1.01]
		Dependencies:
			CMOV_VR128(impl(Reg<EFLAGS>) -> 0(Class<VR128>)) 
			COMISDrr_Int(0(Class<VR128>) -> impl(Reg<EFLAGS>)) 
		Combined result: 2.02 cycles
	PCMPISTRIrri(1(Class<VR128>) -> impl(Reg<EFLAGS>))  [2;1]
		Dependencies:
			CMOV_VR128(impl(Reg<EFLAGS>) -> 0(Class<VR128>)) 
			COMISDrr_Int(0(Class<VR128>) -> impl(Reg<EFLAGS>)) 
		Combined result: 2.02 cycles

-----PCMPISTRMrri-----
	PCMPISTRMrri(0(Class<VR128>) -> impl(Reg<EFLAGS>))  [7.02;6.03]
		Dependencies:
			CMOV_VR128(impl(Reg<EFLAGS>) -> 0(Class<VR128>)) 
			COMISDrr_Int(0(Class<VR128>) -> impl(Reg<EFLAGS>)) 
		Combined result: 7.04 cycles
	PCMPISTRMrri(1(Class<VR128>) -> impl(Reg<EFLAGS>))  [7.04;6.04]
		Dependencies:
			CMOV_VR128(impl(Reg<EFLAGS>) -> 0(Class<VR128>)) 
			COMISDrr_Int(0(Class<VR128>) -> impl(Reg<EFLAGS>)) 
		Combined result: 7.05 cycles
	PCMPISTRMrri(0(Class<VR128>) -> impl(Reg<XMM0>))  [0.99;7.04]
		Dependencies:
			PBLENDVBrr0(impl(Reg<XMM0>) -> 0(Class<VR128>)) 
			VPCMPISTRMrri(0(Class<VR128>) -> impl(Reg<XMM0>)) 
		Combined result: 8.04 cycles
	PCMPISTRMrri(1(Class<VR128>) -> impl(Reg<XMM0>))  [1.01;7.05]
		Dependencies:
			PBLENDVBrr0(impl(Reg<XMM0>) -> 0(Class<VR128>)) 
			VPCMPISTRMrri(0(Class<VR128>) -> impl(Reg<XMM0>)) 
		Combined result: 8.06 cycles

-----PCONFIG-----
	PCONFIG(impl(Reg<RAX>) -> impl(Reg<RAX>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	PCONFIG(impl(Reg<RBX>) -> impl(Reg<RBX>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	PCONFIG(impl(Reg<RCX>) -> impl(Reg<RCX>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	PCONFIG(impl(Reg<RDX>) -> impl(Reg<RDX>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----PDEP32rr-----
	PDEP32rr(1(Class<GR32>) -> 0(Class<GR32>))  [3.03;3.03]
		 Successful, latency: 3.03
	PDEP32rr(2(Class<GR32>) -> 0(Class<GR32>))  [3.05;3.05]
		 Successful, latency: 3.05

-----PDEP32rr_EVEX-----
	PDEP32rr_EVEX(1(Class<GR32>) -> 0(Class<GR32>))  [3.03;3.03]
		 Successful, latency: 3.03
	PDEP32rr_EVEX(2(Class<GR32>) -> 0(Class<GR32>))  [3.05;3.05]
		 Successful, latency: 3.05

-----PDEP64rr-----
	PDEP64rr(1(Class<GR64>) -> 0(Class<GR64>))  [3.06;3.06]
		 Successful, latency: 3.06
	PDEP64rr(2(Class<GR64>) -> 0(Class<GR64>))  [3.02;3.02]
		 Successful, latency: 3.02

-----PDEP64rr_EVEX-----
	PDEP64rr_EVEX(1(Class<GR64>) -> 0(Class<GR64>))  [3.03;3.03]
		 Successful, latency: 3.03
	PDEP64rr_EVEX(2(Class<GR64>) -> 0(Class<GR64>))  [3.04;3.04]
		 Successful, latency: 3.04

-----PEXT32rr-----
	PEXT32rr(1(Class<GR32>) -> 0(Class<GR32>))  [3.03;3.03]
		 Successful, latency: 3.03
	PEXT32rr(2(Class<GR32>) -> 0(Class<GR32>))  [3.03;3.03]
		 Successful, latency: 3.03

-----PEXT32rr_EVEX-----
	PEXT32rr_EVEX(1(Class<GR32>) -> 0(Class<GR32>))  [3.02;3.02]
		 Successful, latency: 3.02
	PEXT32rr_EVEX(2(Class<GR32>) -> 0(Class<GR32>))  [3.05;3.05]
		 Successful, latency: 3.05

-----PEXT64rr-----
	PEXT64rr(1(Class<GR64>) -> 0(Class<GR64>))  [3.04;3.04]
		 Successful, latency: 3.04
	PEXT64rr(2(Class<GR64>) -> 0(Class<GR64>))  [3.03;3.03]
		 Successful, latency: 3.03

-----PEXT64rr_EVEX-----
	PEXT64rr_EVEX(1(Class<GR64>) -> 0(Class<GR64>))  [3.03;3.03]
		 Successful, latency: 3.03
	PEXT64rr_EVEX(2(Class<GR64>) -> 0(Class<GR64>))  [3.04;3.04]
		 Successful, latency: 3.04

-----PEXTRBrri-----
	PEXTRBrri(1(Class<VR128>) -> 0(Class<GR32>))  [3.02;7.06]
		Dependencies:
			MOVMSKPSrr(1(Class<VR128>) -> 0(Class<GR32>)) 
			VMOVDI2PDIrr(1(Class<GR32>) -> 0(Class<VR128>)) 
		Combined result: 8.06 cycles

-----PEXTRDrri-----
	PEXTRDrri(1(Class<VR128>) -> 0(Class<GR32>))  [2.02;6.06]
		Dependencies:
			MOVMSKPSrr(1(Class<VR128>) -> 0(Class<GR32>)) 
			VMOVDI2PDIrr(1(Class<GR32>) -> 0(Class<VR128>)) 
		Combined result: 7.06 cycles

-----PEXTRQrri-----
	PEXTRQrri(1(Class<VR128>) -> 0(Class<GR64>))  [2.03;6.07]
		Dependencies:
			MOVPQIto64rr(1(Class<VR128>) -> 0(Class<GR64>)) 
			VMOV64toPQIrr(1(Class<GR64>) -> 0(Class<VR128>)) 
		Combined result: 7.07 cycles

-----PEXTRWrri-----
	PEXTRWrri(1(Class<VR128>) -> 0(Class<GR32>))  [2.02;6.06]
		Dependencies:
			MOVMSKPSrr(1(Class<VR128>) -> 0(Class<GR32>)) 
			VMOVDI2PDIrr(1(Class<GR32>) -> 0(Class<VR128>)) 
		Combined result: 7.06 cycles

-----PEXTRWrri_REV-----
	PEXTRWrri_REV(1(Class<VR128>) -> 0(Class<GR32>))  [2.04;6.08]
		Dependencies:
			MOVMSKPSrr(1(Class<VR128>) -> 0(Class<GR32>)) 
			VMOVDI2PDIrr(1(Class<GR32>) -> 0(Class<VR128>)) 
		Combined result: 7.08 cycles

-----PF2IDrr-----
	PF2IDrr(1(Class<VR64>) -> 0(Class<VR64>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----PF2IWrr-----
	PF2IWrr(1(Class<VR64>) -> 0(Class<VR64>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----PFACCrr-----
	PFACCrr(1(Class<VR64>) -> 0(Class<VR64>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	PFACCrr(2(Class<VR64>) -> 0(Class<VR64>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----PFADDrr-----
	PFADDrr(1(Class<VR64>) -> 0(Class<VR64>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	PFADDrr(2(Class<VR64>) -> 0(Class<VR64>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----PFCMPEQrr-----
	PFCMPEQrr(1(Class<VR64>) -> 0(Class<VR64>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	PFCMPEQrr(2(Class<VR64>) -> 0(Class<VR64>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----PFCMPGErr-----
	PFCMPGErr(1(Class<VR64>) -> 0(Class<VR64>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	PFCMPGErr(2(Class<VR64>) -> 0(Class<VR64>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----PFCMPGTrr-----
	PFCMPGTrr(1(Class<VR64>) -> 0(Class<VR64>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	PFCMPGTrr(2(Class<VR64>) -> 0(Class<VR64>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----PFMAXrr-----
	PFMAXrr(1(Class<VR64>) -> 0(Class<VR64>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	PFMAXrr(2(Class<VR64>) -> 0(Class<VR64>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----PFMINrr-----
	PFMINrr(1(Class<VR64>) -> 0(Class<VR64>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	PFMINrr(2(Class<VR64>) -> 0(Class<VR64>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----PFMULrr-----
	PFMULrr(1(Class<VR64>) -> 0(Class<VR64>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	PFMULrr(2(Class<VR64>) -> 0(Class<VR64>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----PFNACCrr-----
	PFNACCrr(1(Class<VR64>) -> 0(Class<VR64>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	PFNACCrr(2(Class<VR64>) -> 0(Class<VR64>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----PFPNACCrr-----
	PFPNACCrr(1(Class<VR64>) -> 0(Class<VR64>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	PFPNACCrr(2(Class<VR64>) -> 0(Class<VR64>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----PFRCPIT1rr-----
	PFRCPIT1rr(1(Class<VR64>) -> 0(Class<VR64>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	PFRCPIT1rr(2(Class<VR64>) -> 0(Class<VR64>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----PFRCPIT2rr-----
	PFRCPIT2rr(1(Class<VR64>) -> 0(Class<VR64>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	PFRCPIT2rr(2(Class<VR64>) -> 0(Class<VR64>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----PFRCPrr-----
	PFRCPrr(1(Class<VR64>) -> 0(Class<VR64>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----PFRSQIT1rr-----
	PFRSQIT1rr(1(Class<VR64>) -> 0(Class<VR64>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	PFRSQIT1rr(2(Class<VR64>) -> 0(Class<VR64>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----PFRSQRTrr-----
	PFRSQRTrr(1(Class<VR64>) -> 0(Class<VR64>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----PFSUBRrr-----
	PFSUBRrr(1(Class<VR64>) -> 0(Class<VR64>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	PFSUBRrr(2(Class<VR64>) -> 0(Class<VR64>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----PFSUBrr-----
	PFSUBrr(1(Class<VR64>) -> 0(Class<VR64>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	PFSUBrr(2(Class<VR64>) -> 0(Class<VR64>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----PHADDDrr-----
	PHADDDrr(1(Class<VR128>) -> 0(Class<VR128>))  [2.02;2.02]
		 Successful, latency: 2.02
	PHADDDrr(2(Class<VR128>) -> 0(Class<VR128>))  [2.01;2.01]
		 Successful, latency: 2.01

-----PHADDSWrr-----
	PHADDSWrr(1(Class<VR128>) -> 0(Class<VR128>))  [3.06;3.06]
		 Successful, latency: 3.06
	PHADDSWrr(2(Class<VR128>) -> 0(Class<VR128>))  [3.05;3.05]
		 Successful, latency: 3.05

-----PHADDWrr-----
	PHADDWrr(1(Class<VR128>) -> 0(Class<VR128>))  [2.02;2.02]
		 Successful, latency: 2.02
	PHADDWrr(2(Class<VR128>) -> 0(Class<VR128>))  [2.02;2.02]
		 Successful, latency: 2.02

-----PHMINPOSUWrr-----
	PHMINPOSUWrr(1(Class<VR128>) -> 0(Class<VR128>))  [3.02;3.02]
		 Successful, latency: 3.02

-----PHSUBDrr-----
	PHSUBDrr(1(Class<VR128>) -> 0(Class<VR128>))  [2.03;2.03]
		 Successful, latency: 2.03
	PHSUBDrr(2(Class<VR128>) -> 0(Class<VR128>))  [2.02;2.02]
		 Successful, latency: 2.02

-----PHSUBSWrr-----
	PHSUBSWrr(1(Class<VR128>) -> 0(Class<VR128>))  [3.04;3.04]
		 Successful, latency: 3.04
	PHSUBSWrr(2(Class<VR128>) -> 0(Class<VR128>))  [3.06;3.06]
		 Successful, latency: 3.06

-----PHSUBWrr-----
	PHSUBWrr(1(Class<VR128>) -> 0(Class<VR128>))  [2.03;2.03]
		 Successful, latency: 2.03
	PHSUBWrr(2(Class<VR128>) -> 0(Class<VR128>))  [2.02;2.02]
		 Successful, latency: 2.02

-----PI2FDrr-----
	PI2FDrr(1(Class<VR64>) -> 0(Class<VR64>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----PI2FWrr-----
	PI2FWrr(1(Class<VR64>) -> 0(Class<VR64>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----PINSRBrri-----
	PINSRBrri(1(Class<VR128>) -> 0(Class<VR128>))  [2.02;2.02]
		 Successful, latency: 2.02
	PINSRBrri(2(Class<GR32>) -> 0(Class<VR128>))  [2.99;7.03]
		Dependencies:
			MOVMSKPSrr(1(Class<VR128>) -> 0(Class<GR32>)) 
			VMOVDI2PDIrr(1(Class<GR32>) -> 0(Class<VR128>)) 
		Combined result: 8.05 cycles

-----PINSRDrri-----
	PINSRDrri(1(Class<VR128>) -> 0(Class<VR128>))  [1.01;1.01]
		 Successful, latency: 1.01
	PINSRDrri(2(Class<GR32>) -> 0(Class<VR128>))  [1.99;6.03]
		Dependencies:
			MOVMSKPSrr(1(Class<VR128>) -> 0(Class<GR32>)) 
			VMOVDI2PDIrr(1(Class<GR32>) -> 0(Class<VR128>)) 
		Combined result: 7.05 cycles

-----PINSRQrri-----
	PINSRQrri(1(Class<VR128>) -> 0(Class<VR128>))  [1.14;1.14]
		 Successful, latency: 1.14
	PINSRQrri(2(Class<GR64>) -> 0(Class<VR128>))  [1.97;6.01]
		Dependencies:
			MOVPQIto64rr(1(Class<VR128>) -> 0(Class<GR64>)) 
			VMOV64toPQIrr(1(Class<GR64>) -> 0(Class<VR128>)) 
		Combined result: 7.04 cycles

-----PINSRWrri-----
	PINSRWrri(1(Class<VR128>) -> 0(Class<VR128>))  [1.01;1.01]
		 Successful, latency: 1.01
	PINSRWrri(2(Class<GR32>) -> 0(Class<VR128>))  [1.99;6.03]
		Dependencies:
			MOVMSKPSrr(1(Class<VR128>) -> 0(Class<GR32>)) 
			VMOVDI2PDIrr(1(Class<GR32>) -> 0(Class<VR128>)) 
		Combined result: 7.05 cycles

-----PMADDUBSWrr-----
	PMADDUBSWrr(1(Class<VR128>) -> 0(Class<VR128>))  [3.02;3.02]
		 Successful, latency: 3.02
	PMADDUBSWrr(2(Class<VR128>) -> 0(Class<VR128>))  [3.03;3.03]
		 Successful, latency: 3.03

-----PMADDWDrr-----
	PMADDWDrr(1(Class<VR128>) -> 0(Class<VR128>))  [3.02;3.02]
		 Successful, latency: 3.02
	PMADDWDrr(2(Class<VR128>) -> 0(Class<VR128>))  [3.02;3.02]
		 Successful, latency: 3.02

-----PMAXSBrr-----
	PMAXSBrr(1(Class<VR128>) -> 0(Class<VR128>))  [1.02;1.02]
		 Successful, latency: 1.02
	PMAXSBrr(2(Class<VR128>) -> 0(Class<VR128>))  [1.01;1.01]
		 Successful, latency: 1.01

-----PMAXSDrr-----
	PMAXSDrr(1(Class<VR128>) -> 0(Class<VR128>))  [1.01;1.01]
		 Successful, latency: 1.01
	PMAXSDrr(2(Class<VR128>) -> 0(Class<VR128>))  [1;1]
		 Successful, latency: 1

-----PMAXSWrr-----
	PMAXSWrr(1(Class<VR128>) -> 0(Class<VR128>))  [1;1]
		 Successful, latency: 1
	PMAXSWrr(2(Class<VR128>) -> 0(Class<VR128>))  [1;1]
		 Successful, latency: 1

-----PMAXUBrr-----
	PMAXUBrr(1(Class<VR128>) -> 0(Class<VR128>))  [1.01;1.01]
		 Successful, latency: 1.01
	PMAXUBrr(2(Class<VR128>) -> 0(Class<VR128>))  [1;1]
		 Successful, latency: 1

-----PMAXUDrr-----
	PMAXUDrr(1(Class<VR128>) -> 0(Class<VR128>))  [1.02;1.02]
		 Successful, latency: 1.02
	PMAXUDrr(2(Class<VR128>) -> 0(Class<VR128>))  [0.998;0.998]
		 Successful, latency: 0.998

-----PMAXUWrr-----
	PMAXUWrr(1(Class<VR128>) -> 0(Class<VR128>))  [1;1]
		 Successful, latency: 1
	PMAXUWrr(2(Class<VR128>) -> 0(Class<VR128>))  [1.02;1.02]
		 Successful, latency: 1.02

-----PMINSBrr-----
	PMINSBrr(1(Class<VR128>) -> 0(Class<VR128>))  [1;1]
		 Successful, latency: 1
	PMINSBrr(2(Class<VR128>) -> 0(Class<VR128>))  [1;1]
		 Successful, latency: 1

-----PMINSDrr-----
	PMINSDrr(1(Class<VR128>) -> 0(Class<VR128>))  [1;1]
		 Successful, latency: 1
	PMINSDrr(2(Class<VR128>) -> 0(Class<VR128>))  [1.01;1.01]
		 Successful, latency: 1.01

-----PMINSWrr-----
	PMINSWrr(1(Class<VR128>) -> 0(Class<VR128>))  [1.02;1.02]
		 Successful, latency: 1.02
	PMINSWrr(2(Class<VR128>) -> 0(Class<VR128>))  [1.01;1.01]
		 Successful, latency: 1.01

-----PMINUBrr-----
	PMINUBrr(1(Class<VR128>) -> 0(Class<VR128>))  [1.02;1.02]
		 Successful, latency: 1.02
	PMINUBrr(2(Class<VR128>) -> 0(Class<VR128>))  [1.01;1.01]
		 Successful, latency: 1.01

-----PMINUDrr-----
	PMINUDrr(1(Class<VR128>) -> 0(Class<VR128>))  [1;1]
		 Successful, latency: 1
	PMINUDrr(2(Class<VR128>) -> 0(Class<VR128>))  [1.01;1.01]
		 Successful, latency: 1.01

-----PMINUWrr-----
	PMINUWrr(1(Class<VR128>) -> 0(Class<VR128>))  [1.01;1.01]
		 Successful, latency: 1.01
	PMINUWrr(2(Class<VR128>) -> 0(Class<VR128>))  [1.02;1.02]
		 Successful, latency: 1.02

-----PMOVMSKBrr-----
	PMOVMSKBrr(1(Class<VR128>) -> 0(Class<GR32>))  [1.01;5.04]
		Dependencies:
			MOVMSKPSrr(1(Class<VR128>) -> 0(Class<GR32>)) 
			VMOVDI2PDIrr(1(Class<GR32>) -> 0(Class<VR128>)) 
		Combined result: 6.04 cycles

-----PMOVSXBDrr-----
	PMOVSXBDrr(1(Class<VR128>) -> 0(Class<VR128>))  [2.02;2.02]
		 Successful, latency: 2.02

-----PMOVSXBQrr-----
	PMOVSXBQrr(1(Class<VR128>) -> 0(Class<VR128>))  [2.03;2.03]
		 Successful, latency: 2.03

-----PMOVSXBWrr-----
	PMOVSXBWrr(1(Class<VR128>) -> 0(Class<VR128>))  [2.02;2.02]
		 Successful, latency: 2.02

-----PMOVSXDQrr-----
	PMOVSXDQrr(1(Class<VR128>) -> 0(Class<VR128>))  [2.01;2.01]
		 Successful, latency: 2.01

-----PMOVSXWDrr-----
	PMOVSXWDrr(1(Class<VR128>) -> 0(Class<VR128>))  [2.01;2.01]
		 Successful, latency: 2.01

-----PMOVSXWQrr-----
	PMOVSXWQrr(1(Class<VR128>) -> 0(Class<VR128>))  [2.03;2.03]
		 Successful, latency: 2.03

-----PMOVZXBDrr-----
	PMOVZXBDrr(1(Class<VR128>) -> 0(Class<VR128>))  [2.03;2.03]
		 Successful, latency: 2.03

-----PMOVZXBQrr-----
	PMOVZXBQrr(1(Class<VR128>) -> 0(Class<VR128>))  [2.02;2.02]
		 Successful, latency: 2.02

-----PMOVZXBWrr-----
	PMOVZXBWrr(1(Class<VR128>) -> 0(Class<VR128>))  [2.02;2.02]
		 Successful, latency: 2.02

-----PMOVZXDQrr-----
	PMOVZXDQrr(1(Class<VR128>) -> 0(Class<VR128>))  [2.03;2.03]
		 Successful, latency: 2.03

-----PMOVZXWDrr-----
	PMOVZXWDrr(1(Class<VR128>) -> 0(Class<VR128>))  [2.02;2.02]
		 Successful, latency: 2.02

-----PMOVZXWQrr-----
	PMOVZXWQrr(1(Class<VR128>) -> 0(Class<VR128>))  [2.02;2.02]
		 Successful, latency: 2.02

-----PMULDQrr-----
	PMULDQrr(1(Class<VR128>) -> 0(Class<VR128>))  [3.02;3.02]
		 Successful, latency: 3.02
	PMULDQrr(2(Class<VR128>) -> 0(Class<VR128>))  [3.03;3.03]
		 Successful, latency: 3.03

-----PMULHRSWrr-----
	PMULHRSWrr(1(Class<VR128>) -> 0(Class<VR128>))  [3.03;3.03]
		 Successful, latency: 3.03
	PMULHRSWrr(2(Class<VR128>) -> 0(Class<VR128>))  [3.02;3.02]
		 Successful, latency: 3.02

-----PMULHRWrr-----
	PMULHRWrr(1(Class<VR64>) -> 0(Class<VR64>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	PMULHRWrr(2(Class<VR64>) -> 0(Class<VR64>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----PMULHUWrr-----
	PMULHUWrr(1(Class<VR128>) -> 0(Class<VR128>))  [3.04;3.04]
		 Successful, latency: 3.04
	PMULHUWrr(2(Class<VR128>) -> 0(Class<VR128>))  [3.04;3.04]
		 Successful, latency: 3.04

-----PMULHWrr-----
	PMULHWrr(1(Class<VR128>) -> 0(Class<VR128>))  [3.02;3.02]
		 Successful, latency: 3.02
	PMULHWrr(2(Class<VR128>) -> 0(Class<VR128>))  [3.06;3.06]
		 Successful, latency: 3.06

-----PMULLDrr-----
	PMULLDrr(1(Class<VR128>) -> 0(Class<VR128>))  [3.03;3.03]
		 Successful, latency: 3.03
	PMULLDrr(2(Class<VR128>) -> 0(Class<VR128>))  [3.02;3.02]
		 Successful, latency: 3.02

-----PMULLWrr-----
	PMULLWrr(1(Class<VR128>) -> 0(Class<VR128>))  [3.04;3.04]
		 Successful, latency: 3.04
	PMULLWrr(2(Class<VR128>) -> 0(Class<VR128>))  [3.03;3.03]
		 Successful, latency: 3.03

-----PMULUDQrr-----
	PMULUDQrr(1(Class<VR128>) -> 0(Class<VR128>))  [3.02;3.02]
		 Successful, latency: 3.02
	PMULUDQrr(2(Class<VR128>) -> 0(Class<VR128>))  [3.03;3.03]
		 Successful, latency: 3.03

-----POPCNT16rr-----
	POPCNT16rr(1(Class<GR16>) -> 0(Class<GR16>))  [1;1]
		 Successful, latency: 1
	POPCNT16rr(1(Class<GR16>) -> impl(Reg<EFLAGS>))  [1;1.02]
		Dependencies:
			ADC16rr(impl(Reg<EFLAGS>) -> 0(Class<GR16>)) 
			ADC16ri(1(Class<GR16>) -> impl(Reg<EFLAGS>)) 
		Combined result: 2.02 cycles

-----POPCNT16rr_EVEX-----
	POPCNT16rr_EVEX(1(Class<GR16>) -> 0(Class<GR16>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----POPCNT16rr_NF-----
	POPCNT16rr_NF(1(Class<GR16>) -> 0(Class<GR16>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----POPCNT32rr-----
	POPCNT32rr(1(Class<GR32>) -> 0(Class<GR32>))  [1.02;1.02]
		 Successful, latency: 1.02
	POPCNT32rr(1(Class<GR32>) -> impl(Reg<EFLAGS>))  [1;1.02]
		Dependencies:
			ADC32ri8(impl(Reg<EFLAGS>) -> 0(Class<GR32>)) 
			ADC32ri(1(Class<GR32>) -> impl(Reg<EFLAGS>)) 
		Combined result: 2.03 cycles

-----POPCNT32rr_EVEX-----
	POPCNT32rr_EVEX(1(Class<GR32>) -> 0(Class<GR32>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----POPCNT32rr_NF-----
	POPCNT32rr_NF(1(Class<GR32>) -> 0(Class<GR32>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----POPCNT64rr-----
	POPCNT64rr(1(Class<GR64>) -> 0(Class<GR64>))  [1.01;1.01]
		 Successful, latency: 1.01
	POPCNT64rr(1(Class<GR64>) -> impl(Reg<EFLAGS>))  [1.01;1.02]
		Dependencies:
			ADC64rr(impl(Reg<EFLAGS>) -> 0(Class<GR64>)) 
			ADC64ri32(1(Class<GR64>) -> impl(Reg<EFLAGS>)) 
		Combined result: 2.02 cycles

-----POPCNT64rr_EVEX-----
	POPCNT64rr_EVEX(1(Class<GR64>) -> 0(Class<GR64>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----POPCNT64rr_NF-----
	POPCNT64rr_NF(1(Class<GR64>) -> 0(Class<GR64>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----PORrr-----
	PORrr(1(Class<VR128>) -> 0(Class<VR128>))  [1.01;1.01]
		 Successful, latency: 1.01
	PORrr(2(Class<VR128>) -> 0(Class<VR128>))  [1.01;1.01]
		 Successful, latency: 1.01

-----PROBED_ALLOCA_32-----
	PROBED_ALLOCA_32(1(Class<GR32>) -> 0(Class<GR32>))  [0;0]
		WARNING generated instructions have multiple dependencies. If they have different latencies the lower one will be shadowed
	PROBED_ALLOCA_32(impl(Reg<ESP>) -> impl(Reg<ESP>))  [0.00125;0.00125]
		 Successful, latency: 0.00125
	PROBED_ALLOCA_32(1(Class<GR32>) -> impl(Reg<EAX>))  [ERROR_UNUSUAL_LATENCY]
		Dependencies:
			XCHG32ar(impl(Reg<EAX>) -> 0(Class<GR32>)) 
			MUL32r(0(Class<GR32>) -> impl(Reg<EAX>)) 
		Combined result: 0.334 cycles
	PROBED_ALLOCA_32(1(Class<GR32>) -> impl(Reg<EFLAGS>))  [ERROR_UNUSUAL_LATENCY]
		Dependencies:
			ADC32ri8(impl(Reg<EFLAGS>) -> 0(Class<GR32>)) 
			ADC32ri(1(Class<GR32>) -> impl(Reg<EFLAGS>)) 
		Combined result: 1.01 cycles
	PROBED_ALLOCA_32(impl(Reg<ESP>) -> 0(Class<GR32>))  [1;-1]
		Dependencies:
			PROBED_ALLOCA_32(impl(Reg<ESP>) -> 0(Class<GR32>)) 
			DYN_ALLOCA_32(0(Class<GR32>) -> impl(Reg<ESP>)) 
		Combined result: -0.00125 cycles
	PROBED_ALLOCA_32(1(Class<GR32>) -> impl(Reg<ESP>))  [1;-1]
		Dependencies:
			PROBED_ALLOCA_32(impl(Reg<ESP>) -> 0(Class<GR32>)) 
			DYN_ALLOCA_32(0(Class<GR32>) -> impl(Reg<ESP>)) 
		Combined result: -0.00125 cycles

-----PROBED_ALLOCA_64-----
	PROBED_ALLOCA_64(1(Class<GR64>) -> 0(Class<GR64>))  [-0.00125;-0.00125]
		WARNING generated instructions have multiple dependencies. If they have different latencies the lower one will be shadowed
	PROBED_ALLOCA_64(impl(Reg<RSP>) -> impl(Reg<RSP>))  [0;0]
		 Successful, latency: 0
	PROBED_ALLOCA_64(1(Class<GR64>) -> impl(Reg<EFLAGS>))  [ERROR_UNUSUAL_LATENCY]
		Dependencies:
			ADC64rr(impl(Reg<EFLAGS>) -> 0(Class<GR64>)) 
			ADC64ri32(1(Class<GR64>) -> impl(Reg<EFLAGS>)) 
		Combined result: 1.01 cycles
	PROBED_ALLOCA_64(1(Class<GR64>) -> impl(Reg<RAX>))  [ERROR_UNUSUAL_LATENCY]
		Dependencies:
			XCHG64ar(impl(Reg<RAX>) -> 0(Class<GR64>)) 
			CMPXCHG64rr(1(Class<GR64>) -> impl(Reg<RAX>)) 
		Combined result: 0.0825 cycles
	PROBED_ALLOCA_64(impl(Reg<RSP>) -> 0(Class<GR64>))  [1;-0.999]
		Dependencies:
			PROBED_ALLOCA_64(impl(Reg<RSP>) -> 0(Class<GR64>)) 
			DYN_ALLOCA_64(0(Class<GR64>) -> impl(Reg<RSP>)) 
		Combined result: 0.00125 cycles
	PROBED_ALLOCA_64(1(Class<GR64>) -> impl(Reg<RSP>))  [1;-1]
		Dependencies:
			PROBED_ALLOCA_64(impl(Reg<RSP>) -> 0(Class<GR64>)) 
			DYN_ALLOCA_64(0(Class<GR64>) -> impl(Reg<RSP>)) 
		Combined result: 0.00125 cycles

-----PSADBWrr-----
	PSADBWrr(1(Class<VR128>) -> 0(Class<VR128>))  [3.02;3.02]
		 Successful, latency: 3.02
	PSADBWrr(2(Class<VR128>) -> 0(Class<VR128>))  [3.02;3.02]
		 Successful, latency: 3.02

-----PSHUFBrr-----
	PSHUFBrr(1(Class<VR128>) -> 0(Class<VR128>))  [2.02;2.02]
		 Successful, latency: 2.02
	PSHUFBrr(2(Class<VR128>) -> 0(Class<VR128>))  [2.02;2.02]
		 Successful, latency: 2.02

-----PSHUFDri-----
	PSHUFDri(1(Class<VR128>) -> 0(Class<VR128>))  [1.02;1.02]
		 Successful, latency: 1.02

-----PSHUFHWri-----
	PSHUFHWri(1(Class<VR128>) -> 0(Class<VR128>))  [1.01;1.01]
		 Successful, latency: 1.01

-----PSHUFLWri-----
	PSHUFLWri(1(Class<VR128>) -> 0(Class<VR128>))  [1.01;1.01]
		 Successful, latency: 1.01

-----PSIGNBrr-----
	PSIGNBrr(1(Class<VR128>) -> 0(Class<VR128>))  [2.02;2.02]
		 Successful, latency: 2.02
	PSIGNBrr(2(Class<VR128>) -> 0(Class<VR128>))  [2.02;2.02]
		 Successful, latency: 2.02

-----PSIGNDrr-----
	PSIGNDrr(1(Class<VR128>) -> 0(Class<VR128>))  [2.01;2.01]
		 Successful, latency: 2.01
	PSIGNDrr(2(Class<VR128>) -> 0(Class<VR128>))  [2;2]
		 Successful, latency: 2

-----PSIGNWrr-----
	PSIGNWrr(1(Class<VR128>) -> 0(Class<VR128>))  [2.01;2.01]
		 Successful, latency: 2.01
	PSIGNWrr(2(Class<VR128>) -> 0(Class<VR128>))  [2.02;2.02]
		 Successful, latency: 2.02

-----PSLLDQri-----
	PSLLDQri(1(Class<VR128>) -> 0(Class<VR128>))  [2.02;2.02]
		 Successful, latency: 2.02

-----PSLLDri-----
	PSLLDri(1(Class<VR128>) -> 0(Class<VR128>))  [1;1]
		 Successful, latency: 1

-----PSLLDrr-----
	PSLLDrr(1(Class<VR128>) -> 0(Class<VR128>))  [2.03;2.03]
		 Successful, latency: 2.03
	PSLLDrr(2(Class<VR128>) -> 0(Class<VR128>))  [2.02;2.02]
		 Successful, latency: 2.02

-----PSLLQri-----
	PSLLQri(1(Class<VR128>) -> 0(Class<VR128>))  [1.01;1.01]
		 Successful, latency: 1.01

-----PSLLQrr-----
	PSLLQrr(1(Class<VR128>) -> 0(Class<VR128>))  [2.03;2.03]
		 Successful, latency: 2.03
	PSLLQrr(2(Class<VR128>) -> 0(Class<VR128>))  [2.02;2.02]
		 Successful, latency: 2.02

-----PSLLWri-----
	PSLLWri(1(Class<VR128>) -> 0(Class<VR128>))  [1;1]
		 Successful, latency: 1

-----PSLLWrr-----
	PSLLWrr(1(Class<VR128>) -> 0(Class<VR128>))  [2.03;2.03]
		 Successful, latency: 2.03
	PSLLWrr(2(Class<VR128>) -> 0(Class<VR128>))  [2.03;2.03]
		 Successful, latency: 2.03

-----PSMASH-----
	0x138383b88860
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----PSRADri-----
	PSRADri(1(Class<VR128>) -> 0(Class<VR128>))  [1.01;1.01]
		 Successful, latency: 1.01

-----PSRADrr-----
	PSRADrr(1(Class<VR128>) -> 0(Class<VR128>))  [2;2]
		 Successful, latency: 2
	PSRADrr(2(Class<VR128>) -> 0(Class<VR128>))  [2.02;2.02]
		 Successful, latency: 2.02

-----PSRAWri-----
	PSRAWri(1(Class<VR128>) -> 0(Class<VR128>))  [1;1]
		 Successful, latency: 1

-----PSRAWrr-----
	PSRAWrr(1(Class<VR128>) -> 0(Class<VR128>))  [2.01;2.01]
		 Successful, latency: 2.01
	PSRAWrr(2(Class<VR128>) -> 0(Class<VR128>))  [2.01;2.01]
		 Successful, latency: 2.01

-----PSRLDQri-----
	PSRLDQri(1(Class<VR128>) -> 0(Class<VR128>))  [2.03;2.03]
		 Successful, latency: 2.03

-----PSRLDri-----
	PSRLDri(1(Class<VR128>) -> 0(Class<VR128>))  [1.01;1.01]
		 Successful, latency: 1.01

-----PSRLDrr-----
	PSRLDrr(1(Class<VR128>) -> 0(Class<VR128>))  [2.02;2.02]
		 Successful, latency: 2.02
	PSRLDrr(2(Class<VR128>) -> 0(Class<VR128>))  [2.02;2.02]
		 Successful, latency: 2.02

-----PSRLQri-----
	PSRLQri(1(Class<VR128>) -> 0(Class<VR128>))  [1;1]
		 Successful, latency: 1

-----PSRLQrr-----
	PSRLQrr(1(Class<VR128>) -> 0(Class<VR128>))  [2.02;2.02]
		 Successful, latency: 2.02
	PSRLQrr(2(Class<VR128>) -> 0(Class<VR128>))  [2.01;2.01]
		 Successful, latency: 2.01

-----PSRLWri-----
	PSRLWri(1(Class<VR128>) -> 0(Class<VR128>))  [1;1]
		 Successful, latency: 1

-----PSRLWrr-----
	PSRLWrr(1(Class<VR128>) -> 0(Class<VR128>))  [2.02;2.02]
		 Successful, latency: 2.02
	PSRLWrr(2(Class<VR128>) -> 0(Class<VR128>))  [2.04;2.04]
		 Successful, latency: 2.04

-----PSUBBrr-----
	PSUBBrr(1(Class<VR128>) -> 0(Class<VR128>))  [1.01;1.01]
		 Successful, latency: 1.01
	PSUBBrr(2(Class<VR128>) -> 0(Class<VR128>))  [0.25;0.25]
		 Successful, latency: 0.25

-----PSUBDrr-----
	PSUBDrr(1(Class<VR128>) -> 0(Class<VR128>))  [1;1]
		 Successful, latency: 1
	PSUBDrr(2(Class<VR128>) -> 0(Class<VR128>))  [0.25;0.25]
		 Successful, latency: 0.25

-----PSUBQrr-----
	PSUBQrr(1(Class<VR128>) -> 0(Class<VR128>))  [1.02;1.02]
		 Successful, latency: 1.02
	PSUBQrr(2(Class<VR128>) -> 0(Class<VR128>))  [0.25;0.25]
		 Successful, latency: 0.25

-----PSUBSBrr-----
	PSUBSBrr(1(Class<VR128>) -> 0(Class<VR128>))  [2.01;2.01]
		 Successful, latency: 2.01
	PSUBSBrr(2(Class<VR128>) -> 0(Class<VR128>))  [0.5;0.5]
		 Successful, latency: 0.5

-----PSUBSWrr-----
	PSUBSWrr(1(Class<VR128>) -> 0(Class<VR128>))  [2.01;2.01]
		 Successful, latency: 2.01
	PSUBSWrr(2(Class<VR128>) -> 0(Class<VR128>))  [0.51;0.51]
		 Successful, latency: 0.51

-----PSUBUSBrr-----
	PSUBUSBrr(1(Class<VR128>) -> 0(Class<VR128>))  [2.02;2.02]
		 Successful, latency: 2.02
	PSUBUSBrr(2(Class<VR128>) -> 0(Class<VR128>))  [0.5;0.5]
		 Successful, latency: 0.5

-----PSUBUSWrr-----
	PSUBUSWrr(1(Class<VR128>) -> 0(Class<VR128>))  [2.01;2.01]
		 Successful, latency: 2.01
	PSUBUSWrr(2(Class<VR128>) -> 0(Class<VR128>))  [0.5;0.5]
		 Successful, latency: 0.5

-----PSUBWrr-----
	PSUBWrr(1(Class<VR128>) -> 0(Class<VR128>))  [0.998;0.998]
		 Successful, latency: 0.998
	PSUBWrr(2(Class<VR128>) -> 0(Class<VR128>))  [0.25;0.25]
		 Successful, latency: 0.25

-----PSWAPDrr-----
	PSWAPDrr(1(Class<VR64>) -> 0(Class<VR64>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----PTESTrr-----
	PTESTrr(0(Class<VR128>) -> impl(Reg<EFLAGS>))  [0.992;-0.00125]
		Dependencies:
			CMOV_VR128(impl(Reg<EFLAGS>) -> 0(Class<VR128>)) 
			COMISDrr_Int(0(Class<VR128>) -> impl(Reg<EFLAGS>)) 
		Combined result: 1.01 cycles
	PTESTrr(1(Class<VR128>) -> impl(Reg<EFLAGS>))  [0.996;0.0025]
		Dependencies:
			CMOV_VR128(impl(Reg<EFLAGS>) -> 0(Class<VR128>)) 
			COMISDrr_Int(0(Class<VR128>) -> impl(Reg<EFLAGS>)) 
		Combined result: 1.01 cycles

-----PUNPCKHBWrr-----
	PUNPCKHBWrr(1(Class<VR128>) -> 0(Class<VR128>))  [1;1]
		 Successful, latency: 1
	PUNPCKHBWrr(2(Class<VR128>) -> 0(Class<VR128>))  [1.01;1.01]
		 Successful, latency: 1.01

-----PUNPCKHDQrr-----
	PUNPCKHDQrr(1(Class<VR128>) -> 0(Class<VR128>))  [1.01;1.01]
		 Successful, latency: 1.01
	PUNPCKHDQrr(2(Class<VR128>) -> 0(Class<VR128>))  [1.02;1.02]
		 Successful, latency: 1.02

-----PUNPCKHQDQrr-----
	PUNPCKHQDQrr(1(Class<VR128>) -> 0(Class<VR128>))  [1.02;1.02]
		 Successful, latency: 1.02
	PUNPCKHQDQrr(2(Class<VR128>) -> 0(Class<VR128>))  [1.02;1.02]
		 Successful, latency: 1.02

-----PUNPCKHWDrr-----
	PUNPCKHWDrr(1(Class<VR128>) -> 0(Class<VR128>))  [1.01;1.01]
		 Successful, latency: 1.01
	PUNPCKHWDrr(2(Class<VR128>) -> 0(Class<VR128>))  [1.01;1.01]
		 Successful, latency: 1.01

-----PUNPCKLBWrr-----
	PUNPCKLBWrr(1(Class<VR128>) -> 0(Class<VR128>))  [1;1]
		 Successful, latency: 1
	PUNPCKLBWrr(2(Class<VR128>) -> 0(Class<VR128>))  [1.01;1.01]
		 Successful, latency: 1.01

-----PUNPCKLDQrr-----
	PUNPCKLDQrr(1(Class<VR128>) -> 0(Class<VR128>))  [1;1]
		 Successful, latency: 1
	PUNPCKLDQrr(2(Class<VR128>) -> 0(Class<VR128>))  [1.01;1.01]
		 Successful, latency: 1.01

-----PUNPCKLQDQrr-----
	PUNPCKLQDQrr(1(Class<VR128>) -> 0(Class<VR128>))  [1.02;1.02]
		 Successful, latency: 1.02
	PUNPCKLQDQrr(2(Class<VR128>) -> 0(Class<VR128>))  [1.01;1.01]
		 Successful, latency: 1.01

-----PUNPCKLWDrr-----
	PUNPCKLWDrr(1(Class<VR128>) -> 0(Class<VR128>))  [1.04;1.04]
		 Successful, latency: 1.04
	PUNPCKLWDrr(2(Class<VR128>) -> 0(Class<VR128>))  [1;1]
		 Successful, latency: 1

-----PVALIDATE32-----
	PVALIDATE32(impl(Reg<EAX>) -> impl(Reg<EAX>))  [ERROR_SIGSEGV]
		ERROR_SIGSEGV, this instruction cannot be measured on this platform

-----PVALIDATE64-----
	0x138383b89548
		ERROR_SIGSEGV, this instruction cannot be measured on this platform

-----PXORrr-----
	PXORrr(1(Class<VR128>) -> 0(Class<VR128>))  [1.02;1.02]
		 Successful, latency: 1.02
	PXORrr(2(Class<VR128>) -> 0(Class<VR128>))  [0.25;0.25]
		 Successful, latency: 0.25

-----RCL16r1-----
	RCL16r1(1(Class<GR16>) -> 0(Class<GR16>))  [1.01;1.01]
		WARNING generated instructions have multiple dependencies. If they have different latencies the lower one will be shadowed
	RCL16r1(impl(Reg<EFLAGS>) -> impl(Reg<EFLAGS>))  [1.01;1.01]
		WARNING generated instructions have multiple dependencies. If they have different latencies the lower one will be shadowed
	RCL16r1(impl(Reg<EFLAGS>) -> 0(Class<GR16>))  [1;1.02]
		Dependencies:
			ADC16rr(impl(Reg<EFLAGS>) -> 0(Class<GR16>)) 
			ADC16ri(1(Class<GR16>) -> impl(Reg<EFLAGS>)) 
		Combined result: 2.02 cycles
	RCL16r1(1(Class<GR16>) -> impl(Reg<EFLAGS>))  [1;1.02]
		Dependencies:
			ADC16rr(impl(Reg<EFLAGS>) -> 0(Class<GR16>)) 
			ADC16ri(1(Class<GR16>) -> impl(Reg<EFLAGS>)) 
		Combined result: 2.02 cycles

-----RCL16r1_EVEX-----
	RCL16r1_EVEX(1(Class<GR16>) -> 0(Class<GR16>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	RCL16r1_EVEX(impl(Reg<EFLAGS>) -> impl(Reg<EFLAGS>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----RCL16r1_ND-----
	RCL16r1_ND(1(Class<GR16>) -> 0(Class<GR16>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	RCL16r1_ND(impl(Reg<EFLAGS>) -> impl(Reg<EFLAGS>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----RCL16rCL-----
	RCL16rCL(1(Class<GR16>) -> 0(Class<GR16>))  [4.03;4.03]
		WARNING generated instructions have multiple dependencies. If they have different latencies the lower one will be shadowed
	RCL16rCL(impl(Reg<EFLAGS>) -> impl(Reg<EFLAGS>))  [4.05;4.05]
		WARNING generated instructions have multiple dependencies. If they have different latencies the lower one will be shadowed
	RCL16rCL(impl(Reg<EFLAGS>) -> 0(Class<GR16>))  [4.02;4.04]
		Dependencies:
			ADC16rr(impl(Reg<EFLAGS>) -> 0(Class<GR16>)) 
			ADC16ri(1(Class<GR16>) -> impl(Reg<EFLAGS>)) 
		Combined result: 5.04 cycles
	RCL16rCL(1(Class<GR16>) -> impl(Reg<EFLAGS>))  [3.02;3.04]
		Dependencies:
			ADC16rr(impl(Reg<EFLAGS>) -> 0(Class<GR16>)) 
			ADC16ri(1(Class<GR16>) -> impl(Reg<EFLAGS>)) 
		Combined result: 4.04 cycles

-----RCL16rCL_EVEX-----
	RCL16rCL_EVEX(1(Class<GR16>) -> 0(Class<GR16>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	RCL16rCL_EVEX(impl(Reg<EFLAGS>) -> impl(Reg<EFLAGS>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----RCL16rCL_ND-----
	RCL16rCL_ND(1(Class<GR16>) -> 0(Class<GR16>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	RCL16rCL_ND(impl(Reg<EFLAGS>) -> impl(Reg<EFLAGS>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----RCL16ri-----
	RCL16ri(1(Class<GR16>) -> 0(Class<GR16>))  [4.08;4.08]
		WARNING generated instructions have multiple dependencies. If they have different latencies the lower one will be shadowed
	RCL16ri(impl(Reg<EFLAGS>) -> impl(Reg<EFLAGS>))  [4.06;4.06]
		WARNING generated instructions have multiple dependencies. If they have different latencies the lower one will be shadowed
	RCL16ri(impl(Reg<EFLAGS>) -> 0(Class<GR16>))  [3.1;3.12]
		Dependencies:
			ADC16rr(impl(Reg<EFLAGS>) -> 0(Class<GR16>)) 
			ADC16ri(1(Class<GR16>) -> impl(Reg<EFLAGS>)) 
		Combined result: 4.12 cycles
	RCL16ri(1(Class<GR16>) -> impl(Reg<EFLAGS>))  [3.04;3.06]
		Dependencies:
			ADC16rr(impl(Reg<EFLAGS>) -> 0(Class<GR16>)) 
			ADC16ri(1(Class<GR16>) -> impl(Reg<EFLAGS>)) 
		Combined result: 4.05 cycles

-----RCL16ri_EVEX-----
	RCL16ri_EVEX(1(Class<GR16>) -> 0(Class<GR16>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	RCL16ri_EVEX(impl(Reg<EFLAGS>) -> impl(Reg<EFLAGS>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----RCL16ri_ND-----
	RCL16ri_ND(1(Class<GR16>) -> 0(Class<GR16>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	RCL16ri_ND(impl(Reg<EFLAGS>) -> impl(Reg<EFLAGS>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----RCL32r1-----
	RCL32r1(1(Class<GR32>) -> 0(Class<GR32>))  [1.01;1.01]
		WARNING generated instructions have multiple dependencies. If they have different latencies the lower one will be shadowed
	RCL32r1(impl(Reg<EFLAGS>) -> impl(Reg<EFLAGS>))  [1.02;1.02]
		WARNING generated instructions have multiple dependencies. If they have different latencies the lower one will be shadowed
	RCL32r1(impl(Reg<EFLAGS>) -> 0(Class<GR32>))  [0.999;1.02]
		Dependencies:
			ADC32ri8(impl(Reg<EFLAGS>) -> 0(Class<GR32>)) 
			ADC32ri(1(Class<GR32>) -> impl(Reg<EFLAGS>)) 
		Combined result: 2.02 cycles
	RCL32r1(1(Class<GR32>) -> impl(Reg<EFLAGS>))  [0.987;1.01]
		Dependencies:
			ADC32ri8(impl(Reg<EFLAGS>) -> 0(Class<GR32>)) 
			ADC32ri(1(Class<GR32>) -> impl(Reg<EFLAGS>)) 
		Combined result: 2.01 cycles

-----RCL32r1_EVEX-----
	RCL32r1_EVEX(1(Class<GR32>) -> 0(Class<GR32>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	RCL32r1_EVEX(impl(Reg<EFLAGS>) -> impl(Reg<EFLAGS>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----RCL32r1_ND-----
	RCL32r1_ND(1(Class<GR32>) -> 0(Class<GR32>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	RCL32r1_ND(impl(Reg<EFLAGS>) -> impl(Reg<EFLAGS>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----RCL32rCL-----
	RCL32rCL(1(Class<GR32>) -> 0(Class<GR32>))  [4.09;4.09]
		WARNING generated instructions have multiple dependencies. If they have different latencies the lower one will be shadowed
	RCL32rCL(impl(Reg<EFLAGS>) -> impl(Reg<EFLAGS>))  [4.02;4.02]
		WARNING generated instructions have multiple dependencies. If they have different latencies the lower one will be shadowed
	RCL32rCL(impl(Reg<EFLAGS>) -> 0(Class<GR32>))  [4.03;4.05]
		Dependencies:
			ADC32ri8(impl(Reg<EFLAGS>) -> 0(Class<GR32>)) 
			ADC32ri(1(Class<GR32>) -> impl(Reg<EFLAGS>)) 
		Combined result: 5.05 cycles
	RCL32rCL(1(Class<GR32>) -> impl(Reg<EFLAGS>))  [4.01;4.03]
		Dependencies:
			ADC32ri8(impl(Reg<EFLAGS>) -> 0(Class<GR32>)) 
			ADC32ri(1(Class<GR32>) -> impl(Reg<EFLAGS>)) 
		Combined result: 5.04 cycles

-----RCL32rCL_EVEX-----
	RCL32rCL_EVEX(1(Class<GR32>) -> 0(Class<GR32>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	RCL32rCL_EVEX(impl(Reg<EFLAGS>) -> impl(Reg<EFLAGS>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----RCL32rCL_ND-----
	RCL32rCL_ND(1(Class<GR32>) -> 0(Class<GR32>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	RCL32rCL_ND(impl(Reg<EFLAGS>) -> impl(Reg<EFLAGS>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----RCL32ri-----
	RCL32ri(1(Class<GR32>) -> 0(Class<GR32>))  [4.04;4.04]
		WARNING generated instructions have multiple dependencies. If they have different latencies the lower one will be shadowed
	RCL32ri(impl(Reg<EFLAGS>) -> impl(Reg<EFLAGS>))  [4.03;4.03]
		WARNING generated instructions have multiple dependencies. If they have different latencies the lower one will be shadowed
	RCL32ri(impl(Reg<EFLAGS>) -> 0(Class<GR32>))  [3.02;3.04]
		Dependencies:
			ADC32ri8(impl(Reg<EFLAGS>) -> 0(Class<GR32>)) 
			ADC32ri(1(Class<GR32>) -> impl(Reg<EFLAGS>)) 
		Combined result: 4.04 cycles
	RCL32ri(1(Class<GR32>) -> impl(Reg<EFLAGS>))  [3.01;3.03]
		Dependencies:
			ADC32ri8(impl(Reg<EFLAGS>) -> 0(Class<GR32>)) 
			ADC32ri(1(Class<GR32>) -> impl(Reg<EFLAGS>)) 
		Combined result: 4.03 cycles

-----RCL32ri_EVEX-----
	RCL32ri_EVEX(1(Class<GR32>) -> 0(Class<GR32>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	RCL32ri_EVEX(impl(Reg<EFLAGS>) -> impl(Reg<EFLAGS>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----RCL32ri_ND-----
	RCL32ri_ND(1(Class<GR32>) -> 0(Class<GR32>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	RCL32ri_ND(impl(Reg<EFLAGS>) -> impl(Reg<EFLAGS>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----RCL64r1-----
	RCL64r1(1(Class<GR64>) -> 0(Class<GR64>))  [1.01;1.01]
		WARNING generated instructions have multiple dependencies. If they have different latencies the lower one will be shadowed
	RCL64r1(impl(Reg<EFLAGS>) -> impl(Reg<EFLAGS>))  [1;1]
		WARNING generated instructions have multiple dependencies. If they have different latencies the lower one will be shadowed
	RCL64r1(impl(Reg<EFLAGS>) -> 0(Class<GR64>))  [1.01;1.03]
		Dependencies:
			ADC64rr(impl(Reg<EFLAGS>) -> 0(Class<GR64>)) 
			ADC64ri32(1(Class<GR64>) -> impl(Reg<EFLAGS>)) 
		Combined result: 2.03 cycles
	RCL64r1(1(Class<GR64>) -> impl(Reg<EFLAGS>))  [1.01;1.02]
		Dependencies:
			ADC64rr(impl(Reg<EFLAGS>) -> 0(Class<GR64>)) 
			ADC64ri32(1(Class<GR64>) -> impl(Reg<EFLAGS>)) 
		Combined result: 2.01 cycles

-----RCL64r1_EVEX-----
	RCL64r1_EVEX(1(Class<GR64>) -> 0(Class<GR64>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	RCL64r1_EVEX(impl(Reg<EFLAGS>) -> impl(Reg<EFLAGS>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----RCL64r1_ND-----
	RCL64r1_ND(1(Class<GR64>) -> 0(Class<GR64>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	RCL64r1_ND(impl(Reg<EFLAGS>) -> impl(Reg<EFLAGS>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----RCL64rCL-----
	RCL64rCL(1(Class<GR64>) -> 0(Class<GR64>))  [4.04;4.04]
		WARNING generated instructions have multiple dependencies. If they have different latencies the lower one will be shadowed
	RCL64rCL(impl(Reg<EFLAGS>) -> impl(Reg<EFLAGS>))  [4.02;4.02]
		WARNING generated instructions have multiple dependencies. If they have different latencies the lower one will be shadowed
	RCL64rCL(impl(Reg<EFLAGS>) -> 0(Class<GR64>))  [4.03;4.04]
		Dependencies:
			ADC64rr(impl(Reg<EFLAGS>) -> 0(Class<GR64>)) 
			ADC64ri32(1(Class<GR64>) -> impl(Reg<EFLAGS>)) 
		Combined result: 5.04 cycles
	RCL64rCL(1(Class<GR64>) -> impl(Reg<EFLAGS>))  [3.05;3.06]
		Dependencies:
			ADC64rr(impl(Reg<EFLAGS>) -> 0(Class<GR64>)) 
			ADC64ri32(1(Class<GR64>) -> impl(Reg<EFLAGS>)) 
		Combined result: 4.05 cycles

-----RCL64rCL_EVEX-----
	RCL64rCL_EVEX(1(Class<GR64>) -> 0(Class<GR64>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	RCL64rCL_EVEX(impl(Reg<EFLAGS>) -> impl(Reg<EFLAGS>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----RCL64rCL_ND-----
	RCL64rCL_ND(1(Class<GR64>) -> 0(Class<GR64>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	RCL64rCL_ND(impl(Reg<EFLAGS>) -> impl(Reg<EFLAGS>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----RCL64ri-----
	RCL64ri(1(Class<GR64>) -> 0(Class<GR64>))  [4.04;4.04]
		WARNING generated instructions have multiple dependencies. If they have different latencies the lower one will be shadowed
	RCL64ri(impl(Reg<EFLAGS>) -> impl(Reg<EFLAGS>))  [4.07;4.07]
		WARNING generated instructions have multiple dependencies. If they have different latencies the lower one will be shadowed
	RCL64ri(impl(Reg<EFLAGS>) -> 0(Class<GR64>))  [3.1;3.12]
		Dependencies:
			ADC64rr(impl(Reg<EFLAGS>) -> 0(Class<GR64>)) 
			ADC64ri32(1(Class<GR64>) -> impl(Reg<EFLAGS>)) 
		Combined result: 4.12 cycles
	RCL64ri(1(Class<GR64>) -> impl(Reg<EFLAGS>))  [3.04;3.05]
		Dependencies:
			ADC64rr(impl(Reg<EFLAGS>) -> 0(Class<GR64>)) 
			ADC64ri32(1(Class<GR64>) -> impl(Reg<EFLAGS>)) 
		Combined result: 4.04 cycles

-----RCL64ri_EVEX-----
	RCL64ri_EVEX(1(Class<GR64>) -> 0(Class<GR64>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	RCL64ri_EVEX(impl(Reg<EFLAGS>) -> impl(Reg<EFLAGS>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----RCL64ri_ND-----
	RCL64ri_ND(1(Class<GR64>) -> 0(Class<GR64>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	RCL64ri_ND(impl(Reg<EFLAGS>) -> impl(Reg<EFLAGS>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----RCL8r1-----
	RCL8r1(1(Class<GR8>) -> 0(Class<GR8>))  [1.01;1.01]
		WARNING generated instructions have multiple dependencies. If they have different latencies the lower one will be shadowed
	RCL8r1(impl(Reg<EFLAGS>) -> impl(Reg<EFLAGS>))  [1.01;1.01]
		WARNING generated instructions have multiple dependencies. If they have different latencies the lower one will be shadowed
	RCL8r1(impl(Reg<EFLAGS>) -> 0(Class<GR8>))  [0.993;1.01]
		Dependencies:
			ADC8ri8(impl(Reg<EFLAGS>) -> 0(Class<GR8>)) 
			ADC8ri(1(Class<GR8>) -> impl(Reg<EFLAGS>)) 
		Combined result: 2.01 cycles
	RCL8r1(1(Class<GR8>) -> impl(Reg<EFLAGS>))  [1;1.02]
		Dependencies:
			ADC8ri8(impl(Reg<EFLAGS>) -> 0(Class<GR8>)) 
			ADC8ri(1(Class<GR8>) -> impl(Reg<EFLAGS>)) 
		Combined result: 2.02 cycles

-----RCL8r1_EVEX-----
	RCL8r1_EVEX(1(Class<GR8>) -> 0(Class<GR8>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	RCL8r1_EVEX(impl(Reg<EFLAGS>) -> impl(Reg<EFLAGS>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----RCL8r1_ND-----
	RCL8r1_ND(1(Class<GR8>) -> 0(Class<GR8>))  [ERROR_ASSEMBLY]
		ERROR_ASSEMBLY, this instruction cannot be measured on this platform
	RCL8r1_ND(impl(Reg<EFLAGS>) -> impl(Reg<EFLAGS>))  [4.05;4.05]
		 Successful, latency: 4.05

-----RCL8rCL-----
	RCL8rCL(1(Class<GR8>) -> 0(Class<GR8>))  [4.03;4.03]
		WARNING generated instructions have multiple dependencies. If they have different latencies the lower one will be shadowed
	RCL8rCL(impl(Reg<EFLAGS>) -> impl(Reg<EFLAGS>))  [4.04;4.04]
		WARNING generated instructions have multiple dependencies. If they have different latencies the lower one will be shadowed
	RCL8rCL(impl(Reg<EFLAGS>) -> 0(Class<GR8>))  [4.02;4.04]
		Dependencies:
			ADC8ri8(impl(Reg<EFLAGS>) -> 0(Class<GR8>)) 
			ADC8ri(1(Class<GR8>) -> impl(Reg<EFLAGS>)) 
		Combined result: 5.04 cycles
	RCL8rCL(1(Class<GR8>) -> impl(Reg<EFLAGS>))  [4.03;4.05]
		Dependencies:
			ADC8ri8(impl(Reg<EFLAGS>) -> 0(Class<GR8>)) 
			ADC8ri(1(Class<GR8>) -> impl(Reg<EFLAGS>)) 
		Combined result: 5.05 cycles

-----RCL8rCL_EVEX-----
	RCL8rCL_EVEX(1(Class<GR8>) -> 0(Class<GR8>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	RCL8rCL_EVEX(impl(Reg<EFLAGS>) -> impl(Reg<EFLAGS>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----RCL8rCL_ND-----
	RCL8rCL_ND(1(Class<GR8>) -> 0(Class<GR8>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	RCL8rCL_ND(impl(Reg<EFLAGS>) -> impl(Reg<EFLAGS>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----RCL8ri-----
	RCL8ri(1(Class<GR8>) -> 0(Class<GR8>))  [4.03;4.03]
		WARNING generated instructions have multiple dependencies. If they have different latencies the lower one will be shadowed
	RCL8ri(impl(Reg<EFLAGS>) -> impl(Reg<EFLAGS>))  [4.04;4.04]
		WARNING generated instructions have multiple dependencies. If they have different latencies the lower one will be shadowed
	RCL8ri(impl(Reg<EFLAGS>) -> 0(Class<GR8>))  [3.02;3.04]
		Dependencies:
			ADC8ri8(impl(Reg<EFLAGS>) -> 0(Class<GR8>)) 
			ADC8ri(1(Class<GR8>) -> impl(Reg<EFLAGS>)) 
		Combined result: 4.04 cycles
	RCL8ri(1(Class<GR8>) -> impl(Reg<EFLAGS>))  [3.03;3.05]
		Dependencies:
			ADC8ri8(impl(Reg<EFLAGS>) -> 0(Class<GR8>)) 
			ADC8ri(1(Class<GR8>) -> impl(Reg<EFLAGS>)) 
		Combined result: 4.05 cycles

-----RCL8ri_EVEX-----
	RCL8ri_EVEX(1(Class<GR8>) -> 0(Class<GR8>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	RCL8ri_EVEX(impl(Reg<EFLAGS>) -> impl(Reg<EFLAGS>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----RCL8ri_ND-----
	RCL8ri_ND(1(Class<GR8>) -> 0(Class<GR8>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	RCL8ri_ND(impl(Reg<EFLAGS>) -> impl(Reg<EFLAGS>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----RCPPSr-----
	RCPPSr(1(Class<VR128>) -> 0(Class<VR128>))  [4.04;4.04]
		 Successful, latency: 4.04

-----RCPSSr-----
	RCPSSr(1(Class<FR32>) -> 0(Class<FR32>))  [4.06;4.06]
		 Successful, latency: 4.06

-----RCPSSr_Int-----
	RCPSSr_Int(1(Class<VR128>) -> 0(Class<VR128>))  [4.03;4.03]
		 Successful, latency: 4.03
	RCPSSr_Int(2(Class<VR128>) -> 0(Class<VR128>))  [4.02;4.02]
		 Successful, latency: 4.02

-----RCR16r1-----
	RCR16r1(1(Class<GR16>) -> 0(Class<GR16>))  [1.01;1.01]
		WARNING generated instructions have multiple dependencies. If they have different latencies the lower one will be shadowed
	RCR16r1(impl(Reg<EFLAGS>) -> impl(Reg<EFLAGS>))  [0.998;0.998]
		WARNING generated instructions have multiple dependencies. If they have different latencies the lower one will be shadowed
	RCR16r1(impl(Reg<EFLAGS>) -> 0(Class<GR16>))  [0.998;1.02]
		Dependencies:
			ADC16rr(impl(Reg<EFLAGS>) -> 0(Class<GR16>)) 
			ADC16ri(1(Class<GR16>) -> impl(Reg<EFLAGS>)) 
		Combined result: 2.02 cycles
	RCR16r1(1(Class<GR16>) -> impl(Reg<EFLAGS>))  [1;1.02]
		Dependencies:
			ADC16rr(impl(Reg<EFLAGS>) -> 0(Class<GR16>)) 
			ADC16ri(1(Class<GR16>) -> impl(Reg<EFLAGS>)) 
		Combined result: 2.02 cycles

-----RCR16r1_EVEX-----
	RCR16r1_EVEX(1(Class<GR16>) -> 0(Class<GR16>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	RCR16r1_EVEX(impl(Reg<EFLAGS>) -> impl(Reg<EFLAGS>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----RCR16r1_ND-----
	RCR16r1_ND(1(Class<GR16>) -> 0(Class<GR16>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	RCR16r1_ND(impl(Reg<EFLAGS>) -> impl(Reg<EFLAGS>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----RCR16rCL-----
	RCR16rCL(1(Class<GR16>) -> 0(Class<GR16>))  [3.02;3.02]
		WARNING generated instructions have multiple dependencies. If they have different latencies the lower one will be shadowed
	RCR16rCL(impl(Reg<EFLAGS>) -> impl(Reg<EFLAGS>))  [3.04;3.04]
		WARNING generated instructions have multiple dependencies. If they have different latencies the lower one will be shadowed
	RCR16rCL(impl(Reg<EFLAGS>) -> 0(Class<GR16>))  [3.03;3.05]
		Dependencies:
			ADC16rr(impl(Reg<EFLAGS>) -> 0(Class<GR16>)) 
			ADC16ri(1(Class<GR16>) -> impl(Reg<EFLAGS>)) 
		Combined result: 4.05 cycles
	RCR16rCL(1(Class<GR16>) -> impl(Reg<EFLAGS>))  [2.01;2.03]
		Dependencies:
			ADC16rr(impl(Reg<EFLAGS>) -> 0(Class<GR16>)) 
			ADC16ri(1(Class<GR16>) -> impl(Reg<EFLAGS>)) 
		Combined result: 3.03 cycles

-----RCR16rCL_EVEX-----
	RCR16rCL_EVEX(1(Class<GR16>) -> 0(Class<GR16>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	RCR16rCL_EVEX(impl(Reg<EFLAGS>) -> impl(Reg<EFLAGS>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----RCR16rCL_ND-----
	RCR16rCL_ND(1(Class<GR16>) -> 0(Class<GR16>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	RCR16rCL_ND(impl(Reg<EFLAGS>) -> impl(Reg<EFLAGS>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----RCR16ri-----
	RCR16ri(1(Class<GR16>) -> 0(Class<GR16>))  [3.03;3.03]
		WARNING generated instructions have multiple dependencies. If they have different latencies the lower one will be shadowed
	RCR16ri(impl(Reg<EFLAGS>) -> impl(Reg<EFLAGS>))  [3.03;3.03]
		WARNING generated instructions have multiple dependencies. If they have different latencies the lower one will be shadowed
	RCR16ri(impl(Reg<EFLAGS>) -> 0(Class<GR16>))  [2.09;2.11]
		Dependencies:
			ADC16rr(impl(Reg<EFLAGS>) -> 0(Class<GR16>)) 
			ADC16ri(1(Class<GR16>) -> impl(Reg<EFLAGS>)) 
		Combined result: 3.11 cycles
	RCR16ri(1(Class<GR16>) -> impl(Reg<EFLAGS>))  [2.04;2.06]
		Dependencies:
			ADC16rr(impl(Reg<EFLAGS>) -> 0(Class<GR16>)) 
			ADC16ri(1(Class<GR16>) -> impl(Reg<EFLAGS>)) 
		Combined result: 3.06 cycles

-----RCR16ri_EVEX-----
	RCR16ri_EVEX(1(Class<GR16>) -> 0(Class<GR16>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	RCR16ri_EVEX(impl(Reg<EFLAGS>) -> impl(Reg<EFLAGS>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----RCR16ri_ND-----
	RCR16ri_ND(1(Class<GR16>) -> 0(Class<GR16>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	RCR16ri_ND(impl(Reg<EFLAGS>) -> impl(Reg<EFLAGS>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----RCR32r1-----
	RCR32r1(1(Class<GR32>) -> 0(Class<GR32>))  [1.01;1.01]
		WARNING generated instructions have multiple dependencies. If they have different latencies the lower one will be shadowed
	RCR32r1(impl(Reg<EFLAGS>) -> impl(Reg<EFLAGS>))  [1.02;1.02]
		WARNING generated instructions have multiple dependencies. If they have different latencies the lower one will be shadowed
	RCR32r1(impl(Reg<EFLAGS>) -> 0(Class<GR32>))  [1;1.02]
		Dependencies:
			ADC32ri8(impl(Reg<EFLAGS>) -> 0(Class<GR32>)) 
			ADC32ri(1(Class<GR32>) -> impl(Reg<EFLAGS>)) 
		Combined result: 2.02 cycles
	RCR32r1(1(Class<GR32>) -> impl(Reg<EFLAGS>))  [0.986;1]
		Dependencies:
			ADC32ri8(impl(Reg<EFLAGS>) -> 0(Class<GR32>)) 
			ADC32ri(1(Class<GR32>) -> impl(Reg<EFLAGS>)) 
		Combined result: 2.01 cycles

-----RCR32r1_EVEX-----
	RCR32r1_EVEX(1(Class<GR32>) -> 0(Class<GR32>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	RCR32r1_EVEX(impl(Reg<EFLAGS>) -> impl(Reg<EFLAGS>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----RCR32r1_ND-----
	RCR32r1_ND(1(Class<GR32>) -> 0(Class<GR32>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	RCR32r1_ND(impl(Reg<EFLAGS>) -> impl(Reg<EFLAGS>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----RCR32rCL-----
	RCR32rCL(1(Class<GR32>) -> 0(Class<GR32>))  [3.05;3.05]
		WARNING generated instructions have multiple dependencies. If they have different latencies the lower one will be shadowed
	RCR32rCL(impl(Reg<EFLAGS>) -> impl(Reg<EFLAGS>))  [3.03;3.03]
		WARNING generated instructions have multiple dependencies. If they have different latencies the lower one will be shadowed
	RCR32rCL(impl(Reg<EFLAGS>) -> 0(Class<GR32>))  [3.01;3.03]
		Dependencies:
			ADC32ri8(impl(Reg<EFLAGS>) -> 0(Class<GR32>)) 
			ADC32ri(1(Class<GR32>) -> impl(Reg<EFLAGS>)) 
		Combined result: 4.03 cycles
	RCR32rCL(1(Class<GR32>) -> impl(Reg<EFLAGS>))  [3;3.02]
		Dependencies:
			ADC32ri8(impl(Reg<EFLAGS>) -> 0(Class<GR32>)) 
			ADC32ri(1(Class<GR32>) -> impl(Reg<EFLAGS>)) 
		Combined result: 4.03 cycles

-----RCR32rCL_EVEX-----
	RCR32rCL_EVEX(1(Class<GR32>) -> 0(Class<GR32>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	RCR32rCL_EVEX(impl(Reg<EFLAGS>) -> impl(Reg<EFLAGS>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----RCR32rCL_ND-----
	RCR32rCL_ND(1(Class<GR32>) -> 0(Class<GR32>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	RCR32rCL_ND(impl(Reg<EFLAGS>) -> impl(Reg<EFLAGS>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----RCR32ri-----
	RCR32ri(1(Class<GR32>) -> 0(Class<GR32>))  [3.06;3.06]
		WARNING generated instructions have multiple dependencies. If they have different latencies the lower one will be shadowed
	RCR32ri(impl(Reg<EFLAGS>) -> impl(Reg<EFLAGS>))  [3.02;3.02]
		WARNING generated instructions have multiple dependencies. If they have different latencies the lower one will be shadowed
	RCR32ri(impl(Reg<EFLAGS>) -> 0(Class<GR32>))  [2.02;2.04]
		Dependencies:
			ADC32ri8(impl(Reg<EFLAGS>) -> 0(Class<GR32>)) 
			ADC32ri(1(Class<GR32>) -> impl(Reg<EFLAGS>)) 
		Combined result: 3.04 cycles
	RCR32ri(1(Class<GR32>) -> impl(Reg<EFLAGS>))  [1.99;2.01]
		Dependencies:
			ADC32ri8(impl(Reg<EFLAGS>) -> 0(Class<GR32>)) 
			ADC32ri(1(Class<GR32>) -> impl(Reg<EFLAGS>)) 
		Combined result: 3.02 cycles

-----RCR32ri_EVEX-----
	RCR32ri_EVEX(1(Class<GR32>) -> 0(Class<GR32>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	RCR32ri_EVEX(impl(Reg<EFLAGS>) -> impl(Reg<EFLAGS>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----RCR32ri_ND-----
	RCR32ri_ND(1(Class<GR32>) -> 0(Class<GR32>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	RCR32ri_ND(impl(Reg<EFLAGS>) -> impl(Reg<EFLAGS>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----RCR64r1-----
	RCR64r1(1(Class<GR64>) -> 0(Class<GR64>))  [1.01;1.01]
		WARNING generated instructions have multiple dependencies. If they have different latencies the lower one will be shadowed
	RCR64r1(impl(Reg<EFLAGS>) -> impl(Reg<EFLAGS>))  [1.02;1.02]
		WARNING generated instructions have multiple dependencies. If they have different latencies the lower one will be shadowed
	RCR64r1(impl(Reg<EFLAGS>) -> 0(Class<GR64>))  [0.995;1.01]
		Dependencies:
			ADC64rr(impl(Reg<EFLAGS>) -> 0(Class<GR64>)) 
			ADC64ri32(1(Class<GR64>) -> impl(Reg<EFLAGS>)) 
		Combined result: 2.01 cycles
	RCR64r1(1(Class<GR64>) -> impl(Reg<EFLAGS>))  [1.02;1.04]
		Dependencies:
			ADC64rr(impl(Reg<EFLAGS>) -> 0(Class<GR64>)) 
			ADC64ri32(1(Class<GR64>) -> impl(Reg<EFLAGS>)) 
		Combined result: 2.03 cycles

-----RCR64r1_EVEX-----
	RCR64r1_EVEX(1(Class<GR64>) -> 0(Class<GR64>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	RCR64r1_EVEX(impl(Reg<EFLAGS>) -> impl(Reg<EFLAGS>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----RCR64r1_ND-----
	RCR64r1_ND(1(Class<GR64>) -> 0(Class<GR64>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	RCR64r1_ND(impl(Reg<EFLAGS>) -> impl(Reg<EFLAGS>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----RCR64rCL-----
	RCR64rCL(1(Class<GR64>) -> 0(Class<GR64>))  [3.03;3.03]
		WARNING generated instructions have multiple dependencies. If they have different latencies the lower one will be shadowed
	RCR64rCL(impl(Reg<EFLAGS>) -> impl(Reg<EFLAGS>))  [3.02;3.02]
		WARNING generated instructions have multiple dependencies. If they have different latencies the lower one will be shadowed
	RCR64rCL(impl(Reg<EFLAGS>) -> 0(Class<GR64>))  [3.03;3.05]
		Dependencies:
			ADC64rr(impl(Reg<EFLAGS>) -> 0(Class<GR64>)) 
			ADC64ri32(1(Class<GR64>) -> impl(Reg<EFLAGS>)) 
		Combined result: 4.05 cycles
	RCR64rCL(1(Class<GR64>) -> impl(Reg<EFLAGS>))  [2.02;2.04]
		Dependencies:
			ADC64rr(impl(Reg<EFLAGS>) -> 0(Class<GR64>)) 
			ADC64ri32(1(Class<GR64>) -> impl(Reg<EFLAGS>)) 
		Combined result: 3.03 cycles

-----RCR64rCL_EVEX-----
	RCR64rCL_EVEX(1(Class<GR64>) -> 0(Class<GR64>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	RCR64rCL_EVEX(impl(Reg<EFLAGS>) -> impl(Reg<EFLAGS>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----RCR64rCL_ND-----
	RCR64rCL_ND(1(Class<GR64>) -> 0(Class<GR64>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	RCR64rCL_ND(impl(Reg<EFLAGS>) -> impl(Reg<EFLAGS>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----RCR64ri-----
	RCR64ri(1(Class<GR64>) -> 0(Class<GR64>))  [3.04;3.04]
		WARNING generated instructions have multiple dependencies. If they have different latencies the lower one will be shadowed
	RCR64ri(impl(Reg<EFLAGS>) -> impl(Reg<EFLAGS>))  [3.05;3.05]
		WARNING generated instructions have multiple dependencies. If they have different latencies the lower one will be shadowed
	RCR64ri(impl(Reg<EFLAGS>) -> 0(Class<GR64>))  [2.1;2.12]
		Dependencies:
			ADC64rr(impl(Reg<EFLAGS>) -> 0(Class<GR64>)) 
			ADC64ri32(1(Class<GR64>) -> impl(Reg<EFLAGS>)) 
		Combined result: 3.12 cycles
	RCR64ri(1(Class<GR64>) -> impl(Reg<EFLAGS>))  [2;2.02]
		Dependencies:
			ADC64rr(impl(Reg<EFLAGS>) -> 0(Class<GR64>)) 
			ADC64ri32(1(Class<GR64>) -> impl(Reg<EFLAGS>)) 
		Combined result: 3.01 cycles

-----RCR64ri_EVEX-----
	RCR64ri_EVEX(1(Class<GR64>) -> 0(Class<GR64>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	RCR64ri_EVEX(impl(Reg<EFLAGS>) -> impl(Reg<EFLAGS>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----RCR64ri_ND-----
	RCR64ri_ND(1(Class<GR64>) -> 0(Class<GR64>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	RCR64ri_ND(impl(Reg<EFLAGS>) -> impl(Reg<EFLAGS>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----RCR8r1-----
	RCR8r1(1(Class<GR8>) -> 0(Class<GR8>))  [1.01;1.01]
		WARNING generated instructions have multiple dependencies. If they have different latencies the lower one will be shadowed
	RCR8r1(impl(Reg<EFLAGS>) -> impl(Reg<EFLAGS>))  [1.01;1.01]
		WARNING generated instructions have multiple dependencies. If they have different latencies the lower one will be shadowed
	RCR8r1(impl(Reg<EFLAGS>) -> 0(Class<GR8>))  [1.02;1.03]
		Dependencies:
			ADC8ri8(impl(Reg<EFLAGS>) -> 0(Class<GR8>)) 
			ADC8ri(1(Class<GR8>) -> impl(Reg<EFLAGS>)) 
		Combined result: 2.03 cycles
	RCR8r1(1(Class<GR8>) -> impl(Reg<EFLAGS>))  [1;1.02]
		Dependencies:
			ADC8ri8(impl(Reg<EFLAGS>) -> 0(Class<GR8>)) 
			ADC8ri(1(Class<GR8>) -> impl(Reg<EFLAGS>)) 
		Combined result: 2.02 cycles

-----RCR8r1_EVEX-----
	RCR8r1_EVEX(1(Class<GR8>) -> 0(Class<GR8>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	RCR8r1_EVEX(impl(Reg<EFLAGS>) -> impl(Reg<EFLAGS>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----RCR8r1_ND-----
	RCR8r1_ND(1(Class<GR8>) -> 0(Class<GR8>))  [ERROR_ASSEMBLY]
		ERROR_ASSEMBLY, this instruction cannot be measured on this platform
	RCR8r1_ND(impl(Reg<EFLAGS>) -> impl(Reg<EFLAGS>))  [3.02;3.02]
		 Successful, latency: 3.02

-----RCR8rCL-----
	RCR8rCL(1(Class<GR8>) -> 0(Class<GR8>))  [3.02;3.02]
		WARNING generated instructions have multiple dependencies. If they have different latencies the lower one will be shadowed
	RCR8rCL(impl(Reg<EFLAGS>) -> impl(Reg<EFLAGS>))  [3.02;3.02]
		WARNING generated instructions have multiple dependencies. If they have different latencies the lower one will be shadowed
	RCR8rCL(impl(Reg<EFLAGS>) -> 0(Class<GR8>))  [3.01;3.03]
		Dependencies:
			ADC8ri8(impl(Reg<EFLAGS>) -> 0(Class<GR8>)) 
			ADC8ri(1(Class<GR8>) -> impl(Reg<EFLAGS>)) 
		Combined result: 4.03 cycles
	RCR8rCL(1(Class<GR8>) -> impl(Reg<EFLAGS>))  [3.02;3.03]
		Dependencies:
			ADC8ri8(impl(Reg<EFLAGS>) -> 0(Class<GR8>)) 
			ADC8ri(1(Class<GR8>) -> impl(Reg<EFLAGS>)) 
		Combined result: 4.03 cycles

-----RCR8rCL_EVEX-----
	RCR8rCL_EVEX(1(Class<GR8>) -> 0(Class<GR8>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	RCR8rCL_EVEX(impl(Reg<EFLAGS>) -> impl(Reg<EFLAGS>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----RCR8rCL_ND-----
	RCR8rCL_ND(1(Class<GR8>) -> 0(Class<GR8>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	RCR8rCL_ND(impl(Reg<EFLAGS>) -> impl(Reg<EFLAGS>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----RCR8ri-----
	RCR8ri(1(Class<GR8>) -> 0(Class<GR8>))  [3.02;3.02]
		WARNING generated instructions have multiple dependencies. If they have different latencies the lower one will be shadowed
	RCR8ri(impl(Reg<EFLAGS>) -> impl(Reg<EFLAGS>))  [3.04;3.04]
		WARNING generated instructions have multiple dependencies. If they have different latencies the lower one will be shadowed
	RCR8ri(impl(Reg<EFLAGS>) -> 0(Class<GR8>))  [2;2.02]
		Dependencies:
			ADC8ri8(impl(Reg<EFLAGS>) -> 0(Class<GR8>)) 
			ADC8ri(1(Class<GR8>) -> impl(Reg<EFLAGS>)) 
		Combined result: 3.02 cycles
	RCR8ri(1(Class<GR8>) -> impl(Reg<EFLAGS>))  [2.01;2.03]
		Dependencies:
			ADC8ri8(impl(Reg<EFLAGS>) -> 0(Class<GR8>)) 
			ADC8ri(1(Class<GR8>) -> impl(Reg<EFLAGS>)) 
		Combined result: 3.03 cycles

-----RCR8ri_EVEX-----
	RCR8ri_EVEX(1(Class<GR8>) -> 0(Class<GR8>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	RCR8ri_EVEX(impl(Reg<EFLAGS>) -> impl(Reg<EFLAGS>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----RCR8ri_ND-----
	RCR8ri_ND(1(Class<GR8>) -> 0(Class<GR8>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	RCR8ri_ND(impl(Reg<EFLAGS>) -> impl(Reg<EFLAGS>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----RDMSR-----
	0x138383b8e168
		ERROR_SIGSEGV, this instruction cannot be measured on this platform

-----RDPKRUr-----
	0x138383b8e1d8
		ERROR_SIGSEGV, this instruction cannot be measured on this platform

-----RDPRU-----
	0x138383b8e2b8
		ERROR_GENERIC, this instruction cannot be measured on this platform

-----REPNE_PREFIX-----
	REPNE_PREFIX(impl(Reg<ECX>) -> impl(Reg<ECX>))  [ERROR_SIGSEGV]
		ERROR_SIGSEGV, this instruction cannot be measured on this platform

-----REP_PREFIX-----
	REP_PREFIX(impl(Reg<ECX>) -> impl(Reg<ECX>))  [ERROR_SIGSEGV]
		ERROR_SIGSEGV, this instruction cannot be measured on this platform

-----RMPADJUST-----
	0x138383b8e408
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----RMPQUERY-----
	RMPQUERY(impl(Reg<RAX>) -> impl(Reg<RAX>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	RMPQUERY(impl(Reg<RDX>) -> impl(Reg<RDX>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----RMPUPDATE-----
	0x138383b8e718
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----ROL16r1-----
	ROL16r1(1(Class<GR16>) -> 0(Class<GR16>))  [1;1]
		 Successful, latency: 1
	ROL16r1(1(Class<GR16>) -> impl(Reg<EFLAGS>))  [ERROR_UNUSUAL_LATENCY]
		Dependencies:
			ADC16rr(impl(Reg<EFLAGS>) -> 0(Class<GR16>)) 
			ADC16ri(1(Class<GR16>) -> impl(Reg<EFLAGS>)) 
		Combined result: 1.02 cycles

-----ROL16r1_EVEX-----
	ROL16r1_EVEX(1(Class<GR16>) -> 0(Class<GR16>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----ROL16r1_ND-----
	ROL16r1_ND(1(Class<GR16>) -> 0(Class<GR16>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----ROL16r1_NF-----
	ROL16r1_NF(1(Class<GR16>) -> 0(Class<GR16>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----ROL16r1_NF_ND-----
	ROL16r1_NF_ND(1(Class<GR16>) -> 0(Class<GR16>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----ROL16rCL-----
	ROL16rCL(1(Class<GR16>) -> 0(Class<GR16>))  [1.01;1.01]
		 Successful, latency: 1.01
	ROL16rCL(1(Class<GR16>) -> impl(Reg<EFLAGS>))  [ERROR_UNUSUAL_LATENCY]
		Dependencies:
			ADC16rr(impl(Reg<EFLAGS>) -> 0(Class<GR16>)) 
			ADC16ri(1(Class<GR16>) -> impl(Reg<EFLAGS>)) 
		Combined result: 1.01 cycles

-----ROL16rCL_EVEX-----
	ROL16rCL_EVEX(1(Class<GR16>) -> 0(Class<GR16>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----ROL16rCL_ND-----
	ROL16rCL_ND(1(Class<GR16>) -> 0(Class<GR16>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----ROL16rCL_NF-----
	ROL16rCL_NF(1(Class<GR16>) -> 0(Class<GR16>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----ROL16rCL_NF_ND-----
	ROL16rCL_NF_ND(1(Class<GR16>) -> 0(Class<GR16>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----ROL16ri-----
	ROL16ri(1(Class<GR16>) -> 0(Class<GR16>))  [1.01;1.01]
		 Successful, latency: 1.01
	ROL16ri(1(Class<GR16>) -> impl(Reg<EFLAGS>))  [ERROR_UNUSUAL_LATENCY]
		Dependencies:
			ADC16rr(impl(Reg<EFLAGS>) -> 0(Class<GR16>)) 
			ADC16ri(1(Class<GR16>) -> impl(Reg<EFLAGS>)) 
		Combined result: 0.998 cycles

-----ROL16ri_EVEX-----
	ROL16ri_EVEX(1(Class<GR16>) -> 0(Class<GR16>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----ROL16ri_ND-----
	ROL16ri_ND(1(Class<GR16>) -> 0(Class<GR16>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----ROL16ri_NF-----
	ROL16ri_NF(1(Class<GR16>) -> 0(Class<GR16>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----ROL16ri_NF_ND-----
	ROL16ri_NF_ND(1(Class<GR16>) -> 0(Class<GR16>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----ROL32r1-----
	ROL32r1(1(Class<GR32>) -> 0(Class<GR32>))  [1;1]
		 Successful, latency: 1
	ROL32r1(1(Class<GR32>) -> impl(Reg<EFLAGS>))  [ERROR_UNUSUAL_LATENCY]
		Dependencies:
			ADC32ri8(impl(Reg<EFLAGS>) -> 0(Class<GR32>)) 
			ADC32ri(1(Class<GR32>) -> impl(Reg<EFLAGS>)) 
		Combined result: 1 cycles

-----ROL32r1_EVEX-----
	ROL32r1_EVEX(1(Class<GR32>) -> 0(Class<GR32>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----ROL32r1_ND-----
	ROL32r1_ND(1(Class<GR32>) -> 0(Class<GR32>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----ROL32r1_NF-----
	ROL32r1_NF(1(Class<GR32>) -> 0(Class<GR32>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----ROL32r1_NF_ND-----
	ROL32r1_NF_ND(1(Class<GR32>) -> 0(Class<GR32>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----ROL32rCL-----
	ROL32rCL(1(Class<GR32>) -> 0(Class<GR32>))  [1.01;1.01]
		 Successful, latency: 1.01
	ROL32rCL(1(Class<GR32>) -> impl(Reg<EFLAGS>))  [31.4;31.4]
		Dependencies:
			ADC32ri8(impl(Reg<EFLAGS>) -> 0(Class<GR32>)) 
			ADC32ri(1(Class<GR32>) -> impl(Reg<EFLAGS>)) 
		Combined result: 32.4 cycles

-----ROL32rCL_EVEX-----
	ROL32rCL_EVEX(1(Class<GR32>) -> 0(Class<GR32>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----ROL32rCL_ND-----
	ROL32rCL_ND(1(Class<GR32>) -> 0(Class<GR32>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----ROL32rCL_NF-----
	ROL32rCL_NF(1(Class<GR32>) -> 0(Class<GR32>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----ROL32rCL_NF_ND-----
	ROL32rCL_NF_ND(1(Class<GR32>) -> 0(Class<GR32>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----ROL32ri-----
	ROL32ri(1(Class<GR32>) -> 0(Class<GR32>))  [1.01;1.01]
		 Successful, latency: 1.01
	ROL32ri(1(Class<GR32>) -> impl(Reg<EFLAGS>))  [ERROR_UNUSUAL_LATENCY]
		Dependencies:
			ADC32ri8(impl(Reg<EFLAGS>) -> 0(Class<GR32>)) 
			ADC32ri(1(Class<GR32>) -> impl(Reg<EFLAGS>)) 
		Combined result: 1 cycles

-----ROL32ri_EVEX-----
	ROL32ri_EVEX(1(Class<GR32>) -> 0(Class<GR32>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----ROL32ri_ND-----
	ROL32ri_ND(1(Class<GR32>) -> 0(Class<GR32>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----ROL32ri_NF-----
	ROL32ri_NF(1(Class<GR32>) -> 0(Class<GR32>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----ROL32ri_NF_ND-----
	ROL32ri_NF_ND(1(Class<GR32>) -> 0(Class<GR32>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----ROL64r1-----
	ROL64r1(1(Class<GR64>) -> 0(Class<GR64>))  [1;1]
		 Successful, latency: 1
	ROL64r1(1(Class<GR64>) -> impl(Reg<EFLAGS>))  [ERROR_UNUSUAL_LATENCY]
		Dependencies:
			ADC64rr(impl(Reg<EFLAGS>) -> 0(Class<GR64>)) 
			ADC64ri32(1(Class<GR64>) -> impl(Reg<EFLAGS>)) 
		Combined result: 1 cycles

-----ROL64r1_EVEX-----
	ROL64r1_EVEX(1(Class<GR64>) -> 0(Class<GR64>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----ROL64r1_ND-----
	ROL64r1_ND(1(Class<GR64>) -> 0(Class<GR64>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----ROL64r1_NF-----
	ROL64r1_NF(1(Class<GR64>) -> 0(Class<GR64>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----ROL64r1_NF_ND-----
	ROL64r1_NF_ND(1(Class<GR64>) -> 0(Class<GR64>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----ROL64rCL-----
	ROL64rCL(1(Class<GR64>) -> 0(Class<GR64>))  [1.01;1.01]
		 Successful, latency: 1.01
	ROL64rCL(1(Class<GR64>) -> impl(Reg<EFLAGS>))  [ERROR_UNUSUAL_LATENCY]
		Dependencies:
			ADC64rr(impl(Reg<EFLAGS>) -> 0(Class<GR64>)) 
			ADC64ri32(1(Class<GR64>) -> impl(Reg<EFLAGS>)) 
		Combined result: 1.01 cycles

-----ROL64rCL_EVEX-----
	ROL64rCL_EVEX(1(Class<GR64>) -> 0(Class<GR64>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----ROL64rCL_ND-----
	ROL64rCL_ND(1(Class<GR64>) -> 0(Class<GR64>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----ROL64rCL_NF-----
	ROL64rCL_NF(1(Class<GR64>) -> 0(Class<GR64>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----ROL64rCL_NF_ND-----
	ROL64rCL_NF_ND(1(Class<GR64>) -> 0(Class<GR64>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----ROL64ri-----
	ROL64ri(1(Class<GR64>) -> 0(Class<GR64>))  [1.01;1.01]
		 Successful, latency: 1.01
	ROL64ri(1(Class<GR64>) -> impl(Reg<EFLAGS>))  [ERROR_UNUSUAL_LATENCY]
		Dependencies:
			ADC64rr(impl(Reg<EFLAGS>) -> 0(Class<GR64>)) 
			ADC64ri32(1(Class<GR64>) -> impl(Reg<EFLAGS>)) 
		Combined result: 1.01 cycles

-----ROL64ri_EVEX-----
	ROL64ri_EVEX(1(Class<GR64>) -> 0(Class<GR64>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----ROL64ri_ND-----
	ROL64ri_ND(1(Class<GR64>) -> 0(Class<GR64>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----ROL64ri_NF-----
	ROL64ri_NF(1(Class<GR64>) -> 0(Class<GR64>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----ROL64ri_NF_ND-----
	ROL64ri_NF_ND(1(Class<GR64>) -> 0(Class<GR64>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----ROL8r1-----
	ROL8r1(1(Class<GR8>) -> 0(Class<GR8>))  [1.01;1.01]
		 Successful, latency: 1.01
	ROL8r1(1(Class<GR8>) -> impl(Reg<EFLAGS>))  [ERROR_UNUSUAL_LATENCY]
		Dependencies:
			ADC8ri8(impl(Reg<EFLAGS>) -> 0(Class<GR8>)) 
			ADC8ri(1(Class<GR8>) -> impl(Reg<EFLAGS>)) 
		Combined result: 1 cycles

-----ROL8r1_EVEX-----
	ROL8r1_EVEX(1(Class<GR8>) -> 0(Class<GR8>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----ROL8r1_ND-----
	ROL8r1_ND(1(Class<GR8>) -> 0(Class<GR8>))  [ERROR_ASSEMBLY]
		ERROR_ASSEMBLY, this instruction cannot be measured on this platform

-----ROL8r1_NF-----
	ROL8r1_NF(1(Class<GR8>) -> 0(Class<GR8>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----ROL8r1_NF_ND-----
	ROL8r1_NF_ND(1(Class<GR8>) -> 0(Class<GR8>))  [ERROR_ASSEMBLY]
		ERROR_ASSEMBLY, this instruction cannot be measured on this platform

-----ROL8rCL-----
	ROL8rCL(1(Class<GR8>) -> 0(Class<GR8>))  [1.02;1.02]
		 Successful, latency: 1.02
	ROL8rCL(1(Class<GR8>) -> impl(Reg<EFLAGS>))  [31.5;31.5]
		Dependencies:
			ADC8ri8(impl(Reg<EFLAGS>) -> 0(Class<GR8>)) 
			ADC8ri(1(Class<GR8>) -> impl(Reg<EFLAGS>)) 
		Combined result: 32.5 cycles

-----ROL8rCL_EVEX-----
	ROL8rCL_EVEX(1(Class<GR8>) -> 0(Class<GR8>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----ROL8rCL_ND-----
	ROL8rCL_ND(1(Class<GR8>) -> 0(Class<GR8>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----ROL8rCL_NF-----
	ROL8rCL_NF(1(Class<GR8>) -> 0(Class<GR8>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----ROL8rCL_NF_ND-----
	ROL8rCL_NF_ND(1(Class<GR8>) -> 0(Class<GR8>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----ROL8ri-----
	ROL8ri(1(Class<GR8>) -> 0(Class<GR8>))  [1.01;1.01]
		 Successful, latency: 1.01
	ROL8ri(1(Class<GR8>) -> impl(Reg<EFLAGS>))  [ERROR_UNUSUAL_LATENCY]
		Dependencies:
			ADC8ri8(impl(Reg<EFLAGS>) -> 0(Class<GR8>)) 
			ADC8ri(1(Class<GR8>) -> impl(Reg<EFLAGS>)) 
		Combined result: 1 cycles

-----ROL8ri_EVEX-----
	ROL8ri_EVEX(1(Class<GR8>) -> 0(Class<GR8>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----ROL8ri_ND-----
	ROL8ri_ND(1(Class<GR8>) -> 0(Class<GR8>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----ROL8ri_NF-----
	ROL8ri_NF(1(Class<GR8>) -> 0(Class<GR8>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----ROL8ri_NF_ND-----
	ROL8ri_NF_ND(1(Class<GR8>) -> 0(Class<GR8>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----ROR16r1-----
	ROR16r1(1(Class<GR16>) -> 0(Class<GR16>))  [1.01;1.01]
		 Successful, latency: 1.01
	ROR16r1(1(Class<GR16>) -> impl(Reg<EFLAGS>))  [ERROR_UNUSUAL_LATENCY]
		Dependencies:
			ADC16rr(impl(Reg<EFLAGS>) -> 0(Class<GR16>)) 
			ADC16ri(1(Class<GR16>) -> impl(Reg<EFLAGS>)) 
		Combined result: 0.999 cycles

-----ROR16r1_EVEX-----
	ROR16r1_EVEX(1(Class<GR16>) -> 0(Class<GR16>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----ROR16r1_ND-----
	ROR16r1_ND(1(Class<GR16>) -> 0(Class<GR16>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----ROR16r1_NF-----
	ROR16r1_NF(1(Class<GR16>) -> 0(Class<GR16>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----ROR16r1_NF_ND-----
	ROR16r1_NF_ND(1(Class<GR16>) -> 0(Class<GR16>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----ROR16rCL-----
	ROR16rCL(1(Class<GR16>) -> 0(Class<GR16>))  [1.01;1.01]
		 Successful, latency: 1.01
	ROR16rCL(1(Class<GR16>) -> impl(Reg<EFLAGS>))  [ERROR_UNUSUAL_LATENCY]
		Dependencies:
			ADC16rr(impl(Reg<EFLAGS>) -> 0(Class<GR16>)) 
			ADC16ri(1(Class<GR16>) -> impl(Reg<EFLAGS>)) 
		Combined result: 1.01 cycles

-----ROR16rCL_EVEX-----
	ROR16rCL_EVEX(1(Class<GR16>) -> 0(Class<GR16>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----ROR16rCL_ND-----
	ROR16rCL_ND(1(Class<GR16>) -> 0(Class<GR16>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----ROR16rCL_NF-----
	ROR16rCL_NF(1(Class<GR16>) -> 0(Class<GR16>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----ROR16rCL_NF_ND-----
	ROR16rCL_NF_ND(1(Class<GR16>) -> 0(Class<GR16>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----ROR16ri-----
	ROR16ri(1(Class<GR16>) -> 0(Class<GR16>))  [1.02;1.02]
		 Successful, latency: 1.02
	ROR16ri(1(Class<GR16>) -> impl(Reg<EFLAGS>))  [ERROR_UNUSUAL_LATENCY]
		Dependencies:
			ADC16rr(impl(Reg<EFLAGS>) -> 0(Class<GR16>)) 
			ADC16ri(1(Class<GR16>) -> impl(Reg<EFLAGS>)) 
		Combined result: 1 cycles

-----ROR16ri_EVEX-----
	ROR16ri_EVEX(1(Class<GR16>) -> 0(Class<GR16>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----ROR16ri_ND-----
	ROR16ri_ND(1(Class<GR16>) -> 0(Class<GR16>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----ROR16ri_NF-----
	ROR16ri_NF(1(Class<GR16>) -> 0(Class<GR16>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----ROR16ri_NF_ND-----
	ROR16ri_NF_ND(1(Class<GR16>) -> 0(Class<GR16>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----ROR32r1-----
	ROR32r1(1(Class<GR32>) -> 0(Class<GR32>))  [1.01;1.01]
		 Successful, latency: 1.01
	ROR32r1(1(Class<GR32>) -> impl(Reg<EFLAGS>))  [ERROR_UNUSUAL_LATENCY]
		Dependencies:
			ADC32ri8(impl(Reg<EFLAGS>) -> 0(Class<GR32>)) 
			ADC32ri(1(Class<GR32>) -> impl(Reg<EFLAGS>)) 
		Combined result: 1 cycles

-----ROR32r1_EVEX-----
	ROR32r1_EVEX(1(Class<GR32>) -> 0(Class<GR32>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----ROR32r1_ND-----
	ROR32r1_ND(1(Class<GR32>) -> 0(Class<GR32>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----ROR32r1_NF-----
	ROR32r1_NF(1(Class<GR32>) -> 0(Class<GR32>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----ROR32r1_NF_ND-----
	ROR32r1_NF_ND(1(Class<GR32>) -> 0(Class<GR32>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----ROR32rCL-----
	ROR32rCL(1(Class<GR32>) -> 0(Class<GR32>))  [1.02;1.02]
		 Successful, latency: 1.02
	ROR32rCL(1(Class<GR32>) -> impl(Reg<EFLAGS>))  [31.5;31.5]
		Dependencies:
			ADC32ri8(impl(Reg<EFLAGS>) -> 0(Class<GR32>)) 
			ADC32ri(1(Class<GR32>) -> impl(Reg<EFLAGS>)) 
		Combined result: 32.5 cycles

-----ROR32rCL_EVEX-----
	ROR32rCL_EVEX(1(Class<GR32>) -> 0(Class<GR32>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----ROR32rCL_ND-----
	ROR32rCL_ND(1(Class<GR32>) -> 0(Class<GR32>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----ROR32rCL_NF-----
	ROR32rCL_NF(1(Class<GR32>) -> 0(Class<GR32>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----ROR32rCL_NF_ND-----
	ROR32rCL_NF_ND(1(Class<GR32>) -> 0(Class<GR32>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----ROR32ri-----
	ROR32ri(1(Class<GR32>) -> 0(Class<GR32>))  [1.02;1.02]
		 Successful, latency: 1.02
	ROR32ri(1(Class<GR32>) -> impl(Reg<EFLAGS>))  [ERROR_UNUSUAL_LATENCY]
		Dependencies:
			ADC32ri8(impl(Reg<EFLAGS>) -> 0(Class<GR32>)) 
			ADC32ri(1(Class<GR32>) -> impl(Reg<EFLAGS>)) 
		Combined result: 1.02 cycles

-----ROR32ri_EVEX-----
	ROR32ri_EVEX(1(Class<GR32>) -> 0(Class<GR32>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----ROR32ri_ND-----
	ROR32ri_ND(1(Class<GR32>) -> 0(Class<GR32>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----ROR32ri_NF-----
	ROR32ri_NF(1(Class<GR32>) -> 0(Class<GR32>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----ROR32ri_NF_ND-----
	ROR32ri_NF_ND(1(Class<GR32>) -> 0(Class<GR32>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----ROR64r1-----
	ROR64r1(1(Class<GR64>) -> 0(Class<GR64>))  [1.02;1.02]
		 Successful, latency: 1.02
	ROR64r1(1(Class<GR64>) -> impl(Reg<EFLAGS>))  [ERROR_UNUSUAL_LATENCY]
		Dependencies:
			ADC64rr(impl(Reg<EFLAGS>) -> 0(Class<GR64>)) 
			ADC64ri32(1(Class<GR64>) -> impl(Reg<EFLAGS>)) 
		Combined result: 1.01 cycles

-----ROR64r1_EVEX-----
	ROR64r1_EVEX(1(Class<GR64>) -> 0(Class<GR64>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----ROR64r1_ND-----
	ROR64r1_ND(1(Class<GR64>) -> 0(Class<GR64>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----ROR64r1_NF-----
	ROR64r1_NF(1(Class<GR64>) -> 0(Class<GR64>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----ROR64r1_NF_ND-----
	ROR64r1_NF_ND(1(Class<GR64>) -> 0(Class<GR64>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----ROR64rCL-----
	ROR64rCL(1(Class<GR64>) -> 0(Class<GR64>))  [1.01;1.01]
		 Successful, latency: 1.01
	ROR64rCL(1(Class<GR64>) -> impl(Reg<EFLAGS>))  [ERROR_UNUSUAL_LATENCY]
		Dependencies:
			ADC64rr(impl(Reg<EFLAGS>) -> 0(Class<GR64>)) 
			ADC64ri32(1(Class<GR64>) -> impl(Reg<EFLAGS>)) 
		Combined result: 1.02 cycles

-----ROR64rCL_EVEX-----
	ROR64rCL_EVEX(1(Class<GR64>) -> 0(Class<GR64>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----ROR64rCL_ND-----
	ROR64rCL_ND(1(Class<GR64>) -> 0(Class<GR64>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----ROR64rCL_NF-----
	ROR64rCL_NF(1(Class<GR64>) -> 0(Class<GR64>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----ROR64rCL_NF_ND-----
	ROR64rCL_NF_ND(1(Class<GR64>) -> 0(Class<GR64>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----ROR64ri-----
	ROR64ri(1(Class<GR64>) -> 0(Class<GR64>))  [1;1]
		 Successful, latency: 1
	ROR64ri(1(Class<GR64>) -> impl(Reg<EFLAGS>))  [ERROR_UNUSUAL_LATENCY]
		Dependencies:
			ADC64rr(impl(Reg<EFLAGS>) -> 0(Class<GR64>)) 
			ADC64ri32(1(Class<GR64>) -> impl(Reg<EFLAGS>)) 
		Combined result: 1 cycles

-----ROR64ri_EVEX-----
	ROR64ri_EVEX(1(Class<GR64>) -> 0(Class<GR64>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----ROR64ri_ND-----
	ROR64ri_ND(1(Class<GR64>) -> 0(Class<GR64>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----ROR64ri_NF-----
	ROR64ri_NF(1(Class<GR64>) -> 0(Class<GR64>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----ROR64ri_NF_ND-----
	ROR64ri_NF_ND(1(Class<GR64>) -> 0(Class<GR64>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----ROR8r1-----
	ROR8r1(1(Class<GR8>) -> 0(Class<GR8>))  [1.02;1.02]
		 Successful, latency: 1.02
	ROR8r1(1(Class<GR8>) -> impl(Reg<EFLAGS>))  [ERROR_UNUSUAL_LATENCY]
		Dependencies:
			ADC8ri8(impl(Reg<EFLAGS>) -> 0(Class<GR8>)) 
			ADC8ri(1(Class<GR8>) -> impl(Reg<EFLAGS>)) 
		Combined result: 1 cycles

-----ROR8r1_EVEX-----
	ROR8r1_EVEX(1(Class<GR8>) -> 0(Class<GR8>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----ROR8r1_ND-----
	ROR8r1_ND(1(Class<GR8>) -> 0(Class<GR8>))  [ERROR_ASSEMBLY]
		ERROR_ASSEMBLY, this instruction cannot be measured on this platform

-----ROR8r1_NF-----
	ROR8r1_NF(1(Class<GR8>) -> 0(Class<GR8>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----ROR8r1_NF_ND-----
	ROR8r1_NF_ND(1(Class<GR8>) -> 0(Class<GR8>))  [ERROR_ASSEMBLY]
		ERROR_ASSEMBLY, this instruction cannot be measured on this platform

-----ROR8rCL-----
	ROR8rCL(1(Class<GR8>) -> 0(Class<GR8>))  [1;1]
		 Successful, latency: 1
	ROR8rCL(1(Class<GR8>) -> impl(Reg<EFLAGS>))  [31.5;31.5]
		Dependencies:
			ADC8ri8(impl(Reg<EFLAGS>) -> 0(Class<GR8>)) 
			ADC8ri(1(Class<GR8>) -> impl(Reg<EFLAGS>)) 
		Combined result: 32.5 cycles

-----ROR8rCL_EVEX-----
	ROR8rCL_EVEX(1(Class<GR8>) -> 0(Class<GR8>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----ROR8rCL_ND-----
	ROR8rCL_ND(1(Class<GR8>) -> 0(Class<GR8>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----ROR8rCL_NF-----
	ROR8rCL_NF(1(Class<GR8>) -> 0(Class<GR8>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----ROR8rCL_NF_ND-----
	ROR8rCL_NF_ND(1(Class<GR8>) -> 0(Class<GR8>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----ROR8ri-----
	ROR8ri(1(Class<GR8>) -> 0(Class<GR8>))  [1.01;1.01]
		 Successful, latency: 1.01
	ROR8ri(1(Class<GR8>) -> impl(Reg<EFLAGS>))  [ERROR_UNUSUAL_LATENCY]
		Dependencies:
			ADC8ri8(impl(Reg<EFLAGS>) -> 0(Class<GR8>)) 
			ADC8ri(1(Class<GR8>) -> impl(Reg<EFLAGS>)) 
		Combined result: 1.01 cycles

-----ROR8ri_EVEX-----
	ROR8ri_EVEX(1(Class<GR8>) -> 0(Class<GR8>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----ROR8ri_ND-----
	ROR8ri_ND(1(Class<GR8>) -> 0(Class<GR8>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----ROR8ri_NF-----
	ROR8ri_NF(1(Class<GR8>) -> 0(Class<GR8>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----ROR8ri_NF_ND-----
	ROR8ri_NF_ND(1(Class<GR8>) -> 0(Class<GR8>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----RORX32ri-----
	RORX32ri(1(Class<GR32>) -> 0(Class<GR32>))  [1.01;1.01]
		 Successful, latency: 1.01

-----RORX32ri_EVEX-----
	RORX32ri_EVEX(1(Class<GR32>) -> 0(Class<GR32>))  [1;1]
		 Successful, latency: 1

-----RORX64ri-----
	RORX64ri(1(Class<GR64>) -> 0(Class<GR64>))  [1.03;1.03]
		 Successful, latency: 1.03

-----RORX64ri_EVEX-----
	RORX64ri_EVEX(1(Class<GR64>) -> 0(Class<GR64>))  [1.01;1.01]
		 Successful, latency: 1.01

-----ROUNDPDri-----
	ROUNDPDri(1(Class<VR128>) -> 0(Class<VR128>))  [3.02;3.02]
		 Successful, latency: 3.02

-----ROUNDPSri-----
	ROUNDPSri(1(Class<VR128>) -> 0(Class<VR128>))  [3.02;3.02]
		 Successful, latency: 3.02

-----ROUNDSDri-----
	ROUNDSDri(1(Class<FR64>) -> 0(Class<FR64>))  [3.04;3.04]
		 Successful, latency: 3.04

-----ROUNDSDri_Int-----
	ROUNDSDri_Int(1(Class<VR128>) -> 0(Class<VR128>))  [3.03;3.03]
		 Successful, latency: 3.03
	ROUNDSDri_Int(2(Class<VR128>) -> 0(Class<VR128>))  [3.03;3.03]
		 Successful, latency: 3.03

-----ROUNDSSri-----
	ROUNDSSri(1(Class<FR32>) -> 0(Class<FR32>))  [3.05;3.05]
		 Successful, latency: 3.05

-----ROUNDSSri_Int-----
	ROUNDSSri_Int(1(Class<VR128>) -> 0(Class<VR128>))  [3.02;3.02]
		 Successful, latency: 3.02
	ROUNDSSri_Int(2(Class<VR128>) -> 0(Class<VR128>))  [3.03;3.03]
		 Successful, latency: 3.03

-----RSQRTPSr-----
	RSQRTPSr(1(Class<VR128>) -> 0(Class<VR128>))  [4.04;4.04]
		 Successful, latency: 4.04

-----RSQRTSSr-----
	RSQRTSSr(1(Class<FR32>) -> 0(Class<FR32>))  [4.06;4.06]
		 Successful, latency: 4.06

-----RSQRTSSr_Int-----
	RSQRTSSr_Int(1(Class<VR128>) -> 0(Class<VR128>))  [4.04;4.04]
		 Successful, latency: 4.04
	RSQRTSSr_Int(2(Class<VR128>) -> 0(Class<VR128>))  [4.04;4.04]
		 Successful, latency: 4.04

-----SAHF-----
	SAHF(impl(Reg<AH>) -> impl(Reg<EFLAGS>))  [1.01;1.02]
		Dependencies:
			LAHF(impl(Reg<EFLAGS>) -> impl(Reg<AH>)) 
			SAHF(impl(Reg<AH>) -> impl(Reg<EFLAGS>)) 
		Combined result: 2.02 cycles

-----SAR16r1-----
	SAR16r1(1(Class<GR16>) -> 0(Class<GR16>))  [1.03;1.03]
		 Successful, latency: 1.03
	SAR16r1(1(Class<GR16>) -> impl(Reg<EFLAGS>))  [ERROR_UNUSUAL_LATENCY]
		Dependencies:
			ADC16rr(impl(Reg<EFLAGS>) -> 0(Class<GR16>)) 
			ADC16ri(1(Class<GR16>) -> impl(Reg<EFLAGS>)) 
		Combined result: 1 cycles

-----SAR16r1_EVEX-----
	SAR16r1_EVEX(1(Class<GR16>) -> 0(Class<GR16>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----SAR16r1_ND-----
	SAR16r1_ND(1(Class<GR16>) -> 0(Class<GR16>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----SAR16r1_NF-----
	SAR16r1_NF(1(Class<GR16>) -> 0(Class<GR16>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----SAR16r1_NF_ND-----
	SAR16r1_NF_ND(1(Class<GR16>) -> 0(Class<GR16>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----SAR16rCL-----
	SAR16rCL(1(Class<GR16>) -> 0(Class<GR16>))  [1.01;1.01]
		 Successful, latency: 1.01
	SAR16rCL(1(Class<GR16>) -> impl(Reg<EFLAGS>))  [ERROR_UNUSUAL_LATENCY]
		Dependencies:
			ADC16rr(impl(Reg<EFLAGS>) -> 0(Class<GR16>)) 
			ADC16ri(1(Class<GR16>) -> impl(Reg<EFLAGS>)) 
		Combined result: 1.01 cycles

-----SAR16rCL_EVEX-----
	SAR16rCL_EVEX(1(Class<GR16>) -> 0(Class<GR16>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----SAR16rCL_ND-----
	SAR16rCL_ND(1(Class<GR16>) -> 0(Class<GR16>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----SAR16rCL_NF-----
	SAR16rCL_NF(1(Class<GR16>) -> 0(Class<GR16>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----SAR16rCL_NF_ND-----
	SAR16rCL_NF_ND(1(Class<GR16>) -> 0(Class<GR16>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----SAR16ri-----
	SAR16ri(1(Class<GR16>) -> 0(Class<GR16>))  [0.998;0.998]
		 Successful, latency: 0.998
	SAR16ri(1(Class<GR16>) -> impl(Reg<EFLAGS>))  [ERROR_UNUSUAL_LATENCY]
		Dependencies:
			ADC16rr(impl(Reg<EFLAGS>) -> 0(Class<GR16>)) 
			ADC16ri(1(Class<GR16>) -> impl(Reg<EFLAGS>)) 
		Combined result: 1.03 cycles

-----SAR16ri_EVEX-----
	SAR16ri_EVEX(1(Class<GR16>) -> 0(Class<GR16>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----SAR16ri_ND-----
	SAR16ri_ND(1(Class<GR16>) -> 0(Class<GR16>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----SAR16ri_NF-----
	SAR16ri_NF(1(Class<GR16>) -> 0(Class<GR16>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----SAR16ri_NF_ND-----
	SAR16ri_NF_ND(1(Class<GR16>) -> 0(Class<GR16>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----SAR32r1-----
	SAR32r1(1(Class<GR32>) -> 0(Class<GR32>))  [1.01;1.01]
		 Successful, latency: 1.01
	SAR32r1(1(Class<GR32>) -> impl(Reg<EFLAGS>))  [ERROR_UNUSUAL_LATENCY]
		Dependencies:
			ADC32ri8(impl(Reg<EFLAGS>) -> 0(Class<GR32>)) 
			ADC32ri(1(Class<GR32>) -> impl(Reg<EFLAGS>)) 
		Combined result: 1.01 cycles

-----SAR32r1_EVEX-----
	SAR32r1_EVEX(1(Class<GR32>) -> 0(Class<GR32>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----SAR32r1_ND-----
	SAR32r1_ND(1(Class<GR32>) -> 0(Class<GR32>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----SAR32r1_NF-----
	SAR32r1_NF(1(Class<GR32>) -> 0(Class<GR32>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----SAR32r1_NF_ND-----
	SAR32r1_NF_ND(1(Class<GR32>) -> 0(Class<GR32>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----SAR32rCL-----
	SAR32rCL(1(Class<GR32>) -> 0(Class<GR32>))  [1.02;1.02]
		 Successful, latency: 1.02
	SAR32rCL(1(Class<GR32>) -> impl(Reg<EFLAGS>))  [31.4;31.4]
		Dependencies:
			ADC32ri8(impl(Reg<EFLAGS>) -> 0(Class<GR32>)) 
			ADC32ri(1(Class<GR32>) -> impl(Reg<EFLAGS>)) 
		Combined result: 32.5 cycles

-----SAR32rCL_EVEX-----
	SAR32rCL_EVEX(1(Class<GR32>) -> 0(Class<GR32>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----SAR32rCL_ND-----
	SAR32rCL_ND(1(Class<GR32>) -> 0(Class<GR32>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----SAR32rCL_NF-----
	SAR32rCL_NF(1(Class<GR32>) -> 0(Class<GR32>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----SAR32rCL_NF_ND-----
	SAR32rCL_NF_ND(1(Class<GR32>) -> 0(Class<GR32>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----SAR32ri-----
	SAR32ri(1(Class<GR32>) -> 0(Class<GR32>))  [1.01;1.01]
		 Successful, latency: 1.01
	SAR32ri(1(Class<GR32>) -> impl(Reg<EFLAGS>))  [ERROR_UNUSUAL_LATENCY]
		Dependencies:
			ADC32ri8(impl(Reg<EFLAGS>) -> 0(Class<GR32>)) 
			ADC32ri(1(Class<GR32>) -> impl(Reg<EFLAGS>)) 
		Combined result: 1.01 cycles

-----SAR32ri_EVEX-----
	SAR32ri_EVEX(1(Class<GR32>) -> 0(Class<GR32>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----SAR32ri_ND-----
	SAR32ri_ND(1(Class<GR32>) -> 0(Class<GR32>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----SAR32ri_NF-----
	SAR32ri_NF(1(Class<GR32>) -> 0(Class<GR32>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----SAR32ri_NF_ND-----
	SAR32ri_NF_ND(1(Class<GR32>) -> 0(Class<GR32>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----SAR64r1-----
	SAR64r1(1(Class<GR64>) -> 0(Class<GR64>))  [1.01;1.01]
		 Successful, latency: 1.01
	SAR64r1(1(Class<GR64>) -> impl(Reg<EFLAGS>))  [ERROR_UNUSUAL_LATENCY]
		Dependencies:
			ADC64rr(impl(Reg<EFLAGS>) -> 0(Class<GR64>)) 
			ADC64ri32(1(Class<GR64>) -> impl(Reg<EFLAGS>)) 
		Combined result: 1.01 cycles

-----SAR64r1_EVEX-----
	SAR64r1_EVEX(1(Class<GR64>) -> 0(Class<GR64>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----SAR64r1_ND-----
	SAR64r1_ND(1(Class<GR64>) -> 0(Class<GR64>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----SAR64r1_NF-----
	SAR64r1_NF(1(Class<GR64>) -> 0(Class<GR64>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----SAR64r1_NF_ND-----
	SAR64r1_NF_ND(1(Class<GR64>) -> 0(Class<GR64>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----SAR64rCL-----
	SAR64rCL(1(Class<GR64>) -> 0(Class<GR64>))  [1.02;1.02]
		 Successful, latency: 1.02
	SAR64rCL(1(Class<GR64>) -> impl(Reg<EFLAGS>))  [ERROR_UNUSUAL_LATENCY]
		Dependencies:
			ADC64rr(impl(Reg<EFLAGS>) -> 0(Class<GR64>)) 
			ADC64ri32(1(Class<GR64>) -> impl(Reg<EFLAGS>)) 
		Combined result: 1.01 cycles

-----SAR64rCL_EVEX-----
	SAR64rCL_EVEX(1(Class<GR64>) -> 0(Class<GR64>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----SAR64rCL_ND-----
	SAR64rCL_ND(1(Class<GR64>) -> 0(Class<GR64>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----SAR64rCL_NF-----
	SAR64rCL_NF(1(Class<GR64>) -> 0(Class<GR64>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----SAR64rCL_NF_ND-----
	SAR64rCL_NF_ND(1(Class<GR64>) -> 0(Class<GR64>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----SAR64ri-----
	SAR64ri(1(Class<GR64>) -> 0(Class<GR64>))  [1;1]
		 Successful, latency: 1
	SAR64ri(1(Class<GR64>) -> impl(Reg<EFLAGS>))  [ERROR_UNUSUAL_LATENCY]
		Dependencies:
			ADC64rr(impl(Reg<EFLAGS>) -> 0(Class<GR64>)) 
			ADC64ri32(1(Class<GR64>) -> impl(Reg<EFLAGS>)) 
		Combined result: 1.01 cycles

-----SAR64ri_EVEX-----
	SAR64ri_EVEX(1(Class<GR64>) -> 0(Class<GR64>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----SAR64ri_ND-----
	SAR64ri_ND(1(Class<GR64>) -> 0(Class<GR64>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----SAR64ri_NF-----
	SAR64ri_NF(1(Class<GR64>) -> 0(Class<GR64>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----SAR64ri_NF_ND-----
	SAR64ri_NF_ND(1(Class<GR64>) -> 0(Class<GR64>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----SAR8r1-----
	SAR8r1(1(Class<GR8>) -> 0(Class<GR8>))  [1;1]
		 Successful, latency: 1
	SAR8r1(1(Class<GR8>) -> impl(Reg<EFLAGS>))  [ERROR_UNUSUAL_LATENCY]
		Dependencies:
			ADC8ri8(impl(Reg<EFLAGS>) -> 0(Class<GR8>)) 
			ADC8ri(1(Class<GR8>) -> impl(Reg<EFLAGS>)) 
		Combined result: 1.01 cycles

-----SAR8r1_EVEX-----
	SAR8r1_EVEX(1(Class<GR8>) -> 0(Class<GR8>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----SAR8r1_ND-----
	SAR8r1_ND(1(Class<GR8>) -> 0(Class<GR8>))  [ERROR_ASSEMBLY]
		ERROR_ASSEMBLY, this instruction cannot be measured on this platform

-----SAR8r1_NF-----
	SAR8r1_NF(1(Class<GR8>) -> 0(Class<GR8>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----SAR8r1_NF_ND-----
	SAR8r1_NF_ND(1(Class<GR8>) -> 0(Class<GR8>))  [ERROR_ASSEMBLY]
		ERROR_ASSEMBLY, this instruction cannot be measured on this platform

-----SAR8rCL-----
	SAR8rCL(1(Class<GR8>) -> 0(Class<GR8>))  [1;1]
		 Successful, latency: 1
	SAR8rCL(1(Class<GR8>) -> impl(Reg<EFLAGS>))  [31.5;31.5]
		Dependencies:
			ADC8ri8(impl(Reg<EFLAGS>) -> 0(Class<GR8>)) 
			ADC8ri(1(Class<GR8>) -> impl(Reg<EFLAGS>)) 
		Combined result: 32.5 cycles

-----SAR8rCL_EVEX-----
	SAR8rCL_EVEX(1(Class<GR8>) -> 0(Class<GR8>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----SAR8rCL_ND-----
	SAR8rCL_ND(1(Class<GR8>) -> 0(Class<GR8>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----SAR8rCL_NF-----
	SAR8rCL_NF(1(Class<GR8>) -> 0(Class<GR8>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----SAR8rCL_NF_ND-----
	SAR8rCL_NF_ND(1(Class<GR8>) -> 0(Class<GR8>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----SAR8ri-----
	SAR8ri(1(Class<GR8>) -> 0(Class<GR8>))  [1;1]
		 Successful, latency: 1
	SAR8ri(1(Class<GR8>) -> impl(Reg<EFLAGS>))  [ERROR_UNUSUAL_LATENCY]
		Dependencies:
			ADC8ri8(impl(Reg<EFLAGS>) -> 0(Class<GR8>)) 
			ADC8ri(1(Class<GR8>) -> impl(Reg<EFLAGS>)) 
		Combined result: 1 cycles

-----SAR8ri_EVEX-----
	SAR8ri_EVEX(1(Class<GR8>) -> 0(Class<GR8>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----SAR8ri_ND-----
	SAR8ri_ND(1(Class<GR8>) -> 0(Class<GR8>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----SAR8ri_NF-----
	SAR8ri_NF(1(Class<GR8>) -> 0(Class<GR8>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----SAR8ri_NF_ND-----
	SAR8ri_NF_ND(1(Class<GR8>) -> 0(Class<GR8>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----SARX32rr-----
	SARX32rr(1(Class<GR32>) -> 0(Class<GR32>))  [1.01;1.01]
		 Successful, latency: 1.01
	SARX32rr(2(Class<GR32>) -> 0(Class<GR32>))  [1;1]
		 Successful, latency: 1

-----SARX32rr_EVEX-----
	SARX32rr_EVEX(1(Class<GR32>) -> 0(Class<GR32>))  [1.01;1.01]
		 Successful, latency: 1.01
	SARX32rr_EVEX(2(Class<GR32>) -> 0(Class<GR32>))  [1;1]
		 Successful, latency: 1

-----SARX64rr-----
	SARX64rr(1(Class<GR64>) -> 0(Class<GR64>))  [1.01;1.01]
		 Successful, latency: 1.01
	SARX64rr(2(Class<GR64>) -> 0(Class<GR64>))  [1;1]
		 Successful, latency: 1

-----SARX64rr_EVEX-----
	SARX64rr_EVEX(1(Class<GR64>) -> 0(Class<GR64>))  [1;1]
		 Successful, latency: 1
	SARX64rr_EVEX(2(Class<GR64>) -> 0(Class<GR64>))  [1.02;1.02]
		 Successful, latency: 1.02

-----SBB16i16-----
	SBB16i16(impl(Reg<AX>) -> impl(Reg<AX>))  [1.03;1.03]
		WARNING generated instructions have multiple dependencies. If they have different latencies the lower one will be shadowed
	SBB16i16(impl(Reg<EFLAGS>) -> impl(Reg<EFLAGS>))  [1.01;1.01]
		WARNING generated instructions have multiple dependencies. If they have different latencies the lower one will be shadowed
	SBB16i16(impl(Reg<EFLAGS>) -> impl(Reg<AX>))  [1;1.02]
		Dependencies:
			ADC16i16(impl(Reg<EFLAGS>) -> impl(Reg<AX>)) 
			ADC16i16(impl(Reg<AX>) -> impl(Reg<EFLAGS>)) 
		Combined result: 2.02 cycles
	SBB16i16(impl(Reg<AX>) -> impl(Reg<EFLAGS>))  [0.987;1]
		Dependencies:
			ADC16i16(impl(Reg<EFLAGS>) -> impl(Reg<AX>)) 
			ADC16i16(impl(Reg<AX>) -> impl(Reg<EFLAGS>)) 
		Combined result: 2.01 cycles

-----SBB16ri-----
	SBB16ri(1(Class<GR16>) -> 0(Class<GR16>))  [1.02;1.02]
		WARNING generated instructions have multiple dependencies. If they have different latencies the lower one will be shadowed
	SBB16ri(impl(Reg<EFLAGS>) -> impl(Reg<EFLAGS>))  [1.02;1.02]
		WARNING generated instructions have multiple dependencies. If they have different latencies the lower one will be shadowed
	SBB16ri(impl(Reg<EFLAGS>) -> 0(Class<GR16>))  [1.04;1.06]
		Dependencies:
			ADC16rr(impl(Reg<EFLAGS>) -> 0(Class<GR16>)) 
			ADC16ri(1(Class<GR16>) -> impl(Reg<EFLAGS>)) 
		Combined result: 2.06 cycles
	SBB16ri(1(Class<GR16>) -> impl(Reg<EFLAGS>))  [1;1.02]
		Dependencies:
			ADC16rr(impl(Reg<EFLAGS>) -> 0(Class<GR16>)) 
			ADC16ri(1(Class<GR16>) -> impl(Reg<EFLAGS>)) 
		Combined result: 2.02 cycles

-----SBB16ri8-----
	SBB16ri8(1(Class<GR16>) -> 0(Class<GR16>))  [1.01;1.01]
		WARNING generated instructions have multiple dependencies. If they have different latencies the lower one will be shadowed
	SBB16ri8(impl(Reg<EFLAGS>) -> impl(Reg<EFLAGS>))  [1.02;1.02]
		WARNING generated instructions have multiple dependencies. If they have different latencies the lower one will be shadowed
	SBB16ri8(impl(Reg<EFLAGS>) -> 0(Class<GR16>))  [1.04;1.06]
		Dependencies:
			ADC16rr(impl(Reg<EFLAGS>) -> 0(Class<GR16>)) 
			ADC16ri(1(Class<GR16>) -> impl(Reg<EFLAGS>)) 
		Combined result: 2.06 cycles
	SBB16ri8(1(Class<GR16>) -> impl(Reg<EFLAGS>))  [1.01;1.03]
		Dependencies:
			ADC16rr(impl(Reg<EFLAGS>) -> 0(Class<GR16>)) 
			ADC16ri(1(Class<GR16>) -> impl(Reg<EFLAGS>)) 
		Combined result: 2.02 cycles

-----SBB16ri8_EVEX-----
	SBB16ri8_EVEX(1(Class<GR16>) -> 0(Class<GR16>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	SBB16ri8_EVEX(impl(Reg<EFLAGS>) -> impl(Reg<EFLAGS>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----SBB16ri8_ND-----
	SBB16ri8_ND(1(Class<GR16>) -> 0(Class<GR16>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	SBB16ri8_ND(impl(Reg<EFLAGS>) -> impl(Reg<EFLAGS>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----SBB16ri_EVEX-----
	SBB16ri_EVEX(1(Class<GR16>) -> 0(Class<GR16>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	SBB16ri_EVEX(impl(Reg<EFLAGS>) -> impl(Reg<EFLAGS>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----SBB16ri_ND-----
	SBB16ri_ND(1(Class<GR16>) -> 0(Class<GR16>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	SBB16ri_ND(impl(Reg<EFLAGS>) -> impl(Reg<EFLAGS>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----SBB16rr-----
	SBB16rr(1(Class<GR16>) -> 0(Class<GR16>))  [1.02;1.02]
		WARNING generated instructions have multiple dependencies. If they have different latencies the lower one will be shadowed
	SBB16rr(2(Class<GR16>) -> 0(Class<GR16>))  [1;1]
		WARNING generated instructions have multiple dependencies. If they have different latencies the lower one will be shadowed
	SBB16rr(impl(Reg<EFLAGS>) -> impl(Reg<EFLAGS>))  [0.999;0.999]
		WARNING generated instructions have multiple dependencies. If they have different latencies the lower one will be shadowed
	SBB16rr(impl(Reg<EFLAGS>) -> 0(Class<GR16>))  [0.993;1.01]
		Dependencies:
			ADC16rr(impl(Reg<EFLAGS>) -> 0(Class<GR16>)) 
			ADC16ri(1(Class<GR16>) -> impl(Reg<EFLAGS>)) 
		Combined result: 2.01 cycles
	SBB16rr(1(Class<GR16>) -> impl(Reg<EFLAGS>))  [1.01;1.02]
		Dependencies:
			ADC16rr(impl(Reg<EFLAGS>) -> 0(Class<GR16>)) 
			ADC16ri(1(Class<GR16>) -> impl(Reg<EFLAGS>)) 
		Combined result: 2.02 cycles
	SBB16rr(2(Class<GR16>) -> impl(Reg<EFLAGS>))  [1.01;1.03]
		Dependencies:
			ADC16rr(impl(Reg<EFLAGS>) -> 0(Class<GR16>)) 
			ADC16ri(1(Class<GR16>) -> impl(Reg<EFLAGS>)) 
		Combined result: 2.02 cycles

-----SBB16rr_EVEX-----
	SBB16rr_EVEX(1(Class<GR16>) -> 0(Class<GR16>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	SBB16rr_EVEX(2(Class<GR16>) -> 0(Class<GR16>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	SBB16rr_EVEX(impl(Reg<EFLAGS>) -> impl(Reg<EFLAGS>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----SBB16rr_EVEX_REV-----
	SBB16rr_EVEX_REV(1(Class<GR16>) -> 0(Class<GR16>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	SBB16rr_EVEX_REV(2(Class<GR16>) -> 0(Class<GR16>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	SBB16rr_EVEX_REV(impl(Reg<EFLAGS>) -> impl(Reg<EFLAGS>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----SBB16rr_ND-----
	SBB16rr_ND(1(Class<GR16>) -> 0(Class<GR16>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	SBB16rr_ND(2(Class<GR16>) -> 0(Class<GR16>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	SBB16rr_ND(impl(Reg<EFLAGS>) -> impl(Reg<EFLAGS>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----SBB16rr_ND_REV-----
	SBB16rr_ND_REV(1(Class<GR16>) -> 0(Class<GR16>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	SBB16rr_ND_REV(2(Class<GR16>) -> 0(Class<GR16>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	SBB16rr_ND_REV(impl(Reg<EFLAGS>) -> impl(Reg<EFLAGS>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----SBB16rr_REV-----
	SBB16rr_REV(1(Class<GR16>) -> 0(Class<GR16>))  [1.01;1.01]
		WARNING generated instructions have multiple dependencies. If they have different latencies the lower one will be shadowed
	SBB16rr_REV(2(Class<GR16>) -> 0(Class<GR16>))  [1;1]
		WARNING generated instructions have multiple dependencies. If they have different latencies the lower one will be shadowed
	SBB16rr_REV(impl(Reg<EFLAGS>) -> impl(Reg<EFLAGS>))  [1.01;1.01]
		WARNING generated instructions have multiple dependencies. If they have different latencies the lower one will be shadowed
	SBB16rr_REV(impl(Reg<EFLAGS>) -> 0(Class<GR16>))  [1.01;1.03]
		Dependencies:
			ADC16rr(impl(Reg<EFLAGS>) -> 0(Class<GR16>)) 
			ADC16ri(1(Class<GR16>) -> impl(Reg<EFLAGS>)) 
		Combined result: 2.03 cycles
	SBB16rr_REV(1(Class<GR16>) -> impl(Reg<EFLAGS>))  [1;1.02]
		Dependencies:
			ADC16rr(impl(Reg<EFLAGS>) -> 0(Class<GR16>)) 
			ADC16ri(1(Class<GR16>) -> impl(Reg<EFLAGS>)) 
		Combined result: 2.02 cycles
	SBB16rr_REV(2(Class<GR16>) -> impl(Reg<EFLAGS>))  [0.996;1.01]
		Dependencies:
			ADC16rr(impl(Reg<EFLAGS>) -> 0(Class<GR16>)) 
			ADC16ri(1(Class<GR16>) -> impl(Reg<EFLAGS>)) 
		Combined result: 2.01 cycles

-----SBB32i32-----
	SBB32i32(impl(Reg<EAX>) -> impl(Reg<EAX>))  [1;1]
		WARNING generated instructions have multiple dependencies. If they have different latencies the lower one will be shadowed
	SBB32i32(impl(Reg<EFLAGS>) -> impl(Reg<EFLAGS>))  [1.01;1.01]
		WARNING generated instructions have multiple dependencies. If they have different latencies the lower one will be shadowed
	SBB32i32(impl(Reg<EFLAGS>) -> impl(Reg<EAX>))  [0.99;1.01]
		Dependencies:
			ADC32i32(impl(Reg<EFLAGS>) -> impl(Reg<EAX>)) 
			ADC32i32(impl(Reg<EAX>) -> impl(Reg<EFLAGS>)) 
		Combined result: 2.01 cycles
	SBB32i32(impl(Reg<EAX>) -> impl(Reg<EFLAGS>))  [1.02;1.04]
		Dependencies:
			ADC32i32(impl(Reg<EFLAGS>) -> impl(Reg<EAX>)) 
			ADC32i32(impl(Reg<EAX>) -> impl(Reg<EFLAGS>)) 
		Combined result: 2.04 cycles

-----SBB32ri-----
	SBB32ri(1(Class<GR32>) -> 0(Class<GR32>))  [1.01;1.01]
		WARNING generated instructions have multiple dependencies. If they have different latencies the lower one will be shadowed
	SBB32ri(impl(Reg<EFLAGS>) -> impl(Reg<EFLAGS>))  [1.01;1.01]
		WARNING generated instructions have multiple dependencies. If they have different latencies the lower one will be shadowed
	SBB32ri(impl(Reg<EFLAGS>) -> 0(Class<GR32>))  [0.999;1.02]
		Dependencies:
			ADC32ri8(impl(Reg<EFLAGS>) -> 0(Class<GR32>)) 
			ADC32ri(1(Class<GR32>) -> impl(Reg<EFLAGS>)) 
		Combined result: 2.02 cycles
	SBB32ri(1(Class<GR32>) -> impl(Reg<EFLAGS>))  [0.985;1]
		Dependencies:
			ADC32ri8(impl(Reg<EFLAGS>) -> 0(Class<GR32>)) 
			ADC32ri(1(Class<GR32>) -> impl(Reg<EFLAGS>)) 
		Combined result: 2.01 cycles

-----SBB32ri8-----
	SBB32ri8(1(Class<GR32>) -> 0(Class<GR32>))  [1.01;1.01]
		WARNING generated instructions have multiple dependencies. If they have different latencies the lower one will be shadowed
	SBB32ri8(impl(Reg<EFLAGS>) -> impl(Reg<EFLAGS>))  [1.01;1.01]
		WARNING generated instructions have multiple dependencies. If they have different latencies the lower one will be shadowed
	SBB32ri8(impl(Reg<EFLAGS>) -> 0(Class<GR32>))  [0.996;1.02]
		Dependencies:
			ADC32ri8(impl(Reg<EFLAGS>) -> 0(Class<GR32>)) 
			ADC32ri(1(Class<GR32>) -> impl(Reg<EFLAGS>)) 
		Combined result: 2.02 cycles
	SBB32ri8(1(Class<GR32>) -> impl(Reg<EFLAGS>))  [0.998;1.02]
		Dependencies:
			ADC32ri8(impl(Reg<EFLAGS>) -> 0(Class<GR32>)) 
			ADC32ri(1(Class<GR32>) -> impl(Reg<EFLAGS>)) 
		Combined result: 2.02 cycles

-----SBB32ri8_EVEX-----
	SBB32ri8_EVEX(1(Class<GR32>) -> 0(Class<GR32>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	SBB32ri8_EVEX(impl(Reg<EFLAGS>) -> impl(Reg<EFLAGS>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----SBB32ri8_ND-----
	SBB32ri8_ND(1(Class<GR32>) -> 0(Class<GR32>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	SBB32ri8_ND(impl(Reg<EFLAGS>) -> impl(Reg<EFLAGS>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----SBB32ri_EVEX-----
	SBB32ri_EVEX(1(Class<GR32>) -> 0(Class<GR32>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	SBB32ri_EVEX(impl(Reg<EFLAGS>) -> impl(Reg<EFLAGS>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----SBB32ri_ND-----
	SBB32ri_ND(1(Class<GR32>) -> 0(Class<GR32>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	SBB32ri_ND(impl(Reg<EFLAGS>) -> impl(Reg<EFLAGS>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----SBB32rr-----
	SBB32rr(1(Class<GR32>) -> 0(Class<GR32>))  [1.01;1.01]
		WARNING generated instructions have multiple dependencies. If they have different latencies the lower one will be shadowed
	SBB32rr(2(Class<GR32>) -> 0(Class<GR32>))  [0.306;0.306]
		WARNING generated instructions have multiple dependencies. If they have different latencies the lower one will be shadowed
	SBB32rr(impl(Reg<EFLAGS>) -> impl(Reg<EFLAGS>))  [1.01;1.01]
		WARNING generated instructions have multiple dependencies. If they have different latencies the lower one will be shadowed
	SBB32rr(impl(Reg<EFLAGS>) -> 0(Class<GR32>))  [0.999;1.02]
		Dependencies:
			ADC32ri8(impl(Reg<EFLAGS>) -> 0(Class<GR32>)) 
			ADC32ri(1(Class<GR32>) -> impl(Reg<EFLAGS>)) 
		Combined result: 2.02 cycles
	SBB32rr(1(Class<GR32>) -> impl(Reg<EFLAGS>))  [0.99;1.01]
		Dependencies:
			ADC32ri8(impl(Reg<EFLAGS>) -> 0(Class<GR32>)) 
			ADC32ri(1(Class<GR32>) -> impl(Reg<EFLAGS>)) 
		Combined result: 2.02 cycles
	SBB32rr(2(Class<GR32>) -> impl(Reg<EFLAGS>))  [0.971;0.99]
		Dependencies:
			ADC32ri8(impl(Reg<EFLAGS>) -> 0(Class<GR32>)) 
			ADC32ri(1(Class<GR32>) -> impl(Reg<EFLAGS>)) 
		Combined result: 2 cycles

-----SBB32rr_EVEX-----
	SBB32rr_EVEX(1(Class<GR32>) -> 0(Class<GR32>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	SBB32rr_EVEX(2(Class<GR32>) -> 0(Class<GR32>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	SBB32rr_EVEX(impl(Reg<EFLAGS>) -> impl(Reg<EFLAGS>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----SBB32rr_EVEX_REV-----
	SBB32rr_EVEX_REV(1(Class<GR32>) -> 0(Class<GR32>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	SBB32rr_EVEX_REV(2(Class<GR32>) -> 0(Class<GR32>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	SBB32rr_EVEX_REV(impl(Reg<EFLAGS>) -> impl(Reg<EFLAGS>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----SBB32rr_ND-----
	SBB32rr_ND(1(Class<GR32>) -> 0(Class<GR32>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	SBB32rr_ND(2(Class<GR32>) -> 0(Class<GR32>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	SBB32rr_ND(impl(Reg<EFLAGS>) -> impl(Reg<EFLAGS>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----SBB32rr_ND_REV-----
	SBB32rr_ND_REV(1(Class<GR32>) -> 0(Class<GR32>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	SBB32rr_ND_REV(2(Class<GR32>) -> 0(Class<GR32>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	SBB32rr_ND_REV(impl(Reg<EFLAGS>) -> impl(Reg<EFLAGS>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----SBB32rr_REV-----
	SBB32rr_REV(1(Class<GR32>) -> 0(Class<GR32>))  [1;1]
		WARNING generated instructions have multiple dependencies. If they have different latencies the lower one will be shadowed
	SBB32rr_REV(2(Class<GR32>) -> 0(Class<GR32>))  [0.306;0.306]
		WARNING generated instructions have multiple dependencies. If they have different latencies the lower one will be shadowed
	SBB32rr_REV(impl(Reg<EFLAGS>) -> impl(Reg<EFLAGS>))  [1.01;1.01]
		WARNING generated instructions have multiple dependencies. If they have different latencies the lower one will be shadowed
	SBB32rr_REV(impl(Reg<EFLAGS>) -> 0(Class<GR32>))  [0.999;1.02]
		Dependencies:
			ADC32ri8(impl(Reg<EFLAGS>) -> 0(Class<GR32>)) 
			ADC32ri(1(Class<GR32>) -> impl(Reg<EFLAGS>)) 
		Combined result: 2.02 cycles
	SBB32rr_REV(1(Class<GR32>) -> impl(Reg<EFLAGS>))  [0.994;1.01]
		Dependencies:
			ADC32ri8(impl(Reg<EFLAGS>) -> 0(Class<GR32>)) 
			ADC32ri(1(Class<GR32>) -> impl(Reg<EFLAGS>)) 
		Combined result: 2.02 cycles
	SBB32rr_REV(2(Class<GR32>) -> impl(Reg<EFLAGS>))  [0.99;1.01]
		Dependencies:
			ADC32ri8(impl(Reg<EFLAGS>) -> 0(Class<GR32>)) 
			ADC32ri(1(Class<GR32>) -> impl(Reg<EFLAGS>)) 
		Combined result: 2.02 cycles

-----SBB64i32-----
	SBB64i32(impl(Reg<RAX>) -> impl(Reg<RAX>))  [1.01;1.01]
		WARNING generated instructions have multiple dependencies. If they have different latencies the lower one will be shadowed
	SBB64i32(impl(Reg<EFLAGS>) -> impl(Reg<EFLAGS>))  [1.01;1.01]
		WARNING generated instructions have multiple dependencies. If they have different latencies the lower one will be shadowed
	SBB64i32(impl(Reg<RAX>) -> impl(Reg<EFLAGS>))  [0.996;1.01]
		Dependencies:
			CMP64i32(impl(Reg<RAX>) -> impl(Reg<EFLAGS>)) 
			ADC64i32(impl(Reg<EFLAGS>) -> impl(Reg<RAX>)) 
		Combined result: 2.01 cycles
	SBB64i32(impl(Reg<EFLAGS>) -> impl(Reg<RAX>))  [0.996;1.01]
		Dependencies:
			CMP64i32(impl(Reg<RAX>) -> impl(Reg<EFLAGS>)) 
			ADC64i32(impl(Reg<EFLAGS>) -> impl(Reg<RAX>)) 
		Combined result: 2.02 cycles

-----SBB64ri32-----
	SBB64ri32(1(Class<GR64>) -> 0(Class<GR64>))  [1.01;1.01]
		WARNING generated instructions have multiple dependencies. If they have different latencies the lower one will be shadowed
	SBB64ri32(impl(Reg<EFLAGS>) -> impl(Reg<EFLAGS>))  [1;1]
		WARNING generated instructions have multiple dependencies. If they have different latencies the lower one will be shadowed
	SBB64ri32(impl(Reg<EFLAGS>) -> 0(Class<GR64>))  [1.04;1.06]
		Dependencies:
			ADC64rr(impl(Reg<EFLAGS>) -> 0(Class<GR64>)) 
			ADC64ri32(1(Class<GR64>) -> impl(Reg<EFLAGS>)) 
		Combined result: 2.06 cycles
	SBB64ri32(1(Class<GR64>) -> impl(Reg<EFLAGS>))  [1.02;1.03]
		Dependencies:
			ADC64rr(impl(Reg<EFLAGS>) -> 0(Class<GR64>)) 
			ADC64ri32(1(Class<GR64>) -> impl(Reg<EFLAGS>)) 
		Combined result: 2.02 cycles

-----SBB64ri32_EVEX-----
	SBB64ri32_EVEX(1(Class<GR64>) -> 0(Class<GR64>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	SBB64ri32_EVEX(impl(Reg<EFLAGS>) -> impl(Reg<EFLAGS>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----SBB64ri32_ND-----
	SBB64ri32_ND(1(Class<GR64>) -> 0(Class<GR64>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	SBB64ri32_ND(impl(Reg<EFLAGS>) -> impl(Reg<EFLAGS>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----SBB64ri8-----
	SBB64ri8(1(Class<GR64>) -> 0(Class<GR64>))  [1.01;1.01]
		WARNING generated instructions have multiple dependencies. If they have different latencies the lower one will be shadowed
	SBB64ri8(impl(Reg<EFLAGS>) -> impl(Reg<EFLAGS>))  [1;1]
		WARNING generated instructions have multiple dependencies. If they have different latencies the lower one will be shadowed
	SBB64ri8(impl(Reg<EFLAGS>) -> 0(Class<GR64>))  [1.04;1.06]
		Dependencies:
			ADC64rr(impl(Reg<EFLAGS>) -> 0(Class<GR64>)) 
			ADC64ri32(1(Class<GR64>) -> impl(Reg<EFLAGS>)) 
		Combined result: 2.06 cycles
	SBB64ri8(1(Class<GR64>) -> impl(Reg<EFLAGS>))  [1.01;1.03]
		Dependencies:
			ADC64rr(impl(Reg<EFLAGS>) -> 0(Class<GR64>)) 
			ADC64ri32(1(Class<GR64>) -> impl(Reg<EFLAGS>)) 
		Combined result: 2.02 cycles

-----SBB64ri8_EVEX-----
	SBB64ri8_EVEX(1(Class<GR64>) -> 0(Class<GR64>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	SBB64ri8_EVEX(impl(Reg<EFLAGS>) -> impl(Reg<EFLAGS>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----SBB64ri8_ND-----
	SBB64ri8_ND(1(Class<GR64>) -> 0(Class<GR64>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	SBB64ri8_ND(impl(Reg<EFLAGS>) -> impl(Reg<EFLAGS>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----SBB64rr-----
	SBB64rr(1(Class<GR64>) -> 0(Class<GR64>))  [1;1]
		WARNING generated instructions have multiple dependencies. If they have different latencies the lower one will be shadowed
	SBB64rr(2(Class<GR64>) -> 0(Class<GR64>))  [0.305;0.305]
		WARNING generated instructions have multiple dependencies. If they have different latencies the lower one will be shadowed
	SBB64rr(impl(Reg<EFLAGS>) -> impl(Reg<EFLAGS>))  [1;1]
		WARNING generated instructions have multiple dependencies. If they have different latencies the lower one will be shadowed
	SBB64rr(impl(Reg<EFLAGS>) -> 0(Class<GR64>))  [1.01;1.03]
		Dependencies:
			ADC64rr(impl(Reg<EFLAGS>) -> 0(Class<GR64>)) 
			ADC64ri32(1(Class<GR64>) -> impl(Reg<EFLAGS>)) 
		Combined result: 2.03 cycles
	SBB64rr(1(Class<GR64>) -> impl(Reg<EFLAGS>))  [1.01;1.03]
		Dependencies:
			ADC64rr(impl(Reg<EFLAGS>) -> 0(Class<GR64>)) 
			ADC64ri32(1(Class<GR64>) -> impl(Reg<EFLAGS>)) 
		Combined result: 2.02 cycles
	SBB64rr(2(Class<GR64>) -> impl(Reg<EFLAGS>))  [0.996;1.01]
		Dependencies:
			ADC64rr(impl(Reg<EFLAGS>) -> 0(Class<GR64>)) 
			ADC64ri32(1(Class<GR64>) -> impl(Reg<EFLAGS>)) 
		Combined result: 2 cycles

-----SBB64rr_EVEX-----
	SBB64rr_EVEX(1(Class<GR64>) -> 0(Class<GR64>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	SBB64rr_EVEX(2(Class<GR64>) -> 0(Class<GR64>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	SBB64rr_EVEX(impl(Reg<EFLAGS>) -> impl(Reg<EFLAGS>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----SBB64rr_EVEX_REV-----
	SBB64rr_EVEX_REV(1(Class<GR64>) -> 0(Class<GR64>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	SBB64rr_EVEX_REV(2(Class<GR64>) -> 0(Class<GR64>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	SBB64rr_EVEX_REV(impl(Reg<EFLAGS>) -> impl(Reg<EFLAGS>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----SBB64rr_ND-----
	SBB64rr_ND(1(Class<GR64>) -> 0(Class<GR64>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	SBB64rr_ND(2(Class<GR64>) -> 0(Class<GR64>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	SBB64rr_ND(impl(Reg<EFLAGS>) -> impl(Reg<EFLAGS>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----SBB64rr_ND_REV-----
	SBB64rr_ND_REV(1(Class<GR64>) -> 0(Class<GR64>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	SBB64rr_ND_REV(2(Class<GR64>) -> 0(Class<GR64>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	SBB64rr_ND_REV(impl(Reg<EFLAGS>) -> impl(Reg<EFLAGS>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----SBB64rr_REV-----
	SBB64rr_REV(1(Class<GR64>) -> 0(Class<GR64>))  [1.02;1.02]
		WARNING generated instructions have multiple dependencies. If they have different latencies the lower one will be shadowed
	SBB64rr_REV(2(Class<GR64>) -> 0(Class<GR64>))  [0.305;0.305]
		WARNING generated instructions have multiple dependencies. If they have different latencies the lower one will be shadowed
	SBB64rr_REV(impl(Reg<EFLAGS>) -> impl(Reg<EFLAGS>))  [0.996;0.996]
		WARNING generated instructions have multiple dependencies. If they have different latencies the lower one will be shadowed
	SBB64rr_REV(impl(Reg<EFLAGS>) -> 0(Class<GR64>))  [1.01;1.02]
		Dependencies:
			ADC64rr(impl(Reg<EFLAGS>) -> 0(Class<GR64>)) 
			ADC64ri32(1(Class<GR64>) -> impl(Reg<EFLAGS>)) 
		Combined result: 2.02 cycles
	SBB64rr_REV(1(Class<GR64>) -> impl(Reg<EFLAGS>))  [1;1.02]
		Dependencies:
			ADC64rr(impl(Reg<EFLAGS>) -> 0(Class<GR64>)) 
			ADC64ri32(1(Class<GR64>) -> impl(Reg<EFLAGS>)) 
		Combined result: 2.01 cycles
	SBB64rr_REV(2(Class<GR64>) -> impl(Reg<EFLAGS>))  [1.01;1.02]
		Dependencies:
			ADC64rr(impl(Reg<EFLAGS>) -> 0(Class<GR64>)) 
			ADC64ri32(1(Class<GR64>) -> impl(Reg<EFLAGS>)) 
		Combined result: 2.02 cycles

-----SBB8i8-----
	SBB8i8(impl(Reg<AL>) -> impl(Reg<AL>))  [1;1]
		WARNING generated instructions have multiple dependencies. If they have different latencies the lower one will be shadowed
	SBB8i8(impl(Reg<EFLAGS>) -> impl(Reg<EFLAGS>))  [1.01;1.01]
		WARNING generated instructions have multiple dependencies. If they have different latencies the lower one will be shadowed
	SBB8i8(impl(Reg<EFLAGS>) -> impl(Reg<AL>))  [1;1.02]
		Dependencies:
			ADC8i8(impl(Reg<EFLAGS>) -> impl(Reg<AL>)) 
			CMP8i8(impl(Reg<AL>) -> impl(Reg<EFLAGS>)) 
		Combined result: 2.02 cycles
	SBB8i8(impl(Reg<AL>) -> impl(Reg<EFLAGS>))  [0.991;1.01]
		Dependencies:
			ADC8i8(impl(Reg<EFLAGS>) -> impl(Reg<AL>)) 
			CMP8i8(impl(Reg<AL>) -> impl(Reg<EFLAGS>)) 
		Combined result: 2.01 cycles

-----SBB8ri-----
	SBB8ri(1(Class<GR8>) -> 0(Class<GR8>))  [1.01;1.01]
		WARNING generated instructions have multiple dependencies. If they have different latencies the lower one will be shadowed
	SBB8ri(impl(Reg<EFLAGS>) -> impl(Reg<EFLAGS>))  [1.01;1.01]
		WARNING generated instructions have multiple dependencies. If they have different latencies the lower one will be shadowed
	SBB8ri(impl(Reg<EFLAGS>) -> 0(Class<GR8>))  [0.995;1.01]
		Dependencies:
			ADC8ri8(impl(Reg<EFLAGS>) -> 0(Class<GR8>)) 
			ADC8ri(1(Class<GR8>) -> impl(Reg<EFLAGS>)) 
		Combined result: 2.01 cycles
	SBB8ri(1(Class<GR8>) -> impl(Reg<EFLAGS>))  [1;1.02]
		Dependencies:
			ADC8ri8(impl(Reg<EFLAGS>) -> 0(Class<GR8>)) 
			ADC8ri(1(Class<GR8>) -> impl(Reg<EFLAGS>)) 
		Combined result: 2.02 cycles

-----SBB8ri8-----
	SBB8ri8(1(Class<GR8>) -> 0(Class<GR8>))  [1.02;1.02]
		WARNING generated instructions have multiple dependencies. If they have different latencies the lower one will be shadowed
	SBB8ri8(impl(Reg<EFLAGS>) -> impl(Reg<EFLAGS>))  [1.01;1.01]
		WARNING generated instructions have multiple dependencies. If they have different latencies the lower one will be shadowed
	SBB8ri8(impl(Reg<EFLAGS>) -> 0(Class<GR8>))  [1.02;1.03]
		Dependencies:
			ADC8ri8(impl(Reg<EFLAGS>) -> 0(Class<GR8>)) 
			ADC8ri(1(Class<GR8>) -> impl(Reg<EFLAGS>)) 
		Combined result: 2.03 cycles
	SBB8ri8(1(Class<GR8>) -> impl(Reg<EFLAGS>))  [0.994;1.01]
		Dependencies:
			ADC8ri8(impl(Reg<EFLAGS>) -> 0(Class<GR8>)) 
			ADC8ri(1(Class<GR8>) -> impl(Reg<EFLAGS>)) 
		Combined result: 2.01 cycles

-----SBB8ri_EVEX-----
	SBB8ri_EVEX(1(Class<GR8>) -> 0(Class<GR8>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	SBB8ri_EVEX(impl(Reg<EFLAGS>) -> impl(Reg<EFLAGS>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----SBB8ri_ND-----
	SBB8ri_ND(1(Class<GR8>) -> 0(Class<GR8>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	SBB8ri_ND(impl(Reg<EFLAGS>) -> impl(Reg<EFLAGS>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----SBB8rr-----
	SBB8rr(1(Class<GR8>) -> 0(Class<GR8>))  [1.01;1.01]
		WARNING generated instructions have multiple dependencies. If they have different latencies the lower one will be shadowed
	SBB8rr(2(Class<GR8>) -> 0(Class<GR8>))  [1.01;1.01]
		WARNING generated instructions have multiple dependencies. If they have different latencies the lower one will be shadowed
	SBB8rr(impl(Reg<EFLAGS>) -> impl(Reg<EFLAGS>))  [1;1]
		WARNING generated instructions have multiple dependencies. If they have different latencies the lower one will be shadowed
	SBB8rr(impl(Reg<EFLAGS>) -> 0(Class<GR8>))  [1.02;1.03]
		Dependencies:
			ADC8ri8(impl(Reg<EFLAGS>) -> 0(Class<GR8>)) 
			ADC8ri(1(Class<GR8>) -> impl(Reg<EFLAGS>)) 
		Combined result: 2.03 cycles
	SBB8rr(1(Class<GR8>) -> impl(Reg<EFLAGS>))  [0.998;1.01]
		Dependencies:
			ADC8ri8(impl(Reg<EFLAGS>) -> 0(Class<GR8>)) 
			ADC8ri(1(Class<GR8>) -> impl(Reg<EFLAGS>)) 
		Combined result: 2.01 cycles
	SBB8rr(2(Class<GR8>) -> impl(Reg<EFLAGS>))  [1.01;1.02]
		Dependencies:
			ADC8ri8(impl(Reg<EFLAGS>) -> 0(Class<GR8>)) 
			ADC8ri(1(Class<GR8>) -> impl(Reg<EFLAGS>)) 
		Combined result: 2.02 cycles

-----SBB8rr_EVEX-----
	SBB8rr_EVEX(1(Class<GR8>) -> 0(Class<GR8>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	SBB8rr_EVEX(2(Class<GR8>) -> 0(Class<GR8>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	SBB8rr_EVEX(impl(Reg<EFLAGS>) -> impl(Reg<EFLAGS>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----SBB8rr_EVEX_REV-----
	SBB8rr_EVEX_REV(1(Class<GR8>) -> 0(Class<GR8>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	SBB8rr_EVEX_REV(2(Class<GR8>) -> 0(Class<GR8>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	SBB8rr_EVEX_REV(impl(Reg<EFLAGS>) -> impl(Reg<EFLAGS>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----SBB8rr_ND-----
	SBB8rr_ND(1(Class<GR8>) -> 0(Class<GR8>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	SBB8rr_ND(2(Class<GR8>) -> 0(Class<GR8>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	SBB8rr_ND(impl(Reg<EFLAGS>) -> impl(Reg<EFLAGS>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----SBB8rr_ND_REV-----
	SBB8rr_ND_REV(1(Class<GR8>) -> 0(Class<GR8>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	SBB8rr_ND_REV(2(Class<GR8>) -> 0(Class<GR8>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	SBB8rr_ND_REV(impl(Reg<EFLAGS>) -> impl(Reg<EFLAGS>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----SBB8rr_REV-----
	SBB8rr_REV(1(Class<GR8>) -> 0(Class<GR8>))  [1.01;1.01]
		WARNING generated instructions have multiple dependencies. If they have different latencies the lower one will be shadowed
	SBB8rr_REV(2(Class<GR8>) -> 0(Class<GR8>))  [1;1]
		WARNING generated instructions have multiple dependencies. If they have different latencies the lower one will be shadowed
	SBB8rr_REV(impl(Reg<EFLAGS>) -> impl(Reg<EFLAGS>))  [1;1]
		WARNING generated instructions have multiple dependencies. If they have different latencies the lower one will be shadowed
	SBB8rr_REV(impl(Reg<EFLAGS>) -> 0(Class<GR8>))  [0.999;1.02]
		Dependencies:
			ADC8ri8(impl(Reg<EFLAGS>) -> 0(Class<GR8>)) 
			ADC8ri(1(Class<GR8>) -> impl(Reg<EFLAGS>)) 
		Combined result: 2.02 cycles
	SBB8rr_REV(1(Class<GR8>) -> impl(Reg<EFLAGS>))  [1;1.02]
		Dependencies:
			ADC8ri8(impl(Reg<EFLAGS>) -> 0(Class<GR8>)) 
			ADC8ri(1(Class<GR8>) -> impl(Reg<EFLAGS>)) 
		Combined result: 2.02 cycles
	SBB8rr_REV(2(Class<GR8>) -> impl(Reg<EFLAGS>))  [1.01;1.02]
		Dependencies:
			ADC8ri8(impl(Reg<EFLAGS>) -> 0(Class<GR8>)) 
			ADC8ri(1(Class<GR8>) -> impl(Reg<EFLAGS>)) 
		Combined result: 2.02 cycles

-----SCASB-----
	SCASB(impl(Reg<EDI>) -> impl(Reg<EDI>))  [SKIP_MEMORY_OPERAND]
		SKIP_MEMORY_OPERAND, this instruction cannot be measured on this platform

-----SCASL-----
	SCASL(impl(Reg<EDI>) -> impl(Reg<EDI>))  [SKIP_MEMORY_OPERAND]
		SKIP_MEMORY_OPERAND, this instruction cannot be measured on this platform

-----SCASQ-----
	SCASQ(impl(Reg<EDI>) -> impl(Reg<EDI>))  [SKIP_MEMORY_OPERAND]
		SKIP_MEMORY_OPERAND, this instruction cannot be measured on this platform

-----SCASW-----
	SCASW(impl(Reg<EDI>) -> impl(Reg<EDI>))  [SKIP_MEMORY_OPERAND]
		SKIP_MEMORY_OPERAND, this instruction cannot be measured on this platform

-----SEG_ALLOCA_32-----
	SEG_ALLOCA_32(1(Class<GR32>) -> 0(Class<GR32>))  [0;0]
		WARNING generated instructions have multiple dependencies. If they have different latencies the lower one will be shadowed
	SEG_ALLOCA_32(impl(Reg<ESP>) -> impl(Reg<ESP>))  [0;0]
		 Successful, latency: 0
	SEG_ALLOCA_32(1(Class<GR32>) -> impl(Reg<EAX>))  [ERROR_UNUSUAL_LATENCY]
		Dependencies:
			XCHG32ar(impl(Reg<EAX>) -> 0(Class<GR32>)) 
			MUL32r(0(Class<GR32>) -> impl(Reg<EAX>)) 
		Combined result: 0.334 cycles
	SEG_ALLOCA_32(1(Class<GR32>) -> impl(Reg<EFLAGS>))  [ERROR_UNUSUAL_LATENCY]
		Dependencies:
			ADC32ri8(impl(Reg<EFLAGS>) -> 0(Class<GR32>)) 
			ADC32ri(1(Class<GR32>) -> impl(Reg<EFLAGS>)) 
		Combined result: 1.02 cycles
	SEG_ALLOCA_32(impl(Reg<ESP>) -> 0(Class<GR32>))  [1;-1]
		Dependencies:
			PROBED_ALLOCA_32(impl(Reg<ESP>) -> 0(Class<GR32>)) 
			DYN_ALLOCA_32(0(Class<GR32>) -> impl(Reg<ESP>)) 
		Combined result: 0 cycles
	SEG_ALLOCA_32(1(Class<GR32>) -> impl(Reg<ESP>))  [1;-1]
		Dependencies:
			PROBED_ALLOCA_32(impl(Reg<ESP>) -> 0(Class<GR32>)) 
			DYN_ALLOCA_32(0(Class<GR32>) -> impl(Reg<ESP>)) 
		Combined result: -0.00125 cycles

-----SEG_ALLOCA_64-----
	SEG_ALLOCA_64(1(Class<GR64>) -> 0(Class<GR64>))  [-0.00125;-0.00125]
		WARNING generated instructions have multiple dependencies. If they have different latencies the lower one will be shadowed
	SEG_ALLOCA_64(impl(Reg<RSP>) -> impl(Reg<RSP>))  [0;0]
		 Successful, latency: 0
	SEG_ALLOCA_64(1(Class<GR64>) -> impl(Reg<EFLAGS>))  [ERROR_UNUSUAL_LATENCY]
		Dependencies:
			ADC64rr(impl(Reg<EFLAGS>) -> 0(Class<GR64>)) 
			ADC64ri32(1(Class<GR64>) -> impl(Reg<EFLAGS>)) 
		Combined result: 1.01 cycles
	SEG_ALLOCA_64(1(Class<GR64>) -> impl(Reg<RAX>))  [ERROR_UNUSUAL_LATENCY]
		Dependencies:
			XCHG64ar(impl(Reg<RAX>) -> 0(Class<GR64>)) 
			CMPXCHG64rr(1(Class<GR64>) -> impl(Reg<RAX>)) 
		Combined result: 0.0825 cycles
	SEG_ALLOCA_64(impl(Reg<RSP>) -> 0(Class<GR64>))  [1;-1]
		Dependencies:
			PROBED_ALLOCA_64(impl(Reg<RSP>) -> 0(Class<GR64>)) 
			DYN_ALLOCA_64(0(Class<GR64>) -> impl(Reg<RSP>)) 
		Combined result: -0.00125 cycles
	SEG_ALLOCA_64(1(Class<GR64>) -> impl(Reg<RSP>))  [0.998;-1]
		Dependencies:
			PROBED_ALLOCA_64(impl(Reg<RSP>) -> 0(Class<GR64>)) 
			DYN_ALLOCA_64(0(Class<GR64>) -> impl(Reg<RSP>)) 
		Combined result: -0.00125 cycles

-----SETCCr-----
	SETCCr(impl(Reg<EFLAGS>) -> 0(Class<GR8>))  [-0.0025;0.0137]
		Dependencies:
			ADC8ri8(impl(Reg<EFLAGS>) -> 0(Class<GR8>)) 
			ADC8ri(1(Class<GR8>) -> impl(Reg<EFLAGS>)) 
		Combined result: 1.01 cycles

-----SETCCr_EVEX-----
	SETCCr_EVEX(impl(Reg<EFLAGS>) -> 0(Class<GR8>))  [ERROR_ILLEGAL_INSTRUCTION]

-----SETZUCCr-----
	SETZUCCr(impl(Reg<EFLAGS>) -> 0(Class<GR8>))  [ERROR_ILLEGAL_INSTRUCTION]

-----SHA1MSG1rr-----
	SHA1MSG1rr(1(Class<VR128>) -> 0(Class<VR128>))  [2.02;2.02]
		 Successful, latency: 2.02
	SHA1MSG1rr(2(Class<VR128>) -> 0(Class<VR128>))  [2.02;2.02]
		 Successful, latency: 2.02

-----SHA1MSG2rr-----
	SHA1MSG2rr(1(Class<VR128>) -> 0(Class<VR128>))  [2.01;2.01]
		 Successful, latency: 2.01
	SHA1MSG2rr(2(Class<VR128>) -> 0(Class<VR128>))  [2.01;2.01]
		 Successful, latency: 2.01

-----SHA1NEXTErr-----
	SHA1NEXTErr(1(Class<VR128>) -> 0(Class<VR128>))  [2.01;2.01]
		 Successful, latency: 2.01
	SHA1NEXTErr(2(Class<VR128>) -> 0(Class<VR128>))  [2.02;2.02]
		 Successful, latency: 2.02

-----SHA1RNDS4rri-----
	SHA1RNDS4rri(1(Class<VR128>) -> 0(Class<VR128>))  [6.05;6.05]
		 Successful, latency: 6.05
	SHA1RNDS4rri(2(Class<VR128>) -> 0(Class<VR128>))  [6.07;6.07]
		 Successful, latency: 6.07

-----SHA256MSG1rr-----
	SHA256MSG1rr(1(Class<VR128>) -> 0(Class<VR128>))  [3.04;3.04]
		 Successful, latency: 3.04
	SHA256MSG1rr(2(Class<VR128>) -> 0(Class<VR128>))  [3.05;3.05]
		 Successful, latency: 3.05

-----SHA256MSG2rr-----
	SHA256MSG2rr(1(Class<VR128>) -> 0(Class<VR128>))  [4.23;4.23]
		 Successful, latency: 4.23
	SHA256MSG2rr(2(Class<VR128>) -> 0(Class<VR128>))  [5.3;5.3]
		 Successful, latency: 5.3

-----SHA256RNDS2rr-----
	SHA256RNDS2rr(1(Class<VR128>) -> 0(Class<VR128>))  [4.06;4.06]
		 Successful, latency: 4.06
	SHA256RNDS2rr(2(Class<VR128>) -> 0(Class<VR128>))  [4.04;4.04]
		 Successful, latency: 4.04
	SHA256RNDS2rr(impl(Reg<XMM0>) -> 0(Class<VR128>))  [4.03;10.1]
		Dependencies:
			PBLENDVBrr0(impl(Reg<XMM0>) -> 0(Class<VR128>)) 
			VPCMPISTRMrri(0(Class<VR128>) -> impl(Reg<XMM0>)) 
		Combined result: 11.1 cycles

-----SHL16r1-----
	SHL16r1(1(Class<GR16>) -> 0(Class<GR16>))  [1.01;1.01]
		 Successful, latency: 1.01
	SHL16r1(1(Class<GR16>) -> impl(Reg<EFLAGS>))  [ERROR_UNUSUAL_LATENCY]
		Dependencies:
			ADC16rr(impl(Reg<EFLAGS>) -> 0(Class<GR16>)) 
			ADC16ri(1(Class<GR16>) -> impl(Reg<EFLAGS>)) 
		Combined result: 1 cycles

-----SHL16r1_EVEX-----
	SHL16r1_EVEX(1(Class<GR16>) -> 0(Class<GR16>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----SHL16r1_ND-----
	SHL16r1_ND(1(Class<GR16>) -> 0(Class<GR16>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----SHL16r1_NF-----
	SHL16r1_NF(1(Class<GR16>) -> 0(Class<GR16>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----SHL16r1_NF_ND-----
	SHL16r1_NF_ND(1(Class<GR16>) -> 0(Class<GR16>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----SHL16rCL-----
	SHL16rCL(1(Class<GR16>) -> 0(Class<GR16>))  [1;1]
		 Successful, latency: 1
	SHL16rCL(1(Class<GR16>) -> impl(Reg<EFLAGS>))  [ERROR_UNUSUAL_LATENCY]
		Dependencies:
			ADC16rr(impl(Reg<EFLAGS>) -> 0(Class<GR16>)) 
			ADC16ri(1(Class<GR16>) -> impl(Reg<EFLAGS>)) 
		Combined result: 1 cycles

-----SHL16rCL_EVEX-----
	SHL16rCL_EVEX(1(Class<GR16>) -> 0(Class<GR16>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----SHL16rCL_ND-----
	SHL16rCL_ND(1(Class<GR16>) -> 0(Class<GR16>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----SHL16rCL_NF-----
	SHL16rCL_NF(1(Class<GR16>) -> 0(Class<GR16>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----SHL16rCL_NF_ND-----
	SHL16rCL_NF_ND(1(Class<GR16>) -> 0(Class<GR16>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----SHL16ri-----
	SHL16ri(1(Class<GR16>) -> 0(Class<GR16>))  [1.01;1.01]
		 Successful, latency: 1.01
	SHL16ri(1(Class<GR16>) -> impl(Reg<EFLAGS>))  [ERROR_UNUSUAL_LATENCY]
		Dependencies:
			ADC16rr(impl(Reg<EFLAGS>) -> 0(Class<GR16>)) 
			ADC16ri(1(Class<GR16>) -> impl(Reg<EFLAGS>)) 
		Combined result: 1 cycles

-----SHL16ri_EVEX-----
	SHL16ri_EVEX(1(Class<GR16>) -> 0(Class<GR16>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----SHL16ri_ND-----
	SHL16ri_ND(1(Class<GR16>) -> 0(Class<GR16>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----SHL16ri_NF-----
	SHL16ri_NF(1(Class<GR16>) -> 0(Class<GR16>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----SHL16ri_NF_ND-----
	SHL16ri_NF_ND(1(Class<GR16>) -> 0(Class<GR16>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----SHL32r1-----
	SHL32r1(1(Class<GR32>) -> 0(Class<GR32>))  [1.01;1.01]
		 Successful, latency: 1.01
	SHL32r1(1(Class<GR32>) -> impl(Reg<EFLAGS>))  [ERROR_UNUSUAL_LATENCY]
		Dependencies:
			ADC32ri8(impl(Reg<EFLAGS>) -> 0(Class<GR32>)) 
			ADC32ri(1(Class<GR32>) -> impl(Reg<EFLAGS>)) 
		Combined result: 1.01 cycles

-----SHL32r1_EVEX-----
	SHL32r1_EVEX(1(Class<GR32>) -> 0(Class<GR32>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----SHL32r1_ND-----
	SHL32r1_ND(1(Class<GR32>) -> 0(Class<GR32>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----SHL32r1_NF-----
	SHL32r1_NF(1(Class<GR32>) -> 0(Class<GR32>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----SHL32r1_NF_ND-----
	SHL32r1_NF_ND(1(Class<GR32>) -> 0(Class<GR32>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----SHL32rCL-----
	SHL32rCL(1(Class<GR32>) -> 0(Class<GR32>))  [0.999;0.999]
		 Successful, latency: 0.999
	SHL32rCL(1(Class<GR32>) -> impl(Reg<EFLAGS>))  [31.4;31.4]
		Dependencies:
			ADC32ri8(impl(Reg<EFLAGS>) -> 0(Class<GR32>)) 
			ADC32ri(1(Class<GR32>) -> impl(Reg<EFLAGS>)) 
		Combined result: 32.4 cycles

-----SHL32rCL_EVEX-----
	SHL32rCL_EVEX(1(Class<GR32>) -> 0(Class<GR32>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----SHL32rCL_ND-----
	SHL32rCL_ND(1(Class<GR32>) -> 0(Class<GR32>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----SHL32rCL_NF-----
	SHL32rCL_NF(1(Class<GR32>) -> 0(Class<GR32>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----SHL32rCL_NF_ND-----
	SHL32rCL_NF_ND(1(Class<GR32>) -> 0(Class<GR32>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----SHL32ri-----
	SHL32ri(1(Class<GR32>) -> 0(Class<GR32>))  [1.02;1.02]
		 Successful, latency: 1.02
	SHL32ri(1(Class<GR32>) -> impl(Reg<EFLAGS>))  [ERROR_UNUSUAL_LATENCY]
		Dependencies:
			ADC32ri8(impl(Reg<EFLAGS>) -> 0(Class<GR32>)) 
			ADC32ri(1(Class<GR32>) -> impl(Reg<EFLAGS>)) 
		Combined result: 1.01 cycles

-----SHL32ri_EVEX-----
	SHL32ri_EVEX(1(Class<GR32>) -> 0(Class<GR32>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----SHL32ri_ND-----
	SHL32ri_ND(1(Class<GR32>) -> 0(Class<GR32>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----SHL32ri_NF-----
	SHL32ri_NF(1(Class<GR32>) -> 0(Class<GR32>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----SHL32ri_NF_ND-----
	SHL32ri_NF_ND(1(Class<GR32>) -> 0(Class<GR32>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----SHL64r1-----
	SHL64r1(1(Class<GR64>) -> 0(Class<GR64>))  [1;1]
		 Successful, latency: 1
	SHL64r1(1(Class<GR64>) -> impl(Reg<EFLAGS>))  [ERROR_UNUSUAL_LATENCY]
		Dependencies:
			ADC64rr(impl(Reg<EFLAGS>) -> 0(Class<GR64>)) 
			ADC64ri32(1(Class<GR64>) -> impl(Reg<EFLAGS>)) 
		Combined result: 1.01 cycles

-----SHL64r1_EVEX-----
	SHL64r1_EVEX(1(Class<GR64>) -> 0(Class<GR64>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----SHL64r1_ND-----
	SHL64r1_ND(1(Class<GR64>) -> 0(Class<GR64>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----SHL64r1_NF-----
	SHL64r1_NF(1(Class<GR64>) -> 0(Class<GR64>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----SHL64r1_NF_ND-----
	SHL64r1_NF_ND(1(Class<GR64>) -> 0(Class<GR64>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----SHL64rCL-----
	SHL64rCL(1(Class<GR64>) -> 0(Class<GR64>))  [1;1]
		 Successful, latency: 1
	SHL64rCL(1(Class<GR64>) -> impl(Reg<EFLAGS>))  [ERROR_UNUSUAL_LATENCY]
		Dependencies:
			ADC64rr(impl(Reg<EFLAGS>) -> 0(Class<GR64>)) 
			ADC64ri32(1(Class<GR64>) -> impl(Reg<EFLAGS>)) 
		Combined result: 1.01 cycles

-----SHL64rCL_EVEX-----
	SHL64rCL_EVEX(1(Class<GR64>) -> 0(Class<GR64>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----SHL64rCL_ND-----
	SHL64rCL_ND(1(Class<GR64>) -> 0(Class<GR64>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----SHL64rCL_NF-----
	SHL64rCL_NF(1(Class<GR64>) -> 0(Class<GR64>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----SHL64rCL_NF_ND-----
	SHL64rCL_NF_ND(1(Class<GR64>) -> 0(Class<GR64>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----SHL64ri-----
	SHL64ri(1(Class<GR64>) -> 0(Class<GR64>))  [1.01;1.01]
		 Successful, latency: 1.01
	SHL64ri(1(Class<GR64>) -> impl(Reg<EFLAGS>))  [ERROR_UNUSUAL_LATENCY]
		Dependencies:
			ADC64rr(impl(Reg<EFLAGS>) -> 0(Class<GR64>)) 
			ADC64ri32(1(Class<GR64>) -> impl(Reg<EFLAGS>)) 
		Combined result: 1.01 cycles

-----SHL64ri_EVEX-----
	SHL64ri_EVEX(1(Class<GR64>) -> 0(Class<GR64>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----SHL64ri_ND-----
	SHL64ri_ND(1(Class<GR64>) -> 0(Class<GR64>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----SHL64ri_NF-----
	SHL64ri_NF(1(Class<GR64>) -> 0(Class<GR64>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----SHL64ri_NF_ND-----
	SHL64ri_NF_ND(1(Class<GR64>) -> 0(Class<GR64>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----SHL8r1-----
	SHL8r1(1(Class<GR8>) -> 0(Class<GR8>))  [1.01;1.01]
		 Successful, latency: 1.01
	SHL8r1(1(Class<GR8>) -> impl(Reg<EFLAGS>))  [ERROR_UNUSUAL_LATENCY]
		Dependencies:
			ADC8ri8(impl(Reg<EFLAGS>) -> 0(Class<GR8>)) 
			ADC8ri(1(Class<GR8>) -> impl(Reg<EFLAGS>)) 
		Combined result: 1.01 cycles

-----SHL8r1_EVEX-----
	SHL8r1_EVEX(1(Class<GR8>) -> 0(Class<GR8>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----SHL8r1_ND-----
	SHL8r1_ND(1(Class<GR8>) -> 0(Class<GR8>))  [ERROR_ASSEMBLY]
		ERROR_ASSEMBLY, this instruction cannot be measured on this platform

-----SHL8r1_NF-----
	SHL8r1_NF(1(Class<GR8>) -> 0(Class<GR8>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----SHL8r1_NF_ND-----
	SHL8r1_NF_ND(1(Class<GR8>) -> 0(Class<GR8>))  [ERROR_ASSEMBLY]
		ERROR_ASSEMBLY, this instruction cannot be measured on this platform

-----SHL8rCL-----
	SHL8rCL(1(Class<GR8>) -> 0(Class<GR8>))  [1.01;1.01]
		 Successful, latency: 1.01
	SHL8rCL(1(Class<GR8>) -> impl(Reg<EFLAGS>))  [31.4;31.4]
		Dependencies:
			ADC8ri8(impl(Reg<EFLAGS>) -> 0(Class<GR8>)) 
			ADC8ri(1(Class<GR8>) -> impl(Reg<EFLAGS>)) 
		Combined result: 32.4 cycles

-----SHL8rCL_EVEX-----
	SHL8rCL_EVEX(1(Class<GR8>) -> 0(Class<GR8>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----SHL8rCL_ND-----
	SHL8rCL_ND(1(Class<GR8>) -> 0(Class<GR8>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----SHL8rCL_NF-----
	SHL8rCL_NF(1(Class<GR8>) -> 0(Class<GR8>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----SHL8rCL_NF_ND-----
	SHL8rCL_NF_ND(1(Class<GR8>) -> 0(Class<GR8>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----SHL8ri-----
	SHL8ri(1(Class<GR8>) -> 0(Class<GR8>))  [1.02;1.02]
		 Successful, latency: 1.02
	SHL8ri(1(Class<GR8>) -> impl(Reg<EFLAGS>))  [ERROR_UNUSUAL_LATENCY]
		Dependencies:
			ADC8ri8(impl(Reg<EFLAGS>) -> 0(Class<GR8>)) 
			ADC8ri(1(Class<GR8>) -> impl(Reg<EFLAGS>)) 
		Combined result: 1.01 cycles

-----SHL8ri_EVEX-----
	SHL8ri_EVEX(1(Class<GR8>) -> 0(Class<GR8>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----SHL8ri_ND-----
	SHL8ri_ND(1(Class<GR8>) -> 0(Class<GR8>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----SHL8ri_NF-----
	SHL8ri_NF(1(Class<GR8>) -> 0(Class<GR8>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----SHL8ri_NF_ND-----
	SHL8ri_NF_ND(1(Class<GR8>) -> 0(Class<GR8>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----SHLD16rrCL-----
	SHLD16rrCL(1(Class<GR16>) -> 0(Class<GR16>))  [2.02;2.02]
		 Successful, latency: 2.02
	SHLD16rrCL(2(Class<GR16>) -> 0(Class<GR16>))  [2.02;2.02]
		 Successful, latency: 2.02
	SHLD16rrCL(1(Class<GR16>) -> impl(Reg<EFLAGS>))  [1.01;1.03]
		Dependencies:
			ADC16rr(impl(Reg<EFLAGS>) -> 0(Class<GR16>)) 
			ADC16ri(1(Class<GR16>) -> impl(Reg<EFLAGS>)) 
		Combined result: 2.02 cycles
	SHLD16rrCL(2(Class<GR16>) -> impl(Reg<EFLAGS>))  [ERROR_UNUSUAL_LATENCY]
		Dependencies:
			ADC16rr(impl(Reg<EFLAGS>) -> 0(Class<GR16>)) 
			ADC16ri(1(Class<GR16>) -> impl(Reg<EFLAGS>)) 
		Combined result: 2.14 cycles

-----SHLD16rrCL_EVEX-----
	SHLD16rrCL_EVEX(1(Class<GR16>) -> 0(Class<GR16>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	SHLD16rrCL_EVEX(2(Class<GR16>) -> 0(Class<GR16>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----SHLD16rrCL_ND-----
	SHLD16rrCL_ND(1(Class<GR16>) -> 0(Class<GR16>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	SHLD16rrCL_ND(2(Class<GR16>) -> 0(Class<GR16>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----SHLD16rrCL_NF-----
	SHLD16rrCL_NF(1(Class<GR16>) -> 0(Class<GR16>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	SHLD16rrCL_NF(2(Class<GR16>) -> 0(Class<GR16>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----SHLD16rrCL_NF_ND-----
	SHLD16rrCL_NF_ND(1(Class<GR16>) -> 0(Class<GR16>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	SHLD16rrCL_NF_ND(2(Class<GR16>) -> 0(Class<GR16>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----SHLD16rri8-----
	SHLD16rri8(1(Class<GR16>) -> 0(Class<GR16>))  [2.02;2.02]
		 Successful, latency: 2.02
	SHLD16rri8(2(Class<GR16>) -> 0(Class<GR16>))  [2.01;2.01]
		 Successful, latency: 2.01
	SHLD16rri8(1(Class<GR16>) -> impl(Reg<EFLAGS>))  [1;1.02]
		Dependencies:
			ADC16rr(impl(Reg<EFLAGS>) -> 0(Class<GR16>)) 
			ADC16ri(1(Class<GR16>) -> impl(Reg<EFLAGS>)) 
		Combined result: 2.01 cycles
	SHLD16rri8(2(Class<GR16>) -> impl(Reg<EFLAGS>))  [ERROR_UNUSUAL_LATENCY]
		Dependencies:
			ADC16rr(impl(Reg<EFLAGS>) -> 0(Class<GR16>)) 
			ADC16ri(1(Class<GR16>) -> impl(Reg<EFLAGS>)) 
		Combined result: 2.15 cycles

-----SHLD16rri8_EVEX-----
	SHLD16rri8_EVEX(1(Class<GR16>) -> 0(Class<GR16>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	SHLD16rri8_EVEX(2(Class<GR16>) -> 0(Class<GR16>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----SHLD16rri8_ND-----
	SHLD16rri8_ND(1(Class<GR16>) -> 0(Class<GR16>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	SHLD16rri8_ND(2(Class<GR16>) -> 0(Class<GR16>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----SHLD16rri8_NF-----
	SHLD16rri8_NF(1(Class<GR16>) -> 0(Class<GR16>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	SHLD16rri8_NF(2(Class<GR16>) -> 0(Class<GR16>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----SHLD16rri8_NF_ND-----
	SHLD16rri8_NF_ND(1(Class<GR16>) -> 0(Class<GR16>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	SHLD16rri8_NF_ND(2(Class<GR16>) -> 0(Class<GR16>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----SHLD32rrCL-----
	SHLD32rrCL(1(Class<GR32>) -> 0(Class<GR32>))  [2.02;2.02]
		 Successful, latency: 2.02
	SHLD32rrCL(2(Class<GR32>) -> 0(Class<GR32>))  [2.02;2.02]
		 Successful, latency: 2.02
	SHLD32rrCL(1(Class<GR32>) -> impl(Reg<EFLAGS>))  [34.5;34.5]
		Dependencies:
			ADC32ri8(impl(Reg<EFLAGS>) -> 0(Class<GR32>)) 
			ADC32ri(1(Class<GR32>) -> impl(Reg<EFLAGS>)) 
		Combined result: 35.5 cycles
	SHLD32rrCL(2(Class<GR32>) -> impl(Reg<EFLAGS>))  [34.6;34.6]
		Dependencies:
			ADC32ri8(impl(Reg<EFLAGS>) -> 0(Class<GR32>)) 
			ADC32ri(1(Class<GR32>) -> impl(Reg<EFLAGS>)) 
		Combined result: 35.6 cycles

-----SHLD32rrCL_EVEX-----
	SHLD32rrCL_EVEX(1(Class<GR32>) -> 0(Class<GR32>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	SHLD32rrCL_EVEX(2(Class<GR32>) -> 0(Class<GR32>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----SHLD32rrCL_ND-----
	SHLD32rrCL_ND(1(Class<GR32>) -> 0(Class<GR32>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	SHLD32rrCL_ND(2(Class<GR32>) -> 0(Class<GR32>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----SHLD32rrCL_NF-----
	SHLD32rrCL_NF(1(Class<GR32>) -> 0(Class<GR32>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	SHLD32rrCL_NF(2(Class<GR32>) -> 0(Class<GR32>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----SHLD32rrCL_NF_ND-----
	SHLD32rrCL_NF_ND(1(Class<GR32>) -> 0(Class<GR32>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	SHLD32rrCL_NF_ND(2(Class<GR32>) -> 0(Class<GR32>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----SHLD32rri8-----
	SHLD32rri8(1(Class<GR32>) -> 0(Class<GR32>))  [2.02;2.02]
		 Successful, latency: 2.02
	SHLD32rri8(2(Class<GR32>) -> 0(Class<GR32>))  [2.02;2.02]
		 Successful, latency: 2.02
	SHLD32rri8(1(Class<GR32>) -> impl(Reg<EFLAGS>))  [0.984;1]
		Dependencies:
			ADC32ri8(impl(Reg<EFLAGS>) -> 0(Class<GR32>)) 
			ADC32ri(1(Class<GR32>) -> impl(Reg<EFLAGS>)) 
		Combined result: 2.01 cycles
	SHLD32rri8(2(Class<GR32>) -> impl(Reg<EFLAGS>))  [ERROR_UNUSUAL_LATENCY]
		Dependencies:
			ADC32ri8(impl(Reg<EFLAGS>) -> 0(Class<GR32>)) 
			ADC32ri(1(Class<GR32>) -> impl(Reg<EFLAGS>)) 
		Combined result: 2.15 cycles

-----SHLD32rri8_EVEX-----
	SHLD32rri8_EVEX(1(Class<GR32>) -> 0(Class<GR32>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	SHLD32rri8_EVEX(2(Class<GR32>) -> 0(Class<GR32>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----SHLD32rri8_ND-----
	SHLD32rri8_ND(1(Class<GR32>) -> 0(Class<GR32>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	SHLD32rri8_ND(2(Class<GR32>) -> 0(Class<GR32>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----SHLD32rri8_NF-----
	SHLD32rri8_NF(1(Class<GR32>) -> 0(Class<GR32>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	SHLD32rri8_NF(2(Class<GR32>) -> 0(Class<GR32>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----SHLD32rri8_NF_ND-----
	SHLD32rri8_NF_ND(1(Class<GR32>) -> 0(Class<GR32>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	SHLD32rri8_NF_ND(2(Class<GR32>) -> 0(Class<GR32>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----SHLD64rrCL-----
	SHLD64rrCL(1(Class<GR64>) -> 0(Class<GR64>))  [2.02;2.02]
		 Successful, latency: 2.02
	SHLD64rrCL(2(Class<GR64>) -> 0(Class<GR64>))  [2.01;2.01]
		 Successful, latency: 2.01
	SHLD64rrCL(1(Class<GR64>) -> impl(Reg<EFLAGS>))  [1.01;1.02]
		Dependencies:
			ADC64rr(impl(Reg<EFLAGS>) -> 0(Class<GR64>)) 
			ADC64ri32(1(Class<GR64>) -> impl(Reg<EFLAGS>)) 
		Combined result: 2.02 cycles
	SHLD64rrCL(2(Class<GR64>) -> impl(Reg<EFLAGS>))  [ERROR_UNUSUAL_LATENCY]
		Dependencies:
			ADC64rr(impl(Reg<EFLAGS>) -> 0(Class<GR64>)) 
			ADC64ri32(1(Class<GR64>) -> impl(Reg<EFLAGS>)) 
		Combined result: 2.15 cycles

-----SHLD64rrCL_EVEX-----
	SHLD64rrCL_EVEX(1(Class<GR64>) -> 0(Class<GR64>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	SHLD64rrCL_EVEX(2(Class<GR64>) -> 0(Class<GR64>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----SHLD64rrCL_ND-----
	SHLD64rrCL_ND(1(Class<GR64>) -> 0(Class<GR64>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	SHLD64rrCL_ND(2(Class<GR64>) -> 0(Class<GR64>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----SHLD64rrCL_NF-----
	SHLD64rrCL_NF(1(Class<GR64>) -> 0(Class<GR64>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	SHLD64rrCL_NF(2(Class<GR64>) -> 0(Class<GR64>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----SHLD64rrCL_NF_ND-----
	SHLD64rrCL_NF_ND(1(Class<GR64>) -> 0(Class<GR64>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	SHLD64rrCL_NF_ND(2(Class<GR64>) -> 0(Class<GR64>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----SHLD64rri8-----
	SHLD64rri8(1(Class<GR64>) -> 0(Class<GR64>))  [2.03;2.03]
		 Successful, latency: 2.03
	SHLD64rri8(2(Class<GR64>) -> 0(Class<GR64>))  [2.02;2.02]
		 Successful, latency: 2.02
	SHLD64rri8(1(Class<GR64>) -> impl(Reg<EFLAGS>))  [1.01;1.02]
		Dependencies:
			ADC64rr(impl(Reg<EFLAGS>) -> 0(Class<GR64>)) 
			ADC64ri32(1(Class<GR64>) -> impl(Reg<EFLAGS>)) 
		Combined result: 2.02 cycles
	SHLD64rri8(2(Class<GR64>) -> impl(Reg<EFLAGS>))  [ERROR_UNUSUAL_LATENCY]
		Dependencies:
			ADC64rr(impl(Reg<EFLAGS>) -> 0(Class<GR64>)) 
			ADC64ri32(1(Class<GR64>) -> impl(Reg<EFLAGS>)) 
		Combined result: 2.17 cycles

-----SHLD64rri8_EVEX-----
	SHLD64rri8_EVEX(1(Class<GR64>) -> 0(Class<GR64>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	SHLD64rri8_EVEX(2(Class<GR64>) -> 0(Class<GR64>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----SHLD64rri8_ND-----
	SHLD64rri8_ND(1(Class<GR64>) -> 0(Class<GR64>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	SHLD64rri8_ND(2(Class<GR64>) -> 0(Class<GR64>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----SHLD64rri8_NF-----
	SHLD64rri8_NF(1(Class<GR64>) -> 0(Class<GR64>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	SHLD64rri8_NF(2(Class<GR64>) -> 0(Class<GR64>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----SHLD64rri8_NF_ND-----
	SHLD64rri8_NF_ND(1(Class<GR64>) -> 0(Class<GR64>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	SHLD64rri8_NF_ND(2(Class<GR64>) -> 0(Class<GR64>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----SHLX32rr-----
	SHLX32rr(1(Class<GR32>) -> 0(Class<GR32>))  [1;1]
		 Successful, latency: 1
	SHLX32rr(2(Class<GR32>) -> 0(Class<GR32>))  [1;1]
		 Successful, latency: 1

-----SHLX32rr_EVEX-----
	SHLX32rr_EVEX(1(Class<GR32>) -> 0(Class<GR32>))  [1;1]
		 Successful, latency: 1
	SHLX32rr_EVEX(2(Class<GR32>) -> 0(Class<GR32>))  [1.01;1.01]
		 Successful, latency: 1.01

-----SHLX64rr-----
	SHLX64rr(1(Class<GR64>) -> 0(Class<GR64>))  [1.01;1.01]
		 Successful, latency: 1.01
	SHLX64rr(2(Class<GR64>) -> 0(Class<GR64>))  [0.999;0.999]
		 Successful, latency: 0.999

-----SHLX64rr_EVEX-----
	SHLX64rr_EVEX(1(Class<GR64>) -> 0(Class<GR64>))  [1;1]
		 Successful, latency: 1
	SHLX64rr_EVEX(2(Class<GR64>) -> 0(Class<GR64>))  [1.01;1.01]
		 Successful, latency: 1.01

-----SHR16r1-----
	SHR16r1(1(Class<GR16>) -> 0(Class<GR16>))  [1.02;1.02]
		 Successful, latency: 1.02
	SHR16r1(1(Class<GR16>) -> impl(Reg<EFLAGS>))  [ERROR_UNUSUAL_LATENCY]
		Dependencies:
			ADC16rr(impl(Reg<EFLAGS>) -> 0(Class<GR16>)) 
			ADC16ri(1(Class<GR16>) -> impl(Reg<EFLAGS>)) 
		Combined result: 1.01 cycles

-----SHR16r1_EVEX-----
	SHR16r1_EVEX(1(Class<GR16>) -> 0(Class<GR16>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----SHR16r1_ND-----
	SHR16r1_ND(1(Class<GR16>) -> 0(Class<GR16>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----SHR16r1_NF-----
	SHR16r1_NF(1(Class<GR16>) -> 0(Class<GR16>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----SHR16r1_NF_ND-----
	SHR16r1_NF_ND(1(Class<GR16>) -> 0(Class<GR16>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----SHR16rCL-----
	SHR16rCL(1(Class<GR16>) -> 0(Class<GR16>))  [1;1]
		 Successful, latency: 1
	SHR16rCL(1(Class<GR16>) -> impl(Reg<EFLAGS>))  [ERROR_UNUSUAL_LATENCY]
		Dependencies:
			ADC16rr(impl(Reg<EFLAGS>) -> 0(Class<GR16>)) 
			ADC16ri(1(Class<GR16>) -> impl(Reg<EFLAGS>)) 
		Combined result: 1.01 cycles

-----SHR16rCL_EVEX-----
	SHR16rCL_EVEX(1(Class<GR16>) -> 0(Class<GR16>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----SHR16rCL_ND-----
	SHR16rCL_ND(1(Class<GR16>) -> 0(Class<GR16>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----SHR16rCL_NF-----
	SHR16rCL_NF(1(Class<GR16>) -> 0(Class<GR16>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----SHR16rCL_NF_ND-----
	SHR16rCL_NF_ND(1(Class<GR16>) -> 0(Class<GR16>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----SHR16ri-----
	SHR16ri(1(Class<GR16>) -> 0(Class<GR16>))  [1;1]
		 Successful, latency: 1
	SHR16ri(1(Class<GR16>) -> impl(Reg<EFLAGS>))  [ERROR_UNUSUAL_LATENCY]
		Dependencies:
			ADC16rr(impl(Reg<EFLAGS>) -> 0(Class<GR16>)) 
			ADC16ri(1(Class<GR16>) -> impl(Reg<EFLAGS>)) 
		Combined result: 1.01 cycles

-----SHR16ri_EVEX-----
	SHR16ri_EVEX(1(Class<GR16>) -> 0(Class<GR16>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----SHR16ri_ND-----
	SHR16ri_ND(1(Class<GR16>) -> 0(Class<GR16>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----SHR16ri_NF-----
	SHR16ri_NF(1(Class<GR16>) -> 0(Class<GR16>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----SHR16ri_NF_ND-----
	SHR16ri_NF_ND(1(Class<GR16>) -> 0(Class<GR16>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----SHR32r1-----
	SHR32r1(1(Class<GR32>) -> 0(Class<GR32>))  [1.01;1.01]
		 Successful, latency: 1.01
	SHR32r1(1(Class<GR32>) -> impl(Reg<EFLAGS>))  [ERROR_UNUSUAL_LATENCY]
		Dependencies:
			ADC32ri8(impl(Reg<EFLAGS>) -> 0(Class<GR32>)) 
			ADC32ri(1(Class<GR32>) -> impl(Reg<EFLAGS>)) 
		Combined result: 1 cycles

-----SHR32r1_EVEX-----
	SHR32r1_EVEX(1(Class<GR32>) -> 0(Class<GR32>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----SHR32r1_ND-----
	SHR32r1_ND(1(Class<GR32>) -> 0(Class<GR32>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----SHR32r1_NF-----
	SHR32r1_NF(1(Class<GR32>) -> 0(Class<GR32>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----SHR32r1_NF_ND-----
	SHR32r1_NF_ND(1(Class<GR32>) -> 0(Class<GR32>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----SHR32rCL-----
	SHR32rCL(1(Class<GR32>) -> 0(Class<GR32>))  [1;1]
		 Successful, latency: 1
	SHR32rCL(1(Class<GR32>) -> impl(Reg<EFLAGS>))  [31.4;31.4]
		Dependencies:
			ADC32ri8(impl(Reg<EFLAGS>) -> 0(Class<GR32>)) 
			ADC32ri(1(Class<GR32>) -> impl(Reg<EFLAGS>)) 
		Combined result: 32.4 cycles

-----SHR32rCL_EVEX-----
	SHR32rCL_EVEX(1(Class<GR32>) -> 0(Class<GR32>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----SHR32rCL_ND-----
	SHR32rCL_ND(1(Class<GR32>) -> 0(Class<GR32>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----SHR32rCL_NF-----
	SHR32rCL_NF(1(Class<GR32>) -> 0(Class<GR32>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----SHR32rCL_NF_ND-----
	SHR32rCL_NF_ND(1(Class<GR32>) -> 0(Class<GR32>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----SHR32ri-----
	SHR32ri(1(Class<GR32>) -> 0(Class<GR32>))  [1.01;1.01]
		 Successful, latency: 1.01
	SHR32ri(1(Class<GR32>) -> impl(Reg<EFLAGS>))  [ERROR_UNUSUAL_LATENCY]
		Dependencies:
			ADC32ri8(impl(Reg<EFLAGS>) -> 0(Class<GR32>)) 
			ADC32ri(1(Class<GR32>) -> impl(Reg<EFLAGS>)) 
		Combined result: 1.01 cycles

-----SHR32ri_EVEX-----
	SHR32ri_EVEX(1(Class<GR32>) -> 0(Class<GR32>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----SHR32ri_ND-----
	SHR32ri_ND(1(Class<GR32>) -> 0(Class<GR32>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----SHR32ri_NF-----
	SHR32ri_NF(1(Class<GR32>) -> 0(Class<GR32>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----SHR32ri_NF_ND-----
	SHR32ri_NF_ND(1(Class<GR32>) -> 0(Class<GR32>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----SHR64r1-----
	SHR64r1(1(Class<GR64>) -> 0(Class<GR64>))  [1;1]
		 Successful, latency: 1
	SHR64r1(1(Class<GR64>) -> impl(Reg<EFLAGS>))  [ERROR_UNUSUAL_LATENCY]
		Dependencies:
			ADC64rr(impl(Reg<EFLAGS>) -> 0(Class<GR64>)) 
			ADC64ri32(1(Class<GR64>) -> impl(Reg<EFLAGS>)) 
		Combined result: 1.02 cycles

-----SHR64r1_EVEX-----
	SHR64r1_EVEX(1(Class<GR64>) -> 0(Class<GR64>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----SHR64r1_ND-----
	SHR64r1_ND(1(Class<GR64>) -> 0(Class<GR64>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----SHR64r1_NF-----
	SHR64r1_NF(1(Class<GR64>) -> 0(Class<GR64>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----SHR64r1_NF_ND-----
	SHR64r1_NF_ND(1(Class<GR64>) -> 0(Class<GR64>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----SHR64rCL-----
	SHR64rCL(1(Class<GR64>) -> 0(Class<GR64>))  [1;1]
		 Successful, latency: 1
	SHR64rCL(1(Class<GR64>) -> impl(Reg<EFLAGS>))  [ERROR_UNUSUAL_LATENCY]
		Dependencies:
			ADC64rr(impl(Reg<EFLAGS>) -> 0(Class<GR64>)) 
			ADC64ri32(1(Class<GR64>) -> impl(Reg<EFLAGS>)) 
		Combined result: 1.02 cycles

-----SHR64rCL_EVEX-----
	SHR64rCL_EVEX(1(Class<GR64>) -> 0(Class<GR64>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----SHR64rCL_ND-----
	SHR64rCL_ND(1(Class<GR64>) -> 0(Class<GR64>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----SHR64rCL_NF-----
	SHR64rCL_NF(1(Class<GR64>) -> 0(Class<GR64>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----SHR64rCL_NF_ND-----
	SHR64rCL_NF_ND(1(Class<GR64>) -> 0(Class<GR64>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----SHR64ri-----
	SHR64ri(1(Class<GR64>) -> 0(Class<GR64>))  [1.01;1.01]
		 Successful, latency: 1.01
	SHR64ri(1(Class<GR64>) -> impl(Reg<EFLAGS>))  [ERROR_UNUSUAL_LATENCY]
		Dependencies:
			ADC64rr(impl(Reg<EFLAGS>) -> 0(Class<GR64>)) 
			ADC64ri32(1(Class<GR64>) -> impl(Reg<EFLAGS>)) 
		Combined result: 1 cycles

-----SHR64ri_EVEX-----
	SHR64ri_EVEX(1(Class<GR64>) -> 0(Class<GR64>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----SHR64ri_ND-----
	SHR64ri_ND(1(Class<GR64>) -> 0(Class<GR64>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----SHR64ri_NF-----
	SHR64ri_NF(1(Class<GR64>) -> 0(Class<GR64>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----SHR64ri_NF_ND-----
	SHR64ri_NF_ND(1(Class<GR64>) -> 0(Class<GR64>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----SHR8r1-----
	SHR8r1(1(Class<GR8>) -> 0(Class<GR8>))  [1;1]
		 Successful, latency: 1
	SHR8r1(1(Class<GR8>) -> impl(Reg<EFLAGS>))  [ERROR_UNUSUAL_LATENCY]
		Dependencies:
			ADC8ri8(impl(Reg<EFLAGS>) -> 0(Class<GR8>)) 
			ADC8ri(1(Class<GR8>) -> impl(Reg<EFLAGS>)) 
		Combined result: 1.01 cycles

-----SHR8r1_EVEX-----
	SHR8r1_EVEX(1(Class<GR8>) -> 0(Class<GR8>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----SHR8r1_ND-----
	SHR8r1_ND(1(Class<GR8>) -> 0(Class<GR8>))  [ERROR_ASSEMBLY]
		ERROR_ASSEMBLY, this instruction cannot be measured on this platform

-----SHR8r1_NF-----
	SHR8r1_NF(1(Class<GR8>) -> 0(Class<GR8>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----SHR8r1_NF_ND-----
	SHR8r1_NF_ND(1(Class<GR8>) -> 0(Class<GR8>))  [ERROR_ASSEMBLY]
		ERROR_ASSEMBLY, this instruction cannot be measured on this platform

-----SHR8rCL-----
	SHR8rCL(1(Class<GR8>) -> 0(Class<GR8>))  [1;1]
		 Successful, latency: 1
	SHR8rCL(1(Class<GR8>) -> impl(Reg<EFLAGS>))  [31.5;31.5]
		Dependencies:
			ADC8ri8(impl(Reg<EFLAGS>) -> 0(Class<GR8>)) 
			ADC8ri(1(Class<GR8>) -> impl(Reg<EFLAGS>)) 
		Combined result: 32.5 cycles

-----SHR8rCL_EVEX-----
	SHR8rCL_EVEX(1(Class<GR8>) -> 0(Class<GR8>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----SHR8rCL_ND-----
	SHR8rCL_ND(1(Class<GR8>) -> 0(Class<GR8>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----SHR8rCL_NF-----
	SHR8rCL_NF(1(Class<GR8>) -> 0(Class<GR8>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----SHR8rCL_NF_ND-----
	SHR8rCL_NF_ND(1(Class<GR8>) -> 0(Class<GR8>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----SHR8ri-----
	SHR8ri(1(Class<GR8>) -> 0(Class<GR8>))  [1.01;1.01]
		 Successful, latency: 1.01
	SHR8ri(1(Class<GR8>) -> impl(Reg<EFLAGS>))  [ERROR_UNUSUAL_LATENCY]
		Dependencies:
			ADC8ri8(impl(Reg<EFLAGS>) -> 0(Class<GR8>)) 
			ADC8ri(1(Class<GR8>) -> impl(Reg<EFLAGS>)) 
		Combined result: 1.01 cycles

-----SHR8ri_EVEX-----
	SHR8ri_EVEX(1(Class<GR8>) -> 0(Class<GR8>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----SHR8ri_ND-----
	SHR8ri_ND(1(Class<GR8>) -> 0(Class<GR8>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----SHR8ri_NF-----
	SHR8ri_NF(1(Class<GR8>) -> 0(Class<GR8>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----SHR8ri_NF_ND-----
	SHR8ri_NF_ND(1(Class<GR8>) -> 0(Class<GR8>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----SHRD16rrCL-----
	SHRD16rrCL(1(Class<GR16>) -> 0(Class<GR16>))  [2.01;2.01]
		 Successful, latency: 2.01
	SHRD16rrCL(2(Class<GR16>) -> 0(Class<GR16>))  [2.04;2.04]
		 Successful, latency: 2.04
	SHRD16rrCL(1(Class<GR16>) -> impl(Reg<EFLAGS>))  [0.996;1.01]
		Dependencies:
			ADC16rr(impl(Reg<EFLAGS>) -> 0(Class<GR16>)) 
			ADC16ri(1(Class<GR16>) -> impl(Reg<EFLAGS>)) 
		Combined result: 2.01 cycles
	SHRD16rrCL(2(Class<GR16>) -> impl(Reg<EFLAGS>))  [ERROR_UNUSUAL_LATENCY]
		Dependencies:
			ADC16rr(impl(Reg<EFLAGS>) -> 0(Class<GR16>)) 
			ADC16ri(1(Class<GR16>) -> impl(Reg<EFLAGS>)) 
		Combined result: 2.16 cycles

-----SHRD16rrCL_EVEX-----
	SHRD16rrCL_EVEX(1(Class<GR16>) -> 0(Class<GR16>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	SHRD16rrCL_EVEX(2(Class<GR16>) -> 0(Class<GR16>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----SHRD16rrCL_ND-----
	SHRD16rrCL_ND(1(Class<GR16>) -> 0(Class<GR16>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	SHRD16rrCL_ND(2(Class<GR16>) -> 0(Class<GR16>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----SHRD16rrCL_NF-----
	SHRD16rrCL_NF(1(Class<GR16>) -> 0(Class<GR16>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	SHRD16rrCL_NF(2(Class<GR16>) -> 0(Class<GR16>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----SHRD16rrCL_NF_ND-----
	SHRD16rrCL_NF_ND(1(Class<GR16>) -> 0(Class<GR16>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	SHRD16rrCL_NF_ND(2(Class<GR16>) -> 0(Class<GR16>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----SHRD16rri8-----
	SHRD16rri8(1(Class<GR16>) -> 0(Class<GR16>))  [2.03;2.03]
		 Successful, latency: 2.03
	SHRD16rri8(2(Class<GR16>) -> 0(Class<GR16>))  [2.02;2.02]
		 Successful, latency: 2.02
	SHRD16rri8(1(Class<GR16>) -> impl(Reg<EFLAGS>))  [1.01;1.03]
		Dependencies:
			ADC16rr(impl(Reg<EFLAGS>) -> 0(Class<GR16>)) 
			ADC16ri(1(Class<GR16>) -> impl(Reg<EFLAGS>)) 
		Combined result: 2.02 cycles
	SHRD16rri8(2(Class<GR16>) -> impl(Reg<EFLAGS>))  [ERROR_UNUSUAL_LATENCY]
		Dependencies:
			ADC16rr(impl(Reg<EFLAGS>) -> 0(Class<GR16>)) 
			ADC16ri(1(Class<GR16>) -> impl(Reg<EFLAGS>)) 
		Combined result: 2.16 cycles

-----SHRD16rri8_EVEX-----
	SHRD16rri8_EVEX(1(Class<GR16>) -> 0(Class<GR16>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	SHRD16rri8_EVEX(2(Class<GR16>) -> 0(Class<GR16>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----SHRD16rri8_ND-----
	SHRD16rri8_ND(1(Class<GR16>) -> 0(Class<GR16>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	SHRD16rri8_ND(2(Class<GR16>) -> 0(Class<GR16>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----SHRD16rri8_NF-----
	SHRD16rri8_NF(1(Class<GR16>) -> 0(Class<GR16>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	SHRD16rri8_NF(2(Class<GR16>) -> 0(Class<GR16>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----SHRD16rri8_NF_ND-----
	SHRD16rri8_NF_ND(1(Class<GR16>) -> 0(Class<GR16>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	SHRD16rri8_NF_ND(2(Class<GR16>) -> 0(Class<GR16>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----SHRD32rrCL-----
	SHRD32rrCL(1(Class<GR32>) -> 0(Class<GR32>))  [2.02;2.02]
		 Successful, latency: 2.02
	SHRD32rrCL(2(Class<GR32>) -> 0(Class<GR32>))  [2.02;2.02]
		 Successful, latency: 2.02
	SHRD32rrCL(1(Class<GR32>) -> impl(Reg<EFLAGS>))  [34.5;34.6]
		Dependencies:
			ADC32ri8(impl(Reg<EFLAGS>) -> 0(Class<GR32>)) 
			ADC32ri(1(Class<GR32>) -> impl(Reg<EFLAGS>)) 
		Combined result: 35.6 cycles
	SHRD32rrCL(2(Class<GR32>) -> impl(Reg<EFLAGS>))  [34.6;34.6]
		Dependencies:
			ADC32ri8(impl(Reg<EFLAGS>) -> 0(Class<GR32>)) 
			ADC32ri(1(Class<GR32>) -> impl(Reg<EFLAGS>)) 
		Combined result: 35.7 cycles

-----SHRD32rrCL_EVEX-----
	SHRD32rrCL_EVEX(1(Class<GR32>) -> 0(Class<GR32>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	SHRD32rrCL_EVEX(2(Class<GR32>) -> 0(Class<GR32>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----SHRD32rrCL_ND-----
	SHRD32rrCL_ND(1(Class<GR32>) -> 0(Class<GR32>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	SHRD32rrCL_ND(2(Class<GR32>) -> 0(Class<GR32>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----SHRD32rrCL_NF-----
	SHRD32rrCL_NF(1(Class<GR32>) -> 0(Class<GR32>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	SHRD32rrCL_NF(2(Class<GR32>) -> 0(Class<GR32>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----SHRD32rrCL_NF_ND-----
	SHRD32rrCL_NF_ND(1(Class<GR32>) -> 0(Class<GR32>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	SHRD32rrCL_NF_ND(2(Class<GR32>) -> 0(Class<GR32>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----SHRD32rri8-----
	SHRD32rri8(1(Class<GR32>) -> 0(Class<GR32>))  [2.03;2.03]
		 Successful, latency: 2.03
	SHRD32rri8(2(Class<GR32>) -> 0(Class<GR32>))  [2.02;2.02]
		 Successful, latency: 2.02
	SHRD32rri8(1(Class<GR32>) -> impl(Reg<EFLAGS>))  [0.995;1.01]
		Dependencies:
			ADC32ri8(impl(Reg<EFLAGS>) -> 0(Class<GR32>)) 
			ADC32ri(1(Class<GR32>) -> impl(Reg<EFLAGS>)) 
		Combined result: 2.02 cycles
	SHRD32rri8(2(Class<GR32>) -> impl(Reg<EFLAGS>))  [ERROR_UNUSUAL_LATENCY]
		Dependencies:
			ADC32ri8(impl(Reg<EFLAGS>) -> 0(Class<GR32>)) 
			ADC32ri(1(Class<GR32>) -> impl(Reg<EFLAGS>)) 
		Combined result: 2.15 cycles

-----SHRD32rri8_EVEX-----
	SHRD32rri8_EVEX(1(Class<GR32>) -> 0(Class<GR32>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	SHRD32rri8_EVEX(2(Class<GR32>) -> 0(Class<GR32>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----SHRD32rri8_ND-----
	SHRD32rri8_ND(1(Class<GR32>) -> 0(Class<GR32>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	SHRD32rri8_ND(2(Class<GR32>) -> 0(Class<GR32>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----SHRD32rri8_NF-----
	SHRD32rri8_NF(1(Class<GR32>) -> 0(Class<GR32>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	SHRD32rri8_NF(2(Class<GR32>) -> 0(Class<GR32>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----SHRD32rri8_NF_ND-----
	SHRD32rri8_NF_ND(1(Class<GR32>) -> 0(Class<GR32>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	SHRD32rri8_NF_ND(2(Class<GR32>) -> 0(Class<GR32>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----SHRD64rrCL-----
	SHRD64rrCL(1(Class<GR64>) -> 0(Class<GR64>))  [2.06;2.06]
		 Successful, latency: 2.06
	SHRD64rrCL(2(Class<GR64>) -> 0(Class<GR64>))  [2.02;2.02]
		 Successful, latency: 2.02
	SHRD64rrCL(1(Class<GR64>) -> impl(Reg<EFLAGS>))  [1;1.02]
		Dependencies:
			ADC64rr(impl(Reg<EFLAGS>) -> 0(Class<GR64>)) 
			ADC64ri32(1(Class<GR64>) -> impl(Reg<EFLAGS>)) 
		Combined result: 2.01 cycles
	SHRD64rrCL(2(Class<GR64>) -> impl(Reg<EFLAGS>))  [ERROR_UNUSUAL_LATENCY]
		Dependencies:
			ADC64rr(impl(Reg<EFLAGS>) -> 0(Class<GR64>)) 
			ADC64ri32(1(Class<GR64>) -> impl(Reg<EFLAGS>)) 
		Combined result: 2.15 cycles

-----SHRD64rrCL_EVEX-----
	SHRD64rrCL_EVEX(1(Class<GR64>) -> 0(Class<GR64>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	SHRD64rrCL_EVEX(2(Class<GR64>) -> 0(Class<GR64>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----SHRD64rrCL_ND-----
	SHRD64rrCL_ND(1(Class<GR64>) -> 0(Class<GR64>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	SHRD64rrCL_ND(2(Class<GR64>) -> 0(Class<GR64>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----SHRD64rrCL_NF-----
	SHRD64rrCL_NF(1(Class<GR64>) -> 0(Class<GR64>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	SHRD64rrCL_NF(2(Class<GR64>) -> 0(Class<GR64>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----SHRD64rrCL_NF_ND-----
	SHRD64rrCL_NF_ND(1(Class<GR64>) -> 0(Class<GR64>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	SHRD64rrCL_NF_ND(2(Class<GR64>) -> 0(Class<GR64>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----SHRD64rri8-----
	SHRD64rri8(1(Class<GR64>) -> 0(Class<GR64>))  [2.02;2.02]
		 Successful, latency: 2.02
	SHRD64rri8(2(Class<GR64>) -> 0(Class<GR64>))  [2.02;2.02]
		 Successful, latency: 2.02
	SHRD64rri8(1(Class<GR64>) -> impl(Reg<EFLAGS>))  [1;1.02]
		Dependencies:
			ADC64rr(impl(Reg<EFLAGS>) -> 0(Class<GR64>)) 
			ADC64ri32(1(Class<GR64>) -> impl(Reg<EFLAGS>)) 
		Combined result: 2.01 cycles
	SHRD64rri8(2(Class<GR64>) -> impl(Reg<EFLAGS>))  [ERROR_UNUSUAL_LATENCY]
		Dependencies:
			ADC64rr(impl(Reg<EFLAGS>) -> 0(Class<GR64>)) 
			ADC64ri32(1(Class<GR64>) -> impl(Reg<EFLAGS>)) 
		Combined result: 2.17 cycles

-----SHRD64rri8_EVEX-----
	SHRD64rri8_EVEX(1(Class<GR64>) -> 0(Class<GR64>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	SHRD64rri8_EVEX(2(Class<GR64>) -> 0(Class<GR64>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----SHRD64rri8_ND-----
	SHRD64rri8_ND(1(Class<GR64>) -> 0(Class<GR64>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	SHRD64rri8_ND(2(Class<GR64>) -> 0(Class<GR64>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----SHRD64rri8_NF-----
	SHRD64rri8_NF(1(Class<GR64>) -> 0(Class<GR64>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	SHRD64rri8_NF(2(Class<GR64>) -> 0(Class<GR64>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----SHRD64rri8_NF_ND-----
	SHRD64rri8_NF_ND(1(Class<GR64>) -> 0(Class<GR64>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	SHRD64rri8_NF_ND(2(Class<GR64>) -> 0(Class<GR64>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----SHRX32rr-----
	SHRX32rr(1(Class<GR32>) -> 0(Class<GR32>))  [1.01;1.01]
		 Successful, latency: 1.01
	SHRX32rr(2(Class<GR32>) -> 0(Class<GR32>))  [1.01;1.01]
		 Successful, latency: 1.01

-----SHRX32rr_EVEX-----
	SHRX32rr_EVEX(1(Class<GR32>) -> 0(Class<GR32>))  [1;1]
		 Successful, latency: 1
	SHRX32rr_EVEX(2(Class<GR32>) -> 0(Class<GR32>))  [1.01;1.01]
		 Successful, latency: 1.01

-----SHRX64rr-----
	SHRX64rr(1(Class<GR64>) -> 0(Class<GR64>))  [1;1]
		 Successful, latency: 1
	SHRX64rr(2(Class<GR64>) -> 0(Class<GR64>))  [1;1]
		 Successful, latency: 1

-----SHRX64rr_EVEX-----
	SHRX64rr_EVEX(1(Class<GR64>) -> 0(Class<GR64>))  [1.01;1.01]
		 Successful, latency: 1.01
	SHRX64rr_EVEX(2(Class<GR64>) -> 0(Class<GR64>))  [1.02;1.02]
		 Successful, latency: 1.02

-----SHUFPDrri-----
	SHUFPDrri(1(Class<VR128>) -> 0(Class<VR128>))  [1.01;1.01]
		 Successful, latency: 1.01
	SHUFPDrri(2(Class<VR128>) -> 0(Class<VR128>))  [1.02;1.02]
		 Successful, latency: 1.02

-----SHUFPSrri-----
	SHUFPSrri(1(Class<VR128>) -> 0(Class<VR128>))  [1.01;1.01]
		 Successful, latency: 1.01
	SHUFPSrri(2(Class<VR128>) -> 0(Class<VR128>))  [1;1]
		 Successful, latency: 1

-----SQRTPDr-----
	SQRTPDr(1(Class<VR128>) -> 0(Class<VR128>))  [21.1;21.1]
		 Successful, latency: 21.1

-----SQRTPSr-----
	SQRTPSr(1(Class<VR128>) -> 0(Class<VR128>))  [15.1;15.1]
		 Successful, latency: 15.1

-----SQRTSDr-----
	SQRTSDr(1(Class<FR64>) -> 0(Class<FR64>))  [21.1;21.1]
		 Successful, latency: 21.1

-----SQRTSDr_Int-----
	SQRTSDr_Int(1(Class<VR128>) -> 0(Class<VR128>))  [23.9;23.9]
		 Successful, latency: 23.9
	SQRTSDr_Int(2(Class<VR128>) -> 0(Class<VR128>))  [21.1;21.1]
		 Successful, latency: 21.1

-----SQRTSSr-----
	SQRTSSr(1(Class<FR32>) -> 0(Class<FR32>))  [15.1;15.1]
		 Successful, latency: 15.1

-----SQRTSSr_Int-----
	SQRTSSr_Int(1(Class<VR128>) -> 0(Class<VR128>))  [17.7;17.7]
		 Successful, latency: 17.7
	SQRTSSr_Int(2(Class<VR128>) -> 0(Class<VR128>))  [15.1;15.1]
		 Successful, latency: 15.1

-----STC-----
	STC(impl(Reg<EFLAGS>) -> impl(Reg<EFLAGS>))  [0.249;0.249]
		 Successful, latency: 0.249

-----STI-----
	STI(impl(Reg<EFLAGS>) -> impl(Reg<EFLAGS>))  [ERROR_SIGSEGV]
		ERROR_SIGSEGV, this instruction cannot be measured on this platform

-----STOSB-----
	STOSB(impl(Reg<EDI>) -> impl(Reg<EDI>))  [SKIP_MEMORY_OPERAND]
		SKIP_MEMORY_OPERAND, this instruction cannot be measured on this platform

-----STOSL-----
	STOSL(impl(Reg<EDI>) -> impl(Reg<EDI>))  [SKIP_MEMORY_OPERAND]
		SKIP_MEMORY_OPERAND, this instruction cannot be measured on this platform

-----STOSQ-----
	STOSQ(impl(Reg<RDI>) -> impl(Reg<RDI>))  [SKIP_MEMORY_OPERAND]
		SKIP_MEMORY_OPERAND, this instruction cannot be measured on this platform

-----STOSW-----
	STOSW(impl(Reg<EDI>) -> impl(Reg<EDI>))  [SKIP_MEMORY_OPERAND]
		SKIP_MEMORY_OPERAND, this instruction cannot be measured on this platform

-----SUB16i16-----
	SUB16i16(impl(Reg<AX>) -> impl(Reg<AX>))  [1.02;1.02]
		 Successful, latency: 1.02
	SUB16i16(impl(Reg<AX>) -> impl(Reg<EFLAGS>))  [0.989;1]
		Dependencies:
			ADC16i16(impl(Reg<EFLAGS>) -> impl(Reg<AX>)) 
			ADC16i16(impl(Reg<AX>) -> impl(Reg<EFLAGS>)) 
		Combined result: 2.02 cycles

-----SUB16ri-----
	SUB16ri(1(Class<GR16>) -> 0(Class<GR16>))  [1.02;1.02]
		 Successful, latency: 1.02
	SUB16ri(1(Class<GR16>) -> impl(Reg<EFLAGS>))  [ERROR_UNUSUAL_LATENCY]
		Dependencies:
			ADC16rr(impl(Reg<EFLAGS>) -> 0(Class<GR16>)) 
			ADC16ri(1(Class<GR16>) -> impl(Reg<EFLAGS>)) 
		Combined result: 1.01 cycles

-----SUB16ri8-----
	SUB16ri8(1(Class<GR16>) -> 0(Class<GR16>))  [1.01;1.01]
		 Successful, latency: 1.01
	SUB16ri8(1(Class<GR16>) -> impl(Reg<EFLAGS>))  [ERROR_UNUSUAL_LATENCY]
		Dependencies:
			ADC16rr(impl(Reg<EFLAGS>) -> 0(Class<GR16>)) 
			ADC16ri(1(Class<GR16>) -> impl(Reg<EFLAGS>)) 
		Combined result: 1 cycles

-----SUB16ri8_EVEX-----
	SUB16ri8_EVEX(1(Class<GR16>) -> 0(Class<GR16>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----SUB16ri8_ND-----
	SUB16ri8_ND(1(Class<GR16>) -> 0(Class<GR16>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----SUB16ri8_NF-----
	SUB16ri8_NF(1(Class<GR16>) -> 0(Class<GR16>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----SUB16ri8_NF_ND-----
	SUB16ri8_NF_ND(1(Class<GR16>) -> 0(Class<GR16>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----SUB16ri_EVEX-----
	SUB16ri_EVEX(1(Class<GR16>) -> 0(Class<GR16>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----SUB16ri_ND-----
	SUB16ri_ND(1(Class<GR16>) -> 0(Class<GR16>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----SUB16ri_NF-----
	SUB16ri_NF(1(Class<GR16>) -> 0(Class<GR16>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----SUB16ri_NF_ND-----
	SUB16ri_NF_ND(1(Class<GR16>) -> 0(Class<GR16>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----SUB16rr-----
	SUB16rr(1(Class<GR16>) -> 0(Class<GR16>))  [1.01;1.01]
		 Successful, latency: 1.01
	SUB16rr(2(Class<GR16>) -> 0(Class<GR16>))  [1.01;1.01]
		 Successful, latency: 1.01
	SUB16rr(1(Class<GR16>) -> impl(Reg<EFLAGS>))  [ERROR_UNUSUAL_LATENCY]
		Dependencies:
			ADC16rr(impl(Reg<EFLAGS>) -> 0(Class<GR16>)) 
			ADC16ri(1(Class<GR16>) -> impl(Reg<EFLAGS>)) 
		Combined result: 1 cycles
	SUB16rr(2(Class<GR16>) -> impl(Reg<EFLAGS>))  [0.998;1.02]
		Dependencies:
			ADC16rr(impl(Reg<EFLAGS>) -> 0(Class<GR16>)) 
			ADC16ri(1(Class<GR16>) -> impl(Reg<EFLAGS>)) 
		Combined result: 2.01 cycles

-----SUB16rr_EVEX-----
	SUB16rr_EVEX(1(Class<GR16>) -> 0(Class<GR16>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	SUB16rr_EVEX(2(Class<GR16>) -> 0(Class<GR16>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----SUB16rr_EVEX_REV-----
	SUB16rr_EVEX_REV(1(Class<GR16>) -> 0(Class<GR16>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	SUB16rr_EVEX_REV(2(Class<GR16>) -> 0(Class<GR16>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----SUB16rr_ND-----
	SUB16rr_ND(1(Class<GR16>) -> 0(Class<GR16>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	SUB16rr_ND(2(Class<GR16>) -> 0(Class<GR16>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----SUB16rr_ND_REV-----
	SUB16rr_ND_REV(1(Class<GR16>) -> 0(Class<GR16>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	SUB16rr_ND_REV(2(Class<GR16>) -> 0(Class<GR16>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----SUB16rr_NF-----
	SUB16rr_NF(1(Class<GR16>) -> 0(Class<GR16>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	SUB16rr_NF(2(Class<GR16>) -> 0(Class<GR16>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----SUB16rr_NF_ND-----
	SUB16rr_NF_ND(1(Class<GR16>) -> 0(Class<GR16>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	SUB16rr_NF_ND(2(Class<GR16>) -> 0(Class<GR16>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----SUB16rr_NF_ND_REV-----
	SUB16rr_NF_ND_REV(1(Class<GR16>) -> 0(Class<GR16>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	SUB16rr_NF_ND_REV(2(Class<GR16>) -> 0(Class<GR16>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----SUB16rr_NF_REV-----
	SUB16rr_NF_REV(1(Class<GR16>) -> 0(Class<GR16>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	SUB16rr_NF_REV(2(Class<GR16>) -> 0(Class<GR16>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----SUB16rr_REV-----
	SUB16rr_REV(1(Class<GR16>) -> 0(Class<GR16>))  [1.01;1.01]
		 Successful, latency: 1.01
	SUB16rr_REV(2(Class<GR16>) -> 0(Class<GR16>))  [1.01;1.01]
		 Successful, latency: 1.01
	SUB16rr_REV(1(Class<GR16>) -> impl(Reg<EFLAGS>))  [ERROR_UNUSUAL_LATENCY]
		Dependencies:
			ADC16rr(impl(Reg<EFLAGS>) -> 0(Class<GR16>)) 
			ADC16ri(1(Class<GR16>) -> impl(Reg<EFLAGS>)) 
		Combined result: 1 cycles
	SUB16rr_REV(2(Class<GR16>) -> impl(Reg<EFLAGS>))  [1.02;1.03]
		Dependencies:
			ADC16rr(impl(Reg<EFLAGS>) -> 0(Class<GR16>)) 
			ADC16ri(1(Class<GR16>) -> impl(Reg<EFLAGS>)) 
		Combined result: 2.03 cycles

-----SUB32i32-----
	SUB32i32(impl(Reg<EAX>) -> impl(Reg<EAX>))  [1.02;1.02]
		 Successful, latency: 1.02
	SUB32i32(impl(Reg<EAX>) -> impl(Reg<EFLAGS>))  [1.01;1.03]
		Dependencies:
			ADC32i32(impl(Reg<EFLAGS>) -> impl(Reg<EAX>)) 
			ADC32i32(impl(Reg<EAX>) -> impl(Reg<EFLAGS>)) 
		Combined result: 2.03 cycles

-----SUB32ri-----
	SUB32ri(1(Class<GR32>) -> 0(Class<GR32>))  [1;1]
		 Successful, latency: 1
	SUB32ri(1(Class<GR32>) -> impl(Reg<EFLAGS>))  [ERROR_UNUSUAL_LATENCY]
		Dependencies:
			ADC32ri8(impl(Reg<EFLAGS>) -> 0(Class<GR32>)) 
			ADC32ri(1(Class<GR32>) -> impl(Reg<EFLAGS>)) 
		Combined result: 1.01 cycles

-----SUB32ri8-----
	SUB32ri8(1(Class<GR32>) -> 0(Class<GR32>))  [1.01;1.01]
		 Successful, latency: 1.01
	SUB32ri8(1(Class<GR32>) -> impl(Reg<EFLAGS>))  [ERROR_UNUSUAL_LATENCY]
		Dependencies:
			ADC32ri8(impl(Reg<EFLAGS>) -> 0(Class<GR32>)) 
			ADC32ri(1(Class<GR32>) -> impl(Reg<EFLAGS>)) 
		Combined result: 1.01 cycles

-----SUB32ri8_EVEX-----
	SUB32ri8_EVEX(1(Class<GR32>) -> 0(Class<GR32>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----SUB32ri8_ND-----
	SUB32ri8_ND(1(Class<GR32>) -> 0(Class<GR32>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----SUB32ri8_NF-----
	SUB32ri8_NF(1(Class<GR32>) -> 0(Class<GR32>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----SUB32ri8_NF_ND-----
	SUB32ri8_NF_ND(1(Class<GR32>) -> 0(Class<GR32>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----SUB32ri_EVEX-----
	SUB32ri_EVEX(1(Class<GR32>) -> 0(Class<GR32>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----SUB32ri_ND-----
	SUB32ri_ND(1(Class<GR32>) -> 0(Class<GR32>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----SUB32ri_NF-----
	SUB32ri_NF(1(Class<GR32>) -> 0(Class<GR32>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----SUB32ri_NF_ND-----
	SUB32ri_NF_ND(1(Class<GR32>) -> 0(Class<GR32>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----SUB32rr-----
	SUB32rr(1(Class<GR32>) -> 0(Class<GR32>))  [1.01;1.01]
		 Successful, latency: 1.01
	SUB32rr(2(Class<GR32>) -> 0(Class<GR32>))  [0.168;0.168]
		 Successful, latency: 0.168
	SUB32rr(1(Class<GR32>) -> impl(Reg<EFLAGS>))  [ERROR_UNUSUAL_LATENCY]
		Dependencies:
			ADC32ri8(impl(Reg<EFLAGS>) -> 0(Class<GR32>)) 
			ADC32ri(1(Class<GR32>) -> impl(Reg<EFLAGS>)) 
		Combined result: 1.01 cycles
	SUB32rr(2(Class<GR32>) -> impl(Reg<EFLAGS>))  [0.994;1.01]
		Dependencies:
			ADC32ri8(impl(Reg<EFLAGS>) -> 0(Class<GR32>)) 
			ADC32ri(1(Class<GR32>) -> impl(Reg<EFLAGS>)) 
		Combined result: 2.02 cycles

-----SUB32rr_EVEX-----
	SUB32rr_EVEX(1(Class<GR32>) -> 0(Class<GR32>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	SUB32rr_EVEX(2(Class<GR32>) -> 0(Class<GR32>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----SUB32rr_EVEX_REV-----
	SUB32rr_EVEX_REV(1(Class<GR32>) -> 0(Class<GR32>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	SUB32rr_EVEX_REV(2(Class<GR32>) -> 0(Class<GR32>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----SUB32rr_ND-----
	SUB32rr_ND(1(Class<GR32>) -> 0(Class<GR32>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	SUB32rr_ND(2(Class<GR32>) -> 0(Class<GR32>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----SUB32rr_ND_REV-----
	SUB32rr_ND_REV(1(Class<GR32>) -> 0(Class<GR32>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	SUB32rr_ND_REV(2(Class<GR32>) -> 0(Class<GR32>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----SUB32rr_NF-----
	SUB32rr_NF(1(Class<GR32>) -> 0(Class<GR32>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	SUB32rr_NF(2(Class<GR32>) -> 0(Class<GR32>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----SUB32rr_NF_ND-----
	SUB32rr_NF_ND(1(Class<GR32>) -> 0(Class<GR32>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	SUB32rr_NF_ND(2(Class<GR32>) -> 0(Class<GR32>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----SUB32rr_NF_ND_REV-----
	SUB32rr_NF_ND_REV(1(Class<GR32>) -> 0(Class<GR32>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	SUB32rr_NF_ND_REV(2(Class<GR32>) -> 0(Class<GR32>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----SUB32rr_NF_REV-----
	SUB32rr_NF_REV(1(Class<GR32>) -> 0(Class<GR32>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	SUB32rr_NF_REV(2(Class<GR32>) -> 0(Class<GR32>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----SUB32rr_REV-----
	SUB32rr_REV(1(Class<GR32>) -> 0(Class<GR32>))  [1.01;1.01]
		 Successful, latency: 1.01
	SUB32rr_REV(2(Class<GR32>) -> 0(Class<GR32>))  [0.166;0.166]
		 Successful, latency: 0.166
	SUB32rr_REV(1(Class<GR32>) -> impl(Reg<EFLAGS>))  [ERROR_UNUSUAL_LATENCY]
		Dependencies:
			ADC32ri8(impl(Reg<EFLAGS>) -> 0(Class<GR32>)) 
			ADC32ri(1(Class<GR32>) -> impl(Reg<EFLAGS>)) 
		Combined result: 0.999 cycles
	SUB32rr_REV(2(Class<GR32>) -> impl(Reg<EFLAGS>))  [1;1.02]
		Dependencies:
			ADC32ri8(impl(Reg<EFLAGS>) -> 0(Class<GR32>)) 
			ADC32ri(1(Class<GR32>) -> impl(Reg<EFLAGS>)) 
		Combined result: 2.03 cycles

-----SUB64i32-----
	SUB64i32(impl(Reg<RAX>) -> impl(Reg<RAX>))  [1.02;1.02]
		 Successful, latency: 1.02
	SUB64i32(impl(Reg<RAX>) -> impl(Reg<EFLAGS>))  [0.999;1.02]
		Dependencies:
			CMP64i32(impl(Reg<RAX>) -> impl(Reg<EFLAGS>)) 
			ADC64i32(impl(Reg<EFLAGS>) -> impl(Reg<RAX>)) 
		Combined result: 2.02 cycles

-----SUB64ri32-----
	SUB64ri32(1(Class<GR64>) -> 0(Class<GR64>))  [1;1]
		 Successful, latency: 1
	SUB64ri32(1(Class<GR64>) -> impl(Reg<EFLAGS>))  [ERROR_UNUSUAL_LATENCY]
		Dependencies:
			ADC64rr(impl(Reg<EFLAGS>) -> 0(Class<GR64>)) 
			ADC64ri32(1(Class<GR64>) -> impl(Reg<EFLAGS>)) 
		Combined result: 0.998 cycles

-----SUB64ri32_EVEX-----
	SUB64ri32_EVEX(1(Class<GR64>) -> 0(Class<GR64>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----SUB64ri32_ND-----
	SUB64ri32_ND(1(Class<GR64>) -> 0(Class<GR64>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----SUB64ri32_NF-----
	SUB64ri32_NF(1(Class<GR64>) -> 0(Class<GR64>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----SUB64ri32_NF_ND-----
	SUB64ri32_NF_ND(1(Class<GR64>) -> 0(Class<GR64>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----SUB64ri8-----
	SUB64ri8(1(Class<GR64>) -> 0(Class<GR64>))  [1.01;1.01]
		 Successful, latency: 1.01
	SUB64ri8(1(Class<GR64>) -> impl(Reg<EFLAGS>))  [ERROR_UNUSUAL_LATENCY]
		Dependencies:
			ADC64rr(impl(Reg<EFLAGS>) -> 0(Class<GR64>)) 
			ADC64ri32(1(Class<GR64>) -> impl(Reg<EFLAGS>)) 
		Combined result: 1 cycles

-----SUB64ri8_EVEX-----
	SUB64ri8_EVEX(1(Class<GR64>) -> 0(Class<GR64>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----SUB64ri8_ND-----
	SUB64ri8_ND(1(Class<GR64>) -> 0(Class<GR64>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----SUB64ri8_NF-----
	SUB64ri8_NF(1(Class<GR64>) -> 0(Class<GR64>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----SUB64ri8_NF_ND-----
	SUB64ri8_NF_ND(1(Class<GR64>) -> 0(Class<GR64>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----SUB64rr-----
	SUB64rr(1(Class<GR64>) -> 0(Class<GR64>))  [1.01;1.01]
		 Successful, latency: 1.01
	SUB64rr(2(Class<GR64>) -> 0(Class<GR64>))  [0.168;0.168]
		 Successful, latency: 0.168
	SUB64rr(1(Class<GR64>) -> impl(Reg<EFLAGS>))  [ERROR_UNUSUAL_LATENCY]
		Dependencies:
			ADC64rr(impl(Reg<EFLAGS>) -> 0(Class<GR64>)) 
			ADC64ri32(1(Class<GR64>) -> impl(Reg<EFLAGS>)) 
		Combined result: 1.01 cycles
	SUB64rr(2(Class<GR64>) -> impl(Reg<EFLAGS>))  [1.01;1.03]
		Dependencies:
			ADC64rr(impl(Reg<EFLAGS>) -> 0(Class<GR64>)) 
			ADC64ri32(1(Class<GR64>) -> impl(Reg<EFLAGS>)) 
		Combined result: 2.02 cycles

-----SUB64rr_EVEX-----
	SUB64rr_EVEX(1(Class<GR64>) -> 0(Class<GR64>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	SUB64rr_EVEX(2(Class<GR64>) -> 0(Class<GR64>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----SUB64rr_EVEX_REV-----
	SUB64rr_EVEX_REV(1(Class<GR64>) -> 0(Class<GR64>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	SUB64rr_EVEX_REV(2(Class<GR64>) -> 0(Class<GR64>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----SUB64rr_ND-----
	SUB64rr_ND(1(Class<GR64>) -> 0(Class<GR64>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	SUB64rr_ND(2(Class<GR64>) -> 0(Class<GR64>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----SUB64rr_ND_REV-----
	SUB64rr_ND_REV(1(Class<GR64>) -> 0(Class<GR64>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	SUB64rr_ND_REV(2(Class<GR64>) -> 0(Class<GR64>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----SUB64rr_NF-----
	SUB64rr_NF(1(Class<GR64>) -> 0(Class<GR64>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	SUB64rr_NF(2(Class<GR64>) -> 0(Class<GR64>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----SUB64rr_NF_ND-----
	SUB64rr_NF_ND(1(Class<GR64>) -> 0(Class<GR64>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	SUB64rr_NF_ND(2(Class<GR64>) -> 0(Class<GR64>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----SUB64rr_NF_ND_REV-----
	SUB64rr_NF_ND_REV(1(Class<GR64>) -> 0(Class<GR64>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	SUB64rr_NF_ND_REV(2(Class<GR64>) -> 0(Class<GR64>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----SUB64rr_NF_REV-----
	SUB64rr_NF_REV(1(Class<GR64>) -> 0(Class<GR64>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	SUB64rr_NF_REV(2(Class<GR64>) -> 0(Class<GR64>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----SUB64rr_REV-----
	SUB64rr_REV(1(Class<GR64>) -> 0(Class<GR64>))  [1.01;1.01]
		 Successful, latency: 1.01
	SUB64rr_REV(2(Class<GR64>) -> 0(Class<GR64>))  [0.168;0.168]
		 Successful, latency: 0.168
	SUB64rr_REV(1(Class<GR64>) -> impl(Reg<EFLAGS>))  [ERROR_UNUSUAL_LATENCY]
		Dependencies:
			ADC64rr(impl(Reg<EFLAGS>) -> 0(Class<GR64>)) 
			ADC64ri32(1(Class<GR64>) -> impl(Reg<EFLAGS>)) 
		Combined result: 1 cycles
	SUB64rr_REV(2(Class<GR64>) -> impl(Reg<EFLAGS>))  [1.01;1.03]
		Dependencies:
			ADC64rr(impl(Reg<EFLAGS>) -> 0(Class<GR64>)) 
			ADC64ri32(1(Class<GR64>) -> impl(Reg<EFLAGS>)) 
		Combined result: 2.02 cycles

-----SUB8i8-----
	SUB8i8(impl(Reg<AL>) -> impl(Reg<AL>))  [1.01;1.01]
		 Successful, latency: 1.01
	SUB8i8(impl(Reg<AL>) -> impl(Reg<EFLAGS>))  [1;1.02]
		Dependencies:
			ADC8i8(impl(Reg<EFLAGS>) -> impl(Reg<AL>)) 
			CMP8i8(impl(Reg<AL>) -> impl(Reg<EFLAGS>)) 
		Combined result: 2.02 cycles

-----SUB8ri-----
	SUB8ri(1(Class<GR8>) -> 0(Class<GR8>))  [1.02;1.02]
		 Successful, latency: 1.02
	SUB8ri(1(Class<GR8>) -> impl(Reg<EFLAGS>))  [ERROR_UNUSUAL_LATENCY]
		Dependencies:
			ADC8ri8(impl(Reg<EFLAGS>) -> 0(Class<GR8>)) 
			ADC8ri(1(Class<GR8>) -> impl(Reg<EFLAGS>)) 
		Combined result: 1.01 cycles

-----SUB8ri8-----
	SUB8ri8(1(Class<GR8>) -> 0(Class<GR8>))  [0.998;0.998]
		 Successful, latency: 0.998
	SUB8ri8(1(Class<GR8>) -> impl(Reg<EFLAGS>))  [ERROR_UNUSUAL_LATENCY]
		Dependencies:
			ADC8ri8(impl(Reg<EFLAGS>) -> 0(Class<GR8>)) 
			ADC8ri(1(Class<GR8>) -> impl(Reg<EFLAGS>)) 
		Combined result: 1.01 cycles

-----SUB8ri_EVEX-----
	SUB8ri_EVEX(1(Class<GR8>) -> 0(Class<GR8>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----SUB8ri_ND-----
	SUB8ri_ND(1(Class<GR8>) -> 0(Class<GR8>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----SUB8ri_NF-----
	SUB8ri_NF(1(Class<GR8>) -> 0(Class<GR8>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----SUB8ri_NF_ND-----
	SUB8ri_NF_ND(1(Class<GR8>) -> 0(Class<GR8>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----SUB8rr-----
	SUB8rr(1(Class<GR8>) -> 0(Class<GR8>))  [1.01;1.01]
		 Successful, latency: 1.01
	SUB8rr(2(Class<GR8>) -> 0(Class<GR8>))  [1.01;1.01]
		 Successful, latency: 1.01
	SUB8rr(1(Class<GR8>) -> impl(Reg<EFLAGS>))  [ERROR_UNUSUAL_LATENCY]
		Dependencies:
			ADC8ri8(impl(Reg<EFLAGS>) -> 0(Class<GR8>)) 
			ADC8ri(1(Class<GR8>) -> impl(Reg<EFLAGS>)) 
		Combined result: 1.01 cycles
	SUB8rr(2(Class<GR8>) -> impl(Reg<EFLAGS>))  [1.01;1.03]
		Dependencies:
			ADC8ri8(impl(Reg<EFLAGS>) -> 0(Class<GR8>)) 
			ADC8ri(1(Class<GR8>) -> impl(Reg<EFLAGS>)) 
		Combined result: 2.03 cycles

-----SUB8rr_EVEX-----
	SUB8rr_EVEX(1(Class<GR8>) -> 0(Class<GR8>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	SUB8rr_EVEX(2(Class<GR8>) -> 0(Class<GR8>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----SUB8rr_EVEX_REV-----
	SUB8rr_EVEX_REV(1(Class<GR8>) -> 0(Class<GR8>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	SUB8rr_EVEX_REV(2(Class<GR8>) -> 0(Class<GR8>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----SUB8rr_ND-----
	SUB8rr_ND(1(Class<GR8>) -> 0(Class<GR8>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	SUB8rr_ND(2(Class<GR8>) -> 0(Class<GR8>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----SUB8rr_ND_REV-----
	SUB8rr_ND_REV(1(Class<GR8>) -> 0(Class<GR8>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	SUB8rr_ND_REV(2(Class<GR8>) -> 0(Class<GR8>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----SUB8rr_NF-----
	SUB8rr_NF(1(Class<GR8>) -> 0(Class<GR8>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	SUB8rr_NF(2(Class<GR8>) -> 0(Class<GR8>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----SUB8rr_NF_ND-----
	SUB8rr_NF_ND(1(Class<GR8>) -> 0(Class<GR8>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	SUB8rr_NF_ND(2(Class<GR8>) -> 0(Class<GR8>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----SUB8rr_NF_ND_REV-----
	SUB8rr_NF_ND_REV(1(Class<GR8>) -> 0(Class<GR8>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	SUB8rr_NF_ND_REV(2(Class<GR8>) -> 0(Class<GR8>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----SUB8rr_NF_REV-----
	SUB8rr_NF_REV(1(Class<GR8>) -> 0(Class<GR8>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	SUB8rr_NF_REV(2(Class<GR8>) -> 0(Class<GR8>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----SUB8rr_REV-----
	SUB8rr_REV(1(Class<GR8>) -> 0(Class<GR8>))  [1.03;1.03]
		 Successful, latency: 1.03
	SUB8rr_REV(2(Class<GR8>) -> 0(Class<GR8>))  [1.01;1.01]
		 Successful, latency: 1.01
	SUB8rr_REV(1(Class<GR8>) -> impl(Reg<EFLAGS>))  [ERROR_UNUSUAL_LATENCY]
		Dependencies:
			ADC8ri8(impl(Reg<EFLAGS>) -> 0(Class<GR8>)) 
			ADC8ri(1(Class<GR8>) -> impl(Reg<EFLAGS>)) 
		Combined result: 1.01 cycles
	SUB8rr_REV(2(Class<GR8>) -> impl(Reg<EFLAGS>))  [1.01;1.02]
		Dependencies:
			ADC8ri8(impl(Reg<EFLAGS>) -> 0(Class<GR8>)) 
			ADC8ri(1(Class<GR8>) -> impl(Reg<EFLAGS>)) 
		Combined result: 2.02 cycles

-----SUBPDrr-----
	SUBPDrr(1(Class<VR128>) -> 0(Class<VR128>))  [3.04;3.04]
		 Successful, latency: 3.04
	SUBPDrr(2(Class<VR128>) -> 0(Class<VR128>))  [3.02;3.02]
		 Successful, latency: 3.02

-----SUBPSrr-----
	SUBPSrr(1(Class<VR128>) -> 0(Class<VR128>))  [3.05;3.05]
		 Successful, latency: 3.05
	SUBPSrr(2(Class<VR128>) -> 0(Class<VR128>))  [3.03;3.03]
		 Successful, latency: 3.03

-----SUBSDrr-----
	SUBSDrr(1(Class<FR64>) -> 0(Class<FR64>))  [3.03;3.03]
		 Successful, latency: 3.03
	SUBSDrr(2(Class<FR64>) -> 0(Class<FR64>))  [3.06;3.06]
		 Successful, latency: 3.06

-----SUBSDrr_Int-----
	SUBSDrr_Int(1(Class<VR128>) -> 0(Class<VR128>))  [3.03;3.03]
		 Successful, latency: 3.03
	SUBSDrr_Int(2(Class<VR128>) -> 0(Class<VR128>))  [3.06;3.06]
		 Successful, latency: 3.06

-----SUBSSrr-----
	SUBSSrr(1(Class<FR32>) -> 0(Class<FR32>))  [3.03;3.03]
		 Successful, latency: 3.03
	SUBSSrr(2(Class<FR32>) -> 0(Class<FR32>))  [3.02;3.02]
		 Successful, latency: 3.02

-----SUBSSrr_Int-----
	SUBSSrr_Int(1(Class<VR128>) -> 0(Class<VR128>))  [3.02;3.02]
		 Successful, latency: 3.02
	SUBSSrr_Int(2(Class<VR128>) -> 0(Class<VR128>))  [3.02;3.02]
		 Successful, latency: 3.02

-----T1MSKC32rr-----
	T1MSKC32rr(1(Class<GR32>) -> 0(Class<GR32>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----T1MSKC64rr-----
	T1MSKC64rr(1(Class<GR64>) -> 0(Class<GR64>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----TCMMIMFP16PS-----
	TCMMIMFP16PS(1(Class<TILE>) -> 0(Class<TILE>))  [ERROR_NO_REGISTERS]
		ERROR_NO_REGISTERS, this instruction cannot be measured on this platform
	TCMMIMFP16PS(2(Class<TILE>) -> 0(Class<TILE>))  [ERROR_NO_REGISTERS]
		ERROR_NO_REGISTERS, this instruction cannot be measured on this platform
	TCMMIMFP16PS(3(Class<TILE>) -> 0(Class<TILE>))  [ERROR_NO_REGISTERS]
		ERROR_NO_REGISTERS, this instruction cannot be measured on this platform

-----TCMMRLFP16PS-----
	TCMMRLFP16PS(1(Class<TILE>) -> 0(Class<TILE>))  [ERROR_NO_REGISTERS]
		ERROR_NO_REGISTERS, this instruction cannot be measured on this platform
	TCMMRLFP16PS(2(Class<TILE>) -> 0(Class<TILE>))  [ERROR_NO_REGISTERS]
		ERROR_NO_REGISTERS, this instruction cannot be measured on this platform
	TCMMRLFP16PS(3(Class<TILE>) -> 0(Class<TILE>))  [ERROR_NO_REGISTERS]
		ERROR_NO_REGISTERS, this instruction cannot be measured on this platform

-----TCONJTCMMIMFP16PS-----
	TCONJTCMMIMFP16PS(1(Class<TILE>) -> 0(Class<TILE>))  [ERROR_NO_REGISTERS]
		ERROR_NO_REGISTERS, this instruction cannot be measured on this platform
	TCONJTCMMIMFP16PS(2(Class<TILE>) -> 0(Class<TILE>))  [ERROR_NO_REGISTERS]
		ERROR_NO_REGISTERS, this instruction cannot be measured on this platform
	TCONJTCMMIMFP16PS(3(Class<TILE>) -> 0(Class<TILE>))  [ERROR_NO_REGISTERS]
		ERROR_NO_REGISTERS, this instruction cannot be measured on this platform

-----TCONJTFP16-----
	TCONJTFP16(1(Class<TILE>) -> 0(Class<TILE>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----TDPBF16PS-----
	TDPBF16PS(1(Class<TILE>) -> 0(Class<TILE>))  [ERROR_NO_REGISTERS]
		ERROR_NO_REGISTERS, this instruction cannot be measured on this platform
	TDPBF16PS(2(Class<TILE>) -> 0(Class<TILE>))  [ERROR_NO_REGISTERS]
		ERROR_NO_REGISTERS, this instruction cannot be measured on this platform
	TDPBF16PS(3(Class<TILE>) -> 0(Class<TILE>))  [ERROR_NO_REGISTERS]
		ERROR_NO_REGISTERS, this instruction cannot be measured on this platform

-----TDPBF8PS-----
	TDPBF8PS(1(Class<TILE>) -> 0(Class<TILE>))  [ERROR_NO_REGISTERS]
		ERROR_NO_REGISTERS, this instruction cannot be measured on this platform
	TDPBF8PS(2(Class<TILE>) -> 0(Class<TILE>))  [ERROR_NO_REGISTERS]
		ERROR_NO_REGISTERS, this instruction cannot be measured on this platform
	TDPBF8PS(3(Class<TILE>) -> 0(Class<TILE>))  [ERROR_NO_REGISTERS]
		ERROR_NO_REGISTERS, this instruction cannot be measured on this platform

-----TDPBHF8PS-----
	TDPBHF8PS(1(Class<TILE>) -> 0(Class<TILE>))  [ERROR_NO_REGISTERS]
		ERROR_NO_REGISTERS, this instruction cannot be measured on this platform
	TDPBHF8PS(2(Class<TILE>) -> 0(Class<TILE>))  [ERROR_NO_REGISTERS]
		ERROR_NO_REGISTERS, this instruction cannot be measured on this platform
	TDPBHF8PS(3(Class<TILE>) -> 0(Class<TILE>))  [ERROR_NO_REGISTERS]
		ERROR_NO_REGISTERS, this instruction cannot be measured on this platform

-----TDPBSSD-----
	TDPBSSD(1(Class<TILE>) -> 0(Class<TILE>))  [ERROR_NO_REGISTERS]
		ERROR_NO_REGISTERS, this instruction cannot be measured on this platform
	TDPBSSD(2(Class<TILE>) -> 0(Class<TILE>))  [ERROR_NO_REGISTERS]
		ERROR_NO_REGISTERS, this instruction cannot be measured on this platform
	TDPBSSD(3(Class<TILE>) -> 0(Class<TILE>))  [ERROR_NO_REGISTERS]
		ERROR_NO_REGISTERS, this instruction cannot be measured on this platform

-----TDPBSUD-----
	TDPBSUD(1(Class<TILE>) -> 0(Class<TILE>))  [ERROR_NO_REGISTERS]
		ERROR_NO_REGISTERS, this instruction cannot be measured on this platform
	TDPBSUD(2(Class<TILE>) -> 0(Class<TILE>))  [ERROR_NO_REGISTERS]
		ERROR_NO_REGISTERS, this instruction cannot be measured on this platform
	TDPBSUD(3(Class<TILE>) -> 0(Class<TILE>))  [ERROR_NO_REGISTERS]
		ERROR_NO_REGISTERS, this instruction cannot be measured on this platform

-----TDPBUSD-----
	TDPBUSD(1(Class<TILE>) -> 0(Class<TILE>))  [ERROR_NO_REGISTERS]
		ERROR_NO_REGISTERS, this instruction cannot be measured on this platform
	TDPBUSD(2(Class<TILE>) -> 0(Class<TILE>))  [ERROR_NO_REGISTERS]
		ERROR_NO_REGISTERS, this instruction cannot be measured on this platform
	TDPBUSD(3(Class<TILE>) -> 0(Class<TILE>))  [ERROR_NO_REGISTERS]
		ERROR_NO_REGISTERS, this instruction cannot be measured on this platform

-----TDPBUUD-----
	TDPBUUD(1(Class<TILE>) -> 0(Class<TILE>))  [ERROR_NO_REGISTERS]
		ERROR_NO_REGISTERS, this instruction cannot be measured on this platform
	TDPBUUD(2(Class<TILE>) -> 0(Class<TILE>))  [ERROR_NO_REGISTERS]
		ERROR_NO_REGISTERS, this instruction cannot be measured on this platform
	TDPBUUD(3(Class<TILE>) -> 0(Class<TILE>))  [ERROR_NO_REGISTERS]
		ERROR_NO_REGISTERS, this instruction cannot be measured on this platform

-----TDPFP16PS-----
	TDPFP16PS(1(Class<TILE>) -> 0(Class<TILE>))  [ERROR_NO_REGISTERS]
		ERROR_NO_REGISTERS, this instruction cannot be measured on this platform
	TDPFP16PS(2(Class<TILE>) -> 0(Class<TILE>))  [ERROR_NO_REGISTERS]
		ERROR_NO_REGISTERS, this instruction cannot be measured on this platform
	TDPFP16PS(3(Class<TILE>) -> 0(Class<TILE>))  [ERROR_NO_REGISTERS]
		ERROR_NO_REGISTERS, this instruction cannot be measured on this platform

-----TDPHBF8PS-----
	TDPHBF8PS(1(Class<TILE>) -> 0(Class<TILE>))  [ERROR_NO_REGISTERS]
		ERROR_NO_REGISTERS, this instruction cannot be measured on this platform
	TDPHBF8PS(2(Class<TILE>) -> 0(Class<TILE>))  [ERROR_NO_REGISTERS]
		ERROR_NO_REGISTERS, this instruction cannot be measured on this platform
	TDPHBF8PS(3(Class<TILE>) -> 0(Class<TILE>))  [ERROR_NO_REGISTERS]
		ERROR_NO_REGISTERS, this instruction cannot be measured on this platform

-----TDPHF8PS-----
	TDPHF8PS(1(Class<TILE>) -> 0(Class<TILE>))  [ERROR_NO_REGISTERS]
		ERROR_NO_REGISTERS, this instruction cannot be measured on this platform
	TDPHF8PS(2(Class<TILE>) -> 0(Class<TILE>))  [ERROR_NO_REGISTERS]
		ERROR_NO_REGISTERS, this instruction cannot be measured on this platform
	TDPHF8PS(3(Class<TILE>) -> 0(Class<TILE>))  [ERROR_NO_REGISTERS]
		ERROR_NO_REGISTERS, this instruction cannot be measured on this platform

-----TEST16i16-----
	TEST16i16(impl(Reg<AX>) -> impl(Reg<EFLAGS>))  [1.02;1.03]
		Dependencies:
			ADC16i16(impl(Reg<EFLAGS>) -> impl(Reg<AX>)) 
			ADC16i16(impl(Reg<AX>) -> impl(Reg<EFLAGS>)) 
		Combined result: 2.04 cycles

-----TEST16ri-----
	TEST16ri(0(Class<GR16>) -> impl(Reg<EFLAGS>))  [1.01;1.02]
		Dependencies:
			ADC16rr(impl(Reg<EFLAGS>) -> 0(Class<GR16>)) 
			ADC16ri(1(Class<GR16>) -> impl(Reg<EFLAGS>)) 
		Combined result: 2.02 cycles

-----TEST16rr-----
	TEST16rr(0(Class<GR16>) -> impl(Reg<EFLAGS>))  [1;1.02]
		Dependencies:
			ADC16rr(impl(Reg<EFLAGS>) -> 0(Class<GR16>)) 
			ADC16ri(1(Class<GR16>) -> impl(Reg<EFLAGS>)) 
		Combined result: 2.02 cycles
	TEST16rr(1(Class<GR16>) -> impl(Reg<EFLAGS>))  [1.01;1.03]
		Dependencies:
			ADC16rr(impl(Reg<EFLAGS>) -> 0(Class<GR16>)) 
			ADC16ri(1(Class<GR16>) -> impl(Reg<EFLAGS>)) 
		Combined result: 2.02 cycles

-----TEST32i32-----
	TEST32i32(impl(Reg<EAX>) -> impl(Reg<EFLAGS>))  [1.01;1.02]
		Dependencies:
			ADC32i32(impl(Reg<EFLAGS>) -> impl(Reg<EAX>)) 
			ADC32i32(impl(Reg<EAX>) -> impl(Reg<EFLAGS>)) 
		Combined result: 2.03 cycles

-----TEST32ri-----
	TEST32ri(0(Class<GR32>) -> impl(Reg<EFLAGS>))  [0.987;1.01]
		Dependencies:
			ADC32ri8(impl(Reg<EFLAGS>) -> 0(Class<GR32>)) 
			ADC32ri(1(Class<GR32>) -> impl(Reg<EFLAGS>)) 
		Combined result: 2.01 cycles

-----TEST32rr-----
	TEST32rr(0(Class<GR32>) -> impl(Reg<EFLAGS>))  [0.982;1]
		Dependencies:
			ADC32ri8(impl(Reg<EFLAGS>) -> 0(Class<GR32>)) 
			ADC32ri(1(Class<GR32>) -> impl(Reg<EFLAGS>)) 
		Combined result: 2.01 cycles
	TEST32rr(1(Class<GR32>) -> impl(Reg<EFLAGS>))  [1;1.02]
		Dependencies:
			ADC32ri8(impl(Reg<EFLAGS>) -> 0(Class<GR32>)) 
			ADC32ri(1(Class<GR32>) -> impl(Reg<EFLAGS>)) 
		Combined result: 2.03 cycles

-----TEST64i32-----
	TEST64i32(impl(Reg<RAX>) -> impl(Reg<EFLAGS>))  [1.04;1.05]
		Dependencies:
			CMP64i32(impl(Reg<RAX>) -> impl(Reg<EFLAGS>)) 
			ADC64i32(impl(Reg<EFLAGS>) -> impl(Reg<RAX>)) 
		Combined result: 2.05 cycles

-----TEST64ri32-----
	TEST64ri32(0(Class<GR64>) -> impl(Reg<EFLAGS>))  [1.01;1.03]
		Dependencies:
			ADC64rr(impl(Reg<EFLAGS>) -> 0(Class<GR64>)) 
			ADC64ri32(1(Class<GR64>) -> impl(Reg<EFLAGS>)) 
		Combined result: 2.02 cycles

-----TEST64rr-----
	TEST64rr(0(Class<GR64>) -> impl(Reg<EFLAGS>))  [1.01;1.02]
		Dependencies:
			ADC64rr(impl(Reg<EFLAGS>) -> 0(Class<GR64>)) 
			ADC64ri32(1(Class<GR64>) -> impl(Reg<EFLAGS>)) 
		Combined result: 2.02 cycles
	TEST64rr(1(Class<GR64>) -> impl(Reg<EFLAGS>))  [1.01;1.03]
		Dependencies:
			ADC64rr(impl(Reg<EFLAGS>) -> 0(Class<GR64>)) 
			ADC64ri32(1(Class<GR64>) -> impl(Reg<EFLAGS>)) 
		Combined result: 2.02 cycles

-----TEST8i8-----
	TEST8i8(impl(Reg<AL>) -> impl(Reg<EFLAGS>))  [1;1.02]
		Dependencies:
			ADC8i8(impl(Reg<EFLAGS>) -> impl(Reg<AL>)) 
			CMP8i8(impl(Reg<AL>) -> impl(Reg<EFLAGS>)) 
		Combined result: 2.02 cycles

-----TEST8ri-----
	TEST8ri(0(Class<GR8>) -> impl(Reg<EFLAGS>))  [1.01;1.03]
		Dependencies:
			ADC8ri8(impl(Reg<EFLAGS>) -> 0(Class<GR8>)) 
			ADC8ri(1(Class<GR8>) -> impl(Reg<EFLAGS>)) 
		Combined result: 2.03 cycles

-----TEST8rr-----
	TEST8rr(0(Class<GR8>) -> impl(Reg<EFLAGS>))  [1;1.02]
		Dependencies:
			ADC8ri8(impl(Reg<EFLAGS>) -> 0(Class<GR8>)) 
			ADC8ri(1(Class<GR8>) -> impl(Reg<EFLAGS>)) 
		Combined result: 2.02 cycles
	TEST8rr(1(Class<GR8>) -> impl(Reg<EFLAGS>))  [1;1.02]
		Dependencies:
			ADC8ri8(impl(Reg<EFLAGS>) -> 0(Class<GR8>)) 
			ADC8ri(1(Class<GR8>) -> impl(Reg<EFLAGS>)) 
		Combined result: 2.02 cycles

-----TMMULTF32PS-----
	TMMULTF32PS(1(Class<TILE>) -> 0(Class<TILE>))  [ERROR_NO_REGISTERS]
		ERROR_NO_REGISTERS, this instruction cannot be measured on this platform
	TMMULTF32PS(2(Class<TILE>) -> 0(Class<TILE>))  [ERROR_NO_REGISTERS]
		ERROR_NO_REGISTERS, this instruction cannot be measured on this platform
	TMMULTF32PS(3(Class<TILE>) -> 0(Class<TILE>))  [ERROR_NO_REGISTERS]
		ERROR_NO_REGISTERS, this instruction cannot be measured on this platform

-----TPAUSE-----
	TPAUSE(0(Class<GR32>) -> impl(Reg<EFLAGS>))  [ERROR_UNUSUAL_LATENCY]

-----TTCMMIMFP16PS-----
	TTCMMIMFP16PS(1(Class<TILE>) -> 0(Class<TILE>))  [ERROR_NO_REGISTERS]
		ERROR_NO_REGISTERS, this instruction cannot be measured on this platform
	TTCMMIMFP16PS(2(Class<TILE>) -> 0(Class<TILE>))  [ERROR_NO_REGISTERS]
		ERROR_NO_REGISTERS, this instruction cannot be measured on this platform
	TTCMMIMFP16PS(3(Class<TILE>) -> 0(Class<TILE>))  [ERROR_NO_REGISTERS]
		ERROR_NO_REGISTERS, this instruction cannot be measured on this platform

-----TTCMMRLFP16PS-----
	TTCMMRLFP16PS(1(Class<TILE>) -> 0(Class<TILE>))  [ERROR_NO_REGISTERS]
		ERROR_NO_REGISTERS, this instruction cannot be measured on this platform
	TTCMMRLFP16PS(2(Class<TILE>) -> 0(Class<TILE>))  [ERROR_NO_REGISTERS]
		ERROR_NO_REGISTERS, this instruction cannot be measured on this platform
	TTCMMRLFP16PS(3(Class<TILE>) -> 0(Class<TILE>))  [ERROR_NO_REGISTERS]
		ERROR_NO_REGISTERS, this instruction cannot be measured on this platform

-----TTDPBF16PS-----
	TTDPBF16PS(1(Class<TILE>) -> 0(Class<TILE>))  [ERROR_NO_REGISTERS]
		ERROR_NO_REGISTERS, this instruction cannot be measured on this platform
	TTDPBF16PS(2(Class<TILE>) -> 0(Class<TILE>))  [ERROR_NO_REGISTERS]
		ERROR_NO_REGISTERS, this instruction cannot be measured on this platform
	TTDPBF16PS(3(Class<TILE>) -> 0(Class<TILE>))  [ERROR_NO_REGISTERS]
		ERROR_NO_REGISTERS, this instruction cannot be measured on this platform

-----TTDPFP16PS-----
	TTDPFP16PS(1(Class<TILE>) -> 0(Class<TILE>))  [ERROR_NO_REGISTERS]
		ERROR_NO_REGISTERS, this instruction cannot be measured on this platform
	TTDPFP16PS(2(Class<TILE>) -> 0(Class<TILE>))  [ERROR_NO_REGISTERS]
		ERROR_NO_REGISTERS, this instruction cannot be measured on this platform
	TTDPFP16PS(3(Class<TILE>) -> 0(Class<TILE>))  [ERROR_NO_REGISTERS]
		ERROR_NO_REGISTERS, this instruction cannot be measured on this platform

-----TTMMULTF32PS-----
	TTMMULTF32PS(1(Class<TILE>) -> 0(Class<TILE>))  [ERROR_NO_REGISTERS]
		ERROR_NO_REGISTERS, this instruction cannot be measured on this platform
	TTMMULTF32PS(2(Class<TILE>) -> 0(Class<TILE>))  [ERROR_NO_REGISTERS]
		ERROR_NO_REGISTERS, this instruction cannot be measured on this platform
	TTMMULTF32PS(3(Class<TILE>) -> 0(Class<TILE>))  [ERROR_NO_REGISTERS]
		ERROR_NO_REGISTERS, this instruction cannot be measured on this platform

-----TTRANSPOSED-----
	TTRANSPOSED(1(Class<TILE>) -> 0(Class<TILE>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----TZCNT16rr-----
	TZCNT16rr(1(Class<GR16>) -> 0(Class<GR16>))  [1;1]
		 Successful, latency: 1
	TZCNT16rr(1(Class<GR16>) -> impl(Reg<EFLAGS>))  [1;1.02]
		Dependencies:
			ADC16rr(impl(Reg<EFLAGS>) -> 0(Class<GR16>)) 
			ADC16ri(1(Class<GR16>) -> impl(Reg<EFLAGS>)) 
		Combined result: 2.02 cycles

-----TZCNT16rr_EVEX-----
	TZCNT16rr_EVEX(1(Class<GR16>) -> 0(Class<GR16>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----TZCNT16rr_NF-----
	TZCNT16rr_NF(1(Class<GR16>) -> 0(Class<GR16>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----TZCNT32rr-----
	TZCNT32rr(1(Class<GR32>) -> 0(Class<GR32>))  [1.02;1.02]
		 Successful, latency: 1.02
	TZCNT32rr(1(Class<GR32>) -> impl(Reg<EFLAGS>))  [1.01;1.02]
		Dependencies:
			ADC32ri8(impl(Reg<EFLAGS>) -> 0(Class<GR32>)) 
			ADC32ri(1(Class<GR32>) -> impl(Reg<EFLAGS>)) 
		Combined result: 2.03 cycles

-----TZCNT32rr_EVEX-----
	TZCNT32rr_EVEX(1(Class<GR32>) -> 0(Class<GR32>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----TZCNT32rr_NF-----
	TZCNT32rr_NF(1(Class<GR32>) -> 0(Class<GR32>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----TZCNT64rr-----
	TZCNT64rr(1(Class<GR64>) -> 0(Class<GR64>))  [1.01;1.01]
		 Successful, latency: 1.01
	TZCNT64rr(1(Class<GR64>) -> impl(Reg<EFLAGS>))  [1.04;1.06]
		Dependencies:
			ADC64rr(impl(Reg<EFLAGS>) -> 0(Class<GR64>)) 
			ADC64ri32(1(Class<GR64>) -> impl(Reg<EFLAGS>)) 
		Combined result: 2.05 cycles

-----TZCNT64rr_EVEX-----
	TZCNT64rr_EVEX(1(Class<GR64>) -> 0(Class<GR64>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----TZCNT64rr_NF-----
	TZCNT64rr_NF(1(Class<GR64>) -> 0(Class<GR64>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----TZMSK32rr-----
	TZMSK32rr(1(Class<GR32>) -> 0(Class<GR32>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----TZMSK64rr-----
	TZMSK64rr(1(Class<GR64>) -> 0(Class<GR64>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----UCOMISDrr-----
	UCOMISDrr(0(Class<FR64>) -> impl(Reg<EFLAGS>))  [1.02;0.025]
		Dependencies:
			CMOV_FR64(impl(Reg<EFLAGS>) -> 0(Class<FR64>)) 
			COMISDrr(0(Class<FR64>) -> impl(Reg<EFLAGS>)) 
		Combined result: 1.02 cycles
	UCOMISDrr(1(Class<FR64>) -> impl(Reg<EFLAGS>))  [1;0.0125]
		Dependencies:
			CMOV_FR64(impl(Reg<EFLAGS>) -> 0(Class<FR64>)) 
			COMISDrr(0(Class<FR64>) -> impl(Reg<EFLAGS>)) 
		Combined result: 1.01 cycles

-----UCOMISDrr_Int-----
	UCOMISDrr_Int(0(Class<VR128>) -> impl(Reg<EFLAGS>))  [0.992;-0.00125]
		Dependencies:
			CMOV_VR128(impl(Reg<EFLAGS>) -> 0(Class<VR128>)) 
			COMISDrr_Int(0(Class<VR128>) -> impl(Reg<EFLAGS>)) 
		Combined result: 1.01 cycles
	UCOMISDrr_Int(1(Class<VR128>) -> impl(Reg<EFLAGS>))  [0.991;-0.0025]
		Dependencies:
			CMOV_VR128(impl(Reg<EFLAGS>) -> 0(Class<VR128>)) 
			COMISDrr_Int(0(Class<VR128>) -> impl(Reg<EFLAGS>)) 
		Combined result: 1.01 cycles

-----UCOMISSrr-----
	UCOMISSrr(0(Class<FR32>) -> impl(Reg<EFLAGS>))  [0.994;0.00875]
		Dependencies:
			CMOV_FR32(impl(Reg<EFLAGS>) -> 0(Class<FR32>)) 
			COMISSrr(0(Class<FR32>) -> impl(Reg<EFLAGS>)) 
		Combined result: 1.01 cycles
	UCOMISSrr(1(Class<FR32>) -> impl(Reg<EFLAGS>))  [0.991;0.00625]
		Dependencies:
			CMOV_FR32(impl(Reg<EFLAGS>) -> 0(Class<FR32>)) 
			COMISSrr(0(Class<FR32>) -> impl(Reg<EFLAGS>)) 
		Combined result: 1.01 cycles

-----UCOMISSrr_Int-----
	UCOMISSrr_Int(0(Class<VR128>) -> impl(Reg<EFLAGS>))  [0.981;-0.0125]
		Dependencies:
			CMOV_VR128(impl(Reg<EFLAGS>) -> 0(Class<VR128>)) 
			COMISDrr_Int(0(Class<VR128>) -> impl(Reg<EFLAGS>)) 
		Combined result: 0.999 cycles
	UCOMISSrr_Int(1(Class<VR128>) -> impl(Reg<EFLAGS>))  [0.991;-0.0025]
		Dependencies:
			CMOV_VR128(impl(Reg<EFLAGS>) -> 0(Class<VR128>)) 
			COMISDrr_Int(0(Class<VR128>) -> impl(Reg<EFLAGS>)) 
		Combined result: 1.01 cycles

-----UMWAIT-----
	UMWAIT(0(Class<GR32>) -> impl(Reg<EFLAGS>))  [ERROR_UNUSUAL_LATENCY]

-----UNPCKHPDrr-----
	UNPCKHPDrr(1(Class<VR128>) -> 0(Class<VR128>))  [1.01;1.01]
		 Successful, latency: 1.01
	UNPCKHPDrr(2(Class<VR128>) -> 0(Class<VR128>))  [1.01;1.01]
		 Successful, latency: 1.01

-----UNPCKHPSrr-----
	UNPCKHPSrr(1(Class<VR128>) -> 0(Class<VR128>))  [1.01;1.01]
		 Successful, latency: 1.01
	UNPCKHPSrr(2(Class<VR128>) -> 0(Class<VR128>))  [1.01;1.01]
		 Successful, latency: 1.01

-----UNPCKLPDrr-----
	UNPCKLPDrr(1(Class<VR128>) -> 0(Class<VR128>))  [1.01;1.01]
		 Successful, latency: 1.01
	UNPCKLPDrr(2(Class<VR128>) -> 0(Class<VR128>))  [1.01;1.01]
		 Successful, latency: 1.01

-----UNPCKLPSrr-----
	UNPCKLPSrr(1(Class<VR128>) -> 0(Class<VR128>))  [1;1]
		 Successful, latency: 1
	UNPCKLPSrr(2(Class<VR128>) -> 0(Class<VR128>))  [1.02;1.02]
		 Successful, latency: 1.02

-----VADDBF16Z128rr-----
	VADDBF16Z128rr(1(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VADDBF16Z128rr(2(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VADDBF16Z128rrk-----
	VADDBF16Z128rrk(1(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VADDBF16Z128rrk(3(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VADDBF16Z128rrk(4(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VADDBF16Z128rrkz-----
	VADDBF16Z128rrkz(2(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VADDBF16Z128rrkz(3(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VADDBF16Z256rr-----
	VADDBF16Z256rr(1(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VADDBF16Z256rr(2(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VADDBF16Z256rrk-----
	VADDBF16Z256rrk(1(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VADDBF16Z256rrk(3(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VADDBF16Z256rrk(4(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VADDBF16Z256rrkz-----
	VADDBF16Z256rrkz(2(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VADDBF16Z256rrkz(3(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VADDBF16Zrr-----
	VADDBF16Zrr(1(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VADDBF16Zrr(2(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VADDBF16Zrrk-----
	VADDBF16Zrrk(1(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VADDBF16Zrrk(3(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VADDBF16Zrrk(4(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VADDBF16Zrrkz-----
	VADDBF16Zrrkz(2(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VADDBF16Zrrkz(3(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VADDPDYrr-----
	VADDPDYrr(1(Class<VR256>) -> 0(Class<VR256>))  [3.03;3.03]
		 Successful, latency: 3.03
	VADDPDYrr(2(Class<VR256>) -> 0(Class<VR256>))  [3.03;3.03]
		 Successful, latency: 3.03

-----VADDPDZ128rr-----
	VADDPDZ128rr(1(Class<VR128X>) -> 0(Class<VR128X>))  [3.05;3.05]
		 Successful, latency: 3.05
	VADDPDZ128rr(2(Class<VR128X>) -> 0(Class<VR128X>))  [3.03;3.03]
		 Successful, latency: 3.03

-----VADDPDZ128rrk-----
	VADDPDZ128rrk(1(Class<VR128X>) -> 0(Class<VR128X>))  [3.04;3.04]
		 Successful, latency: 3.04
	VADDPDZ128rrk(3(Class<VR128X>) -> 0(Class<VR128X>))  [3.05;3.05]
		 Successful, latency: 3.05
	VADDPDZ128rrk(4(Class<VR128X>) -> 0(Class<VR128X>))  [3.02;3.02]
		 Successful, latency: 3.02

-----VADDPDZ128rrkz-----
	VADDPDZ128rrkz(2(Class<VR128X>) -> 0(Class<VR128X>))  [3.05;3.05]
		 Successful, latency: 3.05
	VADDPDZ128rrkz(3(Class<VR128X>) -> 0(Class<VR128X>))  [3.05;3.05]
		 Successful, latency: 3.05

-----VADDPDZ256rr-----
	VADDPDZ256rr(1(Class<VR256X>) -> 0(Class<VR256X>))  [3.03;3.03]
		 Successful, latency: 3.03
	VADDPDZ256rr(2(Class<VR256X>) -> 0(Class<VR256X>))  [3.05;3.05]
		 Successful, latency: 3.05

-----VADDPDZ256rrb-----
	VADDPDZ256rrb(1(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VADDPDZ256rrb(2(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VADDPDZ256rrbk-----
	VADDPDZ256rrbk(1(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VADDPDZ256rrbk(3(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VADDPDZ256rrbk(4(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VADDPDZ256rrbkz-----
	VADDPDZ256rrbkz(2(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VADDPDZ256rrbkz(3(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VADDPDZ256rrk-----
	VADDPDZ256rrk(1(Class<VR256X>) -> 0(Class<VR256X>))  [3.04;3.04]
		 Successful, latency: 3.04
	VADDPDZ256rrk(3(Class<VR256X>) -> 0(Class<VR256X>))  [3.08;3.08]
		 Successful, latency: 3.08
	VADDPDZ256rrk(4(Class<VR256X>) -> 0(Class<VR256X>))  [3.06;3.06]
		 Successful, latency: 3.06

-----VADDPDZ256rrkz-----
	VADDPDZ256rrkz(2(Class<VR256X>) -> 0(Class<VR256X>))  [3.05;3.05]
		 Successful, latency: 3.05
	VADDPDZ256rrkz(3(Class<VR256X>) -> 0(Class<VR256X>))  [3.03;3.03]
		 Successful, latency: 3.03

-----VADDPDZrr-----
	VADDPDZrr(1(Class<VR512>) -> 0(Class<VR512>))  [3.05;3.05]
		 Successful, latency: 3.05
	VADDPDZrr(2(Class<VR512>) -> 0(Class<VR512>))  [3.04;3.04]
		 Successful, latency: 3.04

-----VADDPDZrrb-----
	VADDPDZrrb(1(Class<VR512>) -> 0(Class<VR512>))  [3.08;3.08]
		 Successful, latency: 3.08
	VADDPDZrrb(2(Class<VR512>) -> 0(Class<VR512>))  [3.04;3.04]
		 Successful, latency: 3.04

-----VADDPDZrrbk-----
	VADDPDZrrbk(1(Class<VR512>) -> 0(Class<VR512>))  [3.03;3.03]
		 Successful, latency: 3.03
	VADDPDZrrbk(3(Class<VR512>) -> 0(Class<VR512>))  [3.02;3.02]
		 Successful, latency: 3.02
	VADDPDZrrbk(4(Class<VR512>) -> 0(Class<VR512>))  [3.04;3.04]
		 Successful, latency: 3.04

-----VADDPDZrrbkz-----
	VADDPDZrrbkz(2(Class<VR512>) -> 0(Class<VR512>))  [3.05;3.05]
		 Successful, latency: 3.05
	VADDPDZrrbkz(3(Class<VR512>) -> 0(Class<VR512>))  [3.04;3.04]
		 Successful, latency: 3.04

-----VADDPDZrrk-----
	VADDPDZrrk(1(Class<VR512>) -> 0(Class<VR512>))  [3.02;3.02]
		 Successful, latency: 3.02
	VADDPDZrrk(3(Class<VR512>) -> 0(Class<VR512>))  [3.03;3.03]
		 Successful, latency: 3.03
	VADDPDZrrk(4(Class<VR512>) -> 0(Class<VR512>))  [3.03;3.03]
		 Successful, latency: 3.03

-----VADDPDZrrkz-----
	VADDPDZrrkz(2(Class<VR512>) -> 0(Class<VR512>))  [3.07;3.07]
		 Successful, latency: 3.07
	VADDPDZrrkz(3(Class<VR512>) -> 0(Class<VR512>))  [3.02;3.02]
		 Successful, latency: 3.02

-----VADDPDrr-----
	VADDPDrr(1(Class<VR128>) -> 0(Class<VR128>))  [3.03;3.03]
		 Successful, latency: 3.03
	VADDPDrr(2(Class<VR128>) -> 0(Class<VR128>))  [3.04;3.04]
		 Successful, latency: 3.04

-----VADDPHZ128rr-----
	VADDPHZ128rr(1(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VADDPHZ128rr(2(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VADDPHZ128rrk-----
	VADDPHZ128rrk(1(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VADDPHZ128rrk(3(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VADDPHZ128rrk(4(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VADDPHZ128rrkz-----
	VADDPHZ128rrkz(2(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VADDPHZ128rrkz(3(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VADDPHZ256rr-----
	VADDPHZ256rr(1(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VADDPHZ256rr(2(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VADDPHZ256rrb-----
	VADDPHZ256rrb(1(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VADDPHZ256rrb(2(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VADDPHZ256rrbk-----
	VADDPHZ256rrbk(1(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VADDPHZ256rrbk(3(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VADDPHZ256rrbk(4(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VADDPHZ256rrbkz-----
	VADDPHZ256rrbkz(2(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VADDPHZ256rrbkz(3(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VADDPHZ256rrk-----
	VADDPHZ256rrk(1(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VADDPHZ256rrk(3(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VADDPHZ256rrk(4(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VADDPHZ256rrkz-----
	VADDPHZ256rrkz(2(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VADDPHZ256rrkz(3(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VADDPHZrr-----
	VADDPHZrr(1(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VADDPHZrr(2(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VADDPHZrrb-----
	VADDPHZrrb(1(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VADDPHZrrb(2(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VADDPHZrrbk-----
	VADDPHZrrbk(1(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VADDPHZrrbk(3(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VADDPHZrrbk(4(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VADDPHZrrbkz-----
	VADDPHZrrbkz(2(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VADDPHZrrbkz(3(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VADDPHZrrk-----
	VADDPHZrrk(1(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VADDPHZrrk(3(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VADDPHZrrk(4(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VADDPHZrrkz-----
	VADDPHZrrkz(2(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VADDPHZrrkz(3(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VADDPSYrr-----
	VADDPSYrr(1(Class<VR256>) -> 0(Class<VR256>))  [3.03;3.03]
		 Successful, latency: 3.03
	VADDPSYrr(2(Class<VR256>) -> 0(Class<VR256>))  [3.02;3.02]
		 Successful, latency: 3.02

-----VADDPSZ128rr-----
	VADDPSZ128rr(1(Class<VR128X>) -> 0(Class<VR128X>))  [3.02;3.02]
		 Successful, latency: 3.02
	VADDPSZ128rr(2(Class<VR128X>) -> 0(Class<VR128X>))  [3.07;3.07]
		 Successful, latency: 3.07

-----VADDPSZ128rrk-----
	VADDPSZ128rrk(1(Class<VR128X>) -> 0(Class<VR128X>))  [3.03;3.03]
		 Successful, latency: 3.03
	VADDPSZ128rrk(3(Class<VR128X>) -> 0(Class<VR128X>))  [3.03;3.03]
		 Successful, latency: 3.03
	VADDPSZ128rrk(4(Class<VR128X>) -> 0(Class<VR128X>))  [3.03;3.03]
		 Successful, latency: 3.03

-----VADDPSZ128rrkz-----
	VADDPSZ128rrkz(2(Class<VR128X>) -> 0(Class<VR128X>))  [3.09;3.09]
		 Successful, latency: 3.09
	VADDPSZ128rrkz(3(Class<VR128X>) -> 0(Class<VR128X>))  [3.04;3.04]
		 Successful, latency: 3.04

-----VADDPSZ256rr-----
	VADDPSZ256rr(1(Class<VR256X>) -> 0(Class<VR256X>))  [3.05;3.05]
		 Successful, latency: 3.05
	VADDPSZ256rr(2(Class<VR256X>) -> 0(Class<VR256X>))  [3.05;3.05]
		 Successful, latency: 3.05

-----VADDPSZ256rrb-----
	VADDPSZ256rrb(1(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VADDPSZ256rrb(2(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VADDPSZ256rrbk-----
	VADDPSZ256rrbk(1(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VADDPSZ256rrbk(3(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VADDPSZ256rrbk(4(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VADDPSZ256rrbkz-----
	VADDPSZ256rrbkz(2(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VADDPSZ256rrbkz(3(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VADDPSZ256rrk-----
	VADDPSZ256rrk(1(Class<VR256X>) -> 0(Class<VR256X>))  [3.05;3.05]
		 Successful, latency: 3.05
	VADDPSZ256rrk(3(Class<VR256X>) -> 0(Class<VR256X>))  [3.03;3.03]
		 Successful, latency: 3.03
	VADDPSZ256rrk(4(Class<VR256X>) -> 0(Class<VR256X>))  [3.02;3.02]
		 Successful, latency: 3.02

-----VADDPSZ256rrkz-----
	VADDPSZ256rrkz(2(Class<VR256X>) -> 0(Class<VR256X>))  [3.02;3.02]
		 Successful, latency: 3.02
	VADDPSZ256rrkz(3(Class<VR256X>) -> 0(Class<VR256X>))  [3.01;3.01]
		 Successful, latency: 3.01

-----VADDPSZrr-----
	VADDPSZrr(1(Class<VR512>) -> 0(Class<VR512>))  [3.03;3.03]
		 Successful, latency: 3.03
	VADDPSZrr(2(Class<VR512>) -> 0(Class<VR512>))  [3.03;3.03]
		 Successful, latency: 3.03

-----VADDPSZrrb-----
	VADDPSZrrb(1(Class<VR512>) -> 0(Class<VR512>))  [3.03;3.03]
		 Successful, latency: 3.03
	VADDPSZrrb(2(Class<VR512>) -> 0(Class<VR512>))  [3.04;3.04]
		 Successful, latency: 3.04

-----VADDPSZrrbk-----
	VADDPSZrrbk(1(Class<VR512>) -> 0(Class<VR512>))  [3.03;3.03]
		 Successful, latency: 3.03
	VADDPSZrrbk(3(Class<VR512>) -> 0(Class<VR512>))  [3.05;3.05]
		 Successful, latency: 3.05
	VADDPSZrrbk(4(Class<VR512>) -> 0(Class<VR512>))  [3.02;3.02]
		 Successful, latency: 3.02

-----VADDPSZrrbkz-----
	VADDPSZrrbkz(2(Class<VR512>) -> 0(Class<VR512>))  [3.03;3.03]
		 Successful, latency: 3.03
	VADDPSZrrbkz(3(Class<VR512>) -> 0(Class<VR512>))  [3.04;3.04]
		 Successful, latency: 3.04

-----VADDPSZrrk-----
	VADDPSZrrk(1(Class<VR512>) -> 0(Class<VR512>))  [3.03;3.03]
		 Successful, latency: 3.03
	VADDPSZrrk(3(Class<VR512>) -> 0(Class<VR512>))  [3.02;3.02]
		 Successful, latency: 3.02
	VADDPSZrrk(4(Class<VR512>) -> 0(Class<VR512>))  [3.02;3.02]
		 Successful, latency: 3.02

-----VADDPSZrrkz-----
	VADDPSZrrkz(2(Class<VR512>) -> 0(Class<VR512>))  [3.03;3.03]
		 Successful, latency: 3.03
	VADDPSZrrkz(3(Class<VR512>) -> 0(Class<VR512>))  [3.02;3.02]
		 Successful, latency: 3.02

-----VADDPSrr-----
	VADDPSrr(1(Class<VR128>) -> 0(Class<VR128>))  [3.05;3.05]
		 Successful, latency: 3.05
	VADDPSrr(2(Class<VR128>) -> 0(Class<VR128>))  [3.03;3.03]
		 Successful, latency: 3.03

-----VADDSDZrr-----
	VADDSDZrr(1(Class<FR64X>) -> 0(Class<FR64X>))  [3.04;3.04]
		 Successful, latency: 3.04
	VADDSDZrr(2(Class<FR64X>) -> 0(Class<FR64X>))  [3.04;3.04]
		 Successful, latency: 3.04

-----VADDSDZrr_Int-----
	VADDSDZrr_Int(1(Class<VR128X>) -> 0(Class<VR128X>))  [3.02;3.02]
		 Successful, latency: 3.02
	VADDSDZrr_Int(2(Class<VR128X>) -> 0(Class<VR128X>))  [3.04;3.04]
		 Successful, latency: 3.04

-----VADDSDZrrb_Int-----
	VADDSDZrrb_Int(1(Class<VR128X>) -> 0(Class<VR128X>))  [3.02;3.02]
		 Successful, latency: 3.02
	VADDSDZrrb_Int(2(Class<VR128X>) -> 0(Class<VR128X>))  [3.07;3.07]
		 Successful, latency: 3.07

-----VADDSDZrrbk_Int-----
	VADDSDZrrbk_Int(1(Class<VR128X>) -> 0(Class<VR128X>))  [3.06;3.06]
		 Successful, latency: 3.06
	VADDSDZrrbk_Int(3(Class<VR128X>) -> 0(Class<VR128X>))  [3.03;3.03]
		 Successful, latency: 3.03
	VADDSDZrrbk_Int(4(Class<VR128X>) -> 0(Class<VR128X>))  [3.02;3.02]
		 Successful, latency: 3.02

-----VADDSDZrrbkz_Int-----
	VADDSDZrrbkz_Int(2(Class<VR128X>) -> 0(Class<VR128X>))  [3.05;3.05]
		 Successful, latency: 3.05
	VADDSDZrrbkz_Int(3(Class<VR128X>) -> 0(Class<VR128X>))  [3.03;3.03]
		 Successful, latency: 3.03

-----VADDSDZrrk_Int-----
	VADDSDZrrk_Int(1(Class<VR128X>) -> 0(Class<VR128X>))  [3.05;3.05]
		 Successful, latency: 3.05
	VADDSDZrrk_Int(3(Class<VR128X>) -> 0(Class<VR128X>))  [3.03;3.03]
		 Successful, latency: 3.03
	VADDSDZrrk_Int(4(Class<VR128X>) -> 0(Class<VR128X>))  [3.03;3.03]
		 Successful, latency: 3.03

-----VADDSDZrrkz_Int-----
	VADDSDZrrkz_Int(2(Class<VR128X>) -> 0(Class<VR128X>))  [3.04;3.04]
		 Successful, latency: 3.04
	VADDSDZrrkz_Int(3(Class<VR128X>) -> 0(Class<VR128X>))  [3.04;3.04]
		 Successful, latency: 3.04

-----VADDSDrr-----
	VADDSDrr(1(Class<FR64>) -> 0(Class<FR64>))  [3.08;3.08]
		 Successful, latency: 3.08
	VADDSDrr(2(Class<FR64>) -> 0(Class<FR64>))  [3.05;3.05]
		 Successful, latency: 3.05

-----VADDSDrr_Int-----
	VADDSDrr_Int(1(Class<VR128>) -> 0(Class<VR128>))  [3.02;3.02]
		 Successful, latency: 3.02
	VADDSDrr_Int(2(Class<VR128>) -> 0(Class<VR128>))  [3.04;3.04]
		 Successful, latency: 3.04

-----VADDSHZrr-----
	VADDSHZrr(1(Class<FR16X>) -> 0(Class<FR16X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VADDSHZrr(2(Class<FR16X>) -> 0(Class<FR16X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VADDSHZrr_Int-----
	VADDSHZrr_Int(1(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VADDSHZrr_Int(2(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VADDSHZrrb_Int-----
	VADDSHZrrb_Int(1(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VADDSHZrrb_Int(2(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VADDSHZrrbk_Int-----
	VADDSHZrrbk_Int(1(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VADDSHZrrbk_Int(3(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VADDSHZrrbk_Int(4(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VADDSHZrrbkz_Int-----
	VADDSHZrrbkz_Int(2(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VADDSHZrrbkz_Int(3(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VADDSHZrrk_Int-----
	VADDSHZrrk_Int(1(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VADDSHZrrk_Int(3(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VADDSHZrrk_Int(4(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VADDSHZrrkz_Int-----
	VADDSHZrrkz_Int(2(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VADDSHZrrkz_Int(3(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VADDSSZrr-----
	VADDSSZrr(1(Class<FR32X>) -> 0(Class<FR32X>))  [3.02;3.02]
		 Successful, latency: 3.02
	VADDSSZrr(2(Class<FR32X>) -> 0(Class<FR32X>))  [3.03;3.03]
		 Successful, latency: 3.03

-----VADDSSZrr_Int-----
	VADDSSZrr_Int(1(Class<VR128X>) -> 0(Class<VR128X>))  [3.03;3.03]
		 Successful, latency: 3.03
	VADDSSZrr_Int(2(Class<VR128X>) -> 0(Class<VR128X>))  [3.04;3.04]
		 Successful, latency: 3.04

-----VADDSSZrrb_Int-----
	VADDSSZrrb_Int(1(Class<VR128X>) -> 0(Class<VR128X>))  [3.06;3.06]
		 Successful, latency: 3.06
	VADDSSZrrb_Int(2(Class<VR128X>) -> 0(Class<VR128X>))  [3.01;3.01]
		 Successful, latency: 3.01

-----VADDSSZrrbk_Int-----
	VADDSSZrrbk_Int(1(Class<VR128X>) -> 0(Class<VR128X>))  [3.08;3.08]
		 Successful, latency: 3.08
	VADDSSZrrbk_Int(3(Class<VR128X>) -> 0(Class<VR128X>))  [3.06;3.06]
		 Successful, latency: 3.06
	VADDSSZrrbk_Int(4(Class<VR128X>) -> 0(Class<VR128X>))  [3.03;3.03]
		 Successful, latency: 3.03

-----VADDSSZrrbkz_Int-----
	VADDSSZrrbkz_Int(2(Class<VR128X>) -> 0(Class<VR128X>))  [3.03;3.03]
		 Successful, latency: 3.03
	VADDSSZrrbkz_Int(3(Class<VR128X>) -> 0(Class<VR128X>))  [3.04;3.04]
		 Successful, latency: 3.04

-----VADDSSZrrk_Int-----
	VADDSSZrrk_Int(1(Class<VR128X>) -> 0(Class<VR128X>))  [3.03;3.03]
		 Successful, latency: 3.03
	VADDSSZrrk_Int(3(Class<VR128X>) -> 0(Class<VR128X>))  [3.06;3.06]
		 Successful, latency: 3.06
	VADDSSZrrk_Int(4(Class<VR128X>) -> 0(Class<VR128X>))  [3.03;3.03]
		 Successful, latency: 3.03

-----VADDSSZrrkz_Int-----
	VADDSSZrrkz_Int(2(Class<VR128X>) -> 0(Class<VR128X>))  [3.04;3.04]
		 Successful, latency: 3.04
	VADDSSZrrkz_Int(3(Class<VR128X>) -> 0(Class<VR128X>))  [3.05;3.05]
		 Successful, latency: 3.05

-----VADDSSrr-----
	VADDSSrr(1(Class<FR32>) -> 0(Class<FR32>))  [3.04;3.04]
		 Successful, latency: 3.04
	VADDSSrr(2(Class<FR32>) -> 0(Class<FR32>))  [3.03;3.03]
		 Successful, latency: 3.03

-----VADDSSrr_Int-----
	VADDSSrr_Int(1(Class<VR128>) -> 0(Class<VR128>))  [3.04;3.04]
		 Successful, latency: 3.04
	VADDSSrr_Int(2(Class<VR128>) -> 0(Class<VR128>))  [3.05;3.05]
		 Successful, latency: 3.05

-----VADDSUBPDYrr-----
	VADDSUBPDYrr(1(Class<VR256>) -> 0(Class<VR256>))  [3.03;3.03]
		 Successful, latency: 3.03
	VADDSUBPDYrr(2(Class<VR256>) -> 0(Class<VR256>))  [3.02;3.02]
		 Successful, latency: 3.02

-----VADDSUBPDrr-----
	VADDSUBPDrr(1(Class<VR128>) -> 0(Class<VR128>))  [3.02;3.02]
		 Successful, latency: 3.02
	VADDSUBPDrr(2(Class<VR128>) -> 0(Class<VR128>))  [3.02;3.02]
		 Successful, latency: 3.02

-----VADDSUBPSYrr-----
	VADDSUBPSYrr(1(Class<VR256>) -> 0(Class<VR256>))  [3.04;3.04]
		 Successful, latency: 3.04
	VADDSUBPSYrr(2(Class<VR256>) -> 0(Class<VR256>))  [3.02;3.02]
		 Successful, latency: 3.02

-----VADDSUBPSrr-----
	VADDSUBPSrr(1(Class<VR128>) -> 0(Class<VR128>))  [3.02;3.02]
		 Successful, latency: 3.02
	VADDSUBPSrr(2(Class<VR128>) -> 0(Class<VR128>))  [3.02;3.02]
		 Successful, latency: 3.02

-----VAESDECLASTYrr-----
	VAESDECLASTYrr(1(Class<VR256>) -> 0(Class<VR256>))  [4.05;4.05]
		 Successful, latency: 4.05
	VAESDECLASTYrr(2(Class<VR256>) -> 0(Class<VR256>))  [4.04;4.04]
		 Successful, latency: 4.04

-----VAESDECLASTZ128rr-----
	VAESDECLASTZ128rr(1(Class<VR128X>) -> 0(Class<VR128X>))  [4.03;4.03]
		 Successful, latency: 4.03
	VAESDECLASTZ128rr(2(Class<VR128X>) -> 0(Class<VR128X>))  [4.04;4.04]
		 Successful, latency: 4.04

-----VAESDECLASTZ256rr-----
	VAESDECLASTZ256rr(1(Class<VR256X>) -> 0(Class<VR256X>))  [4.04;4.04]
		 Successful, latency: 4.04
	VAESDECLASTZ256rr(2(Class<VR256X>) -> 0(Class<VR256X>))  [4.02;4.02]
		 Successful, latency: 4.02

-----VAESDECLASTZrr-----
	VAESDECLASTZrr(1(Class<VR512>) -> 0(Class<VR512>))  [4.03;4.03]
		 Successful, latency: 4.03
	VAESDECLASTZrr(2(Class<VR512>) -> 0(Class<VR512>))  [4.05;4.05]
		 Successful, latency: 4.05

-----VAESDECLASTrr-----
	VAESDECLASTrr(1(Class<VR128>) -> 0(Class<VR128>))  [4.04;4.04]
		 Successful, latency: 4.04
	VAESDECLASTrr(2(Class<VR128>) -> 0(Class<VR128>))  [4.05;4.05]
		 Successful, latency: 4.05

-----VAESDECYrr-----
	VAESDECYrr(1(Class<VR256>) -> 0(Class<VR256>))  [4.05;4.05]
		 Successful, latency: 4.05
	VAESDECYrr(2(Class<VR256>) -> 0(Class<VR256>))  [4.02;4.02]
		 Successful, latency: 4.02

-----VAESDECZ128rr-----
	VAESDECZ128rr(1(Class<VR128X>) -> 0(Class<VR128X>))  [4.04;4.04]
		 Successful, latency: 4.04
	VAESDECZ128rr(2(Class<VR128X>) -> 0(Class<VR128X>))  [4.04;4.04]
		 Successful, latency: 4.04

-----VAESDECZ256rr-----
	VAESDECZ256rr(1(Class<VR256X>) -> 0(Class<VR256X>))  [4.03;4.03]
		 Successful, latency: 4.03
	VAESDECZ256rr(2(Class<VR256X>) -> 0(Class<VR256X>))  [4.03;4.03]
		 Successful, latency: 4.03

-----VAESDECZrr-----
	VAESDECZrr(1(Class<VR512>) -> 0(Class<VR512>))  [4.04;4.04]
		 Successful, latency: 4.04
	VAESDECZrr(2(Class<VR512>) -> 0(Class<VR512>))  [4.04;4.04]
		 Successful, latency: 4.04

-----VAESDECrr-----
	VAESDECrr(1(Class<VR128>) -> 0(Class<VR128>))  [4.03;4.03]
		 Successful, latency: 4.03
	VAESDECrr(2(Class<VR128>) -> 0(Class<VR128>))  [4.04;4.04]
		 Successful, latency: 4.04

-----VAESENCLASTYrr-----
	VAESENCLASTYrr(1(Class<VR256>) -> 0(Class<VR256>))  [4.02;4.02]
		 Successful, latency: 4.02
	VAESENCLASTYrr(2(Class<VR256>) -> 0(Class<VR256>))  [4.03;4.03]
		 Successful, latency: 4.03

-----VAESENCLASTZ128rr-----
	VAESENCLASTZ128rr(1(Class<VR128X>) -> 0(Class<VR128X>))  [4.03;4.03]
		 Successful, latency: 4.03
	VAESENCLASTZ128rr(2(Class<VR128X>) -> 0(Class<VR128X>))  [4.04;4.04]
		 Successful, latency: 4.04

-----VAESENCLASTZ256rr-----
	VAESENCLASTZ256rr(1(Class<VR256X>) -> 0(Class<VR256X>))  [4.04;4.04]
		 Successful, latency: 4.04
	VAESENCLASTZ256rr(2(Class<VR256X>) -> 0(Class<VR256X>))  [4.06;4.06]
		 Successful, latency: 4.06

-----VAESENCLASTZrr-----
	VAESENCLASTZrr(1(Class<VR512>) -> 0(Class<VR512>))  [4.04;4.04]
		 Successful, latency: 4.04
	VAESENCLASTZrr(2(Class<VR512>) -> 0(Class<VR512>))  [4.03;4.03]
		 Successful, latency: 4.03

-----VAESENCLASTrr-----
	VAESENCLASTrr(1(Class<VR128>) -> 0(Class<VR128>))  [4.05;4.05]
		 Successful, latency: 4.05
	VAESENCLASTrr(2(Class<VR128>) -> 0(Class<VR128>))  [4.03;4.03]
		 Successful, latency: 4.03

-----VAESENCYrr-----
	VAESENCYrr(1(Class<VR256>) -> 0(Class<VR256>))  [4.04;4.04]
		 Successful, latency: 4.04
	VAESENCYrr(2(Class<VR256>) -> 0(Class<VR256>))  [4.03;4.03]
		 Successful, latency: 4.03

-----VAESENCZ128rr-----
	VAESENCZ128rr(1(Class<VR128X>) -> 0(Class<VR128X>))  [4.04;4.04]
		 Successful, latency: 4.04
	VAESENCZ128rr(2(Class<VR128X>) -> 0(Class<VR128X>))  [4.06;4.06]
		 Successful, latency: 4.06

-----VAESENCZ256rr-----
	VAESENCZ256rr(1(Class<VR256X>) -> 0(Class<VR256X>))  [4.06;4.06]
		 Successful, latency: 4.06
	VAESENCZ256rr(2(Class<VR256X>) -> 0(Class<VR256X>))  [4.04;4.04]
		 Successful, latency: 4.04

-----VAESENCZrr-----
	VAESENCZrr(1(Class<VR512>) -> 0(Class<VR512>))  [4.03;4.03]
		 Successful, latency: 4.03
	VAESENCZrr(2(Class<VR512>) -> 0(Class<VR512>))  [4.04;4.04]
		 Successful, latency: 4.04

-----VAESENCrr-----
	VAESENCrr(1(Class<VR128>) -> 0(Class<VR128>))  [4.06;4.06]
		 Successful, latency: 4.06
	VAESENCrr(2(Class<VR128>) -> 0(Class<VR128>))  [4.03;4.03]
		 Successful, latency: 4.03

-----VAESIMCrr-----
	VAESIMCrr(1(Class<VR128>) -> 0(Class<VR128>))  [4.06;4.06]
		 Successful, latency: 4.06

-----VAESKEYGENASSIST128rr-----
	VAESKEYGENASSIST128rr(1(Class<VR128>) -> 0(Class<VR128>))  [4.05;4.05]
		 Successful, latency: 4.05

-----VALIGNDZ128rri-----
	VALIGNDZ128rri(1(Class<VR128X>) -> 0(Class<VR128X>))  [2.02;2.02]
		 Successful, latency: 2.02
	VALIGNDZ128rri(2(Class<VR128X>) -> 0(Class<VR128X>))  [2.01;2.01]
		 Successful, latency: 2.01

-----VALIGNDZ128rrik-----
	VALIGNDZ128rrik(1(Class<VR128X>) -> 0(Class<VR128X>))  [2;2]
		 Successful, latency: 2
	VALIGNDZ128rrik(3(Class<VR128X>) -> 0(Class<VR128X>))  [2.01;2.01]
		 Successful, latency: 2.01
	VALIGNDZ128rrik(4(Class<VR128X>) -> 0(Class<VR128X>))  [2.01;2.01]
		 Successful, latency: 2.01

-----VALIGNDZ128rrikz-----
	VALIGNDZ128rrikz(2(Class<VR128X>) -> 0(Class<VR128X>))  [2.01;2.01]
		 Successful, latency: 2.01
	VALIGNDZ128rrikz(3(Class<VR128X>) -> 0(Class<VR128X>))  [2;2]
		 Successful, latency: 2

-----VALIGNDZ256rri-----
	VALIGNDZ256rri(1(Class<VR256X>) -> 0(Class<VR256X>))  [4.04;4.04]
		 Successful, latency: 4.04
	VALIGNDZ256rri(2(Class<VR256X>) -> 0(Class<VR256X>))  [4.03;4.03]
		 Successful, latency: 4.03

-----VALIGNDZ256rrik-----
	VALIGNDZ256rrik(1(Class<VR256X>) -> 0(Class<VR256X>))  [4.03;4.03]
		 Successful, latency: 4.03
	VALIGNDZ256rrik(3(Class<VR256X>) -> 0(Class<VR256X>))  [4.05;4.05]
		 Successful, latency: 4.05
	VALIGNDZ256rrik(4(Class<VR256X>) -> 0(Class<VR256X>))  [4.03;4.03]
		 Successful, latency: 4.03

-----VALIGNDZ256rrikz-----
	VALIGNDZ256rrikz(2(Class<VR256X>) -> 0(Class<VR256X>))  [4.04;4.04]
		 Successful, latency: 4.04
	VALIGNDZ256rrikz(3(Class<VR256X>) -> 0(Class<VR256X>))  [4.05;4.05]
		 Successful, latency: 4.05

-----VALIGNDZrri-----
	VALIGNDZrri(1(Class<VR512>) -> 0(Class<VR512>))  [5.04;5.04]
		 Successful, latency: 5.04
	VALIGNDZrri(2(Class<VR512>) -> 0(Class<VR512>))  [5.06;5.06]
		 Successful, latency: 5.06

-----VALIGNDZrrik-----
	VALIGNDZrrik(1(Class<VR512>) -> 0(Class<VR512>))  [5.06;5.06]
		 Successful, latency: 5.06
	VALIGNDZrrik(3(Class<VR512>) -> 0(Class<VR512>))  [5.04;5.04]
		 Successful, latency: 5.04
	VALIGNDZrrik(4(Class<VR512>) -> 0(Class<VR512>))  [5.07;5.07]
		 Successful, latency: 5.07

-----VALIGNDZrrikz-----
	VALIGNDZrrikz(2(Class<VR512>) -> 0(Class<VR512>))  [5.07;5.07]
		 Successful, latency: 5.07
	VALIGNDZrrikz(3(Class<VR512>) -> 0(Class<VR512>))  [5.04;5.04]
		 Successful, latency: 5.04

-----VALIGNQZ128rri-----
	VALIGNQZ128rri(1(Class<VR128X>) -> 0(Class<VR128X>))  [2.02;2.02]
		 Successful, latency: 2.02
	VALIGNQZ128rri(2(Class<VR128X>) -> 0(Class<VR128X>))  [2;2]
		 Successful, latency: 2

-----VALIGNQZ128rrik-----
	VALIGNQZ128rrik(1(Class<VR128X>) -> 0(Class<VR128X>))  [2.02;2.02]
		 Successful, latency: 2.02
	VALIGNQZ128rrik(3(Class<VR128X>) -> 0(Class<VR128X>))  [2.02;2.02]
		 Successful, latency: 2.02
	VALIGNQZ128rrik(4(Class<VR128X>) -> 0(Class<VR128X>))  [2.02;2.02]
		 Successful, latency: 2.02

-----VALIGNQZ128rrikz-----
	VALIGNQZ128rrikz(2(Class<VR128X>) -> 0(Class<VR128X>))  [2.02;2.02]
		 Successful, latency: 2.02
	VALIGNQZ128rrikz(3(Class<VR128X>) -> 0(Class<VR128X>))  [2.01;2.01]
		 Successful, latency: 2.01

-----VALIGNQZ256rri-----
	VALIGNQZ256rri(1(Class<VR256X>) -> 0(Class<VR256X>))  [3.02;3.02]
		 Successful, latency: 3.02
	VALIGNQZ256rri(2(Class<VR256X>) -> 0(Class<VR256X>))  [3.03;3.03]
		 Successful, latency: 3.03

-----VALIGNQZ256rrik-----
	VALIGNQZ256rrik(1(Class<VR256X>) -> 0(Class<VR256X>))  [3.04;3.04]
		 Successful, latency: 3.04
	VALIGNQZ256rrik(3(Class<VR256X>) -> 0(Class<VR256X>))  [3.03;3.03]
		 Successful, latency: 3.03
	VALIGNQZ256rrik(4(Class<VR256X>) -> 0(Class<VR256X>))  [3.04;3.04]
		 Successful, latency: 3.04

-----VALIGNQZ256rrikz-----
	VALIGNQZ256rrikz(2(Class<VR256X>) -> 0(Class<VR256X>))  [3.03;3.03]
		 Successful, latency: 3.03
	VALIGNQZ256rrikz(3(Class<VR256X>) -> 0(Class<VR256X>))  [3.03;3.03]
		 Successful, latency: 3.03

-----VALIGNQZrri-----
	VALIGNQZrri(1(Class<VR512>) -> 0(Class<VR512>))  [4.04;4.04]
		 Successful, latency: 4.04
	VALIGNQZrri(2(Class<VR512>) -> 0(Class<VR512>))  [4.03;4.03]
		 Successful, latency: 4.03

-----VALIGNQZrrik-----
	VALIGNQZrrik(1(Class<VR512>) -> 0(Class<VR512>))  [4.07;4.07]
		 Successful, latency: 4.07
	VALIGNQZrrik(3(Class<VR512>) -> 0(Class<VR512>))  [4.06;4.06]
		 Successful, latency: 4.06
	VALIGNQZrrik(4(Class<VR512>) -> 0(Class<VR512>))  [4.04;4.04]
		 Successful, latency: 4.04

-----VALIGNQZrrikz-----
	VALIGNQZrrikz(2(Class<VR512>) -> 0(Class<VR512>))  [4.04;4.04]
		 Successful, latency: 4.04
	VALIGNQZrrikz(3(Class<VR512>) -> 0(Class<VR512>))  [4.06;4.06]
		 Successful, latency: 4.06

-----VANDNPDYrr-----
	VANDNPDYrr(1(Class<VR256>) -> 0(Class<VR256>))  [1.01;1.01]
		 Successful, latency: 1.01
	VANDNPDYrr(2(Class<VR256>) -> 0(Class<VR256>))  [1.02;1.02]
		 Successful, latency: 1.02

-----VANDNPDZ128rr-----
	VANDNPDZ128rr(1(Class<VR128X>) -> 0(Class<VR128X>))  [1.01;1.01]
		 Successful, latency: 1.01
	VANDNPDZ128rr(2(Class<VR128X>) -> 0(Class<VR128X>))  [1.01;1.01]
		 Successful, latency: 1.01

-----VANDNPDZ128rrk-----
	VANDNPDZ128rrk(1(Class<VR128X>) -> 0(Class<VR128X>))  [1.02;1.02]
		 Successful, latency: 1.02
	VANDNPDZ128rrk(3(Class<VR128X>) -> 0(Class<VR128X>))  [1;1]
		 Successful, latency: 1
	VANDNPDZ128rrk(4(Class<VR128X>) -> 0(Class<VR128X>))  [1.01;1.01]
		 Successful, latency: 1.01

-----VANDNPDZ128rrkz-----
	VANDNPDZ128rrkz(2(Class<VR128X>) -> 0(Class<VR128X>))  [1;1]
		 Successful, latency: 1
	VANDNPDZ128rrkz(3(Class<VR128X>) -> 0(Class<VR128X>))  [1;1]
		 Successful, latency: 1

-----VANDNPDZ256rr-----
	VANDNPDZ256rr(1(Class<VR256X>) -> 0(Class<VR256X>))  [1.02;1.02]
		 Successful, latency: 1.02
	VANDNPDZ256rr(2(Class<VR256X>) -> 0(Class<VR256X>))  [1.01;1.01]
		 Successful, latency: 1.01

-----VANDNPDZ256rrk-----
	VANDNPDZ256rrk(1(Class<VR256X>) -> 0(Class<VR256X>))  [1.02;1.02]
		 Successful, latency: 1.02
	VANDNPDZ256rrk(3(Class<VR256X>) -> 0(Class<VR256X>))  [1.01;1.01]
		 Successful, latency: 1.01
	VANDNPDZ256rrk(4(Class<VR256X>) -> 0(Class<VR256X>))  [0.998;0.998]
		 Successful, latency: 0.998

-----VANDNPDZ256rrkz-----
	VANDNPDZ256rrkz(2(Class<VR256X>) -> 0(Class<VR256X>))  [1;1]
		 Successful, latency: 1
	VANDNPDZ256rrkz(3(Class<VR256X>) -> 0(Class<VR256X>))  [1.01;1.01]
		 Successful, latency: 1.01

-----VANDNPDZrr-----
	VANDNPDZrr(1(Class<VR512>) -> 0(Class<VR512>))  [1.01;1.01]
		 Successful, latency: 1.01
	VANDNPDZrr(2(Class<VR512>) -> 0(Class<VR512>))  [1.02;1.02]
		 Successful, latency: 1.02

-----VANDNPDZrrk-----
	VANDNPDZrrk(1(Class<VR512>) -> 0(Class<VR512>))  [1.02;1.02]
		 Successful, latency: 1.02
	VANDNPDZrrk(3(Class<VR512>) -> 0(Class<VR512>))  [1.01;1.01]
		 Successful, latency: 1.01
	VANDNPDZrrk(4(Class<VR512>) -> 0(Class<VR512>))  [1.01;1.01]
		 Successful, latency: 1.01

-----VANDNPDZrrkz-----
	VANDNPDZrrkz(2(Class<VR512>) -> 0(Class<VR512>))  [1;1]
		 Successful, latency: 1
	VANDNPDZrrkz(3(Class<VR512>) -> 0(Class<VR512>))  [1.01;1.01]
		 Successful, latency: 1.01

-----VANDNPDrr-----
	VANDNPDrr(1(Class<VR128>) -> 0(Class<VR128>))  [1;1]
		 Successful, latency: 1
	VANDNPDrr(2(Class<VR128>) -> 0(Class<VR128>))  [1.01;1.01]
		 Successful, latency: 1.01

-----VANDNPSYrr-----
	VANDNPSYrr(1(Class<VR256>) -> 0(Class<VR256>))  [1.01;1.01]
		 Successful, latency: 1.01
	VANDNPSYrr(2(Class<VR256>) -> 0(Class<VR256>))  [1.02;1.02]
		 Successful, latency: 1.02

-----VANDNPSZ128rr-----
	VANDNPSZ128rr(1(Class<VR128X>) -> 0(Class<VR128X>))  [1.01;1.01]
		 Successful, latency: 1.01
	VANDNPSZ128rr(2(Class<VR128X>) -> 0(Class<VR128X>))  [1.01;1.01]
		 Successful, latency: 1.01

-----VANDNPSZ128rrk-----
	VANDNPSZ128rrk(1(Class<VR128X>) -> 0(Class<VR128X>))  [1.01;1.01]
		 Successful, latency: 1.01
	VANDNPSZ128rrk(3(Class<VR128X>) -> 0(Class<VR128X>))  [1;1]
		 Successful, latency: 1
	VANDNPSZ128rrk(4(Class<VR128X>) -> 0(Class<VR128X>))  [1;1]
		 Successful, latency: 1

-----VANDNPSZ128rrkz-----
	VANDNPSZ128rrkz(2(Class<VR128X>) -> 0(Class<VR128X>))  [1.01;1.01]
		 Successful, latency: 1.01
	VANDNPSZ128rrkz(3(Class<VR128X>) -> 0(Class<VR128X>))  [1.01;1.01]
		 Successful, latency: 1.01

-----VANDNPSZ256rr-----
	VANDNPSZ256rr(1(Class<VR256X>) -> 0(Class<VR256X>))  [0.999;0.999]
		 Successful, latency: 0.999
	VANDNPSZ256rr(2(Class<VR256X>) -> 0(Class<VR256X>))  [1.02;1.02]
		 Successful, latency: 1.02

-----VANDNPSZ256rrk-----
	VANDNPSZ256rrk(1(Class<VR256X>) -> 0(Class<VR256X>))  [1.01;1.01]
		 Successful, latency: 1.01
	VANDNPSZ256rrk(3(Class<VR256X>) -> 0(Class<VR256X>))  [1.01;1.01]
		 Successful, latency: 1.01
	VANDNPSZ256rrk(4(Class<VR256X>) -> 0(Class<VR256X>))  [0.999;0.999]
		 Successful, latency: 0.999

-----VANDNPSZ256rrkz-----
	VANDNPSZ256rrkz(2(Class<VR256X>) -> 0(Class<VR256X>))  [1.02;1.02]
		 Successful, latency: 1.02
	VANDNPSZ256rrkz(3(Class<VR256X>) -> 0(Class<VR256X>))  [1.02;1.02]
		 Successful, latency: 1.02

-----VANDNPSZrr-----
	VANDNPSZrr(1(Class<VR512>) -> 0(Class<VR512>))  [1.01;1.01]
		 Successful, latency: 1.01
	VANDNPSZrr(2(Class<VR512>) -> 0(Class<VR512>))  [1.01;1.01]
		 Successful, latency: 1.01

-----VANDNPSZrrk-----
	VANDNPSZrrk(1(Class<VR512>) -> 0(Class<VR512>))  [1.01;1.01]
		 Successful, latency: 1.01
	VANDNPSZrrk(3(Class<VR512>) -> 0(Class<VR512>))  [1.01;1.01]
		 Successful, latency: 1.01
	VANDNPSZrrk(4(Class<VR512>) -> 0(Class<VR512>))  [0.998;0.998]
		 Successful, latency: 0.998

-----VANDNPSZrrkz-----
	VANDNPSZrrkz(2(Class<VR512>) -> 0(Class<VR512>))  [1;1]
		 Successful, latency: 1
	VANDNPSZrrkz(3(Class<VR512>) -> 0(Class<VR512>))  [1.01;1.01]
		 Successful, latency: 1.01

-----VANDNPSrr-----
	VANDNPSrr(1(Class<VR128>) -> 0(Class<VR128>))  [1.01;1.01]
		 Successful, latency: 1.01
	VANDNPSrr(2(Class<VR128>) -> 0(Class<VR128>))  [1.01;1.01]
		 Successful, latency: 1.01

-----VANDPDYrr-----
	VANDPDYrr(1(Class<VR256>) -> 0(Class<VR256>))  [1;1]
		 Successful, latency: 1
	VANDPDYrr(2(Class<VR256>) -> 0(Class<VR256>))  [1.01;1.01]
		 Successful, latency: 1.01

-----VANDPDZ128rr-----
	VANDPDZ128rr(1(Class<VR128X>) -> 0(Class<VR128X>))  [1.01;1.01]
		 Successful, latency: 1.01
	VANDPDZ128rr(2(Class<VR128X>) -> 0(Class<VR128X>))  [0.998;0.998]
		 Successful, latency: 0.998

-----VANDPDZ128rrk-----
	VANDPDZ128rrk(1(Class<VR128X>) -> 0(Class<VR128X>))  [1.01;1.01]
		 Successful, latency: 1.01
	VANDPDZ128rrk(3(Class<VR128X>) -> 0(Class<VR128X>))  [1.01;1.01]
		 Successful, latency: 1.01
	VANDPDZ128rrk(4(Class<VR128X>) -> 0(Class<VR128X>))  [1.01;1.01]
		 Successful, latency: 1.01

-----VANDPDZ128rrkz-----
	VANDPDZ128rrkz(2(Class<VR128X>) -> 0(Class<VR128X>))  [1;1]
		 Successful, latency: 1
	VANDPDZ128rrkz(3(Class<VR128X>) -> 0(Class<VR128X>))  [1;1]
		 Successful, latency: 1

-----VANDPDZ256rr-----
	VANDPDZ256rr(1(Class<VR256X>) -> 0(Class<VR256X>))  [1.01;1.01]
		 Successful, latency: 1.01
	VANDPDZ256rr(2(Class<VR256X>) -> 0(Class<VR256X>))  [1;1]
		 Successful, latency: 1

-----VANDPDZ256rrk-----
	VANDPDZ256rrk(1(Class<VR256X>) -> 0(Class<VR256X>))  [1.01;1.01]
		 Successful, latency: 1.01
	VANDPDZ256rrk(3(Class<VR256X>) -> 0(Class<VR256X>))  [1.01;1.01]
		 Successful, latency: 1.01
	VANDPDZ256rrk(4(Class<VR256X>) -> 0(Class<VR256X>))  [1.02;1.02]
		 Successful, latency: 1.02

-----VANDPDZ256rrkz-----
	VANDPDZ256rrkz(2(Class<VR256X>) -> 0(Class<VR256X>))  [1;1]
		 Successful, latency: 1
	VANDPDZ256rrkz(3(Class<VR256X>) -> 0(Class<VR256X>))  [1;1]
		 Successful, latency: 1

-----VANDPDZrr-----
	VANDPDZrr(1(Class<VR512>) -> 0(Class<VR512>))  [1.01;1.01]
		 Successful, latency: 1.01
	VANDPDZrr(2(Class<VR512>) -> 0(Class<VR512>))  [1;1]
		 Successful, latency: 1

-----VANDPDZrrk-----
	VANDPDZrrk(1(Class<VR512>) -> 0(Class<VR512>))  [1.01;1.01]
		 Successful, latency: 1.01
	VANDPDZrrk(3(Class<VR512>) -> 0(Class<VR512>))  [1.01;1.01]
		 Successful, latency: 1.01
	VANDPDZrrk(4(Class<VR512>) -> 0(Class<VR512>))  [1.02;1.02]
		 Successful, latency: 1.02

-----VANDPDZrrkz-----
	VANDPDZrrkz(2(Class<VR512>) -> 0(Class<VR512>))  [1.01;1.01]
		 Successful, latency: 1.01
	VANDPDZrrkz(3(Class<VR512>) -> 0(Class<VR512>))  [1.02;1.02]
		 Successful, latency: 1.02

-----VANDPDrr-----
	VANDPDrr(1(Class<VR128>) -> 0(Class<VR128>))  [1;1]
		 Successful, latency: 1
	VANDPDrr(2(Class<VR128>) -> 0(Class<VR128>))  [1.01;1.01]
		 Successful, latency: 1.01

-----VANDPSYrr-----
	VANDPSYrr(1(Class<VR256>) -> 0(Class<VR256>))  [1.01;1.01]
		 Successful, latency: 1.01
	VANDPSYrr(2(Class<VR256>) -> 0(Class<VR256>))  [1;1]
		 Successful, latency: 1

-----VANDPSZ128rr-----
	VANDPSZ128rr(1(Class<VR128X>) -> 0(Class<VR128X>))  [0.999;0.999]
		 Successful, latency: 0.999
	VANDPSZ128rr(2(Class<VR128X>) -> 0(Class<VR128X>))  [1.01;1.01]
		 Successful, latency: 1.01

-----VANDPSZ128rrk-----
	VANDPSZ128rrk(1(Class<VR128X>) -> 0(Class<VR128X>))  [1.01;1.01]
		 Successful, latency: 1.01
	VANDPSZ128rrk(3(Class<VR128X>) -> 0(Class<VR128X>))  [1.02;1.02]
		 Successful, latency: 1.02
	VANDPSZ128rrk(4(Class<VR128X>) -> 0(Class<VR128X>))  [1.01;1.01]
		 Successful, latency: 1.01

-----VANDPSZ128rrkz-----
	VANDPSZ128rrkz(2(Class<VR128X>) -> 0(Class<VR128X>))  [1.01;1.01]
		 Successful, latency: 1.01
	VANDPSZ128rrkz(3(Class<VR128X>) -> 0(Class<VR128X>))  [1;1]
		 Successful, latency: 1

-----VANDPSZ256rr-----
	VANDPSZ256rr(1(Class<VR256X>) -> 0(Class<VR256X>))  [1;1]
		 Successful, latency: 1
	VANDPSZ256rr(2(Class<VR256X>) -> 0(Class<VR256X>))  [1.01;1.01]
		 Successful, latency: 1.01

-----VANDPSZ256rrk-----
	VANDPSZ256rrk(1(Class<VR256X>) -> 0(Class<VR256X>))  [1.01;1.01]
		 Successful, latency: 1.01
	VANDPSZ256rrk(3(Class<VR256X>) -> 0(Class<VR256X>))  [1.01;1.01]
		 Successful, latency: 1.01
	VANDPSZ256rrk(4(Class<VR256X>) -> 0(Class<VR256X>))  [1.02;1.02]
		 Successful, latency: 1.02

-----VANDPSZ256rrkz-----
	VANDPSZ256rrkz(2(Class<VR256X>) -> 0(Class<VR256X>))  [1.01;1.01]
		 Successful, latency: 1.01
	VANDPSZ256rrkz(3(Class<VR256X>) -> 0(Class<VR256X>))  [1.01;1.01]
		 Successful, latency: 1.01

-----VANDPSZrr-----
	VANDPSZrr(1(Class<VR512>) -> 0(Class<VR512>))  [1.01;1.01]
		 Successful, latency: 1.01
	VANDPSZrr(2(Class<VR512>) -> 0(Class<VR512>))  [1.02;1.02]
		 Successful, latency: 1.02

-----VANDPSZrrk-----
	VANDPSZrrk(1(Class<VR512>) -> 0(Class<VR512>))  [1;1]
		 Successful, latency: 1
	VANDPSZrrk(3(Class<VR512>) -> 0(Class<VR512>))  [1.01;1.01]
		 Successful, latency: 1.01
	VANDPSZrrk(4(Class<VR512>) -> 0(Class<VR512>))  [1.02;1.02]
		 Successful, latency: 1.02

-----VANDPSZrrkz-----
	VANDPSZrrkz(2(Class<VR512>) -> 0(Class<VR512>))  [1.01;1.01]
		 Successful, latency: 1.01
	VANDPSZrrkz(3(Class<VR512>) -> 0(Class<VR512>))  [1.01;1.01]
		 Successful, latency: 1.01

-----VANDPSrr-----
	VANDPSrr(1(Class<VR128>) -> 0(Class<VR128>))  [0.999;0.999]
		 Successful, latency: 0.999
	VANDPSrr(2(Class<VR128>) -> 0(Class<VR128>))  [1.02;1.02]
		 Successful, latency: 1.02

-----VBLENDMPDZ128rr-----
	VBLENDMPDZ128rr(1(Class<VR128X>) -> 0(Class<VR128X>))  [1.01;1.01]
		 Successful, latency: 1.01
	VBLENDMPDZ128rr(2(Class<VR128X>) -> 0(Class<VR128X>))  [1.01;1.01]
		 Successful, latency: 1.01

-----VBLENDMPDZ128rrk-----
	VBLENDMPDZ128rrk(2(Class<VR128X>) -> 0(Class<VR128X>))  [1.01;1.01]
		 Successful, latency: 1.01
	VBLENDMPDZ128rrk(3(Class<VR128X>) -> 0(Class<VR128X>))  [1.01;1.01]
		 Successful, latency: 1.01

-----VBLENDMPDZ128rrkz-----
	VBLENDMPDZ128rrkz(2(Class<VR128X>) -> 0(Class<VR128X>))  [1.02;1.02]
		 Successful, latency: 1.02
	VBLENDMPDZ128rrkz(3(Class<VR128X>) -> 0(Class<VR128X>))  [1.01;1.01]
		 Successful, latency: 1.01

-----VBLENDMPDZ256rr-----
	VBLENDMPDZ256rr(1(Class<VR256X>) -> 0(Class<VR256X>))  [1;1]
		 Successful, latency: 1
	VBLENDMPDZ256rr(2(Class<VR256X>) -> 0(Class<VR256X>))  [1.01;1.01]
		 Successful, latency: 1.01

-----VBLENDMPDZ256rrk-----
	VBLENDMPDZ256rrk(2(Class<VR256X>) -> 0(Class<VR256X>))  [1.02;1.02]
		 Successful, latency: 1.02
	VBLENDMPDZ256rrk(3(Class<VR256X>) -> 0(Class<VR256X>))  [1;1]
		 Successful, latency: 1

-----VBLENDMPDZ256rrkz-----
	VBLENDMPDZ256rrkz(2(Class<VR256X>) -> 0(Class<VR256X>))  [1.01;1.01]
		 Successful, latency: 1.01
	VBLENDMPDZ256rrkz(3(Class<VR256X>) -> 0(Class<VR256X>))  [1.01;1.01]
		 Successful, latency: 1.01

-----VBLENDMPDZrr-----
	VBLENDMPDZrr(1(Class<VR512>) -> 0(Class<VR512>))  [1;1]
		 Successful, latency: 1
	VBLENDMPDZrr(2(Class<VR512>) -> 0(Class<VR512>))  [1.01;1.01]
		 Successful, latency: 1.01

-----VBLENDMPDZrrk-----
	VBLENDMPDZrrk(2(Class<VR512>) -> 0(Class<VR512>))  [1.02;1.02]
		 Successful, latency: 1.02
	VBLENDMPDZrrk(3(Class<VR512>) -> 0(Class<VR512>))  [1;1]
		 Successful, latency: 1

-----VBLENDMPDZrrkz-----
	VBLENDMPDZrrkz(2(Class<VR512>) -> 0(Class<VR512>))  [1.01;1.01]
		 Successful, latency: 1.01
	VBLENDMPDZrrkz(3(Class<VR512>) -> 0(Class<VR512>))  [1.01;1.01]
		 Successful, latency: 1.01

-----VBLENDMPSZ128rr-----
	VBLENDMPSZ128rr(1(Class<VR128X>) -> 0(Class<VR128X>))  [1.01;1.01]
		 Successful, latency: 1.01
	VBLENDMPSZ128rr(2(Class<VR128X>) -> 0(Class<VR128X>))  [1.01;1.01]
		 Successful, latency: 1.01

-----VBLENDMPSZ128rrk-----
	VBLENDMPSZ128rrk(2(Class<VR128X>) -> 0(Class<VR128X>))  [1.01;1.01]
		 Successful, latency: 1.01
	VBLENDMPSZ128rrk(3(Class<VR128X>) -> 0(Class<VR128X>))  [1.01;1.01]
		 Successful, latency: 1.01

-----VBLENDMPSZ128rrkz-----
	VBLENDMPSZ128rrkz(2(Class<VR128X>) -> 0(Class<VR128X>))  [1.01;1.01]
		 Successful, latency: 1.01
	VBLENDMPSZ128rrkz(3(Class<VR128X>) -> 0(Class<VR128X>))  [1.01;1.01]
		 Successful, latency: 1.01

-----VBLENDMPSZ256rr-----
	VBLENDMPSZ256rr(1(Class<VR256X>) -> 0(Class<VR256X>))  [1.02;1.02]
		 Successful, latency: 1.02
	VBLENDMPSZ256rr(2(Class<VR256X>) -> 0(Class<VR256X>))  [0.999;0.999]
		 Successful, latency: 0.999

-----VBLENDMPSZ256rrk-----
	VBLENDMPSZ256rrk(2(Class<VR256X>) -> 0(Class<VR256X>))  [1.02;1.02]
		 Successful, latency: 1.02
	VBLENDMPSZ256rrk(3(Class<VR256X>) -> 0(Class<VR256X>))  [1;1]
		 Successful, latency: 1

-----VBLENDMPSZ256rrkz-----
	VBLENDMPSZ256rrkz(2(Class<VR256X>) -> 0(Class<VR256X>))  [1.01;1.01]
		 Successful, latency: 1.01
	VBLENDMPSZ256rrkz(3(Class<VR256X>) -> 0(Class<VR256X>))  [1.01;1.01]
		 Successful, latency: 1.01

-----VBLENDMPSZrr-----
	VBLENDMPSZrr(1(Class<VR512>) -> 0(Class<VR512>))  [0.998;0.998]
		 Successful, latency: 0.998
	VBLENDMPSZrr(2(Class<VR512>) -> 0(Class<VR512>))  [1.01;1.01]
		 Successful, latency: 1.01

-----VBLENDMPSZrrk-----
	VBLENDMPSZrrk(2(Class<VR512>) -> 0(Class<VR512>))  [1.01;1.01]
		 Successful, latency: 1.01
	VBLENDMPSZrrk(3(Class<VR512>) -> 0(Class<VR512>))  [1.02;1.02]
		 Successful, latency: 1.02

-----VBLENDMPSZrrkz-----
	VBLENDMPSZrrkz(2(Class<VR512>) -> 0(Class<VR512>))  [1;1]
		 Successful, latency: 1
	VBLENDMPSZrrkz(3(Class<VR512>) -> 0(Class<VR512>))  [1.01;1.01]
		 Successful, latency: 1.01

-----VBLENDPDYrri-----
	VBLENDPDYrri(1(Class<VR256>) -> 0(Class<VR256>))  [1.01;1.01]
		 Successful, latency: 1.01
	VBLENDPDYrri(2(Class<VR256>) -> 0(Class<VR256>))  [1;1]
		 Successful, latency: 1

-----VBLENDPDrri-----
	VBLENDPDrri(1(Class<VR128>) -> 0(Class<VR128>))  [1.01;1.01]
		 Successful, latency: 1.01
	VBLENDPDrri(2(Class<VR128>) -> 0(Class<VR128>))  [1.01;1.01]
		 Successful, latency: 1.01

-----VBLENDPSYrri-----
	VBLENDPSYrri(1(Class<VR256>) -> 0(Class<VR256>))  [1.01;1.01]
		 Successful, latency: 1.01
	VBLENDPSYrri(2(Class<VR256>) -> 0(Class<VR256>))  [1;1]
		 Successful, latency: 1

-----VBLENDPSrri-----
	VBLENDPSrri(1(Class<VR128>) -> 0(Class<VR128>))  [1.01;1.01]
		 Successful, latency: 1.01
	VBLENDPSrri(2(Class<VR128>) -> 0(Class<VR128>))  [1.01;1.01]
		 Successful, latency: 1.01

-----VBLENDVPDYrrr-----
	VBLENDVPDYrrr(1(Class<VR256>) -> 0(Class<VR256>))  [1.01;1.01]
		 Successful, latency: 1.01
	VBLENDVPDYrrr(2(Class<VR256>) -> 0(Class<VR256>))  [1.01;1.01]
		 Successful, latency: 1.01
	VBLENDVPDYrrr(3(Class<VR256>) -> 0(Class<VR256>))  [0.999;0.999]
		 Successful, latency: 0.999

-----VBLENDVPDrrr-----
	VBLENDVPDrrr(1(Class<VR128>) -> 0(Class<VR128>))  [1.01;1.01]
		 Successful, latency: 1.01
	VBLENDVPDrrr(2(Class<VR128>) -> 0(Class<VR128>))  [1.01;1.01]
		 Successful, latency: 1.01
	VBLENDVPDrrr(3(Class<VR128>) -> 0(Class<VR128>))  [1;1]
		 Successful, latency: 1

-----VBLENDVPSYrrr-----
	VBLENDVPSYrrr(1(Class<VR256>) -> 0(Class<VR256>))  [1;1]
		 Successful, latency: 1
	VBLENDVPSYrrr(2(Class<VR256>) -> 0(Class<VR256>))  [0.999;0.999]
		 Successful, latency: 0.999
	VBLENDVPSYrrr(3(Class<VR256>) -> 0(Class<VR256>))  [1.02;1.02]
		 Successful, latency: 1.02

-----VBLENDVPSrrr-----
	VBLENDVPSrrr(1(Class<VR128>) -> 0(Class<VR128>))  [1.01;1.01]
		 Successful, latency: 1.01
	VBLENDVPSrrr(2(Class<VR128>) -> 0(Class<VR128>))  [1.01;1.01]
		 Successful, latency: 1.01
	VBLENDVPSrrr(3(Class<VR128>) -> 0(Class<VR128>))  [1;1]
		 Successful, latency: 1

-----VBROADCASTF32X2Z256rr-----
	VBROADCASTF32X2Z256rr(1(Class<VR128X>) -> 0(Class<VR256X>))  [0.974;3]
		Dependencies:
			VEXTRACTI32X4Z256rrik(3(Class<VR256X>) -> 0(Class<VR128X>)) 
			VBROADCASTF32X2Z256rr(1(Class<VR128X>) -> 0(Class<VR256X>)) 
		Combined result: 4.02 cycles

-----VBROADCASTF32X2Z256rrk-----
	VBROADCASTF32X2Z256rrk(1(Class<VR256X>) -> 0(Class<VR256X>))  [1.01;1.01]
		 Successful, latency: 1.01
	VBROADCASTF32X2Z256rrk(3(Class<VR128X>) -> 0(Class<VR256X>))  [0.986;3.01]
		Dependencies:
			VEXTRACTI32X4Z256rrik(3(Class<VR256X>) -> 0(Class<VR128X>)) 
			VBROADCASTF32X2Z256rr(1(Class<VR128X>) -> 0(Class<VR256X>)) 
		Combined result: 4.03 cycles

-----VBROADCASTF32X2Z256rrkz-----
	VBROADCASTF32X2Z256rrkz(2(Class<VR128X>) -> 0(Class<VR256X>))  [0.991;3.01]
		Dependencies:
			VEXTRACTI32X4Z256rrik(3(Class<VR256X>) -> 0(Class<VR128X>)) 
			VBROADCASTF32X2Z256rr(1(Class<VR128X>) -> 0(Class<VR256X>)) 
		Combined result: 4.03 cycles

-----VBROADCASTF32X2Zrr-----
	VBROADCASTF32X2Zrr(1(Class<VR128X>) -> 0(Class<VR512>))  [1.01;4.03]
		Dependencies:
			VEXTRACTF64X2Zrri(1(Class<VR512>) -> 0(Class<VR128X>)) 
			VINSERTF32X4Zrri(2(Class<VR128X>) -> 0(Class<VR512>)) 
		Combined result: 5.06 cycles

-----VBROADCASTF32X2Zrrk-----
	VBROADCASTF32X2Zrrk(1(Class<VR512>) -> 0(Class<VR512>))  [1;1]
		 Successful, latency: 1
	VBROADCASTF32X2Zrrk(3(Class<VR128X>) -> 0(Class<VR512>))  [1.02;4.04]
		Dependencies:
			VEXTRACTF64X2Zrri(1(Class<VR512>) -> 0(Class<VR128X>)) 
			VINSERTF32X4Zrri(2(Class<VR128X>) -> 0(Class<VR512>)) 
		Combined result: 5.07 cycles

-----VBROADCASTF32X2Zrrkz-----
	VBROADCASTF32X2Zrrkz(2(Class<VR128X>) -> 0(Class<VR512>))  [0.975;4]
		Dependencies:
			VEXTRACTF64X2Zrri(1(Class<VR512>) -> 0(Class<VR128X>)) 
			VINSERTF32X4Zrri(2(Class<VR128X>) -> 0(Class<VR512>)) 
		Combined result: 5.03 cycles

-----VBROADCASTI32X2Z128rr-----
	VBROADCASTI32X2Z128rr(1(Class<VR128X>) -> 0(Class<VR128X>))  [2.03;2.03]
		 Successful, latency: 2.03

-----VBROADCASTI32X2Z128rrk-----
	VBROADCASTI32X2Z128rrk(1(Class<VR128X>) -> 0(Class<VR128X>))  [2.01;2.01]
		 Successful, latency: 2.01
	VBROADCASTI32X2Z128rrk(3(Class<VR128X>) -> 0(Class<VR128X>))  [2.02;2.02]
		 Successful, latency: 2.02

-----VBROADCASTI32X2Z128rrkz-----
	VBROADCASTI32X2Z128rrkz(2(Class<VR128X>) -> 0(Class<VR128X>))  [2.03;2.03]
		 Successful, latency: 2.03

-----VBROADCASTI32X2Z256rr-----
	VBROADCASTI32X2Z256rr(1(Class<VR128X>) -> 0(Class<VR256X>))  [0.996;3.02]
		Dependencies:
			VEXTRACTI32X4Z256rrik(3(Class<VR256X>) -> 0(Class<VR128X>)) 
			VBROADCASTF32X2Z256rr(1(Class<VR128X>) -> 0(Class<VR256X>)) 
		Combined result: 4.04 cycles

-----VBROADCASTI32X2Z256rrk-----
	VBROADCASTI32X2Z256rrk(1(Class<VR256X>) -> 0(Class<VR256X>))  [1;1]
		 Successful, latency: 1
	VBROADCASTI32X2Z256rrk(3(Class<VR128X>) -> 0(Class<VR256X>))  [0.99;3.01]
		Dependencies:
			VEXTRACTI32X4Z256rrik(3(Class<VR256X>) -> 0(Class<VR128X>)) 
			VBROADCASTF32X2Z256rr(1(Class<VR128X>) -> 0(Class<VR256X>)) 
		Combined result: 4.03 cycles

-----VBROADCASTI32X2Z256rrkz-----
	VBROADCASTI32X2Z256rrkz(2(Class<VR128X>) -> 0(Class<VR256X>))  [1;3.02]
		Dependencies:
			VEXTRACTI32X4Z256rrik(3(Class<VR256X>) -> 0(Class<VR128X>)) 
			VBROADCASTF32X2Z256rr(1(Class<VR128X>) -> 0(Class<VR256X>)) 
		Combined result: 4.04 cycles

-----VBROADCASTI32X2Zrr-----
	VBROADCASTI32X2Zrr(1(Class<VR128X>) -> 0(Class<VR512>))  [0.989;4.01]
		Dependencies:
			VEXTRACTF64X2Zrri(1(Class<VR512>) -> 0(Class<VR128X>)) 
			VINSERTF32X4Zrri(2(Class<VR128X>) -> 0(Class<VR512>)) 
		Combined result: 5.04 cycles

-----VBROADCASTI32X2Zrrk-----
	VBROADCASTI32X2Zrrk(1(Class<VR512>) -> 0(Class<VR512>))  [1.01;1.01]
		 Successful, latency: 1.01
	VBROADCASTI32X2Zrrk(3(Class<VR128X>) -> 0(Class<VR512>))  [1.01;4.04]
		Dependencies:
			VEXTRACTF64X2Zrri(1(Class<VR512>) -> 0(Class<VR128X>)) 
			VINSERTF32X4Zrri(2(Class<VR128X>) -> 0(Class<VR512>)) 
		Combined result: 5.06 cycles

-----VBROADCASTI32X2Zrrkz-----
	VBROADCASTI32X2Zrrkz(2(Class<VR128X>) -> 0(Class<VR512>))  [1.02;4.04]
		Dependencies:
			VEXTRACTF64X2Zrri(1(Class<VR512>) -> 0(Class<VR128X>)) 
			VINSERTF32X4Zrri(2(Class<VR128X>) -> 0(Class<VR512>)) 
		Combined result: 5.07 cycles

-----VBROADCASTSDYrr-----
	VBROADCASTSDYrr(1(Class<VR128>) -> 0(Class<VR256>))  [0.994;3.03]
		Dependencies:
			VEXTRACTF128rri(1(Class<VR256>) -> 0(Class<VR128>)) 
			VPBROADCASTWYrr(1(Class<VR128>) -> 0(Class<VR256>)) 
		Combined result: 4.04 cycles

-----VBROADCASTSDZ256rr-----
	VBROADCASTSDZ256rr(1(Class<VR128X>) -> 0(Class<VR256X>))  [0.982;3]
		Dependencies:
			VEXTRACTI32X4Z256rrik(3(Class<VR256X>) -> 0(Class<VR128X>)) 
			VBROADCASTF32X2Z256rr(1(Class<VR128X>) -> 0(Class<VR256X>)) 
		Combined result: 4.03 cycles

-----VBROADCASTSDZ256rrk-----
	VBROADCASTSDZ256rrk(1(Class<VR256X>) -> 0(Class<VR256X>))  [1;1]
		 Successful, latency: 1
	VBROADCASTSDZ256rrk(3(Class<VR128X>) -> 0(Class<VR256X>))  [1.02;3.04]
		Dependencies:
			VEXTRACTI32X4Z256rrik(3(Class<VR256X>) -> 0(Class<VR128X>)) 
			VBROADCASTF32X2Z256rr(1(Class<VR128X>) -> 0(Class<VR256X>)) 
		Combined result: 4.06 cycles

-----VBROADCASTSDZ256rrkz-----
	VBROADCASTSDZ256rrkz(2(Class<VR128X>) -> 0(Class<VR256X>))  [1;3.02]
		Dependencies:
			VEXTRACTI32X4Z256rrik(3(Class<VR256X>) -> 0(Class<VR128X>)) 
			VBROADCASTF32X2Z256rr(1(Class<VR128X>) -> 0(Class<VR256X>)) 
		Combined result: 4.04 cycles

-----VBROADCASTSDZrr-----
	VBROADCASTSDZrr(1(Class<VR128X>) -> 0(Class<VR512>))  [0.996;4.02]
		Dependencies:
			VEXTRACTF64X2Zrri(1(Class<VR512>) -> 0(Class<VR128X>)) 
			VINSERTF32X4Zrri(2(Class<VR128X>) -> 0(Class<VR512>)) 
		Combined result: 5.05 cycles

-----VBROADCASTSDZrrk-----
	VBROADCASTSDZrrk(1(Class<VR512>) -> 0(Class<VR512>))  [1;1]
		 Successful, latency: 1
	VBROADCASTSDZrrk(3(Class<VR128X>) -> 0(Class<VR512>))  [1.03;4.05]
		Dependencies:
			VEXTRACTF64X2Zrri(1(Class<VR512>) -> 0(Class<VR128X>)) 
			VINSERTF32X4Zrri(2(Class<VR128X>) -> 0(Class<VR512>)) 
		Combined result: 5.08 cycles

-----VBROADCASTSDZrrkz-----
	VBROADCASTSDZrrkz(2(Class<VR128X>) -> 0(Class<VR512>))  [0.989;4.01]
		Dependencies:
			VEXTRACTF64X2Zrri(1(Class<VR512>) -> 0(Class<VR128X>)) 
			VINSERTF32X4Zrri(2(Class<VR128X>) -> 0(Class<VR512>)) 
		Combined result: 5.04 cycles

-----VBROADCASTSSYrr-----
	VBROADCASTSSYrr(1(Class<VR128>) -> 0(Class<VR256>))  [0.992;3.02]
		Dependencies:
			VEXTRACTF128rri(1(Class<VR256>) -> 0(Class<VR128>)) 
			VPBROADCASTWYrr(1(Class<VR128>) -> 0(Class<VR256>)) 
		Combined result: 4.04 cycles

-----VBROADCASTSSZ128rr-----
	VBROADCASTSSZ128rr(1(Class<VR128X>) -> 0(Class<VR128X>))  [1.02;1.02]
		 Successful, latency: 1.02

-----VBROADCASTSSZ128rrk-----
	VBROADCASTSSZ128rrk(1(Class<VR128X>) -> 0(Class<VR128X>))  [1;1]
		 Successful, latency: 1
	VBROADCASTSSZ128rrk(3(Class<VR128X>) -> 0(Class<VR128X>))  [1.02;1.02]
		 Successful, latency: 1.02

-----VBROADCASTSSZ128rrkz-----
	VBROADCASTSSZ128rrkz(2(Class<VR128X>) -> 0(Class<VR128X>))  [1.01;1.01]
		 Successful, latency: 1.01

-----VBROADCASTSSZ256rr-----
	VBROADCASTSSZ256rr(1(Class<VR128X>) -> 0(Class<VR256X>))  [0.995;3.02]
		Dependencies:
			VEXTRACTI32X4Z256rrik(3(Class<VR256X>) -> 0(Class<VR128X>)) 
			VBROADCASTF32X2Z256rr(1(Class<VR128X>) -> 0(Class<VR256X>)) 
		Combined result: 4.04 cycles

-----VBROADCASTSSZ256rrk-----
	VBROADCASTSSZ256rrk(1(Class<VR256X>) -> 0(Class<VR256X>))  [1.01;1.01]
		 Successful, latency: 1.01
	VBROADCASTSSZ256rrk(3(Class<VR128X>) -> 0(Class<VR256X>))  [0.98;3]
		Dependencies:
			VEXTRACTI32X4Z256rrik(3(Class<VR256X>) -> 0(Class<VR128X>)) 
			VBROADCASTF32X2Z256rr(1(Class<VR128X>) -> 0(Class<VR256X>)) 
		Combined result: 4.02 cycles

-----VBROADCASTSSZ256rrkz-----
	VBROADCASTSSZ256rrkz(2(Class<VR128X>) -> 0(Class<VR256X>))  [0.992;3.01]
		Dependencies:
			VEXTRACTI32X4Z256rrik(3(Class<VR256X>) -> 0(Class<VR128X>)) 
			VBROADCASTF32X2Z256rr(1(Class<VR128X>) -> 0(Class<VR256X>)) 
		Combined result: 4.04 cycles

-----VBROADCASTSSZrr-----
	VBROADCASTSSZrr(1(Class<VR128X>) -> 0(Class<VR512>))  [1.02;4.04]
		Dependencies:
			VEXTRACTF64X2Zrri(1(Class<VR512>) -> 0(Class<VR128X>)) 
			VINSERTF32X4Zrri(2(Class<VR128X>) -> 0(Class<VR512>)) 
		Combined result: 5.07 cycles

-----VBROADCASTSSZrrk-----
	VBROADCASTSSZrrk(1(Class<VR512>) -> 0(Class<VR512>))  [1;1]
		 Successful, latency: 1
	VBROADCASTSSZrrk(3(Class<VR128X>) -> 0(Class<VR512>))  [1.01;4.03]
		Dependencies:
			VEXTRACTF64X2Zrri(1(Class<VR512>) -> 0(Class<VR128X>)) 
			VINSERTF32X4Zrri(2(Class<VR128X>) -> 0(Class<VR512>)) 
		Combined result: 5.06 cycles

-----VBROADCASTSSZrrkz-----
	VBROADCASTSSZrrkz(2(Class<VR128X>) -> 0(Class<VR512>))  [0.989;4.01]
		Dependencies:
			VEXTRACTF64X2Zrri(1(Class<VR512>) -> 0(Class<VR128X>)) 
			VINSERTF32X4Zrri(2(Class<VR128X>) -> 0(Class<VR512>)) 
		Combined result: 5.04 cycles

-----VBROADCASTSSrr-----
	VBROADCASTSSrr(1(Class<VR128>) -> 0(Class<VR128>))  [1;1]
		 Successful, latency: 1

-----VCMPBF16Z128rri-----
	0x138383bb6370
		ERROR_ASSEMBLY, this instruction cannot be measured on this platform

-----VCMPBF16Z128rrik-----
	0x138383bb6418
		ERROR_ASSEMBLY, this instruction cannot be measured on this platform

-----VCMPBF16Z256rri-----
	0x138383bb6488
		ERROR_ASSEMBLY, this instruction cannot be measured on this platform

-----VCMPBF16Z256rrik-----
	0x138383bb6530
		ERROR_ASSEMBLY, this instruction cannot be measured on this platform

-----VCMPBF16Zrri-----
	0x138383bb65a0
		ERROR_ASSEMBLY, this instruction cannot be measured on this platform

-----VCMPBF16Zrrik-----
	0x138383bb6648
		ERROR_ASSEMBLY, this instruction cannot be measured on this platform

-----VCMPPDYrri-----
	VCMPPDYrri(1(Class<VR256>) -> 0(Class<VR256>))  [2.02;2.02]
		 Successful, latency: 2.02
	VCMPPDYrri(2(Class<VR256>) -> 0(Class<VR256>))  [2.02;2.02]
		 Successful, latency: 2.02

-----VCMPPDZ128rri-----
	VCMPPDZ128rri(1(Class<VR128X>) -> 0(Class<VK2>))  [1.04;3.06]
		Dependencies:
			VPCMPQZ128rri(2(Class<VR128X>) -> 0(Class<VK2>)) 
			VPMOVM2QZ128rk(1(Class<VK2>) -> 0(Class<VR128X>)) 
		Combined result: 4.06 cycles
	VCMPPDZ128rri(2(Class<VR128X>) -> 0(Class<VK2>))  [1.01;3.03]
		Dependencies:
			VPCMPQZ128rri(2(Class<VR128X>) -> 0(Class<VK2>)) 
			VPMOVM2QZ128rk(1(Class<VK2>) -> 0(Class<VR128X>)) 
		Combined result: 4.03 cycles

-----VCMPPDZ128rrik-----
	VCMPPDZ128rrik(2(Class<VR128X>) -> 0(Class<VK2>))  [1.01;3.03]
		Dependencies:
			VPCMPQZ128rri(2(Class<VR128X>) -> 0(Class<VK2>)) 
			VPMOVM2QZ128rk(1(Class<VK2>) -> 0(Class<VR128X>)) 
		Combined result: 4.03 cycles
	VCMPPDZ128rrik(3(Class<VR128X>) -> 0(Class<VK2>))  [1.06;3.08]
		Dependencies:
			VPCMPQZ128rri(2(Class<VR128X>) -> 0(Class<VK2>)) 
			VPMOVM2QZ128rk(1(Class<VK2>) -> 0(Class<VR128X>)) 
		Combined result: 4.08 cycles

-----VCMPPDZ256rri-----
	VCMPPDZ256rri(1(Class<VR256X>) -> 0(Class<VK4>))  [1.01;4.04]
		Dependencies:
			VPTESTNMQZ256rrk(2(Class<VR256X>) -> 0(Class<VK4>)) 
			VPMOVM2QZ256rk(1(Class<VK4>) -> 0(Class<VR256X>)) 
		Combined result: 5.04 cycles
	VCMPPDZ256rri(2(Class<VR256X>) -> 0(Class<VK4>))  [1.02;4.05]
		Dependencies:
			VPTESTNMQZ256rrk(2(Class<VR256X>) -> 0(Class<VK4>)) 
			VPMOVM2QZ256rk(1(Class<VK4>) -> 0(Class<VR256X>)) 
		Combined result: 5.05 cycles

-----VCMPPDZ256rrik-----
	VCMPPDZ256rrik(2(Class<VR256X>) -> 0(Class<VK4>))  [1.02;4.04]
		Dependencies:
			VPTESTNMQZ256rrk(2(Class<VR256X>) -> 0(Class<VK4>)) 
			VPMOVM2QZ256rk(1(Class<VK4>) -> 0(Class<VR256X>)) 
		Combined result: 5.04 cycles
	VCMPPDZ256rrik(3(Class<VR256X>) -> 0(Class<VK4>))  [1.01;4.04]
		Dependencies:
			VPTESTNMQZ256rrk(2(Class<VR256X>) -> 0(Class<VK4>)) 
			VPMOVM2QZ256rk(1(Class<VK4>) -> 0(Class<VR256X>)) 
		Combined result: 5.04 cycles

-----VCMPPDZrri-----
	VCMPPDZrri(1(Class<VR512>) -> 0(Class<VK8>))  [1.04;5.15]
		Dependencies:
			VPCMPQZrrik(2(Class<VR512>) -> 0(Class<VK8>)) 
			VPMOVM2QZrk(1(Class<VK8>) -> 0(Class<VR512>)) 
		Combined result: 6.15 cycles
	VCMPPDZrri(2(Class<VR512>) -> 0(Class<VK8>))  [1.11;5.21]
		Dependencies:
			VPCMPQZrrik(2(Class<VR512>) -> 0(Class<VK8>)) 
			VPMOVM2QZrk(1(Class<VK8>) -> 0(Class<VR512>)) 
		Combined result: 6.21 cycles

-----VCMPPDZrrib-----
	VCMPPDZrrib(1(Class<VR512>) -> 0(Class<VK8>))  [1.07;5.18]
		Dependencies:
			VPCMPQZrrik(2(Class<VR512>) -> 0(Class<VK8>)) 
			VPMOVM2QZrk(1(Class<VK8>) -> 0(Class<VR512>)) 
		Combined result: 6.18 cycles
	VCMPPDZrrib(2(Class<VR512>) -> 0(Class<VK8>))  [1.05;5.16]
		Dependencies:
			VPCMPQZrrik(2(Class<VR512>) -> 0(Class<VK8>)) 
			VPMOVM2QZrk(1(Class<VK8>) -> 0(Class<VR512>)) 
		Combined result: 6.16 cycles

-----VCMPPDZrribk-----
	VCMPPDZrribk(2(Class<VR512>) -> 0(Class<VK8>))  [1.08;5.18]
		Dependencies:
			VPCMPQZrrik(2(Class<VR512>) -> 0(Class<VK8>)) 
			VPMOVM2QZrk(1(Class<VK8>) -> 0(Class<VR512>)) 
		Combined result: 6.18 cycles
	VCMPPDZrribk(3(Class<VR512>) -> 0(Class<VK8>))  [1.05;5.16]
		Dependencies:
			VPCMPQZrrik(2(Class<VR512>) -> 0(Class<VK8>)) 
			VPMOVM2QZrk(1(Class<VK8>) -> 0(Class<VR512>)) 
		Combined result: 6.16 cycles

-----VCMPPDZrrik-----
	VCMPPDZrrik(2(Class<VR512>) -> 0(Class<VK8>))  [1.05;5.15]
		Dependencies:
			VPCMPQZrrik(2(Class<VR512>) -> 0(Class<VK8>)) 
			VPMOVM2QZrk(1(Class<VK8>) -> 0(Class<VR512>)) 
		Combined result: 6.15 cycles
	VCMPPDZrrik(3(Class<VR512>) -> 0(Class<VK8>))  [1.05;5.16]
		Dependencies:
			VPCMPQZrrik(2(Class<VR512>) -> 0(Class<VK8>)) 
			VPMOVM2QZrk(1(Class<VK8>) -> 0(Class<VR512>)) 
		Combined result: 6.16 cycles

-----VCMPPDrri-----
	VCMPPDrri(1(Class<VR128>) -> 0(Class<VR128>))  [2.02;2.02]
		 Successful, latency: 2.02
	VCMPPDrri(2(Class<VR128>) -> 0(Class<VR128>))  [2.02;2.02]
		 Successful, latency: 2.02

-----VCMPPHZ128rri-----
	0x138383bb6fb0
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VCMPPHZ128rrik-----
	0x138383bb7090
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VCMPPHZ256rri-----
	0x138383bb7138
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VCMPPHZ256rrib-----
	0x138383bb71e0
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VCMPPHZ256rribk-----
	0x138383bb72c0
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VCMPPHZ256rrik-----
	0x138383bb73a0
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VCMPPHZrri-----
	0x138383bb7448
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VCMPPHZrrib-----
	0x138383bb74f0
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VCMPPHZrribk-----
	0x138383bb75d0
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VCMPPHZrrik-----
	0x138383bb76b0
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VCMPPSYrri-----
	VCMPPSYrri(1(Class<VR256>) -> 0(Class<VR256>))  [2.02;2.02]
		 Successful, latency: 2.02
	VCMPPSYrri(2(Class<VR256>) -> 0(Class<VR256>))  [2.02;2.02]
		 Successful, latency: 2.02

-----VCMPPSZ128rri-----
	VCMPPSZ128rri(1(Class<VR128X>) -> 0(Class<VK4>))  [1.02;3.05]
		Dependencies:
			VPCMPEQDZ128rr(2(Class<VR128X>) -> 0(Class<VK4>)) 
			VPMOVM2DZ128rk(1(Class<VK4>) -> 0(Class<VR128X>)) 
		Combined result: 4.05 cycles
	VCMPPSZ128rri(2(Class<VR128X>) -> 0(Class<VK4>))  [1;3.03]
		Dependencies:
			VPCMPEQDZ128rr(2(Class<VR128X>) -> 0(Class<VK4>)) 
			VPMOVM2DZ128rk(1(Class<VK4>) -> 0(Class<VR128X>)) 
		Combined result: 4.03 cycles

-----VCMPPSZ128rrik-----
	VCMPPSZ128rrik(2(Class<VR128X>) -> 0(Class<VK4>))  [1.03;3.05]
		Dependencies:
			VPCMPEQDZ128rr(2(Class<VR128X>) -> 0(Class<VK4>)) 
			VPMOVM2DZ128rk(1(Class<VK4>) -> 0(Class<VR128X>)) 
		Combined result: 4.05 cycles
	VCMPPSZ128rrik(3(Class<VR128X>) -> 0(Class<VK4>))  [1.03;3.05]
		Dependencies:
			VPCMPEQDZ128rr(2(Class<VR128X>) -> 0(Class<VK4>)) 
			VPMOVM2DZ128rk(1(Class<VK4>) -> 0(Class<VR128X>)) 
		Combined result: 4.05 cycles

-----VCMPPSZ256rri-----
	VCMPPSZ256rri(1(Class<VR256X>) -> 0(Class<VK8>))  [0.99;4.03]
		Dependencies:
			VCMPPSZ256rri(1(Class<VR256X>) -> 0(Class<VK8>)) 
			VPMOVM2DZ256rk(1(Class<VK8>) -> 0(Class<VR256X>)) 
		Combined result: 5.03 cycles
	VCMPPSZ256rri(2(Class<VR256X>) -> 0(Class<VK8>))  [1.01;4.05]
		Dependencies:
			VCMPPSZ256rri(1(Class<VR256X>) -> 0(Class<VK8>)) 
			VPMOVM2DZ256rk(1(Class<VK8>) -> 0(Class<VR256X>)) 
		Combined result: 5.05 cycles

-----VCMPPSZ256rrik-----
	VCMPPSZ256rrik(2(Class<VR256X>) -> 0(Class<VK8>))  [1;4.04]
		Dependencies:
			VCMPPSZ256rri(1(Class<VR256X>) -> 0(Class<VK8>)) 
			VPMOVM2DZ256rk(1(Class<VK8>) -> 0(Class<VR256X>)) 
		Combined result: 5.04 cycles
	VCMPPSZ256rrik(3(Class<VR256X>) -> 0(Class<VK8>))  [1.01;4.05]
		Dependencies:
			VCMPPSZ256rri(1(Class<VR256X>) -> 0(Class<VK8>)) 
			VPMOVM2DZ256rk(1(Class<VK8>) -> 0(Class<VR256X>)) 
		Combined result: 5.05 cycles

-----VCMPPSZrri-----
	VCMPPSZrri(1(Class<VR512>) -> 0(Class<VK16>))  [1.02;5.16]
		Dependencies:
			VPTESTNMDZrr(2(Class<VR512>) -> 0(Class<VK16>)) 
			VPMOVM2DZrk(1(Class<VK16>) -> 0(Class<VR512>)) 
		Combined result: 6.16 cycles
	VCMPPSZrri(2(Class<VR512>) -> 0(Class<VK16>))  [1.02;5.16]
		Dependencies:
			VPTESTNMDZrr(2(Class<VR512>) -> 0(Class<VK16>)) 
			VPMOVM2DZrk(1(Class<VK16>) -> 0(Class<VR512>)) 
		Combined result: 6.16 cycles

-----VCMPPSZrrib-----
	VCMPPSZrrib(1(Class<VR512>) -> 0(Class<VK16>))  [1.05;5.18]
		Dependencies:
			VPTESTNMDZrr(2(Class<VR512>) -> 0(Class<VK16>)) 
			VPMOVM2DZrk(1(Class<VK16>) -> 0(Class<VR512>)) 
		Combined result: 6.18 cycles
	VCMPPSZrrib(2(Class<VR512>) -> 0(Class<VK16>))  [1.03;5.16]
		Dependencies:
			VPTESTNMDZrr(2(Class<VR512>) -> 0(Class<VK16>)) 
			VPMOVM2DZrk(1(Class<VK16>) -> 0(Class<VR512>)) 
		Combined result: 6.16 cycles

-----VCMPPSZrribk-----
	VCMPPSZrribk(2(Class<VR512>) -> 0(Class<VK16>))  [1;5.14]
		Dependencies:
			VPTESTNMDZrr(2(Class<VR512>) -> 0(Class<VK16>)) 
			VPMOVM2DZrk(1(Class<VK16>) -> 0(Class<VR512>)) 
		Combined result: 6.14 cycles
	VCMPPSZrribk(3(Class<VR512>) -> 0(Class<VK16>))  [1.02;5.16]
		Dependencies:
			VPTESTNMDZrr(2(Class<VR512>) -> 0(Class<VK16>)) 
			VPMOVM2DZrk(1(Class<VK16>) -> 0(Class<VR512>)) 
		Combined result: 6.16 cycles

-----VCMPPSZrrik-----
	VCMPPSZrrik(2(Class<VR512>) -> 0(Class<VK16>))  [1;5.14]
		Dependencies:
			VPTESTNMDZrr(2(Class<VR512>) -> 0(Class<VK16>)) 
			VPMOVM2DZrk(1(Class<VK16>) -> 0(Class<VR512>)) 
		Combined result: 6.14 cycles
	VCMPPSZrrik(3(Class<VR512>) -> 0(Class<VK16>))  [0.97;5.1]
		Dependencies:
			VPTESTNMDZrr(2(Class<VR512>) -> 0(Class<VK16>)) 
			VPMOVM2DZrk(1(Class<VK16>) -> 0(Class<VR512>)) 
		Combined result: 6.1 cycles

-----VCMPPSrri-----
	VCMPPSrri(1(Class<VR128>) -> 0(Class<VR128>))  [2.01;2.01]
		 Successful, latency: 2.01
	VCMPPSrri(2(Class<VR128>) -> 0(Class<VR128>))  [2.03;2.03]
		 Successful, latency: 2.03

-----VCMPSDrri-----
	VCMPSDrri(1(Class<FR64>) -> 0(Class<FR64>))  [2.02;2.02]
		 Successful, latency: 2.02
	VCMPSDrri(2(Class<FR64>) -> 0(Class<FR64>))  [2.02;2.02]
		 Successful, latency: 2.02

-----VCMPSDrri_Int-----
	VCMPSDrri_Int(1(Class<VR128>) -> 0(Class<VR128>))  [2;2]
		 Successful, latency: 2
	VCMPSDrri_Int(2(Class<VR128>) -> 0(Class<VR128>))  [2.02;2.02]
		 Successful, latency: 2.02

-----VCMPSSrri-----
	VCMPSSrri(1(Class<FR32>) -> 0(Class<FR32>))  [2.02;2.02]
		 Successful, latency: 2.02
	VCMPSSrri(2(Class<FR32>) -> 0(Class<FR32>))  [2.02;2.02]
		 Successful, latency: 2.02

-----VCMPSSrri_Int-----
	VCMPSSrri_Int(1(Class<VR128>) -> 0(Class<VR128>))  [2.02;2.02]
		 Successful, latency: 2.02
	VCMPSSrri_Int(2(Class<VR128>) -> 0(Class<VR128>))  [2.02;2.02]
		 Successful, latency: 2.02

-----VCOMISBF16Zrr-----
	0x138383bb8e18
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VCOMISBF16Zrr_Int-----
	0x138383bb8e88
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VCOMISDZrr-----
	VCOMISDZrr(0(Class<FR64X>) -> impl(Reg<EFLAGS>))  [0.981;-0.00375]
		Dependencies:
			CMOV_FR64X(impl(Reg<EFLAGS>) -> 0(Class<FR64X>)) 
			VCOMISDZrr(0(Class<FR64X>) -> impl(Reg<EFLAGS>)) 
		Combined result: 1 cycles
	VCOMISDZrr(1(Class<FR64X>) -> impl(Reg<EFLAGS>))  [0.984;-0.00125]
		Dependencies:
			CMOV_FR64X(impl(Reg<EFLAGS>) -> 0(Class<FR64X>)) 
			VCOMISDZrr(0(Class<FR64X>) -> impl(Reg<EFLAGS>)) 
		Combined result: 1 cycles

-----VCOMISDZrr_Int-----
	VCOMISDZrr_Int(0(Class<VR128X>) -> impl(Reg<EFLAGS>))  [0.994;-0.005]
		Dependencies:
			CMOV_VR128X(impl(Reg<EFLAGS>) -> 0(Class<VR128X>)) 
			VCOMISDZrr_Int(0(Class<VR128X>) -> impl(Reg<EFLAGS>)) 
		Combined result: 1.01 cycles
	VCOMISDZrr_Int(1(Class<VR128X>) -> impl(Reg<EFLAGS>))  [0.988;-0.0112]
		Dependencies:
			CMOV_VR128X(impl(Reg<EFLAGS>) -> 0(Class<VR128X>)) 
			VCOMISDZrr_Int(0(Class<VR128X>) -> impl(Reg<EFLAGS>)) 
		Combined result: 1 cycles

-----VCOMISDZrrb-----
	VCOMISDZrrb(0(Class<VR128X>) -> impl(Reg<EFLAGS>))  [0.998;-0.00125]
		Dependencies:
			CMOV_VR128X(impl(Reg<EFLAGS>) -> 0(Class<VR128X>)) 
			VCOMISDZrr_Int(0(Class<VR128X>) -> impl(Reg<EFLAGS>)) 
		Combined result: 1.01 cycles
	VCOMISDZrrb(1(Class<VR128X>) -> impl(Reg<EFLAGS>))  [0.998;-0.00125]
		Dependencies:
			CMOV_VR128X(impl(Reg<EFLAGS>) -> 0(Class<VR128X>)) 
			VCOMISDZrr_Int(0(Class<VR128X>) -> impl(Reg<EFLAGS>)) 
		Combined result: 1.01 cycles

-----VCOMISDrr-----
	VCOMISDrr(0(Class<FR64>) -> impl(Reg<EFLAGS>))  [1.01;0.0138]
		Dependencies:
			CMOV_FR64(impl(Reg<EFLAGS>) -> 0(Class<FR64>)) 
			COMISDrr(0(Class<FR64>) -> impl(Reg<EFLAGS>)) 
		Combined result: 1.01 cycles
	VCOMISDrr(1(Class<FR64>) -> impl(Reg<EFLAGS>))  [1.01;0.0138]
		Dependencies:
			CMOV_FR64(impl(Reg<EFLAGS>) -> 0(Class<FR64>)) 
			COMISDrr(0(Class<FR64>) -> impl(Reg<EFLAGS>)) 
		Combined result: 1.01 cycles

-----VCOMISDrr_Int-----
	VCOMISDrr_Int(0(Class<VR128>) -> impl(Reg<EFLAGS>))  [0.987;-0.00625]
		Dependencies:
			CMOV_VR128(impl(Reg<EFLAGS>) -> 0(Class<VR128>)) 
			COMISDrr_Int(0(Class<VR128>) -> impl(Reg<EFLAGS>)) 
		Combined result: 1 cycles
	VCOMISDrr_Int(1(Class<VR128>) -> impl(Reg<EFLAGS>))  [0.997;0.00375]
		Dependencies:
			CMOV_VR128(impl(Reg<EFLAGS>) -> 0(Class<VR128>)) 
			COMISDrr_Int(0(Class<VR128>) -> impl(Reg<EFLAGS>)) 
		Combined result: 1.01 cycles

-----VCOMISHZrr-----
	0x138383bb9240
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VCOMISSZrr-----
	VCOMISSZrr(0(Class<FR32X>) -> impl(Reg<EFLAGS>))  [0.985;-0.015]
		Dependencies:
			CMOV_FR32X(impl(Reg<EFLAGS>) -> 0(Class<FR32X>)) 
			VCOMISSZrr(0(Class<FR32X>) -> impl(Reg<EFLAGS>)) 
		Combined result: 1 cycles
	VCOMISSZrr(1(Class<FR32X>) -> impl(Reg<EFLAGS>))  [0.984;-0.0163]
		Dependencies:
			CMOV_FR32X(impl(Reg<EFLAGS>) -> 0(Class<FR32X>)) 
			VCOMISSZrr(0(Class<FR32X>) -> impl(Reg<EFLAGS>)) 
		Combined result: 1 cycles

-----VCOMISSZrr_Int-----
	VCOMISSZrr_Int(0(Class<VR128X>) -> impl(Reg<EFLAGS>))  [0.999;0]
		Dependencies:
			CMOV_VR128X(impl(Reg<EFLAGS>) -> 0(Class<VR128X>)) 
			VCOMISDZrr_Int(0(Class<VR128X>) -> impl(Reg<EFLAGS>)) 
		Combined result: 1.01 cycles
	VCOMISSZrr_Int(1(Class<VR128X>) -> impl(Reg<EFLAGS>))  [0.986;-0.0125]
		Dependencies:
			CMOV_VR128X(impl(Reg<EFLAGS>) -> 0(Class<VR128X>)) 
			VCOMISDZrr_Int(0(Class<VR128X>) -> impl(Reg<EFLAGS>)) 
		Combined result: 1 cycles

-----VCOMISSZrrb-----
	VCOMISSZrrb(0(Class<VR128X>) -> impl(Reg<EFLAGS>))  [0.99;-0.00875]
		Dependencies:
			CMOV_VR128X(impl(Reg<EFLAGS>) -> 0(Class<VR128X>)) 
			VCOMISDZrr_Int(0(Class<VR128X>) -> impl(Reg<EFLAGS>)) 
		Combined result: 1 cycles
	VCOMISSZrrb(1(Class<VR128X>) -> impl(Reg<EFLAGS>))  [0.999;0]
		Dependencies:
			CMOV_VR128X(impl(Reg<EFLAGS>) -> 0(Class<VR128X>)) 
			VCOMISDZrr_Int(0(Class<VR128X>) -> impl(Reg<EFLAGS>)) 
		Combined result: 1.01 cycles

-----VCOMISSrr-----
	VCOMISSrr(0(Class<FR32>) -> impl(Reg<EFLAGS>))  [0.986;0.00125]
		Dependencies:
			CMOV_FR32(impl(Reg<EFLAGS>) -> 0(Class<FR32>)) 
			COMISSrr(0(Class<FR32>) -> impl(Reg<EFLAGS>)) 
		Combined result: 1 cycles
	VCOMISSrr(1(Class<FR32>) -> impl(Reg<EFLAGS>))  [0.994;0.00875]
		Dependencies:
			CMOV_FR32(impl(Reg<EFLAGS>) -> 0(Class<FR32>)) 
			COMISSrr(0(Class<FR32>) -> impl(Reg<EFLAGS>)) 
		Combined result: 1.01 cycles

-----VCOMISSrr_Int-----
	VCOMISSrr_Int(0(Class<VR128>) -> impl(Reg<EFLAGS>))  [0.991;-0.0025]
		Dependencies:
			CMOV_VR128(impl(Reg<EFLAGS>) -> 0(Class<VR128>)) 
			COMISDrr_Int(0(Class<VR128>) -> impl(Reg<EFLAGS>)) 
		Combined result: 1.01 cycles
	VCOMISSrr_Int(1(Class<VR128>) -> impl(Reg<EFLAGS>))  [0.982;-0.0112]
		Dependencies:
			CMOV_VR128(impl(Reg<EFLAGS>) -> 0(Class<VR128>)) 
			COMISDrr_Int(0(Class<VR128>) -> impl(Reg<EFLAGS>)) 
		Combined result: 1 cycles

-----VCOMPRESSPDZ128rr-----
	VCOMPRESSPDZ128rr(1(Class<VR128X>) -> 0(Class<VR128X>))  [2.01;2.01]
		 Successful, latency: 2.01

-----VCOMPRESSPDZ128rrk-----
	VCOMPRESSPDZ128rrk(1(Class<VR128X>) -> 0(Class<VR128X>))  [2.02;2.02]
		 Successful, latency: 2.02
	VCOMPRESSPDZ128rrk(3(Class<VR128X>) -> 0(Class<VR128X>))  [2.02;2.02]
		 Successful, latency: 2.02

-----VCOMPRESSPDZ128rrkz-----
	VCOMPRESSPDZ128rrkz(2(Class<VR128X>) -> 0(Class<VR128X>))  [2.01;2.01]
		 Successful, latency: 2.01

-----VCOMPRESSPDZ256rr-----
	VCOMPRESSPDZ256rr(1(Class<VR256X>) -> 0(Class<VR256X>))  [4.03;4.03]
		 Successful, latency: 4.03

-----VCOMPRESSPDZ256rrk-----
	VCOMPRESSPDZ256rrk(1(Class<VR256X>) -> 0(Class<VR256X>))  [4.05;4.05]
		 Successful, latency: 4.05
	VCOMPRESSPDZ256rrk(3(Class<VR256X>) -> 0(Class<VR256X>))  [4.05;4.05]
		 Successful, latency: 4.05

-----VCOMPRESSPDZ256rrkz-----
	VCOMPRESSPDZ256rrkz(2(Class<VR256X>) -> 0(Class<VR256X>))  [4.03;4.03]
		 Successful, latency: 4.03

-----VCOMPRESSPDZrr-----
	VCOMPRESSPDZrr(1(Class<VR512>) -> 0(Class<VR512>))  [5.1;5.1]
		 Successful, latency: 5.1

-----VCOMPRESSPDZrrk-----
	VCOMPRESSPDZrrk(1(Class<VR512>) -> 0(Class<VR512>))  [5.1;5.1]
		 Successful, latency: 5.1
	VCOMPRESSPDZrrk(3(Class<VR512>) -> 0(Class<VR512>))  [5.08;5.08]
		 Successful, latency: 5.08

-----VCOMPRESSPDZrrkz-----
	VCOMPRESSPDZrrkz(2(Class<VR512>) -> 0(Class<VR512>))  [5.07;5.07]
		 Successful, latency: 5.07

-----VCOMPRESSPSZ128rr-----
	VCOMPRESSPSZ128rr(1(Class<VR128X>) -> 0(Class<VR128X>))  [2.02;2.02]
		 Successful, latency: 2.02

-----VCOMPRESSPSZ128rrk-----
	VCOMPRESSPSZ128rrk(1(Class<VR128X>) -> 0(Class<VR128X>))  [2.01;2.01]
		 Successful, latency: 2.01
	VCOMPRESSPSZ128rrk(3(Class<VR128X>) -> 0(Class<VR128X>))  [2.02;2.02]
		 Successful, latency: 2.02

-----VCOMPRESSPSZ128rrkz-----
	VCOMPRESSPSZ128rrkz(2(Class<VR128X>) -> 0(Class<VR128X>))  [2.01;2.01]
		 Successful, latency: 2.01

-----VCOMPRESSPSZ256rr-----
	VCOMPRESSPSZ256rr(1(Class<VR256X>) -> 0(Class<VR256X>))  [4.02;4.02]
		 Successful, latency: 4.02

-----VCOMPRESSPSZ256rrk-----
	VCOMPRESSPSZ256rrk(1(Class<VR256X>) -> 0(Class<VR256X>))  [4.07;4.07]
		 Successful, latency: 4.07
	VCOMPRESSPSZ256rrk(3(Class<VR256X>) -> 0(Class<VR256X>))  [4.04;4.04]
		 Successful, latency: 4.04

-----VCOMPRESSPSZ256rrkz-----
	VCOMPRESSPSZ256rrkz(2(Class<VR256X>) -> 0(Class<VR256X>))  [4.04;4.04]
		 Successful, latency: 4.04

-----VCOMPRESSPSZrr-----
	VCOMPRESSPSZrr(1(Class<VR512>) -> 0(Class<VR512>))  [5.07;5.07]
		 Successful, latency: 5.07

-----VCOMPRESSPSZrrk-----
	VCOMPRESSPSZrrk(1(Class<VR512>) -> 0(Class<VR512>))  [5.07;5.07]
		 Successful, latency: 5.07
	VCOMPRESSPSZrrk(3(Class<VR512>) -> 0(Class<VR512>))  [5.09;5.09]
		 Successful, latency: 5.09

-----VCOMPRESSPSZrrkz-----
	VCOMPRESSPSZrrkz(2(Class<VR512>) -> 0(Class<VR512>))  [5.08;5.08]
		 Successful, latency: 5.08

-----VCVT2PH2BF8SZ128rr-----
	VCVT2PH2BF8SZ128rr(1(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VCVT2PH2BF8SZ128rr(2(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VCVT2PH2BF8SZ128rrk-----
	VCVT2PH2BF8SZ128rrk(1(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VCVT2PH2BF8SZ128rrk(3(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VCVT2PH2BF8SZ128rrk(4(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VCVT2PH2BF8SZ128rrkz-----
	VCVT2PH2BF8SZ128rrkz(2(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VCVT2PH2BF8SZ128rrkz(3(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VCVT2PH2BF8SZ256rr-----
	VCVT2PH2BF8SZ256rr(1(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VCVT2PH2BF8SZ256rr(2(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VCVT2PH2BF8SZ256rrk-----
	VCVT2PH2BF8SZ256rrk(1(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VCVT2PH2BF8SZ256rrk(3(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VCVT2PH2BF8SZ256rrk(4(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VCVT2PH2BF8SZ256rrkz-----
	VCVT2PH2BF8SZ256rrkz(2(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VCVT2PH2BF8SZ256rrkz(3(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VCVT2PH2BF8SZrr-----
	VCVT2PH2BF8SZrr(1(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VCVT2PH2BF8SZrr(2(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VCVT2PH2BF8SZrrk-----
	VCVT2PH2BF8SZrrk(1(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VCVT2PH2BF8SZrrk(3(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VCVT2PH2BF8SZrrk(4(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VCVT2PH2BF8SZrrkz-----
	VCVT2PH2BF8SZrrkz(2(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VCVT2PH2BF8SZrrkz(3(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VCVT2PH2BF8Z128rr-----
	VCVT2PH2BF8Z128rr(1(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VCVT2PH2BF8Z128rr(2(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VCVT2PH2BF8Z128rrk-----
	VCVT2PH2BF8Z128rrk(1(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VCVT2PH2BF8Z128rrk(3(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VCVT2PH2BF8Z128rrk(4(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VCVT2PH2BF8Z128rrkz-----
	VCVT2PH2BF8Z128rrkz(2(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VCVT2PH2BF8Z128rrkz(3(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VCVT2PH2BF8Z256rr-----
	VCVT2PH2BF8Z256rr(1(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VCVT2PH2BF8Z256rr(2(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VCVT2PH2BF8Z256rrk-----
	VCVT2PH2BF8Z256rrk(1(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VCVT2PH2BF8Z256rrk(3(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VCVT2PH2BF8Z256rrk(4(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VCVT2PH2BF8Z256rrkz-----
	VCVT2PH2BF8Z256rrkz(2(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VCVT2PH2BF8Z256rrkz(3(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VCVT2PH2BF8Zrr-----
	VCVT2PH2BF8Zrr(1(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VCVT2PH2BF8Zrr(2(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VCVT2PH2BF8Zrrk-----
	VCVT2PH2BF8Zrrk(1(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VCVT2PH2BF8Zrrk(3(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VCVT2PH2BF8Zrrk(4(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VCVT2PH2BF8Zrrkz-----
	VCVT2PH2BF8Zrrkz(2(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VCVT2PH2BF8Zrrkz(3(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VCVT2PH2HF8SZ128rr-----
	VCVT2PH2HF8SZ128rr(1(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VCVT2PH2HF8SZ128rr(2(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VCVT2PH2HF8SZ128rrk-----
	VCVT2PH2HF8SZ128rrk(1(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VCVT2PH2HF8SZ128rrk(3(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VCVT2PH2HF8SZ128rrk(4(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VCVT2PH2HF8SZ128rrkz-----
	VCVT2PH2HF8SZ128rrkz(2(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VCVT2PH2HF8SZ128rrkz(3(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VCVT2PH2HF8SZ256rr-----
	VCVT2PH2HF8SZ256rr(1(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VCVT2PH2HF8SZ256rr(2(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VCVT2PH2HF8SZ256rrk-----
	VCVT2PH2HF8SZ256rrk(1(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VCVT2PH2HF8SZ256rrk(3(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VCVT2PH2HF8SZ256rrk(4(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VCVT2PH2HF8SZ256rrkz-----
	VCVT2PH2HF8SZ256rrkz(2(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VCVT2PH2HF8SZ256rrkz(3(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VCVT2PH2HF8SZrr-----
	VCVT2PH2HF8SZrr(1(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VCVT2PH2HF8SZrr(2(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VCVT2PH2HF8SZrrk-----
	VCVT2PH2HF8SZrrk(1(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VCVT2PH2HF8SZrrk(3(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VCVT2PH2HF8SZrrk(4(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VCVT2PH2HF8SZrrkz-----
	VCVT2PH2HF8SZrrkz(2(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VCVT2PH2HF8SZrrkz(3(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VCVT2PH2HF8Z128rr-----
	VCVT2PH2HF8Z128rr(1(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VCVT2PH2HF8Z128rr(2(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VCVT2PH2HF8Z128rrk-----
	VCVT2PH2HF8Z128rrk(1(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VCVT2PH2HF8Z128rrk(3(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VCVT2PH2HF8Z128rrk(4(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VCVT2PH2HF8Z128rrkz-----
	VCVT2PH2HF8Z128rrkz(2(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VCVT2PH2HF8Z128rrkz(3(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VCVT2PH2HF8Z256rr-----
	VCVT2PH2HF8Z256rr(1(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VCVT2PH2HF8Z256rr(2(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VCVT2PH2HF8Z256rrk-----
	VCVT2PH2HF8Z256rrk(1(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VCVT2PH2HF8Z256rrk(3(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VCVT2PH2HF8Z256rrk(4(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VCVT2PH2HF8Z256rrkz-----
	VCVT2PH2HF8Z256rrkz(2(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VCVT2PH2HF8Z256rrkz(3(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VCVT2PH2HF8Zrr-----
	VCVT2PH2HF8Zrr(1(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VCVT2PH2HF8Zrr(2(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VCVT2PH2HF8Zrrk-----
	VCVT2PH2HF8Zrrk(1(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VCVT2PH2HF8Zrrk(3(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VCVT2PH2HF8Zrrk(4(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VCVT2PH2HF8Zrrkz-----
	VCVT2PH2HF8Zrrkz(2(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VCVT2PH2HF8Zrrkz(3(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VCVT2PS2PHXZ128rr-----
	VCVT2PS2PHXZ128rr(1(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VCVT2PS2PHXZ128rr(2(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VCVT2PS2PHXZ128rrk-----
	VCVT2PS2PHXZ128rrk(1(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VCVT2PS2PHXZ128rrk(3(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VCVT2PS2PHXZ128rrk(4(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VCVT2PS2PHXZ128rrkz-----
	VCVT2PS2PHXZ128rrkz(2(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VCVT2PS2PHXZ128rrkz(3(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VCVT2PS2PHXZ256rr-----
	VCVT2PS2PHXZ256rr(1(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VCVT2PS2PHXZ256rr(2(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VCVT2PS2PHXZ256rrb-----
	VCVT2PS2PHXZ256rrb(1(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VCVT2PS2PHXZ256rrb(2(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VCVT2PS2PHXZ256rrbk-----
	VCVT2PS2PHXZ256rrbk(1(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VCVT2PS2PHXZ256rrbk(3(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VCVT2PS2PHXZ256rrbk(4(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VCVT2PS2PHXZ256rrbkz-----
	VCVT2PS2PHXZ256rrbkz(2(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VCVT2PS2PHXZ256rrbkz(3(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VCVT2PS2PHXZ256rrk-----
	VCVT2PS2PHXZ256rrk(1(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VCVT2PS2PHXZ256rrk(3(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VCVT2PS2PHXZ256rrk(4(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VCVT2PS2PHXZ256rrkz-----
	VCVT2PS2PHXZ256rrkz(2(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VCVT2PS2PHXZ256rrkz(3(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VCVT2PS2PHXZrr-----
	VCVT2PS2PHXZrr(1(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VCVT2PS2PHXZrr(2(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VCVT2PS2PHXZrrb-----
	VCVT2PS2PHXZrrb(1(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VCVT2PS2PHXZrrb(2(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VCVT2PS2PHXZrrbk-----
	VCVT2PS2PHXZrrbk(1(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VCVT2PS2PHXZrrbk(3(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VCVT2PS2PHXZrrbk(4(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VCVT2PS2PHXZrrbkz-----
	VCVT2PS2PHXZrrbkz(2(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VCVT2PS2PHXZrrbkz(3(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VCVT2PS2PHXZrrk-----
	VCVT2PS2PHXZrrk(1(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VCVT2PS2PHXZrrk(3(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VCVT2PS2PHXZrrk(4(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VCVT2PS2PHXZrrkz-----
	VCVT2PS2PHXZrrkz(2(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VCVT2PS2PHXZrrkz(3(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VCVTBF162IBSZ128rr-----
	VCVTBF162IBSZ128rr(1(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VCVTBF162IBSZ128rrk-----
	VCVTBF162IBSZ128rrk(1(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VCVTBF162IBSZ128rrk(3(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VCVTBF162IBSZ128rrkz-----
	VCVTBF162IBSZ128rrkz(2(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VCVTBF162IBSZ256rr-----
	VCVTBF162IBSZ256rr(1(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VCVTBF162IBSZ256rrk-----
	VCVTBF162IBSZ256rrk(1(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VCVTBF162IBSZ256rrk(3(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VCVTBF162IBSZ256rrkz-----
	VCVTBF162IBSZ256rrkz(2(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VCVTBF162IBSZrr-----
	VCVTBF162IBSZrr(1(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VCVTBF162IBSZrrk-----
	VCVTBF162IBSZrrk(1(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VCVTBF162IBSZrrk(3(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VCVTBF162IBSZrrkz-----
	VCVTBF162IBSZrrkz(2(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VCVTBF162IUBSZ128rr-----
	VCVTBF162IUBSZ128rr(1(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VCVTBF162IUBSZ128rrk-----
	VCVTBF162IUBSZ128rrk(1(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VCVTBF162IUBSZ128rrk(3(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VCVTBF162IUBSZ128rrkz-----
	VCVTBF162IUBSZ128rrkz(2(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VCVTBF162IUBSZ256rr-----
	VCVTBF162IUBSZ256rr(1(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VCVTBF162IUBSZ256rrk-----
	VCVTBF162IUBSZ256rrk(1(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VCVTBF162IUBSZ256rrk(3(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VCVTBF162IUBSZ256rrkz-----
	VCVTBF162IUBSZ256rrkz(2(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VCVTBF162IUBSZrr-----
	VCVTBF162IUBSZrr(1(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VCVTBF162IUBSZrrk-----
	VCVTBF162IUBSZrrk(1(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VCVTBF162IUBSZrrk(3(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VCVTBF162IUBSZrrkz-----
	VCVTBF162IUBSZrrkz(2(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VCVTBIASPH2BF8SZ128rr-----
	VCVTBIASPH2BF8SZ128rr(1(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VCVTBIASPH2BF8SZ128rr(2(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VCVTBIASPH2BF8SZ128rrk-----
	VCVTBIASPH2BF8SZ128rrk(1(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VCVTBIASPH2BF8SZ128rrk(3(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VCVTBIASPH2BF8SZ128rrk(4(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VCVTBIASPH2BF8SZ128rrkz-----
	VCVTBIASPH2BF8SZ128rrkz(2(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VCVTBIASPH2BF8SZ128rrkz(3(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VCVTBIASPH2BF8SZ256rr-----
	0x138383bbd098
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VCVTBIASPH2BF8SZ256rrk-----
	VCVTBIASPH2BF8SZ256rrk(1(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VCVTBIASPH2BF8SZ256rrkz-----
	0x138383bbd220
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VCVTBIASPH2BF8SZrr-----
	0x138383bbd290
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VCVTBIASPH2BF8SZrrk-----
	VCVTBIASPH2BF8SZrrk(1(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VCVTBIASPH2BF8SZrrkz-----
	0x138383bbd418
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VCVTBIASPH2BF8Z128rr-----
	VCVTBIASPH2BF8Z128rr(1(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VCVTBIASPH2BF8Z128rr(2(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VCVTBIASPH2BF8Z128rrk-----
	VCVTBIASPH2BF8Z128rrk(1(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VCVTBIASPH2BF8Z128rrk(3(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VCVTBIASPH2BF8Z128rrk(4(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VCVTBIASPH2BF8Z128rrkz-----
	VCVTBIASPH2BF8Z128rrkz(2(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VCVTBIASPH2BF8Z128rrkz(3(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VCVTBIASPH2BF8Z256rr-----
	0x138383bbd680
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VCVTBIASPH2BF8Z256rrk-----
	VCVTBIASPH2BF8Z256rrk(1(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VCVTBIASPH2BF8Z256rrkz-----
	0x138383bbd808
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VCVTBIASPH2BF8Zrr-----
	0x138383bbd878
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VCVTBIASPH2BF8Zrrk-----
	VCVTBIASPH2BF8Zrrk(1(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VCVTBIASPH2BF8Zrrkz-----
	0x138383bbda00
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VCVTBIASPH2HF8SZ128rr-----
	VCVTBIASPH2HF8SZ128rr(1(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VCVTBIASPH2HF8SZ128rr(2(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VCVTBIASPH2HF8SZ128rrk-----
	VCVTBIASPH2HF8SZ128rrk(1(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VCVTBIASPH2HF8SZ128rrk(3(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VCVTBIASPH2HF8SZ128rrk(4(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VCVTBIASPH2HF8SZ128rrkz-----
	VCVTBIASPH2HF8SZ128rrkz(2(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VCVTBIASPH2HF8SZ128rrkz(3(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VCVTBIASPH2HF8SZ256rr-----
	0x138383bbdc68
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VCVTBIASPH2HF8SZ256rrk-----
	VCVTBIASPH2HF8SZ256rrk(1(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VCVTBIASPH2HF8SZ256rrkz-----
	0x138383bbddf0
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VCVTBIASPH2HF8SZrr-----
	0x138383bbde60
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VCVTBIASPH2HF8SZrrk-----
	VCVTBIASPH2HF8SZrrk(1(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VCVTBIASPH2HF8SZrrkz-----
	0x138383bbdfe8
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VCVTBIASPH2HF8Z128rr-----
	VCVTBIASPH2HF8Z128rr(1(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VCVTBIASPH2HF8Z128rr(2(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VCVTBIASPH2HF8Z128rrk-----
	VCVTBIASPH2HF8Z128rrk(1(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VCVTBIASPH2HF8Z128rrk(3(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VCVTBIASPH2HF8Z128rrk(4(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VCVTBIASPH2HF8Z128rrkz-----
	VCVTBIASPH2HF8Z128rrkz(2(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VCVTBIASPH2HF8Z128rrkz(3(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VCVTBIASPH2HF8Z256rr-----
	0x138383bbe250
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VCVTBIASPH2HF8Z256rrk-----
	VCVTBIASPH2HF8Z256rrk(1(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VCVTBIASPH2HF8Z256rrkz-----
	0x138383bbe3d8
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VCVTBIASPH2HF8Zrr-----
	0x138383bbe448
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VCVTBIASPH2HF8Zrrk-----
	VCVTBIASPH2HF8Zrrk(1(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VCVTBIASPH2HF8Zrrkz-----
	0x138383bbe5d0
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VCVTDQ2PDYrr-----
	VCVTDQ2PDYrr(1(Class<VR128>) -> 0(Class<VR256>))  [4.02;6.05]
		Dependencies:
			VEXTRACTF128rri(1(Class<VR256>) -> 0(Class<VR128>)) 
			VPBROADCASTWYrr(1(Class<VR128>) -> 0(Class<VR256>)) 
		Combined result: 7.06 cycles

-----VCVTDQ2PDZ128rr-----
	VCVTDQ2PDZ128rr(1(Class<VR128X>) -> 0(Class<VR128X>))  [3.02;3.02]
		 Successful, latency: 3.02

-----VCVTDQ2PDZ128rrk-----
	VCVTDQ2PDZ128rrk(1(Class<VR128X>) -> 0(Class<VR128X>))  [3.04;3.04]
		 Successful, latency: 3.04
	VCVTDQ2PDZ128rrk(3(Class<VR128X>) -> 0(Class<VR128X>))  [3.04;3.04]
		 Successful, latency: 3.04

-----VCVTDQ2PDZ128rrkz-----
	VCVTDQ2PDZ128rrkz(2(Class<VR128X>) -> 0(Class<VR128X>))  [3.03;3.03]
		 Successful, latency: 3.03

-----VCVTDQ2PDZ256rr-----
	VCVTDQ2PDZ256rr(1(Class<VR128X>) -> 0(Class<VR256X>))  [4.06;6.08]
		Dependencies:
			VEXTRACTI32X4Z256rrik(3(Class<VR256X>) -> 0(Class<VR128X>)) 
			VBROADCASTF32X2Z256rr(1(Class<VR128X>) -> 0(Class<VR256X>)) 
		Combined result: 7.1 cycles

-----VCVTDQ2PDZ256rrk-----
	VCVTDQ2PDZ256rrk(1(Class<VR256X>) -> 0(Class<VR256X>))  [3.03;3.03]
		 Successful, latency: 3.03
	VCVTDQ2PDZ256rrk(3(Class<VR128X>) -> 0(Class<VR256X>))  [3.99;6.01]
		Dependencies:
			VEXTRACTI32X4Z256rrik(3(Class<VR256X>) -> 0(Class<VR128X>)) 
			VBROADCASTF32X2Z256rr(1(Class<VR128X>) -> 0(Class<VR256X>)) 
		Combined result: 7.04 cycles

-----VCVTDQ2PDZ256rrkz-----
	VCVTDQ2PDZ256rrkz(2(Class<VR128X>) -> 0(Class<VR256X>))  [4;6.02]
		Dependencies:
			VEXTRACTI32X4Z256rrik(3(Class<VR256X>) -> 0(Class<VR128X>)) 
			VBROADCASTF32X2Z256rr(1(Class<VR128X>) -> 0(Class<VR256X>)) 
		Combined result: 7.04 cycles

-----VCVTDQ2PDZrr-----
	VCVTDQ2PDZrr(1(Class<VR256X>) -> 0(Class<VR512>))  [6.01;9.03]
		Dependencies:
			VPMOVDWZrr(1(Class<VR512>) -> 0(Class<VR256X>)) 
			VINSERTF64X4Zrri(2(Class<VR256X>) -> 0(Class<VR512>)) 
		Combined result: 10.1 cycles

-----VCVTDQ2PDZrrk-----
	VCVTDQ2PDZrrk(1(Class<VR512>) -> 0(Class<VR512>))  [3.04;3.04]
		 Successful, latency: 3.04
	VCVTDQ2PDZrrk(3(Class<VR256X>) -> 0(Class<VR512>))  [5.99;9.02]
		Dependencies:
			VPMOVDWZrr(1(Class<VR512>) -> 0(Class<VR256X>)) 
			VINSERTF64X4Zrri(2(Class<VR256X>) -> 0(Class<VR512>)) 
		Combined result: 10.1 cycles

-----VCVTDQ2PDZrrkz-----
	VCVTDQ2PDZrrkz(2(Class<VR256X>) -> 0(Class<VR512>))  [5.99;9.01]
		Dependencies:
			VPMOVDWZrr(1(Class<VR512>) -> 0(Class<VR256X>)) 
			VINSERTF64X4Zrri(2(Class<VR256X>) -> 0(Class<VR512>)) 
		Combined result: 10.1 cycles

-----VCVTDQ2PDrr-----
	VCVTDQ2PDrr(1(Class<VR128>) -> 0(Class<VR128>))  [3.05;3.05]
		 Successful, latency: 3.05

-----VCVTDQ2PHZ128rr-----
	VCVTDQ2PHZ128rr(1(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VCVTDQ2PHZ128rrk-----
	VCVTDQ2PHZ128rrk(1(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VCVTDQ2PHZ128rrk(3(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VCVTDQ2PHZ128rrkz-----
	VCVTDQ2PHZ128rrkz(2(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VCVTDQ2PHZ256rr-----
	0x138383bbec98
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VCVTDQ2PHZ256rrb-----
	0x138383bbed08
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VCVTDQ2PHZ256rrbk-----
	VCVTDQ2PHZ256rrbk(1(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VCVTDQ2PHZ256rrbkz-----
	0x138383bbee90
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VCVTDQ2PHZ256rrk-----
	VCVTDQ2PHZ256rrk(1(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VCVTDQ2PHZ256rrkz-----
	0x138383bbf018
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VCVTDQ2PHZrr-----
	0x138383bbf088
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VCVTDQ2PHZrrb-----
	0x138383bbf0f8
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VCVTDQ2PHZrrbk-----
	VCVTDQ2PHZrrbk(1(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VCVTDQ2PHZrrbkz-----
	0x138383bbf280
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VCVTDQ2PHZrrk-----
	VCVTDQ2PHZrrk(1(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VCVTDQ2PHZrrkz-----
	0x138383bbf408
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VCVTDQ2PSYrr-----
	VCVTDQ2PSYrr(1(Class<VR256>) -> 0(Class<VR256>))  [3.05;3.05]
		 Successful, latency: 3.05

-----VCVTDQ2PSZ128rr-----
	VCVTDQ2PSZ128rr(1(Class<VR128X>) -> 0(Class<VR128X>))  [3.02;3.02]
		 Successful, latency: 3.02

-----VCVTDQ2PSZ128rrk-----
	VCVTDQ2PSZ128rrk(1(Class<VR128X>) -> 0(Class<VR128X>))  [3.03;3.03]
		 Successful, latency: 3.03
	VCVTDQ2PSZ128rrk(3(Class<VR128X>) -> 0(Class<VR128X>))  [3.02;3.02]
		 Successful, latency: 3.02

-----VCVTDQ2PSZ128rrkz-----
	VCVTDQ2PSZ128rrkz(2(Class<VR128X>) -> 0(Class<VR128X>))  [3.02;3.02]
		 Successful, latency: 3.02

-----VCVTDQ2PSZ256rr-----
	VCVTDQ2PSZ256rr(1(Class<VR256X>) -> 0(Class<VR256X>))  [3.04;3.04]
		 Successful, latency: 3.04

-----VCVTDQ2PSZ256rrb-----
	VCVTDQ2PSZ256rrb(1(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VCVTDQ2PSZ256rrbk-----
	VCVTDQ2PSZ256rrbk(1(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VCVTDQ2PSZ256rrbk(3(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VCVTDQ2PSZ256rrbkz-----
	VCVTDQ2PSZ256rrbkz(2(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VCVTDQ2PSZ256rrk-----
	VCVTDQ2PSZ256rrk(1(Class<VR256X>) -> 0(Class<VR256X>))  [3.04;3.04]
		 Successful, latency: 3.04
	VCVTDQ2PSZ256rrk(3(Class<VR256X>) -> 0(Class<VR256X>))  [3.04;3.04]
		 Successful, latency: 3.04

-----VCVTDQ2PSZ256rrkz-----
	VCVTDQ2PSZ256rrkz(2(Class<VR256X>) -> 0(Class<VR256X>))  [3.04;3.04]
		 Successful, latency: 3.04

-----VCVTDQ2PSZrr-----
	VCVTDQ2PSZrr(1(Class<VR512>) -> 0(Class<VR512>))  [3.11;3.11]
		 Successful, latency: 3.11

-----VCVTDQ2PSZrrb-----
	VCVTDQ2PSZrrb(1(Class<VR512>) -> 0(Class<VR512>))  [3.01;3.01]
		 Successful, latency: 3.01

-----VCVTDQ2PSZrrbk-----
	VCVTDQ2PSZrrbk(1(Class<VR512>) -> 0(Class<VR512>))  [3.03;3.03]
		 Successful, latency: 3.03
	VCVTDQ2PSZrrbk(3(Class<VR512>) -> 0(Class<VR512>))  [3.02;3.02]
		 Successful, latency: 3.02

-----VCVTDQ2PSZrrbkz-----
	VCVTDQ2PSZrrbkz(2(Class<VR512>) -> 0(Class<VR512>))  [3.02;3.02]
		 Successful, latency: 3.02

-----VCVTDQ2PSZrrk-----
	VCVTDQ2PSZrrk(1(Class<VR512>) -> 0(Class<VR512>))  [3.03;3.03]
		 Successful, latency: 3.03
	VCVTDQ2PSZrrk(3(Class<VR512>) -> 0(Class<VR512>))  [3.03;3.03]
		 Successful, latency: 3.03

-----VCVTDQ2PSZrrkz-----
	VCVTDQ2PSZrrkz(2(Class<VR512>) -> 0(Class<VR512>))  [3.03;3.03]
		 Successful, latency: 3.03

-----VCVTDQ2PSrr-----
	VCVTDQ2PSrr(1(Class<VR128>) -> 0(Class<VR128>))  [3.04;3.04]
		 Successful, latency: 3.04

-----VCVTHF82PHZ128rr-----
	VCVTHF82PHZ128rr(1(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VCVTHF82PHZ128rrk-----
	VCVTHF82PHZ128rrk(1(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VCVTHF82PHZ128rrk(3(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VCVTHF82PHZ128rrkz-----
	VCVTHF82PHZ128rrkz(2(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VCVTHF82PHZ256rrk-----
	VCVTHF82PHZ256rrk(1(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VCVTHF82PHZrrk-----
	VCVTHF82PHZrrk(1(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VCVTNE2PS2BF16Z128rr-----
	VCVTNE2PS2BF16Z128rr(1(Class<VR128X>) -> 0(Class<VR128X>))  [3.02;3.02]
		 Successful, latency: 3.02
	VCVTNE2PS2BF16Z128rr(2(Class<VR128X>) -> 0(Class<VR128X>))  [3.03;3.03]
		 Successful, latency: 3.03

-----VCVTNE2PS2BF16Z128rrk-----
	VCVTNE2PS2BF16Z128rrk(1(Class<VR128X>) -> 0(Class<VR128X>))  [3.03;3.03]
		 Successful, latency: 3.03
	VCVTNE2PS2BF16Z128rrk(3(Class<VR128X>) -> 0(Class<VR128X>))  [3.04;3.04]
		 Successful, latency: 3.04
	VCVTNE2PS2BF16Z128rrk(4(Class<VR128X>) -> 0(Class<VR128X>))  [3.01;3.01]
		 Successful, latency: 3.01

-----VCVTNE2PS2BF16Z128rrkz-----
	VCVTNE2PS2BF16Z128rrkz(2(Class<VR128X>) -> 0(Class<VR128X>))  [3.05;3.05]
		 Successful, latency: 3.05
	VCVTNE2PS2BF16Z128rrkz(3(Class<VR128X>) -> 0(Class<VR128X>))  [3.05;3.05]
		 Successful, latency: 3.05

-----VCVTNE2PS2BF16Z256rr-----
	VCVTNE2PS2BF16Z256rr(1(Class<VR256X>) -> 0(Class<VR256X>))  [6.04;6.04]
		 Successful, latency: 6.04
	VCVTNE2PS2BF16Z256rr(2(Class<VR256X>) -> 0(Class<VR256X>))  [6.06;6.06]
		 Successful, latency: 6.06

-----VCVTNE2PS2BF16Z256rrk-----
	VCVTNE2PS2BF16Z256rrk(1(Class<VR256X>) -> 0(Class<VR256X>))  [3.05;3.05]
		 Successful, latency: 3.05
	VCVTNE2PS2BF16Z256rrk(3(Class<VR256X>) -> 0(Class<VR256X>))  [6.11;6.11]
		 Successful, latency: 6.11
	VCVTNE2PS2BF16Z256rrk(4(Class<VR256X>) -> 0(Class<VR256X>))  [6.06;6.06]
		 Successful, latency: 6.06

-----VCVTNE2PS2BF16Z256rrkz-----
	VCVTNE2PS2BF16Z256rrkz(2(Class<VR256X>) -> 0(Class<VR256X>))  [6.05;6.05]
		 Successful, latency: 6.05
	VCVTNE2PS2BF16Z256rrkz(3(Class<VR256X>) -> 0(Class<VR256X>))  [6.04;6.04]
		 Successful, latency: 6.04

-----VCVTNE2PS2BF16Zrr-----
	VCVTNE2PS2BF16Zrr(1(Class<VR512>) -> 0(Class<VR512>))  [7.06;7.06]
		 Successful, latency: 7.06
	VCVTNE2PS2BF16Zrr(2(Class<VR512>) -> 0(Class<VR512>))  [7.05;7.05]
		 Successful, latency: 7.05

-----VCVTNE2PS2BF16Zrrk-----
	VCVTNE2PS2BF16Zrrk(1(Class<VR512>) -> 0(Class<VR512>))  [4.04;4.04]
		 Successful, latency: 4.04
	VCVTNE2PS2BF16Zrrk(3(Class<VR512>) -> 0(Class<VR512>))  [7.08;7.08]
		 Successful, latency: 7.08
	VCVTNE2PS2BF16Zrrk(4(Class<VR512>) -> 0(Class<VR512>))  [7.08;7.08]
		 Successful, latency: 7.08

-----VCVTNE2PS2BF16Zrrkz-----
	VCVTNE2PS2BF16Zrrkz(2(Class<VR512>) -> 0(Class<VR512>))  [7.05;7.05]
		 Successful, latency: 7.05
	VCVTNE2PS2BF16Zrrkz(3(Class<VR512>) -> 0(Class<VR512>))  [7.05;7.05]
		 Successful, latency: 7.05

-----VCVTNEPS2BF16Yrr-----
	0x138383bc0908
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VCVTNEPS2BF16Z128rr-----
	VCVTNEPS2BF16Z128rr(1(Class<VR128X>) -> 0(Class<VR128X>))  [3.03;3.03]
		 Successful, latency: 3.03

-----VCVTNEPS2BF16Z128rrk-----
	VCVTNEPS2BF16Z128rrk(1(Class<VR128X>) -> 0(Class<VR128X>))  [3.03;3.03]
		 Successful, latency: 3.03
	VCVTNEPS2BF16Z128rrk(3(Class<VR128X>) -> 0(Class<VR128X>))  [3.03;3.03]
		 Successful, latency: 3.03

-----VCVTNEPS2BF16Z128rrkz-----
	VCVTNEPS2BF16Z128rrkz(2(Class<VR128X>) -> 0(Class<VR128X>))  [3.05;3.05]
		 Successful, latency: 3.05

-----VCVTNEPS2BF16Z256rr-----
	VCVTNEPS2BF16Z256rr(1(Class<VR256X>) -> 0(Class<VR128X>))  [4.04;6.07]
		Dependencies:
			VEXTRACTI32X4Z256rrik(3(Class<VR256X>) -> 0(Class<VR128X>)) 
			VBROADCASTF32X2Z256rr(1(Class<VR128X>) -> 0(Class<VR256X>)) 
		Combined result: 7.07 cycles

-----VCVTNEPS2BF16Z256rrk-----
	VCVTNEPS2BF16Z256rrk(1(Class<VR128X>) -> 0(Class<VR128X>))  [3.03;3.03]
		 Successful, latency: 3.03
	VCVTNEPS2BF16Z256rrk(3(Class<VR256X>) -> 0(Class<VR128X>))  [4.03;6.05]
		Dependencies:
			VEXTRACTI32X4Z256rrik(3(Class<VR256X>) -> 0(Class<VR128X>)) 
			VBROADCASTF32X2Z256rr(1(Class<VR128X>) -> 0(Class<VR256X>)) 
		Combined result: 7.05 cycles

-----VCVTNEPS2BF16Z256rrkz-----
	VCVTNEPS2BF16Z256rrkz(2(Class<VR256X>) -> 0(Class<VR128X>))  [4.04;6.06]
		Dependencies:
			VEXTRACTI32X4Z256rrik(3(Class<VR256X>) -> 0(Class<VR128X>)) 
			VBROADCASTF32X2Z256rr(1(Class<VR128X>) -> 0(Class<VR256X>)) 
		Combined result: 7.06 cycles

-----VCVTNEPS2BF16Zrr-----
	0x138383bc0be0
		ERROR_GENERIC, this instruction cannot be measured on this platform

-----VCVTNEPS2BF16Zrrk-----
	VCVTNEPS2BF16Zrrk(1(Class<VR256X>) -> 0(Class<VR256X>))  [4.04;4.04]
		 Successful, latency: 4.04
	VCVTNEPS2BF16Zrrk(3(Class<VR512>) -> 0(Class<VR256X>))  [4.42;7.45]
		Dependencies:
			VPMOVDWZrr(1(Class<VR512>) -> 0(Class<VR256X>)) 
			VINSERTF64X4Zrri(2(Class<VR256X>) -> 0(Class<VR512>)) 
		Combined result: 8.45 cycles

-----VCVTNEPS2BF16Zrrkz-----
	VCVTNEPS2BF16Zrrkz(2(Class<VR512>) -> 0(Class<VR256X>))  [4.39;7.42]
		Dependencies:
			VPMOVDWZrr(1(Class<VR512>) -> 0(Class<VR256X>)) 
			VINSERTF64X4Zrri(2(Class<VR256X>) -> 0(Class<VR512>)) 
		Combined result: 8.42 cycles

-----VCVTNEPS2BF16rr-----
	VCVTNEPS2BF16rr(1(Class<VR128>) -> 0(Class<VR128>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VCVTPD2DQYrr-----
	VCVTPD2DQYrr(1(Class<VR256>) -> 0(Class<VR128>))  [4.01;6.05]
		Dependencies:
			VEXTRACTF128rri(1(Class<VR256>) -> 0(Class<VR128>)) 
			VPBROADCASTWYrr(1(Class<VR128>) -> 0(Class<VR256>)) 
		Combined result: 7.05 cycles

-----VCVTPD2DQZ128rr-----
	VCVTPD2DQZ128rr(1(Class<VR128X>) -> 0(Class<VR128X>))  [3.02;3.02]
		 Successful, latency: 3.02

-----VCVTPD2DQZ128rrk-----
	VCVTPD2DQZ128rrk(1(Class<VR128X>) -> 0(Class<VR128X>))  [3.01;3.01]
		 Successful, latency: 3.01
	VCVTPD2DQZ128rrk(3(Class<VR128X>) -> 0(Class<VR128X>))  [3.03;3.03]
		 Successful, latency: 3.03

-----VCVTPD2DQZ128rrkz-----
	VCVTPD2DQZ128rrkz(2(Class<VR128X>) -> 0(Class<VR128X>))  [3.02;3.02]
		 Successful, latency: 3.02

-----VCVTPD2DQZ256rr-----
	VCVTPD2DQZ256rr(1(Class<VR256X>) -> 0(Class<VR128X>))  [4.04;6.06]
		Dependencies:
			VEXTRACTI32X4Z256rrik(3(Class<VR256X>) -> 0(Class<VR128X>)) 
			VBROADCASTF32X2Z256rr(1(Class<VR128X>) -> 0(Class<VR256X>)) 
		Combined result: 7.06 cycles

-----VCVTPD2DQZ256rrbk-----
	VCVTPD2DQZ256rrbk(1(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VCVTPD2DQZ256rrk-----
	VCVTPD2DQZ256rrk(1(Class<VR128X>) -> 0(Class<VR128X>))  [3.01;3.01]
		 Successful, latency: 3.01
	VCVTPD2DQZ256rrk(3(Class<VR256X>) -> 0(Class<VR128X>))  [4.05;6.07]
		Dependencies:
			VEXTRACTI32X4Z256rrik(3(Class<VR256X>) -> 0(Class<VR128X>)) 
			VBROADCASTF32X2Z256rr(1(Class<VR128X>) -> 0(Class<VR256X>)) 
		Combined result: 7.07 cycles

-----VCVTPD2DQZ256rrkz-----
	VCVTPD2DQZ256rrkz(2(Class<VR256X>) -> 0(Class<VR128X>))  [4.02;6.04]
		Dependencies:
			VEXTRACTI32X4Z256rrik(3(Class<VR256X>) -> 0(Class<VR128X>)) 
			VBROADCASTF32X2Z256rr(1(Class<VR128X>) -> 0(Class<VR256X>)) 
		Combined result: 7.04 cycles

-----VCVTPD2DQZrr-----
	VCVTPD2DQZrr(1(Class<VR512>) -> 0(Class<VR256X>))  [4.39;7.42]
		Dependencies:
			VPMOVDWZrr(1(Class<VR512>) -> 0(Class<VR256X>)) 
			VINSERTF64X4Zrri(2(Class<VR256X>) -> 0(Class<VR512>)) 
		Combined result: 8.42 cycles

-----VCVTPD2DQZrrb-----
	VCVTPD2DQZrrb(1(Class<VR512>) -> 0(Class<VR256X>))  [4.36;7.38]
		Dependencies:
			VPMOVDWZrr(1(Class<VR512>) -> 0(Class<VR256X>)) 
			VINSERTF64X4Zrri(2(Class<VR256X>) -> 0(Class<VR512>)) 
		Combined result: 8.38 cycles

-----VCVTPD2DQZrrbk-----
	VCVTPD2DQZrrbk(1(Class<VR256X>) -> 0(Class<VR256X>))  [4.03;4.03]
		 Successful, latency: 4.03
	VCVTPD2DQZrrbk(3(Class<VR512>) -> 0(Class<VR256X>))  [4.35;7.38]
		Dependencies:
			VPMOVDWZrr(1(Class<VR512>) -> 0(Class<VR256X>)) 
			VINSERTF64X4Zrri(2(Class<VR256X>) -> 0(Class<VR512>)) 
		Combined result: 8.38 cycles

-----VCVTPD2DQZrrbkz-----
	VCVTPD2DQZrrbkz(2(Class<VR512>) -> 0(Class<VR256X>))  [4.34;7.37]
		Dependencies:
			VPMOVDWZrr(1(Class<VR512>) -> 0(Class<VR256X>)) 
			VINSERTF64X4Zrri(2(Class<VR256X>) -> 0(Class<VR512>)) 
		Combined result: 8.37 cycles

-----VCVTPD2DQZrrk-----
	VCVTPD2DQZrrk(1(Class<VR256X>) -> 0(Class<VR256X>))  [4.04;4.04]
		 Successful, latency: 4.04
	VCVTPD2DQZrrk(3(Class<VR512>) -> 0(Class<VR256X>))  [4.36;7.39]
		Dependencies:
			VPMOVDWZrr(1(Class<VR512>) -> 0(Class<VR256X>)) 
			VINSERTF64X4Zrri(2(Class<VR256X>) -> 0(Class<VR512>)) 
		Combined result: 8.39 cycles

-----VCVTPD2DQZrrkz-----
	VCVTPD2DQZrrkz(2(Class<VR512>) -> 0(Class<VR256X>))  [4.37;7.4]
		Dependencies:
			VPMOVDWZrr(1(Class<VR512>) -> 0(Class<VR256X>)) 
			VINSERTF64X4Zrri(2(Class<VR256X>) -> 0(Class<VR512>)) 
		Combined result: 8.4 cycles

-----VCVTPD2DQrr-----
	VCVTPD2DQrr(1(Class<VR128>) -> 0(Class<VR128>))  [3.06;3.06]
		 Successful, latency: 3.06

-----VCVTPD2PHZ128rr-----
	VCVTPD2PHZ128rr(1(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VCVTPD2PHZ128rrk-----
	VCVTPD2PHZ128rrk(1(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VCVTPD2PHZ128rrk(3(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VCVTPD2PHZ128rrkz-----
	VCVTPD2PHZ128rrkz(2(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VCVTPD2PHZ256rrbk-----
	VCVTPD2PHZ256rrbk(1(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VCVTPD2PHZ256rrk-----
	VCVTPD2PHZ256rrk(1(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VCVTPD2PHZrr-----
	0x138383bc1e08
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VCVTPD2PHZrrb-----
	0x138383bc1e78
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VCVTPD2PHZrrbk-----
	VCVTPD2PHZrrbk(1(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VCVTPD2PHZrrbkz-----
	0x138383bc2000
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VCVTPD2PHZrrk-----
	VCVTPD2PHZrrk(1(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VCVTPD2PHZrrkz-----
	0x138383bc2188
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VCVTPD2PSYrr-----
	VCVTPD2PSYrr(1(Class<VR256>) -> 0(Class<VR128>))  [4.02;6.05]
		Dependencies:
			VEXTRACTF128rri(1(Class<VR256>) -> 0(Class<VR128>)) 
			VPBROADCASTWYrr(1(Class<VR128>) -> 0(Class<VR256>)) 
		Combined result: 7.05 cycles

-----VCVTPD2PSZ128rr-----
	VCVTPD2PSZ128rr(1(Class<VR128X>) -> 0(Class<VR128X>))  [3.06;3.06]
		 Successful, latency: 3.06

-----VCVTPD2PSZ128rrk-----
	VCVTPD2PSZ128rrk(1(Class<VR128X>) -> 0(Class<VR128X>))  [3.04;3.04]
		 Successful, latency: 3.04
	VCVTPD2PSZ128rrk(3(Class<VR128X>) -> 0(Class<VR128X>))  [3.03;3.03]
		 Successful, latency: 3.03

-----VCVTPD2PSZ128rrkz-----
	VCVTPD2PSZ128rrkz(2(Class<VR128X>) -> 0(Class<VR128X>))  [3.04;3.04]
		 Successful, latency: 3.04

-----VCVTPD2PSZ256rr-----
	VCVTPD2PSZ256rr(1(Class<VR256X>) -> 0(Class<VR128X>))  [4.03;6.05]
		Dependencies:
			VEXTRACTI32X4Z256rrik(3(Class<VR256X>) -> 0(Class<VR128X>)) 
			VBROADCASTF32X2Z256rr(1(Class<VR128X>) -> 0(Class<VR256X>)) 
		Combined result: 7.05 cycles

-----VCVTPD2PSZ256rrbk-----
	VCVTPD2PSZ256rrbk(1(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VCVTPD2PSZ256rrk-----
	VCVTPD2PSZ256rrk(1(Class<VR128X>) -> 0(Class<VR128X>))  [3.05;3.05]
		 Successful, latency: 3.05
	VCVTPD2PSZ256rrk(3(Class<VR256X>) -> 0(Class<VR128X>))  [4.04;6.06]
		Dependencies:
			VEXTRACTI32X4Z256rrik(3(Class<VR256X>) -> 0(Class<VR128X>)) 
			VBROADCASTF32X2Z256rr(1(Class<VR128X>) -> 0(Class<VR256X>)) 
		Combined result: 7.06 cycles

-----VCVTPD2PSZ256rrkz-----
	VCVTPD2PSZ256rrkz(2(Class<VR256X>) -> 0(Class<VR128X>))  [4.03;6.05]
		Dependencies:
			VEXTRACTI32X4Z256rrik(3(Class<VR256X>) -> 0(Class<VR128X>)) 
			VBROADCASTF32X2Z256rr(1(Class<VR128X>) -> 0(Class<VR256X>)) 
		Combined result: 7.05 cycles

-----VCVTPD2PSZrr-----
	VCVTPD2PSZrr(1(Class<VR512>) -> 0(Class<VR256X>))  [4.38;7.4]
		Dependencies:
			VPMOVDWZrr(1(Class<VR512>) -> 0(Class<VR256X>)) 
			VINSERTF64X4Zrri(2(Class<VR256X>) -> 0(Class<VR512>)) 
		Combined result: 8.4 cycles

-----VCVTPD2PSZrrb-----
	VCVTPD2PSZrrb(1(Class<VR512>) -> 0(Class<VR256X>))  [4.36;7.38]
		Dependencies:
			VPMOVDWZrr(1(Class<VR512>) -> 0(Class<VR256X>)) 
			VINSERTF64X4Zrri(2(Class<VR256X>) -> 0(Class<VR512>)) 
		Combined result: 8.38 cycles

-----VCVTPD2PSZrrbk-----
	VCVTPD2PSZrrbk(1(Class<VR256X>) -> 0(Class<VR256X>))  [4.09;4.09]
		 Successful, latency: 4.09
	VCVTPD2PSZrrbk(3(Class<VR512>) -> 0(Class<VR256X>))  [4.39;7.42]
		Dependencies:
			VPMOVDWZrr(1(Class<VR512>) -> 0(Class<VR256X>)) 
			VINSERTF64X4Zrri(2(Class<VR256X>) -> 0(Class<VR512>)) 
		Combined result: 8.42 cycles

-----VCVTPD2PSZrrbkz-----
	VCVTPD2PSZrrbkz(2(Class<VR512>) -> 0(Class<VR256X>))  [4.37;7.39]
		Dependencies:
			VPMOVDWZrr(1(Class<VR512>) -> 0(Class<VR256X>)) 
			VINSERTF64X4Zrri(2(Class<VR256X>) -> 0(Class<VR512>)) 
		Combined result: 8.39 cycles

-----VCVTPD2PSZrrk-----
	VCVTPD2PSZrrk(1(Class<VR256X>) -> 0(Class<VR256X>))  [4.04;4.04]
		 Successful, latency: 4.04
	VCVTPD2PSZrrk(3(Class<VR512>) -> 0(Class<VR256X>))  [4.36;7.38]
		Dependencies:
			VPMOVDWZrr(1(Class<VR512>) -> 0(Class<VR256X>)) 
			VINSERTF64X4Zrri(2(Class<VR256X>) -> 0(Class<VR512>)) 
		Combined result: 8.38 cycles

-----VCVTPD2PSZrrkz-----
	VCVTPD2PSZrrkz(2(Class<VR512>) -> 0(Class<VR256X>))  [4.39;7.41]
		Dependencies:
			VPMOVDWZrr(1(Class<VR512>) -> 0(Class<VR256X>)) 
			VINSERTF64X4Zrri(2(Class<VR256X>) -> 0(Class<VR512>)) 
		Combined result: 8.41 cycles

-----VCVTPD2PSrr-----
	VCVTPD2PSrr(1(Class<VR128>) -> 0(Class<VR128>))  [3.05;3.05]
		 Successful, latency: 3.05

-----VCVTPD2QQZ128rr-----
	VCVTPD2QQZ128rr(1(Class<VR128X>) -> 0(Class<VR128X>))  [3.04;3.04]
		 Successful, latency: 3.04

-----VCVTPD2QQZ128rrk-----
	VCVTPD2QQZ128rrk(1(Class<VR128X>) -> 0(Class<VR128X>))  [3.03;3.03]
		 Successful, latency: 3.03
	VCVTPD2QQZ128rrk(3(Class<VR128X>) -> 0(Class<VR128X>))  [3.07;3.07]
		 Successful, latency: 3.07

-----VCVTPD2QQZ128rrkz-----
	VCVTPD2QQZ128rrkz(2(Class<VR128X>) -> 0(Class<VR128X>))  [3.03;3.03]
		 Successful, latency: 3.03

-----VCVTPD2QQZ256rr-----
	VCVTPD2QQZ256rr(1(Class<VR256X>) -> 0(Class<VR256X>))  [3.07;3.07]
		 Successful, latency: 3.07

-----VCVTPD2QQZ256rrb-----
	VCVTPD2QQZ256rrb(1(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VCVTPD2QQZ256rrbk-----
	VCVTPD2QQZ256rrbk(1(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VCVTPD2QQZ256rrbk(3(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VCVTPD2QQZ256rrbkz-----
	VCVTPD2QQZ256rrbkz(2(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VCVTPD2QQZ256rrk-----
	VCVTPD2QQZ256rrk(1(Class<VR256X>) -> 0(Class<VR256X>))  [3.03;3.03]
		 Successful, latency: 3.03
	VCVTPD2QQZ256rrk(3(Class<VR256X>) -> 0(Class<VR256X>))  [3.05;3.05]
		 Successful, latency: 3.05

-----VCVTPD2QQZ256rrkz-----
	VCVTPD2QQZ256rrkz(2(Class<VR256X>) -> 0(Class<VR256X>))  [3.03;3.03]
		 Successful, latency: 3.03

-----VCVTPD2QQZrr-----
	VCVTPD2QQZrr(1(Class<VR512>) -> 0(Class<VR512>))  [3.01;3.01]
		 Successful, latency: 3.01

-----VCVTPD2QQZrrb-----
	VCVTPD2QQZrrb(1(Class<VR512>) -> 0(Class<VR512>))  [3.02;3.02]
		 Successful, latency: 3.02

-----VCVTPD2QQZrrbk-----
	VCVTPD2QQZrrbk(1(Class<VR512>) -> 0(Class<VR512>))  [3.03;3.03]
		 Successful, latency: 3.03
	VCVTPD2QQZrrbk(3(Class<VR512>) -> 0(Class<VR512>))  [3.03;3.03]
		 Successful, latency: 3.03

-----VCVTPD2QQZrrbkz-----
	VCVTPD2QQZrrbkz(2(Class<VR512>) -> 0(Class<VR512>))  [3.03;3.03]
		 Successful, latency: 3.03

-----VCVTPD2QQZrrk-----
	VCVTPD2QQZrrk(1(Class<VR512>) -> 0(Class<VR512>))  [3.03;3.03]
		 Successful, latency: 3.03
	VCVTPD2QQZrrk(3(Class<VR512>) -> 0(Class<VR512>))  [3.02;3.02]
		 Successful, latency: 3.02

-----VCVTPD2QQZrrkz-----
	VCVTPD2QQZrrkz(2(Class<VR512>) -> 0(Class<VR512>))  [3.02;3.02]
		 Successful, latency: 3.02

-----VCVTPD2UDQZ128rr-----
	VCVTPD2UDQZ128rr(1(Class<VR128X>) -> 0(Class<VR128X>))  [3.05;3.05]
		 Successful, latency: 3.05

-----VCVTPD2UDQZ128rrk-----
	VCVTPD2UDQZ128rrk(1(Class<VR128X>) -> 0(Class<VR128X>))  [3.02;3.02]
		 Successful, latency: 3.02
	VCVTPD2UDQZ128rrk(3(Class<VR128X>) -> 0(Class<VR128X>))  [3.06;3.06]
		 Successful, latency: 3.06

-----VCVTPD2UDQZ128rrkz-----
	VCVTPD2UDQZ128rrkz(2(Class<VR128X>) -> 0(Class<VR128X>))  [3.02;3.02]
		 Successful, latency: 3.02

-----VCVTPD2UDQZ256rr-----
	VCVTPD2UDQZ256rr(1(Class<VR256X>) -> 0(Class<VR128X>))  [4.02;6.04]
		Dependencies:
			VEXTRACTI32X4Z256rrik(3(Class<VR256X>) -> 0(Class<VR128X>)) 
			VBROADCASTF32X2Z256rr(1(Class<VR128X>) -> 0(Class<VR256X>)) 
		Combined result: 7.04 cycles

-----VCVTPD2UDQZ256rrbk-----
	VCVTPD2UDQZ256rrbk(1(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VCVTPD2UDQZ256rrk-----
	VCVTPD2UDQZ256rrk(1(Class<VR128X>) -> 0(Class<VR128X>))  [3.02;3.02]
		 Successful, latency: 3.02
	VCVTPD2UDQZ256rrk(3(Class<VR256X>) -> 0(Class<VR128X>))  [4.03;6.05]
		Dependencies:
			VEXTRACTI32X4Z256rrik(3(Class<VR256X>) -> 0(Class<VR128X>)) 
			VBROADCASTF32X2Z256rr(1(Class<VR128X>) -> 0(Class<VR256X>)) 
		Combined result: 7.05 cycles

-----VCVTPD2UDQZ256rrkz-----
	VCVTPD2UDQZ256rrkz(2(Class<VR256X>) -> 0(Class<VR128X>))  [4.02;6.04]
		Dependencies:
			VEXTRACTI32X4Z256rrik(3(Class<VR256X>) -> 0(Class<VR128X>)) 
			VBROADCASTF32X2Z256rr(1(Class<VR128X>) -> 0(Class<VR256X>)) 
		Combined result: 7.04 cycles

-----VCVTPD2UDQZrr-----
	VCVTPD2UDQZrr(1(Class<VR512>) -> 0(Class<VR256X>))  [4.39;7.42]
		Dependencies:
			VPMOVDWZrr(1(Class<VR512>) -> 0(Class<VR256X>)) 
			VINSERTF64X4Zrri(2(Class<VR256X>) -> 0(Class<VR512>)) 
		Combined result: 8.42 cycles

-----VCVTPD2UDQZrrb-----
	VCVTPD2UDQZrrb(1(Class<VR512>) -> 0(Class<VR256X>))  [4.38;7.4]
		Dependencies:
			VPMOVDWZrr(1(Class<VR512>) -> 0(Class<VR256X>)) 
			VINSERTF64X4Zrri(2(Class<VR256X>) -> 0(Class<VR512>)) 
		Combined result: 8.4 cycles

-----VCVTPD2UDQZrrbk-----
	VCVTPD2UDQZrrbk(1(Class<VR256X>) -> 0(Class<VR256X>))  [4.04;4.04]
		 Successful, latency: 4.04
	VCVTPD2UDQZrrbk(3(Class<VR512>) -> 0(Class<VR256X>))  [4.38;7.4]
		Dependencies:
			VPMOVDWZrr(1(Class<VR512>) -> 0(Class<VR256X>)) 
			VINSERTF64X4Zrri(2(Class<VR256X>) -> 0(Class<VR512>)) 
		Combined result: 8.4 cycles

-----VCVTPD2UDQZrrbkz-----
	VCVTPD2UDQZrrbkz(2(Class<VR512>) -> 0(Class<VR256X>))  [4.38;7.4]
		Dependencies:
			VPMOVDWZrr(1(Class<VR512>) -> 0(Class<VR256X>)) 
			VINSERTF64X4Zrri(2(Class<VR256X>) -> 0(Class<VR512>)) 
		Combined result: 8.4 cycles

-----VCVTPD2UDQZrrk-----
	VCVTPD2UDQZrrk(1(Class<VR256X>) -> 0(Class<VR256X>))  [4.04;4.04]
		 Successful, latency: 4.04
	VCVTPD2UDQZrrk(3(Class<VR512>) -> 0(Class<VR256X>))  [4.38;7.4]
		Dependencies:
			VPMOVDWZrr(1(Class<VR512>) -> 0(Class<VR256X>)) 
			VINSERTF64X4Zrri(2(Class<VR256X>) -> 0(Class<VR512>)) 
		Combined result: 8.4 cycles

-----VCVTPD2UDQZrrkz-----
	VCVTPD2UDQZrrkz(2(Class<VR512>) -> 0(Class<VR256X>))  [4.39;7.41]
		Dependencies:
			VPMOVDWZrr(1(Class<VR512>) -> 0(Class<VR256X>)) 
			VINSERTF64X4Zrri(2(Class<VR256X>) -> 0(Class<VR512>)) 
		Combined result: 8.41 cycles

-----VCVTPD2UQQZ128rr-----
	VCVTPD2UQQZ128rr(1(Class<VR128X>) -> 0(Class<VR128X>))  [3.03;3.03]
		 Successful, latency: 3.03

-----VCVTPD2UQQZ128rrk-----
	VCVTPD2UQQZ128rrk(1(Class<VR128X>) -> 0(Class<VR128X>))  [3.03;3.03]
		 Successful, latency: 3.03
	VCVTPD2UQQZ128rrk(3(Class<VR128X>) -> 0(Class<VR128X>))  [3.02;3.02]
		 Successful, latency: 3.02

-----VCVTPD2UQQZ128rrkz-----
	VCVTPD2UQQZ128rrkz(2(Class<VR128X>) -> 0(Class<VR128X>))  [3.06;3.06]
		 Successful, latency: 3.06

-----VCVTPD2UQQZ256rr-----
	VCVTPD2UQQZ256rr(1(Class<VR256X>) -> 0(Class<VR256X>))  [3.03;3.03]
		 Successful, latency: 3.03

-----VCVTPD2UQQZ256rrb-----
	VCVTPD2UQQZ256rrb(1(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VCVTPD2UQQZ256rrbk-----
	VCVTPD2UQQZ256rrbk(1(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VCVTPD2UQQZ256rrbk(3(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VCVTPD2UQQZ256rrbkz-----
	VCVTPD2UQQZ256rrbkz(2(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VCVTPD2UQQZ256rrk-----
	VCVTPD2UQQZ256rrk(1(Class<VR256X>) -> 0(Class<VR256X>))  [3.02;3.02]
		 Successful, latency: 3.02
	VCVTPD2UQQZ256rrk(3(Class<VR256X>) -> 0(Class<VR256X>))  [3.04;3.04]
		 Successful, latency: 3.04

-----VCVTPD2UQQZ256rrkz-----
	VCVTPD2UQQZ256rrkz(2(Class<VR256X>) -> 0(Class<VR256X>))  [3.03;3.03]
		 Successful, latency: 3.03

-----VCVTPD2UQQZrr-----
	VCVTPD2UQQZrr(1(Class<VR512>) -> 0(Class<VR512>))  [3.04;3.04]
		 Successful, latency: 3.04

-----VCVTPD2UQQZrrb-----
	VCVTPD2UQQZrrb(1(Class<VR512>) -> 0(Class<VR512>))  [3.04;3.04]
		 Successful, latency: 3.04

-----VCVTPD2UQQZrrbk-----
	VCVTPD2UQQZrrbk(1(Class<VR512>) -> 0(Class<VR512>))  [3.02;3.02]
		 Successful, latency: 3.02
	VCVTPD2UQQZrrbk(3(Class<VR512>) -> 0(Class<VR512>))  [3.03;3.03]
		 Successful, latency: 3.03

-----VCVTPD2UQQZrrbkz-----
	VCVTPD2UQQZrrbkz(2(Class<VR512>) -> 0(Class<VR512>))  [3.03;3.03]
		 Successful, latency: 3.03

-----VCVTPD2UQQZrrk-----
	VCVTPD2UQQZrrk(1(Class<VR512>) -> 0(Class<VR512>))  [3.02;3.02]
		 Successful, latency: 3.02
	VCVTPD2UQQZrrk(3(Class<VR512>) -> 0(Class<VR512>))  [3.04;3.04]
		 Successful, latency: 3.04

-----VCVTPD2UQQZrrkz-----
	VCVTPD2UQQZrrkz(2(Class<VR512>) -> 0(Class<VR512>))  [3.05;3.05]
		 Successful, latency: 3.05

-----VCVTPH2BF8SZ128rr-----
	VCVTPH2BF8SZ128rr(1(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VCVTPH2BF8SZ128rrk-----
	VCVTPH2BF8SZ128rrk(1(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VCVTPH2BF8SZ128rrk(3(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VCVTPH2BF8SZ128rrkz-----
	VCVTPH2BF8SZ128rrkz(2(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VCVTPH2BF8SZ256rrk-----
	VCVTPH2BF8SZ256rrk(1(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VCVTPH2BF8SZrrk-----
	VCVTPH2BF8SZrrk(1(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VCVTPH2BF8Z128rr-----
	VCVTPH2BF8Z128rr(1(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VCVTPH2BF8Z128rrk-----
	VCVTPH2BF8Z128rrk(1(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VCVTPH2BF8Z128rrk(3(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VCVTPH2BF8Z128rrkz-----
	VCVTPH2BF8Z128rrkz(2(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VCVTPH2BF8Z256rrk-----
	VCVTPH2BF8Z256rrk(1(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VCVTPH2BF8Zrrk-----
	VCVTPH2BF8Zrrk(1(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VCVTPH2DQZ128rr-----
	VCVTPH2DQZ128rr(1(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VCVTPH2DQZ128rrk-----
	VCVTPH2DQZ128rrk(1(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VCVTPH2DQZ128rrk(3(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VCVTPH2DQZ128rrkz-----
	VCVTPH2DQZ128rrkz(2(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VCVTPH2DQZ256rrbk-----
	VCVTPH2DQZ256rrbk(1(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VCVTPH2DQZ256rrk-----
	VCVTPH2DQZ256rrk(1(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VCVTPH2DQZrrbk-----
	VCVTPH2DQZrrbk(1(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VCVTPH2DQZrrk-----
	VCVTPH2DQZrrk(1(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VCVTPH2HF8SZ128rr-----
	VCVTPH2HF8SZ128rr(1(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VCVTPH2HF8SZ128rrk-----
	VCVTPH2HF8SZ128rrk(1(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VCVTPH2HF8SZ128rrk(3(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VCVTPH2HF8SZ128rrkz-----
	VCVTPH2HF8SZ128rrkz(2(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VCVTPH2HF8SZ256rrk-----
	VCVTPH2HF8SZ256rrk(1(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VCVTPH2HF8SZrrk-----
	VCVTPH2HF8SZrrk(1(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VCVTPH2HF8Z128rr-----
	VCVTPH2HF8Z128rr(1(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VCVTPH2HF8Z128rrk-----
	VCVTPH2HF8Z128rrk(1(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VCVTPH2HF8Z128rrk(3(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VCVTPH2HF8Z128rrkz-----
	VCVTPH2HF8Z128rrkz(2(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VCVTPH2HF8Z256rrk-----
	VCVTPH2HF8Z256rrk(1(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VCVTPH2HF8Zrrk-----
	VCVTPH2HF8Zrrk(1(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VCVTPH2IBSZ128rr-----
	VCVTPH2IBSZ128rr(1(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VCVTPH2IBSZ128rrk-----
	VCVTPH2IBSZ128rrk(1(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VCVTPH2IBSZ128rrk(3(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VCVTPH2IBSZ128rrkz-----
	VCVTPH2IBSZ128rrkz(2(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VCVTPH2IBSZ256rr-----
	VCVTPH2IBSZ256rr(1(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VCVTPH2IBSZ256rrb-----
	VCVTPH2IBSZ256rrb(1(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VCVTPH2IBSZ256rrbk-----
	VCVTPH2IBSZ256rrbk(1(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VCVTPH2IBSZ256rrbk(3(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VCVTPH2IBSZ256rrbkz-----
	VCVTPH2IBSZ256rrbkz(2(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VCVTPH2IBSZ256rrk-----
	VCVTPH2IBSZ256rrk(1(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VCVTPH2IBSZ256rrk(3(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VCVTPH2IBSZ256rrkz-----
	VCVTPH2IBSZ256rrkz(2(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VCVTPH2IBSZrr-----
	VCVTPH2IBSZrr(1(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VCVTPH2IBSZrrb-----
	VCVTPH2IBSZrrb(1(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VCVTPH2IBSZrrbk-----
	VCVTPH2IBSZrrbk(1(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VCVTPH2IBSZrrbk(3(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VCVTPH2IBSZrrbkz-----
	VCVTPH2IBSZrrbkz(2(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VCVTPH2IBSZrrk-----
	VCVTPH2IBSZrrk(1(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VCVTPH2IBSZrrk(3(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VCVTPH2IBSZrrkz-----
	VCVTPH2IBSZrrkz(2(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VCVTPH2IUBSZ128rr-----
	VCVTPH2IUBSZ128rr(1(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VCVTPH2IUBSZ128rrk-----
	VCVTPH2IUBSZ128rrk(1(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VCVTPH2IUBSZ128rrk(3(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VCVTPH2IUBSZ128rrkz-----
	VCVTPH2IUBSZ128rrkz(2(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VCVTPH2IUBSZ256rr-----
	VCVTPH2IUBSZ256rr(1(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VCVTPH2IUBSZ256rrb-----
	VCVTPH2IUBSZ256rrb(1(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VCVTPH2IUBSZ256rrbk-----
	VCVTPH2IUBSZ256rrbk(1(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VCVTPH2IUBSZ256rrbk(3(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VCVTPH2IUBSZ256rrbkz-----
	VCVTPH2IUBSZ256rrbkz(2(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VCVTPH2IUBSZ256rrk-----
	VCVTPH2IUBSZ256rrk(1(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VCVTPH2IUBSZ256rrk(3(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VCVTPH2IUBSZ256rrkz-----
	VCVTPH2IUBSZ256rrkz(2(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VCVTPH2IUBSZrr-----
	VCVTPH2IUBSZrr(1(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VCVTPH2IUBSZrrb-----
	VCVTPH2IUBSZrrb(1(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VCVTPH2IUBSZrrbk-----
	VCVTPH2IUBSZrrbk(1(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VCVTPH2IUBSZrrbk(3(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VCVTPH2IUBSZrrbkz-----
	VCVTPH2IUBSZrrbkz(2(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VCVTPH2IUBSZrrk-----
	VCVTPH2IUBSZrrk(1(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VCVTPH2IUBSZrrk(3(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VCVTPH2IUBSZrrkz-----
	VCVTPH2IUBSZrrkz(2(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VCVTPH2PDZ128rr-----
	VCVTPH2PDZ128rr(1(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VCVTPH2PDZ128rrk-----
	VCVTPH2PDZ128rrk(1(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VCVTPH2PDZ128rrk(3(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VCVTPH2PDZ128rrkz-----
	VCVTPH2PDZ128rrkz(2(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VCVTPH2PDZ256rrbk-----
	VCVTPH2PDZ256rrbk(1(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VCVTPH2PDZ256rrk-----
	VCVTPH2PDZ256rrk(1(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VCVTPH2PDZrrbk-----
	VCVTPH2PDZrrbk(1(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VCVTPH2PDZrrk-----
	VCVTPH2PDZrrk(1(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VCVTPH2PSXZ128rr-----
	VCVTPH2PSXZ128rr(1(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VCVTPH2PSXZ128rrk-----
	VCVTPH2PSXZ128rrk(1(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VCVTPH2PSXZ128rrk(3(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VCVTPH2PSXZ128rrkz-----
	VCVTPH2PSXZ128rrkz(2(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VCVTPH2PSXZ256rrbk-----
	VCVTPH2PSXZ256rrbk(1(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VCVTPH2PSXZ256rrk-----
	VCVTPH2PSXZ256rrk(1(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VCVTPH2PSXZrrbk-----
	VCVTPH2PSXZrrbk(1(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VCVTPH2PSXZrrk-----
	VCVTPH2PSXZrrk(1(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VCVTPH2PSYrr-----
	VCVTPH2PSYrr(1(Class<VR128>) -> 0(Class<VR256>))  [4.02;6.05]
		Dependencies:
			VEXTRACTF128rri(1(Class<VR256>) -> 0(Class<VR128>)) 
			VPBROADCASTWYrr(1(Class<VR128>) -> 0(Class<VR256>)) 
		Combined result: 7.06 cycles

-----VCVTPH2PSZ128rr-----
	VCVTPH2PSZ128rr(1(Class<VR128X>) -> 0(Class<VR128X>))  [3.02;3.02]
		 Successful, latency: 3.02

-----VCVTPH2PSZ128rrk-----
	VCVTPH2PSZ128rrk(1(Class<VR128X>) -> 0(Class<VR128X>))  [3.05;3.05]
		 Successful, latency: 3.05
	VCVTPH2PSZ128rrk(3(Class<VR128X>) -> 0(Class<VR128X>))  [3.02;3.02]
		 Successful, latency: 3.02

-----VCVTPH2PSZ128rrkz-----
	VCVTPH2PSZ128rrkz(2(Class<VR128X>) -> 0(Class<VR128X>))  [3.01;3.01]
		 Successful, latency: 3.01

-----VCVTPH2PSZ256rr-----
	VCVTPH2PSZ256rr(1(Class<VR128X>) -> 0(Class<VR256X>))  [4.01;6.04]
		Dependencies:
			VEXTRACTI32X4Z256rrik(3(Class<VR256X>) -> 0(Class<VR128X>)) 
			VBROADCASTF32X2Z256rr(1(Class<VR128X>) -> 0(Class<VR256X>)) 
		Combined result: 7.06 cycles

-----VCVTPH2PSZ256rrbk-----
	VCVTPH2PSZ256rrbk(1(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VCVTPH2PSZ256rrk-----
	VCVTPH2PSZ256rrk(1(Class<VR256X>) -> 0(Class<VR256X>))  [3.06;3.06]
		 Successful, latency: 3.06
	VCVTPH2PSZ256rrk(3(Class<VR128X>) -> 0(Class<VR256X>))  [4.01;6.03]
		Dependencies:
			VEXTRACTI32X4Z256rrik(3(Class<VR256X>) -> 0(Class<VR128X>)) 
			VBROADCASTF32X2Z256rr(1(Class<VR128X>) -> 0(Class<VR256X>)) 
		Combined result: 7.05 cycles

-----VCVTPH2PSZ256rrkz-----
	VCVTPH2PSZ256rrkz(2(Class<VR128X>) -> 0(Class<VR256X>))  [4;6.02]
		Dependencies:
			VEXTRACTI32X4Z256rrik(3(Class<VR256X>) -> 0(Class<VR128X>)) 
			VBROADCASTF32X2Z256rr(1(Class<VR128X>) -> 0(Class<VR256X>)) 
		Combined result: 7.05 cycles

-----VCVTPH2PSZrr-----
	VCVTPH2PSZrr(1(Class<VR256X>) -> 0(Class<VR512>))  [6.02;9.04]
		Dependencies:
			VPMOVDWZrr(1(Class<VR512>) -> 0(Class<VR256X>)) 
			VINSERTF64X4Zrri(2(Class<VR256X>) -> 0(Class<VR512>)) 
		Combined result: 10.1 cycles

-----VCVTPH2PSZrrb-----
	VCVTPH2PSZrrb(1(Class<VR256X>) -> 0(Class<VR512>))  [6.04;9.06]
		Dependencies:
			VPMOVDWZrr(1(Class<VR512>) -> 0(Class<VR256X>)) 
			VINSERTF64X4Zrri(2(Class<VR256X>) -> 0(Class<VR512>)) 
		Combined result: 10.1 cycles

-----VCVTPH2PSZrrbk-----
	VCVTPH2PSZrrbk(1(Class<VR512>) -> 0(Class<VR512>))  [3.04;3.04]
		 Successful, latency: 3.04
	VCVTPH2PSZrrbk(3(Class<VR256X>) -> 0(Class<VR512>))  [6.02;9.05]
		Dependencies:
			VPMOVDWZrr(1(Class<VR512>) -> 0(Class<VR256X>)) 
			VINSERTF64X4Zrri(2(Class<VR256X>) -> 0(Class<VR512>)) 
		Combined result: 10.1 cycles

-----VCVTPH2PSZrrbkz-----
	VCVTPH2PSZrrbkz(2(Class<VR256X>) -> 0(Class<VR512>))  [6.03;9.05]
		Dependencies:
			VPMOVDWZrr(1(Class<VR512>) -> 0(Class<VR256X>)) 
			VINSERTF64X4Zrri(2(Class<VR256X>) -> 0(Class<VR512>)) 
		Combined result: 10.1 cycles

-----VCVTPH2PSZrrk-----
	VCVTPH2PSZrrk(1(Class<VR512>) -> 0(Class<VR512>))  [3.02;3.02]
		 Successful, latency: 3.02
	VCVTPH2PSZrrk(3(Class<VR256X>) -> 0(Class<VR512>))  [6.02;9.04]
		Dependencies:
			VPMOVDWZrr(1(Class<VR512>) -> 0(Class<VR256X>)) 
			VINSERTF64X4Zrri(2(Class<VR256X>) -> 0(Class<VR512>)) 
		Combined result: 10.1 cycles

-----VCVTPH2PSZrrkz-----
	VCVTPH2PSZrrkz(2(Class<VR256X>) -> 0(Class<VR512>))  [6.01;9.03]
		Dependencies:
			VPMOVDWZrr(1(Class<VR512>) -> 0(Class<VR256X>)) 
			VINSERTF64X4Zrri(2(Class<VR256X>) -> 0(Class<VR512>)) 
		Combined result: 10.1 cycles

-----VCVTPH2PSrr-----
	VCVTPH2PSrr(1(Class<VR128>) -> 0(Class<VR128>))  [3.04;3.04]
		 Successful, latency: 3.04

-----VCVTPH2QQZ128rr-----
	VCVTPH2QQZ128rr(1(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VCVTPH2QQZ128rrk-----
	VCVTPH2QQZ128rrk(1(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VCVTPH2QQZ128rrk(3(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VCVTPH2QQZ128rrkz-----
	VCVTPH2QQZ128rrkz(2(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VCVTPH2QQZ256rrbk-----
	VCVTPH2QQZ256rrbk(1(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VCVTPH2QQZ256rrk-----
	VCVTPH2QQZ256rrk(1(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VCVTPH2QQZrrbk-----
	VCVTPH2QQZrrbk(1(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VCVTPH2QQZrrk-----
	VCVTPH2QQZrrk(1(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VCVTPH2UDQZ128rr-----
	VCVTPH2UDQZ128rr(1(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VCVTPH2UDQZ128rrk-----
	VCVTPH2UDQZ128rrk(1(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VCVTPH2UDQZ128rrk(3(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VCVTPH2UDQZ128rrkz-----
	VCVTPH2UDQZ128rrkz(2(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VCVTPH2UDQZ256rrbk-----
	VCVTPH2UDQZ256rrbk(1(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VCVTPH2UDQZ256rrk-----
	VCVTPH2UDQZ256rrk(1(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VCVTPH2UDQZrrbk-----
	VCVTPH2UDQZrrbk(1(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VCVTPH2UDQZrrk-----
	VCVTPH2UDQZrrk(1(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VCVTPH2UQQZ128rr-----
	VCVTPH2UQQZ128rr(1(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VCVTPH2UQQZ128rrk-----
	VCVTPH2UQQZ128rrk(1(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VCVTPH2UQQZ128rrk(3(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VCVTPH2UQQZ128rrkz-----
	VCVTPH2UQQZ128rrkz(2(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VCVTPH2UQQZ256rrbk-----
	VCVTPH2UQQZ256rrbk(1(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VCVTPH2UQQZ256rrk-----
	VCVTPH2UQQZ256rrk(1(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VCVTPH2UQQZrrbk-----
	VCVTPH2UQQZrrbk(1(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VCVTPH2UQQZrrk-----
	VCVTPH2UQQZrrk(1(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VCVTPH2UWZ128rr-----
	VCVTPH2UWZ128rr(1(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VCVTPH2UWZ128rrk-----
	VCVTPH2UWZ128rrk(1(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VCVTPH2UWZ128rrk(3(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VCVTPH2UWZ128rrkz-----
	VCVTPH2UWZ128rrkz(2(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VCVTPH2UWZ256rr-----
	VCVTPH2UWZ256rr(1(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VCVTPH2UWZ256rrb-----
	VCVTPH2UWZ256rrb(1(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VCVTPH2UWZ256rrbk-----
	VCVTPH2UWZ256rrbk(1(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VCVTPH2UWZ256rrbk(3(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VCVTPH2UWZ256rrbkz-----
	VCVTPH2UWZ256rrbkz(2(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VCVTPH2UWZ256rrk-----
	VCVTPH2UWZ256rrk(1(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VCVTPH2UWZ256rrk(3(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VCVTPH2UWZ256rrkz-----
	VCVTPH2UWZ256rrkz(2(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VCVTPH2UWZrr-----
	VCVTPH2UWZrr(1(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VCVTPH2UWZrrb-----
	VCVTPH2UWZrrb(1(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VCVTPH2UWZrrbk-----
	VCVTPH2UWZrrbk(1(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VCVTPH2UWZrrbk(3(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VCVTPH2UWZrrbkz-----
	VCVTPH2UWZrrbkz(2(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VCVTPH2UWZrrk-----
	VCVTPH2UWZrrk(1(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VCVTPH2UWZrrk(3(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VCVTPH2UWZrrkz-----
	VCVTPH2UWZrrkz(2(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VCVTPH2WZ128rr-----
	VCVTPH2WZ128rr(1(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VCVTPH2WZ128rrk-----
	VCVTPH2WZ128rrk(1(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VCVTPH2WZ128rrk(3(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VCVTPH2WZ128rrkz-----
	VCVTPH2WZ128rrkz(2(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VCVTPH2WZ256rr-----
	VCVTPH2WZ256rr(1(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VCVTPH2WZ256rrb-----
	VCVTPH2WZ256rrb(1(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VCVTPH2WZ256rrbk-----
	VCVTPH2WZ256rrbk(1(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VCVTPH2WZ256rrbk(3(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VCVTPH2WZ256rrbkz-----
	VCVTPH2WZ256rrbkz(2(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VCVTPH2WZ256rrk-----
	VCVTPH2WZ256rrk(1(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VCVTPH2WZ256rrk(3(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VCVTPH2WZ256rrkz-----
	VCVTPH2WZ256rrkz(2(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VCVTPH2WZrr-----
	VCVTPH2WZrr(1(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VCVTPH2WZrrb-----
	VCVTPH2WZrrb(1(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VCVTPH2WZrrbk-----
	VCVTPH2WZrrbk(1(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VCVTPH2WZrrbk(3(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VCVTPH2WZrrbkz-----
	VCVTPH2WZrrbkz(2(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VCVTPH2WZrrk-----
	VCVTPH2WZrrk(1(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VCVTPH2WZrrk(3(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VCVTPH2WZrrkz-----
	VCVTPH2WZrrkz(2(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VCVTPS2DQYrr-----
	VCVTPS2DQYrr(1(Class<VR256>) -> 0(Class<VR256>))  [3.02;3.02]
		 Successful, latency: 3.02

-----VCVTPS2DQZ128rr-----
	VCVTPS2DQZ128rr(1(Class<VR128X>) -> 0(Class<VR128X>))  [3.03;3.03]
		 Successful, latency: 3.03

-----VCVTPS2DQZ128rrk-----
	VCVTPS2DQZ128rrk(1(Class<VR128X>) -> 0(Class<VR128X>))  [3.02;3.02]
		 Successful, latency: 3.02
	VCVTPS2DQZ128rrk(3(Class<VR128X>) -> 0(Class<VR128X>))  [3.04;3.04]
		 Successful, latency: 3.04

-----VCVTPS2DQZ128rrkz-----
	VCVTPS2DQZ128rrkz(2(Class<VR128X>) -> 0(Class<VR128X>))  [3.03;3.03]
		 Successful, latency: 3.03

-----VCVTPS2DQZ256rr-----
	VCVTPS2DQZ256rr(1(Class<VR256X>) -> 0(Class<VR256X>))  [3.02;3.02]
		 Successful, latency: 3.02

-----VCVTPS2DQZ256rrb-----
	VCVTPS2DQZ256rrb(1(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VCVTPS2DQZ256rrbk-----
	VCVTPS2DQZ256rrbk(1(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VCVTPS2DQZ256rrbk(3(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VCVTPS2DQZ256rrbkz-----
	VCVTPS2DQZ256rrbkz(2(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VCVTPS2DQZ256rrk-----
	VCVTPS2DQZ256rrk(1(Class<VR256X>) -> 0(Class<VR256X>))  [3.03;3.03]
		 Successful, latency: 3.03
	VCVTPS2DQZ256rrk(3(Class<VR256X>) -> 0(Class<VR256X>))  [3.05;3.05]
		 Successful, latency: 3.05

-----VCVTPS2DQZ256rrkz-----
	VCVTPS2DQZ256rrkz(2(Class<VR256X>) -> 0(Class<VR256X>))  [3.04;3.04]
		 Successful, latency: 3.04

-----VCVTPS2DQZrr-----
	VCVTPS2DQZrr(1(Class<VR512>) -> 0(Class<VR512>))  [3.03;3.03]
		 Successful, latency: 3.03

-----VCVTPS2DQZrrb-----
	VCVTPS2DQZrrb(1(Class<VR512>) -> 0(Class<VR512>))  [3.02;3.02]
		 Successful, latency: 3.02

-----VCVTPS2DQZrrbk-----
	VCVTPS2DQZrrbk(1(Class<VR512>) -> 0(Class<VR512>))  [3.03;3.03]
		 Successful, latency: 3.03
	VCVTPS2DQZrrbk(3(Class<VR512>) -> 0(Class<VR512>))  [3.03;3.03]
		 Successful, latency: 3.03

-----VCVTPS2DQZrrbkz-----
	VCVTPS2DQZrrbkz(2(Class<VR512>) -> 0(Class<VR512>))  [3.03;3.03]
		 Successful, latency: 3.03

-----VCVTPS2DQZrrk-----
	VCVTPS2DQZrrk(1(Class<VR512>) -> 0(Class<VR512>))  [3.03;3.03]
		 Successful, latency: 3.03
	VCVTPS2DQZrrk(3(Class<VR512>) -> 0(Class<VR512>))  [3.04;3.04]
		 Successful, latency: 3.04

-----VCVTPS2DQZrrkz-----
	VCVTPS2DQZrrkz(2(Class<VR512>) -> 0(Class<VR512>))  [3.02;3.02]
		 Successful, latency: 3.02

-----VCVTPS2DQrr-----
	VCVTPS2DQrr(1(Class<VR128>) -> 0(Class<VR128>))  [3.02;3.02]
		 Successful, latency: 3.02

-----VCVTPS2IBSZ128rr-----
	VCVTPS2IBSZ128rr(1(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VCVTPS2IBSZ128rrk-----
	VCVTPS2IBSZ128rrk(1(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VCVTPS2IBSZ128rrk(3(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VCVTPS2IBSZ128rrkz-----
	VCVTPS2IBSZ128rrkz(2(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VCVTPS2IBSZ256rr-----
	VCVTPS2IBSZ256rr(1(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VCVTPS2IBSZ256rrb-----
	VCVTPS2IBSZ256rrb(1(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VCVTPS2IBSZ256rrbk-----
	VCVTPS2IBSZ256rrbk(1(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VCVTPS2IBSZ256rrbk(3(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VCVTPS2IBSZ256rrbkz-----
	VCVTPS2IBSZ256rrbkz(2(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VCVTPS2IBSZ256rrk-----
	VCVTPS2IBSZ256rrk(1(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VCVTPS2IBSZ256rrk(3(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VCVTPS2IBSZ256rrkz-----
	VCVTPS2IBSZ256rrkz(2(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VCVTPS2IBSZrr-----
	VCVTPS2IBSZrr(1(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VCVTPS2IBSZrrb-----
	VCVTPS2IBSZrrb(1(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VCVTPS2IBSZrrbk-----
	VCVTPS2IBSZrrbk(1(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VCVTPS2IBSZrrbk(3(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VCVTPS2IBSZrrbkz-----
	VCVTPS2IBSZrrbkz(2(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VCVTPS2IBSZrrk-----
	VCVTPS2IBSZrrk(1(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VCVTPS2IBSZrrk(3(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VCVTPS2IBSZrrkz-----
	VCVTPS2IBSZrrkz(2(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VCVTPS2IUBSZ128rr-----
	VCVTPS2IUBSZ128rr(1(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VCVTPS2IUBSZ128rrk-----
	VCVTPS2IUBSZ128rrk(1(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VCVTPS2IUBSZ128rrk(3(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VCVTPS2IUBSZ128rrkz-----
	VCVTPS2IUBSZ128rrkz(2(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VCVTPS2IUBSZ256rr-----
	VCVTPS2IUBSZ256rr(1(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VCVTPS2IUBSZ256rrb-----
	VCVTPS2IUBSZ256rrb(1(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VCVTPS2IUBSZ256rrbk-----
	VCVTPS2IUBSZ256rrbk(1(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VCVTPS2IUBSZ256rrbk(3(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VCVTPS2IUBSZ256rrbkz-----
	VCVTPS2IUBSZ256rrbkz(2(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VCVTPS2IUBSZ256rrk-----
	VCVTPS2IUBSZ256rrk(1(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VCVTPS2IUBSZ256rrk(3(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VCVTPS2IUBSZ256rrkz-----
	VCVTPS2IUBSZ256rrkz(2(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VCVTPS2IUBSZrr-----
	VCVTPS2IUBSZrr(1(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VCVTPS2IUBSZrrb-----
	VCVTPS2IUBSZrrb(1(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VCVTPS2IUBSZrrbk-----
	VCVTPS2IUBSZrrbk(1(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VCVTPS2IUBSZrrbk(3(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VCVTPS2IUBSZrrbkz-----
	VCVTPS2IUBSZrrbkz(2(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VCVTPS2IUBSZrrk-----
	VCVTPS2IUBSZrrk(1(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VCVTPS2IUBSZrrk(3(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VCVTPS2IUBSZrrkz-----
	VCVTPS2IUBSZrrkz(2(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VCVTPS2PDYrr-----
	VCVTPS2PDYrr(1(Class<VR128>) -> 0(Class<VR256>))  [4.04;6.07]
		Dependencies:
			VEXTRACTF128rri(1(Class<VR256>) -> 0(Class<VR128>)) 
			VPBROADCASTWYrr(1(Class<VR128>) -> 0(Class<VR256>)) 
		Combined result: 7.08 cycles

-----VCVTPS2PDZ128rr-----
	VCVTPS2PDZ128rr(1(Class<VR128X>) -> 0(Class<VR128X>))  [3.04;3.04]
		 Successful, latency: 3.04

-----VCVTPS2PDZ128rrk-----
	VCVTPS2PDZ128rrk(1(Class<VR128X>) -> 0(Class<VR128X>))  [3.02;3.02]
		 Successful, latency: 3.02
	VCVTPS2PDZ128rrk(3(Class<VR128X>) -> 0(Class<VR128X>))  [3.04;3.04]
		 Successful, latency: 3.04

-----VCVTPS2PDZ128rrkz-----
	VCVTPS2PDZ128rrkz(2(Class<VR128X>) -> 0(Class<VR128X>))  [3.02;3.02]
		 Successful, latency: 3.02

-----VCVTPS2PDZ256rr-----
	VCVTPS2PDZ256rr(1(Class<VR128X>) -> 0(Class<VR256X>))  [4.02;6.04]
		Dependencies:
			VEXTRACTI32X4Z256rrik(3(Class<VR256X>) -> 0(Class<VR128X>)) 
			VBROADCASTF32X2Z256rr(1(Class<VR128X>) -> 0(Class<VR256X>)) 
		Combined result: 7.06 cycles

-----VCVTPS2PDZ256rrbk-----
	VCVTPS2PDZ256rrbk(1(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VCVTPS2PDZ256rrk-----
	VCVTPS2PDZ256rrk(1(Class<VR256X>) -> 0(Class<VR256X>))  [3.02;3.02]
		 Successful, latency: 3.02
	VCVTPS2PDZ256rrk(3(Class<VR128X>) -> 0(Class<VR256X>))  [4.02;6.04]
		Dependencies:
			VEXTRACTI32X4Z256rrik(3(Class<VR256X>) -> 0(Class<VR128X>)) 
			VBROADCASTF32X2Z256rr(1(Class<VR128X>) -> 0(Class<VR256X>)) 
		Combined result: 7.07 cycles

-----VCVTPS2PDZ256rrkz-----
	VCVTPS2PDZ256rrkz(2(Class<VR128X>) -> 0(Class<VR256X>))  [4;6.02]
		Dependencies:
			VEXTRACTI32X4Z256rrik(3(Class<VR256X>) -> 0(Class<VR128X>)) 
			VBROADCASTF32X2Z256rr(1(Class<VR128X>) -> 0(Class<VR256X>)) 
		Combined result: 7.04 cycles

-----VCVTPS2PDZrr-----
	VCVTPS2PDZrr(1(Class<VR256X>) -> 0(Class<VR512>))  [6.01;9.04]
		Dependencies:
			VPMOVDWZrr(1(Class<VR512>) -> 0(Class<VR256X>)) 
			VINSERTF64X4Zrri(2(Class<VR256X>) -> 0(Class<VR512>)) 
		Combined result: 10.1 cycles

-----VCVTPS2PDZrrb-----
	VCVTPS2PDZrrb(1(Class<VR256X>) -> 0(Class<VR512>))  [6.01;9.03]
		Dependencies:
			VPMOVDWZrr(1(Class<VR512>) -> 0(Class<VR256X>)) 
			VINSERTF64X4Zrri(2(Class<VR256X>) -> 0(Class<VR512>)) 
		Combined result: 10.1 cycles

-----VCVTPS2PDZrrbk-----
	VCVTPS2PDZrrbk(1(Class<VR512>) -> 0(Class<VR512>))  [3.02;3.02]
		 Successful, latency: 3.02
	VCVTPS2PDZrrbk(3(Class<VR256X>) -> 0(Class<VR512>))  [6.01;9.04]
		Dependencies:
			VPMOVDWZrr(1(Class<VR512>) -> 0(Class<VR256X>)) 
			VINSERTF64X4Zrri(2(Class<VR256X>) -> 0(Class<VR512>)) 
		Combined result: 10.1 cycles

-----VCVTPS2PDZrrbkz-----
	VCVTPS2PDZrrbkz(2(Class<VR256X>) -> 0(Class<VR512>))  [6.03;9.05]
		Dependencies:
			VPMOVDWZrr(1(Class<VR512>) -> 0(Class<VR256X>)) 
			VINSERTF64X4Zrri(2(Class<VR256X>) -> 0(Class<VR512>)) 
		Combined result: 10.1 cycles

-----VCVTPS2PDZrrk-----
	VCVTPS2PDZrrk(1(Class<VR512>) -> 0(Class<VR512>))  [3.02;3.02]
		 Successful, latency: 3.02
	VCVTPS2PDZrrk(3(Class<VR256X>) -> 0(Class<VR512>))  [6.03;9.05]
		Dependencies:
			VPMOVDWZrr(1(Class<VR512>) -> 0(Class<VR256X>)) 
			VINSERTF64X4Zrri(2(Class<VR256X>) -> 0(Class<VR512>)) 
		Combined result: 10.1 cycles

-----VCVTPS2PDZrrkz-----
	VCVTPS2PDZrrkz(2(Class<VR256X>) -> 0(Class<VR512>))  [6;9.03]
		Dependencies:
			VPMOVDWZrr(1(Class<VR512>) -> 0(Class<VR256X>)) 
			VINSERTF64X4Zrri(2(Class<VR256X>) -> 0(Class<VR512>)) 
		Combined result: 10.1 cycles

-----VCVTPS2PDrr-----
	VCVTPS2PDrr(1(Class<VR128>) -> 0(Class<VR128>))  [3;3]
		 Successful, latency: 3

-----VCVTPS2PHXZ128rr-----
	VCVTPS2PHXZ128rr(1(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VCVTPS2PHXZ128rrk-----
	VCVTPS2PHXZ128rrk(1(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VCVTPS2PHXZ128rrk(3(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VCVTPS2PHXZ128rrkz-----
	VCVTPS2PHXZ128rrkz(2(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VCVTPS2PHXZ256rrbk-----
	VCVTPS2PHXZ256rrbk(1(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VCVTPS2PHXZ256rrk-----
	VCVTPS2PHXZ256rrk(1(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VCVTPS2PHXZrrbk-----
	VCVTPS2PHXZrrbk(1(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VCVTPS2PHXZrrk-----
	VCVTPS2PHXZrrk(1(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VCVTPS2PHYrr-----
	VCVTPS2PHYrr(1(Class<VR256>) -> 0(Class<VR128>))  [4.02;6.05]
		Dependencies:
			VEXTRACTF128rri(1(Class<VR256>) -> 0(Class<VR128>)) 
			VPBROADCASTWYrr(1(Class<VR128>) -> 0(Class<VR256>)) 
		Combined result: 7.05 cycles

-----VCVTPS2PHZ128rr-----
	VCVTPS2PHZ128rr(1(Class<VR128X>) -> 0(Class<VR128X>))  [3.02;3.02]
		 Successful, latency: 3.02

-----VCVTPS2PHZ128rrk-----
	VCVTPS2PHZ128rrk(1(Class<VR128X>) -> 0(Class<VR128X>))  [3.06;3.06]
		 Successful, latency: 3.06
	VCVTPS2PHZ128rrk(3(Class<VR128X>) -> 0(Class<VR128X>))  [3.04;3.04]
		 Successful, latency: 3.04

-----VCVTPS2PHZ128rrkz-----
	VCVTPS2PHZ128rrkz(2(Class<VR128X>) -> 0(Class<VR128X>))  [3.02;3.02]
		 Successful, latency: 3.02

-----VCVTPS2PHZ256rr-----
	VCVTPS2PHZ256rr(1(Class<VR256X>) -> 0(Class<VR128X>))  [4.04;6.06]
		Dependencies:
			VEXTRACTI32X4Z256rrik(3(Class<VR256X>) -> 0(Class<VR128X>)) 
			VBROADCASTF32X2Z256rr(1(Class<VR128X>) -> 0(Class<VR256X>)) 
		Combined result: 7.06 cycles

-----VCVTPS2PHZ256rrbk-----
	VCVTPS2PHZ256rrbk(1(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VCVTPS2PHZ256rrk-----
	VCVTPS2PHZ256rrk(1(Class<VR128X>) -> 0(Class<VR128X>))  [3.04;3.04]
		 Successful, latency: 3.04
	VCVTPS2PHZ256rrk(3(Class<VR256X>) -> 0(Class<VR128X>))  [4.04;6.06]
		Dependencies:
			VEXTRACTI32X4Z256rrik(3(Class<VR256X>) -> 0(Class<VR128X>)) 
			VBROADCASTF32X2Z256rr(1(Class<VR128X>) -> 0(Class<VR256X>)) 
		Combined result: 7.06 cycles

-----VCVTPS2PHZ256rrkz-----
	VCVTPS2PHZ256rrkz(2(Class<VR256X>) -> 0(Class<VR128X>))  [4.03;6.05]
		Dependencies:
			VEXTRACTI32X4Z256rrik(3(Class<VR256X>) -> 0(Class<VR128X>)) 
			VBROADCASTF32X2Z256rr(1(Class<VR128X>) -> 0(Class<VR256X>)) 
		Combined result: 7.05 cycles

-----VCVTPS2PHZrr-----
	VCVTPS2PHZrr(1(Class<VR512>) -> 0(Class<VR256X>))  [4.38;7.4]
		Dependencies:
			VPMOVDWZrr(1(Class<VR512>) -> 0(Class<VR256X>)) 
			VINSERTF64X4Zrri(2(Class<VR256X>) -> 0(Class<VR512>)) 
		Combined result: 8.4 cycles

-----VCVTPS2PHZrrb-----
	VCVTPS2PHZrrb(1(Class<VR512>) -> 0(Class<VR256X>))  [4.37;7.4]
		Dependencies:
			VPMOVDWZrr(1(Class<VR512>) -> 0(Class<VR256X>)) 
			VINSERTF64X4Zrri(2(Class<VR256X>) -> 0(Class<VR512>)) 
		Combined result: 8.4 cycles

-----VCVTPS2PHZrrbk-----
	VCVTPS2PHZrrbk(1(Class<VR256X>) -> 0(Class<VR256X>))  [4.02;4.02]
		 Successful, latency: 4.02
	VCVTPS2PHZrrbk(3(Class<VR512>) -> 0(Class<VR256X>))  [4.4;7.43]
		Dependencies:
			VPMOVDWZrr(1(Class<VR512>) -> 0(Class<VR256X>)) 
			VINSERTF64X4Zrri(2(Class<VR256X>) -> 0(Class<VR512>)) 
		Combined result: 8.43 cycles

-----VCVTPS2PHZrrbkz-----
	VCVTPS2PHZrrbkz(2(Class<VR512>) -> 0(Class<VR256X>))  [4.38;7.4]
		Dependencies:
			VPMOVDWZrr(1(Class<VR512>) -> 0(Class<VR256X>)) 
			VINSERTF64X4Zrri(2(Class<VR256X>) -> 0(Class<VR512>)) 
		Combined result: 8.4 cycles

-----VCVTPS2PHZrrk-----
	VCVTPS2PHZrrk(1(Class<VR256X>) -> 0(Class<VR256X>))  [4.07;4.07]
		 Successful, latency: 4.07
	VCVTPS2PHZrrk(3(Class<VR512>) -> 0(Class<VR256X>))  [4.37;7.39]
		Dependencies:
			VPMOVDWZrr(1(Class<VR512>) -> 0(Class<VR256X>)) 
			VINSERTF64X4Zrri(2(Class<VR256X>) -> 0(Class<VR512>)) 
		Combined result: 8.39 cycles

-----VCVTPS2PHZrrkz-----
	VCVTPS2PHZrrkz(2(Class<VR512>) -> 0(Class<VR256X>))  [4.38;7.41]
		Dependencies:
			VPMOVDWZrr(1(Class<VR512>) -> 0(Class<VR256X>)) 
			VINSERTF64X4Zrri(2(Class<VR256X>) -> 0(Class<VR512>)) 
		Combined result: 8.41 cycles

-----VCVTPS2PHrr-----
	VCVTPS2PHrr(1(Class<VR128>) -> 0(Class<VR128>))  [3.03;3.03]
		 Successful, latency: 3.03

-----VCVTPS2QQZ128rr-----
	VCVTPS2QQZ128rr(1(Class<VR128X>) -> 0(Class<VR128X>))  [3.02;3.02]
		 Successful, latency: 3.02

-----VCVTPS2QQZ128rrk-----
	VCVTPS2QQZ128rrk(1(Class<VR128X>) -> 0(Class<VR128X>))  [3.04;3.04]
		 Successful, latency: 3.04
	VCVTPS2QQZ128rrk(3(Class<VR128X>) -> 0(Class<VR128X>))  [3.03;3.03]
		 Successful, latency: 3.03

-----VCVTPS2QQZ128rrkz-----
	VCVTPS2QQZ128rrkz(2(Class<VR128X>) -> 0(Class<VR128X>))  [3.04;3.04]
		 Successful, latency: 3.04

-----VCVTPS2QQZ256rr-----
	VCVTPS2QQZ256rr(1(Class<VR128X>) -> 0(Class<VR256X>))  [4.01;6.03]
		Dependencies:
			VEXTRACTI32X4Z256rrik(3(Class<VR256X>) -> 0(Class<VR128X>)) 
			VBROADCASTF32X2Z256rr(1(Class<VR128X>) -> 0(Class<VR256X>)) 
		Combined result: 7.05 cycles

-----VCVTPS2QQZ256rrbk-----
	VCVTPS2QQZ256rrbk(1(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VCVTPS2QQZ256rrk-----
	VCVTPS2QQZ256rrk(1(Class<VR256X>) -> 0(Class<VR256X>))  [3.03;3.03]
		 Successful, latency: 3.03
	VCVTPS2QQZ256rrk(3(Class<VR128X>) -> 0(Class<VR256X>))  [4.02;6.04]
		Dependencies:
			VEXTRACTI32X4Z256rrik(3(Class<VR256X>) -> 0(Class<VR128X>)) 
			VBROADCASTF32X2Z256rr(1(Class<VR128X>) -> 0(Class<VR256X>)) 
		Combined result: 7.07 cycles

-----VCVTPS2QQZ256rrkz-----
	VCVTPS2QQZ256rrkz(2(Class<VR128X>) -> 0(Class<VR256X>))  [4.01;6.03]
		Dependencies:
			VEXTRACTI32X4Z256rrik(3(Class<VR256X>) -> 0(Class<VR128X>)) 
			VBROADCASTF32X2Z256rr(1(Class<VR128X>) -> 0(Class<VR256X>)) 
		Combined result: 7.05 cycles

-----VCVTPS2QQZrr-----
	VCVTPS2QQZrr(1(Class<VR256X>) -> 0(Class<VR512>))  [5.98;9.01]
		Dependencies:
			VPMOVDWZrr(1(Class<VR512>) -> 0(Class<VR256X>)) 
			VINSERTF64X4Zrri(2(Class<VR256X>) -> 0(Class<VR512>)) 
		Combined result: 10 cycles

-----VCVTPS2QQZrrb-----
	VCVTPS2QQZrrb(1(Class<VR256X>) -> 0(Class<VR512>))  [6.02;9.04]
		Dependencies:
			VPMOVDWZrr(1(Class<VR512>) -> 0(Class<VR256X>)) 
			VINSERTF64X4Zrri(2(Class<VR256X>) -> 0(Class<VR512>)) 
		Combined result: 10.1 cycles

-----VCVTPS2QQZrrbk-----
	VCVTPS2QQZrrbk(1(Class<VR512>) -> 0(Class<VR512>))  [3.06;3.06]
		 Successful, latency: 3.06
	VCVTPS2QQZrrbk(3(Class<VR256X>) -> 0(Class<VR512>))  [6;9.03]
		Dependencies:
			VPMOVDWZrr(1(Class<VR512>) -> 0(Class<VR256X>)) 
			VINSERTF64X4Zrri(2(Class<VR256X>) -> 0(Class<VR512>)) 
		Combined result: 10.1 cycles

-----VCVTPS2QQZrrbkz-----
	VCVTPS2QQZrrbkz(2(Class<VR256X>) -> 0(Class<VR512>))  [6.01;9.03]
		Dependencies:
			VPMOVDWZrr(1(Class<VR512>) -> 0(Class<VR256X>)) 
			VINSERTF64X4Zrri(2(Class<VR256X>) -> 0(Class<VR512>)) 
		Combined result: 10.1 cycles

-----VCVTPS2QQZrrk-----
	VCVTPS2QQZrrk(1(Class<VR512>) -> 0(Class<VR512>))  [3.02;3.02]
		 Successful, latency: 3.02
	VCVTPS2QQZrrk(3(Class<VR256X>) -> 0(Class<VR512>))  [6.04;9.06]
		Dependencies:
			VPMOVDWZrr(1(Class<VR512>) -> 0(Class<VR256X>)) 
			VINSERTF64X4Zrri(2(Class<VR256X>) -> 0(Class<VR512>)) 
		Combined result: 10.1 cycles

-----VCVTPS2QQZrrkz-----
	VCVTPS2QQZrrkz(2(Class<VR256X>) -> 0(Class<VR512>))  [6;9.03]
		Dependencies:
			VPMOVDWZrr(1(Class<VR512>) -> 0(Class<VR256X>)) 
			VINSERTF64X4Zrri(2(Class<VR256X>) -> 0(Class<VR512>)) 
		Combined result: 10.1 cycles

-----VCVTPS2UDQZ128rr-----
	VCVTPS2UDQZ128rr(1(Class<VR128X>) -> 0(Class<VR128X>))  [3.06;3.06]
		 Successful, latency: 3.06

-----VCVTPS2UDQZ128rrk-----
	VCVTPS2UDQZ128rrk(1(Class<VR128X>) -> 0(Class<VR128X>))  [3.03;3.03]
		 Successful, latency: 3.03
	VCVTPS2UDQZ128rrk(3(Class<VR128X>) -> 0(Class<VR128X>))  [3.03;3.03]
		 Successful, latency: 3.03

-----VCVTPS2UDQZ128rrkz-----
	VCVTPS2UDQZ128rrkz(2(Class<VR128X>) -> 0(Class<VR128X>))  [3.06;3.06]
		 Successful, latency: 3.06

-----VCVTPS2UDQZ256rr-----
	VCVTPS2UDQZ256rr(1(Class<VR256X>) -> 0(Class<VR256X>))  [3.05;3.05]
		 Successful, latency: 3.05

-----VCVTPS2UDQZ256rrb-----
	VCVTPS2UDQZ256rrb(1(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VCVTPS2UDQZ256rrbk-----
	VCVTPS2UDQZ256rrbk(1(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VCVTPS2UDQZ256rrbk(3(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VCVTPS2UDQZ256rrbkz-----
	VCVTPS2UDQZ256rrbkz(2(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VCVTPS2UDQZ256rrk-----
	VCVTPS2UDQZ256rrk(1(Class<VR256X>) -> 0(Class<VR256X>))  [3.03;3.03]
		 Successful, latency: 3.03
	VCVTPS2UDQZ256rrk(3(Class<VR256X>) -> 0(Class<VR256X>))  [3.04;3.04]
		 Successful, latency: 3.04

-----VCVTPS2UDQZ256rrkz-----
	VCVTPS2UDQZ256rrkz(2(Class<VR256X>) -> 0(Class<VR256X>))  [3.03;3.03]
		 Successful, latency: 3.03

-----VCVTPS2UDQZrr-----
	VCVTPS2UDQZrr(1(Class<VR512>) -> 0(Class<VR512>))  [3.06;3.06]
		 Successful, latency: 3.06

-----VCVTPS2UDQZrrb-----
	VCVTPS2UDQZrrb(1(Class<VR512>) -> 0(Class<VR512>))  [3.02;3.02]
		 Successful, latency: 3.02

-----VCVTPS2UDQZrrbk-----
	VCVTPS2UDQZrrbk(1(Class<VR512>) -> 0(Class<VR512>))  [3.04;3.04]
		 Successful, latency: 3.04
	VCVTPS2UDQZrrbk(3(Class<VR512>) -> 0(Class<VR512>))  [3.02;3.02]
		 Successful, latency: 3.02

-----VCVTPS2UDQZrrbkz-----
	VCVTPS2UDQZrrbkz(2(Class<VR512>) -> 0(Class<VR512>))  [3.06;3.06]
		 Successful, latency: 3.06

-----VCVTPS2UDQZrrk-----
	VCVTPS2UDQZrrk(1(Class<VR512>) -> 0(Class<VR512>))  [3.01;3.01]
		 Successful, latency: 3.01
	VCVTPS2UDQZrrk(3(Class<VR512>) -> 0(Class<VR512>))  [3.01;3.01]
		 Successful, latency: 3.01

-----VCVTPS2UDQZrrkz-----
	VCVTPS2UDQZrrkz(2(Class<VR512>) -> 0(Class<VR512>))  [3.01;3.01]
		 Successful, latency: 3.01

-----VCVTPS2UQQZ128rr-----
	VCVTPS2UQQZ128rr(1(Class<VR128X>) -> 0(Class<VR128X>))  [3.02;3.02]
		 Successful, latency: 3.02

-----VCVTPS2UQQZ128rrk-----
	VCVTPS2UQQZ128rrk(1(Class<VR128X>) -> 0(Class<VR128X>))  [3.02;3.02]
		 Successful, latency: 3.02
	VCVTPS2UQQZ128rrk(3(Class<VR128X>) -> 0(Class<VR128X>))  [3.03;3.03]
		 Successful, latency: 3.03

-----VCVTPS2UQQZ128rrkz-----
	VCVTPS2UQQZ128rrkz(2(Class<VR128X>) -> 0(Class<VR128X>))  [3.03;3.03]
		 Successful, latency: 3.03

-----VCVTPS2UQQZ256rr-----
	VCVTPS2UQQZ256rr(1(Class<VR128X>) -> 0(Class<VR256X>))  [4.02;6.04]
		Dependencies:
			VEXTRACTI32X4Z256rrik(3(Class<VR256X>) -> 0(Class<VR128X>)) 
			VBROADCASTF32X2Z256rr(1(Class<VR128X>) -> 0(Class<VR256X>)) 
		Combined result: 7.06 cycles

-----VCVTPS2UQQZ256rrbk-----
	VCVTPS2UQQZ256rrbk(1(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VCVTPS2UQQZ256rrk-----
	VCVTPS2UQQZ256rrk(1(Class<VR256X>) -> 0(Class<VR256X>))  [3.04;3.04]
		 Successful, latency: 3.04
	VCVTPS2UQQZ256rrk(3(Class<VR128X>) -> 0(Class<VR256X>))  [4.01;6.04]
		Dependencies:
			VEXTRACTI32X4Z256rrik(3(Class<VR256X>) -> 0(Class<VR128X>)) 
			VBROADCASTF32X2Z256rr(1(Class<VR128X>) -> 0(Class<VR256X>)) 
		Combined result: 7.06 cycles

-----VCVTPS2UQQZ256rrkz-----
	VCVTPS2UQQZ256rrkz(2(Class<VR128X>) -> 0(Class<VR256X>))  [4.02;6.04]
		Dependencies:
			VEXTRACTI32X4Z256rrik(3(Class<VR256X>) -> 0(Class<VR128X>)) 
			VBROADCASTF32X2Z256rr(1(Class<VR128X>) -> 0(Class<VR256X>)) 
		Combined result: 7.06 cycles

-----VCVTPS2UQQZrr-----
	VCVTPS2UQQZrr(1(Class<VR256X>) -> 0(Class<VR512>))  [6.01;9.03]
		Dependencies:
			VPMOVDWZrr(1(Class<VR512>) -> 0(Class<VR256X>)) 
			VINSERTF64X4Zrri(2(Class<VR256X>) -> 0(Class<VR512>)) 
		Combined result: 10.1 cycles

-----VCVTPS2UQQZrrb-----
	VCVTPS2UQQZrrb(1(Class<VR256X>) -> 0(Class<VR512>))  [6.03;9.05]
		Dependencies:
			VPMOVDWZrr(1(Class<VR512>) -> 0(Class<VR256X>)) 
			VINSERTF64X4Zrri(2(Class<VR256X>) -> 0(Class<VR512>)) 
		Combined result: 10.1 cycles

-----VCVTPS2UQQZrrbk-----
	VCVTPS2UQQZrrbk(1(Class<VR512>) -> 0(Class<VR512>))  [3.02;3.02]
		 Successful, latency: 3.02
	VCVTPS2UQQZrrbk(3(Class<VR256X>) -> 0(Class<VR512>))  [6.01;9.03]
		Dependencies:
			VPMOVDWZrr(1(Class<VR512>) -> 0(Class<VR256X>)) 
			VINSERTF64X4Zrri(2(Class<VR256X>) -> 0(Class<VR512>)) 
		Combined result: 10.1 cycles

-----VCVTPS2UQQZrrbkz-----
	VCVTPS2UQQZrrbkz(2(Class<VR256X>) -> 0(Class<VR512>))  [6;9.02]
		Dependencies:
			VPMOVDWZrr(1(Class<VR512>) -> 0(Class<VR256X>)) 
			VINSERTF64X4Zrri(2(Class<VR256X>) -> 0(Class<VR512>)) 
		Combined result: 10.1 cycles

-----VCVTPS2UQQZrrk-----
	VCVTPS2UQQZrrk(1(Class<VR512>) -> 0(Class<VR512>))  [3.03;3.03]
		 Successful, latency: 3.03
	VCVTPS2UQQZrrk(3(Class<VR256X>) -> 0(Class<VR512>))  [6.01;9.03]
		Dependencies:
			VPMOVDWZrr(1(Class<VR512>) -> 0(Class<VR256X>)) 
			VINSERTF64X4Zrri(2(Class<VR256X>) -> 0(Class<VR512>)) 
		Combined result: 10.1 cycles

-----VCVTPS2UQQZrrkz-----
	VCVTPS2UQQZrrkz(2(Class<VR256X>) -> 0(Class<VR512>))  [6.01;9.03]
		Dependencies:
			VPMOVDWZrr(1(Class<VR512>) -> 0(Class<VR256X>)) 
			VINSERTF64X4Zrri(2(Class<VR256X>) -> 0(Class<VR512>)) 
		Combined result: 10.1 cycles

-----VCVTQQ2PDZ128rr-----
	VCVTQQ2PDZ128rr(1(Class<VR128X>) -> 0(Class<VR128X>))  [3.04;3.04]
		 Successful, latency: 3.04

-----VCVTQQ2PDZ128rrk-----
	VCVTQQ2PDZ128rrk(1(Class<VR128X>) -> 0(Class<VR128X>))  [3.03;3.03]
		 Successful, latency: 3.03
	VCVTQQ2PDZ128rrk(3(Class<VR128X>) -> 0(Class<VR128X>))  [3.03;3.03]
		 Successful, latency: 3.03

-----VCVTQQ2PDZ128rrkz-----
	VCVTQQ2PDZ128rrkz(2(Class<VR128X>) -> 0(Class<VR128X>))  [3.04;3.04]
		 Successful, latency: 3.04

-----VCVTQQ2PDZ256rr-----
	VCVTQQ2PDZ256rr(1(Class<VR256X>) -> 0(Class<VR256X>))  [3.02;3.02]
		 Successful, latency: 3.02

-----VCVTQQ2PDZ256rrb-----
	VCVTQQ2PDZ256rrb(1(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VCVTQQ2PDZ256rrbk-----
	VCVTQQ2PDZ256rrbk(1(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VCVTQQ2PDZ256rrbk(3(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VCVTQQ2PDZ256rrbkz-----
	VCVTQQ2PDZ256rrbkz(2(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VCVTQQ2PDZ256rrk-----
	VCVTQQ2PDZ256rrk(1(Class<VR256X>) -> 0(Class<VR256X>))  [3.02;3.02]
		 Successful, latency: 3.02
	VCVTQQ2PDZ256rrk(3(Class<VR256X>) -> 0(Class<VR256X>))  [3.04;3.04]
		 Successful, latency: 3.04

-----VCVTQQ2PDZ256rrkz-----
	VCVTQQ2PDZ256rrkz(2(Class<VR256X>) -> 0(Class<VR256X>))  [3.06;3.06]
		 Successful, latency: 3.06

-----VCVTQQ2PDZrr-----
	VCVTQQ2PDZrr(1(Class<VR512>) -> 0(Class<VR512>))  [3.02;3.02]
		 Successful, latency: 3.02

-----VCVTQQ2PDZrrb-----
	VCVTQQ2PDZrrb(1(Class<VR512>) -> 0(Class<VR512>))  [3.02;3.02]
		 Successful, latency: 3.02

-----VCVTQQ2PDZrrbk-----
	VCVTQQ2PDZrrbk(1(Class<VR512>) -> 0(Class<VR512>))  [3.04;3.04]
		 Successful, latency: 3.04
	VCVTQQ2PDZrrbk(3(Class<VR512>) -> 0(Class<VR512>))  [3.03;3.03]
		 Successful, latency: 3.03

-----VCVTQQ2PDZrrbkz-----
	VCVTQQ2PDZrrbkz(2(Class<VR512>) -> 0(Class<VR512>))  [3.05;3.05]
		 Successful, latency: 3.05

-----VCVTQQ2PDZrrk-----
	VCVTQQ2PDZrrk(1(Class<VR512>) -> 0(Class<VR512>))  [3.01;3.01]
		 Successful, latency: 3.01
	VCVTQQ2PDZrrk(3(Class<VR512>) -> 0(Class<VR512>))  [3.05;3.05]
		 Successful, latency: 3.05

-----VCVTQQ2PDZrrkz-----
	VCVTQQ2PDZrrkz(2(Class<VR512>) -> 0(Class<VR512>))  [3.05;3.05]
		 Successful, latency: 3.05

-----VCVTQQ2PHZ128rr-----
	VCVTQQ2PHZ128rr(1(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VCVTQQ2PHZ128rrk-----
	VCVTQQ2PHZ128rrk(1(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VCVTQQ2PHZ128rrk(3(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VCVTQQ2PHZ128rrkz-----
	VCVTQQ2PHZ128rrkz(2(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VCVTQQ2PHZ256rrbk-----
	VCVTQQ2PHZ256rrbk(1(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VCVTQQ2PHZ256rrk-----
	VCVTQQ2PHZ256rrk(1(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VCVTQQ2PHZrr-----
	0x138383bd2798
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VCVTQQ2PHZrrb-----
	0x138383bd2808
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VCVTQQ2PHZrrbk-----
	VCVTQQ2PHZrrbk(1(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VCVTQQ2PHZrrbkz-----
	0x138383bd2990
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VCVTQQ2PHZrrk-----
	VCVTQQ2PHZrrk(1(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VCVTQQ2PHZrrkz-----
	0x138383bd2b18
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VCVTQQ2PSZ128rr-----
	VCVTQQ2PSZ128rr(1(Class<VR128X>) -> 0(Class<VR128X>))  [3.04;3.04]
		 Successful, latency: 3.04

-----VCVTQQ2PSZ128rrk-----
	VCVTQQ2PSZ128rrk(1(Class<VR128X>) -> 0(Class<VR128X>))  [3.01;3.01]
		 Successful, latency: 3.01
	VCVTQQ2PSZ128rrk(3(Class<VR128X>) -> 0(Class<VR128X>))  [3.02;3.02]
		 Successful, latency: 3.02

-----VCVTQQ2PSZ128rrkz-----
	VCVTQQ2PSZ128rrkz(2(Class<VR128X>) -> 0(Class<VR128X>))  [3.03;3.03]
		 Successful, latency: 3.03

-----VCVTQQ2PSZ256rr-----
	VCVTQQ2PSZ256rr(1(Class<VR256X>) -> 0(Class<VR128X>))  [4.03;6.05]
		Dependencies:
			VEXTRACTI32X4Z256rrik(3(Class<VR256X>) -> 0(Class<VR128X>)) 
			VBROADCASTF32X2Z256rr(1(Class<VR128X>) -> 0(Class<VR256X>)) 
		Combined result: 7.05 cycles

-----VCVTQQ2PSZ256rrbk-----
	VCVTQQ2PSZ256rrbk(1(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VCVTQQ2PSZ256rrk-----
	VCVTQQ2PSZ256rrk(1(Class<VR128X>) -> 0(Class<VR128X>))  [3.05;3.05]
		 Successful, latency: 3.05
	VCVTQQ2PSZ256rrk(3(Class<VR256X>) -> 0(Class<VR128X>))  [4.05;6.07]
		Dependencies:
			VEXTRACTI32X4Z256rrik(3(Class<VR256X>) -> 0(Class<VR128X>)) 
			VBROADCASTF32X2Z256rr(1(Class<VR128X>) -> 0(Class<VR256X>)) 
		Combined result: 7.07 cycles

-----VCVTQQ2PSZ256rrkz-----
	VCVTQQ2PSZ256rrkz(2(Class<VR256X>) -> 0(Class<VR128X>))  [4.01;6.03]
		Dependencies:
			VEXTRACTI32X4Z256rrik(3(Class<VR256X>) -> 0(Class<VR128X>)) 
			VBROADCASTF32X2Z256rr(1(Class<VR128X>) -> 0(Class<VR256X>)) 
		Combined result: 7.03 cycles

-----VCVTQQ2PSZrr-----
	VCVTQQ2PSZrr(1(Class<VR512>) -> 0(Class<VR256X>))  [4.36;7.38]
		Dependencies:
			VPMOVDWZrr(1(Class<VR512>) -> 0(Class<VR256X>)) 
			VINSERTF64X4Zrri(2(Class<VR256X>) -> 0(Class<VR512>)) 
		Combined result: 8.38 cycles

-----VCVTQQ2PSZrrb-----
	VCVTQQ2PSZrrb(1(Class<VR512>) -> 0(Class<VR256X>))  [4.39;7.41]
		Dependencies:
			VPMOVDWZrr(1(Class<VR512>) -> 0(Class<VR256X>)) 
			VINSERTF64X4Zrri(2(Class<VR256X>) -> 0(Class<VR512>)) 
		Combined result: 8.41 cycles

-----VCVTQQ2PSZrrbk-----
	VCVTQQ2PSZrrbk(1(Class<VR256X>) -> 0(Class<VR256X>))  [4.01;4.01]
		 Successful, latency: 4.01
	VCVTQQ2PSZrrbk(3(Class<VR512>) -> 0(Class<VR256X>))  [4.39;7.42]
		Dependencies:
			VPMOVDWZrr(1(Class<VR512>) -> 0(Class<VR256X>)) 
			VINSERTF64X4Zrri(2(Class<VR256X>) -> 0(Class<VR512>)) 
		Combined result: 8.42 cycles

-----VCVTQQ2PSZrrbkz-----
	VCVTQQ2PSZrrbkz(2(Class<VR512>) -> 0(Class<VR256X>))  [4.39;7.42]
		Dependencies:
			VPMOVDWZrr(1(Class<VR512>) -> 0(Class<VR256X>)) 
			VINSERTF64X4Zrri(2(Class<VR256X>) -> 0(Class<VR512>)) 
		Combined result: 8.42 cycles

-----VCVTQQ2PSZrrk-----
	VCVTQQ2PSZrrk(1(Class<VR256X>) -> 0(Class<VR256X>))  [4.04;4.04]
		 Successful, latency: 4.04
	VCVTQQ2PSZrrk(3(Class<VR512>) -> 0(Class<VR256X>))  [4.4;7.42]
		Dependencies:
			VPMOVDWZrr(1(Class<VR512>) -> 0(Class<VR256X>)) 
			VINSERTF64X4Zrri(2(Class<VR256X>) -> 0(Class<VR512>)) 
		Combined result: 8.42 cycles

-----VCVTQQ2PSZrrkz-----
	VCVTQQ2PSZrrkz(2(Class<VR512>) -> 0(Class<VR256X>))  [4.37;7.39]
		Dependencies:
			VPMOVDWZrr(1(Class<VR512>) -> 0(Class<VR256X>)) 
			VINSERTF64X4Zrri(2(Class<VR256X>) -> 0(Class<VR512>)) 
		Combined result: 8.39 cycles

-----VCVTSD2SHZrr-----
	VCVTSD2SHZrr(1(Class<FR16X>) -> 0(Class<FR16X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VCVTSD2SHZrr_Int-----
	VCVTSD2SHZrr_Int(1(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VCVTSD2SHZrr_Int(2(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VCVTSD2SHZrrb_Int-----
	VCVTSD2SHZrrb_Int(1(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VCVTSD2SHZrrb_Int(2(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VCVTSD2SHZrrbk_Int-----
	VCVTSD2SHZrrbk_Int(1(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VCVTSD2SHZrrbk_Int(3(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VCVTSD2SHZrrbk_Int(4(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VCVTSD2SHZrrbkz_Int-----
	VCVTSD2SHZrrbkz_Int(2(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VCVTSD2SHZrrbkz_Int(3(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VCVTSD2SHZrrk_Int-----
	VCVTSD2SHZrrk_Int(1(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VCVTSD2SHZrrk_Int(3(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VCVTSD2SHZrrk_Int(4(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VCVTSD2SHZrrkz_Int-----
	VCVTSD2SHZrrkz_Int(2(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VCVTSD2SHZrrkz_Int(3(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VCVTSD2SI64Zrr-----
	VCVTSD2SI64Zrr(1(Class<FR64X>) -> 0(Class<GR64>))  [4.02;8.07]
		Dependencies:
			VMOVSDto64Zrr(1(Class<FR64X>) -> 0(Class<GR64>)) 
			VMOV64toSDZrr(1(Class<GR64>) -> 0(Class<FR64X>)) 
		Combined result: 9.07 cycles

-----VCVTSD2SI64Zrr_Int-----
	VCVTSD2SI64Zrr_Int(1(Class<VR128X>) -> 0(Class<GR64>))  [4.08;8.11]
		Dependencies:
			VMOVPQIto64Zrr(1(Class<VR128X>) -> 0(Class<GR64>)) 
			VMOV64toPQIZrr(1(Class<GR64>) -> 0(Class<VR128X>)) 
		Combined result: 9.11 cycles

-----VCVTSD2SI64Zrrb_Int-----
	VCVTSD2SI64Zrrb_Int(1(Class<VR128X>) -> 0(Class<GR64>))  [4.05;8.08]
		Dependencies:
			VMOVPQIto64Zrr(1(Class<VR128X>) -> 0(Class<GR64>)) 
			VMOV64toPQIZrr(1(Class<GR64>) -> 0(Class<VR128X>)) 
		Combined result: 9.08 cycles

-----VCVTSD2SI64rr-----
	VCVTSD2SI64rr(1(Class<FR64>) -> 0(Class<GR64>))  [4.03;8.07]
		Dependencies:
			VMOVSDto64rr(1(Class<FR64>) -> 0(Class<GR64>)) 
			VMOV64toSDrr(1(Class<GR64>) -> 0(Class<FR64>)) 
		Combined result: 9.07 cycles

-----VCVTSD2SI64rr_Int-----
	VCVTSD2SI64rr_Int(1(Class<VR128>) -> 0(Class<GR64>))  [4.04;8.08]
		Dependencies:
			MOVPQIto64rr(1(Class<VR128>) -> 0(Class<GR64>)) 
			VMOV64toPQIrr(1(Class<GR64>) -> 0(Class<VR128>)) 
		Combined result: 9.08 cycles

-----VCVTSD2SIZrr-----
	VCVTSD2SIZrr(1(Class<FR64X>) -> 0(Class<GR32>))  [1.02;11.1]
		Dependencies:
			VCVTTSD2USIZrr(1(Class<FR64X>) -> 0(Class<GR32>)) 
			VCVTSI2SDZrr(2(Class<GR32>) -> 0(Class<FR64X>)) 
		Combined result: 12.1 cycles

-----VCVTSD2SIZrr_Int-----
	VCVTSD2SIZrr_Int(1(Class<VR128X>) -> 0(Class<GR32>))  [4.01;8.07]
		Dependencies:
			VMOVPDI2DIZrr(1(Class<VR128X>) -> 0(Class<GR32>)) 
			VMOVDI2PDIZrr(1(Class<GR32>) -> 0(Class<VR128X>)) 
		Combined result: 9.07 cycles

-----VCVTSD2SIZrrb_Int-----
	VCVTSD2SIZrrb_Int(1(Class<VR128X>) -> 0(Class<GR32>))  [4.03;8.08]
		Dependencies:
			VMOVPDI2DIZrr(1(Class<VR128X>) -> 0(Class<GR32>)) 
			VMOVDI2PDIZrr(1(Class<GR32>) -> 0(Class<VR128X>)) 
		Combined result: 9.08 cycles

-----VCVTSD2SIrr-----
	VCVTSD2SIrr(1(Class<FR64>) -> 0(Class<GR32>))  [1;11.1]
		Dependencies:
			CVTSD2SIrr(1(Class<FR64>) -> 0(Class<GR32>)) 
			CVTSI2SDrr(1(Class<GR32>) -> 0(Class<FR64>)) 
		Combined result: 12.1 cycles

-----VCVTSD2SIrr_Int-----
	VCVTSD2SIrr_Int(1(Class<VR128>) -> 0(Class<GR32>))  [4.02;8.06]
		Dependencies:
			MOVMSKPSrr(1(Class<VR128>) -> 0(Class<GR32>)) 
			VMOVDI2PDIrr(1(Class<GR32>) -> 0(Class<VR128>)) 
		Combined result: 9.06 cycles

-----VCVTSD2SSZrr-----
	VCVTSD2SSZrr(1(Class<FR32X>) -> 0(Class<FR32X>))  [3.04;3.04]
		 Successful, latency: 3.04
	VCVTSD2SSZrr(2(Class<FR64X>) -> 0(Class<FR32X>))  [0.973;5.04]
		Dependencies:
			VCVTSD2SSZrr(2(Class<FR64X>) -> 0(Class<FR32X>)) 
			VCVTSS2SDZrr(2(Class<FR32X>) -> 0(Class<FR64X>)) 
		Combined result: 6.04 cycles

-----VCVTSD2SSZrr_Int-----
	VCVTSD2SSZrr_Int(1(Class<VR128X>) -> 0(Class<VR128X>))  [3.03;3.03]
		 Successful, latency: 3.03
	VCVTSD2SSZrr_Int(2(Class<VR128X>) -> 0(Class<VR128X>))  [3.02;3.02]
		 Successful, latency: 3.02

-----VCVTSD2SSZrrb_Int-----
	VCVTSD2SSZrrb_Int(1(Class<VR128X>) -> 0(Class<VR128X>))  [3.02;3.02]
		 Successful, latency: 3.02
	VCVTSD2SSZrrb_Int(2(Class<VR128X>) -> 0(Class<VR128X>))  [3.05;3.05]
		 Successful, latency: 3.05

-----VCVTSD2SSZrrbk_Int-----
	VCVTSD2SSZrrbk_Int(1(Class<VR128X>) -> 0(Class<VR128X>))  [3.03;3.03]
		 Successful, latency: 3.03
	VCVTSD2SSZrrbk_Int(3(Class<VR128X>) -> 0(Class<VR128X>))  [3.04;3.04]
		 Successful, latency: 3.04
	VCVTSD2SSZrrbk_Int(4(Class<VR128X>) -> 0(Class<VR128X>))  [3.04;3.04]
		 Successful, latency: 3.04

-----VCVTSD2SSZrrbkz_Int-----
	VCVTSD2SSZrrbkz_Int(2(Class<VR128X>) -> 0(Class<VR128X>))  [3.04;3.04]
		 Successful, latency: 3.04
	VCVTSD2SSZrrbkz_Int(3(Class<VR128X>) -> 0(Class<VR128X>))  [3.03;3.03]
		 Successful, latency: 3.03

-----VCVTSD2SSZrrk_Int-----
	VCVTSD2SSZrrk_Int(1(Class<VR128X>) -> 0(Class<VR128X>))  [3.02;3.02]
		 Successful, latency: 3.02
	VCVTSD2SSZrrk_Int(3(Class<VR128X>) -> 0(Class<VR128X>))  [3.03;3.03]
		 Successful, latency: 3.03
	VCVTSD2SSZrrk_Int(4(Class<VR128X>) -> 0(Class<VR128X>))  [3.02;3.02]
		 Successful, latency: 3.02

-----VCVTSD2SSZrrkz_Int-----
	VCVTSD2SSZrrkz_Int(2(Class<VR128X>) -> 0(Class<VR128X>))  [3.02;3.02]
		 Successful, latency: 3.02
	VCVTSD2SSZrrkz_Int(3(Class<VR128X>) -> 0(Class<VR128X>))  [3.02;3.02]
		 Successful, latency: 3.02

-----VCVTSD2SSrr-----
	VCVTSD2SSrr(1(Class<FR32>) -> 0(Class<FR32>))  [3.04;3.04]
		 Successful, latency: 3.04
	VCVTSD2SSrr(2(Class<FR64>) -> 0(Class<FR32>))  [0.993;5.04]
		Dependencies:
			VCVTSD2SSrr(2(Class<FR64>) -> 0(Class<FR32>)) 
			CVTSS2SDrr(1(Class<FR32>) -> 0(Class<FR64>)) 
		Combined result: 6.04 cycles

-----VCVTSD2SSrr_Int-----
	VCVTSD2SSrr_Int(1(Class<VR128>) -> 0(Class<VR128>))  [3.02;3.02]
		 Successful, latency: 3.02
	VCVTSD2SSrr_Int(2(Class<VR128>) -> 0(Class<VR128>))  [3.01;3.01]
		 Successful, latency: 3.01

-----VCVTSD2USI64Zrr_Int-----
	VCVTSD2USI64Zrr_Int(1(Class<VR128X>) -> 0(Class<GR64>))  [4.05;8.09]
		Dependencies:
			VMOVPQIto64Zrr(1(Class<VR128X>) -> 0(Class<GR64>)) 
			VMOV64toPQIZrr(1(Class<GR64>) -> 0(Class<VR128X>)) 
		Combined result: 9.09 cycles

-----VCVTSD2USI64Zrrb_Int-----
	VCVTSD2USI64Zrrb_Int(1(Class<VR128X>) -> 0(Class<GR64>))  [4.04;8.08]
		Dependencies:
			VMOVPQIto64Zrr(1(Class<VR128X>) -> 0(Class<GR64>)) 
			VMOV64toPQIZrr(1(Class<GR64>) -> 0(Class<VR128X>)) 
		Combined result: 9.08 cycles

-----VCVTSD2USIZrr_Int-----
	VCVTSD2USIZrr_Int(1(Class<VR128X>) -> 0(Class<GR32>))  [4;8.06]
		Dependencies:
			VMOVPDI2DIZrr(1(Class<VR128X>) -> 0(Class<GR32>)) 
			VMOVDI2PDIZrr(1(Class<GR32>) -> 0(Class<VR128X>)) 
		Combined result: 9.06 cycles

-----VCVTSD2USIZrrb_Int-----
	VCVTSD2USIZrrb_Int(1(Class<VR128X>) -> 0(Class<GR32>))  [4.03;8.09]
		Dependencies:
			VMOVPDI2DIZrr(1(Class<VR128X>) -> 0(Class<GR32>)) 
			VMOVDI2PDIZrr(1(Class<GR32>) -> 0(Class<VR128X>)) 
		Combined result: 9.09 cycles

-----VCVTSH2SDZrr-----
	VCVTSH2SDZrr(1(Class<FR64X>) -> 0(Class<FR64X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VCVTSH2SDZrr_Int-----
	VCVTSH2SDZrr_Int(1(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VCVTSH2SDZrr_Int(2(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VCVTSH2SDZrrb_Int-----
	VCVTSH2SDZrrb_Int(1(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VCVTSH2SDZrrb_Int(2(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VCVTSH2SDZrrbk_Int-----
	VCVTSH2SDZrrbk_Int(1(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VCVTSH2SDZrrbk_Int(3(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VCVTSH2SDZrrbk_Int(4(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VCVTSH2SDZrrbkz_Int-----
	VCVTSH2SDZrrbkz_Int(2(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VCVTSH2SDZrrbkz_Int(3(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VCVTSH2SDZrrk_Int-----
	VCVTSH2SDZrrk_Int(1(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VCVTSH2SDZrrk_Int(3(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VCVTSH2SDZrrk_Int(4(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VCVTSH2SDZrrkz_Int-----
	VCVTSH2SDZrrkz_Int(2(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VCVTSH2SDZrrkz_Int(3(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VCVTSH2SSZrr-----
	VCVTSH2SSZrr(1(Class<FR32X>) -> 0(Class<FR32X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VCVTSH2SSZrr_Int-----
	VCVTSH2SSZrr_Int(1(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VCVTSH2SSZrr_Int(2(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VCVTSH2SSZrrb_Int-----
	VCVTSH2SSZrrb_Int(1(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VCVTSH2SSZrrb_Int(2(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VCVTSH2SSZrrbk_Int-----
	VCVTSH2SSZrrbk_Int(1(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VCVTSH2SSZrrbk_Int(3(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VCVTSH2SSZrrbk_Int(4(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VCVTSH2SSZrrbkz_Int-----
	VCVTSH2SSZrrbkz_Int(2(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VCVTSH2SSZrrbkz_Int(3(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VCVTSH2SSZrrk_Int-----
	VCVTSH2SSZrrk_Int(1(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VCVTSH2SSZrrk_Int(3(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VCVTSH2SSZrrk_Int(4(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VCVTSH2SSZrrkz_Int-----
	VCVTSH2SSZrrkz_Int(2(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VCVTSH2SSZrrkz_Int(3(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VCVTSI2SDZrr-----
	VCVTSI2SDZrr(1(Class<FR64X>) -> 0(Class<FR64X>))  [3.02;3.02]
		 Successful, latency: 3.02
	VCVTSI2SDZrr(2(Class<GR32>) -> 0(Class<FR64X>))  [1.02;11.1]
		Dependencies:
			VCVTTSD2USIZrr(1(Class<FR64X>) -> 0(Class<GR32>)) 
			VCVTSI2SDZrr(2(Class<GR32>) -> 0(Class<FR64X>)) 
		Combined result: 12.1 cycles

-----VCVTSI2SDZrr_Int-----
	VCVTSI2SDZrr_Int(1(Class<VR128X>) -> 0(Class<VR128X>))  [3.04;3.04]
		 Successful, latency: 3.04
	VCVTSI2SDZrr_Int(2(Class<GR32>) -> 0(Class<VR128X>))  [4;8.06]
		Dependencies:
			VMOVPDI2DIZrr(1(Class<VR128X>) -> 0(Class<GR32>)) 
			VMOVDI2PDIZrr(1(Class<GR32>) -> 0(Class<VR128X>)) 
		Combined result: 9.05 cycles

-----VCVTSI2SDrr-----
	VCVTSI2SDrr(1(Class<FR64>) -> 0(Class<FR64>))  [3.02;3.02]
		 Successful, latency: 3.02
	VCVTSI2SDrr(2(Class<GR32>) -> 0(Class<FR64>))  [0.999;11.1]
		Dependencies:
			CVTSD2SIrr(1(Class<FR64>) -> 0(Class<GR32>)) 
			CVTSI2SDrr(1(Class<GR32>) -> 0(Class<FR64>)) 
		Combined result: 12.1 cycles

-----VCVTSI2SDrr_Int-----
	VCVTSI2SDrr_Int(1(Class<VR128>) -> 0(Class<VR128>))  [3.1;3.1]
		 Successful, latency: 3.1
	VCVTSI2SDrr_Int(2(Class<GR32>) -> 0(Class<VR128>))  [4.01;8.05]
		Dependencies:
			MOVMSKPSrr(1(Class<VR128>) -> 0(Class<GR32>)) 
			VMOVDI2PDIrr(1(Class<GR32>) -> 0(Class<VR128>)) 
		Combined result: 9.07 cycles

-----VCVTSI2SHZrr-----
	VCVTSI2SHZrr(1(Class<FR16X>) -> 0(Class<FR16X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VCVTSI2SHZrr_Int-----
	VCVTSI2SHZrr_Int(1(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VCVTSI2SHZrrb_Int-----
	VCVTSI2SHZrrb_Int(1(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VCVTSI2SSZrr-----
	VCVTSI2SSZrr(1(Class<FR32X>) -> 0(Class<FR32X>))  [3.03;3.03]
		 Successful, latency: 3.03
	VCVTSI2SSZrr(2(Class<GR32>) -> 0(Class<FR32X>))  [4.02;8.06]
		Dependencies:
			VMOVDI2SSZrr(1(Class<GR32>) -> 0(Class<FR32X>)) 
			VMOVSS2DIZrr(1(Class<FR32X>) -> 0(Class<GR32>)) 
		Combined result: 9.06 cycles

-----VCVTSI2SSZrr_Int-----
	VCVTSI2SSZrr_Int(1(Class<VR128X>) -> 0(Class<VR128X>))  [3.05;3.05]
		 Successful, latency: 3.05
	VCVTSI2SSZrr_Int(2(Class<GR32>) -> 0(Class<VR128X>))  [4.01;8.07]
		Dependencies:
			VMOVPDI2DIZrr(1(Class<VR128X>) -> 0(Class<GR32>)) 
			VMOVDI2PDIZrr(1(Class<GR32>) -> 0(Class<VR128X>)) 
		Combined result: 9.07 cycles

-----VCVTSI2SSZrrb_Int-----
	VCVTSI2SSZrrb_Int(1(Class<VR128X>) -> 0(Class<VR128X>))  [3.03;3.03]
		 Successful, latency: 3.03
	VCVTSI2SSZrrb_Int(2(Class<GR32>) -> 0(Class<VR128X>))  [4.02;8.08]
		Dependencies:
			VMOVPDI2DIZrr(1(Class<VR128X>) -> 0(Class<GR32>)) 
			VMOVDI2PDIZrr(1(Class<GR32>) -> 0(Class<VR128X>)) 
		Combined result: 9.08 cycles

-----VCVTSI2SSrr-----
	VCVTSI2SSrr(1(Class<FR32>) -> 0(Class<FR32>))  [3.04;3.04]
		 Successful, latency: 3.04
	VCVTSI2SSrr(2(Class<GR32>) -> 0(Class<FR32>))  [3.94;7.99]
		Dependencies:
			VMOVSS2DIrr(1(Class<FR32>) -> 0(Class<GR32>)) 
			VMOVDI2SSrr(1(Class<GR32>) -> 0(Class<FR32>)) 
		Combined result: 9.03 cycles

-----VCVTSI2SSrr_Int-----
	VCVTSI2SSrr_Int(1(Class<VR128>) -> 0(Class<VR128>))  [3.02;3.02]
		 Successful, latency: 3.02
	VCVTSI2SSrr_Int(2(Class<GR32>) -> 0(Class<VR128>))  [4.01;8.05]
		Dependencies:
			MOVMSKPSrr(1(Class<VR128>) -> 0(Class<GR32>)) 
			VMOVDI2PDIrr(1(Class<GR32>) -> 0(Class<VR128>)) 
		Combined result: 9.07 cycles

-----VCVTSI642SDZrr-----
	VCVTSI642SDZrr(1(Class<FR64X>) -> 0(Class<FR64X>))  [3.04;3.04]
		 Successful, latency: 3.04
	VCVTSI642SDZrr(2(Class<GR64>) -> 0(Class<FR64X>))  [4.02;8.08]
		Dependencies:
			VMOVSDto64Zrr(1(Class<FR64X>) -> 0(Class<GR64>)) 
			VMOV64toSDZrr(1(Class<GR64>) -> 0(Class<FR64X>)) 
		Combined result: 9.07 cycles

-----VCVTSI642SDZrr_Int-----
	VCVTSI642SDZrr_Int(1(Class<VR128X>) -> 0(Class<VR128X>))  [3.04;3.04]
		 Successful, latency: 3.04
	VCVTSI642SDZrr_Int(2(Class<GR64>) -> 0(Class<VR128X>))  [4.01;8.04]
		Dependencies:
			VMOVPQIto64Zrr(1(Class<VR128X>) -> 0(Class<GR64>)) 
			VMOV64toPQIZrr(1(Class<GR64>) -> 0(Class<VR128X>)) 
		Combined result: 9.05 cycles

-----VCVTSI642SDZrrb_Int-----
	VCVTSI642SDZrrb_Int(1(Class<VR128X>) -> 0(Class<VR128X>))  [3.06;3.06]
		 Successful, latency: 3.06
	VCVTSI642SDZrrb_Int(2(Class<GR64>) -> 0(Class<VR128X>))  [4.02;8.06]
		Dependencies:
			VMOVPQIto64Zrr(1(Class<VR128X>) -> 0(Class<GR64>)) 
			VMOV64toPQIZrr(1(Class<GR64>) -> 0(Class<VR128X>)) 
		Combined result: 9.06 cycles

-----VCVTSI642SDrr-----
	VCVTSI642SDrr(1(Class<FR64>) -> 0(Class<FR64>))  [3.06;3.06]
		 Successful, latency: 3.06
	VCVTSI642SDrr(2(Class<GR64>) -> 0(Class<FR64>))  [4.02;8.06]
		Dependencies:
			VMOVSDto64rr(1(Class<FR64>) -> 0(Class<GR64>)) 
			VMOV64toSDrr(1(Class<GR64>) -> 0(Class<FR64>)) 
		Combined result: 9.06 cycles

-----VCVTSI642SDrr_Int-----
	VCVTSI642SDrr_Int(1(Class<VR128>) -> 0(Class<VR128>))  [3.03;3.03]
		 Successful, latency: 3.03
	VCVTSI642SDrr_Int(2(Class<GR64>) -> 0(Class<VR128>))  [4.01;8.05]
		Dependencies:
			MOVPQIto64rr(1(Class<VR128>) -> 0(Class<GR64>)) 
			VMOV64toPQIrr(1(Class<GR64>) -> 0(Class<VR128>)) 
		Combined result: 9.08 cycles

-----VCVTSI642SHZrr-----
	VCVTSI642SHZrr(1(Class<FR16X>) -> 0(Class<FR16X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VCVTSI642SHZrr_Int-----
	VCVTSI642SHZrr_Int(1(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VCVTSI642SHZrrb_Int-----
	VCVTSI642SHZrrb_Int(1(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VCVTSI642SSZrr-----
	VCVTSI642SSZrr(1(Class<FR32X>) -> 0(Class<FR32X>))  [3.06;3.06]
		 Successful, latency: 3.06
	VCVTSI642SSZrr(2(Class<GR64>) -> 0(Class<FR32X>))  [1.01;11.1]
		Dependencies:
			VCVTUSI642SSZrr(2(Class<GR64>) -> 0(Class<FR32X>)) 
			VCVTSS2SI64Zrr(1(Class<FR32X>) -> 0(Class<GR64>)) 
		Combined result: 12.1 cycles

-----VCVTSI642SSZrr_Int-----
	VCVTSI642SSZrr_Int(1(Class<VR128X>) -> 0(Class<VR128X>))  [3.04;3.04]
		 Successful, latency: 3.04
	VCVTSI642SSZrr_Int(2(Class<GR64>) -> 0(Class<VR128X>))  [4;8.04]
		Dependencies:
			VMOVPQIto64Zrr(1(Class<VR128X>) -> 0(Class<GR64>)) 
			VMOV64toPQIZrr(1(Class<GR64>) -> 0(Class<VR128X>)) 
		Combined result: 9.04 cycles

-----VCVTSI642SSZrrb_Int-----
	VCVTSI642SSZrrb_Int(1(Class<VR128X>) -> 0(Class<VR128X>))  [3.03;3.03]
		 Successful, latency: 3.03
	VCVTSI642SSZrrb_Int(2(Class<GR64>) -> 0(Class<VR128X>))  [4.02;8.06]
		Dependencies:
			VMOVPQIto64Zrr(1(Class<VR128X>) -> 0(Class<GR64>)) 
			VMOV64toPQIZrr(1(Class<GR64>) -> 0(Class<VR128X>)) 
		Combined result: 9.06 cycles

-----VCVTSI642SSrr-----
	VCVTSI642SSrr(1(Class<FR32>) -> 0(Class<FR32>))  [3.06;3.06]
		 Successful, latency: 3.06
	VCVTSI642SSrr(2(Class<GR64>) -> 0(Class<FR32>))  [1;11.1]
		Dependencies:
			VCVTSI642SSrr(2(Class<GR64>) -> 0(Class<FR32>)) 
			CVTSS2SI64rr(1(Class<FR32>) -> 0(Class<GR64>)) 
		Combined result: 12.1 cycles

-----VCVTSI642SSrr_Int-----
	VCVTSI642SSrr_Int(1(Class<VR128>) -> 0(Class<VR128>))  [3.02;3.02]
		 Successful, latency: 3.02
	VCVTSI642SSrr_Int(2(Class<GR64>) -> 0(Class<VR128>))  [4.05;8.09]
		Dependencies:
			MOVPQIto64rr(1(Class<VR128>) -> 0(Class<GR64>)) 
			VMOV64toPQIrr(1(Class<GR64>) -> 0(Class<VR128>)) 
		Combined result: 9.12 cycles

-----VCVTSS2SDZrr-----
	VCVTSS2SDZrr(1(Class<FR64X>) -> 0(Class<FR64X>))  [3.03;3.03]
		 Successful, latency: 3.03
	VCVTSS2SDZrr(2(Class<FR32X>) -> 0(Class<FR64X>))  [1.01;5.08]
		Dependencies:
			VCVTSD2SSZrr(2(Class<FR64X>) -> 0(Class<FR32X>)) 
			VCVTSS2SDZrr(2(Class<FR32X>) -> 0(Class<FR64X>)) 
		Combined result: 6.05 cycles

-----VCVTSS2SDZrr_Int-----
	VCVTSS2SDZrr_Int(1(Class<VR128X>) -> 0(Class<VR128X>))  [3.02;3.02]
		 Successful, latency: 3.02
	VCVTSS2SDZrr_Int(2(Class<VR128X>) -> 0(Class<VR128X>))  [3.02;3.02]
		 Successful, latency: 3.02

-----VCVTSS2SDZrrb_Int-----
	VCVTSS2SDZrrb_Int(1(Class<VR128X>) -> 0(Class<VR128X>))  [3.02;3.02]
		 Successful, latency: 3.02
	VCVTSS2SDZrrb_Int(2(Class<VR128X>) -> 0(Class<VR128X>))  [3.02;3.02]
		 Successful, latency: 3.02

-----VCVTSS2SDZrrbk_Int-----
	VCVTSS2SDZrrbk_Int(1(Class<VR128X>) -> 0(Class<VR128X>))  [3.02;3.02]
		 Successful, latency: 3.02
	VCVTSS2SDZrrbk_Int(3(Class<VR128X>) -> 0(Class<VR128X>))  [3.02;3.02]
		 Successful, latency: 3.02
	VCVTSS2SDZrrbk_Int(4(Class<VR128X>) -> 0(Class<VR128X>))  [3.02;3.02]
		 Successful, latency: 3.02

-----VCVTSS2SDZrrbkz_Int-----
	VCVTSS2SDZrrbkz_Int(2(Class<VR128X>) -> 0(Class<VR128X>))  [3.02;3.02]
		 Successful, latency: 3.02
	VCVTSS2SDZrrbkz_Int(3(Class<VR128X>) -> 0(Class<VR128X>))  [3.03;3.03]
		 Successful, latency: 3.03

-----VCVTSS2SDZrrk_Int-----
	VCVTSS2SDZrrk_Int(1(Class<VR128X>) -> 0(Class<VR128X>))  [3.02;3.02]
		 Successful, latency: 3.02
	VCVTSS2SDZrrk_Int(3(Class<VR128X>) -> 0(Class<VR128X>))  [3.04;3.04]
		 Successful, latency: 3.04
	VCVTSS2SDZrrk_Int(4(Class<VR128X>) -> 0(Class<VR128X>))  [3.03;3.03]
		 Successful, latency: 3.03

-----VCVTSS2SDZrrkz_Int-----
	VCVTSS2SDZrrkz_Int(2(Class<VR128X>) -> 0(Class<VR128X>))  [3.03;3.03]
		 Successful, latency: 3.03
	VCVTSS2SDZrrkz_Int(3(Class<VR128X>) -> 0(Class<VR128X>))  [3.03;3.03]
		 Successful, latency: 3.03

-----VCVTSS2SDrr-----
	VCVTSS2SDrr(1(Class<FR64>) -> 0(Class<FR64>))  [3.02;3.02]
		 Successful, latency: 3.02
	VCVTSS2SDrr(2(Class<FR32>) -> 0(Class<FR64>))  [0.995;5.04]
		Dependencies:
			VCVTSD2SSrr(2(Class<FR64>) -> 0(Class<FR32>)) 
			CVTSS2SDrr(1(Class<FR32>) -> 0(Class<FR64>)) 
		Combined result: 6.04 cycles

-----VCVTSS2SDrr_Int-----
	VCVTSS2SDrr_Int(1(Class<VR128>) -> 0(Class<VR128>))  [3.02;3.02]
		 Successful, latency: 3.02
	VCVTSS2SDrr_Int(2(Class<VR128>) -> 0(Class<VR128>))  [3.02;3.02]
		 Successful, latency: 3.02

-----VCVTSS2SHZrr-----
	VCVTSS2SHZrr(1(Class<FR16X>) -> 0(Class<FR16X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VCVTSS2SHZrr_Int-----
	VCVTSS2SHZrr_Int(1(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VCVTSS2SHZrr_Int(2(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VCVTSS2SHZrrb_Int-----
	VCVTSS2SHZrrb_Int(1(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VCVTSS2SHZrrb_Int(2(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VCVTSS2SHZrrbk_Int-----
	VCVTSS2SHZrrbk_Int(1(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VCVTSS2SHZrrbk_Int(3(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VCVTSS2SHZrrbk_Int(4(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VCVTSS2SHZrrbkz_Int-----
	VCVTSS2SHZrrbkz_Int(2(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VCVTSS2SHZrrbkz_Int(3(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VCVTSS2SHZrrk_Int-----
	VCVTSS2SHZrrk_Int(1(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VCVTSS2SHZrrk_Int(3(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VCVTSS2SHZrrk_Int(4(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VCVTSS2SHZrrkz_Int-----
	VCVTSS2SHZrrkz_Int(2(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VCVTSS2SHZrrkz_Int(3(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VCVTSS2SI64Zrr-----
	VCVTSS2SI64Zrr(1(Class<FR32X>) -> 0(Class<GR64>))  [1.06;11.1]
		Dependencies:
			VCVTUSI642SSZrr(2(Class<GR64>) -> 0(Class<FR32X>)) 
			VCVTSS2SI64Zrr(1(Class<FR32X>) -> 0(Class<GR64>)) 
		Combined result: 12.1 cycles

-----VCVTSS2SI64Zrr_Int-----
	VCVTSS2SI64Zrr_Int(1(Class<VR128X>) -> 0(Class<GR64>))  [4.05;8.09]
		Dependencies:
			VMOVPQIto64Zrr(1(Class<VR128X>) -> 0(Class<GR64>)) 
			VMOV64toPQIZrr(1(Class<GR64>) -> 0(Class<VR128X>)) 
		Combined result: 9.09 cycles

-----VCVTSS2SI64Zrrb_Int-----
	VCVTSS2SI64Zrrb_Int(1(Class<VR128X>) -> 0(Class<GR64>))  [4.06;8.1]
		Dependencies:
			VMOVPQIto64Zrr(1(Class<VR128X>) -> 0(Class<GR64>)) 
			VMOV64toPQIZrr(1(Class<GR64>) -> 0(Class<VR128X>)) 
		Combined result: 9.1 cycles

-----VCVTSS2SI64rr-----
	VCVTSS2SI64rr(1(Class<FR32>) -> 0(Class<GR64>))  [1.02;11.1]
		Dependencies:
			VCVTSI642SSrr(2(Class<GR64>) -> 0(Class<FR32>)) 
			CVTSS2SI64rr(1(Class<FR32>) -> 0(Class<GR64>)) 
		Combined result: 12.1 cycles

-----VCVTSS2SI64rr_Int-----
	VCVTSS2SI64rr_Int(1(Class<VR128>) -> 0(Class<GR64>))  [4.03;8.07]
		Dependencies:
			MOVPQIto64rr(1(Class<VR128>) -> 0(Class<GR64>)) 
			VMOV64toPQIrr(1(Class<GR64>) -> 0(Class<VR128>)) 
		Combined result: 9.07 cycles

-----VCVTSS2SIZrr-----
	VCVTSS2SIZrr(1(Class<FR32X>) -> 0(Class<GR32>))  [4.02;8.06]
		Dependencies:
			VMOVDI2SSZrr(1(Class<GR32>) -> 0(Class<FR32X>)) 
			VMOVSS2DIZrr(1(Class<FR32X>) -> 0(Class<GR32>)) 
		Combined result: 9.06 cycles

-----VCVTSS2SIZrr_Int-----
	VCVTSS2SIZrr_Int(1(Class<VR128X>) -> 0(Class<GR32>))  [4.01;8.06]
		Dependencies:
			VMOVPDI2DIZrr(1(Class<VR128X>) -> 0(Class<GR32>)) 
			VMOVDI2PDIZrr(1(Class<GR32>) -> 0(Class<VR128X>)) 
		Combined result: 9.06 cycles

-----VCVTSS2SIZrrb_Int-----
	VCVTSS2SIZrrb_Int(1(Class<VR128X>) -> 0(Class<GR32>))  [4.02;8.07]
		Dependencies:
			VMOVPDI2DIZrr(1(Class<VR128X>) -> 0(Class<GR32>)) 
			VMOVDI2PDIZrr(1(Class<GR32>) -> 0(Class<VR128X>)) 
		Combined result: 9.07 cycles

-----VCVTSS2SIrr-----
	VCVTSS2SIrr(1(Class<FR32>) -> 0(Class<GR32>))  [4.03;8.08]
		Dependencies:
			VMOVSS2DIrr(1(Class<FR32>) -> 0(Class<GR32>)) 
			VMOVDI2SSrr(1(Class<GR32>) -> 0(Class<FR32>)) 
		Combined result: 9.08 cycles

-----VCVTSS2SIrr_Int-----
	VCVTSS2SIrr_Int(1(Class<VR128>) -> 0(Class<GR32>))  [4.01;8.05]
		Dependencies:
			MOVMSKPSrr(1(Class<VR128>) -> 0(Class<GR32>)) 
			VMOVDI2PDIrr(1(Class<GR32>) -> 0(Class<VR128>)) 
		Combined result: 9.05 cycles

-----VCVTSS2USI64Zrr_Int-----
	VCVTSS2USI64Zrr_Int(1(Class<VR128X>) -> 0(Class<GR64>))  [4.03;8.07]
		Dependencies:
			VMOVPQIto64Zrr(1(Class<VR128X>) -> 0(Class<GR64>)) 
			VMOV64toPQIZrr(1(Class<GR64>) -> 0(Class<VR128X>)) 
		Combined result: 9.07 cycles

-----VCVTSS2USI64Zrrb_Int-----
	VCVTSS2USI64Zrrb_Int(1(Class<VR128X>) -> 0(Class<GR64>))  [4.03;8.07]
		Dependencies:
			VMOVPQIto64Zrr(1(Class<VR128X>) -> 0(Class<GR64>)) 
			VMOV64toPQIZrr(1(Class<GR64>) -> 0(Class<VR128X>)) 
		Combined result: 9.07 cycles

-----VCVTSS2USIZrr_Int-----
	VCVTSS2USIZrr_Int(1(Class<VR128X>) -> 0(Class<GR32>))  [4.01;8.06]
		Dependencies:
			VMOVPDI2DIZrr(1(Class<VR128X>) -> 0(Class<GR32>)) 
			VMOVDI2PDIZrr(1(Class<GR32>) -> 0(Class<VR128X>)) 
		Combined result: 9.06 cycles

-----VCVTSS2USIZrrb_Int-----
	VCVTSS2USIZrrb_Int(1(Class<VR128X>) -> 0(Class<GR32>))  [4.02;8.07]
		Dependencies:
			VMOVPDI2DIZrr(1(Class<VR128X>) -> 0(Class<GR32>)) 
			VMOVDI2PDIZrr(1(Class<GR32>) -> 0(Class<VR128X>)) 
		Combined result: 9.07 cycles

-----VCVTTBF162IBSZ128rr-----
	VCVTTBF162IBSZ128rr(1(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VCVTTBF162IBSZ128rrk-----
	VCVTTBF162IBSZ128rrk(1(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VCVTTBF162IBSZ128rrk(3(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VCVTTBF162IBSZ128rrkz-----
	VCVTTBF162IBSZ128rrkz(2(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VCVTTBF162IBSZ256rr-----
	VCVTTBF162IBSZ256rr(1(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VCVTTBF162IBSZ256rrk-----
	VCVTTBF162IBSZ256rrk(1(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VCVTTBF162IBSZ256rrk(3(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VCVTTBF162IBSZ256rrkz-----
	VCVTTBF162IBSZ256rrkz(2(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VCVTTBF162IBSZrr-----
	VCVTTBF162IBSZrr(1(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VCVTTBF162IBSZrrk-----
	VCVTTBF162IBSZrrk(1(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VCVTTBF162IBSZrrk(3(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VCVTTBF162IBSZrrkz-----
	VCVTTBF162IBSZrrkz(2(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VCVTTBF162IUBSZ128rr-----
	VCVTTBF162IUBSZ128rr(1(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VCVTTBF162IUBSZ128rrk-----
	VCVTTBF162IUBSZ128rrk(1(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VCVTTBF162IUBSZ128rrk(3(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VCVTTBF162IUBSZ128rrkz-----
	VCVTTBF162IUBSZ128rrkz(2(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VCVTTBF162IUBSZ256rr-----
	VCVTTBF162IUBSZ256rr(1(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VCVTTBF162IUBSZ256rrk-----
	VCVTTBF162IUBSZ256rrk(1(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VCVTTBF162IUBSZ256rrk(3(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VCVTTBF162IUBSZ256rrkz-----
	VCVTTBF162IUBSZ256rrkz(2(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VCVTTBF162IUBSZrr-----
	VCVTTBF162IUBSZrr(1(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VCVTTBF162IUBSZrrk-----
	VCVTTBF162IUBSZrrk(1(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VCVTTBF162IUBSZrrk(3(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VCVTTBF162IUBSZrrkz-----
	VCVTTBF162IUBSZrrkz(2(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VCVTTPD2DQSZ128rr-----
	VCVTTPD2DQSZ128rr(1(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VCVTTPD2DQSZ128rrk-----
	VCVTTPD2DQSZ128rrk(1(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VCVTTPD2DQSZ128rrk(3(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VCVTTPD2DQSZ128rrkz-----
	VCVTTPD2DQSZ128rrkz(2(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VCVTTPD2DQSZ256rrbk-----
	VCVTTPD2DQSZ256rrbk(1(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VCVTTPD2DQSZ256rrk-----
	VCVTTPD2DQSZ256rrk(1(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VCVTTPD2DQSZrrbk-----
	VCVTTPD2DQSZrrbk(1(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VCVTTPD2DQSZrrk-----
	VCVTTPD2DQSZrrk(1(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VCVTTPD2DQYrr-----
	VCVTTPD2DQYrr(1(Class<VR256>) -> 0(Class<VR128>))  [4.02;6.05]
		Dependencies:
			VEXTRACTF128rri(1(Class<VR256>) -> 0(Class<VR128>)) 
			VPBROADCASTWYrr(1(Class<VR128>) -> 0(Class<VR256>)) 
		Combined result: 7.05 cycles

-----VCVTTPD2DQZ128rr-----
	VCVTTPD2DQZ128rr(1(Class<VR128X>) -> 0(Class<VR128X>))  [3.05;3.05]
		 Successful, latency: 3.05

-----VCVTTPD2DQZ128rrk-----
	VCVTTPD2DQZ128rrk(1(Class<VR128X>) -> 0(Class<VR128X>))  [3.06;3.06]
		 Successful, latency: 3.06
	VCVTTPD2DQZ128rrk(3(Class<VR128X>) -> 0(Class<VR128X>))  [3.04;3.04]
		 Successful, latency: 3.04

-----VCVTTPD2DQZ128rrkz-----
	VCVTTPD2DQZ128rrkz(2(Class<VR128X>) -> 0(Class<VR128X>))  [3.05;3.05]
		 Successful, latency: 3.05

-----VCVTTPD2DQZ256rr-----
	VCVTTPD2DQZ256rr(1(Class<VR256X>) -> 0(Class<VR128X>))  [4.05;6.07]
		Dependencies:
			VEXTRACTI32X4Z256rrik(3(Class<VR256X>) -> 0(Class<VR128X>)) 
			VBROADCASTF32X2Z256rr(1(Class<VR128X>) -> 0(Class<VR256X>)) 
		Combined result: 7.07 cycles

-----VCVTTPD2DQZ256rrbk-----
	VCVTTPD2DQZ256rrbk(1(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VCVTTPD2DQZ256rrk-----
	VCVTTPD2DQZ256rrk(1(Class<VR128X>) -> 0(Class<VR128X>))  [3.02;3.02]
		 Successful, latency: 3.02
	VCVTTPD2DQZ256rrk(3(Class<VR256X>) -> 0(Class<VR128X>))  [4.03;6.05]
		Dependencies:
			VEXTRACTI32X4Z256rrik(3(Class<VR256X>) -> 0(Class<VR128X>)) 
			VBROADCASTF32X2Z256rr(1(Class<VR128X>) -> 0(Class<VR256X>)) 
		Combined result: 7.05 cycles

-----VCVTTPD2DQZ256rrkz-----
	VCVTTPD2DQZ256rrkz(2(Class<VR256X>) -> 0(Class<VR128X>))  [4.03;6.05]
		Dependencies:
			VEXTRACTI32X4Z256rrik(3(Class<VR256X>) -> 0(Class<VR128X>)) 
			VBROADCASTF32X2Z256rr(1(Class<VR128X>) -> 0(Class<VR256X>)) 
		Combined result: 7.05 cycles

-----VCVTTPD2DQZrr-----
	VCVTTPD2DQZrr(1(Class<VR512>) -> 0(Class<VR256X>))  [4.38;7.4]
		Dependencies:
			VPMOVDWZrr(1(Class<VR512>) -> 0(Class<VR256X>)) 
			VINSERTF64X4Zrri(2(Class<VR256X>) -> 0(Class<VR512>)) 
		Combined result: 8.4 cycles

-----VCVTTPD2DQZrrb-----
	VCVTTPD2DQZrrb(1(Class<VR512>) -> 0(Class<VR256X>))  [4.37;7.4]
		Dependencies:
			VPMOVDWZrr(1(Class<VR512>) -> 0(Class<VR256X>)) 
			VINSERTF64X4Zrri(2(Class<VR256X>) -> 0(Class<VR512>)) 
		Combined result: 8.4 cycles

-----VCVTTPD2DQZrrbk-----
	VCVTTPD2DQZrrbk(1(Class<VR256X>) -> 0(Class<VR256X>))  [4.05;4.05]
		 Successful, latency: 4.05
	VCVTTPD2DQZrrbk(3(Class<VR512>) -> 0(Class<VR256X>))  [4.36;7.38]
		Dependencies:
			VPMOVDWZrr(1(Class<VR512>) -> 0(Class<VR256X>)) 
			VINSERTF64X4Zrri(2(Class<VR256X>) -> 0(Class<VR512>)) 
		Combined result: 8.38 cycles

-----VCVTTPD2DQZrrbkz-----
	VCVTTPD2DQZrrbkz(2(Class<VR512>) -> 0(Class<VR256X>))  [4.39;7.41]
		Dependencies:
			VPMOVDWZrr(1(Class<VR512>) -> 0(Class<VR256X>)) 
			VINSERTF64X4Zrri(2(Class<VR256X>) -> 0(Class<VR512>)) 
		Combined result: 8.41 cycles

-----VCVTTPD2DQZrrk-----
	VCVTTPD2DQZrrk(1(Class<VR256X>) -> 0(Class<VR256X>))  [4.05;4.05]
		 Successful, latency: 4.05
	VCVTTPD2DQZrrk(3(Class<VR512>) -> 0(Class<VR256X>))  [4.37;7.39]
		Dependencies:
			VPMOVDWZrr(1(Class<VR512>) -> 0(Class<VR256X>)) 
			VINSERTF64X4Zrri(2(Class<VR256X>) -> 0(Class<VR512>)) 
		Combined result: 8.39 cycles

-----VCVTTPD2DQZrrkz-----
	VCVTTPD2DQZrrkz(2(Class<VR512>) -> 0(Class<VR256X>))  [4.35;7.38]
		Dependencies:
			VPMOVDWZrr(1(Class<VR512>) -> 0(Class<VR256X>)) 
			VINSERTF64X4Zrri(2(Class<VR256X>) -> 0(Class<VR512>)) 
		Combined result: 8.38 cycles

-----VCVTTPD2DQrr-----
	VCVTTPD2DQrr(1(Class<VR128>) -> 0(Class<VR128>))  [3.05;3.05]
		 Successful, latency: 3.05

-----VCVTTPD2QQSZ128rr-----
	VCVTTPD2QQSZ128rr(1(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VCVTTPD2QQSZ128rrk-----
	VCVTTPD2QQSZ128rrk(1(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VCVTTPD2QQSZ128rrk(3(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VCVTTPD2QQSZ128rrkz-----
	VCVTTPD2QQSZ128rrkz(2(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VCVTTPD2QQSZ256rr-----
	VCVTTPD2QQSZ256rr(1(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VCVTTPD2QQSZ256rrb-----
	VCVTTPD2QQSZ256rrb(1(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VCVTTPD2QQSZ256rrbk-----
	VCVTTPD2QQSZ256rrbk(1(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VCVTTPD2QQSZ256rrbk(3(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VCVTTPD2QQSZ256rrbkz-----
	VCVTTPD2QQSZ256rrbkz(2(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VCVTTPD2QQSZ256rrk-----
	VCVTTPD2QQSZ256rrk(1(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VCVTTPD2QQSZ256rrk(3(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VCVTTPD2QQSZ256rrkz-----
	VCVTTPD2QQSZ256rrkz(2(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VCVTTPD2QQSZrr-----
	VCVTTPD2QQSZrr(1(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VCVTTPD2QQSZrrb-----
	VCVTTPD2QQSZrrb(1(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VCVTTPD2QQSZrrbk-----
	VCVTTPD2QQSZrrbk(1(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VCVTTPD2QQSZrrbk(3(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VCVTTPD2QQSZrrbkz-----
	VCVTTPD2QQSZrrbkz(2(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VCVTTPD2QQSZrrk-----
	VCVTTPD2QQSZrrk(1(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VCVTTPD2QQSZrrk(3(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VCVTTPD2QQSZrrkz-----
	VCVTTPD2QQSZrrkz(2(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VCVTTPD2QQZ128rr-----
	VCVTTPD2QQZ128rr(1(Class<VR128X>) -> 0(Class<VR128X>))  [3.07;3.07]
		 Successful, latency: 3.07

-----VCVTTPD2QQZ128rrk-----
	VCVTTPD2QQZ128rrk(1(Class<VR128X>) -> 0(Class<VR128X>))  [3.06;3.06]
		 Successful, latency: 3.06
	VCVTTPD2QQZ128rrk(3(Class<VR128X>) -> 0(Class<VR128X>))  [3.02;3.02]
		 Successful, latency: 3.02

-----VCVTTPD2QQZ128rrkz-----
	VCVTTPD2QQZ128rrkz(2(Class<VR128X>) -> 0(Class<VR128X>))  [3.02;3.02]
		 Successful, latency: 3.02

-----VCVTTPD2QQZ256rr-----
	VCVTTPD2QQZ256rr(1(Class<VR256X>) -> 0(Class<VR256X>))  [3.04;3.04]
		 Successful, latency: 3.04

-----VCVTTPD2QQZ256rrb-----
	VCVTTPD2QQZ256rrb(1(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VCVTTPD2QQZ256rrbk-----
	VCVTTPD2QQZ256rrbk(1(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VCVTTPD2QQZ256rrbk(3(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VCVTTPD2QQZ256rrbkz-----
	VCVTTPD2QQZ256rrbkz(2(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VCVTTPD2QQZ256rrk-----
	VCVTTPD2QQZ256rrk(1(Class<VR256X>) -> 0(Class<VR256X>))  [3.04;3.04]
		 Successful, latency: 3.04
	VCVTTPD2QQZ256rrk(3(Class<VR256X>) -> 0(Class<VR256X>))  [3.06;3.06]
		 Successful, latency: 3.06

-----VCVTTPD2QQZ256rrkz-----
	VCVTTPD2QQZ256rrkz(2(Class<VR256X>) -> 0(Class<VR256X>))  [3.03;3.03]
		 Successful, latency: 3.03

-----VCVTTPD2QQZrr-----
	VCVTTPD2QQZrr(1(Class<VR512>) -> 0(Class<VR512>))  [3.02;3.02]
		 Successful, latency: 3.02

-----VCVTTPD2QQZrrb-----
	VCVTTPD2QQZrrb(1(Class<VR512>) -> 0(Class<VR512>))  [3.02;3.02]
		 Successful, latency: 3.02

-----VCVTTPD2QQZrrbk-----
	VCVTTPD2QQZrrbk(1(Class<VR512>) -> 0(Class<VR512>))  [3.04;3.04]
		 Successful, latency: 3.04
	VCVTTPD2QQZrrbk(3(Class<VR512>) -> 0(Class<VR512>))  [3.03;3.03]
		 Successful, latency: 3.03

-----VCVTTPD2QQZrrbkz-----
	VCVTTPD2QQZrrbkz(2(Class<VR512>) -> 0(Class<VR512>))  [3.02;3.02]
		 Successful, latency: 3.02

-----VCVTTPD2QQZrrk-----
	VCVTTPD2QQZrrk(1(Class<VR512>) -> 0(Class<VR512>))  [3.03;3.03]
		 Successful, latency: 3.03
	VCVTTPD2QQZrrk(3(Class<VR512>) -> 0(Class<VR512>))  [3.02;3.02]
		 Successful, latency: 3.02

-----VCVTTPD2QQZrrkz-----
	VCVTTPD2QQZrrkz(2(Class<VR512>) -> 0(Class<VR512>))  [3.02;3.02]
		 Successful, latency: 3.02

-----VCVTTPD2UDQSZ128rr-----
	VCVTTPD2UDQSZ128rr(1(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VCVTTPD2UDQSZ128rrk-----
	VCVTTPD2UDQSZ128rrk(1(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VCVTTPD2UDQSZ128rrk(3(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VCVTTPD2UDQSZ128rrkz-----
	VCVTTPD2UDQSZ128rrkz(2(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VCVTTPD2UDQSZ256rrbk-----
	VCVTTPD2UDQSZ256rrbk(1(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VCVTTPD2UDQSZ256rrk-----
	VCVTTPD2UDQSZ256rrk(1(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VCVTTPD2UDQSZrrbk-----
	VCVTTPD2UDQSZrrbk(1(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VCVTTPD2UDQSZrrk-----
	VCVTTPD2UDQSZrrk(1(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VCVTTPD2UDQZ128rr-----
	VCVTTPD2UDQZ128rr(1(Class<VR128X>) -> 0(Class<VR128X>))  [3.01;3.01]
		 Successful, latency: 3.01

-----VCVTTPD2UDQZ128rrk-----
	VCVTTPD2UDQZ128rrk(1(Class<VR128X>) -> 0(Class<VR128X>))  [3.05;3.05]
		 Successful, latency: 3.05
	VCVTTPD2UDQZ128rrk(3(Class<VR128X>) -> 0(Class<VR128X>))  [3;3]
		 Successful, latency: 3

-----VCVTTPD2UDQZ128rrkz-----
	VCVTTPD2UDQZ128rrkz(2(Class<VR128X>) -> 0(Class<VR128X>))  [3.04;3.04]
		 Successful, latency: 3.04

-----VCVTTPD2UDQZ256rr-----
	VCVTTPD2UDQZ256rr(1(Class<VR256X>) -> 0(Class<VR128X>))  [4.05;6.07]
		Dependencies:
			VEXTRACTI32X4Z256rrik(3(Class<VR256X>) -> 0(Class<VR128X>)) 
			VBROADCASTF32X2Z256rr(1(Class<VR128X>) -> 0(Class<VR256X>)) 
		Combined result: 7.07 cycles

-----VCVTTPD2UDQZ256rrbk-----
	VCVTTPD2UDQZ256rrbk(1(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VCVTTPD2UDQZ256rrk-----
	VCVTTPD2UDQZ256rrk(1(Class<VR128X>) -> 0(Class<VR128X>))  [3.02;3.02]
		 Successful, latency: 3.02
	VCVTTPD2UDQZ256rrk(3(Class<VR256X>) -> 0(Class<VR128X>))  [4.04;6.06]
		Dependencies:
			VEXTRACTI32X4Z256rrik(3(Class<VR256X>) -> 0(Class<VR128X>)) 
			VBROADCASTF32X2Z256rr(1(Class<VR128X>) -> 0(Class<VR256X>)) 
		Combined result: 7.06 cycles

-----VCVTTPD2UDQZ256rrkz-----
	VCVTTPD2UDQZ256rrkz(2(Class<VR256X>) -> 0(Class<VR128X>))  [4.02;6.04]
		Dependencies:
			VEXTRACTI32X4Z256rrik(3(Class<VR256X>) -> 0(Class<VR128X>)) 
			VBROADCASTF32X2Z256rr(1(Class<VR128X>) -> 0(Class<VR256X>)) 
		Combined result: 7.04 cycles

-----VCVTTPD2UDQZrr-----
	VCVTTPD2UDQZrr(1(Class<VR512>) -> 0(Class<VR256X>))  [4.36;7.38]
		Dependencies:
			VPMOVDWZrr(1(Class<VR512>) -> 0(Class<VR256X>)) 
			VINSERTF64X4Zrri(2(Class<VR256X>) -> 0(Class<VR512>)) 
		Combined result: 8.38 cycles

-----VCVTTPD2UDQZrrb-----
	VCVTTPD2UDQZrrb(1(Class<VR512>) -> 0(Class<VR256X>))  [4.37;7.4]
		Dependencies:
			VPMOVDWZrr(1(Class<VR512>) -> 0(Class<VR256X>)) 
			VINSERTF64X4Zrri(2(Class<VR256X>) -> 0(Class<VR512>)) 
		Combined result: 8.4 cycles

-----VCVTTPD2UDQZrrbk-----
	VCVTTPD2UDQZrrbk(1(Class<VR256X>) -> 0(Class<VR256X>))  [4.07;4.07]
		 Successful, latency: 4.07
	VCVTTPD2UDQZrrbk(3(Class<VR512>) -> 0(Class<VR256X>))  [4.37;7.39]
		Dependencies:
			VPMOVDWZrr(1(Class<VR512>) -> 0(Class<VR256X>)) 
			VINSERTF64X4Zrri(2(Class<VR256X>) -> 0(Class<VR512>)) 
		Combined result: 8.39 cycles

-----VCVTTPD2UDQZrrbkz-----
	VCVTTPD2UDQZrrbkz(2(Class<VR512>) -> 0(Class<VR256X>))  [4.38;7.41]
		Dependencies:
			VPMOVDWZrr(1(Class<VR512>) -> 0(Class<VR256X>)) 
			VINSERTF64X4Zrri(2(Class<VR256X>) -> 0(Class<VR512>)) 
		Combined result: 8.41 cycles

-----VCVTTPD2UDQZrrk-----
	VCVTTPD2UDQZrrk(1(Class<VR256X>) -> 0(Class<VR256X>))  [4.07;4.07]
		 Successful, latency: 4.07
	VCVTTPD2UDQZrrk(3(Class<VR512>) -> 0(Class<VR256X>))  [4.36;7.39]
		Dependencies:
			VPMOVDWZrr(1(Class<VR512>) -> 0(Class<VR256X>)) 
			VINSERTF64X4Zrri(2(Class<VR256X>) -> 0(Class<VR512>)) 
		Combined result: 8.39 cycles

-----VCVTTPD2UDQZrrkz-----
	VCVTTPD2UDQZrrkz(2(Class<VR512>) -> 0(Class<VR256X>))  [4.36;7.39]
		Dependencies:
			VPMOVDWZrr(1(Class<VR512>) -> 0(Class<VR256X>)) 
			VINSERTF64X4Zrri(2(Class<VR256X>) -> 0(Class<VR512>)) 
		Combined result: 8.39 cycles

-----VCVTTPD2UQQSZ128rr-----
	VCVTTPD2UQQSZ128rr(1(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VCVTTPD2UQQSZ128rrk-----
	VCVTTPD2UQQSZ128rrk(1(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VCVTTPD2UQQSZ128rrk(3(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VCVTTPD2UQQSZ128rrkz-----
	VCVTTPD2UQQSZ128rrkz(2(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VCVTTPD2UQQSZ256rr-----
	VCVTTPD2UQQSZ256rr(1(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VCVTTPD2UQQSZ256rrb-----
	VCVTTPD2UQQSZ256rrb(1(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VCVTTPD2UQQSZ256rrbk-----
	VCVTTPD2UQQSZ256rrbk(1(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VCVTTPD2UQQSZ256rrbk(3(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VCVTTPD2UQQSZ256rrbkz-----
	VCVTTPD2UQQSZ256rrbkz(2(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VCVTTPD2UQQSZ256rrk-----
	VCVTTPD2UQQSZ256rrk(1(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VCVTTPD2UQQSZ256rrk(3(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VCVTTPD2UQQSZ256rrkz-----
	VCVTTPD2UQQSZ256rrkz(2(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VCVTTPD2UQQSZrr-----
	VCVTTPD2UQQSZrr(1(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VCVTTPD2UQQSZrrb-----
	VCVTTPD2UQQSZrrb(1(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VCVTTPD2UQQSZrrbk-----
	VCVTTPD2UQQSZrrbk(1(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VCVTTPD2UQQSZrrbk(3(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VCVTTPD2UQQSZrrbkz-----
	VCVTTPD2UQQSZrrbkz(2(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VCVTTPD2UQQSZrrk-----
	VCVTTPD2UQQSZrrk(1(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VCVTTPD2UQQSZrrk(3(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VCVTTPD2UQQSZrrkz-----
	VCVTTPD2UQQSZrrkz(2(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VCVTTPD2UQQZ128rr-----
	VCVTTPD2UQQZ128rr(1(Class<VR128X>) -> 0(Class<VR128X>))  [3.02;3.02]
		 Successful, latency: 3.02

-----VCVTTPD2UQQZ128rrk-----
	VCVTTPD2UQQZ128rrk(1(Class<VR128X>) -> 0(Class<VR128X>))  [3.05;3.05]
		 Successful, latency: 3.05
	VCVTTPD2UQQZ128rrk(3(Class<VR128X>) -> 0(Class<VR128X>))  [3.01;3.01]
		 Successful, latency: 3.01

-----VCVTTPD2UQQZ128rrkz-----
	VCVTTPD2UQQZ128rrkz(2(Class<VR128X>) -> 0(Class<VR128X>))  [3.01;3.01]
		 Successful, latency: 3.01

-----VCVTTPD2UQQZ256rr-----
	VCVTTPD2UQQZ256rr(1(Class<VR256X>) -> 0(Class<VR256X>))  [3.02;3.02]
		 Successful, latency: 3.02

-----VCVTTPD2UQQZ256rrb-----
	VCVTTPD2UQQZ256rrb(1(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VCVTTPD2UQQZ256rrbk-----
	VCVTTPD2UQQZ256rrbk(1(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VCVTTPD2UQQZ256rrbk(3(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VCVTTPD2UQQZ256rrbkz-----
	VCVTTPD2UQQZ256rrbkz(2(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VCVTTPD2UQQZ256rrk-----
	VCVTTPD2UQQZ256rrk(1(Class<VR256X>) -> 0(Class<VR256X>))  [3.02;3.02]
		 Successful, latency: 3.02
	VCVTTPD2UQQZ256rrk(3(Class<VR256X>) -> 0(Class<VR256X>))  [3.06;3.06]
		 Successful, latency: 3.06

-----VCVTTPD2UQQZ256rrkz-----
	VCVTTPD2UQQZ256rrkz(2(Class<VR256X>) -> 0(Class<VR256X>))  [3.05;3.05]
		 Successful, latency: 3.05

-----VCVTTPD2UQQZrr-----
	VCVTTPD2UQQZrr(1(Class<VR512>) -> 0(Class<VR512>))  [3.04;3.04]
		 Successful, latency: 3.04

-----VCVTTPD2UQQZrrb-----
	VCVTTPD2UQQZrrb(1(Class<VR512>) -> 0(Class<VR512>))  [3.05;3.05]
		 Successful, latency: 3.05

-----VCVTTPD2UQQZrrbk-----
	VCVTTPD2UQQZrrbk(1(Class<VR512>) -> 0(Class<VR512>))  [3.03;3.03]
		 Successful, latency: 3.03
	VCVTTPD2UQQZrrbk(3(Class<VR512>) -> 0(Class<VR512>))  [3.04;3.04]
		 Successful, latency: 3.04

-----VCVTTPD2UQQZrrbkz-----
	VCVTTPD2UQQZrrbkz(2(Class<VR512>) -> 0(Class<VR512>))  [3.04;3.04]
		 Successful, latency: 3.04

-----VCVTTPD2UQQZrrk-----
	VCVTTPD2UQQZrrk(1(Class<VR512>) -> 0(Class<VR512>))  [3.02;3.02]
		 Successful, latency: 3.02
	VCVTTPD2UQQZrrk(3(Class<VR512>) -> 0(Class<VR512>))  [3.02;3.02]
		 Successful, latency: 3.02

-----VCVTTPD2UQQZrrkz-----
	VCVTTPD2UQQZrrkz(2(Class<VR512>) -> 0(Class<VR512>))  [3.04;3.04]
		 Successful, latency: 3.04

-----VCVTTPH2DQZ128rr-----
	VCVTTPH2DQZ128rr(1(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VCVTTPH2DQZ128rrk-----
	VCVTTPH2DQZ128rrk(1(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VCVTTPH2DQZ128rrk(3(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VCVTTPH2DQZ128rrkz-----
	VCVTTPH2DQZ128rrkz(2(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VCVTTPH2DQZ256rrbk-----
	VCVTTPH2DQZ256rrbk(1(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VCVTTPH2DQZ256rrk-----
	VCVTTPH2DQZ256rrk(1(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VCVTTPH2DQZrrbk-----
	VCVTTPH2DQZrrbk(1(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VCVTTPH2DQZrrk-----
	VCVTTPH2DQZrrk(1(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VCVTTPH2IBSZ128rr-----
	VCVTTPH2IBSZ128rr(1(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VCVTTPH2IBSZ128rrk-----
	VCVTTPH2IBSZ128rrk(1(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VCVTTPH2IBSZ128rrk(3(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VCVTTPH2IBSZ128rrkz-----
	VCVTTPH2IBSZ128rrkz(2(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VCVTTPH2IBSZ256rr-----
	VCVTTPH2IBSZ256rr(1(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VCVTTPH2IBSZ256rrb-----
	VCVTTPH2IBSZ256rrb(1(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VCVTTPH2IBSZ256rrbk-----
	VCVTTPH2IBSZ256rrbk(1(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VCVTTPH2IBSZ256rrbk(3(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VCVTTPH2IBSZ256rrbkz-----
	VCVTTPH2IBSZ256rrbkz(2(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VCVTTPH2IBSZ256rrk-----
	VCVTTPH2IBSZ256rrk(1(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VCVTTPH2IBSZ256rrk(3(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VCVTTPH2IBSZ256rrkz-----
	VCVTTPH2IBSZ256rrkz(2(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VCVTTPH2IBSZrr-----
	VCVTTPH2IBSZrr(1(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VCVTTPH2IBSZrrb-----
	VCVTTPH2IBSZrrb(1(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VCVTTPH2IBSZrrbk-----
	VCVTTPH2IBSZrrbk(1(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VCVTTPH2IBSZrrbk(3(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VCVTTPH2IBSZrrbkz-----
	VCVTTPH2IBSZrrbkz(2(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VCVTTPH2IBSZrrk-----
	VCVTTPH2IBSZrrk(1(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VCVTTPH2IBSZrrk(3(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VCVTTPH2IBSZrrkz-----
	VCVTTPH2IBSZrrkz(2(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VCVTTPH2IUBSZ128rr-----
	VCVTTPH2IUBSZ128rr(1(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VCVTTPH2IUBSZ128rrk-----
	VCVTTPH2IUBSZ128rrk(1(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VCVTTPH2IUBSZ128rrk(3(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VCVTTPH2IUBSZ128rrkz-----
	VCVTTPH2IUBSZ128rrkz(2(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VCVTTPH2IUBSZ256rr-----
	VCVTTPH2IUBSZ256rr(1(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VCVTTPH2IUBSZ256rrb-----
	VCVTTPH2IUBSZ256rrb(1(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VCVTTPH2IUBSZ256rrbk-----
	VCVTTPH2IUBSZ256rrbk(1(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VCVTTPH2IUBSZ256rrbk(3(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VCVTTPH2IUBSZ256rrbkz-----
	VCVTTPH2IUBSZ256rrbkz(2(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VCVTTPH2IUBSZ256rrk-----
	VCVTTPH2IUBSZ256rrk(1(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VCVTTPH2IUBSZ256rrk(3(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VCVTTPH2IUBSZ256rrkz-----
	VCVTTPH2IUBSZ256rrkz(2(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VCVTTPH2IUBSZrr-----
	VCVTTPH2IUBSZrr(1(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VCVTTPH2IUBSZrrb-----
	VCVTTPH2IUBSZrrb(1(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VCVTTPH2IUBSZrrbk-----
	VCVTTPH2IUBSZrrbk(1(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VCVTTPH2IUBSZrrbk(3(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VCVTTPH2IUBSZrrbkz-----
	VCVTTPH2IUBSZrrbkz(2(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VCVTTPH2IUBSZrrk-----
	VCVTTPH2IUBSZrrk(1(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VCVTTPH2IUBSZrrk(3(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VCVTTPH2IUBSZrrkz-----
	VCVTTPH2IUBSZrrkz(2(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VCVTTPH2QQZ128rr-----
	VCVTTPH2QQZ128rr(1(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VCVTTPH2QQZ128rrk-----
	VCVTTPH2QQZ128rrk(1(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VCVTTPH2QQZ128rrk(3(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VCVTTPH2QQZ128rrkz-----
	VCVTTPH2QQZ128rrkz(2(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VCVTTPH2QQZ256rrbk-----
	VCVTTPH2QQZ256rrbk(1(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VCVTTPH2QQZ256rrk-----
	VCVTTPH2QQZ256rrk(1(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VCVTTPH2QQZrrbk-----
	VCVTTPH2QQZrrbk(1(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VCVTTPH2QQZrrk-----
	VCVTTPH2QQZrrk(1(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VCVTTPH2UDQZ128rr-----
	VCVTTPH2UDQZ128rr(1(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VCVTTPH2UDQZ128rrk-----
	VCVTTPH2UDQZ128rrk(1(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VCVTTPH2UDQZ128rrk(3(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VCVTTPH2UDQZ128rrkz-----
	VCVTTPH2UDQZ128rrkz(2(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VCVTTPH2UDQZ256rrbk-----
	VCVTTPH2UDQZ256rrbk(1(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VCVTTPH2UDQZ256rrk-----
	VCVTTPH2UDQZ256rrk(1(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VCVTTPH2UDQZrrbk-----
	VCVTTPH2UDQZrrbk(1(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VCVTTPH2UDQZrrk-----
	VCVTTPH2UDQZrrk(1(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VCVTTPH2UQQZ128rr-----
	VCVTTPH2UQQZ128rr(1(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VCVTTPH2UQQZ128rrk-----
	VCVTTPH2UQQZ128rrk(1(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VCVTTPH2UQQZ128rrk(3(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VCVTTPH2UQQZ128rrkz-----
	VCVTTPH2UQQZ128rrkz(2(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VCVTTPH2UQQZ256rrbk-----
	VCVTTPH2UQQZ256rrbk(1(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VCVTTPH2UQQZ256rrk-----
	VCVTTPH2UQQZ256rrk(1(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VCVTTPH2UQQZrrbk-----
	VCVTTPH2UQQZrrbk(1(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VCVTTPH2UQQZrrk-----
	VCVTTPH2UQQZrrk(1(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VCVTTPH2UWZ128rr-----
	VCVTTPH2UWZ128rr(1(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VCVTTPH2UWZ128rrk-----
	VCVTTPH2UWZ128rrk(1(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VCVTTPH2UWZ128rrk(3(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VCVTTPH2UWZ128rrkz-----
	VCVTTPH2UWZ128rrkz(2(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VCVTTPH2UWZ256rr-----
	VCVTTPH2UWZ256rr(1(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VCVTTPH2UWZ256rrb-----
	VCVTTPH2UWZ256rrb(1(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VCVTTPH2UWZ256rrbk-----
	VCVTTPH2UWZ256rrbk(1(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VCVTTPH2UWZ256rrbk(3(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VCVTTPH2UWZ256rrbkz-----
	VCVTTPH2UWZ256rrbkz(2(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VCVTTPH2UWZ256rrk-----
	VCVTTPH2UWZ256rrk(1(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VCVTTPH2UWZ256rrk(3(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VCVTTPH2UWZ256rrkz-----
	VCVTTPH2UWZ256rrkz(2(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VCVTTPH2UWZrr-----
	VCVTTPH2UWZrr(1(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VCVTTPH2UWZrrb-----
	VCVTTPH2UWZrrb(1(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VCVTTPH2UWZrrbk-----
	VCVTTPH2UWZrrbk(1(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VCVTTPH2UWZrrbk(3(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VCVTTPH2UWZrrbkz-----
	VCVTTPH2UWZrrbkz(2(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VCVTTPH2UWZrrk-----
	VCVTTPH2UWZrrk(1(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VCVTTPH2UWZrrk(3(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VCVTTPH2UWZrrkz-----
	VCVTTPH2UWZrrkz(2(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VCVTTPH2WZ128rr-----
	VCVTTPH2WZ128rr(1(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VCVTTPH2WZ128rrk-----
	VCVTTPH2WZ128rrk(1(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VCVTTPH2WZ128rrk(3(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VCVTTPH2WZ128rrkz-----
	VCVTTPH2WZ128rrkz(2(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VCVTTPH2WZ256rr-----
	VCVTTPH2WZ256rr(1(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VCVTTPH2WZ256rrb-----
	VCVTTPH2WZ256rrb(1(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VCVTTPH2WZ256rrbk-----
	VCVTTPH2WZ256rrbk(1(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VCVTTPH2WZ256rrbk(3(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VCVTTPH2WZ256rrbkz-----
	VCVTTPH2WZ256rrbkz(2(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VCVTTPH2WZ256rrk-----
	VCVTTPH2WZ256rrk(1(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VCVTTPH2WZ256rrk(3(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VCVTTPH2WZ256rrkz-----
	VCVTTPH2WZ256rrkz(2(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VCVTTPH2WZrr-----
	VCVTTPH2WZrr(1(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VCVTTPH2WZrrb-----
	VCVTTPH2WZrrb(1(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VCVTTPH2WZrrbk-----
	VCVTTPH2WZrrbk(1(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VCVTTPH2WZrrbk(3(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VCVTTPH2WZrrbkz-----
	VCVTTPH2WZrrbkz(2(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VCVTTPH2WZrrk-----
	VCVTTPH2WZrrk(1(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VCVTTPH2WZrrk(3(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VCVTTPH2WZrrkz-----
	VCVTTPH2WZrrkz(2(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VCVTTPS2DQSZ128rr-----
	VCVTTPS2DQSZ128rr(1(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VCVTTPS2DQSZ128rrk-----
	VCVTTPS2DQSZ128rrk(1(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VCVTTPS2DQSZ128rrk(3(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VCVTTPS2DQSZ128rrkz-----
	VCVTTPS2DQSZ128rrkz(2(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VCVTTPS2DQSZ256rr-----
	VCVTTPS2DQSZ256rr(1(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VCVTTPS2DQSZ256rrb-----
	VCVTTPS2DQSZ256rrb(1(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VCVTTPS2DQSZ256rrbk-----
	VCVTTPS2DQSZ256rrbk(1(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VCVTTPS2DQSZ256rrbk(3(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VCVTTPS2DQSZ256rrbkz-----
	VCVTTPS2DQSZ256rrbkz(2(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VCVTTPS2DQSZ256rrk-----
	VCVTTPS2DQSZ256rrk(1(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VCVTTPS2DQSZ256rrk(3(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VCVTTPS2DQSZ256rrkz-----
	VCVTTPS2DQSZ256rrkz(2(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VCVTTPS2DQSZrr-----
	VCVTTPS2DQSZrr(1(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VCVTTPS2DQSZrrb-----
	VCVTTPS2DQSZrrb(1(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VCVTTPS2DQSZrrbk-----
	VCVTTPS2DQSZrrbk(1(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VCVTTPS2DQSZrrbk(3(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VCVTTPS2DQSZrrbkz-----
	VCVTTPS2DQSZrrbkz(2(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VCVTTPS2DQSZrrk-----
	VCVTTPS2DQSZrrk(1(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VCVTTPS2DQSZrrk(3(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VCVTTPS2DQSZrrkz-----
	VCVTTPS2DQSZrrkz(2(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VCVTTPS2DQYrr-----
	VCVTTPS2DQYrr(1(Class<VR256>) -> 0(Class<VR256>))  [3.04;3.04]
		 Successful, latency: 3.04

-----VCVTTPS2DQZ128rr-----
	VCVTTPS2DQZ128rr(1(Class<VR128X>) -> 0(Class<VR128X>))  [3.04;3.04]
		 Successful, latency: 3.04

-----VCVTTPS2DQZ128rrk-----
	VCVTTPS2DQZ128rrk(1(Class<VR128X>) -> 0(Class<VR128X>))  [3.06;3.06]
		 Successful, latency: 3.06
	VCVTTPS2DQZ128rrk(3(Class<VR128X>) -> 0(Class<VR128X>))  [3.02;3.02]
		 Successful, latency: 3.02

-----VCVTTPS2DQZ128rrkz-----
	VCVTTPS2DQZ128rrkz(2(Class<VR128X>) -> 0(Class<VR128X>))  [3.03;3.03]
		 Successful, latency: 3.03

-----VCVTTPS2DQZ256rr-----
	VCVTTPS2DQZ256rr(1(Class<VR256X>) -> 0(Class<VR256X>))  [3.02;3.02]
		 Successful, latency: 3.02

-----VCVTTPS2DQZ256rrb-----
	VCVTTPS2DQZ256rrb(1(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VCVTTPS2DQZ256rrbk-----
	VCVTTPS2DQZ256rrbk(1(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VCVTTPS2DQZ256rrbk(3(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VCVTTPS2DQZ256rrbkz-----
	VCVTTPS2DQZ256rrbkz(2(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VCVTTPS2DQZ256rrk-----
	VCVTTPS2DQZ256rrk(1(Class<VR256X>) -> 0(Class<VR256X>))  [3.02;3.02]
		 Successful, latency: 3.02
	VCVTTPS2DQZ256rrk(3(Class<VR256X>) -> 0(Class<VR256X>))  [3.03;3.03]
		 Successful, latency: 3.03

-----VCVTTPS2DQZ256rrkz-----
	VCVTTPS2DQZ256rrkz(2(Class<VR256X>) -> 0(Class<VR256X>))  [3.04;3.04]
		 Successful, latency: 3.04

-----VCVTTPS2DQZrr-----
	VCVTTPS2DQZrr(1(Class<VR512>) -> 0(Class<VR512>))  [3.03;3.03]
		 Successful, latency: 3.03

-----VCVTTPS2DQZrrb-----
	VCVTTPS2DQZrrb(1(Class<VR512>) -> 0(Class<VR512>))  [3.03;3.03]
		 Successful, latency: 3.03

-----VCVTTPS2DQZrrbk-----
	VCVTTPS2DQZrrbk(1(Class<VR512>) -> 0(Class<VR512>))  [3.03;3.03]
		 Successful, latency: 3.03
	VCVTTPS2DQZrrbk(3(Class<VR512>) -> 0(Class<VR512>))  [3.02;3.02]
		 Successful, latency: 3.02

-----VCVTTPS2DQZrrbkz-----
	VCVTTPS2DQZrrbkz(2(Class<VR512>) -> 0(Class<VR512>))  [3.03;3.03]
		 Successful, latency: 3.03

-----VCVTTPS2DQZrrk-----
	VCVTTPS2DQZrrk(1(Class<VR512>) -> 0(Class<VR512>))  [3.06;3.06]
		 Successful, latency: 3.06
	VCVTTPS2DQZrrk(3(Class<VR512>) -> 0(Class<VR512>))  [3.05;3.05]
		 Successful, latency: 3.05

-----VCVTTPS2DQZrrkz-----
	VCVTTPS2DQZrrkz(2(Class<VR512>) -> 0(Class<VR512>))  [3.02;3.02]
		 Successful, latency: 3.02

-----VCVTTPS2DQrr-----
	VCVTTPS2DQrr(1(Class<VR128>) -> 0(Class<VR128>))  [3.03;3.03]
		 Successful, latency: 3.03

-----VCVTTPS2IBSZ128rr-----
	VCVTTPS2IBSZ128rr(1(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VCVTTPS2IBSZ128rrk-----
	VCVTTPS2IBSZ128rrk(1(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VCVTTPS2IBSZ128rrk(3(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VCVTTPS2IBSZ128rrkz-----
	VCVTTPS2IBSZ128rrkz(2(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VCVTTPS2IBSZ256rr-----
	VCVTTPS2IBSZ256rr(1(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VCVTTPS2IBSZ256rrb-----
	VCVTTPS2IBSZ256rrb(1(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VCVTTPS2IBSZ256rrbk-----
	VCVTTPS2IBSZ256rrbk(1(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VCVTTPS2IBSZ256rrbk(3(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VCVTTPS2IBSZ256rrbkz-----
	VCVTTPS2IBSZ256rrbkz(2(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VCVTTPS2IBSZ256rrk-----
	VCVTTPS2IBSZ256rrk(1(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VCVTTPS2IBSZ256rrk(3(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VCVTTPS2IBSZ256rrkz-----
	VCVTTPS2IBSZ256rrkz(2(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VCVTTPS2IBSZrr-----
	VCVTTPS2IBSZrr(1(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VCVTTPS2IBSZrrb-----
	VCVTTPS2IBSZrrb(1(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VCVTTPS2IBSZrrbk-----
	VCVTTPS2IBSZrrbk(1(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VCVTTPS2IBSZrrbk(3(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VCVTTPS2IBSZrrbkz-----
	VCVTTPS2IBSZrrbkz(2(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VCVTTPS2IBSZrrk-----
	VCVTTPS2IBSZrrk(1(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VCVTTPS2IBSZrrk(3(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VCVTTPS2IBSZrrkz-----
	VCVTTPS2IBSZrrkz(2(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VCVTTPS2IUBSZ128rr-----
	VCVTTPS2IUBSZ128rr(1(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VCVTTPS2IUBSZ128rrk-----
	VCVTTPS2IUBSZ128rrk(1(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VCVTTPS2IUBSZ128rrk(3(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VCVTTPS2IUBSZ128rrkz-----
	VCVTTPS2IUBSZ128rrkz(2(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VCVTTPS2IUBSZ256rr-----
	VCVTTPS2IUBSZ256rr(1(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VCVTTPS2IUBSZ256rrb-----
	VCVTTPS2IUBSZ256rrb(1(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VCVTTPS2IUBSZ256rrbk-----
	VCVTTPS2IUBSZ256rrbk(1(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VCVTTPS2IUBSZ256rrbk(3(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VCVTTPS2IUBSZ256rrbkz-----
	VCVTTPS2IUBSZ256rrbkz(2(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VCVTTPS2IUBSZ256rrk-----
	VCVTTPS2IUBSZ256rrk(1(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VCVTTPS2IUBSZ256rrk(3(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VCVTTPS2IUBSZ256rrkz-----
	VCVTTPS2IUBSZ256rrkz(2(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VCVTTPS2IUBSZrr-----
	VCVTTPS2IUBSZrr(1(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VCVTTPS2IUBSZrrb-----
	VCVTTPS2IUBSZrrb(1(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VCVTTPS2IUBSZrrbk-----
	VCVTTPS2IUBSZrrbk(1(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VCVTTPS2IUBSZrrbk(3(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VCVTTPS2IUBSZrrbkz-----
	VCVTTPS2IUBSZrrbkz(2(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VCVTTPS2IUBSZrrk-----
	VCVTTPS2IUBSZrrk(1(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VCVTTPS2IUBSZrrk(3(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VCVTTPS2IUBSZrrkz-----
	VCVTTPS2IUBSZrrkz(2(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VCVTTPS2QQSZ128rr-----
	VCVTTPS2QQSZ128rr(1(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VCVTTPS2QQSZ128rrk-----
	VCVTTPS2QQSZ128rrk(1(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VCVTTPS2QQSZ128rrk(3(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VCVTTPS2QQSZ128rrkz-----
	VCVTTPS2QQSZ128rrkz(2(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VCVTTPS2QQSZ256rrbk-----
	VCVTTPS2QQSZ256rrbk(1(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VCVTTPS2QQSZ256rrk-----
	VCVTTPS2QQSZ256rrk(1(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VCVTTPS2QQSZrrbk-----
	VCVTTPS2QQSZrrbk(1(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VCVTTPS2QQSZrrk-----
	VCVTTPS2QQSZrrk(1(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VCVTTPS2QQZ128rr-----
	VCVTTPS2QQZ128rr(1(Class<VR128X>) -> 0(Class<VR128X>))  [3.04;3.04]
		 Successful, latency: 3.04

-----VCVTTPS2QQZ128rrk-----
	VCVTTPS2QQZ128rrk(1(Class<VR128X>) -> 0(Class<VR128X>))  [3.02;3.02]
		 Successful, latency: 3.02
	VCVTTPS2QQZ128rrk(3(Class<VR128X>) -> 0(Class<VR128X>))  [3.02;3.02]
		 Successful, latency: 3.02

-----VCVTTPS2QQZ128rrkz-----
	VCVTTPS2QQZ128rrkz(2(Class<VR128X>) -> 0(Class<VR128X>))  [3.02;3.02]
		 Successful, latency: 3.02

-----VCVTTPS2QQZ256rr-----
	VCVTTPS2QQZ256rr(1(Class<VR128X>) -> 0(Class<VR256X>))  [4.01;6.03]
		Dependencies:
			VEXTRACTI32X4Z256rrik(3(Class<VR256X>) -> 0(Class<VR128X>)) 
			VBROADCASTF32X2Z256rr(1(Class<VR128X>) -> 0(Class<VR256X>)) 
		Combined result: 7.05 cycles

-----VCVTTPS2QQZ256rrbk-----
	VCVTTPS2QQZ256rrbk(1(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VCVTTPS2QQZ256rrk-----
	VCVTTPS2QQZ256rrk(1(Class<VR256X>) -> 0(Class<VR256X>))  [3.03;3.03]
		 Successful, latency: 3.03
	VCVTTPS2QQZ256rrk(3(Class<VR128X>) -> 0(Class<VR256X>))  [4.02;6.05]
		Dependencies:
			VEXTRACTI32X4Z256rrik(3(Class<VR256X>) -> 0(Class<VR128X>)) 
			VBROADCASTF32X2Z256rr(1(Class<VR128X>) -> 0(Class<VR256X>)) 
		Combined result: 7.07 cycles

-----VCVTTPS2QQZ256rrkz-----
	VCVTTPS2QQZ256rrkz(2(Class<VR128X>) -> 0(Class<VR256X>))  [4;6.03]
		Dependencies:
			VEXTRACTI32X4Z256rrik(3(Class<VR256X>) -> 0(Class<VR128X>)) 
			VBROADCASTF32X2Z256rr(1(Class<VR128X>) -> 0(Class<VR256X>)) 
		Combined result: 7.05 cycles

-----VCVTTPS2QQZrr-----
	VCVTTPS2QQZrr(1(Class<VR256X>) -> 0(Class<VR512>))  [6;9.03]
		Dependencies:
			VPMOVDWZrr(1(Class<VR512>) -> 0(Class<VR256X>)) 
			VINSERTF64X4Zrri(2(Class<VR256X>) -> 0(Class<VR512>)) 
		Combined result: 10.1 cycles

-----VCVTTPS2QQZrrb-----
	VCVTTPS2QQZrrb(1(Class<VR256X>) -> 0(Class<VR512>))  [6;9.02]
		Dependencies:
			VPMOVDWZrr(1(Class<VR512>) -> 0(Class<VR256X>)) 
			VINSERTF64X4Zrri(2(Class<VR256X>) -> 0(Class<VR512>)) 
		Combined result: 10.1 cycles

-----VCVTTPS2QQZrrbk-----
	VCVTTPS2QQZrrbk(1(Class<VR512>) -> 0(Class<VR512>))  [3.02;3.02]
		 Successful, latency: 3.02
	VCVTTPS2QQZrrbk(3(Class<VR256X>) -> 0(Class<VR512>))  [6.01;9.03]
		Dependencies:
			VPMOVDWZrr(1(Class<VR512>) -> 0(Class<VR256X>)) 
			VINSERTF64X4Zrri(2(Class<VR256X>) -> 0(Class<VR512>)) 
		Combined result: 10.1 cycles

-----VCVTTPS2QQZrrbkz-----
	VCVTTPS2QQZrrbkz(2(Class<VR256X>) -> 0(Class<VR512>))  [6.01;9.04]
		Dependencies:
			VPMOVDWZrr(1(Class<VR512>) -> 0(Class<VR256X>)) 
			VINSERTF64X4Zrri(2(Class<VR256X>) -> 0(Class<VR512>)) 
		Combined result: 10.1 cycles

-----VCVTTPS2QQZrrk-----
	VCVTTPS2QQZrrk(1(Class<VR512>) -> 0(Class<VR512>))  [3.04;3.04]
		 Successful, latency: 3.04
	VCVTTPS2QQZrrk(3(Class<VR256X>) -> 0(Class<VR512>))  [6.02;9.04]
		Dependencies:
			VPMOVDWZrr(1(Class<VR512>) -> 0(Class<VR256X>)) 
			VINSERTF64X4Zrri(2(Class<VR256X>) -> 0(Class<VR512>)) 
		Combined result: 10.1 cycles

-----VCVTTPS2QQZrrkz-----
	VCVTTPS2QQZrrkz(2(Class<VR256X>) -> 0(Class<VR512>))  [6.02;9.04]
		Dependencies:
			VPMOVDWZrr(1(Class<VR512>) -> 0(Class<VR256X>)) 
			VINSERTF64X4Zrri(2(Class<VR256X>) -> 0(Class<VR512>)) 
		Combined result: 10.1 cycles

-----VCVTTPS2UDQSZ128rr-----
	VCVTTPS2UDQSZ128rr(1(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VCVTTPS2UDQSZ128rrk-----
	VCVTTPS2UDQSZ128rrk(1(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VCVTTPS2UDQSZ128rrk(3(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VCVTTPS2UDQSZ128rrkz-----
	VCVTTPS2UDQSZ128rrkz(2(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VCVTTPS2UDQSZ256rr-----
	VCVTTPS2UDQSZ256rr(1(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VCVTTPS2UDQSZ256rrb-----
	VCVTTPS2UDQSZ256rrb(1(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VCVTTPS2UDQSZ256rrbk-----
	VCVTTPS2UDQSZ256rrbk(1(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VCVTTPS2UDQSZ256rrbk(3(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VCVTTPS2UDQSZ256rrbkz-----
	VCVTTPS2UDQSZ256rrbkz(2(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VCVTTPS2UDQSZ256rrk-----
	VCVTTPS2UDQSZ256rrk(1(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VCVTTPS2UDQSZ256rrk(3(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VCVTTPS2UDQSZ256rrkz-----
	VCVTTPS2UDQSZ256rrkz(2(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VCVTTPS2UDQSZrr-----
	VCVTTPS2UDQSZrr(1(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VCVTTPS2UDQSZrrb-----
	VCVTTPS2UDQSZrrb(1(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VCVTTPS2UDQSZrrbk-----
	VCVTTPS2UDQSZrrbk(1(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VCVTTPS2UDQSZrrbk(3(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VCVTTPS2UDQSZrrbkz-----
	VCVTTPS2UDQSZrrbkz(2(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VCVTTPS2UDQSZrrk-----
	VCVTTPS2UDQSZrrk(1(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VCVTTPS2UDQSZrrk(3(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VCVTTPS2UDQSZrrkz-----
	VCVTTPS2UDQSZrrkz(2(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VCVTTPS2UDQZ128rr-----
	VCVTTPS2UDQZ128rr(1(Class<VR128X>) -> 0(Class<VR128X>))  [3.02;3.02]
		 Successful, latency: 3.02

-----VCVTTPS2UDQZ128rrk-----
	VCVTTPS2UDQZ128rrk(1(Class<VR128X>) -> 0(Class<VR128X>))  [3.03;3.03]
		 Successful, latency: 3.03
	VCVTTPS2UDQZ128rrk(3(Class<VR128X>) -> 0(Class<VR128X>))  [3.05;3.05]
		 Successful, latency: 3.05

-----VCVTTPS2UDQZ128rrkz-----
	VCVTTPS2UDQZ128rrkz(2(Class<VR128X>) -> 0(Class<VR128X>))  [3.03;3.03]
		 Successful, latency: 3.03

-----VCVTTPS2UDQZ256rr-----
	VCVTTPS2UDQZ256rr(1(Class<VR256X>) -> 0(Class<VR256X>))  [3.02;3.02]
		 Successful, latency: 3.02

-----VCVTTPS2UDQZ256rrb-----
	VCVTTPS2UDQZ256rrb(1(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VCVTTPS2UDQZ256rrbk-----
	VCVTTPS2UDQZ256rrbk(1(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VCVTTPS2UDQZ256rrbk(3(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VCVTTPS2UDQZ256rrbkz-----
	VCVTTPS2UDQZ256rrbkz(2(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VCVTTPS2UDQZ256rrk-----
	VCVTTPS2UDQZ256rrk(1(Class<VR256X>) -> 0(Class<VR256X>))  [3.03;3.03]
		 Successful, latency: 3.03
	VCVTTPS2UDQZ256rrk(3(Class<VR256X>) -> 0(Class<VR256X>))  [3.03;3.03]
		 Successful, latency: 3.03

-----VCVTTPS2UDQZ256rrkz-----
	VCVTTPS2UDQZ256rrkz(2(Class<VR256X>) -> 0(Class<VR256X>))  [3.03;3.03]
		 Successful, latency: 3.03

-----VCVTTPS2UDQZrr-----
	VCVTTPS2UDQZrr(1(Class<VR512>) -> 0(Class<VR512>))  [3.04;3.04]
		 Successful, latency: 3.04

-----VCVTTPS2UDQZrrb-----
	VCVTTPS2UDQZrrb(1(Class<VR512>) -> 0(Class<VR512>))  [3.03;3.03]
		 Successful, latency: 3.03

-----VCVTTPS2UDQZrrbk-----
	VCVTTPS2UDQZrrbk(1(Class<VR512>) -> 0(Class<VR512>))  [3.02;3.02]
		 Successful, latency: 3.02
	VCVTTPS2UDQZrrbk(3(Class<VR512>) -> 0(Class<VR512>))  [3.04;3.04]
		 Successful, latency: 3.04

-----VCVTTPS2UDQZrrbkz-----
	VCVTTPS2UDQZrrbkz(2(Class<VR512>) -> 0(Class<VR512>))  [3.04;3.04]
		 Successful, latency: 3.04

-----VCVTTPS2UDQZrrk-----
	VCVTTPS2UDQZrrk(1(Class<VR512>) -> 0(Class<VR512>))  [3.03;3.03]
		 Successful, latency: 3.03
	VCVTTPS2UDQZrrk(3(Class<VR512>) -> 0(Class<VR512>))  [3.02;3.02]
		 Successful, latency: 3.02

-----VCVTTPS2UDQZrrkz-----
	VCVTTPS2UDQZrrkz(2(Class<VR512>) -> 0(Class<VR512>))  [3.02;3.02]
		 Successful, latency: 3.02

-----VCVTTPS2UQQSZ128rr-----
	VCVTTPS2UQQSZ128rr(1(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VCVTTPS2UQQSZ128rrk-----
	VCVTTPS2UQQSZ128rrk(1(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VCVTTPS2UQQSZ128rrk(3(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VCVTTPS2UQQSZ128rrkz-----
	VCVTTPS2UQQSZ128rrkz(2(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VCVTTPS2UQQSZ256rrbk-----
	VCVTTPS2UQQSZ256rrbk(1(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VCVTTPS2UQQSZ256rrk-----
	VCVTTPS2UQQSZ256rrk(1(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VCVTTPS2UQQSZrrbk-----
	VCVTTPS2UQQSZrrbk(1(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VCVTTPS2UQQSZrrk-----
	VCVTTPS2UQQSZrrk(1(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VCVTTPS2UQQZ128rr-----
	VCVTTPS2UQQZ128rr(1(Class<VR128X>) -> 0(Class<VR128X>))  [3.04;3.04]
		 Successful, latency: 3.04

-----VCVTTPS2UQQZ128rrk-----
	VCVTTPS2UQQZ128rrk(1(Class<VR128X>) -> 0(Class<VR128X>))  [3.03;3.03]
		 Successful, latency: 3.03
	VCVTTPS2UQQZ128rrk(3(Class<VR128X>) -> 0(Class<VR128X>))  [3.03;3.03]
		 Successful, latency: 3.03

-----VCVTTPS2UQQZ128rrkz-----
	VCVTTPS2UQQZ128rrkz(2(Class<VR128X>) -> 0(Class<VR128X>))  [3.02;3.02]
		 Successful, latency: 3.02

-----VCVTTPS2UQQZ256rr-----
	VCVTTPS2UQQZ256rr(1(Class<VR128X>) -> 0(Class<VR256X>))  [4.01;6.04]
		Dependencies:
			VEXTRACTI32X4Z256rrik(3(Class<VR256X>) -> 0(Class<VR128X>)) 
			VBROADCASTF32X2Z256rr(1(Class<VR128X>) -> 0(Class<VR256X>)) 
		Combined result: 7.06 cycles

-----VCVTTPS2UQQZ256rrbk-----
	VCVTTPS2UQQZ256rrbk(1(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VCVTTPS2UQQZ256rrk-----
	VCVTTPS2UQQZ256rrk(1(Class<VR256X>) -> 0(Class<VR256X>))  [3.05;3.05]
		 Successful, latency: 3.05
	VCVTTPS2UQQZ256rrk(3(Class<VR128X>) -> 0(Class<VR256X>))  [4.02;6.04]
		Dependencies:
			VEXTRACTI32X4Z256rrik(3(Class<VR256X>) -> 0(Class<VR128X>)) 
			VBROADCASTF32X2Z256rr(1(Class<VR128X>) -> 0(Class<VR256X>)) 
		Combined result: 7.06 cycles

-----VCVTTPS2UQQZ256rrkz-----
	VCVTTPS2UQQZ256rrkz(2(Class<VR128X>) -> 0(Class<VR256X>))  [4.04;6.06]
		Dependencies:
			VEXTRACTI32X4Z256rrik(3(Class<VR256X>) -> 0(Class<VR128X>)) 
			VBROADCASTF32X2Z256rr(1(Class<VR128X>) -> 0(Class<VR256X>)) 
		Combined result: 7.08 cycles

-----VCVTTPS2UQQZrr-----
	VCVTTPS2UQQZrr(1(Class<VR256X>) -> 0(Class<VR512>))  [6.01;9.04]
		Dependencies:
			VPMOVDWZrr(1(Class<VR512>) -> 0(Class<VR256X>)) 
			VINSERTF64X4Zrri(2(Class<VR256X>) -> 0(Class<VR512>)) 
		Combined result: 10.1 cycles

-----VCVTTPS2UQQZrrb-----
	VCVTTPS2UQQZrrb(1(Class<VR256X>) -> 0(Class<VR512>))  [6.02;9.04]
		Dependencies:
			VPMOVDWZrr(1(Class<VR512>) -> 0(Class<VR256X>)) 
			VINSERTF64X4Zrri(2(Class<VR256X>) -> 0(Class<VR512>)) 
		Combined result: 10.1 cycles

-----VCVTTPS2UQQZrrbk-----
	VCVTTPS2UQQZrrbk(1(Class<VR512>) -> 0(Class<VR512>))  [3.02;3.02]
		 Successful, latency: 3.02
	VCVTTPS2UQQZrrbk(3(Class<VR256X>) -> 0(Class<VR512>))  [6.01;9.03]
		Dependencies:
			VPMOVDWZrr(1(Class<VR512>) -> 0(Class<VR256X>)) 
			VINSERTF64X4Zrri(2(Class<VR256X>) -> 0(Class<VR512>)) 
		Combined result: 10.1 cycles

-----VCVTTPS2UQQZrrbkz-----
	VCVTTPS2UQQZrrbkz(2(Class<VR256X>) -> 0(Class<VR512>))  [6;9.03]
		Dependencies:
			VPMOVDWZrr(1(Class<VR512>) -> 0(Class<VR256X>)) 
			VINSERTF64X4Zrri(2(Class<VR256X>) -> 0(Class<VR512>)) 
		Combined result: 10.1 cycles

-----VCVTTPS2UQQZrrk-----
	VCVTTPS2UQQZrrk(1(Class<VR512>) -> 0(Class<VR512>))  [3.03;3.03]
		 Successful, latency: 3.03
	VCVTTPS2UQQZrrk(3(Class<VR256X>) -> 0(Class<VR512>))  [5.98;9.01]
		Dependencies:
			VPMOVDWZrr(1(Class<VR512>) -> 0(Class<VR256X>)) 
			VINSERTF64X4Zrri(2(Class<VR256X>) -> 0(Class<VR512>)) 
		Combined result: 10 cycles

-----VCVTTPS2UQQZrrkz-----
	VCVTTPS2UQQZrrkz(2(Class<VR256X>) -> 0(Class<VR512>))  [6.03;9.05]
		Dependencies:
			VPMOVDWZrr(1(Class<VR512>) -> 0(Class<VR256X>)) 
			VINSERTF64X4Zrri(2(Class<VR256X>) -> 0(Class<VR512>)) 
		Combined result: 10.1 cycles

-----VCVTTSD2SI64Zrr-----
	VCVTTSD2SI64Zrr(1(Class<FR64X>) -> 0(Class<GR64>))  [4.01;8.06]
		Dependencies:
			VMOVSDto64Zrr(1(Class<FR64X>) -> 0(Class<GR64>)) 
			VMOV64toSDZrr(1(Class<GR64>) -> 0(Class<FR64X>)) 
		Combined result: 9.06 cycles

-----VCVTTSD2SI64Zrr_Int-----
	VCVTTSD2SI64Zrr_Int(1(Class<VR128X>) -> 0(Class<GR64>))  [4.05;8.09]
		Dependencies:
			VMOVPQIto64Zrr(1(Class<VR128X>) -> 0(Class<GR64>)) 
			VMOV64toPQIZrr(1(Class<GR64>) -> 0(Class<VR128X>)) 
		Combined result: 9.09 cycles

-----VCVTTSD2SI64Zrrb_Int-----
	VCVTTSD2SI64Zrrb_Int(1(Class<VR128X>) -> 0(Class<GR64>))  [4.06;8.09]
		Dependencies:
			VMOVPQIto64Zrr(1(Class<VR128X>) -> 0(Class<GR64>)) 
			VMOV64toPQIZrr(1(Class<GR64>) -> 0(Class<VR128X>)) 
		Combined result: 9.09 cycles

-----VCVTTSD2SI64rr-----
	VCVTTSD2SI64rr(1(Class<FR64>) -> 0(Class<GR64>))  [4.06;8.1]
		Dependencies:
			VMOVSDto64rr(1(Class<FR64>) -> 0(Class<GR64>)) 
			VMOV64toSDrr(1(Class<GR64>) -> 0(Class<FR64>)) 
		Combined result: 9.1 cycles

-----VCVTTSD2SI64rr_Int-----
	VCVTTSD2SI64rr_Int(1(Class<VR128>) -> 0(Class<GR64>))  [4.04;8.08]
		Dependencies:
			MOVPQIto64rr(1(Class<VR128>) -> 0(Class<GR64>)) 
			VMOV64toPQIrr(1(Class<GR64>) -> 0(Class<VR128>)) 
		Combined result: 9.08 cycles

-----VCVTTSD2SIZrr-----
	VCVTTSD2SIZrr(1(Class<FR64X>) -> 0(Class<GR32>))  [1.01;11.1]
		Dependencies:
			VCVTTSD2USIZrr(1(Class<FR64X>) -> 0(Class<GR32>)) 
			VCVTSI2SDZrr(2(Class<GR32>) -> 0(Class<FR64X>)) 
		Combined result: 12.1 cycles

-----VCVTTSD2SIZrr_Int-----
	VCVTTSD2SIZrr_Int(1(Class<VR128X>) -> 0(Class<GR32>))  [4.02;8.07]
		Dependencies:
			VMOVPDI2DIZrr(1(Class<VR128X>) -> 0(Class<GR32>)) 
			VMOVDI2PDIZrr(1(Class<GR32>) -> 0(Class<VR128X>)) 
		Combined result: 9.07 cycles

-----VCVTTSD2SIZrrb_Int-----
	VCVTTSD2SIZrrb_Int(1(Class<VR128X>) -> 0(Class<GR32>))  [4.02;8.07]
		Dependencies:
			VMOVPDI2DIZrr(1(Class<VR128X>) -> 0(Class<GR32>)) 
			VMOVDI2PDIZrr(1(Class<GR32>) -> 0(Class<VR128X>)) 
		Combined result: 9.07 cycles

-----VCVTTSD2SIrr-----
	VCVTTSD2SIrr(1(Class<FR64>) -> 0(Class<GR32>))  [1.01;11.1]
		Dependencies:
			CVTSD2SIrr(1(Class<FR64>) -> 0(Class<GR32>)) 
			CVTSI2SDrr(1(Class<GR32>) -> 0(Class<FR64>)) 
		Combined result: 12.1 cycles

-----VCVTTSD2SIrr_Int-----
	VCVTTSD2SIrr_Int(1(Class<VR128>) -> 0(Class<GR32>))  [4.01;8.04]
		Dependencies:
			MOVMSKPSrr(1(Class<VR128>) -> 0(Class<GR32>)) 
			VMOVDI2PDIrr(1(Class<GR32>) -> 0(Class<VR128>)) 
		Combined result: 9.04 cycles

-----VCVTTSD2USI64Zrr-----
	VCVTTSD2USI64Zrr(1(Class<FR64X>) -> 0(Class<GR64>))  [4.01;8.07]
		Dependencies:
			VMOVSDto64Zrr(1(Class<FR64X>) -> 0(Class<GR64>)) 
			VMOV64toSDZrr(1(Class<GR64>) -> 0(Class<FR64X>)) 
		Combined result: 9.07 cycles

-----VCVTTSD2USI64Zrr_Int-----
	VCVTTSD2USI64Zrr_Int(1(Class<VR128X>) -> 0(Class<GR64>))  [4.04;8.07]
		Dependencies:
			VMOVPQIto64Zrr(1(Class<VR128X>) -> 0(Class<GR64>)) 
			VMOV64toPQIZrr(1(Class<GR64>) -> 0(Class<VR128X>)) 
		Combined result: 9.07 cycles

-----VCVTTSD2USI64Zrrb_Int-----
	VCVTTSD2USI64Zrrb_Int(1(Class<VR128X>) -> 0(Class<GR64>))  [4.05;8.08]
		Dependencies:
			VMOVPQIto64Zrr(1(Class<VR128X>) -> 0(Class<GR64>)) 
			VMOV64toPQIZrr(1(Class<GR64>) -> 0(Class<VR128X>)) 
		Combined result: 9.08 cycles

-----VCVTTSD2USIZrr-----
	VCVTTSD2USIZrr(1(Class<FR64X>) -> 0(Class<GR32>))  [1.01;11.1]
		Dependencies:
			VCVTTSD2USIZrr(1(Class<FR64X>) -> 0(Class<GR32>)) 
			VCVTSI2SDZrr(2(Class<GR32>) -> 0(Class<FR64X>)) 
		Combined result: 12.1 cycles

-----VCVTTSD2USIZrr_Int-----
	VCVTTSD2USIZrr_Int(1(Class<VR128X>) -> 0(Class<GR32>))  [4.02;8.07]
		Dependencies:
			VMOVPDI2DIZrr(1(Class<VR128X>) -> 0(Class<GR32>)) 
			VMOVDI2PDIZrr(1(Class<GR32>) -> 0(Class<VR128X>)) 
		Combined result: 9.07 cycles

-----VCVTTSD2USIZrrb_Int-----
	VCVTTSD2USIZrrb_Int(1(Class<VR128X>) -> 0(Class<GR32>))  [4.01;8.06]
		Dependencies:
			VMOVPDI2DIZrr(1(Class<VR128X>) -> 0(Class<GR32>)) 
			VMOVDI2PDIZrr(1(Class<GR32>) -> 0(Class<VR128X>)) 
		Combined result: 9.06 cycles

-----VCVTTSS2SI64Zrr-----
	VCVTTSS2SI64Zrr(1(Class<FR32X>) -> 0(Class<GR64>))  [1.03;11.1]
		Dependencies:
			VCVTUSI642SSZrr(2(Class<GR64>) -> 0(Class<FR32X>)) 
			VCVTSS2SI64Zrr(1(Class<FR32X>) -> 0(Class<GR64>)) 
		Combined result: 12.1 cycles

-----VCVTTSS2SI64Zrr_Int-----
	VCVTTSS2SI64Zrr_Int(1(Class<VR128X>) -> 0(Class<GR64>))  [4.06;8.1]
		Dependencies:
			VMOVPQIto64Zrr(1(Class<VR128X>) -> 0(Class<GR64>)) 
			VMOV64toPQIZrr(1(Class<GR64>) -> 0(Class<VR128X>)) 
		Combined result: 9.1 cycles

-----VCVTTSS2SI64Zrrb_Int-----
	VCVTTSS2SI64Zrrb_Int(1(Class<VR128X>) -> 0(Class<GR64>))  [4.05;8.09]
		Dependencies:
			VMOVPQIto64Zrr(1(Class<VR128X>) -> 0(Class<GR64>)) 
			VMOV64toPQIZrr(1(Class<GR64>) -> 0(Class<VR128X>)) 
		Combined result: 9.09 cycles

-----VCVTTSS2SI64rr-----
	VCVTTSS2SI64rr(1(Class<FR32>) -> 0(Class<GR64>))  [1.01;11.1]
		Dependencies:
			VCVTSI642SSrr(2(Class<GR64>) -> 0(Class<FR32>)) 
			CVTSS2SI64rr(1(Class<FR32>) -> 0(Class<GR64>)) 
		Combined result: 12.1 cycles

-----VCVTTSS2SI64rr_Int-----
	VCVTTSS2SI64rr_Int(1(Class<VR128>) -> 0(Class<GR64>))  [4.02;8.06]
		Dependencies:
			MOVPQIto64rr(1(Class<VR128>) -> 0(Class<GR64>)) 
			VMOV64toPQIrr(1(Class<GR64>) -> 0(Class<VR128>)) 
		Combined result: 9.06 cycles

-----VCVTTSS2SIZrr-----
	VCVTTSS2SIZrr(1(Class<FR32X>) -> 0(Class<GR32>))  [4.01;8.06]
		Dependencies:
			VMOVDI2SSZrr(1(Class<GR32>) -> 0(Class<FR32X>)) 
			VMOVSS2DIZrr(1(Class<FR32X>) -> 0(Class<GR32>)) 
		Combined result: 9.05 cycles

-----VCVTTSS2SIZrr_Int-----
	VCVTTSS2SIZrr_Int(1(Class<VR128X>) -> 0(Class<GR32>))  [4.03;8.08]
		Dependencies:
			VMOVPDI2DIZrr(1(Class<VR128X>) -> 0(Class<GR32>)) 
			VMOVDI2PDIZrr(1(Class<GR32>) -> 0(Class<VR128X>)) 
		Combined result: 9.08 cycles

-----VCVTTSS2SIZrrb_Int-----
	VCVTTSS2SIZrrb_Int(1(Class<VR128X>) -> 0(Class<GR32>))  [4.02;8.07]
		Dependencies:
			VMOVPDI2DIZrr(1(Class<VR128X>) -> 0(Class<GR32>)) 
			VMOVDI2PDIZrr(1(Class<GR32>) -> 0(Class<VR128X>)) 
		Combined result: 9.07 cycles

-----VCVTTSS2SIrr-----
	VCVTTSS2SIrr(1(Class<FR32>) -> 0(Class<GR32>))  [4.02;8.08]
		Dependencies:
			VMOVSS2DIrr(1(Class<FR32>) -> 0(Class<GR32>)) 
			VMOVDI2SSrr(1(Class<GR32>) -> 0(Class<FR32>)) 
		Combined result: 9.08 cycles

-----VCVTTSS2SIrr_Int-----
	VCVTTSS2SIrr_Int(1(Class<VR128>) -> 0(Class<GR32>))  [4.02;8.06]
		Dependencies:
			MOVMSKPSrr(1(Class<VR128>) -> 0(Class<GR32>)) 
			VMOVDI2PDIrr(1(Class<GR32>) -> 0(Class<VR128>)) 
		Combined result: 9.06 cycles

-----VCVTTSS2USI64Zrr-----
	VCVTTSS2USI64Zrr(1(Class<FR32X>) -> 0(Class<GR64>))  [1.01;11.1]
		Dependencies:
			VCVTUSI642SSZrr(2(Class<GR64>) -> 0(Class<FR32X>)) 
			VCVTSS2SI64Zrr(1(Class<FR32X>) -> 0(Class<GR64>)) 
		Combined result: 12.1 cycles

-----VCVTTSS2USI64Zrr_Int-----
	VCVTTSS2USI64Zrr_Int(1(Class<VR128X>) -> 0(Class<GR64>))  [4.06;8.1]
		Dependencies:
			VMOVPQIto64Zrr(1(Class<VR128X>) -> 0(Class<GR64>)) 
			VMOV64toPQIZrr(1(Class<GR64>) -> 0(Class<VR128X>)) 
		Combined result: 9.1 cycles

-----VCVTTSS2USI64Zrrb_Int-----
	VCVTTSS2USI64Zrrb_Int(1(Class<VR128X>) -> 0(Class<GR64>))  [4.03;8.07]
		Dependencies:
			VMOVPQIto64Zrr(1(Class<VR128X>) -> 0(Class<GR64>)) 
			VMOV64toPQIZrr(1(Class<GR64>) -> 0(Class<VR128X>)) 
		Combined result: 9.07 cycles

-----VCVTTSS2USIZrr-----
	VCVTTSS2USIZrr(1(Class<FR32X>) -> 0(Class<GR32>))  [4.02;8.07]
		Dependencies:
			VMOVDI2SSZrr(1(Class<GR32>) -> 0(Class<FR32X>)) 
			VMOVSS2DIZrr(1(Class<FR32X>) -> 0(Class<GR32>)) 
		Combined result: 9.06 cycles

-----VCVTTSS2USIZrr_Int-----
	VCVTTSS2USIZrr_Int(1(Class<VR128X>) -> 0(Class<GR32>))  [4.01;8.06]
		Dependencies:
			VMOVPDI2DIZrr(1(Class<VR128X>) -> 0(Class<GR32>)) 
			VMOVDI2PDIZrr(1(Class<GR32>) -> 0(Class<VR128X>)) 
		Combined result: 9.06 cycles

-----VCVTTSS2USIZrrb_Int-----
	VCVTTSS2USIZrrb_Int(1(Class<VR128X>) -> 0(Class<GR32>))  [4.01;8.06]
		Dependencies:
			VMOVPDI2DIZrr(1(Class<VR128X>) -> 0(Class<GR32>)) 
			VMOVDI2PDIZrr(1(Class<GR32>) -> 0(Class<VR128X>)) 
		Combined result: 9.06 cycles

-----VCVTUDQ2PDZ128rr-----
	VCVTUDQ2PDZ128rr(1(Class<VR128X>) -> 0(Class<VR128X>))  [3.06;3.06]
		 Successful, latency: 3.06

-----VCVTUDQ2PDZ128rrk-----
	VCVTUDQ2PDZ128rrk(1(Class<VR128X>) -> 0(Class<VR128X>))  [3.03;3.03]
		 Successful, latency: 3.03
	VCVTUDQ2PDZ128rrk(3(Class<VR128X>) -> 0(Class<VR128X>))  [3.04;3.04]
		 Successful, latency: 3.04

-----VCVTUDQ2PDZ128rrkz-----
	VCVTUDQ2PDZ128rrkz(2(Class<VR128X>) -> 0(Class<VR128X>))  [3.03;3.03]
		 Successful, latency: 3.03

-----VCVTUDQ2PDZ256rr-----
	VCVTUDQ2PDZ256rr(1(Class<VR128X>) -> 0(Class<VR256X>))  [3.99;6.02]
		Dependencies:
			VEXTRACTI32X4Z256rrik(3(Class<VR256X>) -> 0(Class<VR128X>)) 
			VBROADCASTF32X2Z256rr(1(Class<VR128X>) -> 0(Class<VR256X>)) 
		Combined result: 7.04 cycles

-----VCVTUDQ2PDZ256rrk-----
	VCVTUDQ2PDZ256rrk(1(Class<VR256X>) -> 0(Class<VR256X>))  [3.02;3.02]
		 Successful, latency: 3.02
	VCVTUDQ2PDZ256rrk(3(Class<VR128X>) -> 0(Class<VR256X>))  [4;6.02]
		Dependencies:
			VEXTRACTI32X4Z256rrik(3(Class<VR256X>) -> 0(Class<VR128X>)) 
			VBROADCASTF32X2Z256rr(1(Class<VR128X>) -> 0(Class<VR256X>)) 
		Combined result: 7.05 cycles

-----VCVTUDQ2PDZ256rrkz-----
	VCVTUDQ2PDZ256rrkz(2(Class<VR128X>) -> 0(Class<VR256X>))  [4.01;6.03]
		Dependencies:
			VEXTRACTI32X4Z256rrik(3(Class<VR256X>) -> 0(Class<VR128X>)) 
			VBROADCASTF32X2Z256rr(1(Class<VR128X>) -> 0(Class<VR256X>)) 
		Combined result: 7.05 cycles

-----VCVTUDQ2PDZrr-----
	VCVTUDQ2PDZrr(1(Class<VR256X>) -> 0(Class<VR512>))  [6.02;9.04]
		Dependencies:
			VPMOVDWZrr(1(Class<VR512>) -> 0(Class<VR256X>)) 
			VINSERTF64X4Zrri(2(Class<VR256X>) -> 0(Class<VR512>)) 
		Combined result: 10.1 cycles

-----VCVTUDQ2PDZrrk-----
	VCVTUDQ2PDZrrk(1(Class<VR512>) -> 0(Class<VR512>))  [3.03;3.03]
		 Successful, latency: 3.03
	VCVTUDQ2PDZrrk(3(Class<VR256X>) -> 0(Class<VR512>))  [6;9.03]
		Dependencies:
			VPMOVDWZrr(1(Class<VR512>) -> 0(Class<VR256X>)) 
			VINSERTF64X4Zrri(2(Class<VR256X>) -> 0(Class<VR512>)) 
		Combined result: 10.1 cycles

-----VCVTUDQ2PDZrrkz-----
	VCVTUDQ2PDZrrkz(2(Class<VR256X>) -> 0(Class<VR512>))  [6.03;9.06]
		Dependencies:
			VPMOVDWZrr(1(Class<VR512>) -> 0(Class<VR256X>)) 
			VINSERTF64X4Zrri(2(Class<VR256X>) -> 0(Class<VR512>)) 
		Combined result: 10.1 cycles

-----VCVTUDQ2PHZ128rr-----
	VCVTUDQ2PHZ128rr(1(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VCVTUDQ2PHZ128rrk-----
	VCVTUDQ2PHZ128rrk(1(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VCVTUDQ2PHZ128rrk(3(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VCVTUDQ2PHZ128rrkz-----
	VCVTUDQ2PHZ128rrkz(2(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VCVTUDQ2PHZ256rrbk-----
	VCVTUDQ2PHZ256rrbk(1(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VCVTUDQ2PHZ256rrk-----
	VCVTUDQ2PHZ256rrk(1(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VCVTUDQ2PHZrrbk-----
	VCVTUDQ2PHZrrbk(1(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VCVTUDQ2PHZrrk-----
	VCVTUDQ2PHZrrk(1(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VCVTUDQ2PSZ128rr-----
	VCVTUDQ2PSZ128rr(1(Class<VR128X>) -> 0(Class<VR128X>))  [3.02;3.02]
		 Successful, latency: 3.02

-----VCVTUDQ2PSZ128rrk-----
	VCVTUDQ2PSZ128rrk(1(Class<VR128X>) -> 0(Class<VR128X>))  [3.01;3.01]
		 Successful, latency: 3.01
	VCVTUDQ2PSZ128rrk(3(Class<VR128X>) -> 0(Class<VR128X>))  [3.03;3.03]
		 Successful, latency: 3.03

-----VCVTUDQ2PSZ128rrkz-----
	VCVTUDQ2PSZ128rrkz(2(Class<VR128X>) -> 0(Class<VR128X>))  [3.03;3.03]
		 Successful, latency: 3.03

-----VCVTUDQ2PSZ256rr-----
	VCVTUDQ2PSZ256rr(1(Class<VR256X>) -> 0(Class<VR256X>))  [3.06;3.06]
		 Successful, latency: 3.06

-----VCVTUDQ2PSZ256rrb-----
	VCVTUDQ2PSZ256rrb(1(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VCVTUDQ2PSZ256rrbk-----
	VCVTUDQ2PSZ256rrbk(1(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VCVTUDQ2PSZ256rrbk(3(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VCVTUDQ2PSZ256rrbkz-----
	VCVTUDQ2PSZ256rrbkz(2(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VCVTUDQ2PSZ256rrk-----
	VCVTUDQ2PSZ256rrk(1(Class<VR256X>) -> 0(Class<VR256X>))  [3.03;3.03]
		 Successful, latency: 3.03
	VCVTUDQ2PSZ256rrk(3(Class<VR256X>) -> 0(Class<VR256X>))  [3.03;3.03]
		 Successful, latency: 3.03

-----VCVTUDQ2PSZ256rrkz-----
	VCVTUDQ2PSZ256rrkz(2(Class<VR256X>) -> 0(Class<VR256X>))  [3.02;3.02]
		 Successful, latency: 3.02

-----VCVTUDQ2PSZrr-----
	VCVTUDQ2PSZrr(1(Class<VR512>) -> 0(Class<VR512>))  [3.03;3.03]
		 Successful, latency: 3.03

-----VCVTUDQ2PSZrrb-----
	VCVTUDQ2PSZrrb(1(Class<VR512>) -> 0(Class<VR512>))  [3.02;3.02]
		 Successful, latency: 3.02

-----VCVTUDQ2PSZrrbk-----
	VCVTUDQ2PSZrrbk(1(Class<VR512>) -> 0(Class<VR512>))  [3.05;3.05]
		 Successful, latency: 3.05
	VCVTUDQ2PSZrrbk(3(Class<VR512>) -> 0(Class<VR512>))  [3.02;3.02]
		 Successful, latency: 3.02

-----VCVTUDQ2PSZrrbkz-----
	VCVTUDQ2PSZrrbkz(2(Class<VR512>) -> 0(Class<VR512>))  [3.03;3.03]
		 Successful, latency: 3.03

-----VCVTUDQ2PSZrrk-----
	VCVTUDQ2PSZrrk(1(Class<VR512>) -> 0(Class<VR512>))  [3.03;3.03]
		 Successful, latency: 3.03
	VCVTUDQ2PSZrrk(3(Class<VR512>) -> 0(Class<VR512>))  [3.03;3.03]
		 Successful, latency: 3.03

-----VCVTUDQ2PSZrrkz-----
	VCVTUDQ2PSZrrkz(2(Class<VR512>) -> 0(Class<VR512>))  [3.03;3.03]
		 Successful, latency: 3.03

-----VCVTUQQ2PDZ128rr-----
	VCVTUQQ2PDZ128rr(1(Class<VR128X>) -> 0(Class<VR128X>))  [3.02;3.02]
		 Successful, latency: 3.02

-----VCVTUQQ2PDZ128rrk-----
	VCVTUQQ2PDZ128rrk(1(Class<VR128X>) -> 0(Class<VR128X>))  [3.04;3.04]
		 Successful, latency: 3.04
	VCVTUQQ2PDZ128rrk(3(Class<VR128X>) -> 0(Class<VR128X>))  [3.03;3.03]
		 Successful, latency: 3.03

-----VCVTUQQ2PDZ128rrkz-----
	VCVTUQQ2PDZ128rrkz(2(Class<VR128X>) -> 0(Class<VR128X>))  [3.06;3.06]
		 Successful, latency: 3.06

-----VCVTUQQ2PDZ256rr-----
	VCVTUQQ2PDZ256rr(1(Class<VR256X>) -> 0(Class<VR256X>))  [3.02;3.02]
		 Successful, latency: 3.02

-----VCVTUQQ2PDZ256rrb-----
	VCVTUQQ2PDZ256rrb(1(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VCVTUQQ2PDZ256rrbk-----
	VCVTUQQ2PDZ256rrbk(1(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VCVTUQQ2PDZ256rrbk(3(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VCVTUQQ2PDZ256rrbkz-----
	VCVTUQQ2PDZ256rrbkz(2(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VCVTUQQ2PDZ256rrk-----
	VCVTUQQ2PDZ256rrk(1(Class<VR256X>) -> 0(Class<VR256X>))  [3.02;3.02]
		 Successful, latency: 3.02
	VCVTUQQ2PDZ256rrk(3(Class<VR256X>) -> 0(Class<VR256X>))  [3.03;3.03]
		 Successful, latency: 3.03

-----VCVTUQQ2PDZ256rrkz-----
	VCVTUQQ2PDZ256rrkz(2(Class<VR256X>) -> 0(Class<VR256X>))  [3.01;3.01]
		 Successful, latency: 3.01

-----VCVTUQQ2PDZrr-----
	VCVTUQQ2PDZrr(1(Class<VR512>) -> 0(Class<VR512>))  [3.03;3.03]
		 Successful, latency: 3.03

-----VCVTUQQ2PDZrrb-----
	VCVTUQQ2PDZrrb(1(Class<VR512>) -> 0(Class<VR512>))  [3.06;3.06]
		 Successful, latency: 3.06

-----VCVTUQQ2PDZrrbk-----
	VCVTUQQ2PDZrrbk(1(Class<VR512>) -> 0(Class<VR512>))  [3.04;3.04]
		 Successful, latency: 3.04
	VCVTUQQ2PDZrrbk(3(Class<VR512>) -> 0(Class<VR512>))  [3.04;3.04]
		 Successful, latency: 3.04

-----VCVTUQQ2PDZrrbkz-----
	VCVTUQQ2PDZrrbkz(2(Class<VR512>) -> 0(Class<VR512>))  [3.02;3.02]
		 Successful, latency: 3.02

-----VCVTUQQ2PDZrrk-----
	VCVTUQQ2PDZrrk(1(Class<VR512>) -> 0(Class<VR512>))  [3.05;3.05]
		 Successful, latency: 3.05
	VCVTUQQ2PDZrrk(3(Class<VR512>) -> 0(Class<VR512>))  [3.02;3.02]
		 Successful, latency: 3.02

-----VCVTUQQ2PDZrrkz-----
	VCVTUQQ2PDZrrkz(2(Class<VR512>) -> 0(Class<VR512>))  [3.01;3.01]
		 Successful, latency: 3.01

-----VCVTUQQ2PHZ128rr-----
	VCVTUQQ2PHZ128rr(1(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VCVTUQQ2PHZ128rrk-----
	VCVTUQQ2PHZ128rrk(1(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VCVTUQQ2PHZ128rrk(3(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VCVTUQQ2PHZ128rrkz-----
	VCVTUQQ2PHZ128rrkz(2(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VCVTUQQ2PHZ256rrbk-----
	VCVTUQQ2PHZ256rrbk(1(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VCVTUQQ2PHZ256rrk-----
	VCVTUQQ2PHZ256rrk(1(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VCVTUQQ2PHZrr-----
	0x138383bebf20
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VCVTUQQ2PHZrrb-----
	0x138383bebf90
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VCVTUQQ2PHZrrbk-----
	VCVTUQQ2PHZrrbk(1(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VCVTUQQ2PHZrrbkz-----
	0x138383bec118
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VCVTUQQ2PHZrrk-----
	VCVTUQQ2PHZrrk(1(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VCVTUQQ2PHZrrkz-----
	0x138383bec2a0
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VCVTUQQ2PSZ128rr-----
	VCVTUQQ2PSZ128rr(1(Class<VR128X>) -> 0(Class<VR128X>))  [3.03;3.03]
		 Successful, latency: 3.03

-----VCVTUQQ2PSZ128rrk-----
	VCVTUQQ2PSZ128rrk(1(Class<VR128X>) -> 0(Class<VR128X>))  [3.04;3.04]
		 Successful, latency: 3.04
	VCVTUQQ2PSZ128rrk(3(Class<VR128X>) -> 0(Class<VR128X>))  [3.05;3.05]
		 Successful, latency: 3.05

-----VCVTUQQ2PSZ128rrkz-----
	VCVTUQQ2PSZ128rrkz(2(Class<VR128X>) -> 0(Class<VR128X>))  [3.03;3.03]
		 Successful, latency: 3.03

-----VCVTUQQ2PSZ256rr-----
	VCVTUQQ2PSZ256rr(1(Class<VR256X>) -> 0(Class<VR128X>))  [4.05;6.07]
		Dependencies:
			VEXTRACTI32X4Z256rrik(3(Class<VR256X>) -> 0(Class<VR128X>)) 
			VBROADCASTF32X2Z256rr(1(Class<VR128X>) -> 0(Class<VR256X>)) 
		Combined result: 7.07 cycles

-----VCVTUQQ2PSZ256rrbk-----
	VCVTUQQ2PSZ256rrbk(1(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VCVTUQQ2PSZ256rrk-----
	VCVTUQQ2PSZ256rrk(1(Class<VR128X>) -> 0(Class<VR128X>))  [3.04;3.04]
		 Successful, latency: 3.04
	VCVTUQQ2PSZ256rrk(3(Class<VR256X>) -> 0(Class<VR128X>))  [4.03;6.05]
		Dependencies:
			VEXTRACTI32X4Z256rrik(3(Class<VR256X>) -> 0(Class<VR128X>)) 
			VBROADCASTF32X2Z256rr(1(Class<VR128X>) -> 0(Class<VR256X>)) 
		Combined result: 7.05 cycles

-----VCVTUQQ2PSZ256rrkz-----
	VCVTUQQ2PSZ256rrkz(2(Class<VR256X>) -> 0(Class<VR128X>))  [4.04;6.06]
		Dependencies:
			VEXTRACTI32X4Z256rrik(3(Class<VR256X>) -> 0(Class<VR128X>)) 
			VBROADCASTF32X2Z256rr(1(Class<VR128X>) -> 0(Class<VR256X>)) 
		Combined result: 7.06 cycles

-----VCVTUQQ2PSZrr-----
	VCVTUQQ2PSZrr(1(Class<VR512>) -> 0(Class<VR256X>))  [4.37;7.39]
		Dependencies:
			VPMOVDWZrr(1(Class<VR512>) -> 0(Class<VR256X>)) 
			VINSERTF64X4Zrri(2(Class<VR256X>) -> 0(Class<VR512>)) 
		Combined result: 8.39 cycles

-----VCVTUQQ2PSZrrb-----
	VCVTUQQ2PSZrrb(1(Class<VR512>) -> 0(Class<VR256X>))  [4.38;7.4]
		Dependencies:
			VPMOVDWZrr(1(Class<VR512>) -> 0(Class<VR256X>)) 
			VINSERTF64X4Zrri(2(Class<VR256X>) -> 0(Class<VR512>)) 
		Combined result: 8.4 cycles

-----VCVTUQQ2PSZrrbk-----
	VCVTUQQ2PSZrrbk(1(Class<VR256X>) -> 0(Class<VR256X>))  [4.05;4.05]
		 Successful, latency: 4.05
	VCVTUQQ2PSZrrbk(3(Class<VR512>) -> 0(Class<VR256X>))  [4.37;7.39]
		Dependencies:
			VPMOVDWZrr(1(Class<VR512>) -> 0(Class<VR256X>)) 
			VINSERTF64X4Zrri(2(Class<VR256X>) -> 0(Class<VR512>)) 
		Combined result: 8.39 cycles

-----VCVTUQQ2PSZrrbkz-----
	VCVTUQQ2PSZrrbkz(2(Class<VR512>) -> 0(Class<VR256X>))  [4.39;7.41]
		Dependencies:
			VPMOVDWZrr(1(Class<VR512>) -> 0(Class<VR256X>)) 
			VINSERTF64X4Zrri(2(Class<VR256X>) -> 0(Class<VR512>)) 
		Combined result: 8.41 cycles

-----VCVTUQQ2PSZrrk-----
	VCVTUQQ2PSZrrk(1(Class<VR256X>) -> 0(Class<VR256X>))  [4.04;4.04]
		 Successful, latency: 4.04
	VCVTUQQ2PSZrrk(3(Class<VR512>) -> 0(Class<VR256X>))  [4.38;7.4]
		Dependencies:
			VPMOVDWZrr(1(Class<VR512>) -> 0(Class<VR256X>)) 
			VINSERTF64X4Zrri(2(Class<VR256X>) -> 0(Class<VR512>)) 
		Combined result: 8.4 cycles

-----VCVTUQQ2PSZrrkz-----
	VCVTUQQ2PSZrrkz(2(Class<VR512>) -> 0(Class<VR256X>))  [4.38;7.4]
		Dependencies:
			VPMOVDWZrr(1(Class<VR512>) -> 0(Class<VR256X>)) 
			VINSERTF64X4Zrri(2(Class<VR256X>) -> 0(Class<VR512>)) 
		Combined result: 8.4 cycles

-----VCVTUSI2SDZrr-----
	VCVTUSI2SDZrr(1(Class<FR64X>) -> 0(Class<FR64X>))  [3.03;3.03]
		 Successful, latency: 3.03
	VCVTUSI2SDZrr(2(Class<GR32>) -> 0(Class<FR64X>))  [1.03;11.1]
		Dependencies:
			VCVTTSD2USIZrr(1(Class<FR64X>) -> 0(Class<GR32>)) 
			VCVTSI2SDZrr(2(Class<GR32>) -> 0(Class<FR64X>)) 
		Combined result: 12.1 cycles

-----VCVTUSI2SDZrr_Int-----
	VCVTUSI2SDZrr_Int(1(Class<VR128X>) -> 0(Class<VR128X>))  [3.04;3.04]
		 Successful, latency: 3.04
	VCVTUSI2SDZrr_Int(2(Class<GR32>) -> 0(Class<VR128X>))  [4.02;8.07]
		Dependencies:
			VMOVPDI2DIZrr(1(Class<VR128X>) -> 0(Class<GR32>)) 
			VMOVDI2PDIZrr(1(Class<GR32>) -> 0(Class<VR128X>)) 
		Combined result: 9.07 cycles

-----VCVTUSI2SHZrr-----
	VCVTUSI2SHZrr(1(Class<FR16X>) -> 0(Class<FR16X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VCVTUSI2SHZrr_Int-----
	VCVTUSI2SHZrr_Int(1(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VCVTUSI2SHZrrb_Int-----
	VCVTUSI2SHZrrb_Int(1(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VCVTUSI2SSZrr-----
	VCVTUSI2SSZrr(1(Class<FR32X>) -> 0(Class<FR32X>))  [3.03;3.03]
		 Successful, latency: 3.03
	VCVTUSI2SSZrr(2(Class<GR32>) -> 0(Class<FR32X>))  [4.03;8.07]
		Dependencies:
			VMOVDI2SSZrr(1(Class<GR32>) -> 0(Class<FR32X>)) 
			VMOVSS2DIZrr(1(Class<FR32X>) -> 0(Class<GR32>)) 
		Combined result: 9.07 cycles

-----VCVTUSI2SSZrr_Int-----
	VCVTUSI2SSZrr_Int(1(Class<VR128X>) -> 0(Class<VR128X>))  [3.04;3.04]
		 Successful, latency: 3.04
	VCVTUSI2SSZrr_Int(2(Class<GR32>) -> 0(Class<VR128X>))  [4.02;8.07]
		Dependencies:
			VMOVPDI2DIZrr(1(Class<VR128X>) -> 0(Class<GR32>)) 
			VMOVDI2PDIZrr(1(Class<GR32>) -> 0(Class<VR128X>)) 
		Combined result: 9.07 cycles

-----VCVTUSI2SSZrrb_Int-----
	VCVTUSI2SSZrrb_Int(1(Class<VR128X>) -> 0(Class<VR128X>))  [3.04;3.04]
		 Successful, latency: 3.04
	VCVTUSI2SSZrrb_Int(2(Class<GR32>) -> 0(Class<VR128X>))  [4.01;8.06]
		Dependencies:
			VMOVPDI2DIZrr(1(Class<VR128X>) -> 0(Class<GR32>)) 
			VMOVDI2PDIZrr(1(Class<GR32>) -> 0(Class<VR128X>)) 
		Combined result: 9.06 cycles

-----VCVTUSI642SDZrr-----
	VCVTUSI642SDZrr(1(Class<FR64X>) -> 0(Class<FR64X>))  [3.05;3.05]
		 Successful, latency: 3.05
	VCVTUSI642SDZrr(2(Class<GR64>) -> 0(Class<FR64X>))  [4.01;8.07]
		Dependencies:
			VMOVSDto64Zrr(1(Class<FR64X>) -> 0(Class<GR64>)) 
			VMOV64toSDZrr(1(Class<GR64>) -> 0(Class<FR64X>)) 
		Combined result: 9.06 cycles

-----VCVTUSI642SDZrr_Int-----
	VCVTUSI642SDZrr_Int(1(Class<VR128X>) -> 0(Class<VR128X>))  [3.06;3.06]
		 Successful, latency: 3.06
	VCVTUSI642SDZrr_Int(2(Class<GR64>) -> 0(Class<VR128X>))  [4.04;8.07]
		Dependencies:
			VMOVPQIto64Zrr(1(Class<VR128X>) -> 0(Class<GR64>)) 
			VMOV64toPQIZrr(1(Class<GR64>) -> 0(Class<VR128X>)) 
		Combined result: 9.08 cycles

-----VCVTUSI642SDZrrb_Int-----
	VCVTUSI642SDZrrb_Int(1(Class<VR128X>) -> 0(Class<VR128X>))  [3.04;3.04]
		 Successful, latency: 3.04
	VCVTUSI642SDZrrb_Int(2(Class<GR64>) -> 0(Class<VR128X>))  [4.03;8.06]
		Dependencies:
			VMOVPQIto64Zrr(1(Class<VR128X>) -> 0(Class<GR64>)) 
			VMOV64toPQIZrr(1(Class<GR64>) -> 0(Class<VR128X>)) 
		Combined result: 9.07 cycles

-----VCVTUSI642SHZrr-----
	VCVTUSI642SHZrr(1(Class<FR16X>) -> 0(Class<FR16X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VCVTUSI642SHZrr_Int-----
	VCVTUSI642SHZrr_Int(1(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VCVTUSI642SHZrrb_Int-----
	VCVTUSI642SHZrrb_Int(1(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VCVTUSI642SSZrr-----
	VCVTUSI642SSZrr(1(Class<FR32X>) -> 0(Class<FR32X>))  [3.02;3.02]
		 Successful, latency: 3.02
	VCVTUSI642SSZrr(2(Class<GR64>) -> 0(Class<FR32X>))  [0.981;11.1]
		Dependencies:
			VCVTUSI642SSZrr(2(Class<GR64>) -> 0(Class<FR32X>)) 
			VCVTSS2SI64Zrr(1(Class<FR32X>) -> 0(Class<GR64>)) 
		Combined result: 12.1 cycles

-----VCVTUSI642SSZrr_Int-----
	VCVTUSI642SSZrr_Int(1(Class<VR128X>) -> 0(Class<VR128X>))  [3.03;3.03]
		 Successful, latency: 3.03
	VCVTUSI642SSZrr_Int(2(Class<GR64>) -> 0(Class<VR128X>))  [4.03;8.06]
		Dependencies:
			VMOVPQIto64Zrr(1(Class<VR128X>) -> 0(Class<GR64>)) 
			VMOV64toPQIZrr(1(Class<GR64>) -> 0(Class<VR128X>)) 
		Combined result: 9.07 cycles

-----VCVTUSI642SSZrrb_Int-----
	VCVTUSI642SSZrrb_Int(1(Class<VR128X>) -> 0(Class<VR128X>))  [3.02;3.02]
		 Successful, latency: 3.02
	VCVTUSI642SSZrrb_Int(2(Class<GR64>) -> 0(Class<VR128X>))  [4.02;8.05]
		Dependencies:
			VMOVPQIto64Zrr(1(Class<VR128X>) -> 0(Class<GR64>)) 
			VMOV64toPQIZrr(1(Class<GR64>) -> 0(Class<VR128X>)) 
		Combined result: 9.06 cycles

-----VCVTUW2PHZ128rr-----
	VCVTUW2PHZ128rr(1(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VCVTUW2PHZ128rrk-----
	VCVTUW2PHZ128rrk(1(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VCVTUW2PHZ128rrk(3(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VCVTUW2PHZ128rrkz-----
	VCVTUW2PHZ128rrkz(2(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VCVTUW2PHZ256rr-----
	VCVTUW2PHZ256rr(1(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VCVTUW2PHZ256rrb-----
	VCVTUW2PHZ256rrb(1(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VCVTUW2PHZ256rrbk-----
	VCVTUW2PHZ256rrbk(1(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VCVTUW2PHZ256rrbk(3(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VCVTUW2PHZ256rrbkz-----
	VCVTUW2PHZ256rrbkz(2(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VCVTUW2PHZ256rrk-----
	VCVTUW2PHZ256rrk(1(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VCVTUW2PHZ256rrk(3(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VCVTUW2PHZ256rrkz-----
	VCVTUW2PHZ256rrkz(2(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VCVTUW2PHZrr-----
	VCVTUW2PHZrr(1(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VCVTUW2PHZrrb-----
	VCVTUW2PHZrrb(1(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VCVTUW2PHZrrbk-----
	VCVTUW2PHZrrbk(1(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VCVTUW2PHZrrbk(3(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VCVTUW2PHZrrbkz-----
	VCVTUW2PHZrrbkz(2(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VCVTUW2PHZrrk-----
	VCVTUW2PHZrrk(1(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VCVTUW2PHZrrk(3(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VCVTUW2PHZrrkz-----
	VCVTUW2PHZrrkz(2(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VCVTW2PHZ128rr-----
	VCVTW2PHZ128rr(1(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VCVTW2PHZ128rrk-----
	VCVTW2PHZ128rrk(1(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VCVTW2PHZ128rrk(3(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VCVTW2PHZ128rrkz-----
	VCVTW2PHZ128rrkz(2(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VCVTW2PHZ256rr-----
	VCVTW2PHZ256rr(1(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VCVTW2PHZ256rrb-----
	VCVTW2PHZ256rrb(1(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VCVTW2PHZ256rrbk-----
	VCVTW2PHZ256rrbk(1(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VCVTW2PHZ256rrbk(3(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VCVTW2PHZ256rrbkz-----
	VCVTW2PHZ256rrbkz(2(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VCVTW2PHZ256rrk-----
	VCVTW2PHZ256rrk(1(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VCVTW2PHZ256rrk(3(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VCVTW2PHZ256rrkz-----
	VCVTW2PHZ256rrkz(2(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VCVTW2PHZrr-----
	VCVTW2PHZrr(1(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VCVTW2PHZrrb-----
	VCVTW2PHZrrb(1(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VCVTW2PHZrrbk-----
	VCVTW2PHZrrbk(1(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VCVTW2PHZrrbk(3(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VCVTW2PHZrrbkz-----
	VCVTW2PHZrrbkz(2(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VCVTW2PHZrrk-----
	VCVTW2PHZrrk(1(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VCVTW2PHZrrk(3(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VCVTW2PHZrrkz-----
	VCVTW2PHZrrkz(2(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VDBPSADBWZ128rri-----
	VDBPSADBWZ128rri(1(Class<VR128X>) -> 0(Class<VR128X>))  [3.02;3.02]
		 Successful, latency: 3.02
	VDBPSADBWZ128rri(2(Class<VR128X>) -> 0(Class<VR128X>))  [4.07;4.07]
		 Successful, latency: 4.07

-----VDBPSADBWZ128rrik-----
	VDBPSADBWZ128rrik(1(Class<VR128X>) -> 0(Class<VR128X>))  [3.04;3.04]
		 Successful, latency: 3.04
	VDBPSADBWZ128rrik(3(Class<VR128X>) -> 0(Class<VR128X>))  [3.03;3.03]
		 Successful, latency: 3.03
	VDBPSADBWZ128rrik(4(Class<VR128X>) -> 0(Class<VR128X>))  [4.06;4.06]
		 Successful, latency: 4.06

-----VDBPSADBWZ128rrikz-----
	VDBPSADBWZ128rrikz(2(Class<VR128X>) -> 0(Class<VR128X>))  [3.02;3.02]
		 Successful, latency: 3.02
	VDBPSADBWZ128rrikz(3(Class<VR128X>) -> 0(Class<VR128X>))  [4.03;4.03]
		 Successful, latency: 4.03

-----VDBPSADBWZ256rri-----
	VDBPSADBWZ256rri(1(Class<VR256X>) -> 0(Class<VR256X>))  [3.05;3.05]
		 Successful, latency: 3.05
	VDBPSADBWZ256rri(2(Class<VR256X>) -> 0(Class<VR256X>))  [4.04;4.04]
		 Successful, latency: 4.04

-----VDBPSADBWZ256rrik-----
	VDBPSADBWZ256rrik(1(Class<VR256X>) -> 0(Class<VR256X>))  [3.06;3.06]
		 Successful, latency: 3.06
	VDBPSADBWZ256rrik(3(Class<VR256X>) -> 0(Class<VR256X>))  [3.03;3.03]
		 Successful, latency: 3.03
	VDBPSADBWZ256rrik(4(Class<VR256X>) -> 0(Class<VR256X>))  [4.11;4.11]
		 Successful, latency: 4.11

-----VDBPSADBWZ256rrikz-----
	VDBPSADBWZ256rrikz(2(Class<VR256X>) -> 0(Class<VR256X>))  [3.03;3.03]
		 Successful, latency: 3.03
	VDBPSADBWZ256rrikz(3(Class<VR256X>) -> 0(Class<VR256X>))  [4.04;4.04]
		 Successful, latency: 4.04

-----VDBPSADBWZrri-----
	VDBPSADBWZrri(1(Class<VR512>) -> 0(Class<VR512>))  [3.05;3.05]
		 Successful, latency: 3.05
	VDBPSADBWZrri(2(Class<VR512>) -> 0(Class<VR512>))  [4.16;4.16]
		 Successful, latency: 4.16

-----VDBPSADBWZrrik-----
	VDBPSADBWZrrik(1(Class<VR512>) -> 0(Class<VR512>))  [3.04;3.04]
		 Successful, latency: 3.04
	VDBPSADBWZrrik(3(Class<VR512>) -> 0(Class<VR512>))  [3.04;3.04]
		 Successful, latency: 3.04
	VDBPSADBWZrrik(4(Class<VR512>) -> 0(Class<VR512>))  [4.14;4.14]
		 Successful, latency: 4.14

-----VDBPSADBWZrrikz-----
	VDBPSADBWZrrikz(2(Class<VR512>) -> 0(Class<VR512>))  [3.07;3.07]
		 Successful, latency: 3.07
	VDBPSADBWZrrikz(3(Class<VR512>) -> 0(Class<VR512>))  [4.08;4.08]
		 Successful, latency: 4.08

-----VDIVBF16Z128rr-----
	VDIVBF16Z128rr(1(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VDIVBF16Z128rr(2(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VDIVBF16Z128rrk-----
	VDIVBF16Z128rrk(1(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VDIVBF16Z128rrk(3(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VDIVBF16Z128rrk(4(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VDIVBF16Z128rrkz-----
	VDIVBF16Z128rrkz(2(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VDIVBF16Z128rrkz(3(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VDIVBF16Z256rr-----
	VDIVBF16Z256rr(1(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VDIVBF16Z256rr(2(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VDIVBF16Z256rrk-----
	VDIVBF16Z256rrk(1(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VDIVBF16Z256rrk(3(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VDIVBF16Z256rrk(4(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VDIVBF16Z256rrkz-----
	VDIVBF16Z256rrkz(2(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VDIVBF16Z256rrkz(3(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VDIVBF16Zrr-----
	VDIVBF16Zrr(1(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VDIVBF16Zrr(2(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VDIVBF16Zrrk-----
	VDIVBF16Zrrk(1(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VDIVBF16Zrrk(3(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VDIVBF16Zrrk(4(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VDIVBF16Zrrkz-----
	VDIVBF16Zrrkz(2(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VDIVBF16Zrrkz(3(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VDIVPDYrr-----
	VDIVPDYrr(1(Class<VR256>) -> 0(Class<VR256>))  [17.9;17.9]
		 Successful, latency: 17.9
	VDIVPDYrr(2(Class<VR256>) -> 0(Class<VR256>))  [17.8;17.8]
		 Successful, latency: 17.8

-----VDIVPDZ128rr-----
	VDIVPDZ128rr(1(Class<VR128X>) -> 0(Class<VR128X>))  [17.8;17.8]
		 Successful, latency: 17.8
	VDIVPDZ128rr(2(Class<VR128X>) -> 0(Class<VR128X>))  [17.9;17.9]
		 Successful, latency: 17.9

-----VDIVPDZ128rrk-----
	VDIVPDZ128rrk(1(Class<VR128X>) -> 0(Class<VR128X>))  [17.9;17.9]
		 Successful, latency: 17.9
	VDIVPDZ128rrk(3(Class<VR128X>) -> 0(Class<VR128X>))  [17.8;17.8]
		 Successful, latency: 17.8
	VDIVPDZ128rrk(4(Class<VR128X>) -> 0(Class<VR128X>))  [17.9;17.9]
		 Successful, latency: 17.9

-----VDIVPDZ128rrkz-----
	VDIVPDZ128rrkz(2(Class<VR128X>) -> 0(Class<VR128X>))  [13.1;13.1]
		 Successful, latency: 13.1
	VDIVPDZ128rrkz(3(Class<VR128X>) -> 0(Class<VR128X>))  [13.1;13.1]
		 Successful, latency: 13.1

-----VDIVPDZ256rr-----
	VDIVPDZ256rr(1(Class<VR256X>) -> 0(Class<VR256X>))  [17.9;17.9]
		 Successful, latency: 17.9
	VDIVPDZ256rr(2(Class<VR256X>) -> 0(Class<VR256X>))  [17.9;17.9]
		 Successful, latency: 17.9

-----VDIVPDZ256rrb-----
	VDIVPDZ256rrb(1(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VDIVPDZ256rrb(2(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VDIVPDZ256rrbk-----
	VDIVPDZ256rrbk(1(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VDIVPDZ256rrbk(3(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VDIVPDZ256rrbk(4(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VDIVPDZ256rrbkz-----
	VDIVPDZ256rrbkz(2(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VDIVPDZ256rrbkz(3(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VDIVPDZ256rrk-----
	VDIVPDZ256rrk(1(Class<VR256X>) -> 0(Class<VR256X>))  [17.8;17.8]
		 Successful, latency: 17.8
	VDIVPDZ256rrk(3(Class<VR256X>) -> 0(Class<VR256X>))  [17.8;17.8]
		 Successful, latency: 17.8
	VDIVPDZ256rrk(4(Class<VR256X>) -> 0(Class<VR256X>))  [17.8;17.8]
		 Successful, latency: 17.8

-----VDIVPDZ256rrkz-----
	VDIVPDZ256rrkz(2(Class<VR256X>) -> 0(Class<VR256X>))  [13.1;13.1]
		 Successful, latency: 13.1
	VDIVPDZ256rrkz(3(Class<VR256X>) -> 0(Class<VR256X>))  [13.1;13.1]
		 Successful, latency: 13.1

-----VDIVPDZrr-----
	VDIVPDZrr(1(Class<VR512>) -> 0(Class<VR512>))  [17.9;17.9]
		 Successful, latency: 17.9
	VDIVPDZrr(2(Class<VR512>) -> 0(Class<VR512>))  [17.8;17.8]
		 Successful, latency: 17.8

-----VDIVPDZrrb-----
	VDIVPDZrrb(1(Class<VR512>) -> 0(Class<VR512>))  [17.9;17.9]
		 Successful, latency: 17.9
	VDIVPDZrrb(2(Class<VR512>) -> 0(Class<VR512>))  [17.8;17.8]
		 Successful, latency: 17.8

-----VDIVPDZrrbk-----
	VDIVPDZrrbk(1(Class<VR512>) -> 0(Class<VR512>))  [17.9;17.9]
		 Successful, latency: 17.9
	VDIVPDZrrbk(3(Class<VR512>) -> 0(Class<VR512>))  [17.9;17.9]
		 Successful, latency: 17.9
	VDIVPDZrrbk(4(Class<VR512>) -> 0(Class<VR512>))  [17.9;17.9]
		 Successful, latency: 17.9

-----VDIVPDZrrbkz-----
	VDIVPDZrrbkz(2(Class<VR512>) -> 0(Class<VR512>))  [13.1;13.1]
		 Successful, latency: 13.1
	VDIVPDZrrbkz(3(Class<VR512>) -> 0(Class<VR512>))  [13.1;13.1]
		 Successful, latency: 13.1

-----VDIVPDZrrk-----
	VDIVPDZrrk(1(Class<VR512>) -> 0(Class<VR512>))  [17.9;17.9]
		 Successful, latency: 17.9
	VDIVPDZrrk(3(Class<VR512>) -> 0(Class<VR512>))  [17.8;17.8]
		 Successful, latency: 17.8
	VDIVPDZrrk(4(Class<VR512>) -> 0(Class<VR512>))  [17.9;17.9]
		 Successful, latency: 17.9

-----VDIVPDZrrkz-----
	VDIVPDZrrkz(2(Class<VR512>) -> 0(Class<VR512>))  [13.1;13.1]
		 Successful, latency: 13.1
	VDIVPDZrrkz(3(Class<VR512>) -> 0(Class<VR512>))  [13.1;13.1]
		 Successful, latency: 13.1

-----VDIVPDrr-----
	VDIVPDrr(1(Class<VR128>) -> 0(Class<VR128>))  [17.8;17.8]
		 Successful, latency: 17.8
	VDIVPDrr(2(Class<VR128>) -> 0(Class<VR128>))  [17.9;17.9]
		 Successful, latency: 17.9

-----VDIVPHZ128rr-----
	VDIVPHZ128rr(1(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VDIVPHZ128rr(2(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VDIVPHZ128rrk-----
	VDIVPHZ128rrk(1(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VDIVPHZ128rrk(3(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VDIVPHZ128rrk(4(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VDIVPHZ128rrkz-----
	VDIVPHZ128rrkz(2(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VDIVPHZ128rrkz(3(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VDIVPHZ256rr-----
	VDIVPHZ256rr(1(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VDIVPHZ256rr(2(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VDIVPHZ256rrb-----
	VDIVPHZ256rrb(1(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VDIVPHZ256rrb(2(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VDIVPHZ256rrbk-----
	VDIVPHZ256rrbk(1(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VDIVPHZ256rrbk(3(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VDIVPHZ256rrbk(4(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VDIVPHZ256rrbkz-----
	VDIVPHZ256rrbkz(2(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VDIVPHZ256rrbkz(3(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VDIVPHZ256rrk-----
	VDIVPHZ256rrk(1(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VDIVPHZ256rrk(3(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VDIVPHZ256rrk(4(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VDIVPHZ256rrkz-----
	VDIVPHZ256rrkz(2(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VDIVPHZ256rrkz(3(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VDIVPHZrr-----
	VDIVPHZrr(1(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VDIVPHZrr(2(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VDIVPHZrrb-----
	VDIVPHZrrb(1(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VDIVPHZrrb(2(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VDIVPHZrrbk-----
	VDIVPHZrrbk(1(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VDIVPHZrrbk(3(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VDIVPHZrrbk(4(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VDIVPHZrrbkz-----
	VDIVPHZrrbkz(2(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VDIVPHZrrbkz(3(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VDIVPHZrrk-----
	VDIVPHZrrk(1(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VDIVPHZrrk(3(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VDIVPHZrrk(4(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VDIVPHZrrkz-----
	VDIVPHZrrkz(2(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VDIVPHZrrkz(3(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VDIVPSYrr-----
	VDIVPSYrr(1(Class<VR256>) -> 0(Class<VR256>))  [6.53;6.53]
		 Successful, latency: 6.53
	VDIVPSYrr(2(Class<VR256>) -> 0(Class<VR256>))  [6.54;6.54]
		 Successful, latency: 6.54

-----VDIVPSZ128rr-----
	VDIVPSZ128rr(1(Class<VR128X>) -> 0(Class<VR128X>))  [15.7;15.7]
		 Successful, latency: 15.7
	VDIVPSZ128rr(2(Class<VR128X>) -> 0(Class<VR128X>))  [15.7;15.7]
		 Successful, latency: 15.7

-----VDIVPSZ128rrk-----
	VDIVPSZ128rrk(1(Class<VR128X>) -> 0(Class<VR128X>))  [15.7;15.7]
		 Successful, latency: 15.7
	VDIVPSZ128rrk(3(Class<VR128X>) -> 0(Class<VR128X>))  [15.7;15.7]
		 Successful, latency: 15.7
	VDIVPSZ128rrk(4(Class<VR128X>) -> 0(Class<VR128X>))  [15.7;15.7]
		 Successful, latency: 15.7

-----VDIVPSZ128rrkz-----
	VDIVPSZ128rrkz(2(Class<VR128X>) -> 0(Class<VR128X>))  [11.1;11.1]
		 Successful, latency: 11.1
	VDIVPSZ128rrkz(3(Class<VR128X>) -> 0(Class<VR128X>))  [11.1;11.1]
		 Successful, latency: 11.1

-----VDIVPSZ256rr-----
	VDIVPSZ256rr(1(Class<VR256X>) -> 0(Class<VR256X>))  [6.56;6.56]
		 Successful, latency: 6.56
	VDIVPSZ256rr(2(Class<VR256X>) -> 0(Class<VR256X>))  [6.54;6.54]
		 Successful, latency: 6.54

-----VDIVPSZ256rrb-----
	VDIVPSZ256rrb(1(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VDIVPSZ256rrb(2(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VDIVPSZ256rrbk-----
	VDIVPSZ256rrbk(1(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VDIVPSZ256rrbk(3(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VDIVPSZ256rrbk(4(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VDIVPSZ256rrbkz-----
	VDIVPSZ256rrbkz(2(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VDIVPSZ256rrbkz(3(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VDIVPSZ256rrk-----
	VDIVPSZ256rrk(1(Class<VR256X>) -> 0(Class<VR256X>))  [6.46;6.46]
		 Successful, latency: 6.46
	VDIVPSZ256rrk(3(Class<VR256X>) -> 0(Class<VR256X>))  [6.48;6.48]
		 Successful, latency: 6.48
	VDIVPSZ256rrk(4(Class<VR256X>) -> 0(Class<VR256X>))  [6.47;6.47]
		 Successful, latency: 6.47

-----VDIVPSZ256rrkz-----
	VDIVPSZ256rrkz(2(Class<VR256X>) -> 0(Class<VR256X>))  [11.1;11.1]
		 Successful, latency: 11.1
	VDIVPSZ256rrkz(3(Class<VR256X>) -> 0(Class<VR256X>))  [11.1;11.1]
		 Successful, latency: 11.1

-----VDIVPSZrr-----
	VDIVPSZrr(1(Class<VR512>) -> 0(Class<VR512>))  [6.5;6.5]
		 Successful, latency: 6.5
	VDIVPSZrr(2(Class<VR512>) -> 0(Class<VR512>))  [6.45;6.45]
		 Successful, latency: 6.45

-----VDIVPSZrrb-----
	VDIVPSZrrb(1(Class<VR512>) -> 0(Class<VR512>))  [6.47;6.47]
		 Successful, latency: 6.47
	VDIVPSZrrb(2(Class<VR512>) -> 0(Class<VR512>))  [6.49;6.49]
		 Successful, latency: 6.49

-----VDIVPSZrrbk-----
	VDIVPSZrrbk(1(Class<VR512>) -> 0(Class<VR512>))  [6.48;6.48]
		 Successful, latency: 6.48
	VDIVPSZrrbk(3(Class<VR512>) -> 0(Class<VR512>))  [6.46;6.46]
		 Successful, latency: 6.46
	VDIVPSZrrbk(4(Class<VR512>) -> 0(Class<VR512>))  [6.45;6.45]
		 Successful, latency: 6.45

-----VDIVPSZrrbkz-----
	VDIVPSZrrbkz(2(Class<VR512>) -> 0(Class<VR512>))  [11.1;11.1]
		 Successful, latency: 11.1
	VDIVPSZrrbkz(3(Class<VR512>) -> 0(Class<VR512>))  [11.1;11.1]
		 Successful, latency: 11.1

-----VDIVPSZrrk-----
	VDIVPSZrrk(1(Class<VR512>) -> 0(Class<VR512>))  [6.47;6.47]
		 Successful, latency: 6.47
	VDIVPSZrrk(3(Class<VR512>) -> 0(Class<VR512>))  [6.48;6.48]
		 Successful, latency: 6.48
	VDIVPSZrrk(4(Class<VR512>) -> 0(Class<VR512>))  [6.45;6.45]
		 Successful, latency: 6.45

-----VDIVPSZrrkz-----
	VDIVPSZrrkz(2(Class<VR512>) -> 0(Class<VR512>))  [11.1;11.1]
		 Successful, latency: 11.1
	VDIVPSZrrkz(3(Class<VR512>) -> 0(Class<VR512>))  [11.1;11.1]
		 Successful, latency: 11.1

-----VDIVPSrr-----
	VDIVPSrr(1(Class<VR128>) -> 0(Class<VR128>))  [15.7;15.7]
		 Successful, latency: 15.7
	VDIVPSrr(2(Class<VR128>) -> 0(Class<VR128>))  [15.7;15.7]
		 Successful, latency: 15.7

-----VDIVSDZrr-----
	VDIVSDZrr(1(Class<FR64X>) -> 0(Class<FR64X>))  [17.8;17.8]
		 Successful, latency: 17.8
	VDIVSDZrr(2(Class<FR64X>) -> 0(Class<FR64X>))  [17.9;17.9]
		 Successful, latency: 17.9

-----VDIVSDZrr_Int-----
	VDIVSDZrr_Int(1(Class<VR128X>) -> 0(Class<VR128X>))  [17.8;17.8]
		 Successful, latency: 17.8
	VDIVSDZrr_Int(2(Class<VR128X>) -> 0(Class<VR128X>))  [17.8;17.8]
		 Successful, latency: 17.8

-----VDIVSDZrrb_Int-----
	VDIVSDZrrb_Int(1(Class<VR128X>) -> 0(Class<VR128X>))  [17.9;17.9]
		 Successful, latency: 17.9
	VDIVSDZrrb_Int(2(Class<VR128X>) -> 0(Class<VR128X>))  [17.9;17.9]
		 Successful, latency: 17.9

-----VDIVSDZrrbk_Int-----
	VDIVSDZrrbk_Int(1(Class<VR128X>) -> 0(Class<VR128X>))  [18;18]
		 Successful, latency: 18
	VDIVSDZrrbk_Int(3(Class<VR128X>) -> 0(Class<VR128X>))  [17.8;17.8]
		 Successful, latency: 17.8
	VDIVSDZrrbk_Int(4(Class<VR128X>) -> 0(Class<VR128X>))  [17.9;17.9]
		 Successful, latency: 17.9

-----VDIVSDZrrbkz_Int-----
	VDIVSDZrrbkz_Int(2(Class<VR128X>) -> 0(Class<VR128X>))  [13.1;13.1]
		 Successful, latency: 13.1
	VDIVSDZrrbkz_Int(3(Class<VR128X>) -> 0(Class<VR128X>))  [13.1;13.1]
		 Successful, latency: 13.1

-----VDIVSDZrrk_Int-----
	VDIVSDZrrk_Int(1(Class<VR128X>) -> 0(Class<VR128X>))  [17.8;17.8]
		 Successful, latency: 17.8
	VDIVSDZrrk_Int(3(Class<VR128X>) -> 0(Class<VR128X>))  [17.9;17.9]
		 Successful, latency: 17.9
	VDIVSDZrrk_Int(4(Class<VR128X>) -> 0(Class<VR128X>))  [17.8;17.8]
		 Successful, latency: 17.8

-----VDIVSDZrrkz_Int-----
	VDIVSDZrrkz_Int(2(Class<VR128X>) -> 0(Class<VR128X>))  [13.1;13.1]
		 Successful, latency: 13.1
	VDIVSDZrrkz_Int(3(Class<VR128X>) -> 0(Class<VR128X>))  [13.1;13.1]
		 Successful, latency: 13.1

-----VDIVSDrr-----
	VDIVSDrr(1(Class<FR64>) -> 0(Class<FR64>))  [17.9;17.9]
		 Successful, latency: 17.9
	VDIVSDrr(2(Class<FR64>) -> 0(Class<FR64>))  [17.8;17.8]
		 Successful, latency: 17.8

-----VDIVSDrr_Int-----
	VDIVSDrr_Int(1(Class<VR128>) -> 0(Class<VR128>))  [17.9;17.9]
		 Successful, latency: 17.9
	VDIVSDrr_Int(2(Class<VR128>) -> 0(Class<VR128>))  [17.9;17.9]
		 Successful, latency: 17.9

-----VDIVSHZrr-----
	VDIVSHZrr(1(Class<FR16X>) -> 0(Class<FR16X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VDIVSHZrr(2(Class<FR16X>) -> 0(Class<FR16X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VDIVSHZrr_Int-----
	VDIVSHZrr_Int(1(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VDIVSHZrr_Int(2(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VDIVSHZrrb_Int-----
	VDIVSHZrrb_Int(1(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VDIVSHZrrb_Int(2(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VDIVSHZrrbk_Int-----
	VDIVSHZrrbk_Int(1(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VDIVSHZrrbk_Int(3(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VDIVSHZrrbk_Int(4(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VDIVSHZrrbkz_Int-----
	VDIVSHZrrbkz_Int(2(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VDIVSHZrrbkz_Int(3(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VDIVSHZrrk_Int-----
	VDIVSHZrrk_Int(1(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VDIVSHZrrk_Int(3(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VDIVSHZrrk_Int(4(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VDIVSHZrrkz_Int-----
	VDIVSHZrrkz_Int(2(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VDIVSHZrrkz_Int(3(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VDIVSSZrr-----
	VDIVSSZrr(1(Class<FR32X>) -> 0(Class<FR32X>))  [15.7;15.7]
		 Successful, latency: 15.7
	VDIVSSZrr(2(Class<FR32X>) -> 0(Class<FR32X>))  [15.7;15.7]
		 Successful, latency: 15.7

-----VDIVSSZrr_Int-----
	VDIVSSZrr_Int(1(Class<VR128X>) -> 0(Class<VR128X>))  [15.7;15.7]
		 Successful, latency: 15.7
	VDIVSSZrr_Int(2(Class<VR128X>) -> 0(Class<VR128X>))  [15.7;15.7]
		 Successful, latency: 15.7

-----VDIVSSZrrb_Int-----
	VDIVSSZrrb_Int(1(Class<VR128X>) -> 0(Class<VR128X>))  [15.8;15.8]
		 Successful, latency: 15.8
	VDIVSSZrrb_Int(2(Class<VR128X>) -> 0(Class<VR128X>))  [15.7;15.7]
		 Successful, latency: 15.7

-----VDIVSSZrrbk_Int-----
	VDIVSSZrrbk_Int(1(Class<VR128X>) -> 0(Class<VR128X>))  [15.7;15.7]
		 Successful, latency: 15.7
	VDIVSSZrrbk_Int(3(Class<VR128X>) -> 0(Class<VR128X>))  [15.7;15.7]
		 Successful, latency: 15.7
	VDIVSSZrrbk_Int(4(Class<VR128X>) -> 0(Class<VR128X>))  [15.7;15.7]
		 Successful, latency: 15.7

-----VDIVSSZrrbkz_Int-----
	VDIVSSZrrbkz_Int(2(Class<VR128X>) -> 0(Class<VR128X>))  [15.7;15.7]
		 Successful, latency: 15.7
	VDIVSSZrrbkz_Int(3(Class<VR128X>) -> 0(Class<VR128X>))  [15.7;15.7]
		 Successful, latency: 15.7

-----VDIVSSZrrk_Int-----
	VDIVSSZrrk_Int(1(Class<VR128X>) -> 0(Class<VR128X>))  [15.7;15.7]
		 Successful, latency: 15.7
	VDIVSSZrrk_Int(3(Class<VR128X>) -> 0(Class<VR128X>))  [15.7;15.7]
		 Successful, latency: 15.7
	VDIVSSZrrk_Int(4(Class<VR128X>) -> 0(Class<VR128X>))  [15.7;15.7]
		 Successful, latency: 15.7

-----VDIVSSZrrkz_Int-----
	VDIVSSZrrkz_Int(2(Class<VR128X>) -> 0(Class<VR128X>))  [15.7;15.7]
		 Successful, latency: 15.7
	VDIVSSZrrkz_Int(3(Class<VR128X>) -> 0(Class<VR128X>))  [15.7;15.7]
		 Successful, latency: 15.7

-----VDIVSSrr-----
	VDIVSSrr(1(Class<FR32>) -> 0(Class<FR32>))  [15.7;15.7]
		 Successful, latency: 15.7
	VDIVSSrr(2(Class<FR32>) -> 0(Class<FR32>))  [15.7;15.7]
		 Successful, latency: 15.7

-----VDIVSSrr_Int-----
	VDIVSSrr_Int(1(Class<VR128>) -> 0(Class<VR128>))  [15.7;15.7]
		 Successful, latency: 15.7
	VDIVSSrr_Int(2(Class<VR128>) -> 0(Class<VR128>))  [15.7;15.7]
		 Successful, latency: 15.7

-----VDPBF16PSZ128r-----
	VDPBF16PSZ128r(1(Class<VR128X>) -> 0(Class<VR128X>))  [6.07;6.07]
		 Successful, latency: 6.07
	VDPBF16PSZ128r(2(Class<VR128X>) -> 0(Class<VR128X>))  [6.05;6.05]
		 Successful, latency: 6.05
	VDPBF16PSZ128r(3(Class<VR128X>) -> 0(Class<VR128X>))  [6.07;6.07]
		 Successful, latency: 6.07

-----VDPBF16PSZ128rk-----
	VDPBF16PSZ128rk(1(Class<VR128X>) -> 0(Class<VR128X>))  [6.04;6.04]
		 Successful, latency: 6.04
	VDPBF16PSZ128rk(3(Class<VR128X>) -> 0(Class<VR128X>))  [6.05;6.05]
		 Successful, latency: 6.05
	VDPBF16PSZ128rk(4(Class<VR128X>) -> 0(Class<VR128X>))  [6.06;6.06]
		 Successful, latency: 6.06

-----VDPBF16PSZ128rkz-----
	VDPBF16PSZ128rkz(1(Class<VR128X>) -> 0(Class<VR128X>))  [6.05;6.05]
		 Successful, latency: 6.05
	VDPBF16PSZ128rkz(3(Class<VR128X>) -> 0(Class<VR128X>))  [6.05;6.05]
		 Successful, latency: 6.05
	VDPBF16PSZ128rkz(4(Class<VR128X>) -> 0(Class<VR128X>))  [6.05;6.05]
		 Successful, latency: 6.05

-----VDPBF16PSZ256r-----
	VDPBF16PSZ256r(1(Class<VR256X>) -> 0(Class<VR256X>))  [6.07;6.07]
		 Successful, latency: 6.07
	VDPBF16PSZ256r(2(Class<VR256X>) -> 0(Class<VR256X>))  [6.05;6.05]
		 Successful, latency: 6.05
	VDPBF16PSZ256r(3(Class<VR256X>) -> 0(Class<VR256X>))  [6.06;6.06]
		 Successful, latency: 6.06

-----VDPBF16PSZ256rk-----
	VDPBF16PSZ256rk(1(Class<VR256X>) -> 0(Class<VR256X>))  [6.07;6.07]
		 Successful, latency: 6.07
	VDPBF16PSZ256rk(3(Class<VR256X>) -> 0(Class<VR256X>))  [6.06;6.06]
		 Successful, latency: 6.06
	VDPBF16PSZ256rk(4(Class<VR256X>) -> 0(Class<VR256X>))  [6.05;6.05]
		 Successful, latency: 6.05

-----VDPBF16PSZ256rkz-----
	VDPBF16PSZ256rkz(1(Class<VR256X>) -> 0(Class<VR256X>))  [6.06;6.06]
		 Successful, latency: 6.06
	VDPBF16PSZ256rkz(3(Class<VR256X>) -> 0(Class<VR256X>))  [6.06;6.06]
		 Successful, latency: 6.06
	VDPBF16PSZ256rkz(4(Class<VR256X>) -> 0(Class<VR256X>))  [6.07;6.07]
		 Successful, latency: 6.07

-----VDPBF16PSZr-----
	VDPBF16PSZr(1(Class<VR512>) -> 0(Class<VR512>))  [6.06;6.06]
		 Successful, latency: 6.06
	VDPBF16PSZr(2(Class<VR512>) -> 0(Class<VR512>))  [6.05;6.05]
		 Successful, latency: 6.05
	VDPBF16PSZr(3(Class<VR512>) -> 0(Class<VR512>))  [6.06;6.06]
		 Successful, latency: 6.06

-----VDPBF16PSZrk-----
	VDPBF16PSZrk(1(Class<VR512>) -> 0(Class<VR512>))  [6.05;6.05]
		 Successful, latency: 6.05
	VDPBF16PSZrk(3(Class<VR512>) -> 0(Class<VR512>))  [6.03;6.03]
		 Successful, latency: 6.03
	VDPBF16PSZrk(4(Class<VR512>) -> 0(Class<VR512>))  [6.06;6.06]
		 Successful, latency: 6.06

-----VDPBF16PSZrkz-----
	VDPBF16PSZrkz(1(Class<VR512>) -> 0(Class<VR512>))  [6.09;6.09]
		 Successful, latency: 6.09
	VDPBF16PSZrkz(3(Class<VR512>) -> 0(Class<VR512>))  [6.05;6.05]
		 Successful, latency: 6.05
	VDPBF16PSZrkz(4(Class<VR512>) -> 0(Class<VR512>))  [6.04;6.04]
		 Successful, latency: 6.04

-----VDPPDrri-----
	VDPPDrri(1(Class<VR128>) -> 0(Class<VR128>))  [7.07;7.07]
		 Successful, latency: 7.07
	VDPPDrri(2(Class<VR128>) -> 0(Class<VR128>))  [7.09;7.09]
		 Successful, latency: 7.09

-----VDPPHPSZ128r-----
	VDPPHPSZ128r(1(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VDPPHPSZ128r(2(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VDPPHPSZ128r(3(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VDPPHPSZ128rk-----
	VDPPHPSZ128rk(1(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VDPPHPSZ128rk(3(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VDPPHPSZ128rk(4(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VDPPHPSZ128rkz-----
	VDPPHPSZ128rkz(1(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VDPPHPSZ128rkz(3(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VDPPHPSZ128rkz(4(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VDPPHPSZ256r-----
	VDPPHPSZ256r(1(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VDPPHPSZ256r(2(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VDPPHPSZ256r(3(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VDPPHPSZ256rk-----
	VDPPHPSZ256rk(1(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VDPPHPSZ256rk(3(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VDPPHPSZ256rk(4(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VDPPHPSZ256rkz-----
	VDPPHPSZ256rkz(1(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VDPPHPSZ256rkz(3(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VDPPHPSZ256rkz(4(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VDPPHPSZr-----
	VDPPHPSZr(1(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VDPPHPSZr(2(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VDPPHPSZr(3(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VDPPHPSZrk-----
	VDPPHPSZrk(1(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VDPPHPSZrk(3(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VDPPHPSZrk(4(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VDPPHPSZrkz-----
	VDPPHPSZrkz(1(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VDPPHPSZrkz(3(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VDPPHPSZrkz(4(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VDPPSYrri-----
	VDPPSYrri(1(Class<VR256>) -> 0(Class<VR256>))  [11.1;11.1]
		 Successful, latency: 11.1
	VDPPSYrri(2(Class<VR256>) -> 0(Class<VR256>))  [11.1;11.1]
		 Successful, latency: 11.1

-----VDPPSrri-----
	VDPPSrri(1(Class<VR128>) -> 0(Class<VR128>))  [11.1;11.1]
		 Successful, latency: 11.1
	VDPPSrri(2(Class<VR128>) -> 0(Class<VR128>))  [11.1;11.1]
		 Successful, latency: 11.1

-----VEXP2PDZr-----
	VEXP2PDZr(1(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VEXP2PDZrb-----
	VEXP2PDZrb(1(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VEXP2PDZrbk-----
	VEXP2PDZrbk(1(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VEXP2PDZrbk(3(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VEXP2PDZrbkz-----
	VEXP2PDZrbkz(2(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VEXP2PDZrk-----
	VEXP2PDZrk(1(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VEXP2PDZrk(3(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VEXP2PDZrkz-----
	VEXP2PDZrkz(2(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VEXP2PSZr-----
	VEXP2PSZr(1(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VEXP2PSZrb-----
	VEXP2PSZrb(1(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VEXP2PSZrbk-----
	VEXP2PSZrbk(1(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VEXP2PSZrbk(3(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VEXP2PSZrbkz-----
	VEXP2PSZrbkz(2(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VEXP2PSZrk-----
	VEXP2PSZrk(1(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VEXP2PSZrk(3(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VEXP2PSZrkz-----
	VEXP2PSZrkz(2(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VEXPANDPDZ128rr-----
	VEXPANDPDZ128rr(1(Class<VR128X>) -> 0(Class<VR128X>))  [2.02;2.02]
		 Successful, latency: 2.02

-----VEXPANDPDZ128rrk-----
	VEXPANDPDZ128rrk(1(Class<VR128X>) -> 0(Class<VR128X>))  [2.02;2.02]
		 Successful, latency: 2.02
	VEXPANDPDZ128rrk(3(Class<VR128X>) -> 0(Class<VR128X>))  [2.02;2.02]
		 Successful, latency: 2.02

-----VEXPANDPDZ128rrkz-----
	VEXPANDPDZ128rrkz(2(Class<VR128X>) -> 0(Class<VR128X>))  [2.01;2.01]
		 Successful, latency: 2.01

-----VEXPANDPDZ256rr-----
	VEXPANDPDZ256rr(1(Class<VR256X>) -> 0(Class<VR256X>))  [4.03;4.03]
		 Successful, latency: 4.03

-----VEXPANDPDZ256rrk-----
	VEXPANDPDZ256rrk(1(Class<VR256X>) -> 0(Class<VR256X>))  [4.06;4.06]
		 Successful, latency: 4.06
	VEXPANDPDZ256rrk(3(Class<VR256X>) -> 0(Class<VR256X>))  [4.03;4.03]
		 Successful, latency: 4.03

-----VEXPANDPDZ256rrkz-----
	VEXPANDPDZ256rrkz(2(Class<VR256X>) -> 0(Class<VR256X>))  [4.03;4.03]
		 Successful, latency: 4.03

-----VEXPANDPDZrr-----
	VEXPANDPDZrr(1(Class<VR512>) -> 0(Class<VR512>))  [5.09;5.09]
		 Successful, latency: 5.09

-----VEXPANDPDZrrk-----
	VEXPANDPDZrrk(1(Class<VR512>) -> 0(Class<VR512>))  [5.06;5.06]
		 Successful, latency: 5.06
	VEXPANDPDZrrk(3(Class<VR512>) -> 0(Class<VR512>))  [5.07;5.07]
		 Successful, latency: 5.07

-----VEXPANDPDZrrkz-----
	VEXPANDPDZrrkz(2(Class<VR512>) -> 0(Class<VR512>))  [5.07;5.07]
		 Successful, latency: 5.07

-----VEXPANDPSZ128rr-----
	VEXPANDPSZ128rr(1(Class<VR128X>) -> 0(Class<VR128X>))  [2.02;2.02]
		 Successful, latency: 2.02

-----VEXPANDPSZ128rrk-----
	VEXPANDPSZ128rrk(1(Class<VR128X>) -> 0(Class<VR128X>))  [2.02;2.02]
		 Successful, latency: 2.02
	VEXPANDPSZ128rrk(3(Class<VR128X>) -> 0(Class<VR128X>))  [2.02;2.02]
		 Successful, latency: 2.02

-----VEXPANDPSZ128rrkz-----
	VEXPANDPSZ128rrkz(2(Class<VR128X>) -> 0(Class<VR128X>))  [2.03;2.03]
		 Successful, latency: 2.03

-----VEXPANDPSZ256rr-----
	VEXPANDPSZ256rr(1(Class<VR256X>) -> 0(Class<VR256X>))  [4.03;4.03]
		 Successful, latency: 4.03

-----VEXPANDPSZ256rrk-----
	VEXPANDPSZ256rrk(1(Class<VR256X>) -> 0(Class<VR256X>))  [4.02;4.02]
		 Successful, latency: 4.02
	VEXPANDPSZ256rrk(3(Class<VR256X>) -> 0(Class<VR256X>))  [4.04;4.04]
		 Successful, latency: 4.04

-----VEXPANDPSZ256rrkz-----
	VEXPANDPSZ256rrkz(2(Class<VR256X>) -> 0(Class<VR256X>))  [4.04;4.04]
		 Successful, latency: 4.04

-----VEXPANDPSZrr-----
	VEXPANDPSZrr(1(Class<VR512>) -> 0(Class<VR512>))  [5.07;5.07]
		 Successful, latency: 5.07

-----VEXPANDPSZrrk-----
	VEXPANDPSZrrk(1(Class<VR512>) -> 0(Class<VR512>))  [5.07;5.07]
		 Successful, latency: 5.07
	VEXPANDPSZrrk(3(Class<VR512>) -> 0(Class<VR512>))  [5.08;5.08]
		 Successful, latency: 5.08

-----VEXPANDPSZrrkz-----
	VEXPANDPSZrrkz(2(Class<VR512>) -> 0(Class<VR512>))  [5.07;5.07]
		 Successful, latency: 5.07

-----VEXTRACTF128rri-----
	VEXTRACTF128rri(1(Class<VR256>) -> 0(Class<VR128>))  [1.01;3.04]
		Dependencies:
			VEXTRACTF128rri(1(Class<VR256>) -> 0(Class<VR128>)) 
			VPBROADCASTWYrr(1(Class<VR128>) -> 0(Class<VR256>)) 
		Combined result: 4.04 cycles

-----VEXTRACTF32X4Z256rri-----
	VEXTRACTF32X4Z256rri(1(Class<VR256X>) -> 0(Class<VR128X>))  [1.01;3.03]
		Dependencies:
			VEXTRACTI32X4Z256rrik(3(Class<VR256X>) -> 0(Class<VR128X>)) 
			VBROADCASTF32X2Z256rr(1(Class<VR128X>) -> 0(Class<VR256X>)) 
		Combined result: 4.03 cycles

-----VEXTRACTF32X4Z256rrik-----
	VEXTRACTF32X4Z256rrik(1(Class<VR128X>) -> 0(Class<VR128X>))  [3.05;3.05]
		 Successful, latency: 3.05
	VEXTRACTF32X4Z256rrik(3(Class<VR256X>) -> 0(Class<VR128X>))  [1.01;3.04]
		Dependencies:
			VEXTRACTI32X4Z256rrik(3(Class<VR256X>) -> 0(Class<VR128X>)) 
			VBROADCASTF32X2Z256rr(1(Class<VR128X>) -> 0(Class<VR256X>)) 
		Combined result: 4.04 cycles

-----VEXTRACTF32X4Z256rrikz-----
	VEXTRACTF32X4Z256rrikz(2(Class<VR256X>) -> 0(Class<VR128X>))  [1.03;3.05]
		Dependencies:
			VEXTRACTI32X4Z256rrik(3(Class<VR256X>) -> 0(Class<VR128X>)) 
			VBROADCASTF32X2Z256rr(1(Class<VR128X>) -> 0(Class<VR256X>)) 
		Combined result: 4.05 cycles

-----VEXTRACTF32X4Zrri-----
	VEXTRACTF32X4Zrri(1(Class<VR512>) -> 0(Class<VR128X>))  [1.01;4.04]
		Dependencies:
			VEXTRACTF64X2Zrri(1(Class<VR512>) -> 0(Class<VR128X>)) 
			VINSERTF32X4Zrri(2(Class<VR128X>) -> 0(Class<VR512>)) 
		Combined result: 5.04 cycles

-----VEXTRACTF32X4Zrrik-----
	VEXTRACTF32X4Zrrik(1(Class<VR128X>) -> 0(Class<VR128X>))  [4.04;4.04]
		 Successful, latency: 4.04
	VEXTRACTF32X4Zrrik(3(Class<VR512>) -> 0(Class<VR128X>))  [1.02;4.04]
		Dependencies:
			VEXTRACTF64X2Zrri(1(Class<VR512>) -> 0(Class<VR128X>)) 
			VINSERTF32X4Zrri(2(Class<VR128X>) -> 0(Class<VR512>)) 
		Combined result: 5.04 cycles

-----VEXTRACTF32X4Zrrikz-----
	VEXTRACTF32X4Zrrikz(2(Class<VR512>) -> 0(Class<VR128X>))  [1.04;4.06]
		Dependencies:
			VEXTRACTF64X2Zrri(1(Class<VR512>) -> 0(Class<VR128X>)) 
			VINSERTF32X4Zrri(2(Class<VR128X>) -> 0(Class<VR512>)) 
		Combined result: 5.06 cycles

-----VEXTRACTF32X8Zrri-----
	VEXTRACTF32X8Zrri(1(Class<VR512>) -> 0(Class<VR256X>))  [1.04;4.06]
		Dependencies:
			VPMOVDWZrr(1(Class<VR512>) -> 0(Class<VR256X>)) 
			VINSERTF64X4Zrri(2(Class<VR256X>) -> 0(Class<VR512>)) 
		Combined result: 5.06 cycles

-----VEXTRACTF32X8Zrrik-----
	VEXTRACTF32X8Zrrik(1(Class<VR256X>) -> 0(Class<VR256X>))  [4.04;4.04]
		 Successful, latency: 4.04
	VEXTRACTF32X8Zrrik(3(Class<VR512>) -> 0(Class<VR256X>))  [1;4.03]
		Dependencies:
			VPMOVDWZrr(1(Class<VR512>) -> 0(Class<VR256X>)) 
			VINSERTF64X4Zrri(2(Class<VR256X>) -> 0(Class<VR512>)) 
		Combined result: 5.03 cycles

-----VEXTRACTF32X8Zrrikz-----
	VEXTRACTF32X8Zrrikz(2(Class<VR512>) -> 0(Class<VR256X>))  [1.04;4.06]
		Dependencies:
			VPMOVDWZrr(1(Class<VR512>) -> 0(Class<VR256X>)) 
			VINSERTF64X4Zrri(2(Class<VR256X>) -> 0(Class<VR512>)) 
		Combined result: 5.06 cycles

-----VEXTRACTF64X2Z256rri-----
	VEXTRACTF64X2Z256rri(1(Class<VR256X>) -> 0(Class<VR128X>))  [1.01;3.03]
		Dependencies:
			VEXTRACTI32X4Z256rrik(3(Class<VR256X>) -> 0(Class<VR128X>)) 
			VBROADCASTF32X2Z256rr(1(Class<VR128X>) -> 0(Class<VR256X>)) 
		Combined result: 4.03 cycles

-----VEXTRACTF64X2Z256rrik-----
	VEXTRACTF64X2Z256rrik(1(Class<VR128X>) -> 0(Class<VR128X>))  [3.02;3.02]
		 Successful, latency: 3.02
	VEXTRACTF64X2Z256rrik(3(Class<VR256X>) -> 0(Class<VR128X>))  [1.01;3.03]
		Dependencies:
			VEXTRACTI32X4Z256rrik(3(Class<VR256X>) -> 0(Class<VR128X>)) 
			VBROADCASTF32X2Z256rr(1(Class<VR128X>) -> 0(Class<VR256X>)) 
		Combined result: 4.03 cycles

-----VEXTRACTF64X2Z256rrikz-----
	VEXTRACTF64X2Z256rrikz(2(Class<VR256X>) -> 0(Class<VR128X>))  [1.01;3.03]
		Dependencies:
			VEXTRACTI32X4Z256rrik(3(Class<VR256X>) -> 0(Class<VR128X>)) 
			VBROADCASTF32X2Z256rr(1(Class<VR128X>) -> 0(Class<VR256X>)) 
		Combined result: 4.03 cycles

-----VEXTRACTF64X2Zrri-----
	VEXTRACTF64X2Zrri(1(Class<VR512>) -> 0(Class<VR128X>))  [1.03;4.05]
		Dependencies:
			VEXTRACTF64X2Zrri(1(Class<VR512>) -> 0(Class<VR128X>)) 
			VINSERTF32X4Zrri(2(Class<VR128X>) -> 0(Class<VR512>)) 
		Combined result: 5.05 cycles

-----VEXTRACTF64X2Zrrik-----
	VEXTRACTF64X2Zrrik(1(Class<VR128X>) -> 0(Class<VR128X>))  [4.04;4.04]
		 Successful, latency: 4.04
	VEXTRACTF64X2Zrrik(3(Class<VR512>) -> 0(Class<VR128X>))  [1.02;4.04]
		Dependencies:
			VEXTRACTF64X2Zrri(1(Class<VR512>) -> 0(Class<VR128X>)) 
			VINSERTF32X4Zrri(2(Class<VR128X>) -> 0(Class<VR512>)) 
		Combined result: 5.04 cycles

-----VEXTRACTF64X2Zrrikz-----
	VEXTRACTF64X2Zrrikz(2(Class<VR512>) -> 0(Class<VR128X>))  [1.03;4.05]
		Dependencies:
			VEXTRACTF64X2Zrri(1(Class<VR512>) -> 0(Class<VR128X>)) 
			VINSERTF32X4Zrri(2(Class<VR128X>) -> 0(Class<VR512>)) 
		Combined result: 5.05 cycles

-----VEXTRACTF64X4Zrri-----
	VEXTRACTF64X4Zrri(1(Class<VR512>) -> 0(Class<VR256X>))  [1.03;4.06]
		Dependencies:
			VPMOVDWZrr(1(Class<VR512>) -> 0(Class<VR256X>)) 
			VINSERTF64X4Zrri(2(Class<VR256X>) -> 0(Class<VR512>)) 
		Combined result: 5.06 cycles

-----VEXTRACTF64X4Zrrik-----
	VEXTRACTF64X4Zrrik(1(Class<VR256X>) -> 0(Class<VR256X>))  [4.03;4.03]
		 Successful, latency: 4.03
	VEXTRACTF64X4Zrrik(3(Class<VR512>) -> 0(Class<VR256X>))  [1.02;4.05]
		Dependencies:
			VPMOVDWZrr(1(Class<VR512>) -> 0(Class<VR256X>)) 
			VINSERTF64X4Zrri(2(Class<VR256X>) -> 0(Class<VR512>)) 
		Combined result: 5.05 cycles

-----VEXTRACTF64X4Zrrikz-----
	VEXTRACTF64X4Zrrikz(2(Class<VR512>) -> 0(Class<VR256X>))  [1.05;4.07]
		Dependencies:
			VPMOVDWZrr(1(Class<VR512>) -> 0(Class<VR256X>)) 
			VINSERTF64X4Zrri(2(Class<VR256X>) -> 0(Class<VR512>)) 
		Combined result: 5.07 cycles

-----VEXTRACTI128rri-----
	VEXTRACTI128rri(1(Class<VR256>) -> 0(Class<VR128>))  [1.02;3.05]
		Dependencies:
			VEXTRACTF128rri(1(Class<VR256>) -> 0(Class<VR128>)) 
			VPBROADCASTWYrr(1(Class<VR128>) -> 0(Class<VR256>)) 
		Combined result: 4.05 cycles

-----VEXTRACTI32X4Z256rri-----
	VEXTRACTI32X4Z256rri(1(Class<VR256X>) -> 0(Class<VR128X>))  [1.01;3.03]
		Dependencies:
			VEXTRACTI32X4Z256rrik(3(Class<VR256X>) -> 0(Class<VR128X>)) 
			VBROADCASTF32X2Z256rr(1(Class<VR128X>) -> 0(Class<VR256X>)) 
		Combined result: 4.03 cycles

-----VEXTRACTI32X4Z256rrik-----
	VEXTRACTI32X4Z256rrik(1(Class<VR128X>) -> 0(Class<VR128X>))  [3.03;3.03]
		 Successful, latency: 3.03
	VEXTRACTI32X4Z256rrik(3(Class<VR256X>) -> 0(Class<VR128X>))  [1.02;3.04]
		Dependencies:
			VEXTRACTI32X4Z256rrik(3(Class<VR256X>) -> 0(Class<VR128X>)) 
			VBROADCASTF32X2Z256rr(1(Class<VR128X>) -> 0(Class<VR256X>)) 
		Combined result: 4.04 cycles

-----VEXTRACTI32X4Z256rrikz-----
	VEXTRACTI32X4Z256rrikz(2(Class<VR256X>) -> 0(Class<VR128X>))  [1.02;3.04]
		Dependencies:
			VEXTRACTI32X4Z256rrik(3(Class<VR256X>) -> 0(Class<VR128X>)) 
			VBROADCASTF32X2Z256rr(1(Class<VR128X>) -> 0(Class<VR256X>)) 
		Combined result: 4.04 cycles

-----VEXTRACTI32X4Zrri-----
	VEXTRACTI32X4Zrri(1(Class<VR512>) -> 0(Class<VR128X>))  [1.04;4.07]
		Dependencies:
			VEXTRACTF64X2Zrri(1(Class<VR512>) -> 0(Class<VR128X>)) 
			VINSERTF32X4Zrri(2(Class<VR128X>) -> 0(Class<VR512>)) 
		Combined result: 5.07 cycles

-----VEXTRACTI32X4Zrrik-----
	VEXTRACTI32X4Zrrik(1(Class<VR128X>) -> 0(Class<VR128X>))  [4.03;4.03]
		 Successful, latency: 4.03
	VEXTRACTI32X4Zrrik(3(Class<VR512>) -> 0(Class<VR128X>))  [1.01;4.03]
		Dependencies:
			VEXTRACTF64X2Zrri(1(Class<VR512>) -> 0(Class<VR128X>)) 
			VINSERTF32X4Zrri(2(Class<VR128X>) -> 0(Class<VR512>)) 
		Combined result: 5.03 cycles

-----VEXTRACTI32X4Zrrikz-----
	VEXTRACTI32X4Zrrikz(2(Class<VR512>) -> 0(Class<VR128X>))  [1.05;4.08]
		Dependencies:
			VEXTRACTF64X2Zrri(1(Class<VR512>) -> 0(Class<VR128X>)) 
			VINSERTF32X4Zrri(2(Class<VR128X>) -> 0(Class<VR512>)) 
		Combined result: 5.08 cycles

-----VEXTRACTI32X8Zrri-----
	VEXTRACTI32X8Zrri(1(Class<VR512>) -> 0(Class<VR256X>))  [1.05;4.08]
		Dependencies:
			VPMOVDWZrr(1(Class<VR512>) -> 0(Class<VR256X>)) 
			VINSERTF64X4Zrri(2(Class<VR256X>) -> 0(Class<VR512>)) 
		Combined result: 5.08 cycles

-----VEXTRACTI32X8Zrrik-----
	VEXTRACTI32X8Zrrik(1(Class<VR256X>) -> 0(Class<VR256X>))  [4.04;4.04]
		 Successful, latency: 4.04
	VEXTRACTI32X8Zrrik(3(Class<VR512>) -> 0(Class<VR256X>))  [1.03;4.05]
		Dependencies:
			VPMOVDWZrr(1(Class<VR512>) -> 0(Class<VR256X>)) 
			VINSERTF64X4Zrri(2(Class<VR256X>) -> 0(Class<VR512>)) 
		Combined result: 5.05 cycles

-----VEXTRACTI32X8Zrrikz-----
	VEXTRACTI32X8Zrrikz(2(Class<VR512>) -> 0(Class<VR256X>))  [1.05;4.08]
		Dependencies:
			VPMOVDWZrr(1(Class<VR512>) -> 0(Class<VR256X>)) 
			VINSERTF64X4Zrri(2(Class<VR256X>) -> 0(Class<VR512>)) 
		Combined result: 5.08 cycles

-----VEXTRACTI64X2Z256rri-----
	VEXTRACTI64X2Z256rri(1(Class<VR256X>) -> 0(Class<VR128X>))  [1.01;3.03]
		Dependencies:
			VEXTRACTI32X4Z256rrik(3(Class<VR256X>) -> 0(Class<VR128X>)) 
			VBROADCASTF32X2Z256rr(1(Class<VR128X>) -> 0(Class<VR256X>)) 
		Combined result: 4.03 cycles

-----VEXTRACTI64X2Z256rrik-----
	VEXTRACTI64X2Z256rrik(1(Class<VR128X>) -> 0(Class<VR128X>))  [3.03;3.03]
		 Successful, latency: 3.03
	VEXTRACTI64X2Z256rrik(3(Class<VR256X>) -> 0(Class<VR128X>))  [1.01;3.04]
		Dependencies:
			VEXTRACTI32X4Z256rrik(3(Class<VR256X>) -> 0(Class<VR128X>)) 
			VBROADCASTF32X2Z256rr(1(Class<VR128X>) -> 0(Class<VR256X>)) 
		Combined result: 4.04 cycles

-----VEXTRACTI64X2Z256rrikz-----
	VEXTRACTI64X2Z256rrikz(2(Class<VR256X>) -> 0(Class<VR128X>))  [1.01;3.03]
		Dependencies:
			VEXTRACTI32X4Z256rrik(3(Class<VR256X>) -> 0(Class<VR128X>)) 
			VBROADCASTF32X2Z256rr(1(Class<VR128X>) -> 0(Class<VR256X>)) 
		Combined result: 4.03 cycles

-----VEXTRACTI64X2Zrri-----
	VEXTRACTI64X2Zrri(1(Class<VR512>) -> 0(Class<VR128X>))  [1.03;4.05]
		Dependencies:
			VEXTRACTF64X2Zrri(1(Class<VR512>) -> 0(Class<VR128X>)) 
			VINSERTF32X4Zrri(2(Class<VR128X>) -> 0(Class<VR512>)) 
		Combined result: 5.05 cycles

-----VEXTRACTI64X2Zrrik-----
	VEXTRACTI64X2Zrrik(1(Class<VR128X>) -> 0(Class<VR128X>))  [4.03;4.03]
		 Successful, latency: 4.03
	VEXTRACTI64X2Zrrik(3(Class<VR512>) -> 0(Class<VR128X>))  [1.04;4.06]
		Dependencies:
			VEXTRACTF64X2Zrri(1(Class<VR512>) -> 0(Class<VR128X>)) 
			VINSERTF32X4Zrri(2(Class<VR128X>) -> 0(Class<VR512>)) 
		Combined result: 5.06 cycles

-----VEXTRACTI64X2Zrrikz-----
	VEXTRACTI64X2Zrrikz(2(Class<VR512>) -> 0(Class<VR128X>))  [1.02;4.04]
		Dependencies:
			VEXTRACTF64X2Zrri(1(Class<VR512>) -> 0(Class<VR128X>)) 
			VINSERTF32X4Zrri(2(Class<VR128X>) -> 0(Class<VR512>)) 
		Combined result: 5.04 cycles

-----VEXTRACTI64X4Zrri-----
	VEXTRACTI64X4Zrri(1(Class<VR512>) -> 0(Class<VR256X>))  [1;4.03]
		Dependencies:
			VPMOVDWZrr(1(Class<VR512>) -> 0(Class<VR256X>)) 
			VINSERTF64X4Zrri(2(Class<VR256X>) -> 0(Class<VR512>)) 
		Combined result: 5.03 cycles

-----VEXTRACTI64X4Zrrik-----
	VEXTRACTI64X4Zrrik(1(Class<VR256X>) -> 0(Class<VR256X>))  [4.05;4.05]
		 Successful, latency: 4.05
	VEXTRACTI64X4Zrrik(3(Class<VR512>) -> 0(Class<VR256X>))  [1.02;4.04]
		Dependencies:
			VPMOVDWZrr(1(Class<VR512>) -> 0(Class<VR256X>)) 
			VINSERTF64X4Zrri(2(Class<VR256X>) -> 0(Class<VR512>)) 
		Combined result: 5.04 cycles

-----VEXTRACTI64X4Zrrikz-----
	VEXTRACTI64X4Zrrikz(2(Class<VR512>) -> 0(Class<VR256X>))  [1.03;4.06]
		Dependencies:
			VPMOVDWZrr(1(Class<VR512>) -> 0(Class<VR256X>)) 
			VINSERTF64X4Zrri(2(Class<VR256X>) -> 0(Class<VR512>)) 
		Combined result: 5.06 cycles

-----VEXTRACTPSZrri-----
	VEXTRACTPSZrri(1(Class<VR128X>) -> 0(Class<GR32>))  [1.99;6.05]
		Dependencies:
			VMOVPDI2DIZrr(1(Class<VR128X>) -> 0(Class<GR32>)) 
			VMOVDI2PDIZrr(1(Class<GR32>) -> 0(Class<VR128X>)) 
		Combined result: 7.05 cycles

-----VEXTRACTPSrri-----
	VEXTRACTPSrri(1(Class<VR128>) -> 0(Class<GR32>))  [2.04;6.08]
		Dependencies:
			MOVMSKPSrr(1(Class<VR128>) -> 0(Class<GR32>)) 
			VMOVDI2PDIrr(1(Class<GR32>) -> 0(Class<VR128>)) 
		Combined result: 7.08 cycles

-----VFCMADDCPHZ128r-----
	VFCMADDCPHZ128r(1(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFCMADDCPHZ128r(2(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFCMADDCPHZ128r(3(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VFCMADDCPHZ128rk-----
	VFCMADDCPHZ128rk(1(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFCMADDCPHZ128rk(3(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFCMADDCPHZ128rk(4(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VFCMADDCPHZ128rkz-----
	VFCMADDCPHZ128rkz(1(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFCMADDCPHZ128rkz(3(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFCMADDCPHZ128rkz(4(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VFCMADDCPHZ256r-----
	VFCMADDCPHZ256r(1(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFCMADDCPHZ256r(2(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFCMADDCPHZ256r(3(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VFCMADDCPHZ256rb-----
	VFCMADDCPHZ256rb(1(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFCMADDCPHZ256rb(2(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFCMADDCPHZ256rb(3(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VFCMADDCPHZ256rbk-----
	VFCMADDCPHZ256rbk(1(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFCMADDCPHZ256rbk(3(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFCMADDCPHZ256rbk(4(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VFCMADDCPHZ256rbkz-----
	VFCMADDCPHZ256rbkz(1(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFCMADDCPHZ256rbkz(3(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFCMADDCPHZ256rbkz(4(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VFCMADDCPHZ256rk-----
	VFCMADDCPHZ256rk(1(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFCMADDCPHZ256rk(3(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFCMADDCPHZ256rk(4(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VFCMADDCPHZ256rkz-----
	VFCMADDCPHZ256rkz(1(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFCMADDCPHZ256rkz(3(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFCMADDCPHZ256rkz(4(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VFCMADDCPHZr-----
	VFCMADDCPHZr(1(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFCMADDCPHZr(2(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFCMADDCPHZr(3(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VFCMADDCPHZrb-----
	VFCMADDCPHZrb(1(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFCMADDCPHZrb(2(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFCMADDCPHZrb(3(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VFCMADDCPHZrbk-----
	VFCMADDCPHZrbk(1(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFCMADDCPHZrbk(3(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFCMADDCPHZrbk(4(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VFCMADDCPHZrbkz-----
	VFCMADDCPHZrbkz(1(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFCMADDCPHZrbkz(3(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFCMADDCPHZrbkz(4(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VFCMADDCPHZrk-----
	VFCMADDCPHZrk(1(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFCMADDCPHZrk(3(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFCMADDCPHZrk(4(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VFCMADDCPHZrkz-----
	VFCMADDCPHZrkz(1(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFCMADDCPHZrkz(3(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFCMADDCPHZrkz(4(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VFCMADDCSHZr-----
	VFCMADDCSHZr(1(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFCMADDCSHZr(2(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFCMADDCSHZr(3(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VFCMADDCSHZrb-----
	VFCMADDCSHZrb(1(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFCMADDCSHZrb(2(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFCMADDCSHZrb(3(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VFCMADDCSHZrbk-----
	VFCMADDCSHZrbk(1(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFCMADDCSHZrbk(3(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFCMADDCSHZrbk(4(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VFCMADDCSHZrbkz-----
	VFCMADDCSHZrbkz(1(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFCMADDCSHZrbkz(3(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFCMADDCSHZrbkz(4(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VFCMADDCSHZrk-----
	VFCMADDCSHZrk(1(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFCMADDCSHZrk(3(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFCMADDCSHZrk(4(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VFCMADDCSHZrkz-----
	VFCMADDCSHZrkz(1(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFCMADDCSHZrkz(3(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFCMADDCSHZrkz(4(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VFCMULCPHZ128rr-----
	VFCMULCPHZ128rr(1(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFCMULCPHZ128rr(2(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VFCMULCPHZ128rrk-----
	VFCMULCPHZ128rrk(1(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFCMULCPHZ128rrk(3(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFCMULCPHZ128rrk(4(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VFCMULCPHZ128rrkz-----
	VFCMULCPHZ128rrkz(2(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFCMULCPHZ128rrkz(3(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VFCMULCPHZ256rr-----
	VFCMULCPHZ256rr(1(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFCMULCPHZ256rr(2(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VFCMULCPHZ256rrb-----
	VFCMULCPHZ256rrb(1(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFCMULCPHZ256rrb(2(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VFCMULCPHZ256rrbk-----
	VFCMULCPHZ256rrbk(1(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFCMULCPHZ256rrbk(3(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFCMULCPHZ256rrbk(4(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VFCMULCPHZ256rrbkz-----
	VFCMULCPHZ256rrbkz(2(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFCMULCPHZ256rrbkz(3(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VFCMULCPHZ256rrk-----
	VFCMULCPHZ256rrk(1(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFCMULCPHZ256rrk(3(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFCMULCPHZ256rrk(4(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VFCMULCPHZ256rrkz-----
	VFCMULCPHZ256rrkz(2(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFCMULCPHZ256rrkz(3(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VFCMULCPHZrr-----
	VFCMULCPHZrr(1(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFCMULCPHZrr(2(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VFCMULCPHZrrb-----
	VFCMULCPHZrrb(1(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFCMULCPHZrrb(2(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VFCMULCPHZrrbk-----
	VFCMULCPHZrrbk(1(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFCMULCPHZrrbk(3(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFCMULCPHZrrbk(4(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VFCMULCPHZrrbkz-----
	VFCMULCPHZrrbkz(2(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFCMULCPHZrrbkz(3(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VFCMULCPHZrrk-----
	VFCMULCPHZrrk(1(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFCMULCPHZrrk(3(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFCMULCPHZrrk(4(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VFCMULCPHZrrkz-----
	VFCMULCPHZrrkz(2(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFCMULCPHZrrkz(3(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VFCMULCSHZrr-----
	VFCMULCSHZrr(1(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFCMULCSHZrr(2(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VFCMULCSHZrrb-----
	VFCMULCSHZrrb(1(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFCMULCSHZrrb(2(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VFCMULCSHZrrbk-----
	VFCMULCSHZrrbk(1(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFCMULCSHZrrbk(3(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFCMULCSHZrrbk(4(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VFCMULCSHZrrbkz-----
	VFCMULCSHZrrbkz(2(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFCMULCSHZrrbkz(3(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VFCMULCSHZrrk-----
	VFCMULCSHZrrk(1(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFCMULCSHZrrk(3(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFCMULCSHZrrk(4(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VFCMULCSHZrrkz-----
	VFCMULCSHZrrkz(2(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFCMULCSHZrrkz(3(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VFIXUPIMMPDZ128rri-----
	VFIXUPIMMPDZ128rri(1(Class<VR128X>) -> 0(Class<VR128X>))  [2.04;2.04]
		 Successful, latency: 2.04
	VFIXUPIMMPDZ128rri(2(Class<VR128X>) -> 0(Class<VR128X>))  [2.02;2.02]
		 Successful, latency: 2.02
	VFIXUPIMMPDZ128rri(3(Class<VR128X>) -> 0(Class<VR128X>))  [2.02;2.02]
		 Successful, latency: 2.02

-----VFIXUPIMMPDZ128rrik-----
	VFIXUPIMMPDZ128rrik(1(Class<VR128X>) -> 0(Class<VR128X>))  [2.01;2.01]
		 Successful, latency: 2.01
	VFIXUPIMMPDZ128rrik(3(Class<VR128X>) -> 0(Class<VR128X>))  [2.02;2.02]
		 Successful, latency: 2.02
	VFIXUPIMMPDZ128rrik(4(Class<VR128X>) -> 0(Class<VR128X>))  [2.02;2.02]
		 Successful, latency: 2.02

-----VFIXUPIMMPDZ128rrikz-----
	VFIXUPIMMPDZ128rrikz(1(Class<VR128X>) -> 0(Class<VR128X>))  [2;2]
		 Successful, latency: 2
	VFIXUPIMMPDZ128rrikz(3(Class<VR128X>) -> 0(Class<VR128X>))  [2.02;2.02]
		 Successful, latency: 2.02
	VFIXUPIMMPDZ128rrikz(4(Class<VR128X>) -> 0(Class<VR128X>))  [2.02;2.02]
		 Successful, latency: 2.02

-----VFIXUPIMMPDZ256rri-----
	VFIXUPIMMPDZ256rri(1(Class<VR256X>) -> 0(Class<VR256X>))  [2.03;2.03]
		 Successful, latency: 2.03
	VFIXUPIMMPDZ256rri(2(Class<VR256X>) -> 0(Class<VR256X>))  [2.01;2.01]
		 Successful, latency: 2.01
	VFIXUPIMMPDZ256rri(3(Class<VR256X>) -> 0(Class<VR256X>))  [2.02;2.02]
		 Successful, latency: 2.02

-----VFIXUPIMMPDZ256rrib-----
	VFIXUPIMMPDZ256rrib(1(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFIXUPIMMPDZ256rrib(2(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFIXUPIMMPDZ256rrib(3(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VFIXUPIMMPDZ256rribk-----
	VFIXUPIMMPDZ256rribk(1(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFIXUPIMMPDZ256rribk(3(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFIXUPIMMPDZ256rribk(4(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VFIXUPIMMPDZ256rribkz-----
	VFIXUPIMMPDZ256rribkz(1(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFIXUPIMMPDZ256rribkz(3(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFIXUPIMMPDZ256rribkz(4(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VFIXUPIMMPDZ256rrik-----
	VFIXUPIMMPDZ256rrik(1(Class<VR256X>) -> 0(Class<VR256X>))  [2.02;2.02]
		 Successful, latency: 2.02
	VFIXUPIMMPDZ256rrik(3(Class<VR256X>) -> 0(Class<VR256X>))  [2.02;2.02]
		 Successful, latency: 2.02
	VFIXUPIMMPDZ256rrik(4(Class<VR256X>) -> 0(Class<VR256X>))  [2.02;2.02]
		 Successful, latency: 2.02

-----VFIXUPIMMPDZ256rrikz-----
	VFIXUPIMMPDZ256rrikz(1(Class<VR256X>) -> 0(Class<VR256X>))  [2.03;2.03]
		 Successful, latency: 2.03
	VFIXUPIMMPDZ256rrikz(3(Class<VR256X>) -> 0(Class<VR256X>))  [2.02;2.02]
		 Successful, latency: 2.02
	VFIXUPIMMPDZ256rrikz(4(Class<VR256X>) -> 0(Class<VR256X>))  [2.02;2.02]
		 Successful, latency: 2.02

-----VFIXUPIMMPDZrri-----
	VFIXUPIMMPDZrri(1(Class<VR512>) -> 0(Class<VR512>))  [2.04;2.04]
		 Successful, latency: 2.04
	VFIXUPIMMPDZrri(2(Class<VR512>) -> 0(Class<VR512>))  [2.03;2.03]
		 Successful, latency: 2.03
	VFIXUPIMMPDZrri(3(Class<VR512>) -> 0(Class<VR512>))  [2.01;2.01]
		 Successful, latency: 2.01

-----VFIXUPIMMPDZrrib-----
	VFIXUPIMMPDZrrib(1(Class<VR512>) -> 0(Class<VR512>))  [2.02;2.02]
		 Successful, latency: 2.02
	VFIXUPIMMPDZrrib(2(Class<VR512>) -> 0(Class<VR512>))  [2.02;2.02]
		 Successful, latency: 2.02
	VFIXUPIMMPDZrrib(3(Class<VR512>) -> 0(Class<VR512>))  [2.02;2.02]
		 Successful, latency: 2.02

-----VFIXUPIMMPDZrribk-----
	VFIXUPIMMPDZrribk(1(Class<VR512>) -> 0(Class<VR512>))  [2.02;2.02]
		 Successful, latency: 2.02
	VFIXUPIMMPDZrribk(3(Class<VR512>) -> 0(Class<VR512>))  [2.02;2.02]
		 Successful, latency: 2.02
	VFIXUPIMMPDZrribk(4(Class<VR512>) -> 0(Class<VR512>))  [2.01;2.01]
		 Successful, latency: 2.01

-----VFIXUPIMMPDZrribkz-----
	VFIXUPIMMPDZrribkz(1(Class<VR512>) -> 0(Class<VR512>))  [2.04;2.04]
		 Successful, latency: 2.04
	VFIXUPIMMPDZrribkz(3(Class<VR512>) -> 0(Class<VR512>))  [2.02;2.02]
		 Successful, latency: 2.02
	VFIXUPIMMPDZrribkz(4(Class<VR512>) -> 0(Class<VR512>))  [2.02;2.02]
		 Successful, latency: 2.02

-----VFIXUPIMMPDZrrik-----
	VFIXUPIMMPDZrrik(1(Class<VR512>) -> 0(Class<VR512>))  [2.02;2.02]
		 Successful, latency: 2.02
	VFIXUPIMMPDZrrik(3(Class<VR512>) -> 0(Class<VR512>))  [2.02;2.02]
		 Successful, latency: 2.02
	VFIXUPIMMPDZrrik(4(Class<VR512>) -> 0(Class<VR512>))  [2.02;2.02]
		 Successful, latency: 2.02

-----VFIXUPIMMPDZrrikz-----
	VFIXUPIMMPDZrrikz(1(Class<VR512>) -> 0(Class<VR512>))  [2.02;2.02]
		 Successful, latency: 2.02
	VFIXUPIMMPDZrrikz(3(Class<VR512>) -> 0(Class<VR512>))  [2.02;2.02]
		 Successful, latency: 2.02
	VFIXUPIMMPDZrrikz(4(Class<VR512>) -> 0(Class<VR512>))  [2.01;2.01]
		 Successful, latency: 2.01

-----VFIXUPIMMPSZ128rri-----
	VFIXUPIMMPSZ128rri(1(Class<VR128X>) -> 0(Class<VR128X>))  [2.01;2.01]
		 Successful, latency: 2.01
	VFIXUPIMMPSZ128rri(2(Class<VR128X>) -> 0(Class<VR128X>))  [2.02;2.02]
		 Successful, latency: 2.02
	VFIXUPIMMPSZ128rri(3(Class<VR128X>) -> 0(Class<VR128X>))  [2.01;2.01]
		 Successful, latency: 2.01

-----VFIXUPIMMPSZ128rrik-----
	VFIXUPIMMPSZ128rrik(1(Class<VR128X>) -> 0(Class<VR128X>))  [2.02;2.02]
		 Successful, latency: 2.02
	VFIXUPIMMPSZ128rrik(3(Class<VR128X>) -> 0(Class<VR128X>))  [2.02;2.02]
		 Successful, latency: 2.02
	VFIXUPIMMPSZ128rrik(4(Class<VR128X>) -> 0(Class<VR128X>))  [2.02;2.02]
		 Successful, latency: 2.02

-----VFIXUPIMMPSZ128rrikz-----
	VFIXUPIMMPSZ128rrikz(1(Class<VR128X>) -> 0(Class<VR128X>))  [2.02;2.02]
		 Successful, latency: 2.02
	VFIXUPIMMPSZ128rrikz(3(Class<VR128X>) -> 0(Class<VR128X>))  [2.01;2.01]
		 Successful, latency: 2.01
	VFIXUPIMMPSZ128rrikz(4(Class<VR128X>) -> 0(Class<VR128X>))  [2.02;2.02]
		 Successful, latency: 2.02

-----VFIXUPIMMPSZ256rri-----
	VFIXUPIMMPSZ256rri(1(Class<VR256X>) -> 0(Class<VR256X>))  [2.05;2.05]
		 Successful, latency: 2.05
	VFIXUPIMMPSZ256rri(2(Class<VR256X>) -> 0(Class<VR256X>))  [2.02;2.02]
		 Successful, latency: 2.02
	VFIXUPIMMPSZ256rri(3(Class<VR256X>) -> 0(Class<VR256X>))  [2.02;2.02]
		 Successful, latency: 2.02

-----VFIXUPIMMPSZ256rrib-----
	VFIXUPIMMPSZ256rrib(1(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFIXUPIMMPSZ256rrib(2(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFIXUPIMMPSZ256rrib(3(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VFIXUPIMMPSZ256rribk-----
	VFIXUPIMMPSZ256rribk(1(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFIXUPIMMPSZ256rribk(3(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFIXUPIMMPSZ256rribk(4(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VFIXUPIMMPSZ256rribkz-----
	VFIXUPIMMPSZ256rribkz(1(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFIXUPIMMPSZ256rribkz(3(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFIXUPIMMPSZ256rribkz(4(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VFIXUPIMMPSZ256rrik-----
	VFIXUPIMMPSZ256rrik(1(Class<VR256X>) -> 0(Class<VR256X>))  [2.02;2.02]
		 Successful, latency: 2.02
	VFIXUPIMMPSZ256rrik(3(Class<VR256X>) -> 0(Class<VR256X>))  [2.02;2.02]
		 Successful, latency: 2.02
	VFIXUPIMMPSZ256rrik(4(Class<VR256X>) -> 0(Class<VR256X>))  [2.02;2.02]
		 Successful, latency: 2.02

-----VFIXUPIMMPSZ256rrikz-----
	VFIXUPIMMPSZ256rrikz(1(Class<VR256X>) -> 0(Class<VR256X>))  [2.02;2.02]
		 Successful, latency: 2.02
	VFIXUPIMMPSZ256rrikz(3(Class<VR256X>) -> 0(Class<VR256X>))  [2.02;2.02]
		 Successful, latency: 2.02
	VFIXUPIMMPSZ256rrikz(4(Class<VR256X>) -> 0(Class<VR256X>))  [2.02;2.02]
		 Successful, latency: 2.02

-----VFIXUPIMMPSZrri-----
	VFIXUPIMMPSZrri(1(Class<VR512>) -> 0(Class<VR512>))  [2.02;2.02]
		 Successful, latency: 2.02
	VFIXUPIMMPSZrri(2(Class<VR512>) -> 0(Class<VR512>))  [2.02;2.02]
		 Successful, latency: 2.02
	VFIXUPIMMPSZrri(3(Class<VR512>) -> 0(Class<VR512>))  [2.02;2.02]
		 Successful, latency: 2.02

-----VFIXUPIMMPSZrrib-----
	VFIXUPIMMPSZrrib(1(Class<VR512>) -> 0(Class<VR512>))  [2.01;2.01]
		 Successful, latency: 2.01
	VFIXUPIMMPSZrrib(2(Class<VR512>) -> 0(Class<VR512>))  [2.01;2.01]
		 Successful, latency: 2.01
	VFIXUPIMMPSZrrib(3(Class<VR512>) -> 0(Class<VR512>))  [2.02;2.02]
		 Successful, latency: 2.02

-----VFIXUPIMMPSZrribk-----
	VFIXUPIMMPSZrribk(1(Class<VR512>) -> 0(Class<VR512>))  [2;2]
		 Successful, latency: 2
	VFIXUPIMMPSZrribk(3(Class<VR512>) -> 0(Class<VR512>))  [2.02;2.02]
		 Successful, latency: 2.02
	VFIXUPIMMPSZrribk(4(Class<VR512>) -> 0(Class<VR512>))  [2.02;2.02]
		 Successful, latency: 2.02

-----VFIXUPIMMPSZrribkz-----
	VFIXUPIMMPSZrribkz(1(Class<VR512>) -> 0(Class<VR512>))  [2.03;2.03]
		 Successful, latency: 2.03
	VFIXUPIMMPSZrribkz(3(Class<VR512>) -> 0(Class<VR512>))  [2.02;2.02]
		 Successful, latency: 2.02
	VFIXUPIMMPSZrribkz(4(Class<VR512>) -> 0(Class<VR512>))  [2.02;2.02]
		 Successful, latency: 2.02

-----VFIXUPIMMPSZrrik-----
	VFIXUPIMMPSZrrik(1(Class<VR512>) -> 0(Class<VR512>))  [2.02;2.02]
		 Successful, latency: 2.02
	VFIXUPIMMPSZrrik(3(Class<VR512>) -> 0(Class<VR512>))  [2.02;2.02]
		 Successful, latency: 2.02
	VFIXUPIMMPSZrrik(4(Class<VR512>) -> 0(Class<VR512>))  [2.02;2.02]
		 Successful, latency: 2.02

-----VFIXUPIMMPSZrrikz-----
	VFIXUPIMMPSZrrikz(1(Class<VR512>) -> 0(Class<VR512>))  [2.01;2.01]
		 Successful, latency: 2.01
	VFIXUPIMMPSZrrikz(3(Class<VR512>) -> 0(Class<VR512>))  [2.02;2.02]
		 Successful, latency: 2.02
	VFIXUPIMMPSZrrikz(4(Class<VR512>) -> 0(Class<VR512>))  [2.02;2.02]
		 Successful, latency: 2.02

-----VFIXUPIMMSDZrri-----
	VFIXUPIMMSDZrri(1(Class<VR128X>) -> 0(Class<VR128X>))  [2.02;2.02]
		 Successful, latency: 2.02
	VFIXUPIMMSDZrri(2(Class<VR128X>) -> 0(Class<VR128X>))  [2.02;2.02]
		 Successful, latency: 2.02
	VFIXUPIMMSDZrri(3(Class<VR128X>) -> 0(Class<VR128X>))  [2.03;2.03]
		 Successful, latency: 2.03

-----VFIXUPIMMSDZrrib-----
	VFIXUPIMMSDZrrib(1(Class<VR128X>) -> 0(Class<VR128X>))  [2.03;2.03]
		 Successful, latency: 2.03
	VFIXUPIMMSDZrrib(2(Class<VR128X>) -> 0(Class<VR128X>))  [2.02;2.02]
		 Successful, latency: 2.02
	VFIXUPIMMSDZrrib(3(Class<VR128X>) -> 0(Class<VR128X>))  [2.02;2.02]
		 Successful, latency: 2.02

-----VFIXUPIMMSDZrribk-----
	VFIXUPIMMSDZrribk(1(Class<VR128X>) -> 0(Class<VR128X>))  [2.03;2.03]
		 Successful, latency: 2.03
	VFIXUPIMMSDZrribk(3(Class<VR128X>) -> 0(Class<VR128X>))  [2.01;2.01]
		 Successful, latency: 2.01
	VFIXUPIMMSDZrribk(4(Class<VR128X>) -> 0(Class<VR128X>))  [2.02;2.02]
		 Successful, latency: 2.02

-----VFIXUPIMMSDZrribkz-----
	VFIXUPIMMSDZrribkz(1(Class<VR128X>) -> 0(Class<VR128X>))  [2.01;2.01]
		 Successful, latency: 2.01
	VFIXUPIMMSDZrribkz(3(Class<VR128X>) -> 0(Class<VR128X>))  [2.02;2.02]
		 Successful, latency: 2.02
	VFIXUPIMMSDZrribkz(4(Class<VR128X>) -> 0(Class<VR128X>))  [2.02;2.02]
		 Successful, latency: 2.02

-----VFIXUPIMMSDZrrik-----
	VFIXUPIMMSDZrrik(1(Class<VR128X>) -> 0(Class<VR128X>))  [2.01;2.01]
		 Successful, latency: 2.01
	VFIXUPIMMSDZrrik(3(Class<VR128X>) -> 0(Class<VR128X>))  [2.03;2.03]
		 Successful, latency: 2.03
	VFIXUPIMMSDZrrik(4(Class<VR128X>) -> 0(Class<VR128X>))  [2.02;2.02]
		 Successful, latency: 2.02

-----VFIXUPIMMSDZrrikz-----
	VFIXUPIMMSDZrrikz(1(Class<VR128X>) -> 0(Class<VR128X>))  [2.02;2.02]
		 Successful, latency: 2.02
	VFIXUPIMMSDZrrikz(3(Class<VR128X>) -> 0(Class<VR128X>))  [2.02;2.02]
		 Successful, latency: 2.02
	VFIXUPIMMSDZrrikz(4(Class<VR128X>) -> 0(Class<VR128X>))  [2.02;2.02]
		 Successful, latency: 2.02

-----VFIXUPIMMSSZrri-----
	VFIXUPIMMSSZrri(1(Class<VR128X>) -> 0(Class<VR128X>))  [2.02;2.02]
		 Successful, latency: 2.02
	VFIXUPIMMSSZrri(2(Class<VR128X>) -> 0(Class<VR128X>))  [2.04;2.04]
		 Successful, latency: 2.04
	VFIXUPIMMSSZrri(3(Class<VR128X>) -> 0(Class<VR128X>))  [2.02;2.02]
		 Successful, latency: 2.02

-----VFIXUPIMMSSZrrib-----
	VFIXUPIMMSSZrrib(1(Class<VR128X>) -> 0(Class<VR128X>))  [2.02;2.02]
		 Successful, latency: 2.02
	VFIXUPIMMSSZrrib(2(Class<VR128X>) -> 0(Class<VR128X>))  [2.02;2.02]
		 Successful, latency: 2.02
	VFIXUPIMMSSZrrib(3(Class<VR128X>) -> 0(Class<VR128X>))  [2.02;2.02]
		 Successful, latency: 2.02

-----VFIXUPIMMSSZrribk-----
	VFIXUPIMMSSZrribk(1(Class<VR128X>) -> 0(Class<VR128X>))  [2.02;2.02]
		 Successful, latency: 2.02
	VFIXUPIMMSSZrribk(3(Class<VR128X>) -> 0(Class<VR128X>))  [2.03;2.03]
		 Successful, latency: 2.03
	VFIXUPIMMSSZrribk(4(Class<VR128X>) -> 0(Class<VR128X>))  [2.01;2.01]
		 Successful, latency: 2.01

-----VFIXUPIMMSSZrribkz-----
	VFIXUPIMMSSZrribkz(1(Class<VR128X>) -> 0(Class<VR128X>))  [2.02;2.02]
		 Successful, latency: 2.02
	VFIXUPIMMSSZrribkz(3(Class<VR128X>) -> 0(Class<VR128X>))  [2.02;2.02]
		 Successful, latency: 2.02
	VFIXUPIMMSSZrribkz(4(Class<VR128X>) -> 0(Class<VR128X>))  [2.02;2.02]
		 Successful, latency: 2.02

-----VFIXUPIMMSSZrrik-----
	VFIXUPIMMSSZrrik(1(Class<VR128X>) -> 0(Class<VR128X>))  [2.02;2.02]
		 Successful, latency: 2.02
	VFIXUPIMMSSZrrik(3(Class<VR128X>) -> 0(Class<VR128X>))  [2.02;2.02]
		 Successful, latency: 2.02
	VFIXUPIMMSSZrrik(4(Class<VR128X>) -> 0(Class<VR128X>))  [2.02;2.02]
		 Successful, latency: 2.02

-----VFIXUPIMMSSZrrikz-----
	VFIXUPIMMSSZrrikz(1(Class<VR128X>) -> 0(Class<VR128X>))  [2.01;2.01]
		 Successful, latency: 2.01
	VFIXUPIMMSSZrrikz(3(Class<VR128X>) -> 0(Class<VR128X>))  [2.01;2.01]
		 Successful, latency: 2.01
	VFIXUPIMMSSZrrikz(4(Class<VR128X>) -> 0(Class<VR128X>))  [2.02;2.02]
		 Successful, latency: 2.02

-----VFMADD132BF16Z128r-----
	VFMADD132BF16Z128r(1(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMADD132BF16Z128r(2(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMADD132BF16Z128r(3(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VFMADD132BF16Z128rk-----
	VFMADD132BF16Z128rk(1(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMADD132BF16Z128rk(3(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMADD132BF16Z128rk(4(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VFMADD132BF16Z128rkz-----
	VFMADD132BF16Z128rkz(1(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMADD132BF16Z128rkz(3(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMADD132BF16Z128rkz(4(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VFMADD132BF16Z256r-----
	VFMADD132BF16Z256r(1(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMADD132BF16Z256r(2(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMADD132BF16Z256r(3(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VFMADD132BF16Z256rk-----
	VFMADD132BF16Z256rk(1(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMADD132BF16Z256rk(3(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMADD132BF16Z256rk(4(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VFMADD132BF16Z256rkz-----
	VFMADD132BF16Z256rkz(1(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMADD132BF16Z256rkz(3(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMADD132BF16Z256rkz(4(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VFMADD132BF16Zr-----
	VFMADD132BF16Zr(1(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMADD132BF16Zr(2(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMADD132BF16Zr(3(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VFMADD132BF16Zrk-----
	VFMADD132BF16Zrk(1(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMADD132BF16Zrk(3(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMADD132BF16Zrk(4(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VFMADD132BF16Zrkz-----
	VFMADD132BF16Zrkz(1(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMADD132BF16Zrkz(3(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMADD132BF16Zrkz(4(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VFMADD132PDYr-----
	VFMADD132PDYr(1(Class<VR256>) -> 0(Class<VR256>))  [4.03;4.03]
		 Successful, latency: 4.03
	VFMADD132PDYr(2(Class<VR256>) -> 0(Class<VR256>))  [4.04;4.04]
		 Successful, latency: 4.04
	VFMADD132PDYr(3(Class<VR256>) -> 0(Class<VR256>))  [4.03;4.03]
		 Successful, latency: 4.03

-----VFMADD132PDZ128r-----
	VFMADD132PDZ128r(1(Class<VR128X>) -> 0(Class<VR128X>))  [4.04;4.04]
		 Successful, latency: 4.04
	VFMADD132PDZ128r(2(Class<VR128X>) -> 0(Class<VR128X>))  [4.05;4.05]
		 Successful, latency: 4.05
	VFMADD132PDZ128r(3(Class<VR128X>) -> 0(Class<VR128X>))  [4.05;4.05]
		 Successful, latency: 4.05

-----VFMADD132PDZ128rk-----
	VFMADD132PDZ128rk(1(Class<VR128X>) -> 0(Class<VR128X>))  [4.03;4.03]
		 Successful, latency: 4.03
	VFMADD132PDZ128rk(3(Class<VR128X>) -> 0(Class<VR128X>))  [4.05;4.05]
		 Successful, latency: 4.05
	VFMADD132PDZ128rk(4(Class<VR128X>) -> 0(Class<VR128X>))  [4.05;4.05]
		 Successful, latency: 4.05

-----VFMADD132PDZ128rkz-----
	VFMADD132PDZ128rkz(1(Class<VR128X>) -> 0(Class<VR128X>))  [4.06;4.06]
		 Successful, latency: 4.06
	VFMADD132PDZ128rkz(3(Class<VR128X>) -> 0(Class<VR128X>))  [4.06;4.06]
		 Successful, latency: 4.06
	VFMADD132PDZ128rkz(4(Class<VR128X>) -> 0(Class<VR128X>))  [4.02;4.02]
		 Successful, latency: 4.02

-----VFMADD132PDZ256r-----
	VFMADD132PDZ256r(1(Class<VR256X>) -> 0(Class<VR256X>))  [4.05;4.05]
		 Successful, latency: 4.05
	VFMADD132PDZ256r(2(Class<VR256X>) -> 0(Class<VR256X>))  [4.03;4.03]
		 Successful, latency: 4.03
	VFMADD132PDZ256r(3(Class<VR256X>) -> 0(Class<VR256X>))  [4.02;4.02]
		 Successful, latency: 4.02

-----VFMADD132PDZ256rb-----
	VFMADD132PDZ256rb(1(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMADD132PDZ256rb(2(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMADD132PDZ256rb(3(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VFMADD132PDZ256rbk-----
	VFMADD132PDZ256rbk(1(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMADD132PDZ256rbk(3(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMADD132PDZ256rbk(4(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VFMADD132PDZ256rbkz-----
	VFMADD132PDZ256rbkz(1(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMADD132PDZ256rbkz(3(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMADD132PDZ256rbkz(4(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VFMADD132PDZ256rk-----
	VFMADD132PDZ256rk(1(Class<VR256X>) -> 0(Class<VR256X>))  [4.06;4.06]
		 Successful, latency: 4.06
	VFMADD132PDZ256rk(3(Class<VR256X>) -> 0(Class<VR256X>))  [4.04;4.04]
		 Successful, latency: 4.04
	VFMADD132PDZ256rk(4(Class<VR256X>) -> 0(Class<VR256X>))  [4.04;4.04]
		 Successful, latency: 4.04

-----VFMADD132PDZ256rkz-----
	VFMADD132PDZ256rkz(1(Class<VR256X>) -> 0(Class<VR256X>))  [4.03;4.03]
		 Successful, latency: 4.03
	VFMADD132PDZ256rkz(3(Class<VR256X>) -> 0(Class<VR256X>))  [4.03;4.03]
		 Successful, latency: 4.03
	VFMADD132PDZ256rkz(4(Class<VR256X>) -> 0(Class<VR256X>))  [4.04;4.04]
		 Successful, latency: 4.04

-----VFMADD132PDZr-----
	VFMADD132PDZr(1(Class<VR512>) -> 0(Class<VR512>))  [4.03;4.03]
		 Successful, latency: 4.03
	VFMADD132PDZr(2(Class<VR512>) -> 0(Class<VR512>))  [4.04;4.04]
		 Successful, latency: 4.04
	VFMADD132PDZr(3(Class<VR512>) -> 0(Class<VR512>))  [4.03;4.03]
		 Successful, latency: 4.03

-----VFMADD132PDZrb-----
	VFMADD132PDZrb(1(Class<VR512>) -> 0(Class<VR512>))  [4.04;4.04]
		 Successful, latency: 4.04
	VFMADD132PDZrb(2(Class<VR512>) -> 0(Class<VR512>))  [4.05;4.05]
		 Successful, latency: 4.05
	VFMADD132PDZrb(3(Class<VR512>) -> 0(Class<VR512>))  [4.04;4.04]
		 Successful, latency: 4.04

-----VFMADD132PDZrbk-----
	VFMADD132PDZrbk(1(Class<VR512>) -> 0(Class<VR512>))  [4.04;4.04]
		 Successful, latency: 4.04
	VFMADD132PDZrbk(3(Class<VR512>) -> 0(Class<VR512>))  [4.07;4.07]
		 Successful, latency: 4.07
	VFMADD132PDZrbk(4(Class<VR512>) -> 0(Class<VR512>))  [4.04;4.04]
		 Successful, latency: 4.04

-----VFMADD132PDZrbkz-----
	VFMADD132PDZrbkz(1(Class<VR512>) -> 0(Class<VR512>))  [4.04;4.04]
		 Successful, latency: 4.04
	VFMADD132PDZrbkz(3(Class<VR512>) -> 0(Class<VR512>))  [4.03;4.03]
		 Successful, latency: 4.03
	VFMADD132PDZrbkz(4(Class<VR512>) -> 0(Class<VR512>))  [4.06;4.06]
		 Successful, latency: 4.06

-----VFMADD132PDZrk-----
	VFMADD132PDZrk(1(Class<VR512>) -> 0(Class<VR512>))  [4.03;4.03]
		 Successful, latency: 4.03
	VFMADD132PDZrk(3(Class<VR512>) -> 0(Class<VR512>))  [4.03;4.03]
		 Successful, latency: 4.03
	VFMADD132PDZrk(4(Class<VR512>) -> 0(Class<VR512>))  [4.05;4.05]
		 Successful, latency: 4.05

-----VFMADD132PDZrkz-----
	VFMADD132PDZrkz(1(Class<VR512>) -> 0(Class<VR512>))  [4.03;4.03]
		 Successful, latency: 4.03
	VFMADD132PDZrkz(3(Class<VR512>) -> 0(Class<VR512>))  [4.04;4.04]
		 Successful, latency: 4.04
	VFMADD132PDZrkz(4(Class<VR512>) -> 0(Class<VR512>))  [4.03;4.03]
		 Successful, latency: 4.03

-----VFMADD132PDr-----
	VFMADD132PDr(1(Class<VR128>) -> 0(Class<VR128>))  [4.05;4.05]
		 Successful, latency: 4.05
	VFMADD132PDr(2(Class<VR128>) -> 0(Class<VR128>))  [4.03;4.03]
		 Successful, latency: 4.03
	VFMADD132PDr(3(Class<VR128>) -> 0(Class<VR128>))  [4.04;4.04]
		 Successful, latency: 4.04

-----VFMADD132PHZ128r-----
	VFMADD132PHZ128r(1(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMADD132PHZ128r(2(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMADD132PHZ128r(3(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VFMADD132PHZ128rk-----
	VFMADD132PHZ128rk(1(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMADD132PHZ128rk(3(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMADD132PHZ128rk(4(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VFMADD132PHZ128rkz-----
	VFMADD132PHZ128rkz(1(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMADD132PHZ128rkz(3(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMADD132PHZ128rkz(4(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VFMADD132PHZ256r-----
	VFMADD132PHZ256r(1(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMADD132PHZ256r(2(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMADD132PHZ256r(3(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VFMADD132PHZ256rb-----
	VFMADD132PHZ256rb(1(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMADD132PHZ256rb(2(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMADD132PHZ256rb(3(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VFMADD132PHZ256rbk-----
	VFMADD132PHZ256rbk(1(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMADD132PHZ256rbk(3(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMADD132PHZ256rbk(4(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VFMADD132PHZ256rbkz-----
	VFMADD132PHZ256rbkz(1(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMADD132PHZ256rbkz(3(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMADD132PHZ256rbkz(4(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VFMADD132PHZ256rk-----
	VFMADD132PHZ256rk(1(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMADD132PHZ256rk(3(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMADD132PHZ256rk(4(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VFMADD132PHZ256rkz-----
	VFMADD132PHZ256rkz(1(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMADD132PHZ256rkz(3(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMADD132PHZ256rkz(4(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VFMADD132PHZr-----
	VFMADD132PHZr(1(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMADD132PHZr(2(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMADD132PHZr(3(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VFMADD132PHZrb-----
	VFMADD132PHZrb(1(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMADD132PHZrb(2(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMADD132PHZrb(3(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VFMADD132PHZrbk-----
	VFMADD132PHZrbk(1(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMADD132PHZrbk(3(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMADD132PHZrbk(4(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VFMADD132PHZrbkz-----
	VFMADD132PHZrbkz(1(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMADD132PHZrbkz(3(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMADD132PHZrbkz(4(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VFMADD132PHZrk-----
	VFMADD132PHZrk(1(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMADD132PHZrk(3(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMADD132PHZrk(4(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VFMADD132PHZrkz-----
	VFMADD132PHZrkz(1(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMADD132PHZrkz(3(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMADD132PHZrkz(4(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VFMADD132PSYr-----
	VFMADD132PSYr(1(Class<VR256>) -> 0(Class<VR256>))  [4.02;4.02]
		 Successful, latency: 4.02
	VFMADD132PSYr(2(Class<VR256>) -> 0(Class<VR256>))  [4.06;4.06]
		 Successful, latency: 4.06
	VFMADD132PSYr(3(Class<VR256>) -> 0(Class<VR256>))  [4.03;4.03]
		 Successful, latency: 4.03

-----VFMADD132PSZ128r-----
	VFMADD132PSZ128r(1(Class<VR128X>) -> 0(Class<VR128X>))  [4.06;4.06]
		 Successful, latency: 4.06
	VFMADD132PSZ128r(2(Class<VR128X>) -> 0(Class<VR128X>))  [4.03;4.03]
		 Successful, latency: 4.03
	VFMADD132PSZ128r(3(Class<VR128X>) -> 0(Class<VR128X>))  [4.03;4.03]
		 Successful, latency: 4.03

-----VFMADD132PSZ128rk-----
	VFMADD132PSZ128rk(1(Class<VR128X>) -> 0(Class<VR128X>))  [4.02;4.02]
		 Successful, latency: 4.02
	VFMADD132PSZ128rk(3(Class<VR128X>) -> 0(Class<VR128X>))  [4.04;4.04]
		 Successful, latency: 4.04
	VFMADD132PSZ128rk(4(Class<VR128X>) -> 0(Class<VR128X>))  [4.05;4.05]
		 Successful, latency: 4.05

-----VFMADD132PSZ128rkz-----
	VFMADD132PSZ128rkz(1(Class<VR128X>) -> 0(Class<VR128X>))  [4.04;4.04]
		 Successful, latency: 4.04
	VFMADD132PSZ128rkz(3(Class<VR128X>) -> 0(Class<VR128X>))  [4.05;4.05]
		 Successful, latency: 4.05
	VFMADD132PSZ128rkz(4(Class<VR128X>) -> 0(Class<VR128X>))  [4.03;4.03]
		 Successful, latency: 4.03

-----VFMADD132PSZ256r-----
	VFMADD132PSZ256r(1(Class<VR256X>) -> 0(Class<VR256X>))  [4.03;4.03]
		 Successful, latency: 4.03
	VFMADD132PSZ256r(2(Class<VR256X>) -> 0(Class<VR256X>))  [4.02;4.02]
		 Successful, latency: 4.02
	VFMADD132PSZ256r(3(Class<VR256X>) -> 0(Class<VR256X>))  [4.04;4.04]
		 Successful, latency: 4.04

-----VFMADD132PSZ256rb-----
	VFMADD132PSZ256rb(1(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMADD132PSZ256rb(2(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMADD132PSZ256rb(3(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VFMADD132PSZ256rbk-----
	VFMADD132PSZ256rbk(1(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMADD132PSZ256rbk(3(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMADD132PSZ256rbk(4(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VFMADD132PSZ256rbkz-----
	VFMADD132PSZ256rbkz(1(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMADD132PSZ256rbkz(3(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMADD132PSZ256rbkz(4(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VFMADD132PSZ256rk-----
	VFMADD132PSZ256rk(1(Class<VR256X>) -> 0(Class<VR256X>))  [4.05;4.05]
		 Successful, latency: 4.05
	VFMADD132PSZ256rk(3(Class<VR256X>) -> 0(Class<VR256X>))  [4.02;4.02]
		 Successful, latency: 4.02
	VFMADD132PSZ256rk(4(Class<VR256X>) -> 0(Class<VR256X>))  [4.05;4.05]
		 Successful, latency: 4.05

-----VFMADD132PSZ256rkz-----
	VFMADD132PSZ256rkz(1(Class<VR256X>) -> 0(Class<VR256X>))  [4.04;4.04]
		 Successful, latency: 4.04
	VFMADD132PSZ256rkz(3(Class<VR256X>) -> 0(Class<VR256X>))  [4.03;4.03]
		 Successful, latency: 4.03
	VFMADD132PSZ256rkz(4(Class<VR256X>) -> 0(Class<VR256X>))  [4.03;4.03]
		 Successful, latency: 4.03

-----VFMADD132PSZr-----
	VFMADD132PSZr(1(Class<VR512>) -> 0(Class<VR512>))  [4.06;4.06]
		 Successful, latency: 4.06
	VFMADD132PSZr(2(Class<VR512>) -> 0(Class<VR512>))  [4.04;4.04]
		 Successful, latency: 4.04
	VFMADD132PSZr(3(Class<VR512>) -> 0(Class<VR512>))  [4.04;4.04]
		 Successful, latency: 4.04

-----VFMADD132PSZrb-----
	VFMADD132PSZrb(1(Class<VR512>) -> 0(Class<VR512>))  [4.04;4.04]
		 Successful, latency: 4.04
	VFMADD132PSZrb(2(Class<VR512>) -> 0(Class<VR512>))  [4.03;4.03]
		 Successful, latency: 4.03
	VFMADD132PSZrb(3(Class<VR512>) -> 0(Class<VR512>))  [4.04;4.04]
		 Successful, latency: 4.04

-----VFMADD132PSZrbk-----
	VFMADD132PSZrbk(1(Class<VR512>) -> 0(Class<VR512>))  [4.03;4.03]
		 Successful, latency: 4.03
	VFMADD132PSZrbk(3(Class<VR512>) -> 0(Class<VR512>))  [4.03;4.03]
		 Successful, latency: 4.03
	VFMADD132PSZrbk(4(Class<VR512>) -> 0(Class<VR512>))  [4.03;4.03]
		 Successful, latency: 4.03

-----VFMADD132PSZrbkz-----
	VFMADD132PSZrbkz(1(Class<VR512>) -> 0(Class<VR512>))  [4.03;4.03]
		 Successful, latency: 4.03
	VFMADD132PSZrbkz(3(Class<VR512>) -> 0(Class<VR512>))  [4.02;4.02]
		 Successful, latency: 4.02
	VFMADD132PSZrbkz(4(Class<VR512>) -> 0(Class<VR512>))  [4.03;4.03]
		 Successful, latency: 4.03

-----VFMADD132PSZrk-----
	VFMADD132PSZrk(1(Class<VR512>) -> 0(Class<VR512>))  [4.04;4.04]
		 Successful, latency: 4.04
	VFMADD132PSZrk(3(Class<VR512>) -> 0(Class<VR512>))  [4.04;4.04]
		 Successful, latency: 4.04
	VFMADD132PSZrk(4(Class<VR512>) -> 0(Class<VR512>))  [4.03;4.03]
		 Successful, latency: 4.03

-----VFMADD132PSZrkz-----
	VFMADD132PSZrkz(1(Class<VR512>) -> 0(Class<VR512>))  [4.03;4.03]
		 Successful, latency: 4.03
	VFMADD132PSZrkz(3(Class<VR512>) -> 0(Class<VR512>))  [4.05;4.05]
		 Successful, latency: 4.05
	VFMADD132PSZrkz(4(Class<VR512>) -> 0(Class<VR512>))  [4.03;4.03]
		 Successful, latency: 4.03

-----VFMADD132PSr-----
	VFMADD132PSr(1(Class<VR128>) -> 0(Class<VR128>))  [4.02;4.02]
		 Successful, latency: 4.02
	VFMADD132PSr(2(Class<VR128>) -> 0(Class<VR128>))  [4.03;4.03]
		 Successful, latency: 4.03
	VFMADD132PSr(3(Class<VR128>) -> 0(Class<VR128>))  [4.07;4.07]
		 Successful, latency: 4.07

-----VFMADD132SDZr-----
	VFMADD132SDZr(1(Class<FR64X>) -> 0(Class<FR64X>))  [4.03;4.03]
		 Successful, latency: 4.03
	VFMADD132SDZr(2(Class<FR64X>) -> 0(Class<FR64X>))  [4.05;4.05]
		 Successful, latency: 4.05
	VFMADD132SDZr(3(Class<FR64X>) -> 0(Class<FR64X>))  [4.03;4.03]
		 Successful, latency: 4.03

-----VFMADD132SDZr_Int-----
	VFMADD132SDZr_Int(1(Class<VR128X>) -> 0(Class<VR128X>))  [4.04;4.04]
		 Successful, latency: 4.04
	VFMADD132SDZr_Int(2(Class<VR128X>) -> 0(Class<VR128X>))  [4.04;4.04]
		 Successful, latency: 4.04
	VFMADD132SDZr_Int(3(Class<VR128X>) -> 0(Class<VR128X>))  [4.03;4.03]
		 Successful, latency: 4.03

-----VFMADD132SDZrb-----
	VFMADD132SDZrb(1(Class<FR64X>) -> 0(Class<FR64X>))  [4.03;4.03]
		 Successful, latency: 4.03
	VFMADD132SDZrb(2(Class<FR64X>) -> 0(Class<FR64X>))  [4.03;4.03]
		 Successful, latency: 4.03
	VFMADD132SDZrb(3(Class<FR64X>) -> 0(Class<FR64X>))  [4.03;4.03]
		 Successful, latency: 4.03

-----VFMADD132SDZrb_Int-----
	VFMADD132SDZrb_Int(1(Class<VR128X>) -> 0(Class<VR128X>))  [4.04;4.04]
		 Successful, latency: 4.04
	VFMADD132SDZrb_Int(2(Class<VR128X>) -> 0(Class<VR128X>))  [4.03;4.03]
		 Successful, latency: 4.03
	VFMADD132SDZrb_Int(3(Class<VR128X>) -> 0(Class<VR128X>))  [4.05;4.05]
		 Successful, latency: 4.05

-----VFMADD132SDZrbk_Int-----
	VFMADD132SDZrbk_Int(1(Class<VR128X>) -> 0(Class<VR128X>))  [4.03;4.03]
		 Successful, latency: 4.03
	VFMADD132SDZrbk_Int(3(Class<VR128X>) -> 0(Class<VR128X>))  [4.05;4.05]
		 Successful, latency: 4.05
	VFMADD132SDZrbk_Int(4(Class<VR128X>) -> 0(Class<VR128X>))  [4.03;4.03]
		 Successful, latency: 4.03

-----VFMADD132SDZrbkz_Int-----
	VFMADD132SDZrbkz_Int(1(Class<VR128X>) -> 0(Class<VR128X>))  [4.03;4.03]
		 Successful, latency: 4.03
	VFMADD132SDZrbkz_Int(3(Class<VR128X>) -> 0(Class<VR128X>))  [4.05;4.05]
		 Successful, latency: 4.05
	VFMADD132SDZrbkz_Int(4(Class<VR128X>) -> 0(Class<VR128X>))  [4.04;4.04]
		 Successful, latency: 4.04

-----VFMADD132SDZrk_Int-----
	VFMADD132SDZrk_Int(1(Class<VR128X>) -> 0(Class<VR128X>))  [4.04;4.04]
		 Successful, latency: 4.04
	VFMADD132SDZrk_Int(3(Class<VR128X>) -> 0(Class<VR128X>))  [4.03;4.03]
		 Successful, latency: 4.03
	VFMADD132SDZrk_Int(4(Class<VR128X>) -> 0(Class<VR128X>))  [4.04;4.04]
		 Successful, latency: 4.04

-----VFMADD132SDZrkz_Int-----
	VFMADD132SDZrkz_Int(1(Class<VR128X>) -> 0(Class<VR128X>))  [4.04;4.04]
		 Successful, latency: 4.04
	VFMADD132SDZrkz_Int(3(Class<VR128X>) -> 0(Class<VR128X>))  [4.03;4.03]
		 Successful, latency: 4.03
	VFMADD132SDZrkz_Int(4(Class<VR128X>) -> 0(Class<VR128X>))  [4.05;4.05]
		 Successful, latency: 4.05

-----VFMADD132SDr-----
	VFMADD132SDr(1(Class<FR64>) -> 0(Class<FR64>))  [4.03;4.03]
		 Successful, latency: 4.03
	VFMADD132SDr(2(Class<FR64>) -> 0(Class<FR64>))  [4.06;4.06]
		 Successful, latency: 4.06
	VFMADD132SDr(3(Class<FR64>) -> 0(Class<FR64>))  [4.04;4.04]
		 Successful, latency: 4.04

-----VFMADD132SDr_Int-----
	VFMADD132SDr_Int(1(Class<VR128>) -> 0(Class<VR128>))  [4.05;4.05]
		 Successful, latency: 4.05
	VFMADD132SDr_Int(2(Class<VR128>) -> 0(Class<VR128>))  [4.04;4.04]
		 Successful, latency: 4.04
	VFMADD132SDr_Int(3(Class<VR128>) -> 0(Class<VR128>))  [4.05;4.05]
		 Successful, latency: 4.05

-----VFMADD132SHZr-----
	VFMADD132SHZr(1(Class<FR16X>) -> 0(Class<FR16X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMADD132SHZr(2(Class<FR16X>) -> 0(Class<FR16X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMADD132SHZr(3(Class<FR16X>) -> 0(Class<FR16X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VFMADD132SHZr_Int-----
	VFMADD132SHZr_Int(1(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMADD132SHZr_Int(2(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMADD132SHZr_Int(3(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VFMADD132SHZrb-----
	VFMADD132SHZrb(1(Class<FR16X>) -> 0(Class<FR16X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMADD132SHZrb(2(Class<FR16X>) -> 0(Class<FR16X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMADD132SHZrb(3(Class<FR16X>) -> 0(Class<FR16X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VFMADD132SHZrb_Int-----
	VFMADD132SHZrb_Int(1(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMADD132SHZrb_Int(2(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMADD132SHZrb_Int(3(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VFMADD132SHZrbk_Int-----
	VFMADD132SHZrbk_Int(1(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMADD132SHZrbk_Int(3(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMADD132SHZrbk_Int(4(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VFMADD132SHZrbkz_Int-----
	VFMADD132SHZrbkz_Int(1(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMADD132SHZrbkz_Int(3(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMADD132SHZrbkz_Int(4(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VFMADD132SHZrk_Int-----
	VFMADD132SHZrk_Int(1(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMADD132SHZrk_Int(3(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMADD132SHZrk_Int(4(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VFMADD132SHZrkz_Int-----
	VFMADD132SHZrkz_Int(1(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMADD132SHZrkz_Int(3(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMADD132SHZrkz_Int(4(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VFMADD132SSZr-----
	VFMADD132SSZr(1(Class<FR32X>) -> 0(Class<FR32X>))  [4.04;4.04]
		 Successful, latency: 4.04
	VFMADD132SSZr(2(Class<FR32X>) -> 0(Class<FR32X>))  [4.05;4.05]
		 Successful, latency: 4.05
	VFMADD132SSZr(3(Class<FR32X>) -> 0(Class<FR32X>))  [4.04;4.04]
		 Successful, latency: 4.04

-----VFMADD132SSZr_Int-----
	VFMADD132SSZr_Int(1(Class<VR128X>) -> 0(Class<VR128X>))  [4.04;4.04]
		 Successful, latency: 4.04
	VFMADD132SSZr_Int(2(Class<VR128X>) -> 0(Class<VR128X>))  [4.03;4.03]
		 Successful, latency: 4.03
	VFMADD132SSZr_Int(3(Class<VR128X>) -> 0(Class<VR128X>))  [4.04;4.04]
		 Successful, latency: 4.04

-----VFMADD132SSZrb-----
	VFMADD132SSZrb(1(Class<FR32X>) -> 0(Class<FR32X>))  [4.03;4.03]
		 Successful, latency: 4.03
	VFMADD132SSZrb(2(Class<FR32X>) -> 0(Class<FR32X>))  [4.02;4.02]
		 Successful, latency: 4.02
	VFMADD132SSZrb(3(Class<FR32X>) -> 0(Class<FR32X>))  [4.05;4.05]
		 Successful, latency: 4.05

-----VFMADD132SSZrb_Int-----
	VFMADD132SSZrb_Int(1(Class<VR128X>) -> 0(Class<VR128X>))  [4.05;4.05]
		 Successful, latency: 4.05
	VFMADD132SSZrb_Int(2(Class<VR128X>) -> 0(Class<VR128X>))  [4.02;4.02]
		 Successful, latency: 4.02
	VFMADD132SSZrb_Int(3(Class<VR128X>) -> 0(Class<VR128X>))  [4.04;4.04]
		 Successful, latency: 4.04

-----VFMADD132SSZrbk_Int-----
	VFMADD132SSZrbk_Int(1(Class<VR128X>) -> 0(Class<VR128X>))  [4.02;4.02]
		 Successful, latency: 4.02
	VFMADD132SSZrbk_Int(3(Class<VR128X>) -> 0(Class<VR128X>))  [4.03;4.03]
		 Successful, latency: 4.03
	VFMADD132SSZrbk_Int(4(Class<VR128X>) -> 0(Class<VR128X>))  [4.04;4.04]
		 Successful, latency: 4.04

-----VFMADD132SSZrbkz_Int-----
	VFMADD132SSZrbkz_Int(1(Class<VR128X>) -> 0(Class<VR128X>))  [4.04;4.04]
		 Successful, latency: 4.04
	VFMADD132SSZrbkz_Int(3(Class<VR128X>) -> 0(Class<VR128X>))  [4.03;4.03]
		 Successful, latency: 4.03
	VFMADD132SSZrbkz_Int(4(Class<VR128X>) -> 0(Class<VR128X>))  [4.04;4.04]
		 Successful, latency: 4.04

-----VFMADD132SSZrk_Int-----
	VFMADD132SSZrk_Int(1(Class<VR128X>) -> 0(Class<VR128X>))  [4.04;4.04]
		 Successful, latency: 4.04
	VFMADD132SSZrk_Int(3(Class<VR128X>) -> 0(Class<VR128X>))  [4.03;4.03]
		 Successful, latency: 4.03
	VFMADD132SSZrk_Int(4(Class<VR128X>) -> 0(Class<VR128X>))  [4.04;4.04]
		 Successful, latency: 4.04

-----VFMADD132SSZrkz_Int-----
	VFMADD132SSZrkz_Int(1(Class<VR128X>) -> 0(Class<VR128X>))  [4.06;4.06]
		 Successful, latency: 4.06
	VFMADD132SSZrkz_Int(3(Class<VR128X>) -> 0(Class<VR128X>))  [4.02;4.02]
		 Successful, latency: 4.02
	VFMADD132SSZrkz_Int(4(Class<VR128X>) -> 0(Class<VR128X>))  [4.04;4.04]
		 Successful, latency: 4.04

-----VFMADD132SSr-----
	VFMADD132SSr(1(Class<FR32>) -> 0(Class<FR32>))  [4.04;4.04]
		 Successful, latency: 4.04
	VFMADD132SSr(2(Class<FR32>) -> 0(Class<FR32>))  [4.03;4.03]
		 Successful, latency: 4.03
	VFMADD132SSr(3(Class<FR32>) -> 0(Class<FR32>))  [4.05;4.05]
		 Successful, latency: 4.05

-----VFMADD132SSr_Int-----
	VFMADD132SSr_Int(1(Class<VR128>) -> 0(Class<VR128>))  [4.04;4.04]
		 Successful, latency: 4.04
	VFMADD132SSr_Int(2(Class<VR128>) -> 0(Class<VR128>))  [4.03;4.03]
		 Successful, latency: 4.03
	VFMADD132SSr_Int(3(Class<VR128>) -> 0(Class<VR128>))  [4.03;4.03]
		 Successful, latency: 4.03

-----VFMADD213BF16Z128r-----
	VFMADD213BF16Z128r(1(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMADD213BF16Z128r(2(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMADD213BF16Z128r(3(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VFMADD213BF16Z128rk-----
	VFMADD213BF16Z128rk(1(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMADD213BF16Z128rk(3(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMADD213BF16Z128rk(4(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VFMADD213BF16Z128rkz-----
	VFMADD213BF16Z128rkz(1(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMADD213BF16Z128rkz(3(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMADD213BF16Z128rkz(4(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VFMADD213BF16Z256r-----
	VFMADD213BF16Z256r(1(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMADD213BF16Z256r(2(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMADD213BF16Z256r(3(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VFMADD213BF16Z256rk-----
	VFMADD213BF16Z256rk(1(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMADD213BF16Z256rk(3(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMADD213BF16Z256rk(4(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VFMADD213BF16Z256rkz-----
	VFMADD213BF16Z256rkz(1(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMADD213BF16Z256rkz(3(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMADD213BF16Z256rkz(4(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VFMADD213BF16Zr-----
	VFMADD213BF16Zr(1(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMADD213BF16Zr(2(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMADD213BF16Zr(3(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VFMADD213BF16Zrk-----
	VFMADD213BF16Zrk(1(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMADD213BF16Zrk(3(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMADD213BF16Zrk(4(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VFMADD213BF16Zrkz-----
	VFMADD213BF16Zrkz(1(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMADD213BF16Zrkz(3(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMADD213BF16Zrkz(4(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VFMADD213PDYr-----
	VFMADD213PDYr(1(Class<VR256>) -> 0(Class<VR256>))  [4.03;4.03]
		 Successful, latency: 4.03
	VFMADD213PDYr(2(Class<VR256>) -> 0(Class<VR256>))  [4.07;4.07]
		 Successful, latency: 4.07
	VFMADD213PDYr(3(Class<VR256>) -> 0(Class<VR256>))  [4.04;4.04]
		 Successful, latency: 4.04

-----VFMADD213PDZ128r-----
	VFMADD213PDZ128r(1(Class<VR128X>) -> 0(Class<VR128X>))  [4.05;4.05]
		 Successful, latency: 4.05
	VFMADD213PDZ128r(2(Class<VR128X>) -> 0(Class<VR128X>))  [4.03;4.03]
		 Successful, latency: 4.03
	VFMADD213PDZ128r(3(Class<VR128X>) -> 0(Class<VR128X>))  [4.05;4.05]
		 Successful, latency: 4.05

-----VFMADD213PDZ128rk-----
	VFMADD213PDZ128rk(1(Class<VR128X>) -> 0(Class<VR128X>))  [4.03;4.03]
		 Successful, latency: 4.03
	VFMADD213PDZ128rk(3(Class<VR128X>) -> 0(Class<VR128X>))  [4.05;4.05]
		 Successful, latency: 4.05
	VFMADD213PDZ128rk(4(Class<VR128X>) -> 0(Class<VR128X>))  [4.04;4.04]
		 Successful, latency: 4.04

-----VFMADD213PDZ128rkz-----
	VFMADD213PDZ128rkz(1(Class<VR128X>) -> 0(Class<VR128X>))  [4.05;4.05]
		 Successful, latency: 4.05
	VFMADD213PDZ128rkz(3(Class<VR128X>) -> 0(Class<VR128X>))  [4.03;4.03]
		 Successful, latency: 4.03
	VFMADD213PDZ128rkz(4(Class<VR128X>) -> 0(Class<VR128X>))  [4.05;4.05]
		 Successful, latency: 4.05

-----VFMADD213PDZ256r-----
	VFMADD213PDZ256r(1(Class<VR256X>) -> 0(Class<VR256X>))  [4.04;4.04]
		 Successful, latency: 4.04
	VFMADD213PDZ256r(2(Class<VR256X>) -> 0(Class<VR256X>))  [4.04;4.04]
		 Successful, latency: 4.04
	VFMADD213PDZ256r(3(Class<VR256X>) -> 0(Class<VR256X>))  [4.04;4.04]
		 Successful, latency: 4.04

-----VFMADD213PDZ256rb-----
	VFMADD213PDZ256rb(1(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMADD213PDZ256rb(2(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMADD213PDZ256rb(3(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VFMADD213PDZ256rbk-----
	VFMADD213PDZ256rbk(1(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMADD213PDZ256rbk(3(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMADD213PDZ256rbk(4(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VFMADD213PDZ256rbkz-----
	VFMADD213PDZ256rbkz(1(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMADD213PDZ256rbkz(3(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMADD213PDZ256rbkz(4(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VFMADD213PDZ256rk-----
	VFMADD213PDZ256rk(1(Class<VR256X>) -> 0(Class<VR256X>))  [4.03;4.03]
		 Successful, latency: 4.03
	VFMADD213PDZ256rk(3(Class<VR256X>) -> 0(Class<VR256X>))  [4.04;4.04]
		 Successful, latency: 4.04
	VFMADD213PDZ256rk(4(Class<VR256X>) -> 0(Class<VR256X>))  [4.04;4.04]
		 Successful, latency: 4.04

-----VFMADD213PDZ256rkz-----
	VFMADD213PDZ256rkz(1(Class<VR256X>) -> 0(Class<VR256X>))  [4.05;4.05]
		 Successful, latency: 4.05
	VFMADD213PDZ256rkz(3(Class<VR256X>) -> 0(Class<VR256X>))  [4.03;4.03]
		 Successful, latency: 4.03
	VFMADD213PDZ256rkz(4(Class<VR256X>) -> 0(Class<VR256X>))  [4.05;4.05]
		 Successful, latency: 4.05

-----VFMADD213PDZr-----
	VFMADD213PDZr(1(Class<VR512>) -> 0(Class<VR512>))  [4.03;4.03]
		 Successful, latency: 4.03
	VFMADD213PDZr(2(Class<VR512>) -> 0(Class<VR512>))  [4.04;4.04]
		 Successful, latency: 4.04
	VFMADD213PDZr(3(Class<VR512>) -> 0(Class<VR512>))  [4.05;4.05]
		 Successful, latency: 4.05

-----VFMADD213PDZrb-----
	VFMADD213PDZrb(1(Class<VR512>) -> 0(Class<VR512>))  [4.03;4.03]
		 Successful, latency: 4.03
	VFMADD213PDZrb(2(Class<VR512>) -> 0(Class<VR512>))  [4.04;4.04]
		 Successful, latency: 4.04
	VFMADD213PDZrb(3(Class<VR512>) -> 0(Class<VR512>))  [4.03;4.03]
		 Successful, latency: 4.03

-----VFMADD213PDZrbk-----
	VFMADD213PDZrbk(1(Class<VR512>) -> 0(Class<VR512>))  [4.04;4.04]
		 Successful, latency: 4.04
	VFMADD213PDZrbk(3(Class<VR512>) -> 0(Class<VR512>))  [4.02;4.02]
		 Successful, latency: 4.02
	VFMADD213PDZrbk(4(Class<VR512>) -> 0(Class<VR512>))  [4.04;4.04]
		 Successful, latency: 4.04

-----VFMADD213PDZrbkz-----
	VFMADD213PDZrbkz(1(Class<VR512>) -> 0(Class<VR512>))  [4.04;4.04]
		 Successful, latency: 4.04
	VFMADD213PDZrbkz(3(Class<VR512>) -> 0(Class<VR512>))  [4.04;4.04]
		 Successful, latency: 4.04
	VFMADD213PDZrbkz(4(Class<VR512>) -> 0(Class<VR512>))  [4.06;4.06]
		 Successful, latency: 4.06

-----VFMADD213PDZrk-----
	VFMADD213PDZrk(1(Class<VR512>) -> 0(Class<VR512>))  [4.02;4.02]
		 Successful, latency: 4.02
	VFMADD213PDZrk(3(Class<VR512>) -> 0(Class<VR512>))  [4.03;4.03]
		 Successful, latency: 4.03
	VFMADD213PDZrk(4(Class<VR512>) -> 0(Class<VR512>))  [4.03;4.03]
		 Successful, latency: 4.03

-----VFMADD213PDZrkz-----
	VFMADD213PDZrkz(1(Class<VR512>) -> 0(Class<VR512>))  [4.03;4.03]
		 Successful, latency: 4.03
	VFMADD213PDZrkz(3(Class<VR512>) -> 0(Class<VR512>))  [4.03;4.03]
		 Successful, latency: 4.03
	VFMADD213PDZrkz(4(Class<VR512>) -> 0(Class<VR512>))  [4.04;4.04]
		 Successful, latency: 4.04

-----VFMADD213PDr-----
	VFMADD213PDr(1(Class<VR128>) -> 0(Class<VR128>))  [4.05;4.05]
		 Successful, latency: 4.05
	VFMADD213PDr(2(Class<VR128>) -> 0(Class<VR128>))  [4.04;4.04]
		 Successful, latency: 4.04
	VFMADD213PDr(3(Class<VR128>) -> 0(Class<VR128>))  [4.04;4.04]
		 Successful, latency: 4.04

-----VFMADD213PHZ128r-----
	VFMADD213PHZ128r(1(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMADD213PHZ128r(2(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMADD213PHZ128r(3(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VFMADD213PHZ128rk-----
	VFMADD213PHZ128rk(1(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMADD213PHZ128rk(3(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMADD213PHZ128rk(4(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VFMADD213PHZ128rkz-----
	VFMADD213PHZ128rkz(1(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMADD213PHZ128rkz(3(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMADD213PHZ128rkz(4(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VFMADD213PHZ256r-----
	VFMADD213PHZ256r(1(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMADD213PHZ256r(2(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMADD213PHZ256r(3(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VFMADD213PHZ256rb-----
	VFMADD213PHZ256rb(1(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMADD213PHZ256rb(2(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMADD213PHZ256rb(3(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VFMADD213PHZ256rbk-----
	VFMADD213PHZ256rbk(1(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMADD213PHZ256rbk(3(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMADD213PHZ256rbk(4(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VFMADD213PHZ256rbkz-----
	VFMADD213PHZ256rbkz(1(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMADD213PHZ256rbkz(3(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMADD213PHZ256rbkz(4(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VFMADD213PHZ256rk-----
	VFMADD213PHZ256rk(1(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMADD213PHZ256rk(3(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMADD213PHZ256rk(4(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VFMADD213PHZ256rkz-----
	VFMADD213PHZ256rkz(1(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMADD213PHZ256rkz(3(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMADD213PHZ256rkz(4(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VFMADD213PHZr-----
	VFMADD213PHZr(1(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMADD213PHZr(2(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMADD213PHZr(3(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VFMADD213PHZrb-----
	VFMADD213PHZrb(1(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMADD213PHZrb(2(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMADD213PHZrb(3(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VFMADD213PHZrbk-----
	VFMADD213PHZrbk(1(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMADD213PHZrbk(3(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMADD213PHZrbk(4(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VFMADD213PHZrbkz-----
	VFMADD213PHZrbkz(1(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMADD213PHZrbkz(3(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMADD213PHZrbkz(4(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VFMADD213PHZrk-----
	VFMADD213PHZrk(1(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMADD213PHZrk(3(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMADD213PHZrk(4(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VFMADD213PHZrkz-----
	VFMADD213PHZrkz(1(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMADD213PHZrkz(3(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMADD213PHZrkz(4(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VFMADD213PSYr-----
	VFMADD213PSYr(1(Class<VR256>) -> 0(Class<VR256>))  [4.04;4.04]
		 Successful, latency: 4.04
	VFMADD213PSYr(2(Class<VR256>) -> 0(Class<VR256>))  [4.04;4.04]
		 Successful, latency: 4.04
	VFMADD213PSYr(3(Class<VR256>) -> 0(Class<VR256>))  [4.03;4.03]
		 Successful, latency: 4.03

-----VFMADD213PSZ128r-----
	VFMADD213PSZ128r(1(Class<VR128X>) -> 0(Class<VR128X>))  [4.05;4.05]
		 Successful, latency: 4.05
	VFMADD213PSZ128r(2(Class<VR128X>) -> 0(Class<VR128X>))  [4.03;4.03]
		 Successful, latency: 4.03
	VFMADD213PSZ128r(3(Class<VR128X>) -> 0(Class<VR128X>))  [4.04;4.04]
		 Successful, latency: 4.04

-----VFMADD213PSZ128rk-----
	VFMADD213PSZ128rk(1(Class<VR128X>) -> 0(Class<VR128X>))  [4.03;4.03]
		 Successful, latency: 4.03
	VFMADD213PSZ128rk(3(Class<VR128X>) -> 0(Class<VR128X>))  [4.02;4.02]
		 Successful, latency: 4.02
	VFMADD213PSZ128rk(4(Class<VR128X>) -> 0(Class<VR128X>))  [4.03;4.03]
		 Successful, latency: 4.03

-----VFMADD213PSZ128rkz-----
	VFMADD213PSZ128rkz(1(Class<VR128X>) -> 0(Class<VR128X>))  [4.03;4.03]
		 Successful, latency: 4.03
	VFMADD213PSZ128rkz(3(Class<VR128X>) -> 0(Class<VR128X>))  [4.04;4.04]
		 Successful, latency: 4.04
	VFMADD213PSZ128rkz(4(Class<VR128X>) -> 0(Class<VR128X>))  [4.05;4.05]
		 Successful, latency: 4.05

-----VFMADD213PSZ256r-----
	VFMADD213PSZ256r(1(Class<VR256X>) -> 0(Class<VR256X>))  [4.06;4.06]
		 Successful, latency: 4.06
	VFMADD213PSZ256r(2(Class<VR256X>) -> 0(Class<VR256X>))  [4.03;4.03]
		 Successful, latency: 4.03
	VFMADD213PSZ256r(3(Class<VR256X>) -> 0(Class<VR256X>))  [4.04;4.04]
		 Successful, latency: 4.04

-----VFMADD213PSZ256rb-----
	VFMADD213PSZ256rb(1(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMADD213PSZ256rb(2(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMADD213PSZ256rb(3(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VFMADD213PSZ256rbk-----
	VFMADD213PSZ256rbk(1(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMADD213PSZ256rbk(3(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMADD213PSZ256rbk(4(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VFMADD213PSZ256rbkz-----
	VFMADD213PSZ256rbkz(1(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMADD213PSZ256rbkz(3(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMADD213PSZ256rbkz(4(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VFMADD213PSZ256rk-----
	VFMADD213PSZ256rk(1(Class<VR256X>) -> 0(Class<VR256X>))  [4.04;4.04]
		 Successful, latency: 4.04
	VFMADD213PSZ256rk(3(Class<VR256X>) -> 0(Class<VR256X>))  [4.02;4.02]
		 Successful, latency: 4.02
	VFMADD213PSZ256rk(4(Class<VR256X>) -> 0(Class<VR256X>))  [4.05;4.05]
		 Successful, latency: 4.05

-----VFMADD213PSZ256rkz-----
	VFMADD213PSZ256rkz(1(Class<VR256X>) -> 0(Class<VR256X>))  [4.03;4.03]
		 Successful, latency: 4.03
	VFMADD213PSZ256rkz(3(Class<VR256X>) -> 0(Class<VR256X>))  [4.05;4.05]
		 Successful, latency: 4.05
	VFMADD213PSZ256rkz(4(Class<VR256X>) -> 0(Class<VR256X>))  [4.04;4.04]
		 Successful, latency: 4.04

-----VFMADD213PSZr-----
	VFMADD213PSZr(1(Class<VR512>) -> 0(Class<VR512>))  [4.03;4.03]
		 Successful, latency: 4.03
	VFMADD213PSZr(2(Class<VR512>) -> 0(Class<VR512>))  [4.02;4.02]
		 Successful, latency: 4.02
	VFMADD213PSZr(3(Class<VR512>) -> 0(Class<VR512>))  [4.03;4.03]
		 Successful, latency: 4.03

-----VFMADD213PSZrb-----
	VFMADD213PSZrb(1(Class<VR512>) -> 0(Class<VR512>))  [4.03;4.03]
		 Successful, latency: 4.03
	VFMADD213PSZrb(2(Class<VR512>) -> 0(Class<VR512>))  [4.04;4.04]
		 Successful, latency: 4.04
	VFMADD213PSZrb(3(Class<VR512>) -> 0(Class<VR512>))  [4.05;4.05]
		 Successful, latency: 4.05

-----VFMADD213PSZrbk-----
	VFMADD213PSZrbk(1(Class<VR512>) -> 0(Class<VR512>))  [4.04;4.04]
		 Successful, latency: 4.04
	VFMADD213PSZrbk(3(Class<VR512>) -> 0(Class<VR512>))  [4.04;4.04]
		 Successful, latency: 4.04
	VFMADD213PSZrbk(4(Class<VR512>) -> 0(Class<VR512>))  [4.04;4.04]
		 Successful, latency: 4.04

-----VFMADD213PSZrbkz-----
	VFMADD213PSZrbkz(1(Class<VR512>) -> 0(Class<VR512>))  [4.06;4.06]
		 Successful, latency: 4.06
	VFMADD213PSZrbkz(3(Class<VR512>) -> 0(Class<VR512>))  [4.04;4.04]
		 Successful, latency: 4.04
	VFMADD213PSZrbkz(4(Class<VR512>) -> 0(Class<VR512>))  [4.04;4.04]
		 Successful, latency: 4.04

-----VFMADD213PSZrk-----
	VFMADD213PSZrk(1(Class<VR512>) -> 0(Class<VR512>))  [4.04;4.04]
		 Successful, latency: 4.04
	VFMADD213PSZrk(3(Class<VR512>) -> 0(Class<VR512>))  [4.02;4.02]
		 Successful, latency: 4.02
	VFMADD213PSZrk(4(Class<VR512>) -> 0(Class<VR512>))  [4.05;4.05]
		 Successful, latency: 4.05

-----VFMADD213PSZrkz-----
	VFMADD213PSZrkz(1(Class<VR512>) -> 0(Class<VR512>))  [4.04;4.04]
		 Successful, latency: 4.04
	VFMADD213PSZrkz(3(Class<VR512>) -> 0(Class<VR512>))  [4.05;4.05]
		 Successful, latency: 4.05
	VFMADD213PSZrkz(4(Class<VR512>) -> 0(Class<VR512>))  [4.06;4.06]
		 Successful, latency: 4.06

-----VFMADD213PSr-----
	VFMADD213PSr(1(Class<VR128>) -> 0(Class<VR128>))  [4.06;4.06]
		 Successful, latency: 4.06
	VFMADD213PSr(2(Class<VR128>) -> 0(Class<VR128>))  [4.03;4.03]
		 Successful, latency: 4.03
	VFMADD213PSr(3(Class<VR128>) -> 0(Class<VR128>))  [4.05;4.05]
		 Successful, latency: 4.05

-----VFMADD213SDZr-----
	VFMADD213SDZr(1(Class<FR64X>) -> 0(Class<FR64X>))  [4.05;4.05]
		 Successful, latency: 4.05
	VFMADD213SDZr(2(Class<FR64X>) -> 0(Class<FR64X>))  [4.03;4.03]
		 Successful, latency: 4.03
	VFMADD213SDZr(3(Class<FR64X>) -> 0(Class<FR64X>))  [4.03;4.03]
		 Successful, latency: 4.03

-----VFMADD213SDZr_Int-----
	VFMADD213SDZr_Int(1(Class<VR128X>) -> 0(Class<VR128X>))  [4.05;4.05]
		 Successful, latency: 4.05
	VFMADD213SDZr_Int(2(Class<VR128X>) -> 0(Class<VR128X>))  [4.05;4.05]
		 Successful, latency: 4.05
	VFMADD213SDZr_Int(3(Class<VR128X>) -> 0(Class<VR128X>))  [4.04;4.04]
		 Successful, latency: 4.04

-----VFMADD213SDZrb-----
	VFMADD213SDZrb(1(Class<FR64X>) -> 0(Class<FR64X>))  [4.06;4.06]
		 Successful, latency: 4.06
	VFMADD213SDZrb(2(Class<FR64X>) -> 0(Class<FR64X>))  [4.05;4.05]
		 Successful, latency: 4.05
	VFMADD213SDZrb(3(Class<FR64X>) -> 0(Class<FR64X>))  [4.05;4.05]
		 Successful, latency: 4.05

-----VFMADD213SDZrb_Int-----
	VFMADD213SDZrb_Int(1(Class<VR128X>) -> 0(Class<VR128X>))  [4.05;4.05]
		 Successful, latency: 4.05
	VFMADD213SDZrb_Int(2(Class<VR128X>) -> 0(Class<VR128X>))  [4.03;4.03]
		 Successful, latency: 4.03
	VFMADD213SDZrb_Int(3(Class<VR128X>) -> 0(Class<VR128X>))  [4.04;4.04]
		 Successful, latency: 4.04

-----VFMADD213SDZrbk_Int-----
	VFMADD213SDZrbk_Int(1(Class<VR128X>) -> 0(Class<VR128X>))  [4.04;4.04]
		 Successful, latency: 4.04
	VFMADD213SDZrbk_Int(3(Class<VR128X>) -> 0(Class<VR128X>))  [4.05;4.05]
		 Successful, latency: 4.05
	VFMADD213SDZrbk_Int(4(Class<VR128X>) -> 0(Class<VR128X>))  [4.06;4.06]
		 Successful, latency: 4.06

-----VFMADD213SDZrbkz_Int-----
	VFMADD213SDZrbkz_Int(1(Class<VR128X>) -> 0(Class<VR128X>))  [4.04;4.04]
		 Successful, latency: 4.04
	VFMADD213SDZrbkz_Int(3(Class<VR128X>) -> 0(Class<VR128X>))  [4.03;4.03]
		 Successful, latency: 4.03
	VFMADD213SDZrbkz_Int(4(Class<VR128X>) -> 0(Class<VR128X>))  [4.05;4.05]
		 Successful, latency: 4.05

-----VFMADD213SDZrk_Int-----
	VFMADD213SDZrk_Int(1(Class<VR128X>) -> 0(Class<VR128X>))  [4.04;4.04]
		 Successful, latency: 4.04
	VFMADD213SDZrk_Int(3(Class<VR128X>) -> 0(Class<VR128X>))  [4.04;4.04]
		 Successful, latency: 4.04
	VFMADD213SDZrk_Int(4(Class<VR128X>) -> 0(Class<VR128X>))  [4.03;4.03]
		 Successful, latency: 4.03

-----VFMADD213SDZrkz_Int-----
	VFMADD213SDZrkz_Int(1(Class<VR128X>) -> 0(Class<VR128X>))  [4.05;4.05]
		 Successful, latency: 4.05
	VFMADD213SDZrkz_Int(3(Class<VR128X>) -> 0(Class<VR128X>))  [4.05;4.05]
		 Successful, latency: 4.05
	VFMADD213SDZrkz_Int(4(Class<VR128X>) -> 0(Class<VR128X>))  [4.08;4.08]
		 Successful, latency: 4.08

-----VFMADD213SDr-----
	VFMADD213SDr(1(Class<FR64>) -> 0(Class<FR64>))  [4.07;4.07]
		 Successful, latency: 4.07
	VFMADD213SDr(2(Class<FR64>) -> 0(Class<FR64>))  [4.04;4.04]
		 Successful, latency: 4.04
	VFMADD213SDr(3(Class<FR64>) -> 0(Class<FR64>))  [4.03;4.03]
		 Successful, latency: 4.03

-----VFMADD213SDr_Int-----
	VFMADD213SDr_Int(1(Class<VR128>) -> 0(Class<VR128>))  [4.04;4.04]
		 Successful, latency: 4.04
	VFMADD213SDr_Int(2(Class<VR128>) -> 0(Class<VR128>))  [4.03;4.03]
		 Successful, latency: 4.03
	VFMADD213SDr_Int(3(Class<VR128>) -> 0(Class<VR128>))  [4.03;4.03]
		 Successful, latency: 4.03

-----VFMADD213SHZr-----
	VFMADD213SHZr(1(Class<FR16X>) -> 0(Class<FR16X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMADD213SHZr(2(Class<FR16X>) -> 0(Class<FR16X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMADD213SHZr(3(Class<FR16X>) -> 0(Class<FR16X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VFMADD213SHZr_Int-----
	VFMADD213SHZr_Int(1(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMADD213SHZr_Int(2(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMADD213SHZr_Int(3(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VFMADD213SHZrb-----
	VFMADD213SHZrb(1(Class<FR16X>) -> 0(Class<FR16X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMADD213SHZrb(2(Class<FR16X>) -> 0(Class<FR16X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMADD213SHZrb(3(Class<FR16X>) -> 0(Class<FR16X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VFMADD213SHZrb_Int-----
	VFMADD213SHZrb_Int(1(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMADD213SHZrb_Int(2(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMADD213SHZrb_Int(3(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VFMADD213SHZrbk_Int-----
	VFMADD213SHZrbk_Int(1(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMADD213SHZrbk_Int(3(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMADD213SHZrbk_Int(4(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VFMADD213SHZrbkz_Int-----
	VFMADD213SHZrbkz_Int(1(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMADD213SHZrbkz_Int(3(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMADD213SHZrbkz_Int(4(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VFMADD213SHZrk_Int-----
	VFMADD213SHZrk_Int(1(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMADD213SHZrk_Int(3(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMADD213SHZrk_Int(4(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VFMADD213SHZrkz_Int-----
	VFMADD213SHZrkz_Int(1(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMADD213SHZrkz_Int(3(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMADD213SHZrkz_Int(4(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VFMADD213SSZr-----
	VFMADD213SSZr(1(Class<FR32X>) -> 0(Class<FR32X>))  [4.03;4.03]
		 Successful, latency: 4.03
	VFMADD213SSZr(2(Class<FR32X>) -> 0(Class<FR32X>))  [4.03;4.03]
		 Successful, latency: 4.03
	VFMADD213SSZr(3(Class<FR32X>) -> 0(Class<FR32X>))  [4.03;4.03]
		 Successful, latency: 4.03

-----VFMADD213SSZr_Int-----
	VFMADD213SSZr_Int(1(Class<VR128X>) -> 0(Class<VR128X>))  [4.02;4.02]
		 Successful, latency: 4.02
	VFMADD213SSZr_Int(2(Class<VR128X>) -> 0(Class<VR128X>))  [4.03;4.03]
		 Successful, latency: 4.03
	VFMADD213SSZr_Int(3(Class<VR128X>) -> 0(Class<VR128X>))  [4.03;4.03]
		 Successful, latency: 4.03

-----VFMADD213SSZrb-----
	VFMADD213SSZrb(1(Class<FR32X>) -> 0(Class<FR32X>))  [4.03;4.03]
		 Successful, latency: 4.03
	VFMADD213SSZrb(2(Class<FR32X>) -> 0(Class<FR32X>))  [4.02;4.02]
		 Successful, latency: 4.02
	VFMADD213SSZrb(3(Class<FR32X>) -> 0(Class<FR32X>))  [4.04;4.04]
		 Successful, latency: 4.04

-----VFMADD213SSZrb_Int-----
	VFMADD213SSZrb_Int(1(Class<VR128X>) -> 0(Class<VR128X>))  [4.02;4.02]
		 Successful, latency: 4.02
	VFMADD213SSZrb_Int(2(Class<VR128X>) -> 0(Class<VR128X>))  [4.05;4.05]
		 Successful, latency: 4.05
	VFMADD213SSZrb_Int(3(Class<VR128X>) -> 0(Class<VR128X>))  [4.03;4.03]
		 Successful, latency: 4.03

-----VFMADD213SSZrbk_Int-----
	VFMADD213SSZrbk_Int(1(Class<VR128X>) -> 0(Class<VR128X>))  [4.03;4.03]
		 Successful, latency: 4.03
	VFMADD213SSZrbk_Int(3(Class<VR128X>) -> 0(Class<VR128X>))  [4.03;4.03]
		 Successful, latency: 4.03
	VFMADD213SSZrbk_Int(4(Class<VR128X>) -> 0(Class<VR128X>))  [4.03;4.03]
		 Successful, latency: 4.03

-----VFMADD213SSZrbkz_Int-----
	VFMADD213SSZrbkz_Int(1(Class<VR128X>) -> 0(Class<VR128X>))  [4.04;4.04]
		 Successful, latency: 4.04
	VFMADD213SSZrbkz_Int(3(Class<VR128X>) -> 0(Class<VR128X>))  [4.04;4.04]
		 Successful, latency: 4.04
	VFMADD213SSZrbkz_Int(4(Class<VR128X>) -> 0(Class<VR128X>))  [4.05;4.05]
		 Successful, latency: 4.05

-----VFMADD213SSZrk_Int-----
	VFMADD213SSZrk_Int(1(Class<VR128X>) -> 0(Class<VR128X>))  [4.03;4.03]
		 Successful, latency: 4.03
	VFMADD213SSZrk_Int(3(Class<VR128X>) -> 0(Class<VR128X>))  [4.04;4.04]
		 Successful, latency: 4.04
	VFMADD213SSZrk_Int(4(Class<VR128X>) -> 0(Class<VR128X>))  [4.03;4.03]
		 Successful, latency: 4.03

-----VFMADD213SSZrkz_Int-----
	VFMADD213SSZrkz_Int(1(Class<VR128X>) -> 0(Class<VR128X>))  [4.03;4.03]
		 Successful, latency: 4.03
	VFMADD213SSZrkz_Int(3(Class<VR128X>) -> 0(Class<VR128X>))  [4.03;4.03]
		 Successful, latency: 4.03
	VFMADD213SSZrkz_Int(4(Class<VR128X>) -> 0(Class<VR128X>))  [4.02;4.02]
		 Successful, latency: 4.02

-----VFMADD213SSr-----
	VFMADD213SSr(1(Class<FR32>) -> 0(Class<FR32>))  [4.03;4.03]
		 Successful, latency: 4.03
	VFMADD213SSr(2(Class<FR32>) -> 0(Class<FR32>))  [4.05;4.05]
		 Successful, latency: 4.05
	VFMADD213SSr(3(Class<FR32>) -> 0(Class<FR32>))  [4.03;4.03]
		 Successful, latency: 4.03

-----VFMADD213SSr_Int-----
	VFMADD213SSr_Int(1(Class<VR128>) -> 0(Class<VR128>))  [4.06;4.06]
		 Successful, latency: 4.06
	VFMADD213SSr_Int(2(Class<VR128>) -> 0(Class<VR128>))  [4.04;4.04]
		 Successful, latency: 4.04
	VFMADD213SSr_Int(3(Class<VR128>) -> 0(Class<VR128>))  [4.03;4.03]
		 Successful, latency: 4.03

-----VFMADD231BF16Z128r-----
	VFMADD231BF16Z128r(1(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMADD231BF16Z128r(2(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMADD231BF16Z128r(3(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VFMADD231BF16Z128rk-----
	VFMADD231BF16Z128rk(1(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMADD231BF16Z128rk(3(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMADD231BF16Z128rk(4(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VFMADD231BF16Z128rkz-----
	VFMADD231BF16Z128rkz(1(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMADD231BF16Z128rkz(3(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMADD231BF16Z128rkz(4(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VFMADD231BF16Z256r-----
	VFMADD231BF16Z256r(1(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMADD231BF16Z256r(2(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMADD231BF16Z256r(3(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VFMADD231BF16Z256rk-----
	VFMADD231BF16Z256rk(1(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMADD231BF16Z256rk(3(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMADD231BF16Z256rk(4(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VFMADD231BF16Z256rkz-----
	VFMADD231BF16Z256rkz(1(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMADD231BF16Z256rkz(3(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMADD231BF16Z256rkz(4(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VFMADD231BF16Zr-----
	VFMADD231BF16Zr(1(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMADD231BF16Zr(2(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMADD231BF16Zr(3(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VFMADD231BF16Zrk-----
	VFMADD231BF16Zrk(1(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMADD231BF16Zrk(3(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMADD231BF16Zrk(4(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VFMADD231BF16Zrkz-----
	VFMADD231BF16Zrkz(1(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMADD231BF16Zrkz(3(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMADD231BF16Zrkz(4(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VFMADD231PDYr-----
	VFMADD231PDYr(1(Class<VR256>) -> 0(Class<VR256>))  [4.05;4.05]
		 Successful, latency: 4.05
	VFMADD231PDYr(2(Class<VR256>) -> 0(Class<VR256>))  [4.02;4.02]
		 Successful, latency: 4.02
	VFMADD231PDYr(3(Class<VR256>) -> 0(Class<VR256>))  [4.04;4.04]
		 Successful, latency: 4.04

-----VFMADD231PDZ128r-----
	VFMADD231PDZ128r(1(Class<VR128X>) -> 0(Class<VR128X>))  [4.06;4.06]
		 Successful, latency: 4.06
	VFMADD231PDZ128r(2(Class<VR128X>) -> 0(Class<VR128X>))  [4.03;4.03]
		 Successful, latency: 4.03
	VFMADD231PDZ128r(3(Class<VR128X>) -> 0(Class<VR128X>))  [4.05;4.05]
		 Successful, latency: 4.05

-----VFMADD231PDZ128rk-----
	VFMADD231PDZ128rk(1(Class<VR128X>) -> 0(Class<VR128X>))  [4.04;4.04]
		 Successful, latency: 4.04
	VFMADD231PDZ128rk(3(Class<VR128X>) -> 0(Class<VR128X>))  [4.04;4.04]
		 Successful, latency: 4.04
	VFMADD231PDZ128rk(4(Class<VR128X>) -> 0(Class<VR128X>))  [4.04;4.04]
		 Successful, latency: 4.04

-----VFMADD231PDZ128rkz-----
	VFMADD231PDZ128rkz(1(Class<VR128X>) -> 0(Class<VR128X>))  [4.04;4.04]
		 Successful, latency: 4.04
	VFMADD231PDZ128rkz(3(Class<VR128X>) -> 0(Class<VR128X>))  [4.04;4.04]
		 Successful, latency: 4.04
	VFMADD231PDZ128rkz(4(Class<VR128X>) -> 0(Class<VR128X>))  [4.04;4.04]
		 Successful, latency: 4.04

-----VFMADD231PDZ256r-----
	VFMADD231PDZ256r(1(Class<VR256X>) -> 0(Class<VR256X>))  [4.03;4.03]
		 Successful, latency: 4.03
	VFMADD231PDZ256r(2(Class<VR256X>) -> 0(Class<VR256X>))  [4.04;4.04]
		 Successful, latency: 4.04
	VFMADD231PDZ256r(3(Class<VR256X>) -> 0(Class<VR256X>))  [4.05;4.05]
		 Successful, latency: 4.05

-----VFMADD231PDZ256rb-----
	VFMADD231PDZ256rb(1(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMADD231PDZ256rb(2(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMADD231PDZ256rb(3(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VFMADD231PDZ256rbk-----
	VFMADD231PDZ256rbk(1(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMADD231PDZ256rbk(3(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMADD231PDZ256rbk(4(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VFMADD231PDZ256rbkz-----
	VFMADD231PDZ256rbkz(1(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMADD231PDZ256rbkz(3(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMADD231PDZ256rbkz(4(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VFMADD231PDZ256rk-----
	VFMADD231PDZ256rk(1(Class<VR256X>) -> 0(Class<VR256X>))  [4.03;4.03]
		 Successful, latency: 4.03
	VFMADD231PDZ256rk(3(Class<VR256X>) -> 0(Class<VR256X>))  [4.03;4.03]
		 Successful, latency: 4.03
	VFMADD231PDZ256rk(4(Class<VR256X>) -> 0(Class<VR256X>))  [4.04;4.04]
		 Successful, latency: 4.04

-----VFMADD231PDZ256rkz-----
	VFMADD231PDZ256rkz(1(Class<VR256X>) -> 0(Class<VR256X>))  [4.04;4.04]
		 Successful, latency: 4.04
	VFMADD231PDZ256rkz(3(Class<VR256X>) -> 0(Class<VR256X>))  [4.06;4.06]
		 Successful, latency: 4.06
	VFMADD231PDZ256rkz(4(Class<VR256X>) -> 0(Class<VR256X>))  [4.05;4.05]
		 Successful, latency: 4.05

-----VFMADD231PDZr-----
	VFMADD231PDZr(1(Class<VR512>) -> 0(Class<VR512>))  [4.03;4.03]
		 Successful, latency: 4.03
	VFMADD231PDZr(2(Class<VR512>) -> 0(Class<VR512>))  [4.03;4.03]
		 Successful, latency: 4.03
	VFMADD231PDZr(3(Class<VR512>) -> 0(Class<VR512>))  [4.03;4.03]
		 Successful, latency: 4.03

-----VFMADD231PDZrb-----
	VFMADD231PDZrb(1(Class<VR512>) -> 0(Class<VR512>))  [4.03;4.03]
		 Successful, latency: 4.03
	VFMADD231PDZrb(2(Class<VR512>) -> 0(Class<VR512>))  [4.03;4.03]
		 Successful, latency: 4.03
	VFMADD231PDZrb(3(Class<VR512>) -> 0(Class<VR512>))  [4.03;4.03]
		 Successful, latency: 4.03

-----VFMADD231PDZrbk-----
	VFMADD231PDZrbk(1(Class<VR512>) -> 0(Class<VR512>))  [4.03;4.03]
		 Successful, latency: 4.03
	VFMADD231PDZrbk(3(Class<VR512>) -> 0(Class<VR512>))  [4.06;4.06]
		 Successful, latency: 4.06
	VFMADD231PDZrbk(4(Class<VR512>) -> 0(Class<VR512>))  [4.03;4.03]
		 Successful, latency: 4.03

-----VFMADD231PDZrbkz-----
	VFMADD231PDZrbkz(1(Class<VR512>) -> 0(Class<VR512>))  [4.03;4.03]
		 Successful, latency: 4.03
	VFMADD231PDZrbkz(3(Class<VR512>) -> 0(Class<VR512>))  [4.02;4.02]
		 Successful, latency: 4.02
	VFMADD231PDZrbkz(4(Class<VR512>) -> 0(Class<VR512>))  [4.04;4.04]
		 Successful, latency: 4.04

-----VFMADD231PDZrk-----
	VFMADD231PDZrk(1(Class<VR512>) -> 0(Class<VR512>))  [4.03;4.03]
		 Successful, latency: 4.03
	VFMADD231PDZrk(3(Class<VR512>) -> 0(Class<VR512>))  [4.02;4.02]
		 Successful, latency: 4.02
	VFMADD231PDZrk(4(Class<VR512>) -> 0(Class<VR512>))  [4.04;4.04]
		 Successful, latency: 4.04

-----VFMADD231PDZrkz-----
	VFMADD231PDZrkz(1(Class<VR512>) -> 0(Class<VR512>))  [4.02;4.02]
		 Successful, latency: 4.02
	VFMADD231PDZrkz(3(Class<VR512>) -> 0(Class<VR512>))  [4.07;4.07]
		 Successful, latency: 4.07
	VFMADD231PDZrkz(4(Class<VR512>) -> 0(Class<VR512>))  [4.03;4.03]
		 Successful, latency: 4.03

-----VFMADD231PDr-----
	VFMADD231PDr(1(Class<VR128>) -> 0(Class<VR128>))  [4.05;4.05]
		 Successful, latency: 4.05
	VFMADD231PDr(2(Class<VR128>) -> 0(Class<VR128>))  [4.04;4.04]
		 Successful, latency: 4.04
	VFMADD231PDr(3(Class<VR128>) -> 0(Class<VR128>))  [4.03;4.03]
		 Successful, latency: 4.03

-----VFMADD231PHZ128r-----
	VFMADD231PHZ128r(1(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMADD231PHZ128r(2(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMADD231PHZ128r(3(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VFMADD231PHZ128rk-----
	VFMADD231PHZ128rk(1(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMADD231PHZ128rk(3(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMADD231PHZ128rk(4(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VFMADD231PHZ128rkz-----
	VFMADD231PHZ128rkz(1(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMADD231PHZ128rkz(3(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMADD231PHZ128rkz(4(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VFMADD231PHZ256r-----
	VFMADD231PHZ256r(1(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMADD231PHZ256r(2(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMADD231PHZ256r(3(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VFMADD231PHZ256rb-----
	VFMADD231PHZ256rb(1(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMADD231PHZ256rb(2(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMADD231PHZ256rb(3(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VFMADD231PHZ256rbk-----
	VFMADD231PHZ256rbk(1(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMADD231PHZ256rbk(3(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMADD231PHZ256rbk(4(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VFMADD231PHZ256rbkz-----
	VFMADD231PHZ256rbkz(1(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMADD231PHZ256rbkz(3(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMADD231PHZ256rbkz(4(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VFMADD231PHZ256rk-----
	VFMADD231PHZ256rk(1(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMADD231PHZ256rk(3(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMADD231PHZ256rk(4(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VFMADD231PHZ256rkz-----
	VFMADD231PHZ256rkz(1(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMADD231PHZ256rkz(3(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMADD231PHZ256rkz(4(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VFMADD231PHZr-----
	VFMADD231PHZr(1(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMADD231PHZr(2(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMADD231PHZr(3(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VFMADD231PHZrb-----
	VFMADD231PHZrb(1(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMADD231PHZrb(2(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMADD231PHZrb(3(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VFMADD231PHZrbk-----
	VFMADD231PHZrbk(1(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMADD231PHZrbk(3(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMADD231PHZrbk(4(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VFMADD231PHZrbkz-----
	VFMADD231PHZrbkz(1(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMADD231PHZrbkz(3(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMADD231PHZrbkz(4(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VFMADD231PHZrk-----
	VFMADD231PHZrk(1(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMADD231PHZrk(3(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMADD231PHZrk(4(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VFMADD231PHZrkz-----
	VFMADD231PHZrkz(1(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMADD231PHZrkz(3(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMADD231PHZrkz(4(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VFMADD231PSYr-----
	VFMADD231PSYr(1(Class<VR256>) -> 0(Class<VR256>))  [4.05;4.05]
		 Successful, latency: 4.05
	VFMADD231PSYr(2(Class<VR256>) -> 0(Class<VR256>))  [4.02;4.02]
		 Successful, latency: 4.02
	VFMADD231PSYr(3(Class<VR256>) -> 0(Class<VR256>))  [4.04;4.04]
		 Successful, latency: 4.04

-----VFMADD231PSZ128r-----
	VFMADD231PSZ128r(1(Class<VR128X>) -> 0(Class<VR128X>))  [4.03;4.03]
		 Successful, latency: 4.03
	VFMADD231PSZ128r(2(Class<VR128X>) -> 0(Class<VR128X>))  [4.03;4.03]
		 Successful, latency: 4.03
	VFMADD231PSZ128r(3(Class<VR128X>) -> 0(Class<VR128X>))  [4.04;4.04]
		 Successful, latency: 4.04

-----VFMADD231PSZ128rk-----
	VFMADD231PSZ128rk(1(Class<VR128X>) -> 0(Class<VR128X>))  [4.05;4.05]
		 Successful, latency: 4.05
	VFMADD231PSZ128rk(3(Class<VR128X>) -> 0(Class<VR128X>))  [4.03;4.03]
		 Successful, latency: 4.03
	VFMADD231PSZ128rk(4(Class<VR128X>) -> 0(Class<VR128X>))  [4.04;4.04]
		 Successful, latency: 4.04

-----VFMADD231PSZ128rkz-----
	VFMADD231PSZ128rkz(1(Class<VR128X>) -> 0(Class<VR128X>))  [4.07;4.07]
		 Successful, latency: 4.07
	VFMADD231PSZ128rkz(3(Class<VR128X>) -> 0(Class<VR128X>))  [4.03;4.03]
		 Successful, latency: 4.03
	VFMADD231PSZ128rkz(4(Class<VR128X>) -> 0(Class<VR128X>))  [4.04;4.04]
		 Successful, latency: 4.04

-----VFMADD231PSZ256r-----
	VFMADD231PSZ256r(1(Class<VR256X>) -> 0(Class<VR256X>))  [4.04;4.04]
		 Successful, latency: 4.04
	VFMADD231PSZ256r(2(Class<VR256X>) -> 0(Class<VR256X>))  [4.05;4.05]
		 Successful, latency: 4.05
	VFMADD231PSZ256r(3(Class<VR256X>) -> 0(Class<VR256X>))  [4.03;4.03]
		 Successful, latency: 4.03

-----VFMADD231PSZ256rb-----
	VFMADD231PSZ256rb(1(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMADD231PSZ256rb(2(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMADD231PSZ256rb(3(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VFMADD231PSZ256rbk-----
	VFMADD231PSZ256rbk(1(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMADD231PSZ256rbk(3(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMADD231PSZ256rbk(4(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VFMADD231PSZ256rbkz-----
	VFMADD231PSZ256rbkz(1(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMADD231PSZ256rbkz(3(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMADD231PSZ256rbkz(4(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VFMADD231PSZ256rk-----
	VFMADD231PSZ256rk(1(Class<VR256X>) -> 0(Class<VR256X>))  [4.03;4.03]
		 Successful, latency: 4.03
	VFMADD231PSZ256rk(3(Class<VR256X>) -> 0(Class<VR256X>))  [4.05;4.05]
		 Successful, latency: 4.05
	VFMADD231PSZ256rk(4(Class<VR256X>) -> 0(Class<VR256X>))  [4.03;4.03]
		 Successful, latency: 4.03

-----VFMADD231PSZ256rkz-----
	VFMADD231PSZ256rkz(1(Class<VR256X>) -> 0(Class<VR256X>))  [4.03;4.03]
		 Successful, latency: 4.03
	VFMADD231PSZ256rkz(3(Class<VR256X>) -> 0(Class<VR256X>))  [4.03;4.03]
		 Successful, latency: 4.03
	VFMADD231PSZ256rkz(4(Class<VR256X>) -> 0(Class<VR256X>))  [4.04;4.04]
		 Successful, latency: 4.04

-----VFMADD231PSZr-----
	VFMADD231PSZr(1(Class<VR512>) -> 0(Class<VR512>))  [4.02;4.02]
		 Successful, latency: 4.02
	VFMADD231PSZr(2(Class<VR512>) -> 0(Class<VR512>))  [4.05;4.05]
		 Successful, latency: 4.05
	VFMADD231PSZr(3(Class<VR512>) -> 0(Class<VR512>))  [4.03;4.03]
		 Successful, latency: 4.03

-----VFMADD231PSZrb-----
	VFMADD231PSZrb(1(Class<VR512>) -> 0(Class<VR512>))  [4.03;4.03]
		 Successful, latency: 4.03
	VFMADD231PSZrb(2(Class<VR512>) -> 0(Class<VR512>))  [4.03;4.03]
		 Successful, latency: 4.03
	VFMADD231PSZrb(3(Class<VR512>) -> 0(Class<VR512>))  [4.02;4.02]
		 Successful, latency: 4.02

-----VFMADD231PSZrbk-----
	VFMADD231PSZrbk(1(Class<VR512>) -> 0(Class<VR512>))  [4.03;4.03]
		 Successful, latency: 4.03
	VFMADD231PSZrbk(3(Class<VR512>) -> 0(Class<VR512>))  [4.02;4.02]
		 Successful, latency: 4.02
	VFMADD231PSZrbk(4(Class<VR512>) -> 0(Class<VR512>))  [4.03;4.03]
		 Successful, latency: 4.03

-----VFMADD231PSZrbkz-----
	VFMADD231PSZrbkz(1(Class<VR512>) -> 0(Class<VR512>))  [4.07;4.07]
		 Successful, latency: 4.07
	VFMADD231PSZrbkz(3(Class<VR512>) -> 0(Class<VR512>))  [4.05;4.05]
		 Successful, latency: 4.05
	VFMADD231PSZrbkz(4(Class<VR512>) -> 0(Class<VR512>))  [4.03;4.03]
		 Successful, latency: 4.03

-----VFMADD231PSZrk-----
	VFMADD231PSZrk(1(Class<VR512>) -> 0(Class<VR512>))  [4.04;4.04]
		 Successful, latency: 4.04
	VFMADD231PSZrk(3(Class<VR512>) -> 0(Class<VR512>))  [4.03;4.03]
		 Successful, latency: 4.03
	VFMADD231PSZrk(4(Class<VR512>) -> 0(Class<VR512>))  [4.02;4.02]
		 Successful, latency: 4.02

-----VFMADD231PSZrkz-----
	VFMADD231PSZrkz(1(Class<VR512>) -> 0(Class<VR512>))  [4.03;4.03]
		 Successful, latency: 4.03
	VFMADD231PSZrkz(3(Class<VR512>) -> 0(Class<VR512>))  [4.03;4.03]
		 Successful, latency: 4.03
	VFMADD231PSZrkz(4(Class<VR512>) -> 0(Class<VR512>))  [4.04;4.04]
		 Successful, latency: 4.04

-----VFMADD231PSr-----
	VFMADD231PSr(1(Class<VR128>) -> 0(Class<VR128>))  [4.03;4.03]
		 Successful, latency: 4.03
	VFMADD231PSr(2(Class<VR128>) -> 0(Class<VR128>))  [4.03;4.03]
		 Successful, latency: 4.03
	VFMADD231PSr(3(Class<VR128>) -> 0(Class<VR128>))  [4.05;4.05]
		 Successful, latency: 4.05

-----VFMADD231SDZr-----
	VFMADD231SDZr(1(Class<FR64X>) -> 0(Class<FR64X>))  [4.03;4.03]
		 Successful, latency: 4.03
	VFMADD231SDZr(2(Class<FR64X>) -> 0(Class<FR64X>))  [4.03;4.03]
		 Successful, latency: 4.03
	VFMADD231SDZr(3(Class<FR64X>) -> 0(Class<FR64X>))  [4.03;4.03]
		 Successful, latency: 4.03

-----VFMADD231SDZr_Int-----
	VFMADD231SDZr_Int(1(Class<VR128X>) -> 0(Class<VR128X>))  [4.03;4.03]
		 Successful, latency: 4.03
	VFMADD231SDZr_Int(2(Class<VR128X>) -> 0(Class<VR128X>))  [4.05;4.05]
		 Successful, latency: 4.05
	VFMADD231SDZr_Int(3(Class<VR128X>) -> 0(Class<VR128X>))  [4.04;4.04]
		 Successful, latency: 4.04

-----VFMADD231SDZrb-----
	VFMADD231SDZrb(1(Class<FR64X>) -> 0(Class<FR64X>))  [4.05;4.05]
		 Successful, latency: 4.05
	VFMADD231SDZrb(2(Class<FR64X>) -> 0(Class<FR64X>))  [4.03;4.03]
		 Successful, latency: 4.03
	VFMADD231SDZrb(3(Class<FR64X>) -> 0(Class<FR64X>))  [4.03;4.03]
		 Successful, latency: 4.03

-----VFMADD231SDZrb_Int-----
	VFMADD231SDZrb_Int(1(Class<VR128X>) -> 0(Class<VR128X>))  [4.03;4.03]
		 Successful, latency: 4.03
	VFMADD231SDZrb_Int(2(Class<VR128X>) -> 0(Class<VR128X>))  [4.05;4.05]
		 Successful, latency: 4.05
	VFMADD231SDZrb_Int(3(Class<VR128X>) -> 0(Class<VR128X>))  [4.03;4.03]
		 Successful, latency: 4.03

-----VFMADD231SDZrbk_Int-----
	VFMADD231SDZrbk_Int(1(Class<VR128X>) -> 0(Class<VR128X>))  [4.09;4.09]
		 Successful, latency: 4.09
	VFMADD231SDZrbk_Int(3(Class<VR128X>) -> 0(Class<VR128X>))  [4.03;4.03]
		 Successful, latency: 4.03
	VFMADD231SDZrbk_Int(4(Class<VR128X>) -> 0(Class<VR128X>))  [4.02;4.02]
		 Successful, latency: 4.02

-----VFMADD231SDZrbkz_Int-----
	VFMADD231SDZrbkz_Int(1(Class<VR128X>) -> 0(Class<VR128X>))  [4.06;4.06]
		 Successful, latency: 4.06
	VFMADD231SDZrbkz_Int(3(Class<VR128X>) -> 0(Class<VR128X>))  [4.05;4.05]
		 Successful, latency: 4.05
	VFMADD231SDZrbkz_Int(4(Class<VR128X>) -> 0(Class<VR128X>))  [4.03;4.03]
		 Successful, latency: 4.03

-----VFMADD231SDZrk_Int-----
	VFMADD231SDZrk_Int(1(Class<VR128X>) -> 0(Class<VR128X>))  [4.04;4.04]
		 Successful, latency: 4.04
	VFMADD231SDZrk_Int(3(Class<VR128X>) -> 0(Class<VR128X>))  [4.02;4.02]
		 Successful, latency: 4.02
	VFMADD231SDZrk_Int(4(Class<VR128X>) -> 0(Class<VR128X>))  [4.07;4.07]
		 Successful, latency: 4.07

-----VFMADD231SDZrkz_Int-----
	VFMADD231SDZrkz_Int(1(Class<VR128X>) -> 0(Class<VR128X>))  [4.04;4.04]
		 Successful, latency: 4.04
	VFMADD231SDZrkz_Int(3(Class<VR128X>) -> 0(Class<VR128X>))  [4.04;4.04]
		 Successful, latency: 4.04
	VFMADD231SDZrkz_Int(4(Class<VR128X>) -> 0(Class<VR128X>))  [4.03;4.03]
		 Successful, latency: 4.03

-----VFMADD231SDr-----
	VFMADD231SDr(1(Class<FR64>) -> 0(Class<FR64>))  [4.04;4.04]
		 Successful, latency: 4.04
	VFMADD231SDr(2(Class<FR64>) -> 0(Class<FR64>))  [4.03;4.03]
		 Successful, latency: 4.03
	VFMADD231SDr(3(Class<FR64>) -> 0(Class<FR64>))  [4.03;4.03]
		 Successful, latency: 4.03

-----VFMADD231SDr_Int-----
	VFMADD231SDr_Int(1(Class<VR128>) -> 0(Class<VR128>))  [4.02;4.02]
		 Successful, latency: 4.02
	VFMADD231SDr_Int(2(Class<VR128>) -> 0(Class<VR128>))  [4.03;4.03]
		 Successful, latency: 4.03
	VFMADD231SDr_Int(3(Class<VR128>) -> 0(Class<VR128>))  [4.03;4.03]
		 Successful, latency: 4.03

-----VFMADD231SHZr-----
	VFMADD231SHZr(1(Class<FR16X>) -> 0(Class<FR16X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMADD231SHZr(2(Class<FR16X>) -> 0(Class<FR16X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMADD231SHZr(3(Class<FR16X>) -> 0(Class<FR16X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VFMADD231SHZr_Int-----
	VFMADD231SHZr_Int(1(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMADD231SHZr_Int(2(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMADD231SHZr_Int(3(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VFMADD231SHZrb-----
	VFMADD231SHZrb(1(Class<FR16X>) -> 0(Class<FR16X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMADD231SHZrb(2(Class<FR16X>) -> 0(Class<FR16X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMADD231SHZrb(3(Class<FR16X>) -> 0(Class<FR16X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VFMADD231SHZrb_Int-----
	VFMADD231SHZrb_Int(1(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMADD231SHZrb_Int(2(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMADD231SHZrb_Int(3(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VFMADD231SHZrbk_Int-----
	VFMADD231SHZrbk_Int(1(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMADD231SHZrbk_Int(3(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMADD231SHZrbk_Int(4(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VFMADD231SHZrbkz_Int-----
	VFMADD231SHZrbkz_Int(1(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMADD231SHZrbkz_Int(3(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMADD231SHZrbkz_Int(4(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VFMADD231SHZrk_Int-----
	VFMADD231SHZrk_Int(1(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMADD231SHZrk_Int(3(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMADD231SHZrk_Int(4(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VFMADD231SHZrkz_Int-----
	VFMADD231SHZrkz_Int(1(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMADD231SHZrkz_Int(3(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMADD231SHZrkz_Int(4(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VFMADD231SSZr-----
	VFMADD231SSZr(1(Class<FR32X>) -> 0(Class<FR32X>))  [4.03;4.03]
		 Successful, latency: 4.03
	VFMADD231SSZr(2(Class<FR32X>) -> 0(Class<FR32X>))  [4.04;4.04]
		 Successful, latency: 4.04
	VFMADD231SSZr(3(Class<FR32X>) -> 0(Class<FR32X>))  [4.03;4.03]
		 Successful, latency: 4.03

-----VFMADD231SSZr_Int-----
	VFMADD231SSZr_Int(1(Class<VR128X>) -> 0(Class<VR128X>))  [4.06;4.06]
		 Successful, latency: 4.06
	VFMADD231SSZr_Int(2(Class<VR128X>) -> 0(Class<VR128X>))  [4.02;4.02]
		 Successful, latency: 4.02
	VFMADD231SSZr_Int(3(Class<VR128X>) -> 0(Class<VR128X>))  [4.03;4.03]
		 Successful, latency: 4.03

-----VFMADD231SSZrb-----
	VFMADD231SSZrb(1(Class<FR32X>) -> 0(Class<FR32X>))  [4.05;4.05]
		 Successful, latency: 4.05
	VFMADD231SSZrb(2(Class<FR32X>) -> 0(Class<FR32X>))  [4.05;4.05]
		 Successful, latency: 4.05
	VFMADD231SSZrb(3(Class<FR32X>) -> 0(Class<FR32X>))  [4.03;4.03]
		 Successful, latency: 4.03

-----VFMADD231SSZrb_Int-----
	VFMADD231SSZrb_Int(1(Class<VR128X>) -> 0(Class<VR128X>))  [4.02;4.02]
		 Successful, latency: 4.02
	VFMADD231SSZrb_Int(2(Class<VR128X>) -> 0(Class<VR128X>))  [4.03;4.03]
		 Successful, latency: 4.03
	VFMADD231SSZrb_Int(3(Class<VR128X>) -> 0(Class<VR128X>))  [4.03;4.03]
		 Successful, latency: 4.03

-----VFMADD231SSZrbk_Int-----
	VFMADD231SSZrbk_Int(1(Class<VR128X>) -> 0(Class<VR128X>))  [4.03;4.03]
		 Successful, latency: 4.03
	VFMADD231SSZrbk_Int(3(Class<VR128X>) -> 0(Class<VR128X>))  [4.03;4.03]
		 Successful, latency: 4.03
	VFMADD231SSZrbk_Int(4(Class<VR128X>) -> 0(Class<VR128X>))  [4.03;4.03]
		 Successful, latency: 4.03

-----VFMADD231SSZrbkz_Int-----
	VFMADD231SSZrbkz_Int(1(Class<VR128X>) -> 0(Class<VR128X>))  [4.03;4.03]
		 Successful, latency: 4.03
	VFMADD231SSZrbkz_Int(3(Class<VR128X>) -> 0(Class<VR128X>))  [4.04;4.04]
		 Successful, latency: 4.04
	VFMADD231SSZrbkz_Int(4(Class<VR128X>) -> 0(Class<VR128X>))  [4.03;4.03]
		 Successful, latency: 4.03

-----VFMADD231SSZrk_Int-----
	VFMADD231SSZrk_Int(1(Class<VR128X>) -> 0(Class<VR128X>))  [4.04;4.04]
		 Successful, latency: 4.04
	VFMADD231SSZrk_Int(3(Class<VR128X>) -> 0(Class<VR128X>))  [4.03;4.03]
		 Successful, latency: 4.03
	VFMADD231SSZrk_Int(4(Class<VR128X>) -> 0(Class<VR128X>))  [4.05;4.05]
		 Successful, latency: 4.05

-----VFMADD231SSZrkz_Int-----
	VFMADD231SSZrkz_Int(1(Class<VR128X>) -> 0(Class<VR128X>))  [4.05;4.05]
		 Successful, latency: 4.05
	VFMADD231SSZrkz_Int(3(Class<VR128X>) -> 0(Class<VR128X>))  [4.03;4.03]
		 Successful, latency: 4.03
	VFMADD231SSZrkz_Int(4(Class<VR128X>) -> 0(Class<VR128X>))  [4.03;4.03]
		 Successful, latency: 4.03

-----VFMADD231SSr-----
	VFMADD231SSr(1(Class<FR32>) -> 0(Class<FR32>))  [4.03;4.03]
		 Successful, latency: 4.03
	VFMADD231SSr(2(Class<FR32>) -> 0(Class<FR32>))  [4.04;4.04]
		 Successful, latency: 4.04
	VFMADD231SSr(3(Class<FR32>) -> 0(Class<FR32>))  [4.04;4.04]
		 Successful, latency: 4.04

-----VFMADD231SSr_Int-----
	VFMADD231SSr_Int(1(Class<VR128>) -> 0(Class<VR128>))  [4.03;4.03]
		 Successful, latency: 4.03
	VFMADD231SSr_Int(2(Class<VR128>) -> 0(Class<VR128>))  [4.03;4.03]
		 Successful, latency: 4.03
	VFMADD231SSr_Int(3(Class<VR128>) -> 0(Class<VR128>))  [4.03;4.03]
		 Successful, latency: 4.03

-----VFMADDCPHZ128r-----
	VFMADDCPHZ128r(1(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMADDCPHZ128r(2(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMADDCPHZ128r(3(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VFMADDCPHZ128rk-----
	VFMADDCPHZ128rk(1(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMADDCPHZ128rk(3(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMADDCPHZ128rk(4(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VFMADDCPHZ128rkz-----
	VFMADDCPHZ128rkz(1(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMADDCPHZ128rkz(3(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMADDCPHZ128rkz(4(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VFMADDCPHZ256r-----
	VFMADDCPHZ256r(1(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMADDCPHZ256r(2(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMADDCPHZ256r(3(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VFMADDCPHZ256rb-----
	VFMADDCPHZ256rb(1(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMADDCPHZ256rb(2(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMADDCPHZ256rb(3(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VFMADDCPHZ256rbk-----
	VFMADDCPHZ256rbk(1(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMADDCPHZ256rbk(3(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMADDCPHZ256rbk(4(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VFMADDCPHZ256rbkz-----
	VFMADDCPHZ256rbkz(1(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMADDCPHZ256rbkz(3(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMADDCPHZ256rbkz(4(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VFMADDCPHZ256rk-----
	VFMADDCPHZ256rk(1(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMADDCPHZ256rk(3(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMADDCPHZ256rk(4(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VFMADDCPHZ256rkz-----
	VFMADDCPHZ256rkz(1(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMADDCPHZ256rkz(3(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMADDCPHZ256rkz(4(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VFMADDCPHZr-----
	VFMADDCPHZr(1(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMADDCPHZr(2(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMADDCPHZr(3(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VFMADDCPHZrb-----
	VFMADDCPHZrb(1(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMADDCPHZrb(2(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMADDCPHZrb(3(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VFMADDCPHZrbk-----
	VFMADDCPHZrbk(1(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMADDCPHZrbk(3(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMADDCPHZrbk(4(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VFMADDCPHZrbkz-----
	VFMADDCPHZrbkz(1(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMADDCPHZrbkz(3(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMADDCPHZrbkz(4(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VFMADDCPHZrk-----
	VFMADDCPHZrk(1(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMADDCPHZrk(3(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMADDCPHZrk(4(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VFMADDCPHZrkz-----
	VFMADDCPHZrkz(1(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMADDCPHZrkz(3(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMADDCPHZrkz(4(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VFMADDCSHZr-----
	VFMADDCSHZr(1(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMADDCSHZr(2(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMADDCSHZr(3(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VFMADDCSHZrb-----
	VFMADDCSHZrb(1(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMADDCSHZrb(2(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMADDCSHZrb(3(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VFMADDCSHZrbk-----
	VFMADDCSHZrbk(1(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMADDCSHZrbk(3(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMADDCSHZrbk(4(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VFMADDCSHZrbkz-----
	VFMADDCSHZrbkz(1(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMADDCSHZrbkz(3(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMADDCSHZrbkz(4(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VFMADDCSHZrk-----
	VFMADDCSHZrk(1(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMADDCSHZrk(3(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMADDCSHZrk(4(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VFMADDCSHZrkz-----
	VFMADDCSHZrkz(1(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMADDCSHZrkz(3(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMADDCSHZrkz(4(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VFMADDPD4Yrr-----
	VFMADDPD4Yrr(1(Class<VR256>) -> 0(Class<VR256>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMADDPD4Yrr(2(Class<VR256>) -> 0(Class<VR256>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMADDPD4Yrr(3(Class<VR256>) -> 0(Class<VR256>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VFMADDPD4Yrr_REV-----
	VFMADDPD4Yrr_REV(1(Class<VR256>) -> 0(Class<VR256>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMADDPD4Yrr_REV(2(Class<VR256>) -> 0(Class<VR256>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMADDPD4Yrr_REV(3(Class<VR256>) -> 0(Class<VR256>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VFMADDPD4rr-----
	VFMADDPD4rr(1(Class<VR128>) -> 0(Class<VR128>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMADDPD4rr(2(Class<VR128>) -> 0(Class<VR128>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMADDPD4rr(3(Class<VR128>) -> 0(Class<VR128>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VFMADDPD4rr_REV-----
	VFMADDPD4rr_REV(1(Class<VR128>) -> 0(Class<VR128>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMADDPD4rr_REV(2(Class<VR128>) -> 0(Class<VR128>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMADDPD4rr_REV(3(Class<VR128>) -> 0(Class<VR128>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VFMADDPS4Yrr-----
	VFMADDPS4Yrr(1(Class<VR256>) -> 0(Class<VR256>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMADDPS4Yrr(2(Class<VR256>) -> 0(Class<VR256>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMADDPS4Yrr(3(Class<VR256>) -> 0(Class<VR256>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VFMADDPS4Yrr_REV-----
	VFMADDPS4Yrr_REV(1(Class<VR256>) -> 0(Class<VR256>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMADDPS4Yrr_REV(2(Class<VR256>) -> 0(Class<VR256>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMADDPS4Yrr_REV(3(Class<VR256>) -> 0(Class<VR256>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VFMADDPS4rr-----
	VFMADDPS4rr(1(Class<VR128>) -> 0(Class<VR128>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMADDPS4rr(2(Class<VR128>) -> 0(Class<VR128>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMADDPS4rr(3(Class<VR128>) -> 0(Class<VR128>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VFMADDPS4rr_REV-----
	VFMADDPS4rr_REV(1(Class<VR128>) -> 0(Class<VR128>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMADDPS4rr_REV(2(Class<VR128>) -> 0(Class<VR128>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMADDPS4rr_REV(3(Class<VR128>) -> 0(Class<VR128>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VFMADDSD4rr-----
	VFMADDSD4rr(1(Class<FR64>) -> 0(Class<FR64>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMADDSD4rr(2(Class<FR64>) -> 0(Class<FR64>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMADDSD4rr(3(Class<FR64>) -> 0(Class<FR64>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VFMADDSD4rr_Int-----
	VFMADDSD4rr_Int(1(Class<VR128>) -> 0(Class<VR128>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMADDSD4rr_Int(2(Class<VR128>) -> 0(Class<VR128>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMADDSD4rr_Int(3(Class<VR128>) -> 0(Class<VR128>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VFMADDSD4rr_Int_REV-----
	VFMADDSD4rr_Int_REV(1(Class<VR128>) -> 0(Class<VR128>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMADDSD4rr_Int_REV(2(Class<VR128>) -> 0(Class<VR128>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMADDSD4rr_Int_REV(3(Class<VR128>) -> 0(Class<VR128>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VFMADDSD4rr_REV-----
	VFMADDSD4rr_REV(1(Class<FR64>) -> 0(Class<FR64>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMADDSD4rr_REV(2(Class<FR64>) -> 0(Class<FR64>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMADDSD4rr_REV(3(Class<FR64>) -> 0(Class<FR64>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VFMADDSS4rr-----
	VFMADDSS4rr(1(Class<FR32>) -> 0(Class<FR32>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMADDSS4rr(2(Class<FR32>) -> 0(Class<FR32>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMADDSS4rr(3(Class<FR32>) -> 0(Class<FR32>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VFMADDSS4rr_Int-----
	VFMADDSS4rr_Int(1(Class<VR128>) -> 0(Class<VR128>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMADDSS4rr_Int(2(Class<VR128>) -> 0(Class<VR128>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMADDSS4rr_Int(3(Class<VR128>) -> 0(Class<VR128>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VFMADDSS4rr_Int_REV-----
	VFMADDSS4rr_Int_REV(1(Class<VR128>) -> 0(Class<VR128>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMADDSS4rr_Int_REV(2(Class<VR128>) -> 0(Class<VR128>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMADDSS4rr_Int_REV(3(Class<VR128>) -> 0(Class<VR128>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VFMADDSS4rr_REV-----
	VFMADDSS4rr_REV(1(Class<FR32>) -> 0(Class<FR32>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMADDSS4rr_REV(2(Class<FR32>) -> 0(Class<FR32>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMADDSS4rr_REV(3(Class<FR32>) -> 0(Class<FR32>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VFMADDSUB132PDYr-----
	VFMADDSUB132PDYr(1(Class<VR256>) -> 0(Class<VR256>))  [4.03;4.03]
		 Successful, latency: 4.03
	VFMADDSUB132PDYr(2(Class<VR256>) -> 0(Class<VR256>))  [4.03;4.03]
		 Successful, latency: 4.03
	VFMADDSUB132PDYr(3(Class<VR256>) -> 0(Class<VR256>))  [4.04;4.04]
		 Successful, latency: 4.04

-----VFMADDSUB132PDZ128r-----
	VFMADDSUB132PDZ128r(1(Class<VR128X>) -> 0(Class<VR128X>))  [4.03;4.03]
		 Successful, latency: 4.03
	VFMADDSUB132PDZ128r(2(Class<VR128X>) -> 0(Class<VR128X>))  [4.07;4.07]
		 Successful, latency: 4.07
	VFMADDSUB132PDZ128r(3(Class<VR128X>) -> 0(Class<VR128X>))  [4.01;4.01]
		 Successful, latency: 4.01

-----VFMADDSUB132PDZ128rk-----
	VFMADDSUB132PDZ128rk(1(Class<VR128X>) -> 0(Class<VR128X>))  [4.04;4.04]
		 Successful, latency: 4.04
	VFMADDSUB132PDZ128rk(3(Class<VR128X>) -> 0(Class<VR128X>))  [4.02;4.02]
		 Successful, latency: 4.02
	VFMADDSUB132PDZ128rk(4(Class<VR128X>) -> 0(Class<VR128X>))  [4.05;4.05]
		 Successful, latency: 4.05

-----VFMADDSUB132PDZ128rkz-----
	VFMADDSUB132PDZ128rkz(1(Class<VR128X>) -> 0(Class<VR128X>))  [4.05;4.05]
		 Successful, latency: 4.05
	VFMADDSUB132PDZ128rkz(3(Class<VR128X>) -> 0(Class<VR128X>))  [4.04;4.04]
		 Successful, latency: 4.04
	VFMADDSUB132PDZ128rkz(4(Class<VR128X>) -> 0(Class<VR128X>))  [4.02;4.02]
		 Successful, latency: 4.02

-----VFMADDSUB132PDZ256r-----
	VFMADDSUB132PDZ256r(1(Class<VR256X>) -> 0(Class<VR256X>))  [4.03;4.03]
		 Successful, latency: 4.03
	VFMADDSUB132PDZ256r(2(Class<VR256X>) -> 0(Class<VR256X>))  [4.02;4.02]
		 Successful, latency: 4.02
	VFMADDSUB132PDZ256r(3(Class<VR256X>) -> 0(Class<VR256X>))  [4.02;4.02]
		 Successful, latency: 4.02

-----VFMADDSUB132PDZ256rb-----
	VFMADDSUB132PDZ256rb(1(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMADDSUB132PDZ256rb(2(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMADDSUB132PDZ256rb(3(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VFMADDSUB132PDZ256rbk-----
	VFMADDSUB132PDZ256rbk(1(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMADDSUB132PDZ256rbk(3(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMADDSUB132PDZ256rbk(4(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VFMADDSUB132PDZ256rbkz-----
	VFMADDSUB132PDZ256rbkz(1(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMADDSUB132PDZ256rbkz(3(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMADDSUB132PDZ256rbkz(4(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VFMADDSUB132PDZ256rk-----
	VFMADDSUB132PDZ256rk(1(Class<VR256X>) -> 0(Class<VR256X>))  [4.04;4.04]
		 Successful, latency: 4.04
	VFMADDSUB132PDZ256rk(3(Class<VR256X>) -> 0(Class<VR256X>))  [4.03;4.03]
		 Successful, latency: 4.03
	VFMADDSUB132PDZ256rk(4(Class<VR256X>) -> 0(Class<VR256X>))  [4.04;4.04]
		 Successful, latency: 4.04

-----VFMADDSUB132PDZ256rkz-----
	VFMADDSUB132PDZ256rkz(1(Class<VR256X>) -> 0(Class<VR256X>))  [4.04;4.04]
		 Successful, latency: 4.04
	VFMADDSUB132PDZ256rkz(3(Class<VR256X>) -> 0(Class<VR256X>))  [4.04;4.04]
		 Successful, latency: 4.04
	VFMADDSUB132PDZ256rkz(4(Class<VR256X>) -> 0(Class<VR256X>))  [4.04;4.04]
		 Successful, latency: 4.04

-----VFMADDSUB132PDZr-----
	VFMADDSUB132PDZr(1(Class<VR512>) -> 0(Class<VR512>))  [4.03;4.03]
		 Successful, latency: 4.03
	VFMADDSUB132PDZr(2(Class<VR512>) -> 0(Class<VR512>))  [4.03;4.03]
		 Successful, latency: 4.03
	VFMADDSUB132PDZr(3(Class<VR512>) -> 0(Class<VR512>))  [4.04;4.04]
		 Successful, latency: 4.04

-----VFMADDSUB132PDZrb-----
	VFMADDSUB132PDZrb(1(Class<VR512>) -> 0(Class<VR512>))  [4.05;4.05]
		 Successful, latency: 4.05
	VFMADDSUB132PDZrb(2(Class<VR512>) -> 0(Class<VR512>))  [4.05;4.05]
		 Successful, latency: 4.05
	VFMADDSUB132PDZrb(3(Class<VR512>) -> 0(Class<VR512>))  [4.05;4.05]
		 Successful, latency: 4.05

-----VFMADDSUB132PDZrbk-----
	VFMADDSUB132PDZrbk(1(Class<VR512>) -> 0(Class<VR512>))  [4.06;4.06]
		 Successful, latency: 4.06
	VFMADDSUB132PDZrbk(3(Class<VR512>) -> 0(Class<VR512>))  [4.03;4.03]
		 Successful, latency: 4.03
	VFMADDSUB132PDZrbk(4(Class<VR512>) -> 0(Class<VR512>))  [4.03;4.03]
		 Successful, latency: 4.03

-----VFMADDSUB132PDZrbkz-----
	VFMADDSUB132PDZrbkz(1(Class<VR512>) -> 0(Class<VR512>))  [4.05;4.05]
		 Successful, latency: 4.05
	VFMADDSUB132PDZrbkz(3(Class<VR512>) -> 0(Class<VR512>))  [4.04;4.04]
		 Successful, latency: 4.04
	VFMADDSUB132PDZrbkz(4(Class<VR512>) -> 0(Class<VR512>))  [4.02;4.02]
		 Successful, latency: 4.02

-----VFMADDSUB132PDZrk-----
	VFMADDSUB132PDZrk(1(Class<VR512>) -> 0(Class<VR512>))  [4.05;4.05]
		 Successful, latency: 4.05
	VFMADDSUB132PDZrk(3(Class<VR512>) -> 0(Class<VR512>))  [4.02;4.02]
		 Successful, latency: 4.02
	VFMADDSUB132PDZrk(4(Class<VR512>) -> 0(Class<VR512>))  [4.04;4.04]
		 Successful, latency: 4.04

-----VFMADDSUB132PDZrkz-----
	VFMADDSUB132PDZrkz(1(Class<VR512>) -> 0(Class<VR512>))  [4.04;4.04]
		 Successful, latency: 4.04
	VFMADDSUB132PDZrkz(3(Class<VR512>) -> 0(Class<VR512>))  [4.04;4.04]
		 Successful, latency: 4.04
	VFMADDSUB132PDZrkz(4(Class<VR512>) -> 0(Class<VR512>))  [4.05;4.05]
		 Successful, latency: 4.05

-----VFMADDSUB132PDr-----
	VFMADDSUB132PDr(1(Class<VR128>) -> 0(Class<VR128>))  [4.02;4.02]
		 Successful, latency: 4.02
	VFMADDSUB132PDr(2(Class<VR128>) -> 0(Class<VR128>))  [4.03;4.03]
		 Successful, latency: 4.03
	VFMADDSUB132PDr(3(Class<VR128>) -> 0(Class<VR128>))  [4.04;4.04]
		 Successful, latency: 4.04

-----VFMADDSUB132PHZ128r-----
	VFMADDSUB132PHZ128r(1(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMADDSUB132PHZ128r(2(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMADDSUB132PHZ128r(3(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VFMADDSUB132PHZ128rk-----
	VFMADDSUB132PHZ128rk(1(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMADDSUB132PHZ128rk(3(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMADDSUB132PHZ128rk(4(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VFMADDSUB132PHZ128rkz-----
	VFMADDSUB132PHZ128rkz(1(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMADDSUB132PHZ128rkz(3(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMADDSUB132PHZ128rkz(4(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VFMADDSUB132PHZ256r-----
	VFMADDSUB132PHZ256r(1(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMADDSUB132PHZ256r(2(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMADDSUB132PHZ256r(3(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VFMADDSUB132PHZ256rb-----
	VFMADDSUB132PHZ256rb(1(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMADDSUB132PHZ256rb(2(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMADDSUB132PHZ256rb(3(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VFMADDSUB132PHZ256rbk-----
	VFMADDSUB132PHZ256rbk(1(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMADDSUB132PHZ256rbk(3(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMADDSUB132PHZ256rbk(4(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VFMADDSUB132PHZ256rbkz-----
	VFMADDSUB132PHZ256rbkz(1(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMADDSUB132PHZ256rbkz(3(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMADDSUB132PHZ256rbkz(4(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VFMADDSUB132PHZ256rk-----
	VFMADDSUB132PHZ256rk(1(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMADDSUB132PHZ256rk(3(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMADDSUB132PHZ256rk(4(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VFMADDSUB132PHZ256rkz-----
	VFMADDSUB132PHZ256rkz(1(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMADDSUB132PHZ256rkz(3(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMADDSUB132PHZ256rkz(4(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VFMADDSUB132PHZr-----
	VFMADDSUB132PHZr(1(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMADDSUB132PHZr(2(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMADDSUB132PHZr(3(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VFMADDSUB132PHZrb-----
	VFMADDSUB132PHZrb(1(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMADDSUB132PHZrb(2(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMADDSUB132PHZrb(3(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VFMADDSUB132PHZrbk-----
	VFMADDSUB132PHZrbk(1(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMADDSUB132PHZrbk(3(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMADDSUB132PHZrbk(4(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VFMADDSUB132PHZrbkz-----
	VFMADDSUB132PHZrbkz(1(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMADDSUB132PHZrbkz(3(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMADDSUB132PHZrbkz(4(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VFMADDSUB132PHZrk-----
	VFMADDSUB132PHZrk(1(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMADDSUB132PHZrk(3(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMADDSUB132PHZrk(4(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VFMADDSUB132PHZrkz-----
	VFMADDSUB132PHZrkz(1(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMADDSUB132PHZrkz(3(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMADDSUB132PHZrkz(4(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VFMADDSUB132PSYr-----
	VFMADDSUB132PSYr(1(Class<VR256>) -> 0(Class<VR256>))  [4.05;4.05]
		 Successful, latency: 4.05
	VFMADDSUB132PSYr(2(Class<VR256>) -> 0(Class<VR256>))  [4.04;4.04]
		 Successful, latency: 4.04
	VFMADDSUB132PSYr(3(Class<VR256>) -> 0(Class<VR256>))  [4.04;4.04]
		 Successful, latency: 4.04

-----VFMADDSUB132PSZ128r-----
	VFMADDSUB132PSZ128r(1(Class<VR128X>) -> 0(Class<VR128X>))  [4.03;4.03]
		 Successful, latency: 4.03
	VFMADDSUB132PSZ128r(2(Class<VR128X>) -> 0(Class<VR128X>))  [4.03;4.03]
		 Successful, latency: 4.03
	VFMADDSUB132PSZ128r(3(Class<VR128X>) -> 0(Class<VR128X>))  [4.06;4.06]
		 Successful, latency: 4.06

-----VFMADDSUB132PSZ128rk-----
	VFMADDSUB132PSZ128rk(1(Class<VR128X>) -> 0(Class<VR128X>))  [4.05;4.05]
		 Successful, latency: 4.05
	VFMADDSUB132PSZ128rk(3(Class<VR128X>) -> 0(Class<VR128X>))  [4.02;4.02]
		 Successful, latency: 4.02
	VFMADDSUB132PSZ128rk(4(Class<VR128X>) -> 0(Class<VR128X>))  [4.03;4.03]
		 Successful, latency: 4.03

-----VFMADDSUB132PSZ128rkz-----
	VFMADDSUB132PSZ128rkz(1(Class<VR128X>) -> 0(Class<VR128X>))  [4.04;4.04]
		 Successful, latency: 4.04
	VFMADDSUB132PSZ128rkz(3(Class<VR128X>) -> 0(Class<VR128X>))  [4.03;4.03]
		 Successful, latency: 4.03
	VFMADDSUB132PSZ128rkz(4(Class<VR128X>) -> 0(Class<VR128X>))  [4.03;4.03]
		 Successful, latency: 4.03

-----VFMADDSUB132PSZ256r-----
	VFMADDSUB132PSZ256r(1(Class<VR256X>) -> 0(Class<VR256X>))  [4.04;4.04]
		 Successful, latency: 4.04
	VFMADDSUB132PSZ256r(2(Class<VR256X>) -> 0(Class<VR256X>))  [4.03;4.03]
		 Successful, latency: 4.03
	VFMADDSUB132PSZ256r(3(Class<VR256X>) -> 0(Class<VR256X>))  [4.05;4.05]
		 Successful, latency: 4.05

-----VFMADDSUB132PSZ256rb-----
	VFMADDSUB132PSZ256rb(1(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMADDSUB132PSZ256rb(2(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMADDSUB132PSZ256rb(3(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VFMADDSUB132PSZ256rbk-----
	VFMADDSUB132PSZ256rbk(1(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMADDSUB132PSZ256rbk(3(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMADDSUB132PSZ256rbk(4(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VFMADDSUB132PSZ256rbkz-----
	VFMADDSUB132PSZ256rbkz(1(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMADDSUB132PSZ256rbkz(3(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMADDSUB132PSZ256rbkz(4(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VFMADDSUB132PSZ256rk-----
	VFMADDSUB132PSZ256rk(1(Class<VR256X>) -> 0(Class<VR256X>))  [4.03;4.03]
		 Successful, latency: 4.03
	VFMADDSUB132PSZ256rk(3(Class<VR256X>) -> 0(Class<VR256X>))  [4.05;4.05]
		 Successful, latency: 4.05
	VFMADDSUB132PSZ256rk(4(Class<VR256X>) -> 0(Class<VR256X>))  [4.05;4.05]
		 Successful, latency: 4.05

-----VFMADDSUB132PSZ256rkz-----
	VFMADDSUB132PSZ256rkz(1(Class<VR256X>) -> 0(Class<VR256X>))  [4.05;4.05]
		 Successful, latency: 4.05
	VFMADDSUB132PSZ256rkz(3(Class<VR256X>) -> 0(Class<VR256X>))  [4.04;4.04]
		 Successful, latency: 4.04
	VFMADDSUB132PSZ256rkz(4(Class<VR256X>) -> 0(Class<VR256X>))  [4.05;4.05]
		 Successful, latency: 4.05

-----VFMADDSUB132PSZr-----
	VFMADDSUB132PSZr(1(Class<VR512>) -> 0(Class<VR512>))  [4.03;4.03]
		 Successful, latency: 4.03
	VFMADDSUB132PSZr(2(Class<VR512>) -> 0(Class<VR512>))  [4.04;4.04]
		 Successful, latency: 4.04
	VFMADDSUB132PSZr(3(Class<VR512>) -> 0(Class<VR512>))  [4.05;4.05]
		 Successful, latency: 4.05

-----VFMADDSUB132PSZrb-----
	VFMADDSUB132PSZrb(1(Class<VR512>) -> 0(Class<VR512>))  [4.05;4.05]
		 Successful, latency: 4.05
	VFMADDSUB132PSZrb(2(Class<VR512>) -> 0(Class<VR512>))  [4.05;4.05]
		 Successful, latency: 4.05
	VFMADDSUB132PSZrb(3(Class<VR512>) -> 0(Class<VR512>))  [4.04;4.04]
		 Successful, latency: 4.04

-----VFMADDSUB132PSZrbk-----
	VFMADDSUB132PSZrbk(1(Class<VR512>) -> 0(Class<VR512>))  [4.04;4.04]
		 Successful, latency: 4.04
	VFMADDSUB132PSZrbk(3(Class<VR512>) -> 0(Class<VR512>))  [4.03;4.03]
		 Successful, latency: 4.03
	VFMADDSUB132PSZrbk(4(Class<VR512>) -> 0(Class<VR512>))  [4.04;4.04]
		 Successful, latency: 4.04

-----VFMADDSUB132PSZrbkz-----
	VFMADDSUB132PSZrbkz(1(Class<VR512>) -> 0(Class<VR512>))  [4.03;4.03]
		 Successful, latency: 4.03
	VFMADDSUB132PSZrbkz(3(Class<VR512>) -> 0(Class<VR512>))  [4.09;4.09]
		 Successful, latency: 4.09
	VFMADDSUB132PSZrbkz(4(Class<VR512>) -> 0(Class<VR512>))  [4.04;4.04]
		 Successful, latency: 4.04

-----VFMADDSUB132PSZrk-----
	VFMADDSUB132PSZrk(1(Class<VR512>) -> 0(Class<VR512>))  [4.03;4.03]
		 Successful, latency: 4.03
	VFMADDSUB132PSZrk(3(Class<VR512>) -> 0(Class<VR512>))  [4.03;4.03]
		 Successful, latency: 4.03
	VFMADDSUB132PSZrk(4(Class<VR512>) -> 0(Class<VR512>))  [4.04;4.04]
		 Successful, latency: 4.04

-----VFMADDSUB132PSZrkz-----
	VFMADDSUB132PSZrkz(1(Class<VR512>) -> 0(Class<VR512>))  [4.03;4.03]
		 Successful, latency: 4.03
	VFMADDSUB132PSZrkz(3(Class<VR512>) -> 0(Class<VR512>))  [4.05;4.05]
		 Successful, latency: 4.05
	VFMADDSUB132PSZrkz(4(Class<VR512>) -> 0(Class<VR512>))  [4.03;4.03]
		 Successful, latency: 4.03

-----VFMADDSUB132PSr-----
	VFMADDSUB132PSr(1(Class<VR128>) -> 0(Class<VR128>))  [4.04;4.04]
		 Successful, latency: 4.04
	VFMADDSUB132PSr(2(Class<VR128>) -> 0(Class<VR128>))  [4.03;4.03]
		 Successful, latency: 4.03
	VFMADDSUB132PSr(3(Class<VR128>) -> 0(Class<VR128>))  [4.06;4.06]
		 Successful, latency: 4.06

-----VFMADDSUB213PDYr-----
	VFMADDSUB213PDYr(1(Class<VR256>) -> 0(Class<VR256>))  [4.04;4.04]
		 Successful, latency: 4.04
	VFMADDSUB213PDYr(2(Class<VR256>) -> 0(Class<VR256>))  [4.05;4.05]
		 Successful, latency: 4.05
	VFMADDSUB213PDYr(3(Class<VR256>) -> 0(Class<VR256>))  [4.05;4.05]
		 Successful, latency: 4.05

-----VFMADDSUB213PDZ128r-----
	VFMADDSUB213PDZ128r(1(Class<VR128X>) -> 0(Class<VR128X>))  [4.03;4.03]
		 Successful, latency: 4.03
	VFMADDSUB213PDZ128r(2(Class<VR128X>) -> 0(Class<VR128X>))  [4.04;4.04]
		 Successful, latency: 4.04
	VFMADDSUB213PDZ128r(3(Class<VR128X>) -> 0(Class<VR128X>))  [4.05;4.05]
		 Successful, latency: 4.05

-----VFMADDSUB213PDZ128rk-----
	VFMADDSUB213PDZ128rk(1(Class<VR128X>) -> 0(Class<VR128X>))  [4.02;4.02]
		 Successful, latency: 4.02
	VFMADDSUB213PDZ128rk(3(Class<VR128X>) -> 0(Class<VR128X>))  [4.05;4.05]
		 Successful, latency: 4.05
	VFMADDSUB213PDZ128rk(4(Class<VR128X>) -> 0(Class<VR128X>))  [4.04;4.04]
		 Successful, latency: 4.04

-----VFMADDSUB213PDZ128rkz-----
	VFMADDSUB213PDZ128rkz(1(Class<VR128X>) -> 0(Class<VR128X>))  [4.05;4.05]
		 Successful, latency: 4.05
	VFMADDSUB213PDZ128rkz(3(Class<VR128X>) -> 0(Class<VR128X>))  [4.06;4.06]
		 Successful, latency: 4.06
	VFMADDSUB213PDZ128rkz(4(Class<VR128X>) -> 0(Class<VR128X>))  [4.03;4.03]
		 Successful, latency: 4.03

-----VFMADDSUB213PDZ256r-----
	VFMADDSUB213PDZ256r(1(Class<VR256X>) -> 0(Class<VR256X>))  [4.07;4.07]
		 Successful, latency: 4.07
	VFMADDSUB213PDZ256r(2(Class<VR256X>) -> 0(Class<VR256X>))  [4.02;4.02]
		 Successful, latency: 4.02
	VFMADDSUB213PDZ256r(3(Class<VR256X>) -> 0(Class<VR256X>))  [4.04;4.04]
		 Successful, latency: 4.04

-----VFMADDSUB213PDZ256rb-----
	VFMADDSUB213PDZ256rb(1(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMADDSUB213PDZ256rb(2(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMADDSUB213PDZ256rb(3(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VFMADDSUB213PDZ256rbk-----
	VFMADDSUB213PDZ256rbk(1(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMADDSUB213PDZ256rbk(3(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMADDSUB213PDZ256rbk(4(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VFMADDSUB213PDZ256rbkz-----
	VFMADDSUB213PDZ256rbkz(1(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMADDSUB213PDZ256rbkz(3(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMADDSUB213PDZ256rbkz(4(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VFMADDSUB213PDZ256rk-----
	VFMADDSUB213PDZ256rk(1(Class<VR256X>) -> 0(Class<VR256X>))  [4.06;4.06]
		 Successful, latency: 4.06
	VFMADDSUB213PDZ256rk(3(Class<VR256X>) -> 0(Class<VR256X>))  [4.03;4.03]
		 Successful, latency: 4.03
	VFMADDSUB213PDZ256rk(4(Class<VR256X>) -> 0(Class<VR256X>))  [4.04;4.04]
		 Successful, latency: 4.04

-----VFMADDSUB213PDZ256rkz-----
	VFMADDSUB213PDZ256rkz(1(Class<VR256X>) -> 0(Class<VR256X>))  [4.03;4.03]
		 Successful, latency: 4.03
	VFMADDSUB213PDZ256rkz(3(Class<VR256X>) -> 0(Class<VR256X>))  [4.06;4.06]
		 Successful, latency: 4.06
	VFMADDSUB213PDZ256rkz(4(Class<VR256X>) -> 0(Class<VR256X>))  [4.03;4.03]
		 Successful, latency: 4.03

-----VFMADDSUB213PDZr-----
	VFMADDSUB213PDZr(1(Class<VR512>) -> 0(Class<VR512>))  [4.03;4.03]
		 Successful, latency: 4.03
	VFMADDSUB213PDZr(2(Class<VR512>) -> 0(Class<VR512>))  [4.03;4.03]
		 Successful, latency: 4.03
	VFMADDSUB213PDZr(3(Class<VR512>) -> 0(Class<VR512>))  [4.08;4.08]
		 Successful, latency: 4.08

-----VFMADDSUB213PDZrb-----
	VFMADDSUB213PDZrb(1(Class<VR512>) -> 0(Class<VR512>))  [4.04;4.04]
		 Successful, latency: 4.04
	VFMADDSUB213PDZrb(2(Class<VR512>) -> 0(Class<VR512>))  [4.05;4.05]
		 Successful, latency: 4.05
	VFMADDSUB213PDZrb(3(Class<VR512>) -> 0(Class<VR512>))  [4.04;4.04]
		 Successful, latency: 4.04

-----VFMADDSUB213PDZrbk-----
	VFMADDSUB213PDZrbk(1(Class<VR512>) -> 0(Class<VR512>))  [4.05;4.05]
		 Successful, latency: 4.05
	VFMADDSUB213PDZrbk(3(Class<VR512>) -> 0(Class<VR512>))  [4.04;4.04]
		 Successful, latency: 4.04
	VFMADDSUB213PDZrbk(4(Class<VR512>) -> 0(Class<VR512>))  [4.04;4.04]
		 Successful, latency: 4.04

-----VFMADDSUB213PDZrbkz-----
	VFMADDSUB213PDZrbkz(1(Class<VR512>) -> 0(Class<VR512>))  [4.03;4.03]
		 Successful, latency: 4.03
	VFMADDSUB213PDZrbkz(3(Class<VR512>) -> 0(Class<VR512>))  [4.05;4.05]
		 Successful, latency: 4.05
	VFMADDSUB213PDZrbkz(4(Class<VR512>) -> 0(Class<VR512>))  [4.03;4.03]
		 Successful, latency: 4.03

-----VFMADDSUB213PDZrk-----
	VFMADDSUB213PDZrk(1(Class<VR512>) -> 0(Class<VR512>))  [4.06;4.06]
		 Successful, latency: 4.06
	VFMADDSUB213PDZrk(3(Class<VR512>) -> 0(Class<VR512>))  [4.04;4.04]
		 Successful, latency: 4.04
	VFMADDSUB213PDZrk(4(Class<VR512>) -> 0(Class<VR512>))  [4.07;4.07]
		 Successful, latency: 4.07

-----VFMADDSUB213PDZrkz-----
	VFMADDSUB213PDZrkz(1(Class<VR512>) -> 0(Class<VR512>))  [4.06;4.06]
		 Successful, latency: 4.06
	VFMADDSUB213PDZrkz(3(Class<VR512>) -> 0(Class<VR512>))  [4.05;4.05]
		 Successful, latency: 4.05
	VFMADDSUB213PDZrkz(4(Class<VR512>) -> 0(Class<VR512>))  [4.05;4.05]
		 Successful, latency: 4.05

-----VFMADDSUB213PDr-----
	VFMADDSUB213PDr(1(Class<VR128>) -> 0(Class<VR128>))  [4.05;4.05]
		 Successful, latency: 4.05
	VFMADDSUB213PDr(2(Class<VR128>) -> 0(Class<VR128>))  [4.03;4.03]
		 Successful, latency: 4.03
	VFMADDSUB213PDr(3(Class<VR128>) -> 0(Class<VR128>))  [4.06;4.06]
		 Successful, latency: 4.06

-----VFMADDSUB213PHZ128r-----
	VFMADDSUB213PHZ128r(1(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMADDSUB213PHZ128r(2(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMADDSUB213PHZ128r(3(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VFMADDSUB213PHZ128rk-----
	VFMADDSUB213PHZ128rk(1(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMADDSUB213PHZ128rk(3(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMADDSUB213PHZ128rk(4(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VFMADDSUB213PHZ128rkz-----
	VFMADDSUB213PHZ128rkz(1(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMADDSUB213PHZ128rkz(3(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMADDSUB213PHZ128rkz(4(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VFMADDSUB213PHZ256r-----
	VFMADDSUB213PHZ256r(1(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMADDSUB213PHZ256r(2(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMADDSUB213PHZ256r(3(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VFMADDSUB213PHZ256rb-----
	VFMADDSUB213PHZ256rb(1(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMADDSUB213PHZ256rb(2(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMADDSUB213PHZ256rb(3(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VFMADDSUB213PHZ256rbk-----
	VFMADDSUB213PHZ256rbk(1(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMADDSUB213PHZ256rbk(3(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMADDSUB213PHZ256rbk(4(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VFMADDSUB213PHZ256rbkz-----
	VFMADDSUB213PHZ256rbkz(1(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMADDSUB213PHZ256rbkz(3(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMADDSUB213PHZ256rbkz(4(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VFMADDSUB213PHZ256rk-----
	VFMADDSUB213PHZ256rk(1(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMADDSUB213PHZ256rk(3(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMADDSUB213PHZ256rk(4(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VFMADDSUB213PHZ256rkz-----
	VFMADDSUB213PHZ256rkz(1(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMADDSUB213PHZ256rkz(3(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMADDSUB213PHZ256rkz(4(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VFMADDSUB213PHZr-----
	VFMADDSUB213PHZr(1(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMADDSUB213PHZr(2(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMADDSUB213PHZr(3(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VFMADDSUB213PHZrb-----
	VFMADDSUB213PHZrb(1(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMADDSUB213PHZrb(2(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMADDSUB213PHZrb(3(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VFMADDSUB213PHZrbk-----
	VFMADDSUB213PHZrbk(1(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMADDSUB213PHZrbk(3(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMADDSUB213PHZrbk(4(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VFMADDSUB213PHZrbkz-----
	VFMADDSUB213PHZrbkz(1(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMADDSUB213PHZrbkz(3(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMADDSUB213PHZrbkz(4(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VFMADDSUB213PHZrk-----
	VFMADDSUB213PHZrk(1(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMADDSUB213PHZrk(3(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMADDSUB213PHZrk(4(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VFMADDSUB213PHZrkz-----
	VFMADDSUB213PHZrkz(1(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMADDSUB213PHZrkz(3(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMADDSUB213PHZrkz(4(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VFMADDSUB213PSYr-----
	VFMADDSUB213PSYr(1(Class<VR256>) -> 0(Class<VR256>))  [4.03;4.03]
		 Successful, latency: 4.03
	VFMADDSUB213PSYr(2(Class<VR256>) -> 0(Class<VR256>))  [4.04;4.04]
		 Successful, latency: 4.04
	VFMADDSUB213PSYr(3(Class<VR256>) -> 0(Class<VR256>))  [4.03;4.03]
		 Successful, latency: 4.03

-----VFMADDSUB213PSZ128r-----
	VFMADDSUB213PSZ128r(1(Class<VR128X>) -> 0(Class<VR128X>))  [4.03;4.03]
		 Successful, latency: 4.03
	VFMADDSUB213PSZ128r(2(Class<VR128X>) -> 0(Class<VR128X>))  [4.03;4.03]
		 Successful, latency: 4.03
	VFMADDSUB213PSZ128r(3(Class<VR128X>) -> 0(Class<VR128X>))  [4.04;4.04]
		 Successful, latency: 4.04

-----VFMADDSUB213PSZ128rk-----
	VFMADDSUB213PSZ128rk(1(Class<VR128X>) -> 0(Class<VR128X>))  [4.03;4.03]
		 Successful, latency: 4.03
	VFMADDSUB213PSZ128rk(3(Class<VR128X>) -> 0(Class<VR128X>))  [4.02;4.02]
		 Successful, latency: 4.02
	VFMADDSUB213PSZ128rk(4(Class<VR128X>) -> 0(Class<VR128X>))  [4.05;4.05]
		 Successful, latency: 4.05

-----VFMADDSUB213PSZ128rkz-----
	VFMADDSUB213PSZ128rkz(1(Class<VR128X>) -> 0(Class<VR128X>))  [4.04;4.04]
		 Successful, latency: 4.04
	VFMADDSUB213PSZ128rkz(3(Class<VR128X>) -> 0(Class<VR128X>))  [4.07;4.07]
		 Successful, latency: 4.07
	VFMADDSUB213PSZ128rkz(4(Class<VR128X>) -> 0(Class<VR128X>))  [4.02;4.02]
		 Successful, latency: 4.02

-----VFMADDSUB213PSZ256r-----
	VFMADDSUB213PSZ256r(1(Class<VR256X>) -> 0(Class<VR256X>))  [4.05;4.05]
		 Successful, latency: 4.05
	VFMADDSUB213PSZ256r(2(Class<VR256X>) -> 0(Class<VR256X>))  [4.04;4.04]
		 Successful, latency: 4.04
	VFMADDSUB213PSZ256r(3(Class<VR256X>) -> 0(Class<VR256X>))  [4.04;4.04]
		 Successful, latency: 4.04

-----VFMADDSUB213PSZ256rb-----
	VFMADDSUB213PSZ256rb(1(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMADDSUB213PSZ256rb(2(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMADDSUB213PSZ256rb(3(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VFMADDSUB213PSZ256rbk-----
	VFMADDSUB213PSZ256rbk(1(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMADDSUB213PSZ256rbk(3(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMADDSUB213PSZ256rbk(4(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VFMADDSUB213PSZ256rbkz-----
	VFMADDSUB213PSZ256rbkz(1(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMADDSUB213PSZ256rbkz(3(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMADDSUB213PSZ256rbkz(4(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VFMADDSUB213PSZ256rk-----
	VFMADDSUB213PSZ256rk(1(Class<VR256X>) -> 0(Class<VR256X>))  [4.03;4.03]
		 Successful, latency: 4.03
	VFMADDSUB213PSZ256rk(3(Class<VR256X>) -> 0(Class<VR256X>))  [4.03;4.03]
		 Successful, latency: 4.03
	VFMADDSUB213PSZ256rk(4(Class<VR256X>) -> 0(Class<VR256X>))  [4.03;4.03]
		 Successful, latency: 4.03

-----VFMADDSUB213PSZ256rkz-----
	VFMADDSUB213PSZ256rkz(1(Class<VR256X>) -> 0(Class<VR256X>))  [4.02;4.02]
		 Successful, latency: 4.02
	VFMADDSUB213PSZ256rkz(3(Class<VR256X>) -> 0(Class<VR256X>))  [4.05;4.05]
		 Successful, latency: 4.05
	VFMADDSUB213PSZ256rkz(4(Class<VR256X>) -> 0(Class<VR256X>))  [4.04;4.04]
		 Successful, latency: 4.04

-----VFMADDSUB213PSZr-----
	VFMADDSUB213PSZr(1(Class<VR512>) -> 0(Class<VR512>))  [4.04;4.04]
		 Successful, latency: 4.04
	VFMADDSUB213PSZr(2(Class<VR512>) -> 0(Class<VR512>))  [4.03;4.03]
		 Successful, latency: 4.03
	VFMADDSUB213PSZr(3(Class<VR512>) -> 0(Class<VR512>))  [4.04;4.04]
		 Successful, latency: 4.04

-----VFMADDSUB213PSZrb-----
	VFMADDSUB213PSZrb(1(Class<VR512>) -> 0(Class<VR512>))  [4.04;4.04]
		 Successful, latency: 4.04
	VFMADDSUB213PSZrb(2(Class<VR512>) -> 0(Class<VR512>))  [4.03;4.03]
		 Successful, latency: 4.03
	VFMADDSUB213PSZrb(3(Class<VR512>) -> 0(Class<VR512>))  [4.05;4.05]
		 Successful, latency: 4.05

-----VFMADDSUB213PSZrbk-----
	VFMADDSUB213PSZrbk(1(Class<VR512>) -> 0(Class<VR512>))  [4.03;4.03]
		 Successful, latency: 4.03
	VFMADDSUB213PSZrbk(3(Class<VR512>) -> 0(Class<VR512>))  [4.05;4.05]
		 Successful, latency: 4.05
	VFMADDSUB213PSZrbk(4(Class<VR512>) -> 0(Class<VR512>))  [4.04;4.04]
		 Successful, latency: 4.04

-----VFMADDSUB213PSZrbkz-----
	VFMADDSUB213PSZrbkz(1(Class<VR512>) -> 0(Class<VR512>))  [4.03;4.03]
		 Successful, latency: 4.03
	VFMADDSUB213PSZrbkz(3(Class<VR512>) -> 0(Class<VR512>))  [4.04;4.04]
		 Successful, latency: 4.04
	VFMADDSUB213PSZrbkz(4(Class<VR512>) -> 0(Class<VR512>))  [4.03;4.03]
		 Successful, latency: 4.03

-----VFMADDSUB213PSZrk-----
	VFMADDSUB213PSZrk(1(Class<VR512>) -> 0(Class<VR512>))  [4.03;4.03]
		 Successful, latency: 4.03
	VFMADDSUB213PSZrk(3(Class<VR512>) -> 0(Class<VR512>))  [4.04;4.04]
		 Successful, latency: 4.04
	VFMADDSUB213PSZrk(4(Class<VR512>) -> 0(Class<VR512>))  [4.03;4.03]
		 Successful, latency: 4.03

-----VFMADDSUB213PSZrkz-----
	VFMADDSUB213PSZrkz(1(Class<VR512>) -> 0(Class<VR512>))  [4.05;4.05]
		 Successful, latency: 4.05
	VFMADDSUB213PSZrkz(3(Class<VR512>) -> 0(Class<VR512>))  [4.04;4.04]
		 Successful, latency: 4.04
	VFMADDSUB213PSZrkz(4(Class<VR512>) -> 0(Class<VR512>))  [4.05;4.05]
		 Successful, latency: 4.05

-----VFMADDSUB213PSr-----
	VFMADDSUB213PSr(1(Class<VR128>) -> 0(Class<VR128>))  [4.03;4.03]
		 Successful, latency: 4.03
	VFMADDSUB213PSr(2(Class<VR128>) -> 0(Class<VR128>))  [4.06;4.06]
		 Successful, latency: 4.06
	VFMADDSUB213PSr(3(Class<VR128>) -> 0(Class<VR128>))  [4.03;4.03]
		 Successful, latency: 4.03

-----VFMADDSUB231PDYr-----
	VFMADDSUB231PDYr(1(Class<VR256>) -> 0(Class<VR256>))  [4.05;4.05]
		 Successful, latency: 4.05
	VFMADDSUB231PDYr(2(Class<VR256>) -> 0(Class<VR256>))  [4.03;4.03]
		 Successful, latency: 4.03
	VFMADDSUB231PDYr(3(Class<VR256>) -> 0(Class<VR256>))  [4.02;4.02]
		 Successful, latency: 4.02

-----VFMADDSUB231PDZ128r-----
	VFMADDSUB231PDZ128r(1(Class<VR128X>) -> 0(Class<VR128X>))  [4.03;4.03]
		 Successful, latency: 4.03
	VFMADDSUB231PDZ128r(2(Class<VR128X>) -> 0(Class<VR128X>))  [4.04;4.04]
		 Successful, latency: 4.04
	VFMADDSUB231PDZ128r(3(Class<VR128X>) -> 0(Class<VR128X>))  [4.01;4.01]
		 Successful, latency: 4.01

-----VFMADDSUB231PDZ128rk-----
	VFMADDSUB231PDZ128rk(1(Class<VR128X>) -> 0(Class<VR128X>))  [4.05;4.05]
		 Successful, latency: 4.05
	VFMADDSUB231PDZ128rk(3(Class<VR128X>) -> 0(Class<VR128X>))  [4.01;4.01]
		 Successful, latency: 4.01
	VFMADDSUB231PDZ128rk(4(Class<VR128X>) -> 0(Class<VR128X>))  [4.04;4.04]
		 Successful, latency: 4.04

-----VFMADDSUB231PDZ128rkz-----
	VFMADDSUB231PDZ128rkz(1(Class<VR128X>) -> 0(Class<VR128X>))  [4.03;4.03]
		 Successful, latency: 4.03
	VFMADDSUB231PDZ128rkz(3(Class<VR128X>) -> 0(Class<VR128X>))  [4.04;4.04]
		 Successful, latency: 4.04
	VFMADDSUB231PDZ128rkz(4(Class<VR128X>) -> 0(Class<VR128X>))  [4.06;4.06]
		 Successful, latency: 4.06

-----VFMADDSUB231PDZ256r-----
	VFMADDSUB231PDZ256r(1(Class<VR256X>) -> 0(Class<VR256X>))  [4.05;4.05]
		 Successful, latency: 4.05
	VFMADDSUB231PDZ256r(2(Class<VR256X>) -> 0(Class<VR256X>))  [4.07;4.07]
		 Successful, latency: 4.07
	VFMADDSUB231PDZ256r(3(Class<VR256X>) -> 0(Class<VR256X>))  [4.06;4.06]
		 Successful, latency: 4.06

-----VFMADDSUB231PDZ256rb-----
	VFMADDSUB231PDZ256rb(1(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMADDSUB231PDZ256rb(2(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMADDSUB231PDZ256rb(3(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VFMADDSUB231PDZ256rbk-----
	VFMADDSUB231PDZ256rbk(1(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMADDSUB231PDZ256rbk(3(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMADDSUB231PDZ256rbk(4(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VFMADDSUB231PDZ256rbkz-----
	VFMADDSUB231PDZ256rbkz(1(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMADDSUB231PDZ256rbkz(3(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMADDSUB231PDZ256rbkz(4(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VFMADDSUB231PDZ256rk-----
	VFMADDSUB231PDZ256rk(1(Class<VR256X>) -> 0(Class<VR256X>))  [4.05;4.05]
		 Successful, latency: 4.05
	VFMADDSUB231PDZ256rk(3(Class<VR256X>) -> 0(Class<VR256X>))  [4.04;4.04]
		 Successful, latency: 4.04
	VFMADDSUB231PDZ256rk(4(Class<VR256X>) -> 0(Class<VR256X>))  [4.03;4.03]
		 Successful, latency: 4.03

-----VFMADDSUB231PDZ256rkz-----
	VFMADDSUB231PDZ256rkz(1(Class<VR256X>) -> 0(Class<VR256X>))  [4.07;4.07]
		 Successful, latency: 4.07
	VFMADDSUB231PDZ256rkz(3(Class<VR256X>) -> 0(Class<VR256X>))  [4.04;4.04]
		 Successful, latency: 4.04
	VFMADDSUB231PDZ256rkz(4(Class<VR256X>) -> 0(Class<VR256X>))  [4.03;4.03]
		 Successful, latency: 4.03

-----VFMADDSUB231PDZr-----
	VFMADDSUB231PDZr(1(Class<VR512>) -> 0(Class<VR512>))  [4.02;4.02]
		 Successful, latency: 4.02
	VFMADDSUB231PDZr(2(Class<VR512>) -> 0(Class<VR512>))  [4.07;4.07]
		 Successful, latency: 4.07
	VFMADDSUB231PDZr(3(Class<VR512>) -> 0(Class<VR512>))  [4.02;4.02]
		 Successful, latency: 4.02

-----VFMADDSUB231PDZrb-----
	VFMADDSUB231PDZrb(1(Class<VR512>) -> 0(Class<VR512>))  [4.05;4.05]
		 Successful, latency: 4.05
	VFMADDSUB231PDZrb(2(Class<VR512>) -> 0(Class<VR512>))  [4.05;4.05]
		 Successful, latency: 4.05
	VFMADDSUB231PDZrb(3(Class<VR512>) -> 0(Class<VR512>))  [4.04;4.04]
		 Successful, latency: 4.04

-----VFMADDSUB231PDZrbk-----
	VFMADDSUB231PDZrbk(1(Class<VR512>) -> 0(Class<VR512>))  [4.05;4.05]
		 Successful, latency: 4.05
	VFMADDSUB231PDZrbk(3(Class<VR512>) -> 0(Class<VR512>))  [4.03;4.03]
		 Successful, latency: 4.03
	VFMADDSUB231PDZrbk(4(Class<VR512>) -> 0(Class<VR512>))  [4.03;4.03]
		 Successful, latency: 4.03

-----VFMADDSUB231PDZrbkz-----
	VFMADDSUB231PDZrbkz(1(Class<VR512>) -> 0(Class<VR512>))  [4.06;4.06]
		 Successful, latency: 4.06
	VFMADDSUB231PDZrbkz(3(Class<VR512>) -> 0(Class<VR512>))  [4.03;4.03]
		 Successful, latency: 4.03
	VFMADDSUB231PDZrbkz(4(Class<VR512>) -> 0(Class<VR512>))  [4.04;4.04]
		 Successful, latency: 4.04

-----VFMADDSUB231PDZrk-----
	VFMADDSUB231PDZrk(1(Class<VR512>) -> 0(Class<VR512>))  [4.05;4.05]
		 Successful, latency: 4.05
	VFMADDSUB231PDZrk(3(Class<VR512>) -> 0(Class<VR512>))  [4.05;4.05]
		 Successful, latency: 4.05
	VFMADDSUB231PDZrk(4(Class<VR512>) -> 0(Class<VR512>))  [4.05;4.05]
		 Successful, latency: 4.05

-----VFMADDSUB231PDZrkz-----
	VFMADDSUB231PDZrkz(1(Class<VR512>) -> 0(Class<VR512>))  [4.06;4.06]
		 Successful, latency: 4.06
	VFMADDSUB231PDZrkz(3(Class<VR512>) -> 0(Class<VR512>))  [4.05;4.05]
		 Successful, latency: 4.05
	VFMADDSUB231PDZrkz(4(Class<VR512>) -> 0(Class<VR512>))  [4.02;4.02]
		 Successful, latency: 4.02

-----VFMADDSUB231PDr-----
	VFMADDSUB231PDr(1(Class<VR128>) -> 0(Class<VR128>))  [4.02;4.02]
		 Successful, latency: 4.02
	VFMADDSUB231PDr(2(Class<VR128>) -> 0(Class<VR128>))  [4.05;4.05]
		 Successful, latency: 4.05
	VFMADDSUB231PDr(3(Class<VR128>) -> 0(Class<VR128>))  [4.03;4.03]
		 Successful, latency: 4.03

-----VFMADDSUB231PHZ128r-----
	VFMADDSUB231PHZ128r(1(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMADDSUB231PHZ128r(2(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMADDSUB231PHZ128r(3(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VFMADDSUB231PHZ128rk-----
	VFMADDSUB231PHZ128rk(1(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMADDSUB231PHZ128rk(3(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMADDSUB231PHZ128rk(4(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VFMADDSUB231PHZ128rkz-----
	VFMADDSUB231PHZ128rkz(1(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMADDSUB231PHZ128rkz(3(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMADDSUB231PHZ128rkz(4(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VFMADDSUB231PHZ256r-----
	VFMADDSUB231PHZ256r(1(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMADDSUB231PHZ256r(2(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMADDSUB231PHZ256r(3(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VFMADDSUB231PHZ256rb-----
	VFMADDSUB231PHZ256rb(1(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMADDSUB231PHZ256rb(2(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMADDSUB231PHZ256rb(3(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VFMADDSUB231PHZ256rbk-----
	VFMADDSUB231PHZ256rbk(1(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMADDSUB231PHZ256rbk(3(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMADDSUB231PHZ256rbk(4(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VFMADDSUB231PHZ256rbkz-----
	VFMADDSUB231PHZ256rbkz(1(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMADDSUB231PHZ256rbkz(3(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMADDSUB231PHZ256rbkz(4(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VFMADDSUB231PHZ256rk-----
	VFMADDSUB231PHZ256rk(1(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMADDSUB231PHZ256rk(3(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMADDSUB231PHZ256rk(4(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VFMADDSUB231PHZ256rkz-----
	VFMADDSUB231PHZ256rkz(1(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMADDSUB231PHZ256rkz(3(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMADDSUB231PHZ256rkz(4(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VFMADDSUB231PHZr-----
	VFMADDSUB231PHZr(1(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMADDSUB231PHZr(2(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMADDSUB231PHZr(3(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VFMADDSUB231PHZrb-----
	VFMADDSUB231PHZrb(1(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMADDSUB231PHZrb(2(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMADDSUB231PHZrb(3(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VFMADDSUB231PHZrbk-----
	VFMADDSUB231PHZrbk(1(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMADDSUB231PHZrbk(3(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMADDSUB231PHZrbk(4(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VFMADDSUB231PHZrbkz-----
	VFMADDSUB231PHZrbkz(1(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMADDSUB231PHZrbkz(3(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMADDSUB231PHZrbkz(4(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VFMADDSUB231PHZrk-----
	VFMADDSUB231PHZrk(1(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMADDSUB231PHZrk(3(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMADDSUB231PHZrk(4(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VFMADDSUB231PHZrkz-----
	VFMADDSUB231PHZrkz(1(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMADDSUB231PHZrkz(3(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMADDSUB231PHZrkz(4(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VFMADDSUB231PSYr-----
	VFMADDSUB231PSYr(1(Class<VR256>) -> 0(Class<VR256>))  [4.03;4.03]
		 Successful, latency: 4.03
	VFMADDSUB231PSYr(2(Class<VR256>) -> 0(Class<VR256>))  [4.02;4.02]
		 Successful, latency: 4.02
	VFMADDSUB231PSYr(3(Class<VR256>) -> 0(Class<VR256>))  [4.04;4.04]
		 Successful, latency: 4.04

-----VFMADDSUB231PSZ128r-----
	VFMADDSUB231PSZ128r(1(Class<VR128X>) -> 0(Class<VR128X>))  [4.02;4.02]
		 Successful, latency: 4.02
	VFMADDSUB231PSZ128r(2(Class<VR128X>) -> 0(Class<VR128X>))  [4.03;4.03]
		 Successful, latency: 4.03
	VFMADDSUB231PSZ128r(3(Class<VR128X>) -> 0(Class<VR128X>))  [4.04;4.04]
		 Successful, latency: 4.04

-----VFMADDSUB231PSZ128rk-----
	VFMADDSUB231PSZ128rk(1(Class<VR128X>) -> 0(Class<VR128X>))  [4.04;4.04]
		 Successful, latency: 4.04
	VFMADDSUB231PSZ128rk(3(Class<VR128X>) -> 0(Class<VR128X>))  [4.03;4.03]
		 Successful, latency: 4.03
	VFMADDSUB231PSZ128rk(4(Class<VR128X>) -> 0(Class<VR128X>))  [4.04;4.04]
		 Successful, latency: 4.04

-----VFMADDSUB231PSZ128rkz-----
	VFMADDSUB231PSZ128rkz(1(Class<VR128X>) -> 0(Class<VR128X>))  [4.05;4.05]
		 Successful, latency: 4.05
	VFMADDSUB231PSZ128rkz(3(Class<VR128X>) -> 0(Class<VR128X>))  [4.03;4.03]
		 Successful, latency: 4.03
	VFMADDSUB231PSZ128rkz(4(Class<VR128X>) -> 0(Class<VR128X>))  [4.05;4.05]
		 Successful, latency: 4.05

-----VFMADDSUB231PSZ256r-----
	VFMADDSUB231PSZ256r(1(Class<VR256X>) -> 0(Class<VR256X>))  [4.03;4.03]
		 Successful, latency: 4.03
	VFMADDSUB231PSZ256r(2(Class<VR256X>) -> 0(Class<VR256X>))  [4.05;4.05]
		 Successful, latency: 4.05
	VFMADDSUB231PSZ256r(3(Class<VR256X>) -> 0(Class<VR256X>))  [4.04;4.04]
		 Successful, latency: 4.04

-----VFMADDSUB231PSZ256rb-----
	VFMADDSUB231PSZ256rb(1(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMADDSUB231PSZ256rb(2(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMADDSUB231PSZ256rb(3(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VFMADDSUB231PSZ256rbk-----
	VFMADDSUB231PSZ256rbk(1(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMADDSUB231PSZ256rbk(3(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMADDSUB231PSZ256rbk(4(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VFMADDSUB231PSZ256rbkz-----
	VFMADDSUB231PSZ256rbkz(1(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMADDSUB231PSZ256rbkz(3(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMADDSUB231PSZ256rbkz(4(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VFMADDSUB231PSZ256rk-----
	VFMADDSUB231PSZ256rk(1(Class<VR256X>) -> 0(Class<VR256X>))  [4.05;4.05]
		 Successful, latency: 4.05
	VFMADDSUB231PSZ256rk(3(Class<VR256X>) -> 0(Class<VR256X>))  [4.04;4.04]
		 Successful, latency: 4.04
	VFMADDSUB231PSZ256rk(4(Class<VR256X>) -> 0(Class<VR256X>))  [4.02;4.02]
		 Successful, latency: 4.02

-----VFMADDSUB231PSZ256rkz-----
	VFMADDSUB231PSZ256rkz(1(Class<VR256X>) -> 0(Class<VR256X>))  [4.03;4.03]
		 Successful, latency: 4.03
	VFMADDSUB231PSZ256rkz(3(Class<VR256X>) -> 0(Class<VR256X>))  [4.03;4.03]
		 Successful, latency: 4.03
	VFMADDSUB231PSZ256rkz(4(Class<VR256X>) -> 0(Class<VR256X>))  [4.02;4.02]
		 Successful, latency: 4.02

-----VFMADDSUB231PSZr-----
	VFMADDSUB231PSZr(1(Class<VR512>) -> 0(Class<VR512>))  [4.03;4.03]
		 Successful, latency: 4.03
	VFMADDSUB231PSZr(2(Class<VR512>) -> 0(Class<VR512>))  [4.05;4.05]
		 Successful, latency: 4.05
	VFMADDSUB231PSZr(3(Class<VR512>) -> 0(Class<VR512>))  [4.02;4.02]
		 Successful, latency: 4.02

-----VFMADDSUB231PSZrb-----
	VFMADDSUB231PSZrb(1(Class<VR512>) -> 0(Class<VR512>))  [4.05;4.05]
		 Successful, latency: 4.05
	VFMADDSUB231PSZrb(2(Class<VR512>) -> 0(Class<VR512>))  [4.04;4.04]
		 Successful, latency: 4.04
	VFMADDSUB231PSZrb(3(Class<VR512>) -> 0(Class<VR512>))  [4.06;4.06]
		 Successful, latency: 4.06

-----VFMADDSUB231PSZrbk-----
	VFMADDSUB231PSZrbk(1(Class<VR512>) -> 0(Class<VR512>))  [4.04;4.04]
		 Successful, latency: 4.04
	VFMADDSUB231PSZrbk(3(Class<VR512>) -> 0(Class<VR512>))  [4.05;4.05]
		 Successful, latency: 4.05
	VFMADDSUB231PSZrbk(4(Class<VR512>) -> 0(Class<VR512>))  [4.06;4.06]
		 Successful, latency: 4.06

-----VFMADDSUB231PSZrbkz-----
	VFMADDSUB231PSZrbkz(1(Class<VR512>) -> 0(Class<VR512>))  [4.05;4.05]
		 Successful, latency: 4.05
	VFMADDSUB231PSZrbkz(3(Class<VR512>) -> 0(Class<VR512>))  [4.06;4.06]
		 Successful, latency: 4.06
	VFMADDSUB231PSZrbkz(4(Class<VR512>) -> 0(Class<VR512>))  [4.05;4.05]
		 Successful, latency: 4.05

-----VFMADDSUB231PSZrk-----
	VFMADDSUB231PSZrk(1(Class<VR512>) -> 0(Class<VR512>))  [4.04;4.04]
		 Successful, latency: 4.04
	VFMADDSUB231PSZrk(3(Class<VR512>) -> 0(Class<VR512>))  [4.03;4.03]
		 Successful, latency: 4.03
	VFMADDSUB231PSZrk(4(Class<VR512>) -> 0(Class<VR512>))  [4.05;4.05]
		 Successful, latency: 4.05

-----VFMADDSUB231PSZrkz-----
	VFMADDSUB231PSZrkz(1(Class<VR512>) -> 0(Class<VR512>))  [4.04;4.04]
		 Successful, latency: 4.04
	VFMADDSUB231PSZrkz(3(Class<VR512>) -> 0(Class<VR512>))  [4.06;4.06]
		 Successful, latency: 4.06
	VFMADDSUB231PSZrkz(4(Class<VR512>) -> 0(Class<VR512>))  [4.03;4.03]
		 Successful, latency: 4.03

-----VFMADDSUB231PSr-----
	VFMADDSUB231PSr(1(Class<VR128>) -> 0(Class<VR128>))  [4.03;4.03]
		 Successful, latency: 4.03
	VFMADDSUB231PSr(2(Class<VR128>) -> 0(Class<VR128>))  [4.03;4.03]
		 Successful, latency: 4.03
	VFMADDSUB231PSr(3(Class<VR128>) -> 0(Class<VR128>))  [4.05;4.05]
		 Successful, latency: 4.05

-----VFMADDSUBPD4Yrr-----
	VFMADDSUBPD4Yrr(1(Class<VR256>) -> 0(Class<VR256>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMADDSUBPD4Yrr(2(Class<VR256>) -> 0(Class<VR256>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMADDSUBPD4Yrr(3(Class<VR256>) -> 0(Class<VR256>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VFMADDSUBPD4Yrr_REV-----
	VFMADDSUBPD4Yrr_REV(1(Class<VR256>) -> 0(Class<VR256>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMADDSUBPD4Yrr_REV(2(Class<VR256>) -> 0(Class<VR256>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMADDSUBPD4Yrr_REV(3(Class<VR256>) -> 0(Class<VR256>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VFMADDSUBPD4rr-----
	VFMADDSUBPD4rr(1(Class<VR128>) -> 0(Class<VR128>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMADDSUBPD4rr(2(Class<VR128>) -> 0(Class<VR128>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMADDSUBPD4rr(3(Class<VR128>) -> 0(Class<VR128>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VFMADDSUBPD4rr_REV-----
	VFMADDSUBPD4rr_REV(1(Class<VR128>) -> 0(Class<VR128>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMADDSUBPD4rr_REV(2(Class<VR128>) -> 0(Class<VR128>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMADDSUBPD4rr_REV(3(Class<VR128>) -> 0(Class<VR128>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VFMADDSUBPS4Yrr-----
	VFMADDSUBPS4Yrr(1(Class<VR256>) -> 0(Class<VR256>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMADDSUBPS4Yrr(2(Class<VR256>) -> 0(Class<VR256>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMADDSUBPS4Yrr(3(Class<VR256>) -> 0(Class<VR256>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VFMADDSUBPS4Yrr_REV-----
	VFMADDSUBPS4Yrr_REV(1(Class<VR256>) -> 0(Class<VR256>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMADDSUBPS4Yrr_REV(2(Class<VR256>) -> 0(Class<VR256>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMADDSUBPS4Yrr_REV(3(Class<VR256>) -> 0(Class<VR256>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VFMADDSUBPS4rr-----
	VFMADDSUBPS4rr(1(Class<VR128>) -> 0(Class<VR128>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMADDSUBPS4rr(2(Class<VR128>) -> 0(Class<VR128>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMADDSUBPS4rr(3(Class<VR128>) -> 0(Class<VR128>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VFMADDSUBPS4rr_REV-----
	VFMADDSUBPS4rr_REV(1(Class<VR128>) -> 0(Class<VR128>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMADDSUBPS4rr_REV(2(Class<VR128>) -> 0(Class<VR128>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMADDSUBPS4rr_REV(3(Class<VR128>) -> 0(Class<VR128>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VFMSUB132BF16Z128r-----
	VFMSUB132BF16Z128r(1(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMSUB132BF16Z128r(2(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMSUB132BF16Z128r(3(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VFMSUB132BF16Z128rk-----
	VFMSUB132BF16Z128rk(1(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMSUB132BF16Z128rk(3(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMSUB132BF16Z128rk(4(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VFMSUB132BF16Z128rkz-----
	VFMSUB132BF16Z128rkz(1(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMSUB132BF16Z128rkz(3(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMSUB132BF16Z128rkz(4(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VFMSUB132BF16Z256r-----
	VFMSUB132BF16Z256r(1(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMSUB132BF16Z256r(2(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMSUB132BF16Z256r(3(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VFMSUB132BF16Z256rk-----
	VFMSUB132BF16Z256rk(1(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMSUB132BF16Z256rk(3(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMSUB132BF16Z256rk(4(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VFMSUB132BF16Z256rkz-----
	VFMSUB132BF16Z256rkz(1(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMSUB132BF16Z256rkz(3(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMSUB132BF16Z256rkz(4(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VFMSUB132BF16Zr-----
	VFMSUB132BF16Zr(1(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMSUB132BF16Zr(2(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMSUB132BF16Zr(3(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VFMSUB132BF16Zrk-----
	VFMSUB132BF16Zrk(1(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMSUB132BF16Zrk(3(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMSUB132BF16Zrk(4(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VFMSUB132BF16Zrkz-----
	VFMSUB132BF16Zrkz(1(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMSUB132BF16Zrkz(3(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMSUB132BF16Zrkz(4(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VFMSUB132PDYr-----
	VFMSUB132PDYr(1(Class<VR256>) -> 0(Class<VR256>))  [4.03;4.03]
		 Successful, latency: 4.03
	VFMSUB132PDYr(2(Class<VR256>) -> 0(Class<VR256>))  [4.04;4.04]
		 Successful, latency: 4.04
	VFMSUB132PDYr(3(Class<VR256>) -> 0(Class<VR256>))  [4.05;4.05]
		 Successful, latency: 4.05

-----VFMSUB132PDZ128r-----
	VFMSUB132PDZ128r(1(Class<VR128X>) -> 0(Class<VR128X>))  [4.04;4.04]
		 Successful, latency: 4.04
	VFMSUB132PDZ128r(2(Class<VR128X>) -> 0(Class<VR128X>))  [4.03;4.03]
		 Successful, latency: 4.03
	VFMSUB132PDZ128r(3(Class<VR128X>) -> 0(Class<VR128X>))  [4.04;4.04]
		 Successful, latency: 4.04

-----VFMSUB132PDZ128rk-----
	VFMSUB132PDZ128rk(1(Class<VR128X>) -> 0(Class<VR128X>))  [4.05;4.05]
		 Successful, latency: 4.05
	VFMSUB132PDZ128rk(3(Class<VR128X>) -> 0(Class<VR128X>))  [4.04;4.04]
		 Successful, latency: 4.04
	VFMSUB132PDZ128rk(4(Class<VR128X>) -> 0(Class<VR128X>))  [4.07;4.07]
		 Successful, latency: 4.07

-----VFMSUB132PDZ128rkz-----
	VFMSUB132PDZ128rkz(1(Class<VR128X>) -> 0(Class<VR128X>))  [4.05;4.05]
		 Successful, latency: 4.05
	VFMSUB132PDZ128rkz(3(Class<VR128X>) -> 0(Class<VR128X>))  [4.07;4.07]
		 Successful, latency: 4.07
	VFMSUB132PDZ128rkz(4(Class<VR128X>) -> 0(Class<VR128X>))  [4.06;4.06]
		 Successful, latency: 4.06

-----VFMSUB132PDZ256r-----
	VFMSUB132PDZ256r(1(Class<VR256X>) -> 0(Class<VR256X>))  [4.04;4.04]
		 Successful, latency: 4.04
	VFMSUB132PDZ256r(2(Class<VR256X>) -> 0(Class<VR256X>))  [4.04;4.04]
		 Successful, latency: 4.04
	VFMSUB132PDZ256r(3(Class<VR256X>) -> 0(Class<VR256X>))  [4.05;4.05]
		 Successful, latency: 4.05

-----VFMSUB132PDZ256rb-----
	VFMSUB132PDZ256rb(1(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMSUB132PDZ256rb(2(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMSUB132PDZ256rb(3(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VFMSUB132PDZ256rbk-----
	VFMSUB132PDZ256rbk(1(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMSUB132PDZ256rbk(3(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMSUB132PDZ256rbk(4(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VFMSUB132PDZ256rbkz-----
	VFMSUB132PDZ256rbkz(1(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMSUB132PDZ256rbkz(3(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMSUB132PDZ256rbkz(4(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VFMSUB132PDZ256rk-----
	VFMSUB132PDZ256rk(1(Class<VR256X>) -> 0(Class<VR256X>))  [4.03;4.03]
		 Successful, latency: 4.03
	VFMSUB132PDZ256rk(3(Class<VR256X>) -> 0(Class<VR256X>))  [4.05;4.05]
		 Successful, latency: 4.05
	VFMSUB132PDZ256rk(4(Class<VR256X>) -> 0(Class<VR256X>))  [4.02;4.02]
		 Successful, latency: 4.02

-----VFMSUB132PDZ256rkz-----
	VFMSUB132PDZ256rkz(1(Class<VR256X>) -> 0(Class<VR256X>))  [4.03;4.03]
		 Successful, latency: 4.03
	VFMSUB132PDZ256rkz(3(Class<VR256X>) -> 0(Class<VR256X>))  [4.04;4.04]
		 Successful, latency: 4.04
	VFMSUB132PDZ256rkz(4(Class<VR256X>) -> 0(Class<VR256X>))  [4.04;4.04]
		 Successful, latency: 4.04

-----VFMSUB132PDZr-----
	VFMSUB132PDZr(1(Class<VR512>) -> 0(Class<VR512>))  [4.03;4.03]
		 Successful, latency: 4.03
	VFMSUB132PDZr(2(Class<VR512>) -> 0(Class<VR512>))  [4.03;4.03]
		 Successful, latency: 4.03
	VFMSUB132PDZr(3(Class<VR512>) -> 0(Class<VR512>))  [4.03;4.03]
		 Successful, latency: 4.03

-----VFMSUB132PDZrb-----
	VFMSUB132PDZrb(1(Class<VR512>) -> 0(Class<VR512>))  [4.03;4.03]
		 Successful, latency: 4.03
	VFMSUB132PDZrb(2(Class<VR512>) -> 0(Class<VR512>))  [4.03;4.03]
		 Successful, latency: 4.03
	VFMSUB132PDZrb(3(Class<VR512>) -> 0(Class<VR512>))  [4.04;4.04]
		 Successful, latency: 4.04

-----VFMSUB132PDZrbk-----
	VFMSUB132PDZrbk(1(Class<VR512>) -> 0(Class<VR512>))  [4.07;4.07]
		 Successful, latency: 4.07
	VFMSUB132PDZrbk(3(Class<VR512>) -> 0(Class<VR512>))  [4.03;4.03]
		 Successful, latency: 4.03
	VFMSUB132PDZrbk(4(Class<VR512>) -> 0(Class<VR512>))  [4.05;4.05]
		 Successful, latency: 4.05

-----VFMSUB132PDZrbkz-----
	VFMSUB132PDZrbkz(1(Class<VR512>) -> 0(Class<VR512>))  [4.03;4.03]
		 Successful, latency: 4.03
	VFMSUB132PDZrbkz(3(Class<VR512>) -> 0(Class<VR512>))  [4.04;4.04]
		 Successful, latency: 4.04
	VFMSUB132PDZrbkz(4(Class<VR512>) -> 0(Class<VR512>))  [4.04;4.04]
		 Successful, latency: 4.04

-----VFMSUB132PDZrk-----
	VFMSUB132PDZrk(1(Class<VR512>) -> 0(Class<VR512>))  [4.04;4.04]
		 Successful, latency: 4.04
	VFMSUB132PDZrk(3(Class<VR512>) -> 0(Class<VR512>))  [4.03;4.03]
		 Successful, latency: 4.03
	VFMSUB132PDZrk(4(Class<VR512>) -> 0(Class<VR512>))  [4.04;4.04]
		 Successful, latency: 4.04

-----VFMSUB132PDZrkz-----
	VFMSUB132PDZrkz(1(Class<VR512>) -> 0(Class<VR512>))  [4.04;4.04]
		 Successful, latency: 4.04
	VFMSUB132PDZrkz(3(Class<VR512>) -> 0(Class<VR512>))  [4.04;4.04]
		 Successful, latency: 4.04
	VFMSUB132PDZrkz(4(Class<VR512>) -> 0(Class<VR512>))  [4.04;4.04]
		 Successful, latency: 4.04

-----VFMSUB132PDr-----
	VFMSUB132PDr(1(Class<VR128>) -> 0(Class<VR128>))  [4.05;4.05]
		 Successful, latency: 4.05
	VFMSUB132PDr(2(Class<VR128>) -> 0(Class<VR128>))  [4.04;4.04]
		 Successful, latency: 4.04
	VFMSUB132PDr(3(Class<VR128>) -> 0(Class<VR128>))  [4.06;4.06]
		 Successful, latency: 4.06

-----VFMSUB132PHZ128r-----
	VFMSUB132PHZ128r(1(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMSUB132PHZ128r(2(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMSUB132PHZ128r(3(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VFMSUB132PHZ128rk-----
	VFMSUB132PHZ128rk(1(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMSUB132PHZ128rk(3(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMSUB132PHZ128rk(4(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VFMSUB132PHZ128rkz-----
	VFMSUB132PHZ128rkz(1(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMSUB132PHZ128rkz(3(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMSUB132PHZ128rkz(4(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VFMSUB132PHZ256r-----
	VFMSUB132PHZ256r(1(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMSUB132PHZ256r(2(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMSUB132PHZ256r(3(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VFMSUB132PHZ256rb-----
	VFMSUB132PHZ256rb(1(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMSUB132PHZ256rb(2(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMSUB132PHZ256rb(3(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VFMSUB132PHZ256rbk-----
	VFMSUB132PHZ256rbk(1(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMSUB132PHZ256rbk(3(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMSUB132PHZ256rbk(4(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VFMSUB132PHZ256rbkz-----
	VFMSUB132PHZ256rbkz(1(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMSUB132PHZ256rbkz(3(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMSUB132PHZ256rbkz(4(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VFMSUB132PHZ256rk-----
	VFMSUB132PHZ256rk(1(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMSUB132PHZ256rk(3(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMSUB132PHZ256rk(4(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VFMSUB132PHZ256rkz-----
	VFMSUB132PHZ256rkz(1(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMSUB132PHZ256rkz(3(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMSUB132PHZ256rkz(4(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VFMSUB132PHZr-----
	VFMSUB132PHZr(1(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMSUB132PHZr(2(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMSUB132PHZr(3(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VFMSUB132PHZrb-----
	VFMSUB132PHZrb(1(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMSUB132PHZrb(2(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMSUB132PHZrb(3(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VFMSUB132PHZrbk-----
	VFMSUB132PHZrbk(1(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMSUB132PHZrbk(3(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMSUB132PHZrbk(4(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VFMSUB132PHZrbkz-----
	VFMSUB132PHZrbkz(1(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMSUB132PHZrbkz(3(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMSUB132PHZrbkz(4(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VFMSUB132PHZrk-----
	VFMSUB132PHZrk(1(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMSUB132PHZrk(3(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMSUB132PHZrk(4(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VFMSUB132PHZrkz-----
	VFMSUB132PHZrkz(1(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMSUB132PHZrkz(3(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMSUB132PHZrkz(4(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VFMSUB132PSYr-----
	VFMSUB132PSYr(1(Class<VR256>) -> 0(Class<VR256>))  [4.05;4.05]
		 Successful, latency: 4.05
	VFMSUB132PSYr(2(Class<VR256>) -> 0(Class<VR256>))  [4.05;4.05]
		 Successful, latency: 4.05
	VFMSUB132PSYr(3(Class<VR256>) -> 0(Class<VR256>))  [4.02;4.02]
		 Successful, latency: 4.02

-----VFMSUB132PSZ128r-----
	VFMSUB132PSZ128r(1(Class<VR128X>) -> 0(Class<VR128X>))  [4.03;4.03]
		 Successful, latency: 4.03
	VFMSUB132PSZ128r(2(Class<VR128X>) -> 0(Class<VR128X>))  [4.04;4.04]
		 Successful, latency: 4.04
	VFMSUB132PSZ128r(3(Class<VR128X>) -> 0(Class<VR128X>))  [4.04;4.04]
		 Successful, latency: 4.04

-----VFMSUB132PSZ128rk-----
	VFMSUB132PSZ128rk(1(Class<VR128X>) -> 0(Class<VR128X>))  [4.02;4.02]
		 Successful, latency: 4.02
	VFMSUB132PSZ128rk(3(Class<VR128X>) -> 0(Class<VR128X>))  [4.03;4.03]
		 Successful, latency: 4.03
	VFMSUB132PSZ128rk(4(Class<VR128X>) -> 0(Class<VR128X>))  [4.05;4.05]
		 Successful, latency: 4.05

-----VFMSUB132PSZ128rkz-----
	VFMSUB132PSZ128rkz(1(Class<VR128X>) -> 0(Class<VR128X>))  [4.03;4.03]
		 Successful, latency: 4.03
	VFMSUB132PSZ128rkz(3(Class<VR128X>) -> 0(Class<VR128X>))  [4.03;4.03]
		 Successful, latency: 4.03
	VFMSUB132PSZ128rkz(4(Class<VR128X>) -> 0(Class<VR128X>))  [4.02;4.02]
		 Successful, latency: 4.02

-----VFMSUB132PSZ256r-----
	VFMSUB132PSZ256r(1(Class<VR256X>) -> 0(Class<VR256X>))  [4.04;4.04]
		 Successful, latency: 4.04
	VFMSUB132PSZ256r(2(Class<VR256X>) -> 0(Class<VR256X>))  [4.03;4.03]
		 Successful, latency: 4.03
	VFMSUB132PSZ256r(3(Class<VR256X>) -> 0(Class<VR256X>))  [4.03;4.03]
		 Successful, latency: 4.03

-----VFMSUB132PSZ256rb-----
	VFMSUB132PSZ256rb(1(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMSUB132PSZ256rb(2(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMSUB132PSZ256rb(3(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VFMSUB132PSZ256rbk-----
	VFMSUB132PSZ256rbk(1(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMSUB132PSZ256rbk(3(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMSUB132PSZ256rbk(4(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VFMSUB132PSZ256rbkz-----
	VFMSUB132PSZ256rbkz(1(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMSUB132PSZ256rbkz(3(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMSUB132PSZ256rbkz(4(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VFMSUB132PSZ256rk-----
	VFMSUB132PSZ256rk(1(Class<VR256X>) -> 0(Class<VR256X>))  [4.06;4.06]
		 Successful, latency: 4.06
	VFMSUB132PSZ256rk(3(Class<VR256X>) -> 0(Class<VR256X>))  [4.04;4.04]
		 Successful, latency: 4.04
	VFMSUB132PSZ256rk(4(Class<VR256X>) -> 0(Class<VR256X>))  [4.05;4.05]
		 Successful, latency: 4.05

-----VFMSUB132PSZ256rkz-----
	VFMSUB132PSZ256rkz(1(Class<VR256X>) -> 0(Class<VR256X>))  [4.04;4.04]
		 Successful, latency: 4.04
	VFMSUB132PSZ256rkz(3(Class<VR256X>) -> 0(Class<VR256X>))  [4.08;4.08]
		 Successful, latency: 4.08
	VFMSUB132PSZ256rkz(4(Class<VR256X>) -> 0(Class<VR256X>))  [4.04;4.04]
		 Successful, latency: 4.04

-----VFMSUB132PSZr-----
	VFMSUB132PSZr(1(Class<VR512>) -> 0(Class<VR512>))  [4.04;4.04]
		 Successful, latency: 4.04
	VFMSUB132PSZr(2(Class<VR512>) -> 0(Class<VR512>))  [4.05;4.05]
		 Successful, latency: 4.05
	VFMSUB132PSZr(3(Class<VR512>) -> 0(Class<VR512>))  [4.03;4.03]
		 Successful, latency: 4.03

-----VFMSUB132PSZrb-----
	VFMSUB132PSZrb(1(Class<VR512>) -> 0(Class<VR512>))  [4.03;4.03]
		 Successful, latency: 4.03
	VFMSUB132PSZrb(2(Class<VR512>) -> 0(Class<VR512>))  [4.04;4.04]
		 Successful, latency: 4.04
	VFMSUB132PSZrb(3(Class<VR512>) -> 0(Class<VR512>))  [4.04;4.04]
		 Successful, latency: 4.04

-----VFMSUB132PSZrbk-----
	VFMSUB132PSZrbk(1(Class<VR512>) -> 0(Class<VR512>))  [4.04;4.04]
		 Successful, latency: 4.04
	VFMSUB132PSZrbk(3(Class<VR512>) -> 0(Class<VR512>))  [4.03;4.03]
		 Successful, latency: 4.03
	VFMSUB132PSZrbk(4(Class<VR512>) -> 0(Class<VR512>))  [4.03;4.03]
		 Successful, latency: 4.03

-----VFMSUB132PSZrbkz-----
	VFMSUB132PSZrbkz(1(Class<VR512>) -> 0(Class<VR512>))  [4.03;4.03]
		 Successful, latency: 4.03
	VFMSUB132PSZrbkz(3(Class<VR512>) -> 0(Class<VR512>))  [4.03;4.03]
		 Successful, latency: 4.03
	VFMSUB132PSZrbkz(4(Class<VR512>) -> 0(Class<VR512>))  [4.03;4.03]
		 Successful, latency: 4.03

-----VFMSUB132PSZrk-----
	VFMSUB132PSZrk(1(Class<VR512>) -> 0(Class<VR512>))  [4.03;4.03]
		 Successful, latency: 4.03
	VFMSUB132PSZrk(3(Class<VR512>) -> 0(Class<VR512>))  [4.04;4.04]
		 Successful, latency: 4.04
	VFMSUB132PSZrk(4(Class<VR512>) -> 0(Class<VR512>))  [4.03;4.03]
		 Successful, latency: 4.03

-----VFMSUB132PSZrkz-----
	VFMSUB132PSZrkz(1(Class<VR512>) -> 0(Class<VR512>))  [4.03;4.03]
		 Successful, latency: 4.03
	VFMSUB132PSZrkz(3(Class<VR512>) -> 0(Class<VR512>))  [4.03;4.03]
		 Successful, latency: 4.03
	VFMSUB132PSZrkz(4(Class<VR512>) -> 0(Class<VR512>))  [4.04;4.04]
		 Successful, latency: 4.04

-----VFMSUB132PSr-----
	VFMSUB132PSr(1(Class<VR128>) -> 0(Class<VR128>))  [4.05;4.05]
		 Successful, latency: 4.05
	VFMSUB132PSr(2(Class<VR128>) -> 0(Class<VR128>))  [4.03;4.03]
		 Successful, latency: 4.03
	VFMSUB132PSr(3(Class<VR128>) -> 0(Class<VR128>))  [4.06;4.06]
		 Successful, latency: 4.06

-----VFMSUB132SDZr-----
	VFMSUB132SDZr(1(Class<FR64X>) -> 0(Class<FR64X>))  [4.03;4.03]
		 Successful, latency: 4.03
	VFMSUB132SDZr(2(Class<FR64X>) -> 0(Class<FR64X>))  [4.04;4.04]
		 Successful, latency: 4.04
	VFMSUB132SDZr(3(Class<FR64X>) -> 0(Class<FR64X>))  [4.03;4.03]
		 Successful, latency: 4.03

-----VFMSUB132SDZr_Int-----
	VFMSUB132SDZr_Int(1(Class<VR128X>) -> 0(Class<VR128X>))  [4.06;4.06]
		 Successful, latency: 4.06
	VFMSUB132SDZr_Int(2(Class<VR128X>) -> 0(Class<VR128X>))  [4.05;4.05]
		 Successful, latency: 4.05
	VFMSUB132SDZr_Int(3(Class<VR128X>) -> 0(Class<VR128X>))  [4.04;4.04]
		 Successful, latency: 4.04

-----VFMSUB132SDZrb-----
	VFMSUB132SDZrb(1(Class<FR64X>) -> 0(Class<FR64X>))  [4.04;4.04]
		 Successful, latency: 4.04
	VFMSUB132SDZrb(2(Class<FR64X>) -> 0(Class<FR64X>))  [4.06;4.06]
		 Successful, latency: 4.06
	VFMSUB132SDZrb(3(Class<FR64X>) -> 0(Class<FR64X>))  [4.03;4.03]
		 Successful, latency: 4.03

-----VFMSUB132SDZrb_Int-----
	VFMSUB132SDZrb_Int(1(Class<VR128X>) -> 0(Class<VR128X>))  [4.04;4.04]
		 Successful, latency: 4.04
	VFMSUB132SDZrb_Int(2(Class<VR128X>) -> 0(Class<VR128X>))  [4.04;4.04]
		 Successful, latency: 4.04
	VFMSUB132SDZrb_Int(3(Class<VR128X>) -> 0(Class<VR128X>))  [4.04;4.04]
		 Successful, latency: 4.04

-----VFMSUB132SDZrbk_Int-----
	VFMSUB132SDZrbk_Int(1(Class<VR128X>) -> 0(Class<VR128X>))  [4.04;4.04]
		 Successful, latency: 4.04
	VFMSUB132SDZrbk_Int(3(Class<VR128X>) -> 0(Class<VR128X>))  [4.03;4.03]
		 Successful, latency: 4.03
	VFMSUB132SDZrbk_Int(4(Class<VR128X>) -> 0(Class<VR128X>))  [4.04;4.04]
		 Successful, latency: 4.04

-----VFMSUB132SDZrbkz_Int-----
	VFMSUB132SDZrbkz_Int(1(Class<VR128X>) -> 0(Class<VR128X>))  [4.03;4.03]
		 Successful, latency: 4.03
	VFMSUB132SDZrbkz_Int(3(Class<VR128X>) -> 0(Class<VR128X>))  [4.03;4.03]
		 Successful, latency: 4.03
	VFMSUB132SDZrbkz_Int(4(Class<VR128X>) -> 0(Class<VR128X>))  [4.02;4.02]
		 Successful, latency: 4.02

-----VFMSUB132SDZrk_Int-----
	VFMSUB132SDZrk_Int(1(Class<VR128X>) -> 0(Class<VR128X>))  [4.03;4.03]
		 Successful, latency: 4.03
	VFMSUB132SDZrk_Int(3(Class<VR128X>) -> 0(Class<VR128X>))  [4.03;4.03]
		 Successful, latency: 4.03
	VFMSUB132SDZrk_Int(4(Class<VR128X>) -> 0(Class<VR128X>))  [4.03;4.03]
		 Successful, latency: 4.03

-----VFMSUB132SDZrkz_Int-----
	VFMSUB132SDZrkz_Int(1(Class<VR128X>) -> 0(Class<VR128X>))  [4.04;4.04]
		 Successful, latency: 4.04
	VFMSUB132SDZrkz_Int(3(Class<VR128X>) -> 0(Class<VR128X>))  [4.04;4.04]
		 Successful, latency: 4.04
	VFMSUB132SDZrkz_Int(4(Class<VR128X>) -> 0(Class<VR128X>))  [4.03;4.03]
		 Successful, latency: 4.03

-----VFMSUB132SDr-----
	VFMSUB132SDr(1(Class<FR64>) -> 0(Class<FR64>))  [4.03;4.03]
		 Successful, latency: 4.03
	VFMSUB132SDr(2(Class<FR64>) -> 0(Class<FR64>))  [4.06;4.06]
		 Successful, latency: 4.06
	VFMSUB132SDr(3(Class<FR64>) -> 0(Class<FR64>))  [4.06;4.06]
		 Successful, latency: 4.06

-----VFMSUB132SDr_Int-----
	VFMSUB132SDr_Int(1(Class<VR128>) -> 0(Class<VR128>))  [4.04;4.04]
		 Successful, latency: 4.04
	VFMSUB132SDr_Int(2(Class<VR128>) -> 0(Class<VR128>))  [4.05;4.05]
		 Successful, latency: 4.05
	VFMSUB132SDr_Int(3(Class<VR128>) -> 0(Class<VR128>))  [4.04;4.04]
		 Successful, latency: 4.04

-----VFMSUB132SHZr-----
	VFMSUB132SHZr(1(Class<FR16X>) -> 0(Class<FR16X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMSUB132SHZr(2(Class<FR16X>) -> 0(Class<FR16X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMSUB132SHZr(3(Class<FR16X>) -> 0(Class<FR16X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VFMSUB132SHZr_Int-----
	VFMSUB132SHZr_Int(1(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMSUB132SHZr_Int(2(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMSUB132SHZr_Int(3(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VFMSUB132SHZrb-----
	VFMSUB132SHZrb(1(Class<FR16X>) -> 0(Class<FR16X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMSUB132SHZrb(2(Class<FR16X>) -> 0(Class<FR16X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMSUB132SHZrb(3(Class<FR16X>) -> 0(Class<FR16X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VFMSUB132SHZrb_Int-----
	VFMSUB132SHZrb_Int(1(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMSUB132SHZrb_Int(2(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMSUB132SHZrb_Int(3(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VFMSUB132SHZrbk_Int-----
	VFMSUB132SHZrbk_Int(1(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMSUB132SHZrbk_Int(3(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMSUB132SHZrbk_Int(4(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VFMSUB132SHZrbkz_Int-----
	VFMSUB132SHZrbkz_Int(1(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMSUB132SHZrbkz_Int(3(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMSUB132SHZrbkz_Int(4(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VFMSUB132SHZrk_Int-----
	VFMSUB132SHZrk_Int(1(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMSUB132SHZrk_Int(3(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMSUB132SHZrk_Int(4(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VFMSUB132SHZrkz_Int-----
	VFMSUB132SHZrkz_Int(1(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMSUB132SHZrkz_Int(3(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMSUB132SHZrkz_Int(4(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VFMSUB132SSZr-----
	VFMSUB132SSZr(1(Class<FR32X>) -> 0(Class<FR32X>))  [4.03;4.03]
		 Successful, latency: 4.03
	VFMSUB132SSZr(2(Class<FR32X>) -> 0(Class<FR32X>))  [4.05;4.05]
		 Successful, latency: 4.05
	VFMSUB132SSZr(3(Class<FR32X>) -> 0(Class<FR32X>))  [4.03;4.03]
		 Successful, latency: 4.03

-----VFMSUB132SSZr_Int-----
	VFMSUB132SSZr_Int(1(Class<VR128X>) -> 0(Class<VR128X>))  [4.06;4.06]
		 Successful, latency: 4.06
	VFMSUB132SSZr_Int(2(Class<VR128X>) -> 0(Class<VR128X>))  [4.04;4.04]
		 Successful, latency: 4.04
	VFMSUB132SSZr_Int(3(Class<VR128X>) -> 0(Class<VR128X>))  [4.04;4.04]
		 Successful, latency: 4.04

-----VFMSUB132SSZrb-----
	VFMSUB132SSZrb(1(Class<FR32X>) -> 0(Class<FR32X>))  [4.02;4.02]
		 Successful, latency: 4.02
	VFMSUB132SSZrb(2(Class<FR32X>) -> 0(Class<FR32X>))  [4.03;4.03]
		 Successful, latency: 4.03
	VFMSUB132SSZrb(3(Class<FR32X>) -> 0(Class<FR32X>))  [4.03;4.03]
		 Successful, latency: 4.03

-----VFMSUB132SSZrb_Int-----
	VFMSUB132SSZrb_Int(1(Class<VR128X>) -> 0(Class<VR128X>))  [4.03;4.03]
		 Successful, latency: 4.03
	VFMSUB132SSZrb_Int(2(Class<VR128X>) -> 0(Class<VR128X>))  [4.03;4.03]
		 Successful, latency: 4.03
	VFMSUB132SSZrb_Int(3(Class<VR128X>) -> 0(Class<VR128X>))  [4.04;4.04]
		 Successful, latency: 4.04

-----VFMSUB132SSZrbk_Int-----
	VFMSUB132SSZrbk_Int(1(Class<VR128X>) -> 0(Class<VR128X>))  [4.03;4.03]
		 Successful, latency: 4.03
	VFMSUB132SSZrbk_Int(3(Class<VR128X>) -> 0(Class<VR128X>))  [4.06;4.06]
		 Successful, latency: 4.06
	VFMSUB132SSZrbk_Int(4(Class<VR128X>) -> 0(Class<VR128X>))  [4.03;4.03]
		 Successful, latency: 4.03

-----VFMSUB132SSZrbkz_Int-----
	VFMSUB132SSZrbkz_Int(1(Class<VR128X>) -> 0(Class<VR128X>))  [4.03;4.03]
		 Successful, latency: 4.03
	VFMSUB132SSZrbkz_Int(3(Class<VR128X>) -> 0(Class<VR128X>))  [4.03;4.03]
		 Successful, latency: 4.03
	VFMSUB132SSZrbkz_Int(4(Class<VR128X>) -> 0(Class<VR128X>))  [4.03;4.03]
		 Successful, latency: 4.03

-----VFMSUB132SSZrk_Int-----
	VFMSUB132SSZrk_Int(1(Class<VR128X>) -> 0(Class<VR128X>))  [4.02;4.02]
		 Successful, latency: 4.02
	VFMSUB132SSZrk_Int(3(Class<VR128X>) -> 0(Class<VR128X>))  [4.03;4.03]
		 Successful, latency: 4.03
	VFMSUB132SSZrk_Int(4(Class<VR128X>) -> 0(Class<VR128X>))  [4.04;4.04]
		 Successful, latency: 4.04

-----VFMSUB132SSZrkz_Int-----
	VFMSUB132SSZrkz_Int(1(Class<VR128X>) -> 0(Class<VR128X>))  [4.05;4.05]
		 Successful, latency: 4.05
	VFMSUB132SSZrkz_Int(3(Class<VR128X>) -> 0(Class<VR128X>))  [4.05;4.05]
		 Successful, latency: 4.05
	VFMSUB132SSZrkz_Int(4(Class<VR128X>) -> 0(Class<VR128X>))  [4.03;4.03]
		 Successful, latency: 4.03

-----VFMSUB132SSr-----
	VFMSUB132SSr(1(Class<FR32>) -> 0(Class<FR32>))  [4.04;4.04]
		 Successful, latency: 4.04
	VFMSUB132SSr(2(Class<FR32>) -> 0(Class<FR32>))  [4.04;4.04]
		 Successful, latency: 4.04
	VFMSUB132SSr(3(Class<FR32>) -> 0(Class<FR32>))  [4.03;4.03]
		 Successful, latency: 4.03

-----VFMSUB132SSr_Int-----
	VFMSUB132SSr_Int(1(Class<VR128>) -> 0(Class<VR128>))  [4.04;4.04]
		 Successful, latency: 4.04
	VFMSUB132SSr_Int(2(Class<VR128>) -> 0(Class<VR128>))  [4.03;4.03]
		 Successful, latency: 4.03
	VFMSUB132SSr_Int(3(Class<VR128>) -> 0(Class<VR128>))  [4.03;4.03]
		 Successful, latency: 4.03

-----VFMSUB213BF16Z128r-----
	VFMSUB213BF16Z128r(1(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMSUB213BF16Z128r(2(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMSUB213BF16Z128r(3(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VFMSUB213BF16Z128rk-----
	VFMSUB213BF16Z128rk(1(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMSUB213BF16Z128rk(3(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMSUB213BF16Z128rk(4(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VFMSUB213BF16Z128rkz-----
	VFMSUB213BF16Z128rkz(1(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMSUB213BF16Z128rkz(3(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMSUB213BF16Z128rkz(4(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VFMSUB213BF16Z256r-----
	VFMSUB213BF16Z256r(1(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMSUB213BF16Z256r(2(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMSUB213BF16Z256r(3(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VFMSUB213BF16Z256rk-----
	VFMSUB213BF16Z256rk(1(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMSUB213BF16Z256rk(3(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMSUB213BF16Z256rk(4(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VFMSUB213BF16Z256rkz-----
	VFMSUB213BF16Z256rkz(1(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMSUB213BF16Z256rkz(3(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMSUB213BF16Z256rkz(4(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VFMSUB213BF16Zr-----
	VFMSUB213BF16Zr(1(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMSUB213BF16Zr(2(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMSUB213BF16Zr(3(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VFMSUB213BF16Zrk-----
	VFMSUB213BF16Zrk(1(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMSUB213BF16Zrk(3(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMSUB213BF16Zrk(4(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VFMSUB213BF16Zrkz-----
	VFMSUB213BF16Zrkz(1(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMSUB213BF16Zrkz(3(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMSUB213BF16Zrkz(4(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VFMSUB213PDYr-----
	VFMSUB213PDYr(1(Class<VR256>) -> 0(Class<VR256>))  [4.02;4.02]
		 Successful, latency: 4.02
	VFMSUB213PDYr(2(Class<VR256>) -> 0(Class<VR256>))  [4.04;4.04]
		 Successful, latency: 4.04
	VFMSUB213PDYr(3(Class<VR256>) -> 0(Class<VR256>))  [4.04;4.04]
		 Successful, latency: 4.04

-----VFMSUB213PDZ128r-----
	VFMSUB213PDZ128r(1(Class<VR128X>) -> 0(Class<VR128X>))  [4.03;4.03]
		 Successful, latency: 4.03
	VFMSUB213PDZ128r(2(Class<VR128X>) -> 0(Class<VR128X>))  [4.03;4.03]
		 Successful, latency: 4.03
	VFMSUB213PDZ128r(3(Class<VR128X>) -> 0(Class<VR128X>))  [4.04;4.04]
		 Successful, latency: 4.04

-----VFMSUB213PDZ128rk-----
	VFMSUB213PDZ128rk(1(Class<VR128X>) -> 0(Class<VR128X>))  [4.02;4.02]
		 Successful, latency: 4.02
	VFMSUB213PDZ128rk(3(Class<VR128X>) -> 0(Class<VR128X>))  [4.04;4.04]
		 Successful, latency: 4.04
	VFMSUB213PDZ128rk(4(Class<VR128X>) -> 0(Class<VR128X>))  [4.03;4.03]
		 Successful, latency: 4.03

-----VFMSUB213PDZ128rkz-----
	VFMSUB213PDZ128rkz(1(Class<VR128X>) -> 0(Class<VR128X>))  [4.03;4.03]
		 Successful, latency: 4.03
	VFMSUB213PDZ128rkz(3(Class<VR128X>) -> 0(Class<VR128X>))  [4.02;4.02]
		 Successful, latency: 4.02
	VFMSUB213PDZ128rkz(4(Class<VR128X>) -> 0(Class<VR128X>))  [4.06;4.06]
		 Successful, latency: 4.06

-----VFMSUB213PDZ256r-----
	VFMSUB213PDZ256r(1(Class<VR256X>) -> 0(Class<VR256X>))  [4.09;4.09]
		 Successful, latency: 4.09
	VFMSUB213PDZ256r(2(Class<VR256X>) -> 0(Class<VR256X>))  [4.02;4.02]
		 Successful, latency: 4.02
	VFMSUB213PDZ256r(3(Class<VR256X>) -> 0(Class<VR256X>))  [4.03;4.03]
		 Successful, latency: 4.03

-----VFMSUB213PDZ256rb-----
	VFMSUB213PDZ256rb(1(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMSUB213PDZ256rb(2(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMSUB213PDZ256rb(3(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VFMSUB213PDZ256rbk-----
	VFMSUB213PDZ256rbk(1(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMSUB213PDZ256rbk(3(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMSUB213PDZ256rbk(4(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VFMSUB213PDZ256rbkz-----
	VFMSUB213PDZ256rbkz(1(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMSUB213PDZ256rbkz(3(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMSUB213PDZ256rbkz(4(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VFMSUB213PDZ256rk-----
	VFMSUB213PDZ256rk(1(Class<VR256X>) -> 0(Class<VR256X>))  [4.03;4.03]
		 Successful, latency: 4.03
	VFMSUB213PDZ256rk(3(Class<VR256X>) -> 0(Class<VR256X>))  [4.03;4.03]
		 Successful, latency: 4.03
	VFMSUB213PDZ256rk(4(Class<VR256X>) -> 0(Class<VR256X>))  [4.04;4.04]
		 Successful, latency: 4.04

-----VFMSUB213PDZ256rkz-----
	VFMSUB213PDZ256rkz(1(Class<VR256X>) -> 0(Class<VR256X>))  [4.06;4.06]
		 Successful, latency: 4.06
	VFMSUB213PDZ256rkz(3(Class<VR256X>) -> 0(Class<VR256X>))  [4.09;4.09]
		 Successful, latency: 4.09
	VFMSUB213PDZ256rkz(4(Class<VR256X>) -> 0(Class<VR256X>))  [4.05;4.05]
		 Successful, latency: 4.05

-----VFMSUB213PDZr-----
	VFMSUB213PDZr(1(Class<VR512>) -> 0(Class<VR512>))  [4.05;4.05]
		 Successful, latency: 4.05
	VFMSUB213PDZr(2(Class<VR512>) -> 0(Class<VR512>))  [4.07;4.07]
		 Successful, latency: 4.07
	VFMSUB213PDZr(3(Class<VR512>) -> 0(Class<VR512>))  [4.07;4.07]
		 Successful, latency: 4.07

-----VFMSUB213PDZrb-----
	VFMSUB213PDZrb(1(Class<VR512>) -> 0(Class<VR512>))  [4.03;4.03]
		 Successful, latency: 4.03
	VFMSUB213PDZrb(2(Class<VR512>) -> 0(Class<VR512>))  [4.03;4.03]
		 Successful, latency: 4.03
	VFMSUB213PDZrb(3(Class<VR512>) -> 0(Class<VR512>))  [4.04;4.04]
		 Successful, latency: 4.04

-----VFMSUB213PDZrbk-----
	VFMSUB213PDZrbk(1(Class<VR512>) -> 0(Class<VR512>))  [4.04;4.04]
		 Successful, latency: 4.04
	VFMSUB213PDZrbk(3(Class<VR512>) -> 0(Class<VR512>))  [4.04;4.04]
		 Successful, latency: 4.04
	VFMSUB213PDZrbk(4(Class<VR512>) -> 0(Class<VR512>))  [4.04;4.04]
		 Successful, latency: 4.04

-----VFMSUB213PDZrbkz-----
	VFMSUB213PDZrbkz(1(Class<VR512>) -> 0(Class<VR512>))  [4.03;4.03]
		 Successful, latency: 4.03
	VFMSUB213PDZrbkz(3(Class<VR512>) -> 0(Class<VR512>))  [4.07;4.07]
		 Successful, latency: 4.07
	VFMSUB213PDZrbkz(4(Class<VR512>) -> 0(Class<VR512>))  [4.02;4.02]
		 Successful, latency: 4.02

-----VFMSUB213PDZrk-----
	VFMSUB213PDZrk(1(Class<VR512>) -> 0(Class<VR512>))  [4.06;4.06]
		 Successful, latency: 4.06
	VFMSUB213PDZrk(3(Class<VR512>) -> 0(Class<VR512>))  [4.03;4.03]
		 Successful, latency: 4.03
	VFMSUB213PDZrk(4(Class<VR512>) -> 0(Class<VR512>))  [4.05;4.05]
		 Successful, latency: 4.05

-----VFMSUB213PDZrkz-----
	VFMSUB213PDZrkz(1(Class<VR512>) -> 0(Class<VR512>))  [4.02;4.02]
		 Successful, latency: 4.02
	VFMSUB213PDZrkz(3(Class<VR512>) -> 0(Class<VR512>))  [4.06;4.06]
		 Successful, latency: 4.06
	VFMSUB213PDZrkz(4(Class<VR512>) -> 0(Class<VR512>))  [4.03;4.03]
		 Successful, latency: 4.03

-----VFMSUB213PDr-----
	VFMSUB213PDr(1(Class<VR128>) -> 0(Class<VR128>))  [4.09;4.09]
		 Successful, latency: 4.09
	VFMSUB213PDr(2(Class<VR128>) -> 0(Class<VR128>))  [4.02;4.02]
		 Successful, latency: 4.02
	VFMSUB213PDr(3(Class<VR128>) -> 0(Class<VR128>))  [4.05;4.05]
		 Successful, latency: 4.05

-----VFMSUB213PHZ128r-----
	VFMSUB213PHZ128r(1(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMSUB213PHZ128r(2(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMSUB213PHZ128r(3(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VFMSUB213PHZ128rk-----
	VFMSUB213PHZ128rk(1(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMSUB213PHZ128rk(3(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMSUB213PHZ128rk(4(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VFMSUB213PHZ128rkz-----
	VFMSUB213PHZ128rkz(1(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMSUB213PHZ128rkz(3(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMSUB213PHZ128rkz(4(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VFMSUB213PHZ256r-----
	VFMSUB213PHZ256r(1(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMSUB213PHZ256r(2(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMSUB213PHZ256r(3(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VFMSUB213PHZ256rb-----
	VFMSUB213PHZ256rb(1(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMSUB213PHZ256rb(2(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMSUB213PHZ256rb(3(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VFMSUB213PHZ256rbk-----
	VFMSUB213PHZ256rbk(1(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMSUB213PHZ256rbk(3(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMSUB213PHZ256rbk(4(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VFMSUB213PHZ256rbkz-----
	VFMSUB213PHZ256rbkz(1(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMSUB213PHZ256rbkz(3(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMSUB213PHZ256rbkz(4(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VFMSUB213PHZ256rk-----
	VFMSUB213PHZ256rk(1(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMSUB213PHZ256rk(3(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMSUB213PHZ256rk(4(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VFMSUB213PHZ256rkz-----
	VFMSUB213PHZ256rkz(1(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMSUB213PHZ256rkz(3(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMSUB213PHZ256rkz(4(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VFMSUB213PHZr-----
	VFMSUB213PHZr(1(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMSUB213PHZr(2(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMSUB213PHZr(3(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VFMSUB213PHZrb-----
	VFMSUB213PHZrb(1(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMSUB213PHZrb(2(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMSUB213PHZrb(3(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VFMSUB213PHZrbk-----
	VFMSUB213PHZrbk(1(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMSUB213PHZrbk(3(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMSUB213PHZrbk(4(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VFMSUB213PHZrbkz-----
	VFMSUB213PHZrbkz(1(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMSUB213PHZrbkz(3(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMSUB213PHZrbkz(4(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VFMSUB213PHZrk-----
	VFMSUB213PHZrk(1(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMSUB213PHZrk(3(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMSUB213PHZrk(4(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VFMSUB213PHZrkz-----
	VFMSUB213PHZrkz(1(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMSUB213PHZrkz(3(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMSUB213PHZrkz(4(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VFMSUB213PSYr-----
	VFMSUB213PSYr(1(Class<VR256>) -> 0(Class<VR256>))  [4.03;4.03]
		 Successful, latency: 4.03
	VFMSUB213PSYr(2(Class<VR256>) -> 0(Class<VR256>))  [4.03;4.03]
		 Successful, latency: 4.03
	VFMSUB213PSYr(3(Class<VR256>) -> 0(Class<VR256>))  [4.05;4.05]
		 Successful, latency: 4.05

-----VFMSUB213PSZ128r-----
	VFMSUB213PSZ128r(1(Class<VR128X>) -> 0(Class<VR128X>))  [4.05;4.05]
		 Successful, latency: 4.05
	VFMSUB213PSZ128r(2(Class<VR128X>) -> 0(Class<VR128X>))  [4.03;4.03]
		 Successful, latency: 4.03
	VFMSUB213PSZ128r(3(Class<VR128X>) -> 0(Class<VR128X>))  [4.03;4.03]
		 Successful, latency: 4.03

-----VFMSUB213PSZ128rk-----
	VFMSUB213PSZ128rk(1(Class<VR128X>) -> 0(Class<VR128X>))  [4.03;4.03]
		 Successful, latency: 4.03
	VFMSUB213PSZ128rk(3(Class<VR128X>) -> 0(Class<VR128X>))  [4.04;4.04]
		 Successful, latency: 4.04
	VFMSUB213PSZ128rk(4(Class<VR128X>) -> 0(Class<VR128X>))  [4.04;4.04]
		 Successful, latency: 4.04

-----VFMSUB213PSZ128rkz-----
	VFMSUB213PSZ128rkz(1(Class<VR128X>) -> 0(Class<VR128X>))  [4.04;4.04]
		 Successful, latency: 4.04
	VFMSUB213PSZ128rkz(3(Class<VR128X>) -> 0(Class<VR128X>))  [4.03;4.03]
		 Successful, latency: 4.03
	VFMSUB213PSZ128rkz(4(Class<VR128X>) -> 0(Class<VR128X>))  [4.03;4.03]
		 Successful, latency: 4.03

-----VFMSUB213PSZ256r-----
	VFMSUB213PSZ256r(1(Class<VR256X>) -> 0(Class<VR256X>))  [4.03;4.03]
		 Successful, latency: 4.03
	VFMSUB213PSZ256r(2(Class<VR256X>) -> 0(Class<VR256X>))  [4.04;4.04]
		 Successful, latency: 4.04
	VFMSUB213PSZ256r(3(Class<VR256X>) -> 0(Class<VR256X>))  [4.04;4.04]
		 Successful, latency: 4.04

-----VFMSUB213PSZ256rb-----
	VFMSUB213PSZ256rb(1(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMSUB213PSZ256rb(2(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMSUB213PSZ256rb(3(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VFMSUB213PSZ256rbk-----
	VFMSUB213PSZ256rbk(1(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMSUB213PSZ256rbk(3(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMSUB213PSZ256rbk(4(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VFMSUB213PSZ256rbkz-----
	VFMSUB213PSZ256rbkz(1(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMSUB213PSZ256rbkz(3(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMSUB213PSZ256rbkz(4(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VFMSUB213PSZ256rk-----
	VFMSUB213PSZ256rk(1(Class<VR256X>) -> 0(Class<VR256X>))  [4.04;4.04]
		 Successful, latency: 4.04
	VFMSUB213PSZ256rk(3(Class<VR256X>) -> 0(Class<VR256X>))  [4.02;4.02]
		 Successful, latency: 4.02
	VFMSUB213PSZ256rk(4(Class<VR256X>) -> 0(Class<VR256X>))  [4.04;4.04]
		 Successful, latency: 4.04

-----VFMSUB213PSZ256rkz-----
	VFMSUB213PSZ256rkz(1(Class<VR256X>) -> 0(Class<VR256X>))  [4.03;4.03]
		 Successful, latency: 4.03
	VFMSUB213PSZ256rkz(3(Class<VR256X>) -> 0(Class<VR256X>))  [4.07;4.07]
		 Successful, latency: 4.07
	VFMSUB213PSZ256rkz(4(Class<VR256X>) -> 0(Class<VR256X>))  [4.05;4.05]
		 Successful, latency: 4.05

-----VFMSUB213PSZr-----
	VFMSUB213PSZr(1(Class<VR512>) -> 0(Class<VR512>))  [4.06;4.06]
		 Successful, latency: 4.06
	VFMSUB213PSZr(2(Class<VR512>) -> 0(Class<VR512>))  [4.04;4.04]
		 Successful, latency: 4.04
	VFMSUB213PSZr(3(Class<VR512>) -> 0(Class<VR512>))  [4.03;4.03]
		 Successful, latency: 4.03

-----VFMSUB213PSZrb-----
	VFMSUB213PSZrb(1(Class<VR512>) -> 0(Class<VR512>))  [4.05;4.05]
		 Successful, latency: 4.05
	VFMSUB213PSZrb(2(Class<VR512>) -> 0(Class<VR512>))  [4.03;4.03]
		 Successful, latency: 4.03
	VFMSUB213PSZrb(3(Class<VR512>) -> 0(Class<VR512>))  [4.07;4.07]
		 Successful, latency: 4.07

-----VFMSUB213PSZrbk-----
	VFMSUB213PSZrbk(1(Class<VR512>) -> 0(Class<VR512>))  [4.05;4.05]
		 Successful, latency: 4.05
	VFMSUB213PSZrbk(3(Class<VR512>) -> 0(Class<VR512>))  [4.04;4.04]
		 Successful, latency: 4.04
	VFMSUB213PSZrbk(4(Class<VR512>) -> 0(Class<VR512>))  [4.03;4.03]
		 Successful, latency: 4.03

-----VFMSUB213PSZrbkz-----
	VFMSUB213PSZrbkz(1(Class<VR512>) -> 0(Class<VR512>))  [4.07;4.07]
		 Successful, latency: 4.07
	VFMSUB213PSZrbkz(3(Class<VR512>) -> 0(Class<VR512>))  [4.03;4.03]
		 Successful, latency: 4.03
	VFMSUB213PSZrbkz(4(Class<VR512>) -> 0(Class<VR512>))  [4.06;4.06]
		 Successful, latency: 4.06

-----VFMSUB213PSZrk-----
	VFMSUB213PSZrk(1(Class<VR512>) -> 0(Class<VR512>))  [4.03;4.03]
		 Successful, latency: 4.03
	VFMSUB213PSZrk(3(Class<VR512>) -> 0(Class<VR512>))  [4.04;4.04]
		 Successful, latency: 4.04
	VFMSUB213PSZrk(4(Class<VR512>) -> 0(Class<VR512>))  [4.03;4.03]
		 Successful, latency: 4.03

-----VFMSUB213PSZrkz-----
	VFMSUB213PSZrkz(1(Class<VR512>) -> 0(Class<VR512>))  [4.05;4.05]
		 Successful, latency: 4.05
	VFMSUB213PSZrkz(3(Class<VR512>) -> 0(Class<VR512>))  [4.04;4.04]
		 Successful, latency: 4.04
	VFMSUB213PSZrkz(4(Class<VR512>) -> 0(Class<VR512>))  [4.05;4.05]
		 Successful, latency: 4.05

-----VFMSUB213PSr-----
	VFMSUB213PSr(1(Class<VR128>) -> 0(Class<VR128>))  [4.04;4.04]
		 Successful, latency: 4.04
	VFMSUB213PSr(2(Class<VR128>) -> 0(Class<VR128>))  [4.02;4.02]
		 Successful, latency: 4.02
	VFMSUB213PSr(3(Class<VR128>) -> 0(Class<VR128>))  [4.04;4.04]
		 Successful, latency: 4.04

-----VFMSUB213SDZr-----
	VFMSUB213SDZr(1(Class<FR64X>) -> 0(Class<FR64X>))  [4.04;4.04]
		 Successful, latency: 4.04
	VFMSUB213SDZr(2(Class<FR64X>) -> 0(Class<FR64X>))  [4.04;4.04]
		 Successful, latency: 4.04
	VFMSUB213SDZr(3(Class<FR64X>) -> 0(Class<FR64X>))  [4.04;4.04]
		 Successful, latency: 4.04

-----VFMSUB213SDZr_Int-----
	VFMSUB213SDZr_Int(1(Class<VR128X>) -> 0(Class<VR128X>))  [4.06;4.06]
		 Successful, latency: 4.06
	VFMSUB213SDZr_Int(2(Class<VR128X>) -> 0(Class<VR128X>))  [4.06;4.06]
		 Successful, latency: 4.06
	VFMSUB213SDZr_Int(3(Class<VR128X>) -> 0(Class<VR128X>))  [4.04;4.04]
		 Successful, latency: 4.04

-----VFMSUB213SDZrb-----
	VFMSUB213SDZrb(1(Class<FR64X>) -> 0(Class<FR64X>))  [4.07;4.07]
		 Successful, latency: 4.07
	VFMSUB213SDZrb(2(Class<FR64X>) -> 0(Class<FR64X>))  [4.07;4.07]
		 Successful, latency: 4.07
	VFMSUB213SDZrb(3(Class<FR64X>) -> 0(Class<FR64X>))  [4.04;4.04]
		 Successful, latency: 4.04

-----VFMSUB213SDZrb_Int-----
	VFMSUB213SDZrb_Int(1(Class<VR128X>) -> 0(Class<VR128X>))  [4.02;4.02]
		 Successful, latency: 4.02
	VFMSUB213SDZrb_Int(2(Class<VR128X>) -> 0(Class<VR128X>))  [4.04;4.04]
		 Successful, latency: 4.04
	VFMSUB213SDZrb_Int(3(Class<VR128X>) -> 0(Class<VR128X>))  [4.05;4.05]
		 Successful, latency: 4.05

-----VFMSUB213SDZrbk_Int-----
	VFMSUB213SDZrbk_Int(1(Class<VR128X>) -> 0(Class<VR128X>))  [4.04;4.04]
		 Successful, latency: 4.04
	VFMSUB213SDZrbk_Int(3(Class<VR128X>) -> 0(Class<VR128X>))  [4.05;4.05]
		 Successful, latency: 4.05
	VFMSUB213SDZrbk_Int(4(Class<VR128X>) -> 0(Class<VR128X>))  [4.06;4.06]
		 Successful, latency: 4.06

-----VFMSUB213SDZrbkz_Int-----
	VFMSUB213SDZrbkz_Int(1(Class<VR128X>) -> 0(Class<VR128X>))  [4.07;4.07]
		 Successful, latency: 4.07
	VFMSUB213SDZrbkz_Int(3(Class<VR128X>) -> 0(Class<VR128X>))  [4.02;4.02]
		 Successful, latency: 4.02
	VFMSUB213SDZrbkz_Int(4(Class<VR128X>) -> 0(Class<VR128X>))  [4.03;4.03]
		 Successful, latency: 4.03

-----VFMSUB213SDZrk_Int-----
	VFMSUB213SDZrk_Int(1(Class<VR128X>) -> 0(Class<VR128X>))  [4.04;4.04]
		 Successful, latency: 4.04
	VFMSUB213SDZrk_Int(3(Class<VR128X>) -> 0(Class<VR128X>))  [4.04;4.04]
		 Successful, latency: 4.04
	VFMSUB213SDZrk_Int(4(Class<VR128X>) -> 0(Class<VR128X>))  [4.03;4.03]
		 Successful, latency: 4.03

-----VFMSUB213SDZrkz_Int-----
	VFMSUB213SDZrkz_Int(1(Class<VR128X>) -> 0(Class<VR128X>))  [4.03;4.03]
		 Successful, latency: 4.03
	VFMSUB213SDZrkz_Int(3(Class<VR128X>) -> 0(Class<VR128X>))  [4.03;4.03]
		 Successful, latency: 4.03
	VFMSUB213SDZrkz_Int(4(Class<VR128X>) -> 0(Class<VR128X>))  [4.02;4.02]
		 Successful, latency: 4.02

-----VFMSUB213SDr-----
	VFMSUB213SDr(1(Class<FR64>) -> 0(Class<FR64>))  [4.04;4.04]
		 Successful, latency: 4.04
	VFMSUB213SDr(2(Class<FR64>) -> 0(Class<FR64>))  [4.06;4.06]
		 Successful, latency: 4.06
	VFMSUB213SDr(3(Class<FR64>) -> 0(Class<FR64>))  [4.08;4.08]
		 Successful, latency: 4.08

-----VFMSUB213SDr_Int-----
	VFMSUB213SDr_Int(1(Class<VR128>) -> 0(Class<VR128>))  [4.04;4.04]
		 Successful, latency: 4.04
	VFMSUB213SDr_Int(2(Class<VR128>) -> 0(Class<VR128>))  [4.04;4.04]
		 Successful, latency: 4.04
	VFMSUB213SDr_Int(3(Class<VR128>) -> 0(Class<VR128>))  [4.04;4.04]
		 Successful, latency: 4.04

-----VFMSUB213SHZr-----
	VFMSUB213SHZr(1(Class<FR16X>) -> 0(Class<FR16X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMSUB213SHZr(2(Class<FR16X>) -> 0(Class<FR16X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMSUB213SHZr(3(Class<FR16X>) -> 0(Class<FR16X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VFMSUB213SHZr_Int-----
	VFMSUB213SHZr_Int(1(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMSUB213SHZr_Int(2(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMSUB213SHZr_Int(3(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VFMSUB213SHZrb-----
	VFMSUB213SHZrb(1(Class<FR16X>) -> 0(Class<FR16X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMSUB213SHZrb(2(Class<FR16X>) -> 0(Class<FR16X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMSUB213SHZrb(3(Class<FR16X>) -> 0(Class<FR16X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VFMSUB213SHZrb_Int-----
	VFMSUB213SHZrb_Int(1(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMSUB213SHZrb_Int(2(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMSUB213SHZrb_Int(3(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VFMSUB213SHZrbk_Int-----
	VFMSUB213SHZrbk_Int(1(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMSUB213SHZrbk_Int(3(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMSUB213SHZrbk_Int(4(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VFMSUB213SHZrbkz_Int-----
	VFMSUB213SHZrbkz_Int(1(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMSUB213SHZrbkz_Int(3(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMSUB213SHZrbkz_Int(4(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VFMSUB213SHZrk_Int-----
	VFMSUB213SHZrk_Int(1(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMSUB213SHZrk_Int(3(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMSUB213SHZrk_Int(4(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VFMSUB213SHZrkz_Int-----
	VFMSUB213SHZrkz_Int(1(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMSUB213SHZrkz_Int(3(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMSUB213SHZrkz_Int(4(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VFMSUB213SSZr-----
	VFMSUB213SSZr(1(Class<FR32X>) -> 0(Class<FR32X>))  [4.03;4.03]
		 Successful, latency: 4.03
	VFMSUB213SSZr(2(Class<FR32X>) -> 0(Class<FR32X>))  [4.03;4.03]
		 Successful, latency: 4.03
	VFMSUB213SSZr(3(Class<FR32X>) -> 0(Class<FR32X>))  [4.03;4.03]
		 Successful, latency: 4.03

-----VFMSUB213SSZr_Int-----
	VFMSUB213SSZr_Int(1(Class<VR128X>) -> 0(Class<VR128X>))  [4.07;4.07]
		 Successful, latency: 4.07
	VFMSUB213SSZr_Int(2(Class<VR128X>) -> 0(Class<VR128X>))  [4.03;4.03]
		 Successful, latency: 4.03
	VFMSUB213SSZr_Int(3(Class<VR128X>) -> 0(Class<VR128X>))  [4.03;4.03]
		 Successful, latency: 4.03

-----VFMSUB213SSZrb-----
	VFMSUB213SSZrb(1(Class<FR32X>) -> 0(Class<FR32X>))  [4.03;4.03]
		 Successful, latency: 4.03
	VFMSUB213SSZrb(2(Class<FR32X>) -> 0(Class<FR32X>))  [4.04;4.04]
		 Successful, latency: 4.04
	VFMSUB213SSZrb(3(Class<FR32X>) -> 0(Class<FR32X>))  [4.02;4.02]
		 Successful, latency: 4.02

-----VFMSUB213SSZrb_Int-----
	VFMSUB213SSZrb_Int(1(Class<VR128X>) -> 0(Class<VR128X>))  [4.06;4.06]
		 Successful, latency: 4.06
	VFMSUB213SSZrb_Int(2(Class<VR128X>) -> 0(Class<VR128X>))  [4.06;4.06]
		 Successful, latency: 4.06
	VFMSUB213SSZrb_Int(3(Class<VR128X>) -> 0(Class<VR128X>))  [4.04;4.04]
		 Successful, latency: 4.04

-----VFMSUB213SSZrbk_Int-----
	VFMSUB213SSZrbk_Int(1(Class<VR128X>) -> 0(Class<VR128X>))  [4.06;4.06]
		 Successful, latency: 4.06
	VFMSUB213SSZrbk_Int(3(Class<VR128X>) -> 0(Class<VR128X>))  [4.05;4.05]
		 Successful, latency: 4.05
	VFMSUB213SSZrbk_Int(4(Class<VR128X>) -> 0(Class<VR128X>))  [4.05;4.05]
		 Successful, latency: 4.05

-----VFMSUB213SSZrbkz_Int-----
	VFMSUB213SSZrbkz_Int(1(Class<VR128X>) -> 0(Class<VR128X>))  [4.04;4.04]
		 Successful, latency: 4.04
	VFMSUB213SSZrbkz_Int(3(Class<VR128X>) -> 0(Class<VR128X>))  [4.07;4.07]
		 Successful, latency: 4.07
	VFMSUB213SSZrbkz_Int(4(Class<VR128X>) -> 0(Class<VR128X>))  [4.04;4.04]
		 Successful, latency: 4.04

-----VFMSUB213SSZrk_Int-----
	VFMSUB213SSZrk_Int(1(Class<VR128X>) -> 0(Class<VR128X>))  [4.05;4.05]
		 Successful, latency: 4.05
	VFMSUB213SSZrk_Int(3(Class<VR128X>) -> 0(Class<VR128X>))  [4.03;4.03]
		 Successful, latency: 4.03
	VFMSUB213SSZrk_Int(4(Class<VR128X>) -> 0(Class<VR128X>))  [4.06;4.06]
		 Successful, latency: 4.06

-----VFMSUB213SSZrkz_Int-----
	VFMSUB213SSZrkz_Int(1(Class<VR128X>) -> 0(Class<VR128X>))  [4.03;4.03]
		 Successful, latency: 4.03
	VFMSUB213SSZrkz_Int(3(Class<VR128X>) -> 0(Class<VR128X>))  [4.04;4.04]
		 Successful, latency: 4.04
	VFMSUB213SSZrkz_Int(4(Class<VR128X>) -> 0(Class<VR128X>))  [4.03;4.03]
		 Successful, latency: 4.03

-----VFMSUB213SSr-----
	VFMSUB213SSr(1(Class<FR32>) -> 0(Class<FR32>))  [4.03;4.03]
		 Successful, latency: 4.03
	VFMSUB213SSr(2(Class<FR32>) -> 0(Class<FR32>))  [4.03;4.03]
		 Successful, latency: 4.03
	VFMSUB213SSr(3(Class<FR32>) -> 0(Class<FR32>))  [4.03;4.03]
		 Successful, latency: 4.03

-----VFMSUB213SSr_Int-----
	VFMSUB213SSr_Int(1(Class<VR128>) -> 0(Class<VR128>))  [4.02;4.02]
		 Successful, latency: 4.02
	VFMSUB213SSr_Int(2(Class<VR128>) -> 0(Class<VR128>))  [4.03;4.03]
		 Successful, latency: 4.03
	VFMSUB213SSr_Int(3(Class<VR128>) -> 0(Class<VR128>))  [4.05;4.05]
		 Successful, latency: 4.05

-----VFMSUB231BF16Z128r-----
	VFMSUB231BF16Z128r(1(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMSUB231BF16Z128r(2(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMSUB231BF16Z128r(3(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VFMSUB231BF16Z128rk-----
	VFMSUB231BF16Z128rk(1(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMSUB231BF16Z128rk(3(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMSUB231BF16Z128rk(4(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VFMSUB231BF16Z128rkz-----
	VFMSUB231BF16Z128rkz(1(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMSUB231BF16Z128rkz(3(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMSUB231BF16Z128rkz(4(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VFMSUB231BF16Z256r-----
	VFMSUB231BF16Z256r(1(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMSUB231BF16Z256r(2(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMSUB231BF16Z256r(3(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VFMSUB231BF16Z256rk-----
	VFMSUB231BF16Z256rk(1(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMSUB231BF16Z256rk(3(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMSUB231BF16Z256rk(4(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VFMSUB231BF16Z256rkz-----
	VFMSUB231BF16Z256rkz(1(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMSUB231BF16Z256rkz(3(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMSUB231BF16Z256rkz(4(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VFMSUB231BF16Zr-----
	VFMSUB231BF16Zr(1(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMSUB231BF16Zr(2(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMSUB231BF16Zr(3(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VFMSUB231BF16Zrk-----
	VFMSUB231BF16Zrk(1(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMSUB231BF16Zrk(3(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMSUB231BF16Zrk(4(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VFMSUB231BF16Zrkz-----
	VFMSUB231BF16Zrkz(1(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMSUB231BF16Zrkz(3(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMSUB231BF16Zrkz(4(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VFMSUB231PDYr-----
	VFMSUB231PDYr(1(Class<VR256>) -> 0(Class<VR256>))  [4.03;4.03]
		 Successful, latency: 4.03
	VFMSUB231PDYr(2(Class<VR256>) -> 0(Class<VR256>))  [4.03;4.03]
		 Successful, latency: 4.03
	VFMSUB231PDYr(3(Class<VR256>) -> 0(Class<VR256>))  [4.03;4.03]
		 Successful, latency: 4.03

-----VFMSUB231PDZ128r-----
	VFMSUB231PDZ128r(1(Class<VR128X>) -> 0(Class<VR128X>))  [4.03;4.03]
		 Successful, latency: 4.03
	VFMSUB231PDZ128r(2(Class<VR128X>) -> 0(Class<VR128X>))  [4.04;4.04]
		 Successful, latency: 4.04
	VFMSUB231PDZ128r(3(Class<VR128X>) -> 0(Class<VR128X>))  [4.05;4.05]
		 Successful, latency: 4.05

-----VFMSUB231PDZ128rk-----
	VFMSUB231PDZ128rk(1(Class<VR128X>) -> 0(Class<VR128X>))  [4.05;4.05]
		 Successful, latency: 4.05
	VFMSUB231PDZ128rk(3(Class<VR128X>) -> 0(Class<VR128X>))  [4.05;4.05]
		 Successful, latency: 4.05
	VFMSUB231PDZ128rk(4(Class<VR128X>) -> 0(Class<VR128X>))  [4.03;4.03]
		 Successful, latency: 4.03

-----VFMSUB231PDZ128rkz-----
	VFMSUB231PDZ128rkz(1(Class<VR128X>) -> 0(Class<VR128X>))  [4.06;4.06]
		 Successful, latency: 4.06
	VFMSUB231PDZ128rkz(3(Class<VR128X>) -> 0(Class<VR128X>))  [4.05;4.05]
		 Successful, latency: 4.05
	VFMSUB231PDZ128rkz(4(Class<VR128X>) -> 0(Class<VR128X>))  [4.05;4.05]
		 Successful, latency: 4.05

-----VFMSUB231PDZ256r-----
	VFMSUB231PDZ256r(1(Class<VR256X>) -> 0(Class<VR256X>))  [4.03;4.03]
		 Successful, latency: 4.03
	VFMSUB231PDZ256r(2(Class<VR256X>) -> 0(Class<VR256X>))  [4.03;4.03]
		 Successful, latency: 4.03
	VFMSUB231PDZ256r(3(Class<VR256X>) -> 0(Class<VR256X>))  [4.03;4.03]
		 Successful, latency: 4.03

-----VFMSUB231PDZ256rb-----
	VFMSUB231PDZ256rb(1(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMSUB231PDZ256rb(2(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMSUB231PDZ256rb(3(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VFMSUB231PDZ256rbk-----
	VFMSUB231PDZ256rbk(1(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMSUB231PDZ256rbk(3(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMSUB231PDZ256rbk(4(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VFMSUB231PDZ256rbkz-----
	VFMSUB231PDZ256rbkz(1(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMSUB231PDZ256rbkz(3(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMSUB231PDZ256rbkz(4(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VFMSUB231PDZ256rk-----
	VFMSUB231PDZ256rk(1(Class<VR256X>) -> 0(Class<VR256X>))  [4.03;4.03]
		 Successful, latency: 4.03
	VFMSUB231PDZ256rk(3(Class<VR256X>) -> 0(Class<VR256X>))  [4.03;4.03]
		 Successful, latency: 4.03
	VFMSUB231PDZ256rk(4(Class<VR256X>) -> 0(Class<VR256X>))  [4.04;4.04]
		 Successful, latency: 4.04

-----VFMSUB231PDZ256rkz-----
	VFMSUB231PDZ256rkz(1(Class<VR256X>) -> 0(Class<VR256X>))  [4.02;4.02]
		 Successful, latency: 4.02
	VFMSUB231PDZ256rkz(3(Class<VR256X>) -> 0(Class<VR256X>))  [4.05;4.05]
		 Successful, latency: 4.05
	VFMSUB231PDZ256rkz(4(Class<VR256X>) -> 0(Class<VR256X>))  [4.04;4.04]
		 Successful, latency: 4.04

-----VFMSUB231PDZr-----
	VFMSUB231PDZr(1(Class<VR512>) -> 0(Class<VR512>))  [4.03;4.03]
		 Successful, latency: 4.03
	VFMSUB231PDZr(2(Class<VR512>) -> 0(Class<VR512>))  [4.04;4.04]
		 Successful, latency: 4.04
	VFMSUB231PDZr(3(Class<VR512>) -> 0(Class<VR512>))  [4.04;4.04]
		 Successful, latency: 4.04

-----VFMSUB231PDZrb-----
	VFMSUB231PDZrb(1(Class<VR512>) -> 0(Class<VR512>))  [4.03;4.03]
		 Successful, latency: 4.03
	VFMSUB231PDZrb(2(Class<VR512>) -> 0(Class<VR512>))  [4.03;4.03]
		 Successful, latency: 4.03
	VFMSUB231PDZrb(3(Class<VR512>) -> 0(Class<VR512>))  [4.01;4.01]
		 Successful, latency: 4.01

-----VFMSUB231PDZrbk-----
	VFMSUB231PDZrbk(1(Class<VR512>) -> 0(Class<VR512>))  [4.04;4.04]
		 Successful, latency: 4.04
	VFMSUB231PDZrbk(3(Class<VR512>) -> 0(Class<VR512>))  [4.05;4.05]
		 Successful, latency: 4.05
	VFMSUB231PDZrbk(4(Class<VR512>) -> 0(Class<VR512>))  [4.03;4.03]
		 Successful, latency: 4.03

-----VFMSUB231PDZrbkz-----
	VFMSUB231PDZrbkz(1(Class<VR512>) -> 0(Class<VR512>))  [4.05;4.05]
		 Successful, latency: 4.05
	VFMSUB231PDZrbkz(3(Class<VR512>) -> 0(Class<VR512>))  [4.02;4.02]
		 Successful, latency: 4.02
	VFMSUB231PDZrbkz(4(Class<VR512>) -> 0(Class<VR512>))  [4.03;4.03]
		 Successful, latency: 4.03

-----VFMSUB231PDZrk-----
	VFMSUB231PDZrk(1(Class<VR512>) -> 0(Class<VR512>))  [4.03;4.03]
		 Successful, latency: 4.03
	VFMSUB231PDZrk(3(Class<VR512>) -> 0(Class<VR512>))  [4.06;4.06]
		 Successful, latency: 4.06
	VFMSUB231PDZrk(4(Class<VR512>) -> 0(Class<VR512>))  [4.03;4.03]
		 Successful, latency: 4.03

-----VFMSUB231PDZrkz-----
	VFMSUB231PDZrkz(1(Class<VR512>) -> 0(Class<VR512>))  [4.07;4.07]
		 Successful, latency: 4.07
	VFMSUB231PDZrkz(3(Class<VR512>) -> 0(Class<VR512>))  [4.03;4.03]
		 Successful, latency: 4.03
	VFMSUB231PDZrkz(4(Class<VR512>) -> 0(Class<VR512>))  [4.04;4.04]
		 Successful, latency: 4.04

-----VFMSUB231PDr-----
	VFMSUB231PDr(1(Class<VR128>) -> 0(Class<VR128>))  [4.03;4.03]
		 Successful, latency: 4.03
	VFMSUB231PDr(2(Class<VR128>) -> 0(Class<VR128>))  [4.04;4.04]
		 Successful, latency: 4.04
	VFMSUB231PDr(3(Class<VR128>) -> 0(Class<VR128>))  [4.05;4.05]
		 Successful, latency: 4.05

-----VFMSUB231PHZ128r-----
	VFMSUB231PHZ128r(1(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMSUB231PHZ128r(2(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMSUB231PHZ128r(3(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VFMSUB231PHZ128rk-----
	VFMSUB231PHZ128rk(1(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMSUB231PHZ128rk(3(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMSUB231PHZ128rk(4(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VFMSUB231PHZ128rkz-----
	VFMSUB231PHZ128rkz(1(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMSUB231PHZ128rkz(3(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMSUB231PHZ128rkz(4(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VFMSUB231PHZ256r-----
	VFMSUB231PHZ256r(1(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMSUB231PHZ256r(2(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMSUB231PHZ256r(3(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VFMSUB231PHZ256rb-----
	VFMSUB231PHZ256rb(1(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMSUB231PHZ256rb(2(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMSUB231PHZ256rb(3(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VFMSUB231PHZ256rbk-----
	VFMSUB231PHZ256rbk(1(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMSUB231PHZ256rbk(3(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMSUB231PHZ256rbk(4(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VFMSUB231PHZ256rbkz-----
	VFMSUB231PHZ256rbkz(1(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMSUB231PHZ256rbkz(3(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMSUB231PHZ256rbkz(4(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VFMSUB231PHZ256rk-----
	VFMSUB231PHZ256rk(1(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMSUB231PHZ256rk(3(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMSUB231PHZ256rk(4(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VFMSUB231PHZ256rkz-----
	VFMSUB231PHZ256rkz(1(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMSUB231PHZ256rkz(3(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMSUB231PHZ256rkz(4(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VFMSUB231PHZr-----
	VFMSUB231PHZr(1(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMSUB231PHZr(2(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMSUB231PHZr(3(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VFMSUB231PHZrb-----
	VFMSUB231PHZrb(1(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMSUB231PHZrb(2(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMSUB231PHZrb(3(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VFMSUB231PHZrbk-----
	VFMSUB231PHZrbk(1(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMSUB231PHZrbk(3(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMSUB231PHZrbk(4(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VFMSUB231PHZrbkz-----
	VFMSUB231PHZrbkz(1(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMSUB231PHZrbkz(3(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMSUB231PHZrbkz(4(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VFMSUB231PHZrk-----
	VFMSUB231PHZrk(1(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMSUB231PHZrk(3(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMSUB231PHZrk(4(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VFMSUB231PHZrkz-----
	VFMSUB231PHZrkz(1(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMSUB231PHZrkz(3(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMSUB231PHZrkz(4(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VFMSUB231PSYr-----
	VFMSUB231PSYr(1(Class<VR256>) -> 0(Class<VR256>))  [4.03;4.03]
		 Successful, latency: 4.03
	VFMSUB231PSYr(2(Class<VR256>) -> 0(Class<VR256>))  [4.06;4.06]
		 Successful, latency: 4.06
	VFMSUB231PSYr(3(Class<VR256>) -> 0(Class<VR256>))  [4.02;4.02]
		 Successful, latency: 4.02

-----VFMSUB231PSZ128r-----
	VFMSUB231PSZ128r(1(Class<VR128X>) -> 0(Class<VR128X>))  [4.04;4.04]
		 Successful, latency: 4.04
	VFMSUB231PSZ128r(2(Class<VR128X>) -> 0(Class<VR128X>))  [4.06;4.06]
		 Successful, latency: 4.06
	VFMSUB231PSZ128r(3(Class<VR128X>) -> 0(Class<VR128X>))  [4.08;4.08]
		 Successful, latency: 4.08

-----VFMSUB231PSZ128rk-----
	VFMSUB231PSZ128rk(1(Class<VR128X>) -> 0(Class<VR128X>))  [4.04;4.04]
		 Successful, latency: 4.04
	VFMSUB231PSZ128rk(3(Class<VR128X>) -> 0(Class<VR128X>))  [4.03;4.03]
		 Successful, latency: 4.03
	VFMSUB231PSZ128rk(4(Class<VR128X>) -> 0(Class<VR128X>))  [4.07;4.07]
		 Successful, latency: 4.07

-----VFMSUB231PSZ128rkz-----
	VFMSUB231PSZ128rkz(1(Class<VR128X>) -> 0(Class<VR128X>))  [4.03;4.03]
		 Successful, latency: 4.03
	VFMSUB231PSZ128rkz(3(Class<VR128X>) -> 0(Class<VR128X>))  [4.05;4.05]
		 Successful, latency: 4.05
	VFMSUB231PSZ128rkz(4(Class<VR128X>) -> 0(Class<VR128X>))  [4.04;4.04]
		 Successful, latency: 4.04

-----VFMSUB231PSZ256r-----
	VFMSUB231PSZ256r(1(Class<VR256X>) -> 0(Class<VR256X>))  [4.03;4.03]
		 Successful, latency: 4.03
	VFMSUB231PSZ256r(2(Class<VR256X>) -> 0(Class<VR256X>))  [4.04;4.04]
		 Successful, latency: 4.04
	VFMSUB231PSZ256r(3(Class<VR256X>) -> 0(Class<VR256X>))  [4.04;4.04]
		 Successful, latency: 4.04

-----VFMSUB231PSZ256rb-----
	VFMSUB231PSZ256rb(1(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMSUB231PSZ256rb(2(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMSUB231PSZ256rb(3(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VFMSUB231PSZ256rbk-----
	VFMSUB231PSZ256rbk(1(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMSUB231PSZ256rbk(3(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMSUB231PSZ256rbk(4(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VFMSUB231PSZ256rbkz-----
	VFMSUB231PSZ256rbkz(1(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMSUB231PSZ256rbkz(3(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMSUB231PSZ256rbkz(4(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VFMSUB231PSZ256rk-----
	VFMSUB231PSZ256rk(1(Class<VR256X>) -> 0(Class<VR256X>))  [4.06;4.06]
		 Successful, latency: 4.06
	VFMSUB231PSZ256rk(3(Class<VR256X>) -> 0(Class<VR256X>))  [4.05;4.05]
		 Successful, latency: 4.05
	VFMSUB231PSZ256rk(4(Class<VR256X>) -> 0(Class<VR256X>))  [4.05;4.05]
		 Successful, latency: 4.05

-----VFMSUB231PSZ256rkz-----
	VFMSUB231PSZ256rkz(1(Class<VR256X>) -> 0(Class<VR256X>))  [4.04;4.04]
		 Successful, latency: 4.04
	VFMSUB231PSZ256rkz(3(Class<VR256X>) -> 0(Class<VR256X>))  [4.03;4.03]
		 Successful, latency: 4.03
	VFMSUB231PSZ256rkz(4(Class<VR256X>) -> 0(Class<VR256X>))  [4.03;4.03]
		 Successful, latency: 4.03

-----VFMSUB231PSZr-----
	VFMSUB231PSZr(1(Class<VR512>) -> 0(Class<VR512>))  [4.03;4.03]
		 Successful, latency: 4.03
	VFMSUB231PSZr(2(Class<VR512>) -> 0(Class<VR512>))  [4.03;4.03]
		 Successful, latency: 4.03
	VFMSUB231PSZr(3(Class<VR512>) -> 0(Class<VR512>))  [4.03;4.03]
		 Successful, latency: 4.03

-----VFMSUB231PSZrb-----
	VFMSUB231PSZrb(1(Class<VR512>) -> 0(Class<VR512>))  [4.07;4.07]
		 Successful, latency: 4.07
	VFMSUB231PSZrb(2(Class<VR512>) -> 0(Class<VR512>))  [4.04;4.04]
		 Successful, latency: 4.04
	VFMSUB231PSZrb(3(Class<VR512>) -> 0(Class<VR512>))  [4.04;4.04]
		 Successful, latency: 4.04

-----VFMSUB231PSZrbk-----
	VFMSUB231PSZrbk(1(Class<VR512>) -> 0(Class<VR512>))  [4.04;4.04]
		 Successful, latency: 4.04
	VFMSUB231PSZrbk(3(Class<VR512>) -> 0(Class<VR512>))  [4.03;4.03]
		 Successful, latency: 4.03
	VFMSUB231PSZrbk(4(Class<VR512>) -> 0(Class<VR512>))  [4.03;4.03]
		 Successful, latency: 4.03

-----VFMSUB231PSZrbkz-----
	VFMSUB231PSZrbkz(1(Class<VR512>) -> 0(Class<VR512>))  [4.04;4.04]
		 Successful, latency: 4.04
	VFMSUB231PSZrbkz(3(Class<VR512>) -> 0(Class<VR512>))  [4.03;4.03]
		 Successful, latency: 4.03
	VFMSUB231PSZrbkz(4(Class<VR512>) -> 0(Class<VR512>))  [4.03;4.03]
		 Successful, latency: 4.03

-----VFMSUB231PSZrk-----
	VFMSUB231PSZrk(1(Class<VR512>) -> 0(Class<VR512>))  [4.06;4.06]
		 Successful, latency: 4.06
	VFMSUB231PSZrk(3(Class<VR512>) -> 0(Class<VR512>))  [4.04;4.04]
		 Successful, latency: 4.04
	VFMSUB231PSZrk(4(Class<VR512>) -> 0(Class<VR512>))  [4.04;4.04]
		 Successful, latency: 4.04

-----VFMSUB231PSZrkz-----
	VFMSUB231PSZrkz(1(Class<VR512>) -> 0(Class<VR512>))  [4.04;4.04]
		 Successful, latency: 4.04
	VFMSUB231PSZrkz(3(Class<VR512>) -> 0(Class<VR512>))  [4.03;4.03]
		 Successful, latency: 4.03
	VFMSUB231PSZrkz(4(Class<VR512>) -> 0(Class<VR512>))  [4.04;4.04]
		 Successful, latency: 4.04

-----VFMSUB231PSr-----
	VFMSUB231PSr(1(Class<VR128>) -> 0(Class<VR128>))  [4.04;4.04]
		 Successful, latency: 4.04
	VFMSUB231PSr(2(Class<VR128>) -> 0(Class<VR128>))  [4.03;4.03]
		 Successful, latency: 4.03
	VFMSUB231PSr(3(Class<VR128>) -> 0(Class<VR128>))  [4.05;4.05]
		 Successful, latency: 4.05

-----VFMSUB231SDZr-----
	VFMSUB231SDZr(1(Class<FR64X>) -> 0(Class<FR64X>))  [4.05;4.05]
		 Successful, latency: 4.05
	VFMSUB231SDZr(2(Class<FR64X>) -> 0(Class<FR64X>))  [4.02;4.02]
		 Successful, latency: 4.02
	VFMSUB231SDZr(3(Class<FR64X>) -> 0(Class<FR64X>))  [4.03;4.03]
		 Successful, latency: 4.03

-----VFMSUB231SDZr_Int-----
	VFMSUB231SDZr_Int(1(Class<VR128X>) -> 0(Class<VR128X>))  [4.04;4.04]
		 Successful, latency: 4.04
	VFMSUB231SDZr_Int(2(Class<VR128X>) -> 0(Class<VR128X>))  [4.05;4.05]
		 Successful, latency: 4.05
	VFMSUB231SDZr_Int(3(Class<VR128X>) -> 0(Class<VR128X>))  [4.02;4.02]
		 Successful, latency: 4.02

-----VFMSUB231SDZrb-----
	VFMSUB231SDZrb(1(Class<FR64X>) -> 0(Class<FR64X>))  [4.06;4.06]
		 Successful, latency: 4.06
	VFMSUB231SDZrb(2(Class<FR64X>) -> 0(Class<FR64X>))  [4.04;4.04]
		 Successful, latency: 4.04
	VFMSUB231SDZrb(3(Class<FR64X>) -> 0(Class<FR64X>))  [4.06;4.06]
		 Successful, latency: 4.06

-----VFMSUB231SDZrb_Int-----
	VFMSUB231SDZrb_Int(1(Class<VR128X>) -> 0(Class<VR128X>))  [4.04;4.04]
		 Successful, latency: 4.04
	VFMSUB231SDZrb_Int(2(Class<VR128X>) -> 0(Class<VR128X>))  [4.04;4.04]
		 Successful, latency: 4.04
	VFMSUB231SDZrb_Int(3(Class<VR128X>) -> 0(Class<VR128X>))  [4.03;4.03]
		 Successful, latency: 4.03

-----VFMSUB231SDZrbk_Int-----
	VFMSUB231SDZrbk_Int(1(Class<VR128X>) -> 0(Class<VR128X>))  [4.12;4.12]
		 Successful, latency: 4.12
	VFMSUB231SDZrbk_Int(3(Class<VR128X>) -> 0(Class<VR128X>))  [4.03;4.03]
		 Successful, latency: 4.03
	VFMSUB231SDZrbk_Int(4(Class<VR128X>) -> 0(Class<VR128X>))  [4.05;4.05]
		 Successful, latency: 4.05

-----VFMSUB231SDZrbkz_Int-----
	VFMSUB231SDZrbkz_Int(1(Class<VR128X>) -> 0(Class<VR128X>))  [4.04;4.04]
		 Successful, latency: 4.04
	VFMSUB231SDZrbkz_Int(3(Class<VR128X>) -> 0(Class<VR128X>))  [4.03;4.03]
		 Successful, latency: 4.03
	VFMSUB231SDZrbkz_Int(4(Class<VR128X>) -> 0(Class<VR128X>))  [4.04;4.04]
		 Successful, latency: 4.04

-----VFMSUB231SDZrk_Int-----
	VFMSUB231SDZrk_Int(1(Class<VR128X>) -> 0(Class<VR128X>))  [4.04;4.04]
		 Successful, latency: 4.04
	VFMSUB231SDZrk_Int(3(Class<VR128X>) -> 0(Class<VR128X>))  [4.03;4.03]
		 Successful, latency: 4.03
	VFMSUB231SDZrk_Int(4(Class<VR128X>) -> 0(Class<VR128X>))  [4.06;4.06]
		 Successful, latency: 4.06

-----VFMSUB231SDZrkz_Int-----
	VFMSUB231SDZrkz_Int(1(Class<VR128X>) -> 0(Class<VR128X>))  [4.03;4.03]
		 Successful, latency: 4.03
	VFMSUB231SDZrkz_Int(3(Class<VR128X>) -> 0(Class<VR128X>))  [4.04;4.04]
		 Successful, latency: 4.04
	VFMSUB231SDZrkz_Int(4(Class<VR128X>) -> 0(Class<VR128X>))  [4.04;4.04]
		 Successful, latency: 4.04

-----VFMSUB231SDr-----
	VFMSUB231SDr(1(Class<FR64>) -> 0(Class<FR64>))  [4.04;4.04]
		 Successful, latency: 4.04
	VFMSUB231SDr(2(Class<FR64>) -> 0(Class<FR64>))  [4.08;4.08]
		 Successful, latency: 4.08
	VFMSUB231SDr(3(Class<FR64>) -> 0(Class<FR64>))  [4.02;4.02]
		 Successful, latency: 4.02

-----VFMSUB231SDr_Int-----
	VFMSUB231SDr_Int(1(Class<VR128>) -> 0(Class<VR128>))  [4.03;4.03]
		 Successful, latency: 4.03
	VFMSUB231SDr_Int(2(Class<VR128>) -> 0(Class<VR128>))  [4.07;4.07]
		 Successful, latency: 4.07
	VFMSUB231SDr_Int(3(Class<VR128>) -> 0(Class<VR128>))  [4.06;4.06]
		 Successful, latency: 4.06

-----VFMSUB231SHZr-----
	VFMSUB231SHZr(1(Class<FR16X>) -> 0(Class<FR16X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMSUB231SHZr(2(Class<FR16X>) -> 0(Class<FR16X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMSUB231SHZr(3(Class<FR16X>) -> 0(Class<FR16X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VFMSUB231SHZr_Int-----
	VFMSUB231SHZr_Int(1(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMSUB231SHZr_Int(2(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMSUB231SHZr_Int(3(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VFMSUB231SHZrb-----
	VFMSUB231SHZrb(1(Class<FR16X>) -> 0(Class<FR16X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMSUB231SHZrb(2(Class<FR16X>) -> 0(Class<FR16X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMSUB231SHZrb(3(Class<FR16X>) -> 0(Class<FR16X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VFMSUB231SHZrb_Int-----
	VFMSUB231SHZrb_Int(1(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMSUB231SHZrb_Int(2(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMSUB231SHZrb_Int(3(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VFMSUB231SHZrbk_Int-----
	VFMSUB231SHZrbk_Int(1(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMSUB231SHZrbk_Int(3(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMSUB231SHZrbk_Int(4(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VFMSUB231SHZrbkz_Int-----
	VFMSUB231SHZrbkz_Int(1(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMSUB231SHZrbkz_Int(3(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMSUB231SHZrbkz_Int(4(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VFMSUB231SHZrk_Int-----
	VFMSUB231SHZrk_Int(1(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMSUB231SHZrk_Int(3(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMSUB231SHZrk_Int(4(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VFMSUB231SHZrkz_Int-----
	VFMSUB231SHZrkz_Int(1(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMSUB231SHZrkz_Int(3(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMSUB231SHZrkz_Int(4(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VFMSUB231SSZr-----
	VFMSUB231SSZr(1(Class<FR32X>) -> 0(Class<FR32X>))  [4.05;4.05]
		 Successful, latency: 4.05
	VFMSUB231SSZr(2(Class<FR32X>) -> 0(Class<FR32X>))  [4.05;4.05]
		 Successful, latency: 4.05
	VFMSUB231SSZr(3(Class<FR32X>) -> 0(Class<FR32X>))  [4.05;4.05]
		 Successful, latency: 4.05

-----VFMSUB231SSZr_Int-----
	VFMSUB231SSZr_Int(1(Class<VR128X>) -> 0(Class<VR128X>))  [4.04;4.04]
		 Successful, latency: 4.04
	VFMSUB231SSZr_Int(2(Class<VR128X>) -> 0(Class<VR128X>))  [4.03;4.03]
		 Successful, latency: 4.03
	VFMSUB231SSZr_Int(3(Class<VR128X>) -> 0(Class<VR128X>))  [4.04;4.04]
		 Successful, latency: 4.04

-----VFMSUB231SSZrb-----
	VFMSUB231SSZrb(1(Class<FR32X>) -> 0(Class<FR32X>))  [4.06;4.06]
		 Successful, latency: 4.06
	VFMSUB231SSZrb(2(Class<FR32X>) -> 0(Class<FR32X>))  [4.04;4.04]
		 Successful, latency: 4.04
	VFMSUB231SSZrb(3(Class<FR32X>) -> 0(Class<FR32X>))  [4.08;4.08]
		 Successful, latency: 4.08

-----VFMSUB231SSZrb_Int-----
	VFMSUB231SSZrb_Int(1(Class<VR128X>) -> 0(Class<VR128X>))  [4.03;4.03]
		 Successful, latency: 4.03
	VFMSUB231SSZrb_Int(2(Class<VR128X>) -> 0(Class<VR128X>))  [4.05;4.05]
		 Successful, latency: 4.05
	VFMSUB231SSZrb_Int(3(Class<VR128X>) -> 0(Class<VR128X>))  [4.03;4.03]
		 Successful, latency: 4.03

-----VFMSUB231SSZrbk_Int-----
	VFMSUB231SSZrbk_Int(1(Class<VR128X>) -> 0(Class<VR128X>))  [4.03;4.03]
		 Successful, latency: 4.03
	VFMSUB231SSZrbk_Int(3(Class<VR128X>) -> 0(Class<VR128X>))  [4.03;4.03]
		 Successful, latency: 4.03
	VFMSUB231SSZrbk_Int(4(Class<VR128X>) -> 0(Class<VR128X>))  [4.04;4.04]
		 Successful, latency: 4.04

-----VFMSUB231SSZrbkz_Int-----
	VFMSUB231SSZrbkz_Int(1(Class<VR128X>) -> 0(Class<VR128X>))  [4.02;4.02]
		 Successful, latency: 4.02
	VFMSUB231SSZrbkz_Int(3(Class<VR128X>) -> 0(Class<VR128X>))  [4.03;4.03]
		 Successful, latency: 4.03
	VFMSUB231SSZrbkz_Int(4(Class<VR128X>) -> 0(Class<VR128X>))  [4.05;4.05]
		 Successful, latency: 4.05

-----VFMSUB231SSZrk_Int-----
	VFMSUB231SSZrk_Int(1(Class<VR128X>) -> 0(Class<VR128X>))  [4.06;4.06]
		 Successful, latency: 4.06
	VFMSUB231SSZrk_Int(3(Class<VR128X>) -> 0(Class<VR128X>))  [4.03;4.03]
		 Successful, latency: 4.03
	VFMSUB231SSZrk_Int(4(Class<VR128X>) -> 0(Class<VR128X>))  [4.05;4.05]
		 Successful, latency: 4.05

-----VFMSUB231SSZrkz_Int-----
	VFMSUB231SSZrkz_Int(1(Class<VR128X>) -> 0(Class<VR128X>))  [4.04;4.04]
		 Successful, latency: 4.04
	VFMSUB231SSZrkz_Int(3(Class<VR128X>) -> 0(Class<VR128X>))  [4.05;4.05]
		 Successful, latency: 4.05
	VFMSUB231SSZrkz_Int(4(Class<VR128X>) -> 0(Class<VR128X>))  [4.05;4.05]
		 Successful, latency: 4.05

-----VFMSUB231SSr-----
	VFMSUB231SSr(1(Class<FR32>) -> 0(Class<FR32>))  [4.03;4.03]
		 Successful, latency: 4.03
	VFMSUB231SSr(2(Class<FR32>) -> 0(Class<FR32>))  [4.07;4.07]
		 Successful, latency: 4.07
	VFMSUB231SSr(3(Class<FR32>) -> 0(Class<FR32>))  [4.05;4.05]
		 Successful, latency: 4.05

-----VFMSUB231SSr_Int-----
	VFMSUB231SSr_Int(1(Class<VR128>) -> 0(Class<VR128>))  [4.06;4.06]
		 Successful, latency: 4.06
	VFMSUB231SSr_Int(2(Class<VR128>) -> 0(Class<VR128>))  [4.03;4.03]
		 Successful, latency: 4.03
	VFMSUB231SSr_Int(3(Class<VR128>) -> 0(Class<VR128>))  [4.07;4.07]
		 Successful, latency: 4.07

-----VFMSUBADD132PDYr-----
	VFMSUBADD132PDYr(1(Class<VR256>) -> 0(Class<VR256>))  [4.03;4.03]
		 Successful, latency: 4.03
	VFMSUBADD132PDYr(2(Class<VR256>) -> 0(Class<VR256>))  [4.04;4.04]
		 Successful, latency: 4.04
	VFMSUBADD132PDYr(3(Class<VR256>) -> 0(Class<VR256>))  [4.03;4.03]
		 Successful, latency: 4.03

-----VFMSUBADD132PDZ128r-----
	VFMSUBADD132PDZ128r(1(Class<VR128X>) -> 0(Class<VR128X>))  [4.04;4.04]
		 Successful, latency: 4.04
	VFMSUBADD132PDZ128r(2(Class<VR128X>) -> 0(Class<VR128X>))  [4.03;4.03]
		 Successful, latency: 4.03
	VFMSUBADD132PDZ128r(3(Class<VR128X>) -> 0(Class<VR128X>))  [4.05;4.05]
		 Successful, latency: 4.05

-----VFMSUBADD132PDZ128rk-----
	VFMSUBADD132PDZ128rk(1(Class<VR128X>) -> 0(Class<VR128X>))  [4.05;4.05]
		 Successful, latency: 4.05
	VFMSUBADD132PDZ128rk(3(Class<VR128X>) -> 0(Class<VR128X>))  [4.03;4.03]
		 Successful, latency: 4.03
	VFMSUBADD132PDZ128rk(4(Class<VR128X>) -> 0(Class<VR128X>))  [4.03;4.03]
		 Successful, latency: 4.03

-----VFMSUBADD132PDZ128rkz-----
	VFMSUBADD132PDZ128rkz(1(Class<VR128X>) -> 0(Class<VR128X>))  [4.04;4.04]
		 Successful, latency: 4.04
	VFMSUBADD132PDZ128rkz(3(Class<VR128X>) -> 0(Class<VR128X>))  [4.05;4.05]
		 Successful, latency: 4.05
	VFMSUBADD132PDZ128rkz(4(Class<VR128X>) -> 0(Class<VR128X>))  [4.05;4.05]
		 Successful, latency: 4.05

-----VFMSUBADD132PDZ256r-----
	VFMSUBADD132PDZ256r(1(Class<VR256X>) -> 0(Class<VR256X>))  [4.03;4.03]
		 Successful, latency: 4.03
	VFMSUBADD132PDZ256r(2(Class<VR256X>) -> 0(Class<VR256X>))  [4.05;4.05]
		 Successful, latency: 4.05
	VFMSUBADD132PDZ256r(3(Class<VR256X>) -> 0(Class<VR256X>))  [4.05;4.05]
		 Successful, latency: 4.05

-----VFMSUBADD132PDZ256rb-----
	VFMSUBADD132PDZ256rb(1(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMSUBADD132PDZ256rb(2(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMSUBADD132PDZ256rb(3(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VFMSUBADD132PDZ256rbk-----
	VFMSUBADD132PDZ256rbk(1(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMSUBADD132PDZ256rbk(3(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMSUBADD132PDZ256rbk(4(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VFMSUBADD132PDZ256rbkz-----
	VFMSUBADD132PDZ256rbkz(1(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMSUBADD132PDZ256rbkz(3(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMSUBADD132PDZ256rbkz(4(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VFMSUBADD132PDZ256rk-----
	VFMSUBADD132PDZ256rk(1(Class<VR256X>) -> 0(Class<VR256X>))  [4.04;4.04]
		 Successful, latency: 4.04
	VFMSUBADD132PDZ256rk(3(Class<VR256X>) -> 0(Class<VR256X>))  [4.05;4.05]
		 Successful, latency: 4.05
	VFMSUBADD132PDZ256rk(4(Class<VR256X>) -> 0(Class<VR256X>))  [4.02;4.02]
		 Successful, latency: 4.02

-----VFMSUBADD132PDZ256rkz-----
	VFMSUBADD132PDZ256rkz(1(Class<VR256X>) -> 0(Class<VR256X>))  [4.03;4.03]
		 Successful, latency: 4.03
	VFMSUBADD132PDZ256rkz(3(Class<VR256X>) -> 0(Class<VR256X>))  [4.03;4.03]
		 Successful, latency: 4.03
	VFMSUBADD132PDZ256rkz(4(Class<VR256X>) -> 0(Class<VR256X>))  [4.05;4.05]
		 Successful, latency: 4.05

-----VFMSUBADD132PDZr-----
	VFMSUBADD132PDZr(1(Class<VR512>) -> 0(Class<VR512>))  [4.03;4.03]
		 Successful, latency: 4.03
	VFMSUBADD132PDZr(2(Class<VR512>) -> 0(Class<VR512>))  [4.03;4.03]
		 Successful, latency: 4.03
	VFMSUBADD132PDZr(3(Class<VR512>) -> 0(Class<VR512>))  [4.03;4.03]
		 Successful, latency: 4.03

-----VFMSUBADD132PDZrb-----
	VFMSUBADD132PDZrb(1(Class<VR512>) -> 0(Class<VR512>))  [4.05;4.05]
		 Successful, latency: 4.05
	VFMSUBADD132PDZrb(2(Class<VR512>) -> 0(Class<VR512>))  [4.04;4.04]
		 Successful, latency: 4.04
	VFMSUBADD132PDZrb(3(Class<VR512>) -> 0(Class<VR512>))  [4.05;4.05]
		 Successful, latency: 4.05

-----VFMSUBADD132PDZrbk-----
	VFMSUBADD132PDZrbk(1(Class<VR512>) -> 0(Class<VR512>))  [4.03;4.03]
		 Successful, latency: 4.03
	VFMSUBADD132PDZrbk(3(Class<VR512>) -> 0(Class<VR512>))  [4.05;4.05]
		 Successful, latency: 4.05
	VFMSUBADD132PDZrbk(4(Class<VR512>) -> 0(Class<VR512>))  [4.05;4.05]
		 Successful, latency: 4.05

-----VFMSUBADD132PDZrbkz-----
	VFMSUBADD132PDZrbkz(1(Class<VR512>) -> 0(Class<VR512>))  [4.05;4.05]
		 Successful, latency: 4.05
	VFMSUBADD132PDZrbkz(3(Class<VR512>) -> 0(Class<VR512>))  [4.02;4.02]
		 Successful, latency: 4.02
	VFMSUBADD132PDZrbkz(4(Class<VR512>) -> 0(Class<VR512>))  [4.06;4.06]
		 Successful, latency: 4.06

-----VFMSUBADD132PDZrk-----
	VFMSUBADD132PDZrk(1(Class<VR512>) -> 0(Class<VR512>))  [4.04;4.04]
		 Successful, latency: 4.04
	VFMSUBADD132PDZrk(3(Class<VR512>) -> 0(Class<VR512>))  [4.04;4.04]
		 Successful, latency: 4.04
	VFMSUBADD132PDZrk(4(Class<VR512>) -> 0(Class<VR512>))  [4.03;4.03]
		 Successful, latency: 4.03

-----VFMSUBADD132PDZrkz-----
	VFMSUBADD132PDZrkz(1(Class<VR512>) -> 0(Class<VR512>))  [4.03;4.03]
		 Successful, latency: 4.03
	VFMSUBADD132PDZrkz(3(Class<VR512>) -> 0(Class<VR512>))  [4.04;4.04]
		 Successful, latency: 4.04
	VFMSUBADD132PDZrkz(4(Class<VR512>) -> 0(Class<VR512>))  [4.04;4.04]
		 Successful, latency: 4.04

-----VFMSUBADD132PDr-----
	VFMSUBADD132PDr(1(Class<VR128>) -> 0(Class<VR128>))  [4.04;4.04]
		 Successful, latency: 4.04
	VFMSUBADD132PDr(2(Class<VR128>) -> 0(Class<VR128>))  [4.03;4.03]
		 Successful, latency: 4.03
	VFMSUBADD132PDr(3(Class<VR128>) -> 0(Class<VR128>))  [4.06;4.06]
		 Successful, latency: 4.06

-----VFMSUBADD132PHZ128r-----
	VFMSUBADD132PHZ128r(1(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMSUBADD132PHZ128r(2(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMSUBADD132PHZ128r(3(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VFMSUBADD132PHZ128rk-----
	VFMSUBADD132PHZ128rk(1(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMSUBADD132PHZ128rk(3(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMSUBADD132PHZ128rk(4(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VFMSUBADD132PHZ128rkz-----
	VFMSUBADD132PHZ128rkz(1(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMSUBADD132PHZ128rkz(3(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMSUBADD132PHZ128rkz(4(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VFMSUBADD132PHZ256r-----
	VFMSUBADD132PHZ256r(1(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMSUBADD132PHZ256r(2(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMSUBADD132PHZ256r(3(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VFMSUBADD132PHZ256rb-----
	VFMSUBADD132PHZ256rb(1(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMSUBADD132PHZ256rb(2(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMSUBADD132PHZ256rb(3(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VFMSUBADD132PHZ256rbk-----
	VFMSUBADD132PHZ256rbk(1(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMSUBADD132PHZ256rbk(3(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMSUBADD132PHZ256rbk(4(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VFMSUBADD132PHZ256rbkz-----
	VFMSUBADD132PHZ256rbkz(1(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMSUBADD132PHZ256rbkz(3(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMSUBADD132PHZ256rbkz(4(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VFMSUBADD132PHZ256rk-----
	VFMSUBADD132PHZ256rk(1(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMSUBADD132PHZ256rk(3(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMSUBADD132PHZ256rk(4(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VFMSUBADD132PHZ256rkz-----
	VFMSUBADD132PHZ256rkz(1(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMSUBADD132PHZ256rkz(3(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMSUBADD132PHZ256rkz(4(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VFMSUBADD132PHZr-----
	VFMSUBADD132PHZr(1(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMSUBADD132PHZr(2(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMSUBADD132PHZr(3(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VFMSUBADD132PHZrb-----
	VFMSUBADD132PHZrb(1(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMSUBADD132PHZrb(2(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMSUBADD132PHZrb(3(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VFMSUBADD132PHZrbk-----
	VFMSUBADD132PHZrbk(1(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMSUBADD132PHZrbk(3(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMSUBADD132PHZrbk(4(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VFMSUBADD132PHZrbkz-----
	VFMSUBADD132PHZrbkz(1(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMSUBADD132PHZrbkz(3(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMSUBADD132PHZrbkz(4(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VFMSUBADD132PHZrk-----
	VFMSUBADD132PHZrk(1(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMSUBADD132PHZrk(3(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMSUBADD132PHZrk(4(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VFMSUBADD132PHZrkz-----
	VFMSUBADD132PHZrkz(1(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMSUBADD132PHZrkz(3(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMSUBADD132PHZrkz(4(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VFMSUBADD132PSYr-----
	VFMSUBADD132PSYr(1(Class<VR256>) -> 0(Class<VR256>))  [4.04;4.04]
		 Successful, latency: 4.04
	VFMSUBADD132PSYr(2(Class<VR256>) -> 0(Class<VR256>))  [4.04;4.04]
		 Successful, latency: 4.04
	VFMSUBADD132PSYr(3(Class<VR256>) -> 0(Class<VR256>))  [4.04;4.04]
		 Successful, latency: 4.04

-----VFMSUBADD132PSZ128r-----
	VFMSUBADD132PSZ128r(1(Class<VR128X>) -> 0(Class<VR128X>))  [4.04;4.04]
		 Successful, latency: 4.04
	VFMSUBADD132PSZ128r(2(Class<VR128X>) -> 0(Class<VR128X>))  [4.06;4.06]
		 Successful, latency: 4.06
	VFMSUBADD132PSZ128r(3(Class<VR128X>) -> 0(Class<VR128X>))  [4.05;4.05]
		 Successful, latency: 4.05

-----VFMSUBADD132PSZ128rk-----
	VFMSUBADD132PSZ128rk(1(Class<VR128X>) -> 0(Class<VR128X>))  [4.05;4.05]
		 Successful, latency: 4.05
	VFMSUBADD132PSZ128rk(3(Class<VR128X>) -> 0(Class<VR128X>))  [4.04;4.04]
		 Successful, latency: 4.04
	VFMSUBADD132PSZ128rk(4(Class<VR128X>) -> 0(Class<VR128X>))  [4.04;4.04]
		 Successful, latency: 4.04

-----VFMSUBADD132PSZ128rkz-----
	VFMSUBADD132PSZ128rkz(1(Class<VR128X>) -> 0(Class<VR128X>))  [4.05;4.05]
		 Successful, latency: 4.05
	VFMSUBADD132PSZ128rkz(3(Class<VR128X>) -> 0(Class<VR128X>))  [4.03;4.03]
		 Successful, latency: 4.03
	VFMSUBADD132PSZ128rkz(4(Class<VR128X>) -> 0(Class<VR128X>))  [4.07;4.07]
		 Successful, latency: 4.07

-----VFMSUBADD132PSZ256r-----
	VFMSUBADD132PSZ256r(1(Class<VR256X>) -> 0(Class<VR256X>))  [4.03;4.03]
		 Successful, latency: 4.03
	VFMSUBADD132PSZ256r(2(Class<VR256X>) -> 0(Class<VR256X>))  [4.04;4.04]
		 Successful, latency: 4.04
	VFMSUBADD132PSZ256r(3(Class<VR256X>) -> 0(Class<VR256X>))  [4.03;4.03]
		 Successful, latency: 4.03

-----VFMSUBADD132PSZ256rb-----
	VFMSUBADD132PSZ256rb(1(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMSUBADD132PSZ256rb(2(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMSUBADD132PSZ256rb(3(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VFMSUBADD132PSZ256rbk-----
	VFMSUBADD132PSZ256rbk(1(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMSUBADD132PSZ256rbk(3(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMSUBADD132PSZ256rbk(4(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VFMSUBADD132PSZ256rbkz-----
	VFMSUBADD132PSZ256rbkz(1(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMSUBADD132PSZ256rbkz(3(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMSUBADD132PSZ256rbkz(4(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VFMSUBADD132PSZ256rk-----
	VFMSUBADD132PSZ256rk(1(Class<VR256X>) -> 0(Class<VR256X>))  [4.04;4.04]
		 Successful, latency: 4.04
	VFMSUBADD132PSZ256rk(3(Class<VR256X>) -> 0(Class<VR256X>))  [4.02;4.02]
		 Successful, latency: 4.02
	VFMSUBADD132PSZ256rk(4(Class<VR256X>) -> 0(Class<VR256X>))  [4.03;4.03]
		 Successful, latency: 4.03

-----VFMSUBADD132PSZ256rkz-----
	VFMSUBADD132PSZ256rkz(1(Class<VR256X>) -> 0(Class<VR256X>))  [4.04;4.04]
		 Successful, latency: 4.04
	VFMSUBADD132PSZ256rkz(3(Class<VR256X>) -> 0(Class<VR256X>))  [4.03;4.03]
		 Successful, latency: 4.03
	VFMSUBADD132PSZ256rkz(4(Class<VR256X>) -> 0(Class<VR256X>))  [4.05;4.05]
		 Successful, latency: 4.05

-----VFMSUBADD132PSZr-----
	VFMSUBADD132PSZr(1(Class<VR512>) -> 0(Class<VR512>))  [4.05;4.05]
		 Successful, latency: 4.05
	VFMSUBADD132PSZr(2(Class<VR512>) -> 0(Class<VR512>))  [4.03;4.03]
		 Successful, latency: 4.03
	VFMSUBADD132PSZr(3(Class<VR512>) -> 0(Class<VR512>))  [4.03;4.03]
		 Successful, latency: 4.03

-----VFMSUBADD132PSZrb-----
	VFMSUBADD132PSZrb(1(Class<VR512>) -> 0(Class<VR512>))  [4.06;4.06]
		 Successful, latency: 4.06
	VFMSUBADD132PSZrb(2(Class<VR512>) -> 0(Class<VR512>))  [4.04;4.04]
		 Successful, latency: 4.04
	VFMSUBADD132PSZrb(3(Class<VR512>) -> 0(Class<VR512>))  [4.03;4.03]
		 Successful, latency: 4.03

-----VFMSUBADD132PSZrbk-----
	VFMSUBADD132PSZrbk(1(Class<VR512>) -> 0(Class<VR512>))  [4.03;4.03]
		 Successful, latency: 4.03
	VFMSUBADD132PSZrbk(3(Class<VR512>) -> 0(Class<VR512>))  [4.03;4.03]
		 Successful, latency: 4.03
	VFMSUBADD132PSZrbk(4(Class<VR512>) -> 0(Class<VR512>))  [4.03;4.03]
		 Successful, latency: 4.03

-----VFMSUBADD132PSZrbkz-----
	VFMSUBADD132PSZrbkz(1(Class<VR512>) -> 0(Class<VR512>))  [4.03;4.03]
		 Successful, latency: 4.03
	VFMSUBADD132PSZrbkz(3(Class<VR512>) -> 0(Class<VR512>))  [4.04;4.04]
		 Successful, latency: 4.04
	VFMSUBADD132PSZrbkz(4(Class<VR512>) -> 0(Class<VR512>))  [4.04;4.04]
		 Successful, latency: 4.04

-----VFMSUBADD132PSZrk-----
	VFMSUBADD132PSZrk(1(Class<VR512>) -> 0(Class<VR512>))  [4.04;4.04]
		 Successful, latency: 4.04
	VFMSUBADD132PSZrk(3(Class<VR512>) -> 0(Class<VR512>))  [4.04;4.04]
		 Successful, latency: 4.04
	VFMSUBADD132PSZrk(4(Class<VR512>) -> 0(Class<VR512>))  [4.05;4.05]
		 Successful, latency: 4.05

-----VFMSUBADD132PSZrkz-----
	VFMSUBADD132PSZrkz(1(Class<VR512>) -> 0(Class<VR512>))  [4.04;4.04]
		 Successful, latency: 4.04
	VFMSUBADD132PSZrkz(3(Class<VR512>) -> 0(Class<VR512>))  [4.02;4.02]
		 Successful, latency: 4.02
	VFMSUBADD132PSZrkz(4(Class<VR512>) -> 0(Class<VR512>))  [4.03;4.03]
		 Successful, latency: 4.03

-----VFMSUBADD132PSr-----
	VFMSUBADD132PSr(1(Class<VR128>) -> 0(Class<VR128>))  [4.07;4.07]
		 Successful, latency: 4.07
	VFMSUBADD132PSr(2(Class<VR128>) -> 0(Class<VR128>))  [4.05;4.05]
		 Successful, latency: 4.05
	VFMSUBADD132PSr(3(Class<VR128>) -> 0(Class<VR128>))  [4.04;4.04]
		 Successful, latency: 4.04

-----VFMSUBADD213PDYr-----
	VFMSUBADD213PDYr(1(Class<VR256>) -> 0(Class<VR256>))  [4.03;4.03]
		 Successful, latency: 4.03
	VFMSUBADD213PDYr(2(Class<VR256>) -> 0(Class<VR256>))  [4.03;4.03]
		 Successful, latency: 4.03
	VFMSUBADD213PDYr(3(Class<VR256>) -> 0(Class<VR256>))  [4.04;4.04]
		 Successful, latency: 4.04

-----VFMSUBADD213PDZ128r-----
	VFMSUBADD213PDZ128r(1(Class<VR128X>) -> 0(Class<VR128X>))  [4.04;4.04]
		 Successful, latency: 4.04
	VFMSUBADD213PDZ128r(2(Class<VR128X>) -> 0(Class<VR128X>))  [4.03;4.03]
		 Successful, latency: 4.03
	VFMSUBADD213PDZ128r(3(Class<VR128X>) -> 0(Class<VR128X>))  [4.04;4.04]
		 Successful, latency: 4.04

-----VFMSUBADD213PDZ128rk-----
	VFMSUBADD213PDZ128rk(1(Class<VR128X>) -> 0(Class<VR128X>))  [4.04;4.04]
		 Successful, latency: 4.04
	VFMSUBADD213PDZ128rk(3(Class<VR128X>) -> 0(Class<VR128X>))  [4.03;4.03]
		 Successful, latency: 4.03
	VFMSUBADD213PDZ128rk(4(Class<VR128X>) -> 0(Class<VR128X>))  [4.02;4.02]
		 Successful, latency: 4.02

-----VFMSUBADD213PDZ128rkz-----
	VFMSUBADD213PDZ128rkz(1(Class<VR128X>) -> 0(Class<VR128X>))  [4.04;4.04]
		 Successful, latency: 4.04
	VFMSUBADD213PDZ128rkz(3(Class<VR128X>) -> 0(Class<VR128X>))  [4.03;4.03]
		 Successful, latency: 4.03
	VFMSUBADD213PDZ128rkz(4(Class<VR128X>) -> 0(Class<VR128X>))  [4.03;4.03]
		 Successful, latency: 4.03

-----VFMSUBADD213PDZ256r-----
	VFMSUBADD213PDZ256r(1(Class<VR256X>) -> 0(Class<VR256X>))  [4.08;4.08]
		 Successful, latency: 4.08
	VFMSUBADD213PDZ256r(2(Class<VR256X>) -> 0(Class<VR256X>))  [4.05;4.05]
		 Successful, latency: 4.05
	VFMSUBADD213PDZ256r(3(Class<VR256X>) -> 0(Class<VR256X>))  [4.05;4.05]
		 Successful, latency: 4.05

-----VFMSUBADD213PDZ256rb-----
	VFMSUBADD213PDZ256rb(1(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMSUBADD213PDZ256rb(2(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMSUBADD213PDZ256rb(3(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VFMSUBADD213PDZ256rbk-----
	VFMSUBADD213PDZ256rbk(1(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMSUBADD213PDZ256rbk(3(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMSUBADD213PDZ256rbk(4(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VFMSUBADD213PDZ256rbkz-----
	VFMSUBADD213PDZ256rbkz(1(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMSUBADD213PDZ256rbkz(3(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMSUBADD213PDZ256rbkz(4(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VFMSUBADD213PDZ256rk-----
	VFMSUBADD213PDZ256rk(1(Class<VR256X>) -> 0(Class<VR256X>))  [4.04;4.04]
		 Successful, latency: 4.04
	VFMSUBADD213PDZ256rk(3(Class<VR256X>) -> 0(Class<VR256X>))  [4.05;4.05]
		 Successful, latency: 4.05
	VFMSUBADD213PDZ256rk(4(Class<VR256X>) -> 0(Class<VR256X>))  [4.02;4.02]
		 Successful, latency: 4.02

-----VFMSUBADD213PDZ256rkz-----
	VFMSUBADD213PDZ256rkz(1(Class<VR256X>) -> 0(Class<VR256X>))  [4.03;4.03]
		 Successful, latency: 4.03
	VFMSUBADD213PDZ256rkz(3(Class<VR256X>) -> 0(Class<VR256X>))  [4.04;4.04]
		 Successful, latency: 4.04
	VFMSUBADD213PDZ256rkz(4(Class<VR256X>) -> 0(Class<VR256X>))  [4.04;4.04]
		 Successful, latency: 4.04

-----VFMSUBADD213PDZr-----
	VFMSUBADD213PDZr(1(Class<VR512>) -> 0(Class<VR512>))  [4.04;4.04]
		 Successful, latency: 4.04
	VFMSUBADD213PDZr(2(Class<VR512>) -> 0(Class<VR512>))  [4.04;4.04]
		 Successful, latency: 4.04
	VFMSUBADD213PDZr(3(Class<VR512>) -> 0(Class<VR512>))  [4.04;4.04]
		 Successful, latency: 4.04

-----VFMSUBADD213PDZrb-----
	VFMSUBADD213PDZrb(1(Class<VR512>) -> 0(Class<VR512>))  [4.05;4.05]
		 Successful, latency: 4.05
	VFMSUBADD213PDZrb(2(Class<VR512>) -> 0(Class<VR512>))  [4.02;4.02]
		 Successful, latency: 4.02
	VFMSUBADD213PDZrb(3(Class<VR512>) -> 0(Class<VR512>))  [4.04;4.04]
		 Successful, latency: 4.04

-----VFMSUBADD213PDZrbk-----
	VFMSUBADD213PDZrbk(1(Class<VR512>) -> 0(Class<VR512>))  [4.03;4.03]
		 Successful, latency: 4.03
	VFMSUBADD213PDZrbk(3(Class<VR512>) -> 0(Class<VR512>))  [4.04;4.04]
		 Successful, latency: 4.04
	VFMSUBADD213PDZrbk(4(Class<VR512>) -> 0(Class<VR512>))  [4.05;4.05]
		 Successful, latency: 4.05

-----VFMSUBADD213PDZrbkz-----
	VFMSUBADD213PDZrbkz(1(Class<VR512>) -> 0(Class<VR512>))  [4.03;4.03]
		 Successful, latency: 4.03
	VFMSUBADD213PDZrbkz(3(Class<VR512>) -> 0(Class<VR512>))  [4.05;4.05]
		 Successful, latency: 4.05
	VFMSUBADD213PDZrbkz(4(Class<VR512>) -> 0(Class<VR512>))  [4.03;4.03]
		 Successful, latency: 4.03

-----VFMSUBADD213PDZrk-----
	VFMSUBADD213PDZrk(1(Class<VR512>) -> 0(Class<VR512>))  [4.05;4.05]
		 Successful, latency: 4.05
	VFMSUBADD213PDZrk(3(Class<VR512>) -> 0(Class<VR512>))  [4.02;4.02]
		 Successful, latency: 4.02
	VFMSUBADD213PDZrk(4(Class<VR512>) -> 0(Class<VR512>))  [4.04;4.04]
		 Successful, latency: 4.04

-----VFMSUBADD213PDZrkz-----
	VFMSUBADD213PDZrkz(1(Class<VR512>) -> 0(Class<VR512>))  [4.04;4.04]
		 Successful, latency: 4.04
	VFMSUBADD213PDZrkz(3(Class<VR512>) -> 0(Class<VR512>))  [4.04;4.04]
		 Successful, latency: 4.04
	VFMSUBADD213PDZrkz(4(Class<VR512>) -> 0(Class<VR512>))  [4.03;4.03]
		 Successful, latency: 4.03

-----VFMSUBADD213PDr-----
	VFMSUBADD213PDr(1(Class<VR128>) -> 0(Class<VR128>))  [4.04;4.04]
		 Successful, latency: 4.04
	VFMSUBADD213PDr(2(Class<VR128>) -> 0(Class<VR128>))  [4.03;4.03]
		 Successful, latency: 4.03
	VFMSUBADD213PDr(3(Class<VR128>) -> 0(Class<VR128>))  [4.04;4.04]
		 Successful, latency: 4.04

-----VFMSUBADD213PHZ128r-----
	VFMSUBADD213PHZ128r(1(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMSUBADD213PHZ128r(2(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMSUBADD213PHZ128r(3(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VFMSUBADD213PHZ128rk-----
	VFMSUBADD213PHZ128rk(1(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMSUBADD213PHZ128rk(3(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMSUBADD213PHZ128rk(4(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VFMSUBADD213PHZ128rkz-----
	VFMSUBADD213PHZ128rkz(1(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMSUBADD213PHZ128rkz(3(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMSUBADD213PHZ128rkz(4(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VFMSUBADD213PHZ256r-----
	VFMSUBADD213PHZ256r(1(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMSUBADD213PHZ256r(2(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMSUBADD213PHZ256r(3(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VFMSUBADD213PHZ256rb-----
	VFMSUBADD213PHZ256rb(1(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMSUBADD213PHZ256rb(2(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMSUBADD213PHZ256rb(3(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VFMSUBADD213PHZ256rbk-----
	VFMSUBADD213PHZ256rbk(1(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMSUBADD213PHZ256rbk(3(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMSUBADD213PHZ256rbk(4(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VFMSUBADD213PHZ256rbkz-----
	VFMSUBADD213PHZ256rbkz(1(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMSUBADD213PHZ256rbkz(3(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMSUBADD213PHZ256rbkz(4(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VFMSUBADD213PHZ256rk-----
	VFMSUBADD213PHZ256rk(1(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMSUBADD213PHZ256rk(3(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMSUBADD213PHZ256rk(4(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VFMSUBADD213PHZ256rkz-----
	VFMSUBADD213PHZ256rkz(1(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMSUBADD213PHZ256rkz(3(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMSUBADD213PHZ256rkz(4(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VFMSUBADD213PHZr-----
	VFMSUBADD213PHZr(1(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMSUBADD213PHZr(2(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMSUBADD213PHZr(3(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VFMSUBADD213PHZrb-----
	VFMSUBADD213PHZrb(1(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMSUBADD213PHZrb(2(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMSUBADD213PHZrb(3(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VFMSUBADD213PHZrbk-----
	VFMSUBADD213PHZrbk(1(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMSUBADD213PHZrbk(3(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMSUBADD213PHZrbk(4(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VFMSUBADD213PHZrbkz-----
	VFMSUBADD213PHZrbkz(1(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMSUBADD213PHZrbkz(3(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMSUBADD213PHZrbkz(4(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VFMSUBADD213PHZrk-----
	VFMSUBADD213PHZrk(1(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMSUBADD213PHZrk(3(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMSUBADD213PHZrk(4(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VFMSUBADD213PHZrkz-----
	VFMSUBADD213PHZrkz(1(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMSUBADD213PHZrkz(3(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMSUBADD213PHZrkz(4(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VFMSUBADD213PSYr-----
	VFMSUBADD213PSYr(1(Class<VR256>) -> 0(Class<VR256>))  [4.03;4.03]
		 Successful, latency: 4.03
	VFMSUBADD213PSYr(2(Class<VR256>) -> 0(Class<VR256>))  [4.04;4.04]
		 Successful, latency: 4.04
	VFMSUBADD213PSYr(3(Class<VR256>) -> 0(Class<VR256>))  [4.05;4.05]
		 Successful, latency: 4.05

-----VFMSUBADD213PSZ128r-----
	VFMSUBADD213PSZ128r(1(Class<VR128X>) -> 0(Class<VR128X>))  [4.06;4.06]
		 Successful, latency: 4.06
	VFMSUBADD213PSZ128r(2(Class<VR128X>) -> 0(Class<VR128X>))  [4.03;4.03]
		 Successful, latency: 4.03
	VFMSUBADD213PSZ128r(3(Class<VR128X>) -> 0(Class<VR128X>))  [4.05;4.05]
		 Successful, latency: 4.05

-----VFMSUBADD213PSZ128rk-----
	VFMSUBADD213PSZ128rk(1(Class<VR128X>) -> 0(Class<VR128X>))  [4.05;4.05]
		 Successful, latency: 4.05
	VFMSUBADD213PSZ128rk(3(Class<VR128X>) -> 0(Class<VR128X>))  [4.03;4.03]
		 Successful, latency: 4.03
	VFMSUBADD213PSZ128rk(4(Class<VR128X>) -> 0(Class<VR128X>))  [4.04;4.04]
		 Successful, latency: 4.04

-----VFMSUBADD213PSZ128rkz-----
	VFMSUBADD213PSZ128rkz(1(Class<VR128X>) -> 0(Class<VR128X>))  [4.03;4.03]
		 Successful, latency: 4.03
	VFMSUBADD213PSZ128rkz(3(Class<VR128X>) -> 0(Class<VR128X>))  [4.07;4.07]
		 Successful, latency: 4.07
	VFMSUBADD213PSZ128rkz(4(Class<VR128X>) -> 0(Class<VR128X>))  [4.04;4.04]
		 Successful, latency: 4.04

-----VFMSUBADD213PSZ256r-----
	VFMSUBADD213PSZ256r(1(Class<VR256X>) -> 0(Class<VR256X>))  [4.04;4.04]
		 Successful, latency: 4.04
	VFMSUBADD213PSZ256r(2(Class<VR256X>) -> 0(Class<VR256X>))  [4.05;4.05]
		 Successful, latency: 4.05
	VFMSUBADD213PSZ256r(3(Class<VR256X>) -> 0(Class<VR256X>))  [4.04;4.04]
		 Successful, latency: 4.04

-----VFMSUBADD213PSZ256rb-----
	VFMSUBADD213PSZ256rb(1(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMSUBADD213PSZ256rb(2(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMSUBADD213PSZ256rb(3(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VFMSUBADD213PSZ256rbk-----
	VFMSUBADD213PSZ256rbk(1(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMSUBADD213PSZ256rbk(3(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMSUBADD213PSZ256rbk(4(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VFMSUBADD213PSZ256rbkz-----
	VFMSUBADD213PSZ256rbkz(1(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMSUBADD213PSZ256rbkz(3(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMSUBADD213PSZ256rbkz(4(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VFMSUBADD213PSZ256rk-----
	VFMSUBADD213PSZ256rk(1(Class<VR256X>) -> 0(Class<VR256X>))  [4.03;4.03]
		 Successful, latency: 4.03
	VFMSUBADD213PSZ256rk(3(Class<VR256X>) -> 0(Class<VR256X>))  [4.05;4.05]
		 Successful, latency: 4.05
	VFMSUBADD213PSZ256rk(4(Class<VR256X>) -> 0(Class<VR256X>))  [4.04;4.04]
		 Successful, latency: 4.04

-----VFMSUBADD213PSZ256rkz-----
	VFMSUBADD213PSZ256rkz(1(Class<VR256X>) -> 0(Class<VR256X>))  [4.03;4.03]
		 Successful, latency: 4.03
	VFMSUBADD213PSZ256rkz(3(Class<VR256X>) -> 0(Class<VR256X>))  [4.04;4.04]
		 Successful, latency: 4.04
	VFMSUBADD213PSZ256rkz(4(Class<VR256X>) -> 0(Class<VR256X>))  [4.03;4.03]
		 Successful, latency: 4.03

-----VFMSUBADD213PSZr-----
	VFMSUBADD213PSZr(1(Class<VR512>) -> 0(Class<VR512>))  [4.03;4.03]
		 Successful, latency: 4.03
	VFMSUBADD213PSZr(2(Class<VR512>) -> 0(Class<VR512>))  [4.02;4.02]
		 Successful, latency: 4.02
	VFMSUBADD213PSZr(3(Class<VR512>) -> 0(Class<VR512>))  [4.04;4.04]
		 Successful, latency: 4.04

-----VFMSUBADD213PSZrb-----
	VFMSUBADD213PSZrb(1(Class<VR512>) -> 0(Class<VR512>))  [4.03;4.03]
		 Successful, latency: 4.03
	VFMSUBADD213PSZrb(2(Class<VR512>) -> 0(Class<VR512>))  [4.04;4.04]
		 Successful, latency: 4.04
	VFMSUBADD213PSZrb(3(Class<VR512>) -> 0(Class<VR512>))  [4.05;4.05]
		 Successful, latency: 4.05

-----VFMSUBADD213PSZrbk-----
	VFMSUBADD213PSZrbk(1(Class<VR512>) -> 0(Class<VR512>))  [4.03;4.03]
		 Successful, latency: 4.03
	VFMSUBADD213PSZrbk(3(Class<VR512>) -> 0(Class<VR512>))  [4.07;4.07]
		 Successful, latency: 4.07
	VFMSUBADD213PSZrbk(4(Class<VR512>) -> 0(Class<VR512>))  [4.07;4.07]
		 Successful, latency: 4.07

-----VFMSUBADD213PSZrbkz-----
	VFMSUBADD213PSZrbkz(1(Class<VR512>) -> 0(Class<VR512>))  [4.06;4.06]
		 Successful, latency: 4.06
	VFMSUBADD213PSZrbkz(3(Class<VR512>) -> 0(Class<VR512>))  [4.04;4.04]
		 Successful, latency: 4.04
	VFMSUBADD213PSZrbkz(4(Class<VR512>) -> 0(Class<VR512>))  [4.03;4.03]
		 Successful, latency: 4.03

-----VFMSUBADD213PSZrk-----
	VFMSUBADD213PSZrk(1(Class<VR512>) -> 0(Class<VR512>))  [4.04;4.04]
		 Successful, latency: 4.04
	VFMSUBADD213PSZrk(3(Class<VR512>) -> 0(Class<VR512>))  [4.04;4.04]
		 Successful, latency: 4.04
	VFMSUBADD213PSZrk(4(Class<VR512>) -> 0(Class<VR512>))  [4.05;4.05]
		 Successful, latency: 4.05

-----VFMSUBADD213PSZrkz-----
	VFMSUBADD213PSZrkz(1(Class<VR512>) -> 0(Class<VR512>))  [4.05;4.05]
		 Successful, latency: 4.05
	VFMSUBADD213PSZrkz(3(Class<VR512>) -> 0(Class<VR512>))  [4.04;4.04]
		 Successful, latency: 4.04
	VFMSUBADD213PSZrkz(4(Class<VR512>) -> 0(Class<VR512>))  [4.05;4.05]
		 Successful, latency: 4.05

-----VFMSUBADD213PSr-----
	VFMSUBADD213PSr(1(Class<VR128>) -> 0(Class<VR128>))  [4.04;4.04]
		 Successful, latency: 4.04
	VFMSUBADD213PSr(2(Class<VR128>) -> 0(Class<VR128>))  [4.05;4.05]
		 Successful, latency: 4.05
	VFMSUBADD213PSr(3(Class<VR128>) -> 0(Class<VR128>))  [4.06;4.06]
		 Successful, latency: 4.06

-----VFMSUBADD231PDYr-----
	VFMSUBADD231PDYr(1(Class<VR256>) -> 0(Class<VR256>))  [4.04;4.04]
		 Successful, latency: 4.04
	VFMSUBADD231PDYr(2(Class<VR256>) -> 0(Class<VR256>))  [4.04;4.04]
		 Successful, latency: 4.04
	VFMSUBADD231PDYr(3(Class<VR256>) -> 0(Class<VR256>))  [4.04;4.04]
		 Successful, latency: 4.04

-----VFMSUBADD231PDZ128r-----
	VFMSUBADD231PDZ128r(1(Class<VR128X>) -> 0(Class<VR128X>))  [4.05;4.05]
		 Successful, latency: 4.05
	VFMSUBADD231PDZ128r(2(Class<VR128X>) -> 0(Class<VR128X>))  [4.07;4.07]
		 Successful, latency: 4.07
	VFMSUBADD231PDZ128r(3(Class<VR128X>) -> 0(Class<VR128X>))  [4.04;4.04]
		 Successful, latency: 4.04

-----VFMSUBADD231PDZ128rk-----
	VFMSUBADD231PDZ128rk(1(Class<VR128X>) -> 0(Class<VR128X>))  [4.05;4.05]
		 Successful, latency: 4.05
	VFMSUBADD231PDZ128rk(3(Class<VR128X>) -> 0(Class<VR128X>))  [4.04;4.04]
		 Successful, latency: 4.04
	VFMSUBADD231PDZ128rk(4(Class<VR128X>) -> 0(Class<VR128X>))  [4.05;4.05]
		 Successful, latency: 4.05

-----VFMSUBADD231PDZ128rkz-----
	VFMSUBADD231PDZ128rkz(1(Class<VR128X>) -> 0(Class<VR128X>))  [4.03;4.03]
		 Successful, latency: 4.03
	VFMSUBADD231PDZ128rkz(3(Class<VR128X>) -> 0(Class<VR128X>))  [4.05;4.05]
		 Successful, latency: 4.05
	VFMSUBADD231PDZ128rkz(4(Class<VR128X>) -> 0(Class<VR128X>))  [4.04;4.04]
		 Successful, latency: 4.04

-----VFMSUBADD231PDZ256r-----
	VFMSUBADD231PDZ256r(1(Class<VR256X>) -> 0(Class<VR256X>))  [4.04;4.04]
		 Successful, latency: 4.04
	VFMSUBADD231PDZ256r(2(Class<VR256X>) -> 0(Class<VR256X>))  [4.04;4.04]
		 Successful, latency: 4.04
	VFMSUBADD231PDZ256r(3(Class<VR256X>) -> 0(Class<VR256X>))  [4.02;4.02]
		 Successful, latency: 4.02

-----VFMSUBADD231PDZ256rb-----
	VFMSUBADD231PDZ256rb(1(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMSUBADD231PDZ256rb(2(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMSUBADD231PDZ256rb(3(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VFMSUBADD231PDZ256rbk-----
	VFMSUBADD231PDZ256rbk(1(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMSUBADD231PDZ256rbk(3(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMSUBADD231PDZ256rbk(4(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VFMSUBADD231PDZ256rbkz-----
	VFMSUBADD231PDZ256rbkz(1(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMSUBADD231PDZ256rbkz(3(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMSUBADD231PDZ256rbkz(4(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VFMSUBADD231PDZ256rk-----
	VFMSUBADD231PDZ256rk(1(Class<VR256X>) -> 0(Class<VR256X>))  [4.04;4.04]
		 Successful, latency: 4.04
	VFMSUBADD231PDZ256rk(3(Class<VR256X>) -> 0(Class<VR256X>))  [4.04;4.04]
		 Successful, latency: 4.04
	VFMSUBADD231PDZ256rk(4(Class<VR256X>) -> 0(Class<VR256X>))  [4.04;4.04]
		 Successful, latency: 4.04

-----VFMSUBADD231PDZ256rkz-----
	VFMSUBADD231PDZ256rkz(1(Class<VR256X>) -> 0(Class<VR256X>))  [4.05;4.05]
		 Successful, latency: 4.05
	VFMSUBADD231PDZ256rkz(3(Class<VR256X>) -> 0(Class<VR256X>))  [4.03;4.03]
		 Successful, latency: 4.03
	VFMSUBADD231PDZ256rkz(4(Class<VR256X>) -> 0(Class<VR256X>))  [4.04;4.04]
		 Successful, latency: 4.04

-----VFMSUBADD231PDZr-----
	VFMSUBADD231PDZr(1(Class<VR512>) -> 0(Class<VR512>))  [4.04;4.04]
		 Successful, latency: 4.04
	VFMSUBADD231PDZr(2(Class<VR512>) -> 0(Class<VR512>))  [4.04;4.04]
		 Successful, latency: 4.04
	VFMSUBADD231PDZr(3(Class<VR512>) -> 0(Class<VR512>))  [4.07;4.07]
		 Successful, latency: 4.07

-----VFMSUBADD231PDZrb-----
	VFMSUBADD231PDZrb(1(Class<VR512>) -> 0(Class<VR512>))  [4.04;4.04]
		 Successful, latency: 4.04
	VFMSUBADD231PDZrb(2(Class<VR512>) -> 0(Class<VR512>))  [4.04;4.04]
		 Successful, latency: 4.04
	VFMSUBADD231PDZrb(3(Class<VR512>) -> 0(Class<VR512>))  [4.05;4.05]
		 Successful, latency: 4.05

-----VFMSUBADD231PDZrbk-----
	VFMSUBADD231PDZrbk(1(Class<VR512>) -> 0(Class<VR512>))  [4.02;4.02]
		 Successful, latency: 4.02
	VFMSUBADD231PDZrbk(3(Class<VR512>) -> 0(Class<VR512>))  [4.06;4.06]
		 Successful, latency: 4.06
	VFMSUBADD231PDZrbk(4(Class<VR512>) -> 0(Class<VR512>))  [4.05;4.05]
		 Successful, latency: 4.05

-----VFMSUBADD231PDZrbkz-----
	VFMSUBADD231PDZrbkz(1(Class<VR512>) -> 0(Class<VR512>))  [4.06;4.06]
		 Successful, latency: 4.06
	VFMSUBADD231PDZrbkz(3(Class<VR512>) -> 0(Class<VR512>))  [4.04;4.04]
		 Successful, latency: 4.04
	VFMSUBADD231PDZrbkz(4(Class<VR512>) -> 0(Class<VR512>))  [4.03;4.03]
		 Successful, latency: 4.03

-----VFMSUBADD231PDZrk-----
	VFMSUBADD231PDZrk(1(Class<VR512>) -> 0(Class<VR512>))  [4.04;4.04]
		 Successful, latency: 4.04
	VFMSUBADD231PDZrk(3(Class<VR512>) -> 0(Class<VR512>))  [4.04;4.04]
		 Successful, latency: 4.04
	VFMSUBADD231PDZrk(4(Class<VR512>) -> 0(Class<VR512>))  [4.03;4.03]
		 Successful, latency: 4.03

-----VFMSUBADD231PDZrkz-----
	VFMSUBADD231PDZrkz(1(Class<VR512>) -> 0(Class<VR512>))  [4.04;4.04]
		 Successful, latency: 4.04
	VFMSUBADD231PDZrkz(3(Class<VR512>) -> 0(Class<VR512>))  [4.04;4.04]
		 Successful, latency: 4.04
	VFMSUBADD231PDZrkz(4(Class<VR512>) -> 0(Class<VR512>))  [4.03;4.03]
		 Successful, latency: 4.03

-----VFMSUBADD231PDr-----
	VFMSUBADD231PDr(1(Class<VR128>) -> 0(Class<VR128>))  [4.03;4.03]
		 Successful, latency: 4.03
	VFMSUBADD231PDr(2(Class<VR128>) -> 0(Class<VR128>))  [4.05;4.05]
		 Successful, latency: 4.05
	VFMSUBADD231PDr(3(Class<VR128>) -> 0(Class<VR128>))  [4.04;4.04]
		 Successful, latency: 4.04

-----VFMSUBADD231PHZ128r-----
	VFMSUBADD231PHZ128r(1(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMSUBADD231PHZ128r(2(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMSUBADD231PHZ128r(3(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VFMSUBADD231PHZ128rk-----
	VFMSUBADD231PHZ128rk(1(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMSUBADD231PHZ128rk(3(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMSUBADD231PHZ128rk(4(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VFMSUBADD231PHZ128rkz-----
	VFMSUBADD231PHZ128rkz(1(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMSUBADD231PHZ128rkz(3(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMSUBADD231PHZ128rkz(4(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VFMSUBADD231PHZ256r-----
	VFMSUBADD231PHZ256r(1(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMSUBADD231PHZ256r(2(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMSUBADD231PHZ256r(3(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VFMSUBADD231PHZ256rb-----
	VFMSUBADD231PHZ256rb(1(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMSUBADD231PHZ256rb(2(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMSUBADD231PHZ256rb(3(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VFMSUBADD231PHZ256rbk-----
	VFMSUBADD231PHZ256rbk(1(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMSUBADD231PHZ256rbk(3(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMSUBADD231PHZ256rbk(4(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VFMSUBADD231PHZ256rbkz-----
	VFMSUBADD231PHZ256rbkz(1(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMSUBADD231PHZ256rbkz(3(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMSUBADD231PHZ256rbkz(4(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VFMSUBADD231PHZ256rk-----
	VFMSUBADD231PHZ256rk(1(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMSUBADD231PHZ256rk(3(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMSUBADD231PHZ256rk(4(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VFMSUBADD231PHZ256rkz-----
	VFMSUBADD231PHZ256rkz(1(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMSUBADD231PHZ256rkz(3(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMSUBADD231PHZ256rkz(4(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VFMSUBADD231PHZr-----
	VFMSUBADD231PHZr(1(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMSUBADD231PHZr(2(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMSUBADD231PHZr(3(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VFMSUBADD231PHZrb-----
	VFMSUBADD231PHZrb(1(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMSUBADD231PHZrb(2(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMSUBADD231PHZrb(3(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VFMSUBADD231PHZrbk-----
	VFMSUBADD231PHZrbk(1(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMSUBADD231PHZrbk(3(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMSUBADD231PHZrbk(4(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VFMSUBADD231PHZrbkz-----
	VFMSUBADD231PHZrbkz(1(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMSUBADD231PHZrbkz(3(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMSUBADD231PHZrbkz(4(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VFMSUBADD231PHZrk-----
	VFMSUBADD231PHZrk(1(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMSUBADD231PHZrk(3(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMSUBADD231PHZrk(4(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VFMSUBADD231PHZrkz-----
	VFMSUBADD231PHZrkz(1(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMSUBADD231PHZrkz(3(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMSUBADD231PHZrkz(4(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VFMSUBADD231PSYr-----
	VFMSUBADD231PSYr(1(Class<VR256>) -> 0(Class<VR256>))  [4.03;4.03]
		 Successful, latency: 4.03
	VFMSUBADD231PSYr(2(Class<VR256>) -> 0(Class<VR256>))  [4.03;4.03]
		 Successful, latency: 4.03
	VFMSUBADD231PSYr(3(Class<VR256>) -> 0(Class<VR256>))  [4.03;4.03]
		 Successful, latency: 4.03

-----VFMSUBADD231PSZ128r-----
	VFMSUBADD231PSZ128r(1(Class<VR128X>) -> 0(Class<VR128X>))  [4.03;4.03]
		 Successful, latency: 4.03
	VFMSUBADD231PSZ128r(2(Class<VR128X>) -> 0(Class<VR128X>))  [4.06;4.06]
		 Successful, latency: 4.06
	VFMSUBADD231PSZ128r(3(Class<VR128X>) -> 0(Class<VR128X>))  [4.03;4.03]
		 Successful, latency: 4.03

-----VFMSUBADD231PSZ128rk-----
	VFMSUBADD231PSZ128rk(1(Class<VR128X>) -> 0(Class<VR128X>))  [4.04;4.04]
		 Successful, latency: 4.04
	VFMSUBADD231PSZ128rk(3(Class<VR128X>) -> 0(Class<VR128X>))  [4.03;4.03]
		 Successful, latency: 4.03
	VFMSUBADD231PSZ128rk(4(Class<VR128X>) -> 0(Class<VR128X>))  [4.05;4.05]
		 Successful, latency: 4.05

-----VFMSUBADD231PSZ128rkz-----
	VFMSUBADD231PSZ128rkz(1(Class<VR128X>) -> 0(Class<VR128X>))  [4.05;4.05]
		 Successful, latency: 4.05
	VFMSUBADD231PSZ128rkz(3(Class<VR128X>) -> 0(Class<VR128X>))  [4.04;4.04]
		 Successful, latency: 4.04
	VFMSUBADD231PSZ128rkz(4(Class<VR128X>) -> 0(Class<VR128X>))  [4.03;4.03]
		 Successful, latency: 4.03

-----VFMSUBADD231PSZ256r-----
	VFMSUBADD231PSZ256r(1(Class<VR256X>) -> 0(Class<VR256X>))  [4.02;4.02]
		 Successful, latency: 4.02
	VFMSUBADD231PSZ256r(2(Class<VR256X>) -> 0(Class<VR256X>))  [4.06;4.06]
		 Successful, latency: 4.06
	VFMSUBADD231PSZ256r(3(Class<VR256X>) -> 0(Class<VR256X>))  [4.02;4.02]
		 Successful, latency: 4.02

-----VFMSUBADD231PSZ256rb-----
	VFMSUBADD231PSZ256rb(1(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMSUBADD231PSZ256rb(2(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMSUBADD231PSZ256rb(3(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VFMSUBADD231PSZ256rbk-----
	VFMSUBADD231PSZ256rbk(1(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMSUBADD231PSZ256rbk(3(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMSUBADD231PSZ256rbk(4(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VFMSUBADD231PSZ256rbkz-----
	VFMSUBADD231PSZ256rbkz(1(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMSUBADD231PSZ256rbkz(3(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMSUBADD231PSZ256rbkz(4(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VFMSUBADD231PSZ256rk-----
	VFMSUBADD231PSZ256rk(1(Class<VR256X>) -> 0(Class<VR256X>))  [4.04;4.04]
		 Successful, latency: 4.04
	VFMSUBADD231PSZ256rk(3(Class<VR256X>) -> 0(Class<VR256X>))  [4.02;4.02]
		 Successful, latency: 4.02
	VFMSUBADD231PSZ256rk(4(Class<VR256X>) -> 0(Class<VR256X>))  [4.04;4.04]
		 Successful, latency: 4.04

-----VFMSUBADD231PSZ256rkz-----
	VFMSUBADD231PSZ256rkz(1(Class<VR256X>) -> 0(Class<VR256X>))  [4.04;4.04]
		 Successful, latency: 4.04
	VFMSUBADD231PSZ256rkz(3(Class<VR256X>) -> 0(Class<VR256X>))  [4.03;4.03]
		 Successful, latency: 4.03
	VFMSUBADD231PSZ256rkz(4(Class<VR256X>) -> 0(Class<VR256X>))  [4.03;4.03]
		 Successful, latency: 4.03

-----VFMSUBADD231PSZr-----
	VFMSUBADD231PSZr(1(Class<VR512>) -> 0(Class<VR512>))  [4.02;4.02]
		 Successful, latency: 4.02
	VFMSUBADD231PSZr(2(Class<VR512>) -> 0(Class<VR512>))  [4.03;4.03]
		 Successful, latency: 4.03
	VFMSUBADD231PSZr(3(Class<VR512>) -> 0(Class<VR512>))  [4.03;4.03]
		 Successful, latency: 4.03

-----VFMSUBADD231PSZrb-----
	VFMSUBADD231PSZrb(1(Class<VR512>) -> 0(Class<VR512>))  [4.03;4.03]
		 Successful, latency: 4.03
	VFMSUBADD231PSZrb(2(Class<VR512>) -> 0(Class<VR512>))  [4.03;4.03]
		 Successful, latency: 4.03
	VFMSUBADD231PSZrb(3(Class<VR512>) -> 0(Class<VR512>))  [4.04;4.04]
		 Successful, latency: 4.04

-----VFMSUBADD231PSZrbk-----
	VFMSUBADD231PSZrbk(1(Class<VR512>) -> 0(Class<VR512>))  [4.03;4.03]
		 Successful, latency: 4.03
	VFMSUBADD231PSZrbk(3(Class<VR512>) -> 0(Class<VR512>))  [4.04;4.04]
		 Successful, latency: 4.04
	VFMSUBADD231PSZrbk(4(Class<VR512>) -> 0(Class<VR512>))  [4.01;4.01]
		 Successful, latency: 4.01

-----VFMSUBADD231PSZrbkz-----
	VFMSUBADD231PSZrbkz(1(Class<VR512>) -> 0(Class<VR512>))  [4.04;4.04]
		 Successful, latency: 4.04
	VFMSUBADD231PSZrbkz(3(Class<VR512>) -> 0(Class<VR512>))  [4.04;4.04]
		 Successful, latency: 4.04
	VFMSUBADD231PSZrbkz(4(Class<VR512>) -> 0(Class<VR512>))  [4.03;4.03]
		 Successful, latency: 4.03

-----VFMSUBADD231PSZrk-----
	VFMSUBADD231PSZrk(1(Class<VR512>) -> 0(Class<VR512>))  [4.07;4.07]
		 Successful, latency: 4.07
	VFMSUBADD231PSZrk(3(Class<VR512>) -> 0(Class<VR512>))  [4.03;4.03]
		 Successful, latency: 4.03
	VFMSUBADD231PSZrk(4(Class<VR512>) -> 0(Class<VR512>))  [4.03;4.03]
		 Successful, latency: 4.03

-----VFMSUBADD231PSZrkz-----
	VFMSUBADD231PSZrkz(1(Class<VR512>) -> 0(Class<VR512>))  [4.05;4.05]
		 Successful, latency: 4.05
	VFMSUBADD231PSZrkz(3(Class<VR512>) -> 0(Class<VR512>))  [4.03;4.03]
		 Successful, latency: 4.03
	VFMSUBADD231PSZrkz(4(Class<VR512>) -> 0(Class<VR512>))  [4.03;4.03]
		 Successful, latency: 4.03

-----VFMSUBADD231PSr-----
	VFMSUBADD231PSr(1(Class<VR128>) -> 0(Class<VR128>))  [4.04;4.04]
		 Successful, latency: 4.04
	VFMSUBADD231PSr(2(Class<VR128>) -> 0(Class<VR128>))  [4.03;4.03]
		 Successful, latency: 4.03
	VFMSUBADD231PSr(3(Class<VR128>) -> 0(Class<VR128>))  [4.03;4.03]
		 Successful, latency: 4.03

-----VFMSUBADDPD4Yrr-----
	VFMSUBADDPD4Yrr(1(Class<VR256>) -> 0(Class<VR256>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMSUBADDPD4Yrr(2(Class<VR256>) -> 0(Class<VR256>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMSUBADDPD4Yrr(3(Class<VR256>) -> 0(Class<VR256>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VFMSUBADDPD4Yrr_REV-----
	VFMSUBADDPD4Yrr_REV(1(Class<VR256>) -> 0(Class<VR256>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMSUBADDPD4Yrr_REV(2(Class<VR256>) -> 0(Class<VR256>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMSUBADDPD4Yrr_REV(3(Class<VR256>) -> 0(Class<VR256>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VFMSUBADDPD4rr-----
	VFMSUBADDPD4rr(1(Class<VR128>) -> 0(Class<VR128>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMSUBADDPD4rr(2(Class<VR128>) -> 0(Class<VR128>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMSUBADDPD4rr(3(Class<VR128>) -> 0(Class<VR128>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VFMSUBADDPD4rr_REV-----
	VFMSUBADDPD4rr_REV(1(Class<VR128>) -> 0(Class<VR128>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMSUBADDPD4rr_REV(2(Class<VR128>) -> 0(Class<VR128>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMSUBADDPD4rr_REV(3(Class<VR128>) -> 0(Class<VR128>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VFMSUBADDPS4Yrr-----
	VFMSUBADDPS4Yrr(1(Class<VR256>) -> 0(Class<VR256>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMSUBADDPS4Yrr(2(Class<VR256>) -> 0(Class<VR256>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMSUBADDPS4Yrr(3(Class<VR256>) -> 0(Class<VR256>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VFMSUBADDPS4Yrr_REV-----
	VFMSUBADDPS4Yrr_REV(1(Class<VR256>) -> 0(Class<VR256>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMSUBADDPS4Yrr_REV(2(Class<VR256>) -> 0(Class<VR256>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMSUBADDPS4Yrr_REV(3(Class<VR256>) -> 0(Class<VR256>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VFMSUBADDPS4rr-----
	VFMSUBADDPS4rr(1(Class<VR128>) -> 0(Class<VR128>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMSUBADDPS4rr(2(Class<VR128>) -> 0(Class<VR128>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMSUBADDPS4rr(3(Class<VR128>) -> 0(Class<VR128>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VFMSUBADDPS4rr_REV-----
	VFMSUBADDPS4rr_REV(1(Class<VR128>) -> 0(Class<VR128>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMSUBADDPS4rr_REV(2(Class<VR128>) -> 0(Class<VR128>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMSUBADDPS4rr_REV(3(Class<VR128>) -> 0(Class<VR128>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VFMSUBPD4Yrr-----
	VFMSUBPD4Yrr(1(Class<VR256>) -> 0(Class<VR256>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMSUBPD4Yrr(2(Class<VR256>) -> 0(Class<VR256>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMSUBPD4Yrr(3(Class<VR256>) -> 0(Class<VR256>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VFMSUBPD4Yrr_REV-----
	VFMSUBPD4Yrr_REV(1(Class<VR256>) -> 0(Class<VR256>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMSUBPD4Yrr_REV(2(Class<VR256>) -> 0(Class<VR256>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMSUBPD4Yrr_REV(3(Class<VR256>) -> 0(Class<VR256>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VFMSUBPD4rr-----
	VFMSUBPD4rr(1(Class<VR128>) -> 0(Class<VR128>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMSUBPD4rr(2(Class<VR128>) -> 0(Class<VR128>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMSUBPD4rr(3(Class<VR128>) -> 0(Class<VR128>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VFMSUBPD4rr_REV-----
	VFMSUBPD4rr_REV(1(Class<VR128>) -> 0(Class<VR128>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMSUBPD4rr_REV(2(Class<VR128>) -> 0(Class<VR128>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMSUBPD4rr_REV(3(Class<VR128>) -> 0(Class<VR128>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VFMSUBPS4Yrr-----
	VFMSUBPS4Yrr(1(Class<VR256>) -> 0(Class<VR256>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMSUBPS4Yrr(2(Class<VR256>) -> 0(Class<VR256>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMSUBPS4Yrr(3(Class<VR256>) -> 0(Class<VR256>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VFMSUBPS4Yrr_REV-----
	VFMSUBPS4Yrr_REV(1(Class<VR256>) -> 0(Class<VR256>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMSUBPS4Yrr_REV(2(Class<VR256>) -> 0(Class<VR256>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMSUBPS4Yrr_REV(3(Class<VR256>) -> 0(Class<VR256>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VFMSUBPS4rr-----
	VFMSUBPS4rr(1(Class<VR128>) -> 0(Class<VR128>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMSUBPS4rr(2(Class<VR128>) -> 0(Class<VR128>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMSUBPS4rr(3(Class<VR128>) -> 0(Class<VR128>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VFMSUBPS4rr_REV-----
	VFMSUBPS4rr_REV(1(Class<VR128>) -> 0(Class<VR128>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMSUBPS4rr_REV(2(Class<VR128>) -> 0(Class<VR128>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMSUBPS4rr_REV(3(Class<VR128>) -> 0(Class<VR128>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VFMSUBSD4rr-----
	VFMSUBSD4rr(1(Class<FR64>) -> 0(Class<FR64>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMSUBSD4rr(2(Class<FR64>) -> 0(Class<FR64>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMSUBSD4rr(3(Class<FR64>) -> 0(Class<FR64>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VFMSUBSD4rr_Int-----
	VFMSUBSD4rr_Int(1(Class<VR128>) -> 0(Class<VR128>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMSUBSD4rr_Int(2(Class<VR128>) -> 0(Class<VR128>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMSUBSD4rr_Int(3(Class<VR128>) -> 0(Class<VR128>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VFMSUBSD4rr_Int_REV-----
	VFMSUBSD4rr_Int_REV(1(Class<VR128>) -> 0(Class<VR128>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMSUBSD4rr_Int_REV(2(Class<VR128>) -> 0(Class<VR128>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMSUBSD4rr_Int_REV(3(Class<VR128>) -> 0(Class<VR128>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VFMSUBSD4rr_REV-----
	VFMSUBSD4rr_REV(1(Class<FR64>) -> 0(Class<FR64>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMSUBSD4rr_REV(2(Class<FR64>) -> 0(Class<FR64>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMSUBSD4rr_REV(3(Class<FR64>) -> 0(Class<FR64>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VFMSUBSS4rr-----
	VFMSUBSS4rr(1(Class<FR32>) -> 0(Class<FR32>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMSUBSS4rr(2(Class<FR32>) -> 0(Class<FR32>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMSUBSS4rr(3(Class<FR32>) -> 0(Class<FR32>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VFMSUBSS4rr_Int-----
	VFMSUBSS4rr_Int(1(Class<VR128>) -> 0(Class<VR128>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMSUBSS4rr_Int(2(Class<VR128>) -> 0(Class<VR128>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMSUBSS4rr_Int(3(Class<VR128>) -> 0(Class<VR128>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VFMSUBSS4rr_Int_REV-----
	VFMSUBSS4rr_Int_REV(1(Class<VR128>) -> 0(Class<VR128>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMSUBSS4rr_Int_REV(2(Class<VR128>) -> 0(Class<VR128>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMSUBSS4rr_Int_REV(3(Class<VR128>) -> 0(Class<VR128>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VFMSUBSS4rr_REV-----
	VFMSUBSS4rr_REV(1(Class<FR32>) -> 0(Class<FR32>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMSUBSS4rr_REV(2(Class<FR32>) -> 0(Class<FR32>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMSUBSS4rr_REV(3(Class<FR32>) -> 0(Class<FR32>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VFMULCPHZ128rr-----
	VFMULCPHZ128rr(1(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMULCPHZ128rr(2(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VFMULCPHZ128rrk-----
	VFMULCPHZ128rrk(1(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMULCPHZ128rrk(3(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMULCPHZ128rrk(4(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VFMULCPHZ128rrkz-----
	VFMULCPHZ128rrkz(2(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMULCPHZ128rrkz(3(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VFMULCPHZ256rr-----
	VFMULCPHZ256rr(1(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMULCPHZ256rr(2(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VFMULCPHZ256rrb-----
	VFMULCPHZ256rrb(1(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMULCPHZ256rrb(2(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VFMULCPHZ256rrbk-----
	VFMULCPHZ256rrbk(1(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMULCPHZ256rrbk(3(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMULCPHZ256rrbk(4(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VFMULCPHZ256rrbkz-----
	VFMULCPHZ256rrbkz(2(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMULCPHZ256rrbkz(3(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VFMULCPHZ256rrk-----
	VFMULCPHZ256rrk(1(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMULCPHZ256rrk(3(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMULCPHZ256rrk(4(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VFMULCPHZ256rrkz-----
	VFMULCPHZ256rrkz(2(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMULCPHZ256rrkz(3(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VFMULCPHZrr-----
	VFMULCPHZrr(1(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMULCPHZrr(2(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VFMULCPHZrrb-----
	VFMULCPHZrrb(1(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMULCPHZrrb(2(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VFMULCPHZrrbk-----
	VFMULCPHZrrbk(1(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMULCPHZrrbk(3(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMULCPHZrrbk(4(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VFMULCPHZrrbkz-----
	VFMULCPHZrrbkz(2(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMULCPHZrrbkz(3(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VFMULCPHZrrk-----
	VFMULCPHZrrk(1(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMULCPHZrrk(3(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMULCPHZrrk(4(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VFMULCPHZrrkz-----
	VFMULCPHZrrkz(2(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMULCPHZrrkz(3(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VFMULCSHZrr-----
	VFMULCSHZrr(1(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMULCSHZrr(2(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VFMULCSHZrrb-----
	VFMULCSHZrrb(1(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMULCSHZrrb(2(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VFMULCSHZrrbk-----
	VFMULCSHZrrbk(1(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMULCSHZrrbk(3(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMULCSHZrrbk(4(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VFMULCSHZrrbkz-----
	VFMULCSHZrrbkz(2(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMULCSHZrrbkz(3(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VFMULCSHZrrk-----
	VFMULCSHZrrk(1(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMULCSHZrrk(3(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMULCSHZrrk(4(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VFMULCSHZrrkz-----
	VFMULCSHZrrkz(2(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFMULCSHZrrkz(3(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VFNMADD132BF16Z128r-----
	VFNMADD132BF16Z128r(1(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFNMADD132BF16Z128r(2(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFNMADD132BF16Z128r(3(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VFNMADD132BF16Z128rk-----
	VFNMADD132BF16Z128rk(1(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFNMADD132BF16Z128rk(3(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFNMADD132BF16Z128rk(4(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VFNMADD132BF16Z128rkz-----
	VFNMADD132BF16Z128rkz(1(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFNMADD132BF16Z128rkz(3(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFNMADD132BF16Z128rkz(4(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VFNMADD132BF16Z256r-----
	VFNMADD132BF16Z256r(1(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFNMADD132BF16Z256r(2(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFNMADD132BF16Z256r(3(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VFNMADD132BF16Z256rk-----
	VFNMADD132BF16Z256rk(1(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFNMADD132BF16Z256rk(3(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFNMADD132BF16Z256rk(4(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VFNMADD132BF16Z256rkz-----
	VFNMADD132BF16Z256rkz(1(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFNMADD132BF16Z256rkz(3(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFNMADD132BF16Z256rkz(4(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VFNMADD132BF16Zr-----
	VFNMADD132BF16Zr(1(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFNMADD132BF16Zr(2(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFNMADD132BF16Zr(3(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VFNMADD132BF16Zrk-----
	VFNMADD132BF16Zrk(1(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFNMADD132BF16Zrk(3(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFNMADD132BF16Zrk(4(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VFNMADD132BF16Zrkz-----
	VFNMADD132BF16Zrkz(1(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFNMADD132BF16Zrkz(3(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFNMADD132BF16Zrkz(4(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VFNMADD132PDYr-----
	VFNMADD132PDYr(1(Class<VR256>) -> 0(Class<VR256>))  [4.05;4.05]
		 Successful, latency: 4.05
	VFNMADD132PDYr(2(Class<VR256>) -> 0(Class<VR256>))  [4.04;4.04]
		 Successful, latency: 4.04
	VFNMADD132PDYr(3(Class<VR256>) -> 0(Class<VR256>))  [4.03;4.03]
		 Successful, latency: 4.03

-----VFNMADD132PDZ128r-----
	VFNMADD132PDZ128r(1(Class<VR128X>) -> 0(Class<VR128X>))  [4.03;4.03]
		 Successful, latency: 4.03
	VFNMADD132PDZ128r(2(Class<VR128X>) -> 0(Class<VR128X>))  [4.03;4.03]
		 Successful, latency: 4.03
	VFNMADD132PDZ128r(3(Class<VR128X>) -> 0(Class<VR128X>))  [4.03;4.03]
		 Successful, latency: 4.03

-----VFNMADD132PDZ128rk-----
	VFNMADD132PDZ128rk(1(Class<VR128X>) -> 0(Class<VR128X>))  [4.04;4.04]
		 Successful, latency: 4.04
	VFNMADD132PDZ128rk(3(Class<VR128X>) -> 0(Class<VR128X>))  [4.03;4.03]
		 Successful, latency: 4.03
	VFNMADD132PDZ128rk(4(Class<VR128X>) -> 0(Class<VR128X>))  [4.04;4.04]
		 Successful, latency: 4.04

-----VFNMADD132PDZ128rkz-----
	VFNMADD132PDZ128rkz(1(Class<VR128X>) -> 0(Class<VR128X>))  [4.05;4.05]
		 Successful, latency: 4.05
	VFNMADD132PDZ128rkz(3(Class<VR128X>) -> 0(Class<VR128X>))  [4.07;4.07]
		 Successful, latency: 4.07
	VFNMADD132PDZ128rkz(4(Class<VR128X>) -> 0(Class<VR128X>))  [4.03;4.03]
		 Successful, latency: 4.03

-----VFNMADD132PDZ256r-----
	VFNMADD132PDZ256r(1(Class<VR256X>) -> 0(Class<VR256X>))  [4.04;4.04]
		 Successful, latency: 4.04
	VFNMADD132PDZ256r(2(Class<VR256X>) -> 0(Class<VR256X>))  [4.02;4.02]
		 Successful, latency: 4.02
	VFNMADD132PDZ256r(3(Class<VR256X>) -> 0(Class<VR256X>))  [4.04;4.04]
		 Successful, latency: 4.04

-----VFNMADD132PDZ256rb-----
	VFNMADD132PDZ256rb(1(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFNMADD132PDZ256rb(2(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFNMADD132PDZ256rb(3(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VFNMADD132PDZ256rbk-----
	VFNMADD132PDZ256rbk(1(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFNMADD132PDZ256rbk(3(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFNMADD132PDZ256rbk(4(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VFNMADD132PDZ256rbkz-----
	VFNMADD132PDZ256rbkz(1(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFNMADD132PDZ256rbkz(3(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFNMADD132PDZ256rbkz(4(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VFNMADD132PDZ256rk-----
	VFNMADD132PDZ256rk(1(Class<VR256X>) -> 0(Class<VR256X>))  [4.05;4.05]
		 Successful, latency: 4.05
	VFNMADD132PDZ256rk(3(Class<VR256X>) -> 0(Class<VR256X>))  [4.03;4.03]
		 Successful, latency: 4.03
	VFNMADD132PDZ256rk(4(Class<VR256X>) -> 0(Class<VR256X>))  [4.04;4.04]
		 Successful, latency: 4.04

-----VFNMADD132PDZ256rkz-----
	VFNMADD132PDZ256rkz(1(Class<VR256X>) -> 0(Class<VR256X>))  [4.07;4.07]
		 Successful, latency: 4.07
	VFNMADD132PDZ256rkz(3(Class<VR256X>) -> 0(Class<VR256X>))  [4.03;4.03]
		 Successful, latency: 4.03
	VFNMADD132PDZ256rkz(4(Class<VR256X>) -> 0(Class<VR256X>))  [4.08;4.08]
		 Successful, latency: 4.08

-----VFNMADD132PDZr-----
	VFNMADD132PDZr(1(Class<VR512>) -> 0(Class<VR512>))  [4.06;4.06]
		 Successful, latency: 4.06
	VFNMADD132PDZr(2(Class<VR512>) -> 0(Class<VR512>))  [4.04;4.04]
		 Successful, latency: 4.04
	VFNMADD132PDZr(3(Class<VR512>) -> 0(Class<VR512>))  [4.05;4.05]
		 Successful, latency: 4.05

-----VFNMADD132PDZrb-----
	VFNMADD132PDZrb(1(Class<VR512>) -> 0(Class<VR512>))  [4.07;4.07]
		 Successful, latency: 4.07
	VFNMADD132PDZrb(2(Class<VR512>) -> 0(Class<VR512>))  [4.04;4.04]
		 Successful, latency: 4.04
	VFNMADD132PDZrb(3(Class<VR512>) -> 0(Class<VR512>))  [4.06;4.06]
		 Successful, latency: 4.06

-----VFNMADD132PDZrbk-----
	VFNMADD132PDZrbk(1(Class<VR512>) -> 0(Class<VR512>))  [4.08;4.08]
		 Successful, latency: 4.08
	VFNMADD132PDZrbk(3(Class<VR512>) -> 0(Class<VR512>))  [4.04;4.04]
		 Successful, latency: 4.04
	VFNMADD132PDZrbk(4(Class<VR512>) -> 0(Class<VR512>))  [4.03;4.03]
		 Successful, latency: 4.03

-----VFNMADD132PDZrbkz-----
	VFNMADD132PDZrbkz(1(Class<VR512>) -> 0(Class<VR512>))  [4.03;4.03]
		 Successful, latency: 4.03
	VFNMADD132PDZrbkz(3(Class<VR512>) -> 0(Class<VR512>))  [4.04;4.04]
		 Successful, latency: 4.04
	VFNMADD132PDZrbkz(4(Class<VR512>) -> 0(Class<VR512>))  [4.06;4.06]
		 Successful, latency: 4.06

-----VFNMADD132PDZrk-----
	VFNMADD132PDZrk(1(Class<VR512>) -> 0(Class<VR512>))  [4.05;4.05]
		 Successful, latency: 4.05
	VFNMADD132PDZrk(3(Class<VR512>) -> 0(Class<VR512>))  [4.02;4.02]
		 Successful, latency: 4.02
	VFNMADD132PDZrk(4(Class<VR512>) -> 0(Class<VR512>))  [4.04;4.04]
		 Successful, latency: 4.04

-----VFNMADD132PDZrkz-----
	VFNMADD132PDZrkz(1(Class<VR512>) -> 0(Class<VR512>))  [4.03;4.03]
		 Successful, latency: 4.03
	VFNMADD132PDZrkz(3(Class<VR512>) -> 0(Class<VR512>))  [4.04;4.04]
		 Successful, latency: 4.04
	VFNMADD132PDZrkz(4(Class<VR512>) -> 0(Class<VR512>))  [4.03;4.03]
		 Successful, latency: 4.03

-----VFNMADD132PDr-----
	VFNMADD132PDr(1(Class<VR128>) -> 0(Class<VR128>))  [4.04;4.04]
		 Successful, latency: 4.04
	VFNMADD132PDr(2(Class<VR128>) -> 0(Class<VR128>))  [4.03;4.03]
		 Successful, latency: 4.03
	VFNMADD132PDr(3(Class<VR128>) -> 0(Class<VR128>))  [4.04;4.04]
		 Successful, latency: 4.04

-----VFNMADD132PHZ128r-----
	VFNMADD132PHZ128r(1(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFNMADD132PHZ128r(2(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFNMADD132PHZ128r(3(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VFNMADD132PHZ128rk-----
	VFNMADD132PHZ128rk(1(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFNMADD132PHZ128rk(3(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFNMADD132PHZ128rk(4(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VFNMADD132PHZ128rkz-----
	VFNMADD132PHZ128rkz(1(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFNMADD132PHZ128rkz(3(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFNMADD132PHZ128rkz(4(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VFNMADD132PHZ256r-----
	VFNMADD132PHZ256r(1(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFNMADD132PHZ256r(2(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFNMADD132PHZ256r(3(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VFNMADD132PHZ256rb-----
	VFNMADD132PHZ256rb(1(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFNMADD132PHZ256rb(2(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFNMADD132PHZ256rb(3(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VFNMADD132PHZ256rbk-----
	VFNMADD132PHZ256rbk(1(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFNMADD132PHZ256rbk(3(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFNMADD132PHZ256rbk(4(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VFNMADD132PHZ256rbkz-----
	VFNMADD132PHZ256rbkz(1(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFNMADD132PHZ256rbkz(3(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFNMADD132PHZ256rbkz(4(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VFNMADD132PHZ256rk-----
	VFNMADD132PHZ256rk(1(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFNMADD132PHZ256rk(3(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFNMADD132PHZ256rk(4(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VFNMADD132PHZ256rkz-----
	VFNMADD132PHZ256rkz(1(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFNMADD132PHZ256rkz(3(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFNMADD132PHZ256rkz(4(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VFNMADD132PHZr-----
	VFNMADD132PHZr(1(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFNMADD132PHZr(2(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFNMADD132PHZr(3(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VFNMADD132PHZrb-----
	VFNMADD132PHZrb(1(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFNMADD132PHZrb(2(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFNMADD132PHZrb(3(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VFNMADD132PHZrbk-----
	VFNMADD132PHZrbk(1(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFNMADD132PHZrbk(3(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFNMADD132PHZrbk(4(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VFNMADD132PHZrbkz-----
	VFNMADD132PHZrbkz(1(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFNMADD132PHZrbkz(3(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFNMADD132PHZrbkz(4(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VFNMADD132PHZrk-----
	VFNMADD132PHZrk(1(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFNMADD132PHZrk(3(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFNMADD132PHZrk(4(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VFNMADD132PHZrkz-----
	VFNMADD132PHZrkz(1(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFNMADD132PHZrkz(3(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFNMADD132PHZrkz(4(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VFNMADD132PSYr-----
	VFNMADD132PSYr(1(Class<VR256>) -> 0(Class<VR256>))  [4.04;4.04]
		 Successful, latency: 4.04
	VFNMADD132PSYr(2(Class<VR256>) -> 0(Class<VR256>))  [4.04;4.04]
		 Successful, latency: 4.04
	VFNMADD132PSYr(3(Class<VR256>) -> 0(Class<VR256>))  [4.04;4.04]
		 Successful, latency: 4.04

-----VFNMADD132PSZ128r-----
	VFNMADD132PSZ128r(1(Class<VR128X>) -> 0(Class<VR128X>))  [4.06;4.06]
		 Successful, latency: 4.06
	VFNMADD132PSZ128r(2(Class<VR128X>) -> 0(Class<VR128X>))  [4.03;4.03]
		 Successful, latency: 4.03
	VFNMADD132PSZ128r(3(Class<VR128X>) -> 0(Class<VR128X>))  [4.04;4.04]
		 Successful, latency: 4.04

-----VFNMADD132PSZ128rk-----
	VFNMADD132PSZ128rk(1(Class<VR128X>) -> 0(Class<VR128X>))  [4.04;4.04]
		 Successful, latency: 4.04
	VFNMADD132PSZ128rk(3(Class<VR128X>) -> 0(Class<VR128X>))  [4.04;4.04]
		 Successful, latency: 4.04
	VFNMADD132PSZ128rk(4(Class<VR128X>) -> 0(Class<VR128X>))  [4.04;4.04]
		 Successful, latency: 4.04

-----VFNMADD132PSZ128rkz-----
	VFNMADD132PSZ128rkz(1(Class<VR128X>) -> 0(Class<VR128X>))  [4.03;4.03]
		 Successful, latency: 4.03
	VFNMADD132PSZ128rkz(3(Class<VR128X>) -> 0(Class<VR128X>))  [4.02;4.02]
		 Successful, latency: 4.02
	VFNMADD132PSZ128rkz(4(Class<VR128X>) -> 0(Class<VR128X>))  [4.05;4.05]
		 Successful, latency: 4.05

-----VFNMADD132PSZ256r-----
	VFNMADD132PSZ256r(1(Class<VR256X>) -> 0(Class<VR256X>))  [4.03;4.03]
		 Successful, latency: 4.03
	VFNMADD132PSZ256r(2(Class<VR256X>) -> 0(Class<VR256X>))  [4.06;4.06]
		 Successful, latency: 4.06
	VFNMADD132PSZ256r(3(Class<VR256X>) -> 0(Class<VR256X>))  [4.03;4.03]
		 Successful, latency: 4.03

-----VFNMADD132PSZ256rb-----
	VFNMADD132PSZ256rb(1(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFNMADD132PSZ256rb(2(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFNMADD132PSZ256rb(3(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VFNMADD132PSZ256rbk-----
	VFNMADD132PSZ256rbk(1(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFNMADD132PSZ256rbk(3(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFNMADD132PSZ256rbk(4(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VFNMADD132PSZ256rbkz-----
	VFNMADD132PSZ256rbkz(1(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFNMADD132PSZ256rbkz(3(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFNMADD132PSZ256rbkz(4(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VFNMADD132PSZ256rk-----
	VFNMADD132PSZ256rk(1(Class<VR256X>) -> 0(Class<VR256X>))  [4.03;4.03]
		 Successful, latency: 4.03
	VFNMADD132PSZ256rk(3(Class<VR256X>) -> 0(Class<VR256X>))  [4.03;4.03]
		 Successful, latency: 4.03
	VFNMADD132PSZ256rk(4(Class<VR256X>) -> 0(Class<VR256X>))  [4.05;4.05]
		 Successful, latency: 4.05

-----VFNMADD132PSZ256rkz-----
	VFNMADD132PSZ256rkz(1(Class<VR256X>) -> 0(Class<VR256X>))  [4.04;4.04]
		 Successful, latency: 4.04
	VFNMADD132PSZ256rkz(3(Class<VR256X>) -> 0(Class<VR256X>))  [4.04;4.04]
		 Successful, latency: 4.04
	VFNMADD132PSZ256rkz(4(Class<VR256X>) -> 0(Class<VR256X>))  [4.03;4.03]
		 Successful, latency: 4.03

-----VFNMADD132PSZr-----
	VFNMADD132PSZr(1(Class<VR512>) -> 0(Class<VR512>))  [4.03;4.03]
		 Successful, latency: 4.03
	VFNMADD132PSZr(2(Class<VR512>) -> 0(Class<VR512>))  [4.04;4.04]
		 Successful, latency: 4.04
	VFNMADD132PSZr(3(Class<VR512>) -> 0(Class<VR512>))  [4.03;4.03]
		 Successful, latency: 4.03

-----VFNMADD132PSZrb-----
	VFNMADD132PSZrb(1(Class<VR512>) -> 0(Class<VR512>))  [4.03;4.03]
		 Successful, latency: 4.03
	VFNMADD132PSZrb(2(Class<VR512>) -> 0(Class<VR512>))  [4.03;4.03]
		 Successful, latency: 4.03
	VFNMADD132PSZrb(3(Class<VR512>) -> 0(Class<VR512>))  [4.04;4.04]
		 Successful, latency: 4.04

-----VFNMADD132PSZrbk-----
	VFNMADD132PSZrbk(1(Class<VR512>) -> 0(Class<VR512>))  [4.04;4.04]
		 Successful, latency: 4.04
	VFNMADD132PSZrbk(3(Class<VR512>) -> 0(Class<VR512>))  [4.03;4.03]
		 Successful, latency: 4.03
	VFNMADD132PSZrbk(4(Class<VR512>) -> 0(Class<VR512>))  [4.03;4.03]
		 Successful, latency: 4.03

-----VFNMADD132PSZrbkz-----
	VFNMADD132PSZrbkz(1(Class<VR512>) -> 0(Class<VR512>))  [4.04;4.04]
		 Successful, latency: 4.04
	VFNMADD132PSZrbkz(3(Class<VR512>) -> 0(Class<VR512>))  [4.03;4.03]
		 Successful, latency: 4.03
	VFNMADD132PSZrbkz(4(Class<VR512>) -> 0(Class<VR512>))  [4.04;4.04]
		 Successful, latency: 4.04

-----VFNMADD132PSZrk-----
	VFNMADD132PSZrk(1(Class<VR512>) -> 0(Class<VR512>))  [4.03;4.03]
		 Successful, latency: 4.03
	VFNMADD132PSZrk(3(Class<VR512>) -> 0(Class<VR512>))  [4.08;4.08]
		 Successful, latency: 4.08
	VFNMADD132PSZrk(4(Class<VR512>) -> 0(Class<VR512>))  [4.04;4.04]
		 Successful, latency: 4.04

-----VFNMADD132PSZrkz-----
	VFNMADD132PSZrkz(1(Class<VR512>) -> 0(Class<VR512>))  [4.03;4.03]
		 Successful, latency: 4.03
	VFNMADD132PSZrkz(3(Class<VR512>) -> 0(Class<VR512>))  [4.02;4.02]
		 Successful, latency: 4.02
	VFNMADD132PSZrkz(4(Class<VR512>) -> 0(Class<VR512>))  [4.02;4.02]
		 Successful, latency: 4.02

-----VFNMADD132PSr-----
	VFNMADD132PSr(1(Class<VR128>) -> 0(Class<VR128>))  [4.04;4.04]
		 Successful, latency: 4.04
	VFNMADD132PSr(2(Class<VR128>) -> 0(Class<VR128>))  [4.04;4.04]
		 Successful, latency: 4.04
	VFNMADD132PSr(3(Class<VR128>) -> 0(Class<VR128>))  [4.04;4.04]
		 Successful, latency: 4.04

-----VFNMADD132SDZr-----
	VFNMADD132SDZr(1(Class<FR64X>) -> 0(Class<FR64X>))  [4.03;4.03]
		 Successful, latency: 4.03
	VFNMADD132SDZr(2(Class<FR64X>) -> 0(Class<FR64X>))  [4.09;4.09]
		 Successful, latency: 4.09
	VFNMADD132SDZr(3(Class<FR64X>) -> 0(Class<FR64X>))  [4.07;4.07]
		 Successful, latency: 4.07

-----VFNMADD132SDZr_Int-----
	VFNMADD132SDZr_Int(1(Class<VR128X>) -> 0(Class<VR128X>))  [4.04;4.04]
		 Successful, latency: 4.04
	VFNMADD132SDZr_Int(2(Class<VR128X>) -> 0(Class<VR128X>))  [4.05;4.05]
		 Successful, latency: 4.05
	VFNMADD132SDZr_Int(3(Class<VR128X>) -> 0(Class<VR128X>))  [4.05;4.05]
		 Successful, latency: 4.05

-----VFNMADD132SDZrb-----
	VFNMADD132SDZrb(1(Class<FR64X>) -> 0(Class<FR64X>))  [4.06;4.06]
		 Successful, latency: 4.06
	VFNMADD132SDZrb(2(Class<FR64X>) -> 0(Class<FR64X>))  [4.04;4.04]
		 Successful, latency: 4.04
	VFNMADD132SDZrb(3(Class<FR64X>) -> 0(Class<FR64X>))  [4.04;4.04]
		 Successful, latency: 4.04

-----VFNMADD132SDZrb_Int-----
	VFNMADD132SDZrb_Int(1(Class<VR128X>) -> 0(Class<VR128X>))  [4.02;4.02]
		 Successful, latency: 4.02
	VFNMADD132SDZrb_Int(2(Class<VR128X>) -> 0(Class<VR128X>))  [4.06;4.06]
		 Successful, latency: 4.06
	VFNMADD132SDZrb_Int(3(Class<VR128X>) -> 0(Class<VR128X>))  [4.04;4.04]
		 Successful, latency: 4.04

-----VFNMADD132SDZrbk_Int-----
	VFNMADD132SDZrbk_Int(1(Class<VR128X>) -> 0(Class<VR128X>))  [4.03;4.03]
		 Successful, latency: 4.03
	VFNMADD132SDZrbk_Int(3(Class<VR128X>) -> 0(Class<VR128X>))  [4.04;4.04]
		 Successful, latency: 4.04
	VFNMADD132SDZrbk_Int(4(Class<VR128X>) -> 0(Class<VR128X>))  [4.04;4.04]
		 Successful, latency: 4.04

-----VFNMADD132SDZrbkz_Int-----
	VFNMADD132SDZrbkz_Int(1(Class<VR128X>) -> 0(Class<VR128X>))  [4.06;4.06]
		 Successful, latency: 4.06
	VFNMADD132SDZrbkz_Int(3(Class<VR128X>) -> 0(Class<VR128X>))  [4.04;4.04]
		 Successful, latency: 4.04
	VFNMADD132SDZrbkz_Int(4(Class<VR128X>) -> 0(Class<VR128X>))  [4.07;4.07]
		 Successful, latency: 4.07

-----VFNMADD132SDZrk_Int-----
	VFNMADD132SDZrk_Int(1(Class<VR128X>) -> 0(Class<VR128X>))  [4.06;4.06]
		 Successful, latency: 4.06
	VFNMADD132SDZrk_Int(3(Class<VR128X>) -> 0(Class<VR128X>))  [4.05;4.05]
		 Successful, latency: 4.05
	VFNMADD132SDZrk_Int(4(Class<VR128X>) -> 0(Class<VR128X>))  [4.04;4.04]
		 Successful, latency: 4.04

-----VFNMADD132SDZrkz_Int-----
	VFNMADD132SDZrkz_Int(1(Class<VR128X>) -> 0(Class<VR128X>))  [4.05;4.05]
		 Successful, latency: 4.05
	VFNMADD132SDZrkz_Int(3(Class<VR128X>) -> 0(Class<VR128X>))  [4.03;4.03]
		 Successful, latency: 4.03
	VFNMADD132SDZrkz_Int(4(Class<VR128X>) -> 0(Class<VR128X>))  [4.02;4.02]
		 Successful, latency: 4.02

-----VFNMADD132SDr-----
	VFNMADD132SDr(1(Class<FR64>) -> 0(Class<FR64>))  [4.04;4.04]
		 Successful, latency: 4.04
	VFNMADD132SDr(2(Class<FR64>) -> 0(Class<FR64>))  [4.05;4.05]
		 Successful, latency: 4.05
	VFNMADD132SDr(3(Class<FR64>) -> 0(Class<FR64>))  [4.04;4.04]
		 Successful, latency: 4.04

-----VFNMADD132SDr_Int-----
	VFNMADD132SDr_Int(1(Class<VR128>) -> 0(Class<VR128>))  [4.03;4.03]
		 Successful, latency: 4.03
	VFNMADD132SDr_Int(2(Class<VR128>) -> 0(Class<VR128>))  [4.06;4.06]
		 Successful, latency: 4.06
	VFNMADD132SDr_Int(3(Class<VR128>) -> 0(Class<VR128>))  [4.04;4.04]
		 Successful, latency: 4.04

-----VFNMADD132SHZr-----
	VFNMADD132SHZr(1(Class<FR16X>) -> 0(Class<FR16X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFNMADD132SHZr(2(Class<FR16X>) -> 0(Class<FR16X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFNMADD132SHZr(3(Class<FR16X>) -> 0(Class<FR16X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VFNMADD132SHZr_Int-----
	VFNMADD132SHZr_Int(1(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFNMADD132SHZr_Int(2(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFNMADD132SHZr_Int(3(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VFNMADD132SHZrb-----
	VFNMADD132SHZrb(1(Class<FR16X>) -> 0(Class<FR16X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFNMADD132SHZrb(2(Class<FR16X>) -> 0(Class<FR16X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFNMADD132SHZrb(3(Class<FR16X>) -> 0(Class<FR16X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VFNMADD132SHZrb_Int-----
	VFNMADD132SHZrb_Int(1(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFNMADD132SHZrb_Int(2(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFNMADD132SHZrb_Int(3(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VFNMADD132SHZrbk_Int-----
	VFNMADD132SHZrbk_Int(1(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFNMADD132SHZrbk_Int(3(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFNMADD132SHZrbk_Int(4(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VFNMADD132SHZrbkz_Int-----
	VFNMADD132SHZrbkz_Int(1(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFNMADD132SHZrbkz_Int(3(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFNMADD132SHZrbkz_Int(4(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VFNMADD132SHZrk_Int-----
	VFNMADD132SHZrk_Int(1(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFNMADD132SHZrk_Int(3(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFNMADD132SHZrk_Int(4(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VFNMADD132SHZrkz_Int-----
	VFNMADD132SHZrkz_Int(1(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFNMADD132SHZrkz_Int(3(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFNMADD132SHZrkz_Int(4(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VFNMADD132SSZr-----
	VFNMADD132SSZr(1(Class<FR32X>) -> 0(Class<FR32X>))  [4.04;4.04]
		 Successful, latency: 4.04
	VFNMADD132SSZr(2(Class<FR32X>) -> 0(Class<FR32X>))  [4.03;4.03]
		 Successful, latency: 4.03
	VFNMADD132SSZr(3(Class<FR32X>) -> 0(Class<FR32X>))  [4.06;4.06]
		 Successful, latency: 4.06

-----VFNMADD132SSZr_Int-----
	VFNMADD132SSZr_Int(1(Class<VR128X>) -> 0(Class<VR128X>))  [4.03;4.03]
		 Successful, latency: 4.03
	VFNMADD132SSZr_Int(2(Class<VR128X>) -> 0(Class<VR128X>))  [4.03;4.03]
		 Successful, latency: 4.03
	VFNMADD132SSZr_Int(3(Class<VR128X>) -> 0(Class<VR128X>))  [4.03;4.03]
		 Successful, latency: 4.03

-----VFNMADD132SSZrb-----
	VFNMADD132SSZrb(1(Class<FR32X>) -> 0(Class<FR32X>))  [4.06;4.06]
		 Successful, latency: 4.06
	VFNMADD132SSZrb(2(Class<FR32X>) -> 0(Class<FR32X>))  [4.05;4.05]
		 Successful, latency: 4.05
	VFNMADD132SSZrb(3(Class<FR32X>) -> 0(Class<FR32X>))  [4.02;4.02]
		 Successful, latency: 4.02

-----VFNMADD132SSZrb_Int-----
	VFNMADD132SSZrb_Int(1(Class<VR128X>) -> 0(Class<VR128X>))  [4.05;4.05]
		 Successful, latency: 4.05
	VFNMADD132SSZrb_Int(2(Class<VR128X>) -> 0(Class<VR128X>))  [4.03;4.03]
		 Successful, latency: 4.03
	VFNMADD132SSZrb_Int(3(Class<VR128X>) -> 0(Class<VR128X>))  [4.05;4.05]
		 Successful, latency: 4.05

-----VFNMADD132SSZrbk_Int-----
	VFNMADD132SSZrbk_Int(1(Class<VR128X>) -> 0(Class<VR128X>))  [4.04;4.04]
		 Successful, latency: 4.04
	VFNMADD132SSZrbk_Int(3(Class<VR128X>) -> 0(Class<VR128X>))  [4.04;4.04]
		 Successful, latency: 4.04
	VFNMADD132SSZrbk_Int(4(Class<VR128X>) -> 0(Class<VR128X>))  [4.03;4.03]
		 Successful, latency: 4.03

-----VFNMADD132SSZrbkz_Int-----
	VFNMADD132SSZrbkz_Int(1(Class<VR128X>) -> 0(Class<VR128X>))  [4.02;4.02]
		 Successful, latency: 4.02
	VFNMADD132SSZrbkz_Int(3(Class<VR128X>) -> 0(Class<VR128X>))  [4.04;4.04]
		 Successful, latency: 4.04
	VFNMADD132SSZrbkz_Int(4(Class<VR128X>) -> 0(Class<VR128X>))  [4.03;4.03]
		 Successful, latency: 4.03

-----VFNMADD132SSZrk_Int-----
	VFNMADD132SSZrk_Int(1(Class<VR128X>) -> 0(Class<VR128X>))  [4.03;4.03]
		 Successful, latency: 4.03
	VFNMADD132SSZrk_Int(3(Class<VR128X>) -> 0(Class<VR128X>))  [4.07;4.07]
		 Successful, latency: 4.07
	VFNMADD132SSZrk_Int(4(Class<VR128X>) -> 0(Class<VR128X>))  [4.03;4.03]
		 Successful, latency: 4.03

-----VFNMADD132SSZrkz_Int-----
	VFNMADD132SSZrkz_Int(1(Class<VR128X>) -> 0(Class<VR128X>))  [4.03;4.03]
		 Successful, latency: 4.03
	VFNMADD132SSZrkz_Int(3(Class<VR128X>) -> 0(Class<VR128X>))  [4.03;4.03]
		 Successful, latency: 4.03
	VFNMADD132SSZrkz_Int(4(Class<VR128X>) -> 0(Class<VR128X>))  [4.03;4.03]
		 Successful, latency: 4.03

-----VFNMADD132SSr-----
	VFNMADD132SSr(1(Class<FR32>) -> 0(Class<FR32>))  [4.03;4.03]
		 Successful, latency: 4.03
	VFNMADD132SSr(2(Class<FR32>) -> 0(Class<FR32>))  [4.04;4.04]
		 Successful, latency: 4.04
	VFNMADD132SSr(3(Class<FR32>) -> 0(Class<FR32>))  [4.04;4.04]
		 Successful, latency: 4.04

-----VFNMADD132SSr_Int-----
	VFNMADD132SSr_Int(1(Class<VR128>) -> 0(Class<VR128>))  [4.05;4.05]
		 Successful, latency: 4.05
	VFNMADD132SSr_Int(2(Class<VR128>) -> 0(Class<VR128>))  [4.04;4.04]
		 Successful, latency: 4.04
	VFNMADD132SSr_Int(3(Class<VR128>) -> 0(Class<VR128>))  [4.05;4.05]
		 Successful, latency: 4.05

-----VFNMADD213BF16Z128r-----
	VFNMADD213BF16Z128r(1(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFNMADD213BF16Z128r(2(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFNMADD213BF16Z128r(3(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VFNMADD213BF16Z128rk-----
	VFNMADD213BF16Z128rk(1(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFNMADD213BF16Z128rk(3(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFNMADD213BF16Z128rk(4(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VFNMADD213BF16Z128rkz-----
	VFNMADD213BF16Z128rkz(1(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFNMADD213BF16Z128rkz(3(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFNMADD213BF16Z128rkz(4(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VFNMADD213BF16Z256r-----
	VFNMADD213BF16Z256r(1(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFNMADD213BF16Z256r(2(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFNMADD213BF16Z256r(3(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VFNMADD213BF16Z256rk-----
	VFNMADD213BF16Z256rk(1(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFNMADD213BF16Z256rk(3(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFNMADD213BF16Z256rk(4(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VFNMADD213BF16Z256rkz-----
	VFNMADD213BF16Z256rkz(1(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFNMADD213BF16Z256rkz(3(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFNMADD213BF16Z256rkz(4(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VFNMADD213BF16Zr-----
	VFNMADD213BF16Zr(1(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFNMADD213BF16Zr(2(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFNMADD213BF16Zr(3(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VFNMADD213BF16Zrk-----
	VFNMADD213BF16Zrk(1(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFNMADD213BF16Zrk(3(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFNMADD213BF16Zrk(4(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VFNMADD213BF16Zrkz-----
	VFNMADD213BF16Zrkz(1(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFNMADD213BF16Zrkz(3(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFNMADD213BF16Zrkz(4(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VFNMADD213PDYr-----
	VFNMADD213PDYr(1(Class<VR256>) -> 0(Class<VR256>))  [4.03;4.03]
		 Successful, latency: 4.03
	VFNMADD213PDYr(2(Class<VR256>) -> 0(Class<VR256>))  [4.04;4.04]
		 Successful, latency: 4.04
	VFNMADD213PDYr(3(Class<VR256>) -> 0(Class<VR256>))  [4.03;4.03]
		 Successful, latency: 4.03

-----VFNMADD213PDZ128r-----
	VFNMADD213PDZ128r(1(Class<VR128X>) -> 0(Class<VR128X>))  [4.03;4.03]
		 Successful, latency: 4.03
	VFNMADD213PDZ128r(2(Class<VR128X>) -> 0(Class<VR128X>))  [4.03;4.03]
		 Successful, latency: 4.03
	VFNMADD213PDZ128r(3(Class<VR128X>) -> 0(Class<VR128X>))  [4.04;4.04]
		 Successful, latency: 4.04

-----VFNMADD213PDZ128rk-----
	VFNMADD213PDZ128rk(1(Class<VR128X>) -> 0(Class<VR128X>))  [4.04;4.04]
		 Successful, latency: 4.04
	VFNMADD213PDZ128rk(3(Class<VR128X>) -> 0(Class<VR128X>))  [4.03;4.03]
		 Successful, latency: 4.03
	VFNMADD213PDZ128rk(4(Class<VR128X>) -> 0(Class<VR128X>))  [4.04;4.04]
		 Successful, latency: 4.04

-----VFNMADD213PDZ128rkz-----
	VFNMADD213PDZ128rkz(1(Class<VR128X>) -> 0(Class<VR128X>))  [4.03;4.03]
		 Successful, latency: 4.03
	VFNMADD213PDZ128rkz(3(Class<VR128X>) -> 0(Class<VR128X>))  [4.03;4.03]
		 Successful, latency: 4.03
	VFNMADD213PDZ128rkz(4(Class<VR128X>) -> 0(Class<VR128X>))  [4.05;4.05]
		 Successful, latency: 4.05

-----VFNMADD213PDZ256r-----
	VFNMADD213PDZ256r(1(Class<VR256X>) -> 0(Class<VR256X>))  [4.03;4.03]
		 Successful, latency: 4.03
	VFNMADD213PDZ256r(2(Class<VR256X>) -> 0(Class<VR256X>))  [4.03;4.03]
		 Successful, latency: 4.03
	VFNMADD213PDZ256r(3(Class<VR256X>) -> 0(Class<VR256X>))  [4.03;4.03]
		 Successful, latency: 4.03

-----VFNMADD213PDZ256rb-----
	VFNMADD213PDZ256rb(1(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFNMADD213PDZ256rb(2(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFNMADD213PDZ256rb(3(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VFNMADD213PDZ256rbk-----
	VFNMADD213PDZ256rbk(1(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFNMADD213PDZ256rbk(3(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFNMADD213PDZ256rbk(4(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VFNMADD213PDZ256rbkz-----
	VFNMADD213PDZ256rbkz(1(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFNMADD213PDZ256rbkz(3(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFNMADD213PDZ256rbkz(4(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VFNMADD213PDZ256rk-----
	VFNMADD213PDZ256rk(1(Class<VR256X>) -> 0(Class<VR256X>))  [4.08;4.08]
		 Successful, latency: 4.08
	VFNMADD213PDZ256rk(3(Class<VR256X>) -> 0(Class<VR256X>))  [4.03;4.03]
		 Successful, latency: 4.03
	VFNMADD213PDZ256rk(4(Class<VR256X>) -> 0(Class<VR256X>))  [4.03;4.03]
		 Successful, latency: 4.03

-----VFNMADD213PDZ256rkz-----
	VFNMADD213PDZ256rkz(1(Class<VR256X>) -> 0(Class<VR256X>))  [4.06;4.06]
		 Successful, latency: 4.06
	VFNMADD213PDZ256rkz(3(Class<VR256X>) -> 0(Class<VR256X>))  [4.03;4.03]
		 Successful, latency: 4.03
	VFNMADD213PDZ256rkz(4(Class<VR256X>) -> 0(Class<VR256X>))  [4.02;4.02]
		 Successful, latency: 4.02

-----VFNMADD213PDZr-----
	VFNMADD213PDZr(1(Class<VR512>) -> 0(Class<VR512>))  [4.07;4.07]
		 Successful, latency: 4.07
	VFNMADD213PDZr(2(Class<VR512>) -> 0(Class<VR512>))  [4.04;4.04]
		 Successful, latency: 4.04
	VFNMADD213PDZr(3(Class<VR512>) -> 0(Class<VR512>))  [4.04;4.04]
		 Successful, latency: 4.04

-----VFNMADD213PDZrb-----
	VFNMADD213PDZrb(1(Class<VR512>) -> 0(Class<VR512>))  [4.04;4.04]
		 Successful, latency: 4.04
	VFNMADD213PDZrb(2(Class<VR512>) -> 0(Class<VR512>))  [4.04;4.04]
		 Successful, latency: 4.04
	VFNMADD213PDZrb(3(Class<VR512>) -> 0(Class<VR512>))  [4.02;4.02]
		 Successful, latency: 4.02

-----VFNMADD213PDZrbk-----
	VFNMADD213PDZrbk(1(Class<VR512>) -> 0(Class<VR512>))  [4.03;4.03]
		 Successful, latency: 4.03
	VFNMADD213PDZrbk(3(Class<VR512>) -> 0(Class<VR512>))  [4.04;4.04]
		 Successful, latency: 4.04
	VFNMADD213PDZrbk(4(Class<VR512>) -> 0(Class<VR512>))  [4.03;4.03]
		 Successful, latency: 4.03

-----VFNMADD213PDZrbkz-----
	VFNMADD213PDZrbkz(1(Class<VR512>) -> 0(Class<VR512>))  [4.05;4.05]
		 Successful, latency: 4.05
	VFNMADD213PDZrbkz(3(Class<VR512>) -> 0(Class<VR512>))  [4.04;4.04]
		 Successful, latency: 4.04
	VFNMADD213PDZrbkz(4(Class<VR512>) -> 0(Class<VR512>))  [4.04;4.04]
		 Successful, latency: 4.04

-----VFNMADD213PDZrk-----
	VFNMADD213PDZrk(1(Class<VR512>) -> 0(Class<VR512>))  [4.08;4.08]
		 Successful, latency: 4.08
	VFNMADD213PDZrk(3(Class<VR512>) -> 0(Class<VR512>))  [4.04;4.04]
		 Successful, latency: 4.04
	VFNMADD213PDZrk(4(Class<VR512>) -> 0(Class<VR512>))  [4.02;4.02]
		 Successful, latency: 4.02

-----VFNMADD213PDZrkz-----
	VFNMADD213PDZrkz(1(Class<VR512>) -> 0(Class<VR512>))  [4.05;4.05]
		 Successful, latency: 4.05
	VFNMADD213PDZrkz(3(Class<VR512>) -> 0(Class<VR512>))  [4.03;4.03]
		 Successful, latency: 4.03
	VFNMADD213PDZrkz(4(Class<VR512>) -> 0(Class<VR512>))  [4.06;4.06]
		 Successful, latency: 4.06

-----VFNMADD213PDr-----
	VFNMADD213PDr(1(Class<VR128>) -> 0(Class<VR128>))  [4.03;4.03]
		 Successful, latency: 4.03
	VFNMADD213PDr(2(Class<VR128>) -> 0(Class<VR128>))  [4.03;4.03]
		 Successful, latency: 4.03
	VFNMADD213PDr(3(Class<VR128>) -> 0(Class<VR128>))  [4.03;4.03]
		 Successful, latency: 4.03

-----VFNMADD213PHZ128r-----
	VFNMADD213PHZ128r(1(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFNMADD213PHZ128r(2(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFNMADD213PHZ128r(3(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VFNMADD213PHZ128rk-----
	VFNMADD213PHZ128rk(1(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFNMADD213PHZ128rk(3(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFNMADD213PHZ128rk(4(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VFNMADD213PHZ128rkz-----
	VFNMADD213PHZ128rkz(1(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFNMADD213PHZ128rkz(3(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFNMADD213PHZ128rkz(4(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VFNMADD213PHZ256r-----
	VFNMADD213PHZ256r(1(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFNMADD213PHZ256r(2(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFNMADD213PHZ256r(3(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VFNMADD213PHZ256rb-----
	VFNMADD213PHZ256rb(1(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFNMADD213PHZ256rb(2(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFNMADD213PHZ256rb(3(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VFNMADD213PHZ256rbk-----
	VFNMADD213PHZ256rbk(1(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFNMADD213PHZ256rbk(3(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFNMADD213PHZ256rbk(4(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VFNMADD213PHZ256rbkz-----
	VFNMADD213PHZ256rbkz(1(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFNMADD213PHZ256rbkz(3(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFNMADD213PHZ256rbkz(4(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VFNMADD213PHZ256rk-----
	VFNMADD213PHZ256rk(1(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFNMADD213PHZ256rk(3(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFNMADD213PHZ256rk(4(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VFNMADD213PHZ256rkz-----
	VFNMADD213PHZ256rkz(1(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFNMADD213PHZ256rkz(3(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFNMADD213PHZ256rkz(4(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VFNMADD213PHZr-----
	VFNMADD213PHZr(1(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFNMADD213PHZr(2(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFNMADD213PHZr(3(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VFNMADD213PHZrb-----
	VFNMADD213PHZrb(1(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFNMADD213PHZrb(2(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFNMADD213PHZrb(3(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VFNMADD213PHZrbk-----
	VFNMADD213PHZrbk(1(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFNMADD213PHZrbk(3(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFNMADD213PHZrbk(4(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VFNMADD213PHZrbkz-----
	VFNMADD213PHZrbkz(1(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFNMADD213PHZrbkz(3(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFNMADD213PHZrbkz(4(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VFNMADD213PHZrk-----
	VFNMADD213PHZrk(1(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFNMADD213PHZrk(3(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFNMADD213PHZrk(4(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VFNMADD213PHZrkz-----
	VFNMADD213PHZrkz(1(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFNMADD213PHZrkz(3(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFNMADD213PHZrkz(4(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VFNMADD213PSYr-----
	VFNMADD213PSYr(1(Class<VR256>) -> 0(Class<VR256>))  [4.03;4.03]
		 Successful, latency: 4.03
	VFNMADD213PSYr(2(Class<VR256>) -> 0(Class<VR256>))  [4.04;4.04]
		 Successful, latency: 4.04
	VFNMADD213PSYr(3(Class<VR256>) -> 0(Class<VR256>))  [4.03;4.03]
		 Successful, latency: 4.03

-----VFNMADD213PSZ128r-----
	VFNMADD213PSZ128r(1(Class<VR128X>) -> 0(Class<VR128X>))  [4.06;4.06]
		 Successful, latency: 4.06
	VFNMADD213PSZ128r(2(Class<VR128X>) -> 0(Class<VR128X>))  [4.03;4.03]
		 Successful, latency: 4.03
	VFNMADD213PSZ128r(3(Class<VR128X>) -> 0(Class<VR128X>))  [4.04;4.04]
		 Successful, latency: 4.04

-----VFNMADD213PSZ128rk-----
	VFNMADD213PSZ128rk(1(Class<VR128X>) -> 0(Class<VR128X>))  [4.03;4.03]
		 Successful, latency: 4.03
	VFNMADD213PSZ128rk(3(Class<VR128X>) -> 0(Class<VR128X>))  [4.04;4.04]
		 Successful, latency: 4.04
	VFNMADD213PSZ128rk(4(Class<VR128X>) -> 0(Class<VR128X>))  [4.04;4.04]
		 Successful, latency: 4.04

-----VFNMADD213PSZ128rkz-----
	VFNMADD213PSZ128rkz(1(Class<VR128X>) -> 0(Class<VR128X>))  [4.06;4.06]
		 Successful, latency: 4.06
	VFNMADD213PSZ128rkz(3(Class<VR128X>) -> 0(Class<VR128X>))  [4.05;4.05]
		 Successful, latency: 4.05
	VFNMADD213PSZ128rkz(4(Class<VR128X>) -> 0(Class<VR128X>))  [4.04;4.04]
		 Successful, latency: 4.04

-----VFNMADD213PSZ256r-----
	VFNMADD213PSZ256r(1(Class<VR256X>) -> 0(Class<VR256X>))  [4.03;4.03]
		 Successful, latency: 4.03
	VFNMADD213PSZ256r(2(Class<VR256X>) -> 0(Class<VR256X>))  [4.03;4.03]
		 Successful, latency: 4.03
	VFNMADD213PSZ256r(3(Class<VR256X>) -> 0(Class<VR256X>))  [4.03;4.03]
		 Successful, latency: 4.03

-----VFNMADD213PSZ256rb-----
	VFNMADD213PSZ256rb(1(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFNMADD213PSZ256rb(2(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFNMADD213PSZ256rb(3(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VFNMADD213PSZ256rbk-----
	VFNMADD213PSZ256rbk(1(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFNMADD213PSZ256rbk(3(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFNMADD213PSZ256rbk(4(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VFNMADD213PSZ256rbkz-----
	VFNMADD213PSZ256rbkz(1(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFNMADD213PSZ256rbkz(3(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFNMADD213PSZ256rbkz(4(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VFNMADD213PSZ256rk-----
	VFNMADD213PSZ256rk(1(Class<VR256X>) -> 0(Class<VR256X>))  [4.04;4.04]
		 Successful, latency: 4.04
	VFNMADD213PSZ256rk(3(Class<VR256X>) -> 0(Class<VR256X>))  [4.02;4.02]
		 Successful, latency: 4.02
	VFNMADD213PSZ256rk(4(Class<VR256X>) -> 0(Class<VR256X>))  [4.03;4.03]
		 Successful, latency: 4.03

-----VFNMADD213PSZ256rkz-----
	VFNMADD213PSZ256rkz(1(Class<VR256X>) -> 0(Class<VR256X>))  [4.03;4.03]
		 Successful, latency: 4.03
	VFNMADD213PSZ256rkz(3(Class<VR256X>) -> 0(Class<VR256X>))  [4.04;4.04]
		 Successful, latency: 4.04
	VFNMADD213PSZ256rkz(4(Class<VR256X>) -> 0(Class<VR256X>))  [4.02;4.02]
		 Successful, latency: 4.02

-----VFNMADD213PSZr-----
	VFNMADD213PSZr(1(Class<VR512>) -> 0(Class<VR512>))  [4.04;4.04]
		 Successful, latency: 4.04
	VFNMADD213PSZr(2(Class<VR512>) -> 0(Class<VR512>))  [4.05;4.05]
		 Successful, latency: 4.05
	VFNMADD213PSZr(3(Class<VR512>) -> 0(Class<VR512>))  [4.03;4.03]
		 Successful, latency: 4.03

-----VFNMADD213PSZrb-----
	VFNMADD213PSZrb(1(Class<VR512>) -> 0(Class<VR512>))  [4.04;4.04]
		 Successful, latency: 4.04
	VFNMADD213PSZrb(2(Class<VR512>) -> 0(Class<VR512>))  [4.03;4.03]
		 Successful, latency: 4.03
	VFNMADD213PSZrb(3(Class<VR512>) -> 0(Class<VR512>))  [4.07;4.07]
		 Successful, latency: 4.07

-----VFNMADD213PSZrbk-----
	VFNMADD213PSZrbk(1(Class<VR512>) -> 0(Class<VR512>))  [4.03;4.03]
		 Successful, latency: 4.03
	VFNMADD213PSZrbk(3(Class<VR512>) -> 0(Class<VR512>))  [4.04;4.04]
		 Successful, latency: 4.04
	VFNMADD213PSZrbk(4(Class<VR512>) -> 0(Class<VR512>))  [4.03;4.03]
		 Successful, latency: 4.03

-----VFNMADD213PSZrbkz-----
	VFNMADD213PSZrbkz(1(Class<VR512>) -> 0(Class<VR512>))  [4.04;4.04]
		 Successful, latency: 4.04
	VFNMADD213PSZrbkz(3(Class<VR512>) -> 0(Class<VR512>))  [4.04;4.04]
		 Successful, latency: 4.04
	VFNMADD213PSZrbkz(4(Class<VR512>) -> 0(Class<VR512>))  [4.04;4.04]
		 Successful, latency: 4.04

-----VFNMADD213PSZrk-----
	VFNMADD213PSZrk(1(Class<VR512>) -> 0(Class<VR512>))  [4.04;4.04]
		 Successful, latency: 4.04
	VFNMADD213PSZrk(3(Class<VR512>) -> 0(Class<VR512>))  [4.03;4.03]
		 Successful, latency: 4.03
	VFNMADD213PSZrk(4(Class<VR512>) -> 0(Class<VR512>))  [4.02;4.02]
		 Successful, latency: 4.02

-----VFNMADD213PSZrkz-----
	VFNMADD213PSZrkz(1(Class<VR512>) -> 0(Class<VR512>))  [4.04;4.04]
		 Successful, latency: 4.04
	VFNMADD213PSZrkz(3(Class<VR512>) -> 0(Class<VR512>))  [4.03;4.03]
		 Successful, latency: 4.03
	VFNMADD213PSZrkz(4(Class<VR512>) -> 0(Class<VR512>))  [4.04;4.04]
		 Successful, latency: 4.04

-----VFNMADD213PSr-----
	VFNMADD213PSr(1(Class<VR128>) -> 0(Class<VR128>))  [4.03;4.03]
		 Successful, latency: 4.03
	VFNMADD213PSr(2(Class<VR128>) -> 0(Class<VR128>))  [4.04;4.04]
		 Successful, latency: 4.04
	VFNMADD213PSr(3(Class<VR128>) -> 0(Class<VR128>))  [4.06;4.06]
		 Successful, latency: 4.06

-----VFNMADD213SDZr-----
	VFNMADD213SDZr(1(Class<FR64X>) -> 0(Class<FR64X>))  [4.06;4.06]
		 Successful, latency: 4.06
	VFNMADD213SDZr(2(Class<FR64X>) -> 0(Class<FR64X>))  [4.05;4.05]
		 Successful, latency: 4.05
	VFNMADD213SDZr(3(Class<FR64X>) -> 0(Class<FR64X>))  [4.04;4.04]
		 Successful, latency: 4.04

-----VFNMADD213SDZr_Int-----
	VFNMADD213SDZr_Int(1(Class<VR128X>) -> 0(Class<VR128X>))  [4.02;4.02]
		 Successful, latency: 4.02
	VFNMADD213SDZr_Int(2(Class<VR128X>) -> 0(Class<VR128X>))  [4.03;4.03]
		 Successful, latency: 4.03
	VFNMADD213SDZr_Int(3(Class<VR128X>) -> 0(Class<VR128X>))  [4.05;4.05]
		 Successful, latency: 4.05

-----VFNMADD213SDZrb-----
	VFNMADD213SDZrb(1(Class<FR64X>) -> 0(Class<FR64X>))  [4.05;4.05]
		 Successful, latency: 4.05
	VFNMADD213SDZrb(2(Class<FR64X>) -> 0(Class<FR64X>))  [4.03;4.03]
		 Successful, latency: 4.03
	VFNMADD213SDZrb(3(Class<FR64X>) -> 0(Class<FR64X>))  [4.03;4.03]
		 Successful, latency: 4.03

-----VFNMADD213SDZrb_Int-----
	VFNMADD213SDZrb_Int(1(Class<VR128X>) -> 0(Class<VR128X>))  [4.03;4.03]
		 Successful, latency: 4.03
	VFNMADD213SDZrb_Int(2(Class<VR128X>) -> 0(Class<VR128X>))  [4.04;4.04]
		 Successful, latency: 4.04
	VFNMADD213SDZrb_Int(3(Class<VR128X>) -> 0(Class<VR128X>))  [4.03;4.03]
		 Successful, latency: 4.03

-----VFNMADD213SDZrbk_Int-----
	VFNMADD213SDZrbk_Int(1(Class<VR128X>) -> 0(Class<VR128X>))  [4.03;4.03]
		 Successful, latency: 4.03
	VFNMADD213SDZrbk_Int(3(Class<VR128X>) -> 0(Class<VR128X>))  [4.05;4.05]
		 Successful, latency: 4.05
	VFNMADD213SDZrbk_Int(4(Class<VR128X>) -> 0(Class<VR128X>))  [4.03;4.03]
		 Successful, latency: 4.03

-----VFNMADD213SDZrbkz_Int-----
	VFNMADD213SDZrbkz_Int(1(Class<VR128X>) -> 0(Class<VR128X>))  [4.04;4.04]
		 Successful, latency: 4.04
	VFNMADD213SDZrbkz_Int(3(Class<VR128X>) -> 0(Class<VR128X>))  [4.04;4.04]
		 Successful, latency: 4.04
	VFNMADD213SDZrbkz_Int(4(Class<VR128X>) -> 0(Class<VR128X>))  [4.04;4.04]
		 Successful, latency: 4.04

-----VFNMADD213SDZrk_Int-----
	VFNMADD213SDZrk_Int(1(Class<VR128X>) -> 0(Class<VR128X>))  [4.04;4.04]
		 Successful, latency: 4.04
	VFNMADD213SDZrk_Int(3(Class<VR128X>) -> 0(Class<VR128X>))  [4.04;4.04]
		 Successful, latency: 4.04
	VFNMADD213SDZrk_Int(4(Class<VR128X>) -> 0(Class<VR128X>))  [4.03;4.03]
		 Successful, latency: 4.03

-----VFNMADD213SDZrkz_Int-----
	VFNMADD213SDZrkz_Int(1(Class<VR128X>) -> 0(Class<VR128X>))  [4.03;4.03]
		 Successful, latency: 4.03
	VFNMADD213SDZrkz_Int(3(Class<VR128X>) -> 0(Class<VR128X>))  [4.05;4.05]
		 Successful, latency: 4.05
	VFNMADD213SDZrkz_Int(4(Class<VR128X>) -> 0(Class<VR128X>))  [4.04;4.04]
		 Successful, latency: 4.04

-----VFNMADD213SDr-----
	VFNMADD213SDr(1(Class<FR64>) -> 0(Class<FR64>))  [4.05;4.05]
		 Successful, latency: 4.05
	VFNMADD213SDr(2(Class<FR64>) -> 0(Class<FR64>))  [4.04;4.04]
		 Successful, latency: 4.04
	VFNMADD213SDr(3(Class<FR64>) -> 0(Class<FR64>))  [4.03;4.03]
		 Successful, latency: 4.03

-----VFNMADD213SDr_Int-----
	VFNMADD213SDr_Int(1(Class<VR128>) -> 0(Class<VR128>))  [4.04;4.04]
		 Successful, latency: 4.04
	VFNMADD213SDr_Int(2(Class<VR128>) -> 0(Class<VR128>))  [4.06;4.06]
		 Successful, latency: 4.06
	VFNMADD213SDr_Int(3(Class<VR128>) -> 0(Class<VR128>))  [4.03;4.03]
		 Successful, latency: 4.03

-----VFNMADD213SHZr-----
	VFNMADD213SHZr(1(Class<FR16X>) -> 0(Class<FR16X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFNMADD213SHZr(2(Class<FR16X>) -> 0(Class<FR16X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFNMADD213SHZr(3(Class<FR16X>) -> 0(Class<FR16X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VFNMADD213SHZr_Int-----
	VFNMADD213SHZr_Int(1(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFNMADD213SHZr_Int(2(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFNMADD213SHZr_Int(3(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VFNMADD213SHZrb-----
	VFNMADD213SHZrb(1(Class<FR16X>) -> 0(Class<FR16X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFNMADD213SHZrb(2(Class<FR16X>) -> 0(Class<FR16X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFNMADD213SHZrb(3(Class<FR16X>) -> 0(Class<FR16X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VFNMADD213SHZrb_Int-----
	VFNMADD213SHZrb_Int(1(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFNMADD213SHZrb_Int(2(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFNMADD213SHZrb_Int(3(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VFNMADD213SHZrbk_Int-----
	VFNMADD213SHZrbk_Int(1(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFNMADD213SHZrbk_Int(3(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFNMADD213SHZrbk_Int(4(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VFNMADD213SHZrbkz_Int-----
	VFNMADD213SHZrbkz_Int(1(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFNMADD213SHZrbkz_Int(3(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFNMADD213SHZrbkz_Int(4(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VFNMADD213SHZrk_Int-----
	VFNMADD213SHZrk_Int(1(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFNMADD213SHZrk_Int(3(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFNMADD213SHZrk_Int(4(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VFNMADD213SHZrkz_Int-----
	VFNMADD213SHZrkz_Int(1(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFNMADD213SHZrkz_Int(3(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFNMADD213SHZrkz_Int(4(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VFNMADD213SSZr-----
	VFNMADD213SSZr(1(Class<FR32X>) -> 0(Class<FR32X>))  [4.03;4.03]
		 Successful, latency: 4.03
	VFNMADD213SSZr(2(Class<FR32X>) -> 0(Class<FR32X>))  [4.04;4.04]
		 Successful, latency: 4.04
	VFNMADD213SSZr(3(Class<FR32X>) -> 0(Class<FR32X>))  [4.06;4.06]
		 Successful, latency: 4.06

-----VFNMADD213SSZr_Int-----
	VFNMADD213SSZr_Int(1(Class<VR128X>) -> 0(Class<VR128X>))  [4.04;4.04]
		 Successful, latency: 4.04
	VFNMADD213SSZr_Int(2(Class<VR128X>) -> 0(Class<VR128X>))  [4.03;4.03]
		 Successful, latency: 4.03
	VFNMADD213SSZr_Int(3(Class<VR128X>) -> 0(Class<VR128X>))  [4.03;4.03]
		 Successful, latency: 4.03

-----VFNMADD213SSZrb-----
	VFNMADD213SSZrb(1(Class<FR32X>) -> 0(Class<FR32X>))  [4.02;4.02]
		 Successful, latency: 4.02
	VFNMADD213SSZrb(2(Class<FR32X>) -> 0(Class<FR32X>))  [4.03;4.03]
		 Successful, latency: 4.03
	VFNMADD213SSZrb(3(Class<FR32X>) -> 0(Class<FR32X>))  [4.04;4.04]
		 Successful, latency: 4.04

-----VFNMADD213SSZrb_Int-----
	VFNMADD213SSZrb_Int(1(Class<VR128X>) -> 0(Class<VR128X>))  [4.04;4.04]
		 Successful, latency: 4.04
	VFNMADD213SSZrb_Int(2(Class<VR128X>) -> 0(Class<VR128X>))  [4.04;4.04]
		 Successful, latency: 4.04
	VFNMADD213SSZrb_Int(3(Class<VR128X>) -> 0(Class<VR128X>))  [4.03;4.03]
		 Successful, latency: 4.03

-----VFNMADD213SSZrbk_Int-----
	VFNMADD213SSZrbk_Int(1(Class<VR128X>) -> 0(Class<VR128X>))  [4.03;4.03]
		 Successful, latency: 4.03
	VFNMADD213SSZrbk_Int(3(Class<VR128X>) -> 0(Class<VR128X>))  [4.05;4.05]
		 Successful, latency: 4.05
	VFNMADD213SSZrbk_Int(4(Class<VR128X>) -> 0(Class<VR128X>))  [4.03;4.03]
		 Successful, latency: 4.03

-----VFNMADD213SSZrbkz_Int-----
	VFNMADD213SSZrbkz_Int(1(Class<VR128X>) -> 0(Class<VR128X>))  [4.04;4.04]
		 Successful, latency: 4.04
	VFNMADD213SSZrbkz_Int(3(Class<VR128X>) -> 0(Class<VR128X>))  [4.04;4.04]
		 Successful, latency: 4.04
	VFNMADD213SSZrbkz_Int(4(Class<VR128X>) -> 0(Class<VR128X>))  [4.04;4.04]
		 Successful, latency: 4.04

-----VFNMADD213SSZrk_Int-----
	VFNMADD213SSZrk_Int(1(Class<VR128X>) -> 0(Class<VR128X>))  [4.06;4.06]
		 Successful, latency: 4.06
	VFNMADD213SSZrk_Int(3(Class<VR128X>) -> 0(Class<VR128X>))  [4.04;4.04]
		 Successful, latency: 4.04
	VFNMADD213SSZrk_Int(4(Class<VR128X>) -> 0(Class<VR128X>))  [4.06;4.06]
		 Successful, latency: 4.06

-----VFNMADD213SSZrkz_Int-----
	VFNMADD213SSZrkz_Int(1(Class<VR128X>) -> 0(Class<VR128X>))  [4.03;4.03]
		 Successful, latency: 4.03
	VFNMADD213SSZrkz_Int(3(Class<VR128X>) -> 0(Class<VR128X>))  [4.06;4.06]
		 Successful, latency: 4.06
	VFNMADD213SSZrkz_Int(4(Class<VR128X>) -> 0(Class<VR128X>))  [4.03;4.03]
		 Successful, latency: 4.03

-----VFNMADD213SSr-----
	VFNMADD213SSr(1(Class<FR32>) -> 0(Class<FR32>))  [4.04;4.04]
		 Successful, latency: 4.04
	VFNMADD213SSr(2(Class<FR32>) -> 0(Class<FR32>))  [4.03;4.03]
		 Successful, latency: 4.03
	VFNMADD213SSr(3(Class<FR32>) -> 0(Class<FR32>))  [4.05;4.05]
		 Successful, latency: 4.05

-----VFNMADD213SSr_Int-----
	VFNMADD213SSr_Int(1(Class<VR128>) -> 0(Class<VR128>))  [4.08;4.08]
		 Successful, latency: 4.08
	VFNMADD213SSr_Int(2(Class<VR128>) -> 0(Class<VR128>))  [4.03;4.03]
		 Successful, latency: 4.03
	VFNMADD213SSr_Int(3(Class<VR128>) -> 0(Class<VR128>))  [4.04;4.04]
		 Successful, latency: 4.04

-----VFNMADD231BF16Z128r-----
	VFNMADD231BF16Z128r(1(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFNMADD231BF16Z128r(2(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFNMADD231BF16Z128r(3(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VFNMADD231BF16Z128rk-----
	VFNMADD231BF16Z128rk(1(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFNMADD231BF16Z128rk(3(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFNMADD231BF16Z128rk(4(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VFNMADD231BF16Z128rkz-----
	VFNMADD231BF16Z128rkz(1(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFNMADD231BF16Z128rkz(3(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFNMADD231BF16Z128rkz(4(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VFNMADD231BF16Z256r-----
	VFNMADD231BF16Z256r(1(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFNMADD231BF16Z256r(2(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFNMADD231BF16Z256r(3(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VFNMADD231BF16Z256rk-----
	VFNMADD231BF16Z256rk(1(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFNMADD231BF16Z256rk(3(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFNMADD231BF16Z256rk(4(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VFNMADD231BF16Z256rkz-----
	VFNMADD231BF16Z256rkz(1(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFNMADD231BF16Z256rkz(3(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFNMADD231BF16Z256rkz(4(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VFNMADD231BF16Zr-----
	VFNMADD231BF16Zr(1(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFNMADD231BF16Zr(2(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFNMADD231BF16Zr(3(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VFNMADD231BF16Zrk-----
	VFNMADD231BF16Zrk(1(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFNMADD231BF16Zrk(3(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFNMADD231BF16Zrk(4(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VFNMADD231BF16Zrkz-----
	VFNMADD231BF16Zrkz(1(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFNMADD231BF16Zrkz(3(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFNMADD231BF16Zrkz(4(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VFNMADD231PDYr-----
	VFNMADD231PDYr(1(Class<VR256>) -> 0(Class<VR256>))  [4.04;4.04]
		 Successful, latency: 4.04
	VFNMADD231PDYr(2(Class<VR256>) -> 0(Class<VR256>))  [4.04;4.04]
		 Successful, latency: 4.04
	VFNMADD231PDYr(3(Class<VR256>) -> 0(Class<VR256>))  [4.06;4.06]
		 Successful, latency: 4.06

-----VFNMADD231PDZ128r-----
	VFNMADD231PDZ128r(1(Class<VR128X>) -> 0(Class<VR128X>))  [4.05;4.05]
		 Successful, latency: 4.05
	VFNMADD231PDZ128r(2(Class<VR128X>) -> 0(Class<VR128X>))  [4.03;4.03]
		 Successful, latency: 4.03
	VFNMADD231PDZ128r(3(Class<VR128X>) -> 0(Class<VR128X>))  [4.03;4.03]
		 Successful, latency: 4.03

-----VFNMADD231PDZ128rk-----
	VFNMADD231PDZ128rk(1(Class<VR128X>) -> 0(Class<VR128X>))  [4.03;4.03]
		 Successful, latency: 4.03
	VFNMADD231PDZ128rk(3(Class<VR128X>) -> 0(Class<VR128X>))  [4.03;4.03]
		 Successful, latency: 4.03
	VFNMADD231PDZ128rk(4(Class<VR128X>) -> 0(Class<VR128X>))  [4.03;4.03]
		 Successful, latency: 4.03

-----VFNMADD231PDZ128rkz-----
	VFNMADD231PDZ128rkz(1(Class<VR128X>) -> 0(Class<VR128X>))  [4.07;4.07]
		 Successful, latency: 4.07
	VFNMADD231PDZ128rkz(3(Class<VR128X>) -> 0(Class<VR128X>))  [4.04;4.04]
		 Successful, latency: 4.04
	VFNMADD231PDZ128rkz(4(Class<VR128X>) -> 0(Class<VR128X>))  [4.04;4.04]
		 Successful, latency: 4.04

-----VFNMADD231PDZ256r-----
	VFNMADD231PDZ256r(1(Class<VR256X>) -> 0(Class<VR256X>))  [4.04;4.04]
		 Successful, latency: 4.04
	VFNMADD231PDZ256r(2(Class<VR256X>) -> 0(Class<VR256X>))  [4.06;4.06]
		 Successful, latency: 4.06
	VFNMADD231PDZ256r(3(Class<VR256X>) -> 0(Class<VR256X>))  [4.02;4.02]
		 Successful, latency: 4.02

-----VFNMADD231PDZ256rb-----
	VFNMADD231PDZ256rb(1(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFNMADD231PDZ256rb(2(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFNMADD231PDZ256rb(3(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VFNMADD231PDZ256rbk-----
	VFNMADD231PDZ256rbk(1(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFNMADD231PDZ256rbk(3(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFNMADD231PDZ256rbk(4(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VFNMADD231PDZ256rbkz-----
	VFNMADD231PDZ256rbkz(1(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFNMADD231PDZ256rbkz(3(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFNMADD231PDZ256rbkz(4(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VFNMADD231PDZ256rk-----
	VFNMADD231PDZ256rk(1(Class<VR256X>) -> 0(Class<VR256X>))  [4.04;4.04]
		 Successful, latency: 4.04
	VFNMADD231PDZ256rk(3(Class<VR256X>) -> 0(Class<VR256X>))  [4.04;4.04]
		 Successful, latency: 4.04
	VFNMADD231PDZ256rk(4(Class<VR256X>) -> 0(Class<VR256X>))  [4.04;4.04]
		 Successful, latency: 4.04

-----VFNMADD231PDZ256rkz-----
	VFNMADD231PDZ256rkz(1(Class<VR256X>) -> 0(Class<VR256X>))  [4.03;4.03]
		 Successful, latency: 4.03
	VFNMADD231PDZ256rkz(3(Class<VR256X>) -> 0(Class<VR256X>))  [4.04;4.04]
		 Successful, latency: 4.04
	VFNMADD231PDZ256rkz(4(Class<VR256X>) -> 0(Class<VR256X>))  [4.04;4.04]
		 Successful, latency: 4.04

-----VFNMADD231PDZr-----
	VFNMADD231PDZr(1(Class<VR512>) -> 0(Class<VR512>))  [4.05;4.05]
		 Successful, latency: 4.05
	VFNMADD231PDZr(2(Class<VR512>) -> 0(Class<VR512>))  [4.03;4.03]
		 Successful, latency: 4.03
	VFNMADD231PDZr(3(Class<VR512>) -> 0(Class<VR512>))  [4.04;4.04]
		 Successful, latency: 4.04

-----VFNMADD231PDZrb-----
	VFNMADD231PDZrb(1(Class<VR512>) -> 0(Class<VR512>))  [4.03;4.03]
		 Successful, latency: 4.03
	VFNMADD231PDZrb(2(Class<VR512>) -> 0(Class<VR512>))  [4.03;4.03]
		 Successful, latency: 4.03
	VFNMADD231PDZrb(3(Class<VR512>) -> 0(Class<VR512>))  [4.03;4.03]
		 Successful, latency: 4.03

-----VFNMADD231PDZrbk-----
	VFNMADD231PDZrbk(1(Class<VR512>) -> 0(Class<VR512>))  [4.04;4.04]
		 Successful, latency: 4.04
	VFNMADD231PDZrbk(3(Class<VR512>) -> 0(Class<VR512>))  [4.07;4.07]
		 Successful, latency: 4.07
	VFNMADD231PDZrbk(4(Class<VR512>) -> 0(Class<VR512>))  [4.06;4.06]
		 Successful, latency: 4.06

-----VFNMADD231PDZrbkz-----
	VFNMADD231PDZrbkz(1(Class<VR512>) -> 0(Class<VR512>))  [4.03;4.03]
		 Successful, latency: 4.03
	VFNMADD231PDZrbkz(3(Class<VR512>) -> 0(Class<VR512>))  [4.06;4.06]
		 Successful, latency: 4.06
	VFNMADD231PDZrbkz(4(Class<VR512>) -> 0(Class<VR512>))  [4.04;4.04]
		 Successful, latency: 4.04

-----VFNMADD231PDZrk-----
	VFNMADD231PDZrk(1(Class<VR512>) -> 0(Class<VR512>))  [4.05;4.05]
		 Successful, latency: 4.05
	VFNMADD231PDZrk(3(Class<VR512>) -> 0(Class<VR512>))  [4.03;4.03]
		 Successful, latency: 4.03
	VFNMADD231PDZrk(4(Class<VR512>) -> 0(Class<VR512>))  [4.06;4.06]
		 Successful, latency: 4.06

-----VFNMADD231PDZrkz-----
	VFNMADD231PDZrkz(1(Class<VR512>) -> 0(Class<VR512>))  [4.05;4.05]
		 Successful, latency: 4.05
	VFNMADD231PDZrkz(3(Class<VR512>) -> 0(Class<VR512>))  [4.04;4.04]
		 Successful, latency: 4.04
	VFNMADD231PDZrkz(4(Class<VR512>) -> 0(Class<VR512>))  [4.05;4.05]
		 Successful, latency: 4.05

-----VFNMADD231PDr-----
	VFNMADD231PDr(1(Class<VR128>) -> 0(Class<VR128>))  [4.06;4.06]
		 Successful, latency: 4.06
	VFNMADD231PDr(2(Class<VR128>) -> 0(Class<VR128>))  [4.02;4.02]
		 Successful, latency: 4.02
	VFNMADD231PDr(3(Class<VR128>) -> 0(Class<VR128>))  [4.03;4.03]
		 Successful, latency: 4.03

-----VFNMADD231PHZ128r-----
	VFNMADD231PHZ128r(1(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFNMADD231PHZ128r(2(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFNMADD231PHZ128r(3(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VFNMADD231PHZ128rk-----
	VFNMADD231PHZ128rk(1(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFNMADD231PHZ128rk(3(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFNMADD231PHZ128rk(4(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VFNMADD231PHZ128rkz-----
	VFNMADD231PHZ128rkz(1(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFNMADD231PHZ128rkz(3(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFNMADD231PHZ128rkz(4(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VFNMADD231PHZ256r-----
	VFNMADD231PHZ256r(1(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFNMADD231PHZ256r(2(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFNMADD231PHZ256r(3(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VFNMADD231PHZ256rb-----
	VFNMADD231PHZ256rb(1(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFNMADD231PHZ256rb(2(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFNMADD231PHZ256rb(3(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VFNMADD231PHZ256rbk-----
	VFNMADD231PHZ256rbk(1(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFNMADD231PHZ256rbk(3(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFNMADD231PHZ256rbk(4(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VFNMADD231PHZ256rbkz-----
	VFNMADD231PHZ256rbkz(1(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFNMADD231PHZ256rbkz(3(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFNMADD231PHZ256rbkz(4(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VFNMADD231PHZ256rk-----
	VFNMADD231PHZ256rk(1(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFNMADD231PHZ256rk(3(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFNMADD231PHZ256rk(4(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VFNMADD231PHZ256rkz-----
	VFNMADD231PHZ256rkz(1(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFNMADD231PHZ256rkz(3(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFNMADD231PHZ256rkz(4(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VFNMADD231PHZr-----
	VFNMADD231PHZr(1(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFNMADD231PHZr(2(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFNMADD231PHZr(3(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VFNMADD231PHZrb-----
	VFNMADD231PHZrb(1(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFNMADD231PHZrb(2(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFNMADD231PHZrb(3(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VFNMADD231PHZrbk-----
	VFNMADD231PHZrbk(1(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFNMADD231PHZrbk(3(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFNMADD231PHZrbk(4(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VFNMADD231PHZrbkz-----
	VFNMADD231PHZrbkz(1(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFNMADD231PHZrbkz(3(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFNMADD231PHZrbkz(4(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VFNMADD231PHZrk-----
	VFNMADD231PHZrk(1(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFNMADD231PHZrk(3(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFNMADD231PHZrk(4(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VFNMADD231PHZrkz-----
	VFNMADD231PHZrkz(1(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFNMADD231PHZrkz(3(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFNMADD231PHZrkz(4(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VFNMADD231PSYr-----
	VFNMADD231PSYr(1(Class<VR256>) -> 0(Class<VR256>))  [4.05;4.05]
		 Successful, latency: 4.05
	VFNMADD231PSYr(2(Class<VR256>) -> 0(Class<VR256>))  [4.03;4.03]
		 Successful, latency: 4.03
	VFNMADD231PSYr(3(Class<VR256>) -> 0(Class<VR256>))  [4.05;4.05]
		 Successful, latency: 4.05

-----VFNMADD231PSZ128r-----
	VFNMADD231PSZ128r(1(Class<VR128X>) -> 0(Class<VR128X>))  [4.05;4.05]
		 Successful, latency: 4.05
	VFNMADD231PSZ128r(2(Class<VR128X>) -> 0(Class<VR128X>))  [4.04;4.04]
		 Successful, latency: 4.04
	VFNMADD231PSZ128r(3(Class<VR128X>) -> 0(Class<VR128X>))  [4.03;4.03]
		 Successful, latency: 4.03

-----VFNMADD231PSZ128rk-----
	VFNMADD231PSZ128rk(1(Class<VR128X>) -> 0(Class<VR128X>))  [4.04;4.04]
		 Successful, latency: 4.04
	VFNMADD231PSZ128rk(3(Class<VR128X>) -> 0(Class<VR128X>))  [4.03;4.03]
		 Successful, latency: 4.03
	VFNMADD231PSZ128rk(4(Class<VR128X>) -> 0(Class<VR128X>))  [4.04;4.04]
		 Successful, latency: 4.04

-----VFNMADD231PSZ128rkz-----
	VFNMADD231PSZ128rkz(1(Class<VR128X>) -> 0(Class<VR128X>))  [4.05;4.05]
		 Successful, latency: 4.05
	VFNMADD231PSZ128rkz(3(Class<VR128X>) -> 0(Class<VR128X>))  [4.04;4.04]
		 Successful, latency: 4.04
	VFNMADD231PSZ128rkz(4(Class<VR128X>) -> 0(Class<VR128X>))  [4.02;4.02]
		 Successful, latency: 4.02

-----VFNMADD231PSZ256r-----
	VFNMADD231PSZ256r(1(Class<VR256X>) -> 0(Class<VR256X>))  [4.03;4.03]
		 Successful, latency: 4.03
	VFNMADD231PSZ256r(2(Class<VR256X>) -> 0(Class<VR256X>))  [4.04;4.04]
		 Successful, latency: 4.04
	VFNMADD231PSZ256r(3(Class<VR256X>) -> 0(Class<VR256X>))  [4.03;4.03]
		 Successful, latency: 4.03

-----VFNMADD231PSZ256rb-----
	VFNMADD231PSZ256rb(1(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFNMADD231PSZ256rb(2(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFNMADD231PSZ256rb(3(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VFNMADD231PSZ256rbk-----
	VFNMADD231PSZ256rbk(1(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFNMADD231PSZ256rbk(3(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFNMADD231PSZ256rbk(4(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VFNMADD231PSZ256rbkz-----
	VFNMADD231PSZ256rbkz(1(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFNMADD231PSZ256rbkz(3(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFNMADD231PSZ256rbkz(4(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VFNMADD231PSZ256rk-----
	VFNMADD231PSZ256rk(1(Class<VR256X>) -> 0(Class<VR256X>))  [4.07;4.07]
		 Successful, latency: 4.07
	VFNMADD231PSZ256rk(3(Class<VR256X>) -> 0(Class<VR256X>))  [4.05;4.05]
		 Successful, latency: 4.05
	VFNMADD231PSZ256rk(4(Class<VR256X>) -> 0(Class<VR256X>))  [4.04;4.04]
		 Successful, latency: 4.04

-----VFNMADD231PSZ256rkz-----
	VFNMADD231PSZ256rkz(1(Class<VR256X>) -> 0(Class<VR256X>))  [4.05;4.05]
		 Successful, latency: 4.05
	VFNMADD231PSZ256rkz(3(Class<VR256X>) -> 0(Class<VR256X>))  [4.04;4.04]
		 Successful, latency: 4.04
	VFNMADD231PSZ256rkz(4(Class<VR256X>) -> 0(Class<VR256X>))  [4.05;4.05]
		 Successful, latency: 4.05

-----VFNMADD231PSZr-----
	VFNMADD231PSZr(1(Class<VR512>) -> 0(Class<VR512>))  [4.04;4.04]
		 Successful, latency: 4.04
	VFNMADD231PSZr(2(Class<VR512>) -> 0(Class<VR512>))  [4.05;4.05]
		 Successful, latency: 4.05
	VFNMADD231PSZr(3(Class<VR512>) -> 0(Class<VR512>))  [4.07;4.07]
		 Successful, latency: 4.07

-----VFNMADD231PSZrb-----
	VFNMADD231PSZrb(1(Class<VR512>) -> 0(Class<VR512>))  [4.03;4.03]
		 Successful, latency: 4.03
	VFNMADD231PSZrb(2(Class<VR512>) -> 0(Class<VR512>))  [4.03;4.03]
		 Successful, latency: 4.03
	VFNMADD231PSZrb(3(Class<VR512>) -> 0(Class<VR512>))  [4.02;4.02]
		 Successful, latency: 4.02

-----VFNMADD231PSZrbk-----
	VFNMADD231PSZrbk(1(Class<VR512>) -> 0(Class<VR512>))  [4.03;4.03]
		 Successful, latency: 4.03
	VFNMADD231PSZrbk(3(Class<VR512>) -> 0(Class<VR512>))  [4.03;4.03]
		 Successful, latency: 4.03
	VFNMADD231PSZrbk(4(Class<VR512>) -> 0(Class<VR512>))  [4.02;4.02]
		 Successful, latency: 4.02

-----VFNMADD231PSZrbkz-----
	VFNMADD231PSZrbkz(1(Class<VR512>) -> 0(Class<VR512>))  [4.02;4.02]
		 Successful, latency: 4.02
	VFNMADD231PSZrbkz(3(Class<VR512>) -> 0(Class<VR512>))  [4.03;4.03]
		 Successful, latency: 4.03
	VFNMADD231PSZrbkz(4(Class<VR512>) -> 0(Class<VR512>))  [4.04;4.04]
		 Successful, latency: 4.04

-----VFNMADD231PSZrk-----
	VFNMADD231PSZrk(1(Class<VR512>) -> 0(Class<VR512>))  [4.03;4.03]
		 Successful, latency: 4.03
	VFNMADD231PSZrk(3(Class<VR512>) -> 0(Class<VR512>))  [4.03;4.03]
		 Successful, latency: 4.03
	VFNMADD231PSZrk(4(Class<VR512>) -> 0(Class<VR512>))  [4.06;4.06]
		 Successful, latency: 4.06

-----VFNMADD231PSZrkz-----
	VFNMADD231PSZrkz(1(Class<VR512>) -> 0(Class<VR512>))  [4.05;4.05]
		 Successful, latency: 4.05
	VFNMADD231PSZrkz(3(Class<VR512>) -> 0(Class<VR512>))  [4.06;4.06]
		 Successful, latency: 4.06
	VFNMADD231PSZrkz(4(Class<VR512>) -> 0(Class<VR512>))  [4.05;4.05]
		 Successful, latency: 4.05

-----VFNMADD231PSr-----
	VFNMADD231PSr(1(Class<VR128>) -> 0(Class<VR128>))  [4.07;4.07]
		 Successful, latency: 4.07
	VFNMADD231PSr(2(Class<VR128>) -> 0(Class<VR128>))  [4.02;4.02]
		 Successful, latency: 4.02
	VFNMADD231PSr(3(Class<VR128>) -> 0(Class<VR128>))  [4.03;4.03]
		 Successful, latency: 4.03

-----VFNMADD231SDZr-----
	VFNMADD231SDZr(1(Class<FR64X>) -> 0(Class<FR64X>))  [4.03;4.03]
		 Successful, latency: 4.03
	VFNMADD231SDZr(2(Class<FR64X>) -> 0(Class<FR64X>))  [4.03;4.03]
		 Successful, latency: 4.03
	VFNMADD231SDZr(3(Class<FR64X>) -> 0(Class<FR64X>))  [4.02;4.02]
		 Successful, latency: 4.02

-----VFNMADD231SDZr_Int-----
	VFNMADD231SDZr_Int(1(Class<VR128X>) -> 0(Class<VR128X>))  [4.02;4.02]
		 Successful, latency: 4.02
	VFNMADD231SDZr_Int(2(Class<VR128X>) -> 0(Class<VR128X>))  [4.03;4.03]
		 Successful, latency: 4.03
	VFNMADD231SDZr_Int(3(Class<VR128X>) -> 0(Class<VR128X>))  [4.05;4.05]
		 Successful, latency: 4.05

-----VFNMADD231SDZrb-----
	VFNMADD231SDZrb(1(Class<FR64X>) -> 0(Class<FR64X>))  [4.04;4.04]
		 Successful, latency: 4.04
	VFNMADD231SDZrb(2(Class<FR64X>) -> 0(Class<FR64X>))  [4.04;4.04]
		 Successful, latency: 4.04
	VFNMADD231SDZrb(3(Class<FR64X>) -> 0(Class<FR64X>))  [4.05;4.05]
		 Successful, latency: 4.05

-----VFNMADD231SDZrb_Int-----
	VFNMADD231SDZrb_Int(1(Class<VR128X>) -> 0(Class<VR128X>))  [4.03;4.03]
		 Successful, latency: 4.03
	VFNMADD231SDZrb_Int(2(Class<VR128X>) -> 0(Class<VR128X>))  [4.08;4.08]
		 Successful, latency: 4.08
	VFNMADD231SDZrb_Int(3(Class<VR128X>) -> 0(Class<VR128X>))  [4.03;4.03]
		 Successful, latency: 4.03

-----VFNMADD231SDZrbk_Int-----
	VFNMADD231SDZrbk_Int(1(Class<VR128X>) -> 0(Class<VR128X>))  [4.06;4.06]
		 Successful, latency: 4.06
	VFNMADD231SDZrbk_Int(3(Class<VR128X>) -> 0(Class<VR128X>))  [4.04;4.04]
		 Successful, latency: 4.04
	VFNMADD231SDZrbk_Int(4(Class<VR128X>) -> 0(Class<VR128X>))  [4.02;4.02]
		 Successful, latency: 4.02

-----VFNMADD231SDZrbkz_Int-----
	VFNMADD231SDZrbkz_Int(1(Class<VR128X>) -> 0(Class<VR128X>))  [4.04;4.04]
		 Successful, latency: 4.04
	VFNMADD231SDZrbkz_Int(3(Class<VR128X>) -> 0(Class<VR128X>))  [4.04;4.04]
		 Successful, latency: 4.04
	VFNMADD231SDZrbkz_Int(4(Class<VR128X>) -> 0(Class<VR128X>))  [4.03;4.03]
		 Successful, latency: 4.03

-----VFNMADD231SDZrk_Int-----
	VFNMADD231SDZrk_Int(1(Class<VR128X>) -> 0(Class<VR128X>))  [4.03;4.03]
		 Successful, latency: 4.03
	VFNMADD231SDZrk_Int(3(Class<VR128X>) -> 0(Class<VR128X>))  [4.05;4.05]
		 Successful, latency: 4.05
	VFNMADD231SDZrk_Int(4(Class<VR128X>) -> 0(Class<VR128X>))  [4.05;4.05]
		 Successful, latency: 4.05

-----VFNMADD231SDZrkz_Int-----
	VFNMADD231SDZrkz_Int(1(Class<VR128X>) -> 0(Class<VR128X>))  [4.04;4.04]
		 Successful, latency: 4.04
	VFNMADD231SDZrkz_Int(3(Class<VR128X>) -> 0(Class<VR128X>))  [4.06;4.06]
		 Successful, latency: 4.06
	VFNMADD231SDZrkz_Int(4(Class<VR128X>) -> 0(Class<VR128X>))  [4.03;4.03]
		 Successful, latency: 4.03

-----VFNMADD231SDr-----
	VFNMADD231SDr(1(Class<FR64>) -> 0(Class<FR64>))  [4.04;4.04]
		 Successful, latency: 4.04
	VFNMADD231SDr(2(Class<FR64>) -> 0(Class<FR64>))  [4.07;4.07]
		 Successful, latency: 4.07
	VFNMADD231SDr(3(Class<FR64>) -> 0(Class<FR64>))  [4.04;4.04]
		 Successful, latency: 4.04

-----VFNMADD231SDr_Int-----
	VFNMADD231SDr_Int(1(Class<VR128>) -> 0(Class<VR128>))  [4.05;4.05]
		 Successful, latency: 4.05
	VFNMADD231SDr_Int(2(Class<VR128>) -> 0(Class<VR128>))  [4.02;4.02]
		 Successful, latency: 4.02
	VFNMADD231SDr_Int(3(Class<VR128>) -> 0(Class<VR128>))  [4.03;4.03]
		 Successful, latency: 4.03

-----VFNMADD231SHZr-----
	VFNMADD231SHZr(1(Class<FR16X>) -> 0(Class<FR16X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFNMADD231SHZr(2(Class<FR16X>) -> 0(Class<FR16X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFNMADD231SHZr(3(Class<FR16X>) -> 0(Class<FR16X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VFNMADD231SHZr_Int-----
	VFNMADD231SHZr_Int(1(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFNMADD231SHZr_Int(2(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFNMADD231SHZr_Int(3(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VFNMADD231SHZrb-----
	VFNMADD231SHZrb(1(Class<FR16X>) -> 0(Class<FR16X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFNMADD231SHZrb(2(Class<FR16X>) -> 0(Class<FR16X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFNMADD231SHZrb(3(Class<FR16X>) -> 0(Class<FR16X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VFNMADD231SHZrb_Int-----
	VFNMADD231SHZrb_Int(1(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFNMADD231SHZrb_Int(2(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFNMADD231SHZrb_Int(3(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VFNMADD231SHZrbk_Int-----
	VFNMADD231SHZrbk_Int(1(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFNMADD231SHZrbk_Int(3(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFNMADD231SHZrbk_Int(4(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VFNMADD231SHZrbkz_Int-----
	VFNMADD231SHZrbkz_Int(1(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFNMADD231SHZrbkz_Int(3(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFNMADD231SHZrbkz_Int(4(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VFNMADD231SHZrk_Int-----
	VFNMADD231SHZrk_Int(1(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFNMADD231SHZrk_Int(3(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFNMADD231SHZrk_Int(4(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VFNMADD231SHZrkz_Int-----
	VFNMADD231SHZrkz_Int(1(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFNMADD231SHZrkz_Int(3(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFNMADD231SHZrkz_Int(4(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VFNMADD231SSZr-----
	VFNMADD231SSZr(1(Class<FR32X>) -> 0(Class<FR32X>))  [4.02;4.02]
		 Successful, latency: 4.02
	VFNMADD231SSZr(2(Class<FR32X>) -> 0(Class<FR32X>))  [4.04;4.04]
		 Successful, latency: 4.04
	VFNMADD231SSZr(3(Class<FR32X>) -> 0(Class<FR32X>))  [4.03;4.03]
		 Successful, latency: 4.03

-----VFNMADD231SSZr_Int-----
	VFNMADD231SSZr_Int(1(Class<VR128X>) -> 0(Class<VR128X>))  [4.03;4.03]
		 Successful, latency: 4.03
	VFNMADD231SSZr_Int(2(Class<VR128X>) -> 0(Class<VR128X>))  [4.03;4.03]
		 Successful, latency: 4.03
	VFNMADD231SSZr_Int(3(Class<VR128X>) -> 0(Class<VR128X>))  [4.05;4.05]
		 Successful, latency: 4.05

-----VFNMADD231SSZrb-----
	VFNMADD231SSZrb(1(Class<FR32X>) -> 0(Class<FR32X>))  [4.03;4.03]
		 Successful, latency: 4.03
	VFNMADD231SSZrb(2(Class<FR32X>) -> 0(Class<FR32X>))  [4.04;4.04]
		 Successful, latency: 4.04
	VFNMADD231SSZrb(3(Class<FR32X>) -> 0(Class<FR32X>))  [4.05;4.05]
		 Successful, latency: 4.05

-----VFNMADD231SSZrb_Int-----
	VFNMADD231SSZrb_Int(1(Class<VR128X>) -> 0(Class<VR128X>))  [4.03;4.03]
		 Successful, latency: 4.03
	VFNMADD231SSZrb_Int(2(Class<VR128X>) -> 0(Class<VR128X>))  [4.05;4.05]
		 Successful, latency: 4.05
	VFNMADD231SSZrb_Int(3(Class<VR128X>) -> 0(Class<VR128X>))  [4.03;4.03]
		 Successful, latency: 4.03

-----VFNMADD231SSZrbk_Int-----
	VFNMADD231SSZrbk_Int(1(Class<VR128X>) -> 0(Class<VR128X>))  [4.05;4.05]
		 Successful, latency: 4.05
	VFNMADD231SSZrbk_Int(3(Class<VR128X>) -> 0(Class<VR128X>))  [4.04;4.04]
		 Successful, latency: 4.04
	VFNMADD231SSZrbk_Int(4(Class<VR128X>) -> 0(Class<VR128X>))  [4.05;4.05]
		 Successful, latency: 4.05

-----VFNMADD231SSZrbkz_Int-----
	VFNMADD231SSZrbkz_Int(1(Class<VR128X>) -> 0(Class<VR128X>))  [4.05;4.05]
		 Successful, latency: 4.05
	VFNMADD231SSZrbkz_Int(3(Class<VR128X>) -> 0(Class<VR128X>))  [4.03;4.03]
		 Successful, latency: 4.03
	VFNMADD231SSZrbkz_Int(4(Class<VR128X>) -> 0(Class<VR128X>))  [4.05;4.05]
		 Successful, latency: 4.05

-----VFNMADD231SSZrk_Int-----
	VFNMADD231SSZrk_Int(1(Class<VR128X>) -> 0(Class<VR128X>))  [4.04;4.04]
		 Successful, latency: 4.04
	VFNMADD231SSZrk_Int(3(Class<VR128X>) -> 0(Class<VR128X>))  [4.02;4.02]
		 Successful, latency: 4.02
	VFNMADD231SSZrk_Int(4(Class<VR128X>) -> 0(Class<VR128X>))  [4.04;4.04]
		 Successful, latency: 4.04

-----VFNMADD231SSZrkz_Int-----
	VFNMADD231SSZrkz_Int(1(Class<VR128X>) -> 0(Class<VR128X>))  [4.03;4.03]
		 Successful, latency: 4.03
	VFNMADD231SSZrkz_Int(3(Class<VR128X>) -> 0(Class<VR128X>))  [4.03;4.03]
		 Successful, latency: 4.03
	VFNMADD231SSZrkz_Int(4(Class<VR128X>) -> 0(Class<VR128X>))  [4.03;4.03]
		 Successful, latency: 4.03

-----VFNMADD231SSr-----
	VFNMADD231SSr(1(Class<FR32>) -> 0(Class<FR32>))  [4.02;4.02]
		 Successful, latency: 4.02
	VFNMADD231SSr(2(Class<FR32>) -> 0(Class<FR32>))  [4.03;4.03]
		 Successful, latency: 4.03
	VFNMADD231SSr(3(Class<FR32>) -> 0(Class<FR32>))  [4.03;4.03]
		 Successful, latency: 4.03

-----VFNMADD231SSr_Int-----
	VFNMADD231SSr_Int(1(Class<VR128>) -> 0(Class<VR128>))  [4.04;4.04]
		 Successful, latency: 4.04
	VFNMADD231SSr_Int(2(Class<VR128>) -> 0(Class<VR128>))  [4.04;4.04]
		 Successful, latency: 4.04
	VFNMADD231SSr_Int(3(Class<VR128>) -> 0(Class<VR128>))  [4.05;4.05]
		 Successful, latency: 4.05

-----VFNMADDPD4Yrr-----
	VFNMADDPD4Yrr(1(Class<VR256>) -> 0(Class<VR256>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFNMADDPD4Yrr(2(Class<VR256>) -> 0(Class<VR256>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFNMADDPD4Yrr(3(Class<VR256>) -> 0(Class<VR256>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VFNMADDPD4Yrr_REV-----
	VFNMADDPD4Yrr_REV(1(Class<VR256>) -> 0(Class<VR256>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFNMADDPD4Yrr_REV(2(Class<VR256>) -> 0(Class<VR256>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFNMADDPD4Yrr_REV(3(Class<VR256>) -> 0(Class<VR256>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VFNMADDPD4rr-----
	VFNMADDPD4rr(1(Class<VR128>) -> 0(Class<VR128>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFNMADDPD4rr(2(Class<VR128>) -> 0(Class<VR128>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFNMADDPD4rr(3(Class<VR128>) -> 0(Class<VR128>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VFNMADDPD4rr_REV-----
	VFNMADDPD4rr_REV(1(Class<VR128>) -> 0(Class<VR128>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFNMADDPD4rr_REV(2(Class<VR128>) -> 0(Class<VR128>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFNMADDPD4rr_REV(3(Class<VR128>) -> 0(Class<VR128>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VFNMADDPS4Yrr-----
	VFNMADDPS4Yrr(1(Class<VR256>) -> 0(Class<VR256>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFNMADDPS4Yrr(2(Class<VR256>) -> 0(Class<VR256>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFNMADDPS4Yrr(3(Class<VR256>) -> 0(Class<VR256>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VFNMADDPS4Yrr_REV-----
	VFNMADDPS4Yrr_REV(1(Class<VR256>) -> 0(Class<VR256>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFNMADDPS4Yrr_REV(2(Class<VR256>) -> 0(Class<VR256>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFNMADDPS4Yrr_REV(3(Class<VR256>) -> 0(Class<VR256>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VFNMADDPS4rr-----
	VFNMADDPS4rr(1(Class<VR128>) -> 0(Class<VR128>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFNMADDPS4rr(2(Class<VR128>) -> 0(Class<VR128>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFNMADDPS4rr(3(Class<VR128>) -> 0(Class<VR128>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VFNMADDPS4rr_REV-----
	VFNMADDPS4rr_REV(1(Class<VR128>) -> 0(Class<VR128>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFNMADDPS4rr_REV(2(Class<VR128>) -> 0(Class<VR128>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFNMADDPS4rr_REV(3(Class<VR128>) -> 0(Class<VR128>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VFNMADDSD4rr-----
	VFNMADDSD4rr(1(Class<FR64>) -> 0(Class<FR64>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFNMADDSD4rr(2(Class<FR64>) -> 0(Class<FR64>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFNMADDSD4rr(3(Class<FR64>) -> 0(Class<FR64>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VFNMADDSD4rr_Int-----
	VFNMADDSD4rr_Int(1(Class<VR128>) -> 0(Class<VR128>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFNMADDSD4rr_Int(2(Class<VR128>) -> 0(Class<VR128>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFNMADDSD4rr_Int(3(Class<VR128>) -> 0(Class<VR128>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VFNMADDSD4rr_Int_REV-----
	VFNMADDSD4rr_Int_REV(1(Class<VR128>) -> 0(Class<VR128>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFNMADDSD4rr_Int_REV(2(Class<VR128>) -> 0(Class<VR128>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFNMADDSD4rr_Int_REV(3(Class<VR128>) -> 0(Class<VR128>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VFNMADDSD4rr_REV-----
	VFNMADDSD4rr_REV(1(Class<FR64>) -> 0(Class<FR64>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFNMADDSD4rr_REV(2(Class<FR64>) -> 0(Class<FR64>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFNMADDSD4rr_REV(3(Class<FR64>) -> 0(Class<FR64>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VFNMADDSS4rr-----
	VFNMADDSS4rr(1(Class<FR32>) -> 0(Class<FR32>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFNMADDSS4rr(2(Class<FR32>) -> 0(Class<FR32>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFNMADDSS4rr(3(Class<FR32>) -> 0(Class<FR32>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VFNMADDSS4rr_Int-----
	VFNMADDSS4rr_Int(1(Class<VR128>) -> 0(Class<VR128>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFNMADDSS4rr_Int(2(Class<VR128>) -> 0(Class<VR128>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFNMADDSS4rr_Int(3(Class<VR128>) -> 0(Class<VR128>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VFNMADDSS4rr_Int_REV-----
	VFNMADDSS4rr_Int_REV(1(Class<VR128>) -> 0(Class<VR128>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFNMADDSS4rr_Int_REV(2(Class<VR128>) -> 0(Class<VR128>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFNMADDSS4rr_Int_REV(3(Class<VR128>) -> 0(Class<VR128>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VFNMADDSS4rr_REV-----
	VFNMADDSS4rr_REV(1(Class<FR32>) -> 0(Class<FR32>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFNMADDSS4rr_REV(2(Class<FR32>) -> 0(Class<FR32>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFNMADDSS4rr_REV(3(Class<FR32>) -> 0(Class<FR32>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VFNMSUB132BF16Z128r-----
	VFNMSUB132BF16Z128r(1(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFNMSUB132BF16Z128r(2(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFNMSUB132BF16Z128r(3(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VFNMSUB132BF16Z128rk-----
	VFNMSUB132BF16Z128rk(1(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFNMSUB132BF16Z128rk(3(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFNMSUB132BF16Z128rk(4(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VFNMSUB132BF16Z128rkz-----
	VFNMSUB132BF16Z128rkz(1(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFNMSUB132BF16Z128rkz(3(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFNMSUB132BF16Z128rkz(4(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VFNMSUB132BF16Z256r-----
	VFNMSUB132BF16Z256r(1(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFNMSUB132BF16Z256r(2(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFNMSUB132BF16Z256r(3(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VFNMSUB132BF16Z256rk-----
	VFNMSUB132BF16Z256rk(1(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFNMSUB132BF16Z256rk(3(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFNMSUB132BF16Z256rk(4(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VFNMSUB132BF16Z256rkz-----
	VFNMSUB132BF16Z256rkz(1(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFNMSUB132BF16Z256rkz(3(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFNMSUB132BF16Z256rkz(4(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VFNMSUB132BF16Zr-----
	VFNMSUB132BF16Zr(1(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFNMSUB132BF16Zr(2(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFNMSUB132BF16Zr(3(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VFNMSUB132BF16Zrk-----
	VFNMSUB132BF16Zrk(1(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFNMSUB132BF16Zrk(3(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFNMSUB132BF16Zrk(4(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VFNMSUB132BF16Zrkz-----
	VFNMSUB132BF16Zrkz(1(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFNMSUB132BF16Zrkz(3(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFNMSUB132BF16Zrkz(4(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VFNMSUB132PDYr-----
	VFNMSUB132PDYr(1(Class<VR256>) -> 0(Class<VR256>))  [4.03;4.03]
		 Successful, latency: 4.03
	VFNMSUB132PDYr(2(Class<VR256>) -> 0(Class<VR256>))  [4.04;4.04]
		 Successful, latency: 4.04
	VFNMSUB132PDYr(3(Class<VR256>) -> 0(Class<VR256>))  [4.05;4.05]
		 Successful, latency: 4.05

-----VFNMSUB132PDZ128r-----
	VFNMSUB132PDZ128r(1(Class<VR128X>) -> 0(Class<VR128X>))  [4.03;4.03]
		 Successful, latency: 4.03
	VFNMSUB132PDZ128r(2(Class<VR128X>) -> 0(Class<VR128X>))  [4.04;4.04]
		 Successful, latency: 4.04
	VFNMSUB132PDZ128r(3(Class<VR128X>) -> 0(Class<VR128X>))  [4.03;4.03]
		 Successful, latency: 4.03

-----VFNMSUB132PDZ128rk-----
	VFNMSUB132PDZ128rk(1(Class<VR128X>) -> 0(Class<VR128X>))  [4.04;4.04]
		 Successful, latency: 4.04
	VFNMSUB132PDZ128rk(3(Class<VR128X>) -> 0(Class<VR128X>))  [4.05;4.05]
		 Successful, latency: 4.05
	VFNMSUB132PDZ128rk(4(Class<VR128X>) -> 0(Class<VR128X>))  [4.04;4.04]
		 Successful, latency: 4.04

-----VFNMSUB132PDZ128rkz-----
	VFNMSUB132PDZ128rkz(1(Class<VR128X>) -> 0(Class<VR128X>))  [4.03;4.03]
		 Successful, latency: 4.03
	VFNMSUB132PDZ128rkz(3(Class<VR128X>) -> 0(Class<VR128X>))  [4.03;4.03]
		 Successful, latency: 4.03
	VFNMSUB132PDZ128rkz(4(Class<VR128X>) -> 0(Class<VR128X>))  [4.04;4.04]
		 Successful, latency: 4.04

-----VFNMSUB132PDZ256r-----
	VFNMSUB132PDZ256r(1(Class<VR256X>) -> 0(Class<VR256X>))  [4.04;4.04]
		 Successful, latency: 4.04
	VFNMSUB132PDZ256r(2(Class<VR256X>) -> 0(Class<VR256X>))  [4.04;4.04]
		 Successful, latency: 4.04
	VFNMSUB132PDZ256r(3(Class<VR256X>) -> 0(Class<VR256X>))  [4.03;4.03]
		 Successful, latency: 4.03

-----VFNMSUB132PDZ256rb-----
	VFNMSUB132PDZ256rb(1(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFNMSUB132PDZ256rb(2(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFNMSUB132PDZ256rb(3(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VFNMSUB132PDZ256rbk-----
	VFNMSUB132PDZ256rbk(1(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFNMSUB132PDZ256rbk(3(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFNMSUB132PDZ256rbk(4(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VFNMSUB132PDZ256rbkz-----
	VFNMSUB132PDZ256rbkz(1(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFNMSUB132PDZ256rbkz(3(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFNMSUB132PDZ256rbkz(4(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VFNMSUB132PDZ256rk-----
	VFNMSUB132PDZ256rk(1(Class<VR256X>) -> 0(Class<VR256X>))  [4.06;4.06]
		 Successful, latency: 4.06
	VFNMSUB132PDZ256rk(3(Class<VR256X>) -> 0(Class<VR256X>))  [4.03;4.03]
		 Successful, latency: 4.03
	VFNMSUB132PDZ256rk(4(Class<VR256X>) -> 0(Class<VR256X>))  [4.03;4.03]
		 Successful, latency: 4.03

-----VFNMSUB132PDZ256rkz-----
	VFNMSUB132PDZ256rkz(1(Class<VR256X>) -> 0(Class<VR256X>))  [4.05;4.05]
		 Successful, latency: 4.05
	VFNMSUB132PDZ256rkz(3(Class<VR256X>) -> 0(Class<VR256X>))  [4.03;4.03]
		 Successful, latency: 4.03
	VFNMSUB132PDZ256rkz(4(Class<VR256X>) -> 0(Class<VR256X>))  [4.04;4.04]
		 Successful, latency: 4.04

-----VFNMSUB132PDZr-----
	VFNMSUB132PDZr(1(Class<VR512>) -> 0(Class<VR512>))  [4.05;4.05]
		 Successful, latency: 4.05
	VFNMSUB132PDZr(2(Class<VR512>) -> 0(Class<VR512>))  [4.03;4.03]
		 Successful, latency: 4.03
	VFNMSUB132PDZr(3(Class<VR512>) -> 0(Class<VR512>))  [4.04;4.04]
		 Successful, latency: 4.04

-----VFNMSUB132PDZrb-----
	VFNMSUB132PDZrb(1(Class<VR512>) -> 0(Class<VR512>))  [4.03;4.03]
		 Successful, latency: 4.03
	VFNMSUB132PDZrb(2(Class<VR512>) -> 0(Class<VR512>))  [4.06;4.06]
		 Successful, latency: 4.06
	VFNMSUB132PDZrb(3(Class<VR512>) -> 0(Class<VR512>))  [4.04;4.04]
		 Successful, latency: 4.04

-----VFNMSUB132PDZrbk-----
	VFNMSUB132PDZrbk(1(Class<VR512>) -> 0(Class<VR512>))  [4.06;4.06]
		 Successful, latency: 4.06
	VFNMSUB132PDZrbk(3(Class<VR512>) -> 0(Class<VR512>))  [4.03;4.03]
		 Successful, latency: 4.03
	VFNMSUB132PDZrbk(4(Class<VR512>) -> 0(Class<VR512>))  [4.03;4.03]
		 Successful, latency: 4.03

-----VFNMSUB132PDZrbkz-----
	VFNMSUB132PDZrbkz(1(Class<VR512>) -> 0(Class<VR512>))  [4.03;4.03]
		 Successful, latency: 4.03
	VFNMSUB132PDZrbkz(3(Class<VR512>) -> 0(Class<VR512>))  [4.06;4.06]
		 Successful, latency: 4.06
	VFNMSUB132PDZrbkz(4(Class<VR512>) -> 0(Class<VR512>))  [4.04;4.04]
		 Successful, latency: 4.04

-----VFNMSUB132PDZrk-----
	VFNMSUB132PDZrk(1(Class<VR512>) -> 0(Class<VR512>))  [4.02;4.02]
		 Successful, latency: 4.02
	VFNMSUB132PDZrk(3(Class<VR512>) -> 0(Class<VR512>))  [4.05;4.05]
		 Successful, latency: 4.05
	VFNMSUB132PDZrk(4(Class<VR512>) -> 0(Class<VR512>))  [4.06;4.06]
		 Successful, latency: 4.06

-----VFNMSUB132PDZrkz-----
	VFNMSUB132PDZrkz(1(Class<VR512>) -> 0(Class<VR512>))  [4.03;4.03]
		 Successful, latency: 4.03
	VFNMSUB132PDZrkz(3(Class<VR512>) -> 0(Class<VR512>))  [4.04;4.04]
		 Successful, latency: 4.04
	VFNMSUB132PDZrkz(4(Class<VR512>) -> 0(Class<VR512>))  [4.04;4.04]
		 Successful, latency: 4.04

-----VFNMSUB132PDr-----
	VFNMSUB132PDr(1(Class<VR128>) -> 0(Class<VR128>))  [4.03;4.03]
		 Successful, latency: 4.03
	VFNMSUB132PDr(2(Class<VR128>) -> 0(Class<VR128>))  [4.05;4.05]
		 Successful, latency: 4.05
	VFNMSUB132PDr(3(Class<VR128>) -> 0(Class<VR128>))  [4.03;4.03]
		 Successful, latency: 4.03

-----VFNMSUB132PHZ128r-----
	VFNMSUB132PHZ128r(1(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFNMSUB132PHZ128r(2(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFNMSUB132PHZ128r(3(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VFNMSUB132PHZ128rk-----
	VFNMSUB132PHZ128rk(1(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFNMSUB132PHZ128rk(3(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFNMSUB132PHZ128rk(4(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VFNMSUB132PHZ128rkz-----
	VFNMSUB132PHZ128rkz(1(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFNMSUB132PHZ128rkz(3(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFNMSUB132PHZ128rkz(4(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VFNMSUB132PHZ256r-----
	VFNMSUB132PHZ256r(1(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFNMSUB132PHZ256r(2(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFNMSUB132PHZ256r(3(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VFNMSUB132PHZ256rb-----
	VFNMSUB132PHZ256rb(1(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFNMSUB132PHZ256rb(2(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFNMSUB132PHZ256rb(3(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VFNMSUB132PHZ256rbk-----
	VFNMSUB132PHZ256rbk(1(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFNMSUB132PHZ256rbk(3(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFNMSUB132PHZ256rbk(4(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VFNMSUB132PHZ256rbkz-----
	VFNMSUB132PHZ256rbkz(1(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFNMSUB132PHZ256rbkz(3(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFNMSUB132PHZ256rbkz(4(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VFNMSUB132PHZ256rk-----
	VFNMSUB132PHZ256rk(1(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFNMSUB132PHZ256rk(3(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFNMSUB132PHZ256rk(4(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VFNMSUB132PHZ256rkz-----
	VFNMSUB132PHZ256rkz(1(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFNMSUB132PHZ256rkz(3(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFNMSUB132PHZ256rkz(4(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VFNMSUB132PHZr-----
	VFNMSUB132PHZr(1(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFNMSUB132PHZr(2(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFNMSUB132PHZr(3(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VFNMSUB132PHZrb-----
	VFNMSUB132PHZrb(1(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFNMSUB132PHZrb(2(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFNMSUB132PHZrb(3(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VFNMSUB132PHZrbk-----
	VFNMSUB132PHZrbk(1(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFNMSUB132PHZrbk(3(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFNMSUB132PHZrbk(4(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VFNMSUB132PHZrbkz-----
	VFNMSUB132PHZrbkz(1(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFNMSUB132PHZrbkz(3(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFNMSUB132PHZrbkz(4(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VFNMSUB132PHZrk-----
	VFNMSUB132PHZrk(1(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFNMSUB132PHZrk(3(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFNMSUB132PHZrk(4(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VFNMSUB132PHZrkz-----
	VFNMSUB132PHZrkz(1(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFNMSUB132PHZrkz(3(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFNMSUB132PHZrkz(4(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VFNMSUB132PSYr-----
	VFNMSUB132PSYr(1(Class<VR256>) -> 0(Class<VR256>))  [4.07;4.07]
		 Successful, latency: 4.07
	VFNMSUB132PSYr(2(Class<VR256>) -> 0(Class<VR256>))  [4.03;4.03]
		 Successful, latency: 4.03
	VFNMSUB132PSYr(3(Class<VR256>) -> 0(Class<VR256>))  [4.04;4.04]
		 Successful, latency: 4.04

-----VFNMSUB132PSZ128r-----
	VFNMSUB132PSZ128r(1(Class<VR128X>) -> 0(Class<VR128X>))  [4.05;4.05]
		 Successful, latency: 4.05
	VFNMSUB132PSZ128r(2(Class<VR128X>) -> 0(Class<VR128X>))  [4.02;4.02]
		 Successful, latency: 4.02
	VFNMSUB132PSZ128r(3(Class<VR128X>) -> 0(Class<VR128X>))  [4.03;4.03]
		 Successful, latency: 4.03

-----VFNMSUB132PSZ128rk-----
	VFNMSUB132PSZ128rk(1(Class<VR128X>) -> 0(Class<VR128X>))  [4.04;4.04]
		 Successful, latency: 4.04
	VFNMSUB132PSZ128rk(3(Class<VR128X>) -> 0(Class<VR128X>))  [4.02;4.02]
		 Successful, latency: 4.02
	VFNMSUB132PSZ128rk(4(Class<VR128X>) -> 0(Class<VR128X>))  [4.03;4.03]
		 Successful, latency: 4.03

-----VFNMSUB132PSZ128rkz-----
	VFNMSUB132PSZ128rkz(1(Class<VR128X>) -> 0(Class<VR128X>))  [4.02;4.02]
		 Successful, latency: 4.02
	VFNMSUB132PSZ128rkz(3(Class<VR128X>) -> 0(Class<VR128X>))  [4.03;4.03]
		 Successful, latency: 4.03
	VFNMSUB132PSZ128rkz(4(Class<VR128X>) -> 0(Class<VR128X>))  [4.04;4.04]
		 Successful, latency: 4.04

-----VFNMSUB132PSZ256r-----
	VFNMSUB132PSZ256r(1(Class<VR256X>) -> 0(Class<VR256X>))  [4.04;4.04]
		 Successful, latency: 4.04
	VFNMSUB132PSZ256r(2(Class<VR256X>) -> 0(Class<VR256X>))  [4.04;4.04]
		 Successful, latency: 4.04
	VFNMSUB132PSZ256r(3(Class<VR256X>) -> 0(Class<VR256X>))  [4.03;4.03]
		 Successful, latency: 4.03

-----VFNMSUB132PSZ256rb-----
	VFNMSUB132PSZ256rb(1(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFNMSUB132PSZ256rb(2(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFNMSUB132PSZ256rb(3(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VFNMSUB132PSZ256rbk-----
	VFNMSUB132PSZ256rbk(1(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFNMSUB132PSZ256rbk(3(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFNMSUB132PSZ256rbk(4(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VFNMSUB132PSZ256rbkz-----
	VFNMSUB132PSZ256rbkz(1(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFNMSUB132PSZ256rbkz(3(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFNMSUB132PSZ256rbkz(4(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VFNMSUB132PSZ256rk-----
	VFNMSUB132PSZ256rk(1(Class<VR256X>) -> 0(Class<VR256X>))  [4.03;4.03]
		 Successful, latency: 4.03
	VFNMSUB132PSZ256rk(3(Class<VR256X>) -> 0(Class<VR256X>))  [4.03;4.03]
		 Successful, latency: 4.03
	VFNMSUB132PSZ256rk(4(Class<VR256X>) -> 0(Class<VR256X>))  [4.07;4.07]
		 Successful, latency: 4.07

-----VFNMSUB132PSZ256rkz-----
	VFNMSUB132PSZ256rkz(1(Class<VR256X>) -> 0(Class<VR256X>))  [4.05;4.05]
		 Successful, latency: 4.05
	VFNMSUB132PSZ256rkz(3(Class<VR256X>) -> 0(Class<VR256X>))  [4.03;4.03]
		 Successful, latency: 4.03
	VFNMSUB132PSZ256rkz(4(Class<VR256X>) -> 0(Class<VR256X>))  [4.04;4.04]
		 Successful, latency: 4.04

-----VFNMSUB132PSZr-----
	VFNMSUB132PSZr(1(Class<VR512>) -> 0(Class<VR512>))  [4.04;4.04]
		 Successful, latency: 4.04
	VFNMSUB132PSZr(2(Class<VR512>) -> 0(Class<VR512>))  [4.04;4.04]
		 Successful, latency: 4.04
	VFNMSUB132PSZr(3(Class<VR512>) -> 0(Class<VR512>))  [4.05;4.05]
		 Successful, latency: 4.05

-----VFNMSUB132PSZrb-----
	VFNMSUB132PSZrb(1(Class<VR512>) -> 0(Class<VR512>))  [4.05;4.05]
		 Successful, latency: 4.05
	VFNMSUB132PSZrb(2(Class<VR512>) -> 0(Class<VR512>))  [4.04;4.04]
		 Successful, latency: 4.04
	VFNMSUB132PSZrb(3(Class<VR512>) -> 0(Class<VR512>))  [4.04;4.04]
		 Successful, latency: 4.04

-----VFNMSUB132PSZrbk-----
	VFNMSUB132PSZrbk(1(Class<VR512>) -> 0(Class<VR512>))  [4.04;4.04]
		 Successful, latency: 4.04
	VFNMSUB132PSZrbk(3(Class<VR512>) -> 0(Class<VR512>))  [4.04;4.04]
		 Successful, latency: 4.04
	VFNMSUB132PSZrbk(4(Class<VR512>) -> 0(Class<VR512>))  [4.05;4.05]
		 Successful, latency: 4.05

-----VFNMSUB132PSZrbkz-----
	VFNMSUB132PSZrbkz(1(Class<VR512>) -> 0(Class<VR512>))  [4.03;4.03]
		 Successful, latency: 4.03
	VFNMSUB132PSZrbkz(3(Class<VR512>) -> 0(Class<VR512>))  [4.02;4.02]
		 Successful, latency: 4.02
	VFNMSUB132PSZrbkz(4(Class<VR512>) -> 0(Class<VR512>))  [4.05;4.05]
		 Successful, latency: 4.05

-----VFNMSUB132PSZrk-----
	VFNMSUB132PSZrk(1(Class<VR512>) -> 0(Class<VR512>))  [4.03;4.03]
		 Successful, latency: 4.03
	VFNMSUB132PSZrk(3(Class<VR512>) -> 0(Class<VR512>))  [4.02;4.02]
		 Successful, latency: 4.02
	VFNMSUB132PSZrk(4(Class<VR512>) -> 0(Class<VR512>))  [4.03;4.03]
		 Successful, latency: 4.03

-----VFNMSUB132PSZrkz-----
	VFNMSUB132PSZrkz(1(Class<VR512>) -> 0(Class<VR512>))  [4.04;4.04]
		 Successful, latency: 4.04
	VFNMSUB132PSZrkz(3(Class<VR512>) -> 0(Class<VR512>))  [4.1;4.1]
		 Successful, latency: 4.1
	VFNMSUB132PSZrkz(4(Class<VR512>) -> 0(Class<VR512>))  [4.04;4.04]
		 Successful, latency: 4.04

-----VFNMSUB132PSr-----
	VFNMSUB132PSr(1(Class<VR128>) -> 0(Class<VR128>))  [4.03;4.03]
		 Successful, latency: 4.03
	VFNMSUB132PSr(2(Class<VR128>) -> 0(Class<VR128>))  [4.03;4.03]
		 Successful, latency: 4.03
	VFNMSUB132PSr(3(Class<VR128>) -> 0(Class<VR128>))  [4.08;4.08]
		 Successful, latency: 4.08

-----VFNMSUB132SDZr-----
	VFNMSUB132SDZr(1(Class<FR64X>) -> 0(Class<FR64X>))  [4.04;4.04]
		 Successful, latency: 4.04
	VFNMSUB132SDZr(2(Class<FR64X>) -> 0(Class<FR64X>))  [4.07;4.07]
		 Successful, latency: 4.07
	VFNMSUB132SDZr(3(Class<FR64X>) -> 0(Class<FR64X>))  [4.04;4.04]
		 Successful, latency: 4.04

-----VFNMSUB132SDZr_Int-----
	VFNMSUB132SDZr_Int(1(Class<VR128X>) -> 0(Class<VR128X>))  [4.02;4.02]
		 Successful, latency: 4.02
	VFNMSUB132SDZr_Int(2(Class<VR128X>) -> 0(Class<VR128X>))  [4.02;4.02]
		 Successful, latency: 4.02
	VFNMSUB132SDZr_Int(3(Class<VR128X>) -> 0(Class<VR128X>))  [4.03;4.03]
		 Successful, latency: 4.03

-----VFNMSUB132SDZrb-----
	VFNMSUB132SDZrb(1(Class<FR64X>) -> 0(Class<FR64X>))  [4.03;4.03]
		 Successful, latency: 4.03
	VFNMSUB132SDZrb(2(Class<FR64X>) -> 0(Class<FR64X>))  [4.04;4.04]
		 Successful, latency: 4.04
	VFNMSUB132SDZrb(3(Class<FR64X>) -> 0(Class<FR64X>))  [4.04;4.04]
		 Successful, latency: 4.04

-----VFNMSUB132SDZrb_Int-----
	VFNMSUB132SDZrb_Int(1(Class<VR128X>) -> 0(Class<VR128X>))  [4.04;4.04]
		 Successful, latency: 4.04
	VFNMSUB132SDZrb_Int(2(Class<VR128X>) -> 0(Class<VR128X>))  [4.04;4.04]
		 Successful, latency: 4.04
	VFNMSUB132SDZrb_Int(3(Class<VR128X>) -> 0(Class<VR128X>))  [4.03;4.03]
		 Successful, latency: 4.03

-----VFNMSUB132SDZrbk_Int-----
	VFNMSUB132SDZrbk_Int(1(Class<VR128X>) -> 0(Class<VR128X>))  [4.03;4.03]
		 Successful, latency: 4.03
	VFNMSUB132SDZrbk_Int(3(Class<VR128X>) -> 0(Class<VR128X>))  [4.03;4.03]
		 Successful, latency: 4.03
	VFNMSUB132SDZrbk_Int(4(Class<VR128X>) -> 0(Class<VR128X>))  [4.07;4.07]
		 Successful, latency: 4.07

-----VFNMSUB132SDZrbkz_Int-----
	VFNMSUB132SDZrbkz_Int(1(Class<VR128X>) -> 0(Class<VR128X>))  [4.03;4.03]
		 Successful, latency: 4.03
	VFNMSUB132SDZrbkz_Int(3(Class<VR128X>) -> 0(Class<VR128X>))  [4.06;4.06]
		 Successful, latency: 4.06
	VFNMSUB132SDZrbkz_Int(4(Class<VR128X>) -> 0(Class<VR128X>))  [4.04;4.04]
		 Successful, latency: 4.04

-----VFNMSUB132SDZrk_Int-----
	VFNMSUB132SDZrk_Int(1(Class<VR128X>) -> 0(Class<VR128X>))  [4.05;4.05]
		 Successful, latency: 4.05
	VFNMSUB132SDZrk_Int(3(Class<VR128X>) -> 0(Class<VR128X>))  [4.06;4.06]
		 Successful, latency: 4.06
	VFNMSUB132SDZrk_Int(4(Class<VR128X>) -> 0(Class<VR128X>))  [4.05;4.05]
		 Successful, latency: 4.05

-----VFNMSUB132SDZrkz_Int-----
	VFNMSUB132SDZrkz_Int(1(Class<VR128X>) -> 0(Class<VR128X>))  [4.03;4.03]
		 Successful, latency: 4.03
	VFNMSUB132SDZrkz_Int(3(Class<VR128X>) -> 0(Class<VR128X>))  [4.04;4.04]
		 Successful, latency: 4.04
	VFNMSUB132SDZrkz_Int(4(Class<VR128X>) -> 0(Class<VR128X>))  [4.05;4.05]
		 Successful, latency: 4.05

-----VFNMSUB132SDr-----
	VFNMSUB132SDr(1(Class<FR64>) -> 0(Class<FR64>))  [4.05;4.05]
		 Successful, latency: 4.05
	VFNMSUB132SDr(2(Class<FR64>) -> 0(Class<FR64>))  [4.05;4.05]
		 Successful, latency: 4.05
	VFNMSUB132SDr(3(Class<FR64>) -> 0(Class<FR64>))  [4.04;4.04]
		 Successful, latency: 4.04

-----VFNMSUB132SDr_Int-----
	VFNMSUB132SDr_Int(1(Class<VR128>) -> 0(Class<VR128>))  [4.04;4.04]
		 Successful, latency: 4.04
	VFNMSUB132SDr_Int(2(Class<VR128>) -> 0(Class<VR128>))  [4.07;4.07]
		 Successful, latency: 4.07
	VFNMSUB132SDr_Int(3(Class<VR128>) -> 0(Class<VR128>))  [4.04;4.04]
		 Successful, latency: 4.04

-----VFNMSUB132SHZr-----
	VFNMSUB132SHZr(1(Class<FR16X>) -> 0(Class<FR16X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFNMSUB132SHZr(2(Class<FR16X>) -> 0(Class<FR16X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFNMSUB132SHZr(3(Class<FR16X>) -> 0(Class<FR16X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VFNMSUB132SHZr_Int-----
	VFNMSUB132SHZr_Int(1(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFNMSUB132SHZr_Int(2(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFNMSUB132SHZr_Int(3(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VFNMSUB132SHZrb-----
	VFNMSUB132SHZrb(1(Class<FR16X>) -> 0(Class<FR16X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFNMSUB132SHZrb(2(Class<FR16X>) -> 0(Class<FR16X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFNMSUB132SHZrb(3(Class<FR16X>) -> 0(Class<FR16X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VFNMSUB132SHZrb_Int-----
	VFNMSUB132SHZrb_Int(1(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFNMSUB132SHZrb_Int(2(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFNMSUB132SHZrb_Int(3(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VFNMSUB132SHZrbk_Int-----
	VFNMSUB132SHZrbk_Int(1(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFNMSUB132SHZrbk_Int(3(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFNMSUB132SHZrbk_Int(4(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VFNMSUB132SHZrbkz_Int-----
	VFNMSUB132SHZrbkz_Int(1(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFNMSUB132SHZrbkz_Int(3(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFNMSUB132SHZrbkz_Int(4(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VFNMSUB132SHZrk_Int-----
	VFNMSUB132SHZrk_Int(1(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFNMSUB132SHZrk_Int(3(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFNMSUB132SHZrk_Int(4(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VFNMSUB132SHZrkz_Int-----
	VFNMSUB132SHZrkz_Int(1(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFNMSUB132SHZrkz_Int(3(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFNMSUB132SHZrkz_Int(4(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VFNMSUB132SSZr-----
	VFNMSUB132SSZr(1(Class<FR32X>) -> 0(Class<FR32X>))  [4.02;4.02]
		 Successful, latency: 4.02
	VFNMSUB132SSZr(2(Class<FR32X>) -> 0(Class<FR32X>))  [4.04;4.04]
		 Successful, latency: 4.04
	VFNMSUB132SSZr(3(Class<FR32X>) -> 0(Class<FR32X>))  [4.06;4.06]
		 Successful, latency: 4.06

-----VFNMSUB132SSZr_Int-----
	VFNMSUB132SSZr_Int(1(Class<VR128X>) -> 0(Class<VR128X>))  [4.03;4.03]
		 Successful, latency: 4.03
	VFNMSUB132SSZr_Int(2(Class<VR128X>) -> 0(Class<VR128X>))  [4.04;4.04]
		 Successful, latency: 4.04
	VFNMSUB132SSZr_Int(3(Class<VR128X>) -> 0(Class<VR128X>))  [4.03;4.03]
		 Successful, latency: 4.03

-----VFNMSUB132SSZrb-----
	VFNMSUB132SSZrb(1(Class<FR32X>) -> 0(Class<FR32X>))  [4.04;4.04]
		 Successful, latency: 4.04
	VFNMSUB132SSZrb(2(Class<FR32X>) -> 0(Class<FR32X>))  [4.04;4.04]
		 Successful, latency: 4.04
	VFNMSUB132SSZrb(3(Class<FR32X>) -> 0(Class<FR32X>))  [4.06;4.06]
		 Successful, latency: 4.06

-----VFNMSUB132SSZrb_Int-----
	VFNMSUB132SSZrb_Int(1(Class<VR128X>) -> 0(Class<VR128X>))  [4.04;4.04]
		 Successful, latency: 4.04
	VFNMSUB132SSZrb_Int(2(Class<VR128X>) -> 0(Class<VR128X>))  [4.05;4.05]
		 Successful, latency: 4.05
	VFNMSUB132SSZrb_Int(3(Class<VR128X>) -> 0(Class<VR128X>))  [4.03;4.03]
		 Successful, latency: 4.03

-----VFNMSUB132SSZrbk_Int-----
	VFNMSUB132SSZrbk_Int(1(Class<VR128X>) -> 0(Class<VR128X>))  [4.04;4.04]
		 Successful, latency: 4.04
	VFNMSUB132SSZrbk_Int(3(Class<VR128X>) -> 0(Class<VR128X>))  [4.03;4.03]
		 Successful, latency: 4.03
	VFNMSUB132SSZrbk_Int(4(Class<VR128X>) -> 0(Class<VR128X>))  [4.07;4.07]
		 Successful, latency: 4.07

-----VFNMSUB132SSZrbkz_Int-----
	VFNMSUB132SSZrbkz_Int(1(Class<VR128X>) -> 0(Class<VR128X>))  [4.03;4.03]
		 Successful, latency: 4.03
	VFNMSUB132SSZrbkz_Int(3(Class<VR128X>) -> 0(Class<VR128X>))  [4.04;4.04]
		 Successful, latency: 4.04
	VFNMSUB132SSZrbkz_Int(4(Class<VR128X>) -> 0(Class<VR128X>))  [4.04;4.04]
		 Successful, latency: 4.04

-----VFNMSUB132SSZrk_Int-----
	VFNMSUB132SSZrk_Int(1(Class<VR128X>) -> 0(Class<VR128X>))  [4.07;4.07]
		 Successful, latency: 4.07
	VFNMSUB132SSZrk_Int(3(Class<VR128X>) -> 0(Class<VR128X>))  [4.04;4.04]
		 Successful, latency: 4.04
	VFNMSUB132SSZrk_Int(4(Class<VR128X>) -> 0(Class<VR128X>))  [4.04;4.04]
		 Successful, latency: 4.04

-----VFNMSUB132SSZrkz_Int-----
	VFNMSUB132SSZrkz_Int(1(Class<VR128X>) -> 0(Class<VR128X>))  [4.04;4.04]
		 Successful, latency: 4.04
	VFNMSUB132SSZrkz_Int(3(Class<VR128X>) -> 0(Class<VR128X>))  [4.02;4.02]
		 Successful, latency: 4.02
	VFNMSUB132SSZrkz_Int(4(Class<VR128X>) -> 0(Class<VR128X>))  [4.04;4.04]
		 Successful, latency: 4.04

-----VFNMSUB132SSr-----
	VFNMSUB132SSr(1(Class<FR32>) -> 0(Class<FR32>))  [4.03;4.03]
		 Successful, latency: 4.03
	VFNMSUB132SSr(2(Class<FR32>) -> 0(Class<FR32>))  [4.04;4.04]
		 Successful, latency: 4.04
	VFNMSUB132SSr(3(Class<FR32>) -> 0(Class<FR32>))  [4.02;4.02]
		 Successful, latency: 4.02

-----VFNMSUB132SSr_Int-----
	VFNMSUB132SSr_Int(1(Class<VR128>) -> 0(Class<VR128>))  [4.04;4.04]
		 Successful, latency: 4.04
	VFNMSUB132SSr_Int(2(Class<VR128>) -> 0(Class<VR128>))  [4.07;4.07]
		 Successful, latency: 4.07
	VFNMSUB132SSr_Int(3(Class<VR128>) -> 0(Class<VR128>))  [4.07;4.07]
		 Successful, latency: 4.07

-----VFNMSUB213BF16Z128r-----
	VFNMSUB213BF16Z128r(1(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFNMSUB213BF16Z128r(2(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFNMSUB213BF16Z128r(3(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VFNMSUB213BF16Z128rk-----
	VFNMSUB213BF16Z128rk(1(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFNMSUB213BF16Z128rk(3(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFNMSUB213BF16Z128rk(4(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VFNMSUB213BF16Z128rkz-----
	VFNMSUB213BF16Z128rkz(1(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFNMSUB213BF16Z128rkz(3(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFNMSUB213BF16Z128rkz(4(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VFNMSUB213BF16Z256r-----
	VFNMSUB213BF16Z256r(1(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFNMSUB213BF16Z256r(2(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFNMSUB213BF16Z256r(3(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VFNMSUB213BF16Z256rk-----
	VFNMSUB213BF16Z256rk(1(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFNMSUB213BF16Z256rk(3(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFNMSUB213BF16Z256rk(4(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VFNMSUB213BF16Z256rkz-----
	VFNMSUB213BF16Z256rkz(1(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFNMSUB213BF16Z256rkz(3(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFNMSUB213BF16Z256rkz(4(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VFNMSUB213BF16Zr-----
	VFNMSUB213BF16Zr(1(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFNMSUB213BF16Zr(2(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFNMSUB213BF16Zr(3(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VFNMSUB213BF16Zrk-----
	VFNMSUB213BF16Zrk(1(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFNMSUB213BF16Zrk(3(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFNMSUB213BF16Zrk(4(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VFNMSUB213BF16Zrkz-----
	VFNMSUB213BF16Zrkz(1(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFNMSUB213BF16Zrkz(3(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFNMSUB213BF16Zrkz(4(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VFNMSUB213PDYr-----
	VFNMSUB213PDYr(1(Class<VR256>) -> 0(Class<VR256>))  [4.04;4.04]
		 Successful, latency: 4.04
	VFNMSUB213PDYr(2(Class<VR256>) -> 0(Class<VR256>))  [4.04;4.04]
		 Successful, latency: 4.04
	VFNMSUB213PDYr(3(Class<VR256>) -> 0(Class<VR256>))  [4.04;4.04]
		 Successful, latency: 4.04

-----VFNMSUB213PDZ128r-----
	VFNMSUB213PDZ128r(1(Class<VR128X>) -> 0(Class<VR128X>))  [4.03;4.03]
		 Successful, latency: 4.03
	VFNMSUB213PDZ128r(2(Class<VR128X>) -> 0(Class<VR128X>))  [4.05;4.05]
		 Successful, latency: 4.05
	VFNMSUB213PDZ128r(3(Class<VR128X>) -> 0(Class<VR128X>))  [4.04;4.04]
		 Successful, latency: 4.04

-----VFNMSUB213PDZ128rk-----
	VFNMSUB213PDZ128rk(1(Class<VR128X>) -> 0(Class<VR128X>))  [4.05;4.05]
		 Successful, latency: 4.05
	VFNMSUB213PDZ128rk(3(Class<VR128X>) -> 0(Class<VR128X>))  [4.05;4.05]
		 Successful, latency: 4.05
	VFNMSUB213PDZ128rk(4(Class<VR128X>) -> 0(Class<VR128X>))  [4.04;4.04]
		 Successful, latency: 4.04

-----VFNMSUB213PDZ128rkz-----
	VFNMSUB213PDZ128rkz(1(Class<VR128X>) -> 0(Class<VR128X>))  [4.03;4.03]
		 Successful, latency: 4.03
	VFNMSUB213PDZ128rkz(3(Class<VR128X>) -> 0(Class<VR128X>))  [4.05;4.05]
		 Successful, latency: 4.05
	VFNMSUB213PDZ128rkz(4(Class<VR128X>) -> 0(Class<VR128X>))  [4.04;4.04]
		 Successful, latency: 4.04

-----VFNMSUB213PDZ256r-----
	VFNMSUB213PDZ256r(1(Class<VR256X>) -> 0(Class<VR256X>))  [4.04;4.04]
		 Successful, latency: 4.04
	VFNMSUB213PDZ256r(2(Class<VR256X>) -> 0(Class<VR256X>))  [4.06;4.06]
		 Successful, latency: 4.06
	VFNMSUB213PDZ256r(3(Class<VR256X>) -> 0(Class<VR256X>))  [4.03;4.03]
		 Successful, latency: 4.03

-----VFNMSUB213PDZ256rb-----
	VFNMSUB213PDZ256rb(1(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFNMSUB213PDZ256rb(2(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFNMSUB213PDZ256rb(3(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VFNMSUB213PDZ256rbk-----
	VFNMSUB213PDZ256rbk(1(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFNMSUB213PDZ256rbk(3(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFNMSUB213PDZ256rbk(4(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VFNMSUB213PDZ256rbkz-----
	VFNMSUB213PDZ256rbkz(1(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFNMSUB213PDZ256rbkz(3(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFNMSUB213PDZ256rbkz(4(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VFNMSUB213PDZ256rk-----
	VFNMSUB213PDZ256rk(1(Class<VR256X>) -> 0(Class<VR256X>))  [4.08;4.08]
		 Successful, latency: 4.08
	VFNMSUB213PDZ256rk(3(Class<VR256X>) -> 0(Class<VR256X>))  [4.04;4.04]
		 Successful, latency: 4.04
	VFNMSUB213PDZ256rk(4(Class<VR256X>) -> 0(Class<VR256X>))  [4.03;4.03]
		 Successful, latency: 4.03

-----VFNMSUB213PDZ256rkz-----
	VFNMSUB213PDZ256rkz(1(Class<VR256X>) -> 0(Class<VR256X>))  [4.03;4.03]
		 Successful, latency: 4.03
	VFNMSUB213PDZ256rkz(3(Class<VR256X>) -> 0(Class<VR256X>))  [4.05;4.05]
		 Successful, latency: 4.05
	VFNMSUB213PDZ256rkz(4(Class<VR256X>) -> 0(Class<VR256X>))  [4.02;4.02]
		 Successful, latency: 4.02

-----VFNMSUB213PDZr-----
	VFNMSUB213PDZr(1(Class<VR512>) -> 0(Class<VR512>))  [4.03;4.03]
		 Successful, latency: 4.03
	VFNMSUB213PDZr(2(Class<VR512>) -> 0(Class<VR512>))  [4.05;4.05]
		 Successful, latency: 4.05
	VFNMSUB213PDZr(3(Class<VR512>) -> 0(Class<VR512>))  [4.04;4.04]
		 Successful, latency: 4.04

-----VFNMSUB213PDZrb-----
	VFNMSUB213PDZrb(1(Class<VR512>) -> 0(Class<VR512>))  [4.04;4.04]
		 Successful, latency: 4.04
	VFNMSUB213PDZrb(2(Class<VR512>) -> 0(Class<VR512>))  [4.02;4.02]
		 Successful, latency: 4.02
	VFNMSUB213PDZrb(3(Class<VR512>) -> 0(Class<VR512>))  [4.02;4.02]
		 Successful, latency: 4.02

-----VFNMSUB213PDZrbk-----
	VFNMSUB213PDZrbk(1(Class<VR512>) -> 0(Class<VR512>))  [4.03;4.03]
		 Successful, latency: 4.03
	VFNMSUB213PDZrbk(3(Class<VR512>) -> 0(Class<VR512>))  [4.03;4.03]
		 Successful, latency: 4.03
	VFNMSUB213PDZrbk(4(Class<VR512>) -> 0(Class<VR512>))  [4.07;4.07]
		 Successful, latency: 4.07

-----VFNMSUB213PDZrbkz-----
	VFNMSUB213PDZrbkz(1(Class<VR512>) -> 0(Class<VR512>))  [4.04;4.04]
		 Successful, latency: 4.04
	VFNMSUB213PDZrbkz(3(Class<VR512>) -> 0(Class<VR512>))  [4.04;4.04]
		 Successful, latency: 4.04
	VFNMSUB213PDZrbkz(4(Class<VR512>) -> 0(Class<VR512>))  [4.07;4.07]
		 Successful, latency: 4.07

-----VFNMSUB213PDZrk-----
	VFNMSUB213PDZrk(1(Class<VR512>) -> 0(Class<VR512>))  [4.03;4.03]
		 Successful, latency: 4.03
	VFNMSUB213PDZrk(3(Class<VR512>) -> 0(Class<VR512>))  [4.05;4.05]
		 Successful, latency: 4.05
	VFNMSUB213PDZrk(4(Class<VR512>) -> 0(Class<VR512>))  [4.04;4.04]
		 Successful, latency: 4.04

-----VFNMSUB213PDZrkz-----
	VFNMSUB213PDZrkz(1(Class<VR512>) -> 0(Class<VR512>))  [4.03;4.03]
		 Successful, latency: 4.03
	VFNMSUB213PDZrkz(3(Class<VR512>) -> 0(Class<VR512>))  [4.05;4.05]
		 Successful, latency: 4.05
	VFNMSUB213PDZrkz(4(Class<VR512>) -> 0(Class<VR512>))  [4.03;4.03]
		 Successful, latency: 4.03

-----VFNMSUB213PDr-----
	VFNMSUB213PDr(1(Class<VR128>) -> 0(Class<VR128>))  [4.05;4.05]
		 Successful, latency: 4.05
	VFNMSUB213PDr(2(Class<VR128>) -> 0(Class<VR128>))  [4.04;4.04]
		 Successful, latency: 4.04
	VFNMSUB213PDr(3(Class<VR128>) -> 0(Class<VR128>))  [4.04;4.04]
		 Successful, latency: 4.04

-----VFNMSUB213PHZ128r-----
	VFNMSUB213PHZ128r(1(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFNMSUB213PHZ128r(2(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFNMSUB213PHZ128r(3(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VFNMSUB213PHZ128rk-----
	VFNMSUB213PHZ128rk(1(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFNMSUB213PHZ128rk(3(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFNMSUB213PHZ128rk(4(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VFNMSUB213PHZ128rkz-----
	VFNMSUB213PHZ128rkz(1(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFNMSUB213PHZ128rkz(3(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFNMSUB213PHZ128rkz(4(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VFNMSUB213PHZ256r-----
	VFNMSUB213PHZ256r(1(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFNMSUB213PHZ256r(2(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFNMSUB213PHZ256r(3(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VFNMSUB213PHZ256rb-----
	VFNMSUB213PHZ256rb(1(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFNMSUB213PHZ256rb(2(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFNMSUB213PHZ256rb(3(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VFNMSUB213PHZ256rbk-----
	VFNMSUB213PHZ256rbk(1(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFNMSUB213PHZ256rbk(3(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFNMSUB213PHZ256rbk(4(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VFNMSUB213PHZ256rbkz-----
	VFNMSUB213PHZ256rbkz(1(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFNMSUB213PHZ256rbkz(3(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFNMSUB213PHZ256rbkz(4(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VFNMSUB213PHZ256rk-----
	VFNMSUB213PHZ256rk(1(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFNMSUB213PHZ256rk(3(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFNMSUB213PHZ256rk(4(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VFNMSUB213PHZ256rkz-----
	VFNMSUB213PHZ256rkz(1(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFNMSUB213PHZ256rkz(3(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFNMSUB213PHZ256rkz(4(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VFNMSUB213PHZr-----
	VFNMSUB213PHZr(1(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFNMSUB213PHZr(2(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFNMSUB213PHZr(3(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VFNMSUB213PHZrb-----
	VFNMSUB213PHZrb(1(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFNMSUB213PHZrb(2(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFNMSUB213PHZrb(3(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VFNMSUB213PHZrbk-----
	VFNMSUB213PHZrbk(1(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFNMSUB213PHZrbk(3(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFNMSUB213PHZrbk(4(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VFNMSUB213PHZrbkz-----
	VFNMSUB213PHZrbkz(1(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFNMSUB213PHZrbkz(3(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFNMSUB213PHZrbkz(4(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VFNMSUB213PHZrk-----
	VFNMSUB213PHZrk(1(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFNMSUB213PHZrk(3(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFNMSUB213PHZrk(4(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VFNMSUB213PHZrkz-----
	VFNMSUB213PHZrkz(1(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFNMSUB213PHZrkz(3(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFNMSUB213PHZrkz(4(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VFNMSUB213PSYr-----
	VFNMSUB213PSYr(1(Class<VR256>) -> 0(Class<VR256>))  [4.04;4.04]
		 Successful, latency: 4.04
	VFNMSUB213PSYr(2(Class<VR256>) -> 0(Class<VR256>))  [4.05;4.05]
		 Successful, latency: 4.05
	VFNMSUB213PSYr(3(Class<VR256>) -> 0(Class<VR256>))  [4.03;4.03]
		 Successful, latency: 4.03

-----VFNMSUB213PSZ128r-----
	VFNMSUB213PSZ128r(1(Class<VR128X>) -> 0(Class<VR128X>))  [4.03;4.03]
		 Successful, latency: 4.03
	VFNMSUB213PSZ128r(2(Class<VR128X>) -> 0(Class<VR128X>))  [4.03;4.03]
		 Successful, latency: 4.03
	VFNMSUB213PSZ128r(3(Class<VR128X>) -> 0(Class<VR128X>))  [4.03;4.03]
		 Successful, latency: 4.03

-----VFNMSUB213PSZ128rk-----
	VFNMSUB213PSZ128rk(1(Class<VR128X>) -> 0(Class<VR128X>))  [4.05;4.05]
		 Successful, latency: 4.05
	VFNMSUB213PSZ128rk(3(Class<VR128X>) -> 0(Class<VR128X>))  [4.04;4.04]
		 Successful, latency: 4.04
	VFNMSUB213PSZ128rk(4(Class<VR128X>) -> 0(Class<VR128X>))  [4.03;4.03]
		 Successful, latency: 4.03

-----VFNMSUB213PSZ128rkz-----
	VFNMSUB213PSZ128rkz(1(Class<VR128X>) -> 0(Class<VR128X>))  [4.03;4.03]
		 Successful, latency: 4.03
	VFNMSUB213PSZ128rkz(3(Class<VR128X>) -> 0(Class<VR128X>))  [4.04;4.04]
		 Successful, latency: 4.04
	VFNMSUB213PSZ128rkz(4(Class<VR128X>) -> 0(Class<VR128X>))  [4.03;4.03]
		 Successful, latency: 4.03

-----VFNMSUB213PSZ256r-----
	VFNMSUB213PSZ256r(1(Class<VR256X>) -> 0(Class<VR256X>))  [4.04;4.04]
		 Successful, latency: 4.04
	VFNMSUB213PSZ256r(2(Class<VR256X>) -> 0(Class<VR256X>))  [4.05;4.05]
		 Successful, latency: 4.05
	VFNMSUB213PSZ256r(3(Class<VR256X>) -> 0(Class<VR256X>))  [4.05;4.05]
		 Successful, latency: 4.05

-----VFNMSUB213PSZ256rb-----
	VFNMSUB213PSZ256rb(1(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFNMSUB213PSZ256rb(2(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFNMSUB213PSZ256rb(3(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VFNMSUB213PSZ256rbk-----
	VFNMSUB213PSZ256rbk(1(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFNMSUB213PSZ256rbk(3(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFNMSUB213PSZ256rbk(4(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VFNMSUB213PSZ256rbkz-----
	VFNMSUB213PSZ256rbkz(1(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFNMSUB213PSZ256rbkz(3(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFNMSUB213PSZ256rbkz(4(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VFNMSUB213PSZ256rk-----
	VFNMSUB213PSZ256rk(1(Class<VR256X>) -> 0(Class<VR256X>))  [4.03;4.03]
		 Successful, latency: 4.03
	VFNMSUB213PSZ256rk(3(Class<VR256X>) -> 0(Class<VR256X>))  [4.07;4.07]
		 Successful, latency: 4.07
	VFNMSUB213PSZ256rk(4(Class<VR256X>) -> 0(Class<VR256X>))  [4.03;4.03]
		 Successful, latency: 4.03

-----VFNMSUB213PSZ256rkz-----
	VFNMSUB213PSZ256rkz(1(Class<VR256X>) -> 0(Class<VR256X>))  [4.07;4.07]
		 Successful, latency: 4.07
	VFNMSUB213PSZ256rkz(3(Class<VR256X>) -> 0(Class<VR256X>))  [4.01;4.01]
		 Successful, latency: 4.01
	VFNMSUB213PSZ256rkz(4(Class<VR256X>) -> 0(Class<VR256X>))  [4.03;4.03]
		 Successful, latency: 4.03

-----VFNMSUB213PSZr-----
	VFNMSUB213PSZr(1(Class<VR512>) -> 0(Class<VR512>))  [4.03;4.03]
		 Successful, latency: 4.03
	VFNMSUB213PSZr(2(Class<VR512>) -> 0(Class<VR512>))  [4.04;4.04]
		 Successful, latency: 4.04
	VFNMSUB213PSZr(3(Class<VR512>) -> 0(Class<VR512>))  [4.04;4.04]
		 Successful, latency: 4.04

-----VFNMSUB213PSZrb-----
	VFNMSUB213PSZrb(1(Class<VR512>) -> 0(Class<VR512>))  [4.03;4.03]
		 Successful, latency: 4.03
	VFNMSUB213PSZrb(2(Class<VR512>) -> 0(Class<VR512>))  [4.05;4.05]
		 Successful, latency: 4.05
	VFNMSUB213PSZrb(3(Class<VR512>) -> 0(Class<VR512>))  [4.05;4.05]
		 Successful, latency: 4.05

-----VFNMSUB213PSZrbk-----
	VFNMSUB213PSZrbk(1(Class<VR512>) -> 0(Class<VR512>))  [4.04;4.04]
		 Successful, latency: 4.04
	VFNMSUB213PSZrbk(3(Class<VR512>) -> 0(Class<VR512>))  [4.05;4.05]
		 Successful, latency: 4.05
	VFNMSUB213PSZrbk(4(Class<VR512>) -> 0(Class<VR512>))  [4.05;4.05]
		 Successful, latency: 4.05

-----VFNMSUB213PSZrbkz-----
	VFNMSUB213PSZrbkz(1(Class<VR512>) -> 0(Class<VR512>))  [4.03;4.03]
		 Successful, latency: 4.03
	VFNMSUB213PSZrbkz(3(Class<VR512>) -> 0(Class<VR512>))  [4.04;4.04]
		 Successful, latency: 4.04
	VFNMSUB213PSZrbkz(4(Class<VR512>) -> 0(Class<VR512>))  [4.03;4.03]
		 Successful, latency: 4.03

-----VFNMSUB213PSZrk-----
	VFNMSUB213PSZrk(1(Class<VR512>) -> 0(Class<VR512>))  [4.05;4.05]
		 Successful, latency: 4.05
	VFNMSUB213PSZrk(3(Class<VR512>) -> 0(Class<VR512>))  [4.05;4.05]
		 Successful, latency: 4.05
	VFNMSUB213PSZrk(4(Class<VR512>) -> 0(Class<VR512>))  [4.06;4.06]
		 Successful, latency: 4.06

-----VFNMSUB213PSZrkz-----
	VFNMSUB213PSZrkz(1(Class<VR512>) -> 0(Class<VR512>))  [4.03;4.03]
		 Successful, latency: 4.03
	VFNMSUB213PSZrkz(3(Class<VR512>) -> 0(Class<VR512>))  [4.04;4.04]
		 Successful, latency: 4.04
	VFNMSUB213PSZrkz(4(Class<VR512>) -> 0(Class<VR512>))  [4.02;4.02]
		 Successful, latency: 4.02

-----VFNMSUB213PSr-----
	VFNMSUB213PSr(1(Class<VR128>) -> 0(Class<VR128>))  [4.03;4.03]
		 Successful, latency: 4.03
	VFNMSUB213PSr(2(Class<VR128>) -> 0(Class<VR128>))  [4.03;4.03]
		 Successful, latency: 4.03
	VFNMSUB213PSr(3(Class<VR128>) -> 0(Class<VR128>))  [4.04;4.04]
		 Successful, latency: 4.04

-----VFNMSUB213SDZr-----
	VFNMSUB213SDZr(1(Class<FR64X>) -> 0(Class<FR64X>))  [4.03;4.03]
		 Successful, latency: 4.03
	VFNMSUB213SDZr(2(Class<FR64X>) -> 0(Class<FR64X>))  [4.04;4.04]
		 Successful, latency: 4.04
	VFNMSUB213SDZr(3(Class<FR64X>) -> 0(Class<FR64X>))  [4.04;4.04]
		 Successful, latency: 4.04

-----VFNMSUB213SDZr_Int-----
	VFNMSUB213SDZr_Int(1(Class<VR128X>) -> 0(Class<VR128X>))  [4.03;4.03]
		 Successful, latency: 4.03
	VFNMSUB213SDZr_Int(2(Class<VR128X>) -> 0(Class<VR128X>))  [4.03;4.03]
		 Successful, latency: 4.03
	VFNMSUB213SDZr_Int(3(Class<VR128X>) -> 0(Class<VR128X>))  [4.04;4.04]
		 Successful, latency: 4.04

-----VFNMSUB213SDZrb-----
	VFNMSUB213SDZrb(1(Class<FR64X>) -> 0(Class<FR64X>))  [4.04;4.04]
		 Successful, latency: 4.04
	VFNMSUB213SDZrb(2(Class<FR64X>) -> 0(Class<FR64X>))  [4.02;4.02]
		 Successful, latency: 4.02
	VFNMSUB213SDZrb(3(Class<FR64X>) -> 0(Class<FR64X>))  [4.04;4.04]
		 Successful, latency: 4.04

-----VFNMSUB213SDZrb_Int-----
	VFNMSUB213SDZrb_Int(1(Class<VR128X>) -> 0(Class<VR128X>))  [4.02;4.02]
		 Successful, latency: 4.02
	VFNMSUB213SDZrb_Int(2(Class<VR128X>) -> 0(Class<VR128X>))  [4.03;4.03]
		 Successful, latency: 4.03
	VFNMSUB213SDZrb_Int(3(Class<VR128X>) -> 0(Class<VR128X>))  [4.03;4.03]
		 Successful, latency: 4.03

-----VFNMSUB213SDZrbk_Int-----
	VFNMSUB213SDZrbk_Int(1(Class<VR128X>) -> 0(Class<VR128X>))  [4.04;4.04]
		 Successful, latency: 4.04
	VFNMSUB213SDZrbk_Int(3(Class<VR128X>) -> 0(Class<VR128X>))  [4.03;4.03]
		 Successful, latency: 4.03
	VFNMSUB213SDZrbk_Int(4(Class<VR128X>) -> 0(Class<VR128X>))  [4.04;4.04]
		 Successful, latency: 4.04

-----VFNMSUB213SDZrbkz_Int-----
	VFNMSUB213SDZrbkz_Int(1(Class<VR128X>) -> 0(Class<VR128X>))  [4.04;4.04]
		 Successful, latency: 4.04
	VFNMSUB213SDZrbkz_Int(3(Class<VR128X>) -> 0(Class<VR128X>))  [4.07;4.07]
		 Successful, latency: 4.07
	VFNMSUB213SDZrbkz_Int(4(Class<VR128X>) -> 0(Class<VR128X>))  [4.04;4.04]
		 Successful, latency: 4.04

-----VFNMSUB213SDZrk_Int-----
	VFNMSUB213SDZrk_Int(1(Class<VR128X>) -> 0(Class<VR128X>))  [4.05;4.05]
		 Successful, latency: 4.05
	VFNMSUB213SDZrk_Int(3(Class<VR128X>) -> 0(Class<VR128X>))  [4.04;4.04]
		 Successful, latency: 4.04
	VFNMSUB213SDZrk_Int(4(Class<VR128X>) -> 0(Class<VR128X>))  [4.05;4.05]
		 Successful, latency: 4.05

-----VFNMSUB213SDZrkz_Int-----
	VFNMSUB213SDZrkz_Int(1(Class<VR128X>) -> 0(Class<VR128X>))  [4.04;4.04]
		 Successful, latency: 4.04
	VFNMSUB213SDZrkz_Int(3(Class<VR128X>) -> 0(Class<VR128X>))  [4.04;4.04]
		 Successful, latency: 4.04
	VFNMSUB213SDZrkz_Int(4(Class<VR128X>) -> 0(Class<VR128X>))  [4.03;4.03]
		 Successful, latency: 4.03

-----VFNMSUB213SDr-----
	VFNMSUB213SDr(1(Class<FR64>) -> 0(Class<FR64>))  [4.04;4.04]
		 Successful, latency: 4.04
	VFNMSUB213SDr(2(Class<FR64>) -> 0(Class<FR64>))  [4.03;4.03]
		 Successful, latency: 4.03
	VFNMSUB213SDr(3(Class<FR64>) -> 0(Class<FR64>))  [4.03;4.03]
		 Successful, latency: 4.03

-----VFNMSUB213SDr_Int-----
	VFNMSUB213SDr_Int(1(Class<VR128>) -> 0(Class<VR128>))  [4.03;4.03]
		 Successful, latency: 4.03
	VFNMSUB213SDr_Int(2(Class<VR128>) -> 0(Class<VR128>))  [4.07;4.07]
		 Successful, latency: 4.07
	VFNMSUB213SDr_Int(3(Class<VR128>) -> 0(Class<VR128>))  [4.03;4.03]
		 Successful, latency: 4.03

-----VFNMSUB213SHZr-----
	VFNMSUB213SHZr(1(Class<FR16X>) -> 0(Class<FR16X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFNMSUB213SHZr(2(Class<FR16X>) -> 0(Class<FR16X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFNMSUB213SHZr(3(Class<FR16X>) -> 0(Class<FR16X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VFNMSUB213SHZr_Int-----
	VFNMSUB213SHZr_Int(1(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFNMSUB213SHZr_Int(2(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFNMSUB213SHZr_Int(3(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VFNMSUB213SHZrb-----
	VFNMSUB213SHZrb(1(Class<FR16X>) -> 0(Class<FR16X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFNMSUB213SHZrb(2(Class<FR16X>) -> 0(Class<FR16X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFNMSUB213SHZrb(3(Class<FR16X>) -> 0(Class<FR16X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VFNMSUB213SHZrb_Int-----
	VFNMSUB213SHZrb_Int(1(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFNMSUB213SHZrb_Int(2(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFNMSUB213SHZrb_Int(3(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VFNMSUB213SHZrbk_Int-----
	VFNMSUB213SHZrbk_Int(1(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFNMSUB213SHZrbk_Int(3(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFNMSUB213SHZrbk_Int(4(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VFNMSUB213SHZrbkz_Int-----
	VFNMSUB213SHZrbkz_Int(1(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFNMSUB213SHZrbkz_Int(3(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFNMSUB213SHZrbkz_Int(4(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VFNMSUB213SHZrk_Int-----
	VFNMSUB213SHZrk_Int(1(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFNMSUB213SHZrk_Int(3(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFNMSUB213SHZrk_Int(4(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VFNMSUB213SHZrkz_Int-----
	VFNMSUB213SHZrkz_Int(1(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFNMSUB213SHZrkz_Int(3(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFNMSUB213SHZrkz_Int(4(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VFNMSUB213SSZr-----
	VFNMSUB213SSZr(1(Class<FR32X>) -> 0(Class<FR32X>))  [4.03;4.03]
		 Successful, latency: 4.03
	VFNMSUB213SSZr(2(Class<FR32X>) -> 0(Class<FR32X>))  [4.04;4.04]
		 Successful, latency: 4.04
	VFNMSUB213SSZr(3(Class<FR32X>) -> 0(Class<FR32X>))  [4.03;4.03]
		 Successful, latency: 4.03

-----VFNMSUB213SSZr_Int-----
	VFNMSUB213SSZr_Int(1(Class<VR128X>) -> 0(Class<VR128X>))  [4.03;4.03]
		 Successful, latency: 4.03
	VFNMSUB213SSZr_Int(2(Class<VR128X>) -> 0(Class<VR128X>))  [4.03;4.03]
		 Successful, latency: 4.03
	VFNMSUB213SSZr_Int(3(Class<VR128X>) -> 0(Class<VR128X>))  [4.09;4.09]
		 Successful, latency: 4.09

-----VFNMSUB213SSZrb-----
	VFNMSUB213SSZrb(1(Class<FR32X>) -> 0(Class<FR32X>))  [4.03;4.03]
		 Successful, latency: 4.03
	VFNMSUB213SSZrb(2(Class<FR32X>) -> 0(Class<FR32X>))  [4.03;4.03]
		 Successful, latency: 4.03
	VFNMSUB213SSZrb(3(Class<FR32X>) -> 0(Class<FR32X>))  [4.04;4.04]
		 Successful, latency: 4.04

-----VFNMSUB213SSZrb_Int-----
	VFNMSUB213SSZrb_Int(1(Class<VR128X>) -> 0(Class<VR128X>))  [4.03;4.03]
		 Successful, latency: 4.03
	VFNMSUB213SSZrb_Int(2(Class<VR128X>) -> 0(Class<VR128X>))  [4.04;4.04]
		 Successful, latency: 4.04
	VFNMSUB213SSZrb_Int(3(Class<VR128X>) -> 0(Class<VR128X>))  [4.04;4.04]
		 Successful, latency: 4.04

-----VFNMSUB213SSZrbk_Int-----
	VFNMSUB213SSZrbk_Int(1(Class<VR128X>) -> 0(Class<VR128X>))  [4.03;4.03]
		 Successful, latency: 4.03
	VFNMSUB213SSZrbk_Int(3(Class<VR128X>) -> 0(Class<VR128X>))  [4.05;4.05]
		 Successful, latency: 4.05
	VFNMSUB213SSZrbk_Int(4(Class<VR128X>) -> 0(Class<VR128X>))  [4.03;4.03]
		 Successful, latency: 4.03

-----VFNMSUB213SSZrbkz_Int-----
	VFNMSUB213SSZrbkz_Int(1(Class<VR128X>) -> 0(Class<VR128X>))  [4.07;4.07]
		 Successful, latency: 4.07
	VFNMSUB213SSZrbkz_Int(3(Class<VR128X>) -> 0(Class<VR128X>))  [4.03;4.03]
		 Successful, latency: 4.03
	VFNMSUB213SSZrbkz_Int(4(Class<VR128X>) -> 0(Class<VR128X>))  [4.05;4.05]
		 Successful, latency: 4.05

-----VFNMSUB213SSZrk_Int-----
	VFNMSUB213SSZrk_Int(1(Class<VR128X>) -> 0(Class<VR128X>))  [4.05;4.05]
		 Successful, latency: 4.05
	VFNMSUB213SSZrk_Int(3(Class<VR128X>) -> 0(Class<VR128X>))  [4.04;4.04]
		 Successful, latency: 4.04
	VFNMSUB213SSZrk_Int(4(Class<VR128X>) -> 0(Class<VR128X>))  [4.05;4.05]
		 Successful, latency: 4.05

-----VFNMSUB213SSZrkz_Int-----
	VFNMSUB213SSZrkz_Int(1(Class<VR128X>) -> 0(Class<VR128X>))  [4.03;4.03]
		 Successful, latency: 4.03
	VFNMSUB213SSZrkz_Int(3(Class<VR128X>) -> 0(Class<VR128X>))  [4.07;4.07]
		 Successful, latency: 4.07
	VFNMSUB213SSZrkz_Int(4(Class<VR128X>) -> 0(Class<VR128X>))  [4.03;4.03]
		 Successful, latency: 4.03

-----VFNMSUB213SSr-----
	VFNMSUB213SSr(1(Class<FR32>) -> 0(Class<FR32>))  [4.04;4.04]
		 Successful, latency: 4.04
	VFNMSUB213SSr(2(Class<FR32>) -> 0(Class<FR32>))  [4.06;4.06]
		 Successful, latency: 4.06
	VFNMSUB213SSr(3(Class<FR32>) -> 0(Class<FR32>))  [4.04;4.04]
		 Successful, latency: 4.04

-----VFNMSUB213SSr_Int-----
	VFNMSUB213SSr_Int(1(Class<VR128>) -> 0(Class<VR128>))  [4.06;4.06]
		 Successful, latency: 4.06
	VFNMSUB213SSr_Int(2(Class<VR128>) -> 0(Class<VR128>))  [4.04;4.04]
		 Successful, latency: 4.04
	VFNMSUB213SSr_Int(3(Class<VR128>) -> 0(Class<VR128>))  [4.03;4.03]
		 Successful, latency: 4.03

-----VFNMSUB231BF16Z128r-----
	VFNMSUB231BF16Z128r(1(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFNMSUB231BF16Z128r(2(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFNMSUB231BF16Z128r(3(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VFNMSUB231BF16Z128rk-----
	VFNMSUB231BF16Z128rk(1(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFNMSUB231BF16Z128rk(3(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFNMSUB231BF16Z128rk(4(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VFNMSUB231BF16Z128rkz-----
	VFNMSUB231BF16Z128rkz(1(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFNMSUB231BF16Z128rkz(3(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFNMSUB231BF16Z128rkz(4(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VFNMSUB231BF16Z256r-----
	VFNMSUB231BF16Z256r(1(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFNMSUB231BF16Z256r(2(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFNMSUB231BF16Z256r(3(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VFNMSUB231BF16Z256rk-----
	VFNMSUB231BF16Z256rk(1(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFNMSUB231BF16Z256rk(3(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFNMSUB231BF16Z256rk(4(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VFNMSUB231BF16Z256rkz-----
	VFNMSUB231BF16Z256rkz(1(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFNMSUB231BF16Z256rkz(3(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFNMSUB231BF16Z256rkz(4(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VFNMSUB231BF16Zr-----
	VFNMSUB231BF16Zr(1(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFNMSUB231BF16Zr(2(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFNMSUB231BF16Zr(3(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VFNMSUB231BF16Zrk-----
	VFNMSUB231BF16Zrk(1(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFNMSUB231BF16Zrk(3(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFNMSUB231BF16Zrk(4(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VFNMSUB231BF16Zrkz-----
	VFNMSUB231BF16Zrkz(1(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFNMSUB231BF16Zrkz(3(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFNMSUB231BF16Zrkz(4(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VFNMSUB231PDYr-----
	VFNMSUB231PDYr(1(Class<VR256>) -> 0(Class<VR256>))  [4.03;4.03]
		 Successful, latency: 4.03
	VFNMSUB231PDYr(2(Class<VR256>) -> 0(Class<VR256>))  [4.03;4.03]
		 Successful, latency: 4.03
	VFNMSUB231PDYr(3(Class<VR256>) -> 0(Class<VR256>))  [4.03;4.03]
		 Successful, latency: 4.03

-----VFNMSUB231PDZ128r-----
	VFNMSUB231PDZ128r(1(Class<VR128X>) -> 0(Class<VR128X>))  [4.05;4.05]
		 Successful, latency: 4.05
	VFNMSUB231PDZ128r(2(Class<VR128X>) -> 0(Class<VR128X>))  [4.05;4.05]
		 Successful, latency: 4.05
	VFNMSUB231PDZ128r(3(Class<VR128X>) -> 0(Class<VR128X>))  [4.03;4.03]
		 Successful, latency: 4.03

-----VFNMSUB231PDZ128rk-----
	VFNMSUB231PDZ128rk(1(Class<VR128X>) -> 0(Class<VR128X>))  [4.03;4.03]
		 Successful, latency: 4.03
	VFNMSUB231PDZ128rk(3(Class<VR128X>) -> 0(Class<VR128X>))  [4.03;4.03]
		 Successful, latency: 4.03
	VFNMSUB231PDZ128rk(4(Class<VR128X>) -> 0(Class<VR128X>))  [4.03;4.03]
		 Successful, latency: 4.03

-----VFNMSUB231PDZ128rkz-----
	VFNMSUB231PDZ128rkz(1(Class<VR128X>) -> 0(Class<VR128X>))  [4.04;4.04]
		 Successful, latency: 4.04
	VFNMSUB231PDZ128rkz(3(Class<VR128X>) -> 0(Class<VR128X>))  [4.03;4.03]
		 Successful, latency: 4.03
	VFNMSUB231PDZ128rkz(4(Class<VR128X>) -> 0(Class<VR128X>))  [4.04;4.04]
		 Successful, latency: 4.04

-----VFNMSUB231PDZ256r-----
	VFNMSUB231PDZ256r(1(Class<VR256X>) -> 0(Class<VR256X>))  [4.02;4.02]
		 Successful, latency: 4.02
	VFNMSUB231PDZ256r(2(Class<VR256X>) -> 0(Class<VR256X>))  [4.05;4.05]
		 Successful, latency: 4.05
	VFNMSUB231PDZ256r(3(Class<VR256X>) -> 0(Class<VR256X>))  [4.03;4.03]
		 Successful, latency: 4.03

-----VFNMSUB231PDZ256rb-----
	VFNMSUB231PDZ256rb(1(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFNMSUB231PDZ256rb(2(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFNMSUB231PDZ256rb(3(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VFNMSUB231PDZ256rbk-----
	VFNMSUB231PDZ256rbk(1(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFNMSUB231PDZ256rbk(3(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFNMSUB231PDZ256rbk(4(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VFNMSUB231PDZ256rbkz-----
	VFNMSUB231PDZ256rbkz(1(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFNMSUB231PDZ256rbkz(3(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFNMSUB231PDZ256rbkz(4(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VFNMSUB231PDZ256rk-----
	VFNMSUB231PDZ256rk(1(Class<VR256X>) -> 0(Class<VR256X>))  [4.04;4.04]
		 Successful, latency: 4.04
	VFNMSUB231PDZ256rk(3(Class<VR256X>) -> 0(Class<VR256X>))  [4.04;4.04]
		 Successful, latency: 4.04
	VFNMSUB231PDZ256rk(4(Class<VR256X>) -> 0(Class<VR256X>))  [4.03;4.03]
		 Successful, latency: 4.03

-----VFNMSUB231PDZ256rkz-----
	VFNMSUB231PDZ256rkz(1(Class<VR256X>) -> 0(Class<VR256X>))  [4.04;4.04]
		 Successful, latency: 4.04
	VFNMSUB231PDZ256rkz(3(Class<VR256X>) -> 0(Class<VR256X>))  [4.04;4.04]
		 Successful, latency: 4.04
	VFNMSUB231PDZ256rkz(4(Class<VR256X>) -> 0(Class<VR256X>))  [4.04;4.04]
		 Successful, latency: 4.04

-----VFNMSUB231PDZr-----
	VFNMSUB231PDZr(1(Class<VR512>) -> 0(Class<VR512>))  [4.04;4.04]
		 Successful, latency: 4.04
	VFNMSUB231PDZr(2(Class<VR512>) -> 0(Class<VR512>))  [4.05;4.05]
		 Successful, latency: 4.05
	VFNMSUB231PDZr(3(Class<VR512>) -> 0(Class<VR512>))  [4.04;4.04]
		 Successful, latency: 4.04

-----VFNMSUB231PDZrb-----
	VFNMSUB231PDZrb(1(Class<VR512>) -> 0(Class<VR512>))  [4.03;4.03]
		 Successful, latency: 4.03
	VFNMSUB231PDZrb(2(Class<VR512>) -> 0(Class<VR512>))  [4.04;4.04]
		 Successful, latency: 4.04
	VFNMSUB231PDZrb(3(Class<VR512>) -> 0(Class<VR512>))  [4.05;4.05]
		 Successful, latency: 4.05

-----VFNMSUB231PDZrbk-----
	VFNMSUB231PDZrbk(1(Class<VR512>) -> 0(Class<VR512>))  [4.04;4.04]
		 Successful, latency: 4.04
	VFNMSUB231PDZrbk(3(Class<VR512>) -> 0(Class<VR512>))  [4.04;4.04]
		 Successful, latency: 4.04
	VFNMSUB231PDZrbk(4(Class<VR512>) -> 0(Class<VR512>))  [4.03;4.03]
		 Successful, latency: 4.03

-----VFNMSUB231PDZrbkz-----
	VFNMSUB231PDZrbkz(1(Class<VR512>) -> 0(Class<VR512>))  [4.03;4.03]
		 Successful, latency: 4.03
	VFNMSUB231PDZrbkz(3(Class<VR512>) -> 0(Class<VR512>))  [4.05;4.05]
		 Successful, latency: 4.05
	VFNMSUB231PDZrbkz(4(Class<VR512>) -> 0(Class<VR512>))  [4.03;4.03]
		 Successful, latency: 4.03

-----VFNMSUB231PDZrk-----
	VFNMSUB231PDZrk(1(Class<VR512>) -> 0(Class<VR512>))  [4.03;4.03]
		 Successful, latency: 4.03
	VFNMSUB231PDZrk(3(Class<VR512>) -> 0(Class<VR512>))  [4.05;4.05]
		 Successful, latency: 4.05
	VFNMSUB231PDZrk(4(Class<VR512>) -> 0(Class<VR512>))  [4.03;4.03]
		 Successful, latency: 4.03

-----VFNMSUB231PDZrkz-----
	VFNMSUB231PDZrkz(1(Class<VR512>) -> 0(Class<VR512>))  [4.05;4.05]
		 Successful, latency: 4.05
	VFNMSUB231PDZrkz(3(Class<VR512>) -> 0(Class<VR512>))  [4.04;4.04]
		 Successful, latency: 4.04
	VFNMSUB231PDZrkz(4(Class<VR512>) -> 0(Class<VR512>))  [4.03;4.03]
		 Successful, latency: 4.03

-----VFNMSUB231PDr-----
	VFNMSUB231PDr(1(Class<VR128>) -> 0(Class<VR128>))  [4.02;4.02]
		 Successful, latency: 4.02
	VFNMSUB231PDr(2(Class<VR128>) -> 0(Class<VR128>))  [4.03;4.03]
		 Successful, latency: 4.03
	VFNMSUB231PDr(3(Class<VR128>) -> 0(Class<VR128>))  [4.05;4.05]
		 Successful, latency: 4.05

-----VFNMSUB231PHZ128r-----
	VFNMSUB231PHZ128r(1(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFNMSUB231PHZ128r(2(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFNMSUB231PHZ128r(3(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VFNMSUB231PHZ128rk-----
	VFNMSUB231PHZ128rk(1(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFNMSUB231PHZ128rk(3(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFNMSUB231PHZ128rk(4(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VFNMSUB231PHZ128rkz-----
	VFNMSUB231PHZ128rkz(1(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFNMSUB231PHZ128rkz(3(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFNMSUB231PHZ128rkz(4(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VFNMSUB231PHZ256r-----
	VFNMSUB231PHZ256r(1(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFNMSUB231PHZ256r(2(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFNMSUB231PHZ256r(3(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VFNMSUB231PHZ256rb-----
	VFNMSUB231PHZ256rb(1(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFNMSUB231PHZ256rb(2(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFNMSUB231PHZ256rb(3(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VFNMSUB231PHZ256rbk-----
	VFNMSUB231PHZ256rbk(1(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFNMSUB231PHZ256rbk(3(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFNMSUB231PHZ256rbk(4(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VFNMSUB231PHZ256rbkz-----
	VFNMSUB231PHZ256rbkz(1(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFNMSUB231PHZ256rbkz(3(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFNMSUB231PHZ256rbkz(4(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VFNMSUB231PHZ256rk-----
	VFNMSUB231PHZ256rk(1(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFNMSUB231PHZ256rk(3(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFNMSUB231PHZ256rk(4(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VFNMSUB231PHZ256rkz-----
	VFNMSUB231PHZ256rkz(1(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFNMSUB231PHZ256rkz(3(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFNMSUB231PHZ256rkz(4(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VFNMSUB231PHZr-----
	VFNMSUB231PHZr(1(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFNMSUB231PHZr(2(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFNMSUB231PHZr(3(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VFNMSUB231PHZrb-----
	VFNMSUB231PHZrb(1(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFNMSUB231PHZrb(2(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFNMSUB231PHZrb(3(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VFNMSUB231PHZrbk-----
	VFNMSUB231PHZrbk(1(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFNMSUB231PHZrbk(3(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFNMSUB231PHZrbk(4(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VFNMSUB231PHZrbkz-----
	VFNMSUB231PHZrbkz(1(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFNMSUB231PHZrbkz(3(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFNMSUB231PHZrbkz(4(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VFNMSUB231PHZrk-----
	VFNMSUB231PHZrk(1(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFNMSUB231PHZrk(3(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFNMSUB231PHZrk(4(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VFNMSUB231PHZrkz-----
	VFNMSUB231PHZrkz(1(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFNMSUB231PHZrkz(3(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFNMSUB231PHZrkz(4(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VFNMSUB231PSYr-----
	VFNMSUB231PSYr(1(Class<VR256>) -> 0(Class<VR256>))  [4.03;4.03]
		 Successful, latency: 4.03
	VFNMSUB231PSYr(2(Class<VR256>) -> 0(Class<VR256>))  [4.04;4.04]
		 Successful, latency: 4.04
	VFNMSUB231PSYr(3(Class<VR256>) -> 0(Class<VR256>))  [4.03;4.03]
		 Successful, latency: 4.03

-----VFNMSUB231PSZ128r-----
	VFNMSUB231PSZ128r(1(Class<VR128X>) -> 0(Class<VR128X>))  [4.04;4.04]
		 Successful, latency: 4.04
	VFNMSUB231PSZ128r(2(Class<VR128X>) -> 0(Class<VR128X>))  [4.03;4.03]
		 Successful, latency: 4.03
	VFNMSUB231PSZ128r(3(Class<VR128X>) -> 0(Class<VR128X>))  [4.05;4.05]
		 Successful, latency: 4.05

-----VFNMSUB231PSZ128rk-----
	VFNMSUB231PSZ128rk(1(Class<VR128X>) -> 0(Class<VR128X>))  [4.05;4.05]
		 Successful, latency: 4.05
	VFNMSUB231PSZ128rk(3(Class<VR128X>) -> 0(Class<VR128X>))  [4.03;4.03]
		 Successful, latency: 4.03
	VFNMSUB231PSZ128rk(4(Class<VR128X>) -> 0(Class<VR128X>))  [4.05;4.05]
		 Successful, latency: 4.05

-----VFNMSUB231PSZ128rkz-----
	VFNMSUB231PSZ128rkz(1(Class<VR128X>) -> 0(Class<VR128X>))  [4.05;4.05]
		 Successful, latency: 4.05
	VFNMSUB231PSZ128rkz(3(Class<VR128X>) -> 0(Class<VR128X>))  [4.04;4.04]
		 Successful, latency: 4.04
	VFNMSUB231PSZ128rkz(4(Class<VR128X>) -> 0(Class<VR128X>))  [4.03;4.03]
		 Successful, latency: 4.03

-----VFNMSUB231PSZ256r-----
	VFNMSUB231PSZ256r(1(Class<VR256X>) -> 0(Class<VR256X>))  [4.04;4.04]
		 Successful, latency: 4.04
	VFNMSUB231PSZ256r(2(Class<VR256X>) -> 0(Class<VR256X>))  [4.04;4.04]
		 Successful, latency: 4.04
	VFNMSUB231PSZ256r(3(Class<VR256X>) -> 0(Class<VR256X>))  [4.05;4.05]
		 Successful, latency: 4.05

-----VFNMSUB231PSZ256rb-----
	VFNMSUB231PSZ256rb(1(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFNMSUB231PSZ256rb(2(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFNMSUB231PSZ256rb(3(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VFNMSUB231PSZ256rbk-----
	VFNMSUB231PSZ256rbk(1(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFNMSUB231PSZ256rbk(3(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFNMSUB231PSZ256rbk(4(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VFNMSUB231PSZ256rbkz-----
	VFNMSUB231PSZ256rbkz(1(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFNMSUB231PSZ256rbkz(3(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFNMSUB231PSZ256rbkz(4(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VFNMSUB231PSZ256rk-----
	VFNMSUB231PSZ256rk(1(Class<VR256X>) -> 0(Class<VR256X>))  [4.06;4.06]
		 Successful, latency: 4.06
	VFNMSUB231PSZ256rk(3(Class<VR256X>) -> 0(Class<VR256X>))  [4.03;4.03]
		 Successful, latency: 4.03
	VFNMSUB231PSZ256rk(4(Class<VR256X>) -> 0(Class<VR256X>))  [4.05;4.05]
		 Successful, latency: 4.05

-----VFNMSUB231PSZ256rkz-----
	VFNMSUB231PSZ256rkz(1(Class<VR256X>) -> 0(Class<VR256X>))  [4.04;4.04]
		 Successful, latency: 4.04
	VFNMSUB231PSZ256rkz(3(Class<VR256X>) -> 0(Class<VR256X>))  [4.03;4.03]
		 Successful, latency: 4.03
	VFNMSUB231PSZ256rkz(4(Class<VR256X>) -> 0(Class<VR256X>))  [4.03;4.03]
		 Successful, latency: 4.03

-----VFNMSUB231PSZr-----
	VFNMSUB231PSZr(1(Class<VR512>) -> 0(Class<VR512>))  [4.03;4.03]
		 Successful, latency: 4.03
	VFNMSUB231PSZr(2(Class<VR512>) -> 0(Class<VR512>))  [4.03;4.03]
		 Successful, latency: 4.03
	VFNMSUB231PSZr(3(Class<VR512>) -> 0(Class<VR512>))  [4.04;4.04]
		 Successful, latency: 4.04

-----VFNMSUB231PSZrb-----
	VFNMSUB231PSZrb(1(Class<VR512>) -> 0(Class<VR512>))  [4.04;4.04]
		 Successful, latency: 4.04
	VFNMSUB231PSZrb(2(Class<VR512>) -> 0(Class<VR512>))  [4.04;4.04]
		 Successful, latency: 4.04
	VFNMSUB231PSZrb(3(Class<VR512>) -> 0(Class<VR512>))  [4.05;4.05]
		 Successful, latency: 4.05

-----VFNMSUB231PSZrbk-----
	VFNMSUB231PSZrbk(1(Class<VR512>) -> 0(Class<VR512>))  [4.03;4.03]
		 Successful, latency: 4.03
	VFNMSUB231PSZrbk(3(Class<VR512>) -> 0(Class<VR512>))  [4.07;4.07]
		 Successful, latency: 4.07
	VFNMSUB231PSZrbk(4(Class<VR512>) -> 0(Class<VR512>))  [4.03;4.03]
		 Successful, latency: 4.03

-----VFNMSUB231PSZrbkz-----
	VFNMSUB231PSZrbkz(1(Class<VR512>) -> 0(Class<VR512>))  [4.03;4.03]
		 Successful, latency: 4.03
	VFNMSUB231PSZrbkz(3(Class<VR512>) -> 0(Class<VR512>))  [4.06;4.06]
		 Successful, latency: 4.06
	VFNMSUB231PSZrbkz(4(Class<VR512>) -> 0(Class<VR512>))  [4.05;4.05]
		 Successful, latency: 4.05

-----VFNMSUB231PSZrk-----
	VFNMSUB231PSZrk(1(Class<VR512>) -> 0(Class<VR512>))  [4.04;4.04]
		 Successful, latency: 4.04
	VFNMSUB231PSZrk(3(Class<VR512>) -> 0(Class<VR512>))  [4.05;4.05]
		 Successful, latency: 4.05
	VFNMSUB231PSZrk(4(Class<VR512>) -> 0(Class<VR512>))  [4.03;4.03]
		 Successful, latency: 4.03

-----VFNMSUB231PSZrkz-----
	VFNMSUB231PSZrkz(1(Class<VR512>) -> 0(Class<VR512>))  [4.04;4.04]
		 Successful, latency: 4.04
	VFNMSUB231PSZrkz(3(Class<VR512>) -> 0(Class<VR512>))  [4.03;4.03]
		 Successful, latency: 4.03
	VFNMSUB231PSZrkz(4(Class<VR512>) -> 0(Class<VR512>))  [4.03;4.03]
		 Successful, latency: 4.03

-----VFNMSUB231PSr-----
	VFNMSUB231PSr(1(Class<VR128>) -> 0(Class<VR128>))  [4.03;4.03]
		 Successful, latency: 4.03
	VFNMSUB231PSr(2(Class<VR128>) -> 0(Class<VR128>))  [4.04;4.04]
		 Successful, latency: 4.04
	VFNMSUB231PSr(3(Class<VR128>) -> 0(Class<VR128>))  [4.04;4.04]
		 Successful, latency: 4.04

-----VFNMSUB231SDZr-----
	VFNMSUB231SDZr(1(Class<FR64X>) -> 0(Class<FR64X>))  [4.05;4.05]
		 Successful, latency: 4.05
	VFNMSUB231SDZr(2(Class<FR64X>) -> 0(Class<FR64X>))  [4.04;4.04]
		 Successful, latency: 4.04
	VFNMSUB231SDZr(3(Class<FR64X>) -> 0(Class<FR64X>))  [4.05;4.05]
		 Successful, latency: 4.05

-----VFNMSUB231SDZr_Int-----
	VFNMSUB231SDZr_Int(1(Class<VR128X>) -> 0(Class<VR128X>))  [4.03;4.03]
		 Successful, latency: 4.03
	VFNMSUB231SDZr_Int(2(Class<VR128X>) -> 0(Class<VR128X>))  [4.07;4.07]
		 Successful, latency: 4.07
	VFNMSUB231SDZr_Int(3(Class<VR128X>) -> 0(Class<VR128X>))  [4.04;4.04]
		 Successful, latency: 4.04

-----VFNMSUB231SDZrb-----
	VFNMSUB231SDZrb(1(Class<FR64X>) -> 0(Class<FR64X>))  [4.05;4.05]
		 Successful, latency: 4.05
	VFNMSUB231SDZrb(2(Class<FR64X>) -> 0(Class<FR64X>))  [4.04;4.04]
		 Successful, latency: 4.04
	VFNMSUB231SDZrb(3(Class<FR64X>) -> 0(Class<FR64X>))  [4.04;4.04]
		 Successful, latency: 4.04

-----VFNMSUB231SDZrb_Int-----
	VFNMSUB231SDZrb_Int(1(Class<VR128X>) -> 0(Class<VR128X>))  [4.03;4.03]
		 Successful, latency: 4.03
	VFNMSUB231SDZrb_Int(2(Class<VR128X>) -> 0(Class<VR128X>))  [4.03;4.03]
		 Successful, latency: 4.03
	VFNMSUB231SDZrb_Int(3(Class<VR128X>) -> 0(Class<VR128X>))  [4.05;4.05]
		 Successful, latency: 4.05

-----VFNMSUB231SDZrbk_Int-----
	VFNMSUB231SDZrbk_Int(1(Class<VR128X>) -> 0(Class<VR128X>))  [4.03;4.03]
		 Successful, latency: 4.03
	VFNMSUB231SDZrbk_Int(3(Class<VR128X>) -> 0(Class<VR128X>))  [4.04;4.04]
		 Successful, latency: 4.04
	VFNMSUB231SDZrbk_Int(4(Class<VR128X>) -> 0(Class<VR128X>))  [4.03;4.03]
		 Successful, latency: 4.03

-----VFNMSUB231SDZrbkz_Int-----
	VFNMSUB231SDZrbkz_Int(1(Class<VR128X>) -> 0(Class<VR128X>))  [4.03;4.03]
		 Successful, latency: 4.03
	VFNMSUB231SDZrbkz_Int(3(Class<VR128X>) -> 0(Class<VR128X>))  [4.02;4.02]
		 Successful, latency: 4.02
	VFNMSUB231SDZrbkz_Int(4(Class<VR128X>) -> 0(Class<VR128X>))  [4.05;4.05]
		 Successful, latency: 4.05

-----VFNMSUB231SDZrk_Int-----
	VFNMSUB231SDZrk_Int(1(Class<VR128X>) -> 0(Class<VR128X>))  [4.03;4.03]
		 Successful, latency: 4.03
	VFNMSUB231SDZrk_Int(3(Class<VR128X>) -> 0(Class<VR128X>))  [4.02;4.02]
		 Successful, latency: 4.02
	VFNMSUB231SDZrk_Int(4(Class<VR128X>) -> 0(Class<VR128X>))  [4.02;4.02]
		 Successful, latency: 4.02

-----VFNMSUB231SDZrkz_Int-----
	VFNMSUB231SDZrkz_Int(1(Class<VR128X>) -> 0(Class<VR128X>))  [4.04;4.04]
		 Successful, latency: 4.04
	VFNMSUB231SDZrkz_Int(3(Class<VR128X>) -> 0(Class<VR128X>))  [4.04;4.04]
		 Successful, latency: 4.04
	VFNMSUB231SDZrkz_Int(4(Class<VR128X>) -> 0(Class<VR128X>))  [4.05;4.05]
		 Successful, latency: 4.05

-----VFNMSUB231SDr-----
	VFNMSUB231SDr(1(Class<FR64>) -> 0(Class<FR64>))  [4.03;4.03]
		 Successful, latency: 4.03
	VFNMSUB231SDr(2(Class<FR64>) -> 0(Class<FR64>))  [4.05;4.05]
		 Successful, latency: 4.05
	VFNMSUB231SDr(3(Class<FR64>) -> 0(Class<FR64>))  [4.05;4.05]
		 Successful, latency: 4.05

-----VFNMSUB231SDr_Int-----
	VFNMSUB231SDr_Int(1(Class<VR128>) -> 0(Class<VR128>))  [4.06;4.06]
		 Successful, latency: 4.06
	VFNMSUB231SDr_Int(2(Class<VR128>) -> 0(Class<VR128>))  [4.04;4.04]
		 Successful, latency: 4.04
	VFNMSUB231SDr_Int(3(Class<VR128>) -> 0(Class<VR128>))  [4.03;4.03]
		 Successful, latency: 4.03

-----VFNMSUB231SHZr-----
	VFNMSUB231SHZr(1(Class<FR16X>) -> 0(Class<FR16X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFNMSUB231SHZr(2(Class<FR16X>) -> 0(Class<FR16X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFNMSUB231SHZr(3(Class<FR16X>) -> 0(Class<FR16X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VFNMSUB231SHZr_Int-----
	VFNMSUB231SHZr_Int(1(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFNMSUB231SHZr_Int(2(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFNMSUB231SHZr_Int(3(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VFNMSUB231SHZrb-----
	VFNMSUB231SHZrb(1(Class<FR16X>) -> 0(Class<FR16X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFNMSUB231SHZrb(2(Class<FR16X>) -> 0(Class<FR16X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFNMSUB231SHZrb(3(Class<FR16X>) -> 0(Class<FR16X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VFNMSUB231SHZrb_Int-----
	VFNMSUB231SHZrb_Int(1(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFNMSUB231SHZrb_Int(2(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFNMSUB231SHZrb_Int(3(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VFNMSUB231SHZrbk_Int-----
	VFNMSUB231SHZrbk_Int(1(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFNMSUB231SHZrbk_Int(3(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFNMSUB231SHZrbk_Int(4(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VFNMSUB231SHZrbkz_Int-----
	VFNMSUB231SHZrbkz_Int(1(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFNMSUB231SHZrbkz_Int(3(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFNMSUB231SHZrbkz_Int(4(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VFNMSUB231SHZrk_Int-----
	VFNMSUB231SHZrk_Int(1(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFNMSUB231SHZrk_Int(3(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFNMSUB231SHZrk_Int(4(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VFNMSUB231SHZrkz_Int-----
	VFNMSUB231SHZrkz_Int(1(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFNMSUB231SHZrkz_Int(3(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFNMSUB231SHZrkz_Int(4(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VFNMSUB231SSZr-----
	VFNMSUB231SSZr(1(Class<FR32X>) -> 0(Class<FR32X>))  [4.02;4.02]
		 Successful, latency: 4.02
	VFNMSUB231SSZr(2(Class<FR32X>) -> 0(Class<FR32X>))  [4.03;4.03]
		 Successful, latency: 4.03
	VFNMSUB231SSZr(3(Class<FR32X>) -> 0(Class<FR32X>))  [4.04;4.04]
		 Successful, latency: 4.04

-----VFNMSUB231SSZr_Int-----
	VFNMSUB231SSZr_Int(1(Class<VR128X>) -> 0(Class<VR128X>))  [4.03;4.03]
		 Successful, latency: 4.03
	VFNMSUB231SSZr_Int(2(Class<VR128X>) -> 0(Class<VR128X>))  [4.03;4.03]
		 Successful, latency: 4.03
	VFNMSUB231SSZr_Int(3(Class<VR128X>) -> 0(Class<VR128X>))  [4.04;4.04]
		 Successful, latency: 4.04

-----VFNMSUB231SSZrb-----
	VFNMSUB231SSZrb(1(Class<FR32X>) -> 0(Class<FR32X>))  [4.04;4.04]
		 Successful, latency: 4.04
	VFNMSUB231SSZrb(2(Class<FR32X>) -> 0(Class<FR32X>))  [4.02;4.02]
		 Successful, latency: 4.02
	VFNMSUB231SSZrb(3(Class<FR32X>) -> 0(Class<FR32X>))  [4.03;4.03]
		 Successful, latency: 4.03

-----VFNMSUB231SSZrb_Int-----
	VFNMSUB231SSZrb_Int(1(Class<VR128X>) -> 0(Class<VR128X>))  [4.04;4.04]
		 Successful, latency: 4.04
	VFNMSUB231SSZrb_Int(2(Class<VR128X>) -> 0(Class<VR128X>))  [4.05;4.05]
		 Successful, latency: 4.05
	VFNMSUB231SSZrb_Int(3(Class<VR128X>) -> 0(Class<VR128X>))  [4.04;4.04]
		 Successful, latency: 4.04

-----VFNMSUB231SSZrbk_Int-----
	VFNMSUB231SSZrbk_Int(1(Class<VR128X>) -> 0(Class<VR128X>))  [4.03;4.03]
		 Successful, latency: 4.03
	VFNMSUB231SSZrbk_Int(3(Class<VR128X>) -> 0(Class<VR128X>))  [4.02;4.02]
		 Successful, latency: 4.02
	VFNMSUB231SSZrbk_Int(4(Class<VR128X>) -> 0(Class<VR128X>))  [4.04;4.04]
		 Successful, latency: 4.04

-----VFNMSUB231SSZrbkz_Int-----
	VFNMSUB231SSZrbkz_Int(1(Class<VR128X>) -> 0(Class<VR128X>))  [4.03;4.03]
		 Successful, latency: 4.03
	VFNMSUB231SSZrbkz_Int(3(Class<VR128X>) -> 0(Class<VR128X>))  [4.04;4.04]
		 Successful, latency: 4.04
	VFNMSUB231SSZrbkz_Int(4(Class<VR128X>) -> 0(Class<VR128X>))  [4.03;4.03]
		 Successful, latency: 4.03

-----VFNMSUB231SSZrk_Int-----
	VFNMSUB231SSZrk_Int(1(Class<VR128X>) -> 0(Class<VR128X>))  [4.07;4.07]
		 Successful, latency: 4.07
	VFNMSUB231SSZrk_Int(3(Class<VR128X>) -> 0(Class<VR128X>))  [4.03;4.03]
		 Successful, latency: 4.03
	VFNMSUB231SSZrk_Int(4(Class<VR128X>) -> 0(Class<VR128X>))  [4.06;4.06]
		 Successful, latency: 4.06

-----VFNMSUB231SSZrkz_Int-----
	VFNMSUB231SSZrkz_Int(1(Class<VR128X>) -> 0(Class<VR128X>))  [4.03;4.03]
		 Successful, latency: 4.03
	VFNMSUB231SSZrkz_Int(3(Class<VR128X>) -> 0(Class<VR128X>))  [4.03;4.03]
		 Successful, latency: 4.03
	VFNMSUB231SSZrkz_Int(4(Class<VR128X>) -> 0(Class<VR128X>))  [4.05;4.05]
		 Successful, latency: 4.05

-----VFNMSUB231SSr-----
	VFNMSUB231SSr(1(Class<FR32>) -> 0(Class<FR32>))  [4.03;4.03]
		 Successful, latency: 4.03
	VFNMSUB231SSr(2(Class<FR32>) -> 0(Class<FR32>))  [4.05;4.05]
		 Successful, latency: 4.05
	VFNMSUB231SSr(3(Class<FR32>) -> 0(Class<FR32>))  [4.04;4.04]
		 Successful, latency: 4.04

-----VFNMSUB231SSr_Int-----
	VFNMSUB231SSr_Int(1(Class<VR128>) -> 0(Class<VR128>))  [4.05;4.05]
		 Successful, latency: 4.05
	VFNMSUB231SSr_Int(2(Class<VR128>) -> 0(Class<VR128>))  [4.04;4.04]
		 Successful, latency: 4.04
	VFNMSUB231SSr_Int(3(Class<VR128>) -> 0(Class<VR128>))  [4.04;4.04]
		 Successful, latency: 4.04

-----VFNMSUBPD4Yrr-----
	VFNMSUBPD4Yrr(1(Class<VR256>) -> 0(Class<VR256>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFNMSUBPD4Yrr(2(Class<VR256>) -> 0(Class<VR256>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFNMSUBPD4Yrr(3(Class<VR256>) -> 0(Class<VR256>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VFNMSUBPD4Yrr_REV-----
	VFNMSUBPD4Yrr_REV(1(Class<VR256>) -> 0(Class<VR256>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFNMSUBPD4Yrr_REV(2(Class<VR256>) -> 0(Class<VR256>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFNMSUBPD4Yrr_REV(3(Class<VR256>) -> 0(Class<VR256>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VFNMSUBPD4rr-----
	VFNMSUBPD4rr(1(Class<VR128>) -> 0(Class<VR128>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFNMSUBPD4rr(2(Class<VR128>) -> 0(Class<VR128>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFNMSUBPD4rr(3(Class<VR128>) -> 0(Class<VR128>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VFNMSUBPD4rr_REV-----
	VFNMSUBPD4rr_REV(1(Class<VR128>) -> 0(Class<VR128>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFNMSUBPD4rr_REV(2(Class<VR128>) -> 0(Class<VR128>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFNMSUBPD4rr_REV(3(Class<VR128>) -> 0(Class<VR128>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VFNMSUBPS4Yrr-----
	VFNMSUBPS4Yrr(1(Class<VR256>) -> 0(Class<VR256>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFNMSUBPS4Yrr(2(Class<VR256>) -> 0(Class<VR256>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFNMSUBPS4Yrr(3(Class<VR256>) -> 0(Class<VR256>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VFNMSUBPS4Yrr_REV-----
	VFNMSUBPS4Yrr_REV(1(Class<VR256>) -> 0(Class<VR256>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFNMSUBPS4Yrr_REV(2(Class<VR256>) -> 0(Class<VR256>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFNMSUBPS4Yrr_REV(3(Class<VR256>) -> 0(Class<VR256>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VFNMSUBPS4rr-----
	VFNMSUBPS4rr(1(Class<VR128>) -> 0(Class<VR128>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFNMSUBPS4rr(2(Class<VR128>) -> 0(Class<VR128>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFNMSUBPS4rr(3(Class<VR128>) -> 0(Class<VR128>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VFNMSUBPS4rr_REV-----
	VFNMSUBPS4rr_REV(1(Class<VR128>) -> 0(Class<VR128>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFNMSUBPS4rr_REV(2(Class<VR128>) -> 0(Class<VR128>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFNMSUBPS4rr_REV(3(Class<VR128>) -> 0(Class<VR128>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VFNMSUBSD4rr-----
	VFNMSUBSD4rr(1(Class<FR64>) -> 0(Class<FR64>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFNMSUBSD4rr(2(Class<FR64>) -> 0(Class<FR64>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFNMSUBSD4rr(3(Class<FR64>) -> 0(Class<FR64>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VFNMSUBSD4rr_Int-----
	VFNMSUBSD4rr_Int(1(Class<VR128>) -> 0(Class<VR128>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFNMSUBSD4rr_Int(2(Class<VR128>) -> 0(Class<VR128>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFNMSUBSD4rr_Int(3(Class<VR128>) -> 0(Class<VR128>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VFNMSUBSD4rr_Int_REV-----
	VFNMSUBSD4rr_Int_REV(1(Class<VR128>) -> 0(Class<VR128>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFNMSUBSD4rr_Int_REV(2(Class<VR128>) -> 0(Class<VR128>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFNMSUBSD4rr_Int_REV(3(Class<VR128>) -> 0(Class<VR128>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VFNMSUBSD4rr_REV-----
	VFNMSUBSD4rr_REV(1(Class<FR64>) -> 0(Class<FR64>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFNMSUBSD4rr_REV(2(Class<FR64>) -> 0(Class<FR64>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFNMSUBSD4rr_REV(3(Class<FR64>) -> 0(Class<FR64>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VFNMSUBSS4rr-----
	VFNMSUBSS4rr(1(Class<FR32>) -> 0(Class<FR32>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFNMSUBSS4rr(2(Class<FR32>) -> 0(Class<FR32>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFNMSUBSS4rr(3(Class<FR32>) -> 0(Class<FR32>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VFNMSUBSS4rr_Int-----
	VFNMSUBSS4rr_Int(1(Class<VR128>) -> 0(Class<VR128>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFNMSUBSS4rr_Int(2(Class<VR128>) -> 0(Class<VR128>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFNMSUBSS4rr_Int(3(Class<VR128>) -> 0(Class<VR128>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VFNMSUBSS4rr_Int_REV-----
	VFNMSUBSS4rr_Int_REV(1(Class<VR128>) -> 0(Class<VR128>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFNMSUBSS4rr_Int_REV(2(Class<VR128>) -> 0(Class<VR128>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFNMSUBSS4rr_Int_REV(3(Class<VR128>) -> 0(Class<VR128>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VFNMSUBSS4rr_REV-----
	VFNMSUBSS4rr_REV(1(Class<FR32>) -> 0(Class<FR32>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFNMSUBSS4rr_REV(2(Class<FR32>) -> 0(Class<FR32>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VFNMSUBSS4rr_REV(3(Class<FR32>) -> 0(Class<FR32>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VFPCLASSBF16Z128ri-----
	0x138383c53b70
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VFPCLASSBF16Z128rik-----
	0x138383c53be0
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VFPCLASSBF16Z256ri-----
	0x138383c53c18
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VFPCLASSBF16Z256rik-----
	0x138383c53c88
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VFPCLASSBF16Zri-----
	0x138383c53cc0
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VFPCLASSBF16Zrik-----
	0x138383c53d30
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VFPCLASSPDZ128ri-----
	VFPCLASSPDZ128ri(1(Class<VR128X>) -> 0(Class<VK2>))  [1.02;3.04]
		Dependencies:
			VPCMPQZ128rri(2(Class<VR128X>) -> 0(Class<VK2>)) 
			VPMOVM2QZ128rk(1(Class<VK2>) -> 0(Class<VR128X>)) 
		Combined result: 4.04 cycles

-----VFPCLASSPDZ128rik-----
	VFPCLASSPDZ128rik(2(Class<VR128X>) -> 0(Class<VK2>))  [1.01;3.03]
		Dependencies:
			VPCMPQZ128rri(2(Class<VR128X>) -> 0(Class<VK2>)) 
			VPMOVM2QZ128rk(1(Class<VK2>) -> 0(Class<VR128X>)) 
		Combined result: 4.03 cycles

-----VFPCLASSPDZ256ri-----
	VFPCLASSPDZ256ri(1(Class<VR256X>) -> 0(Class<VK4>))  [1.01;4.04]
		Dependencies:
			VPTESTNMQZ256rrk(2(Class<VR256X>) -> 0(Class<VK4>)) 
			VPMOVM2QZ256rk(1(Class<VK4>) -> 0(Class<VR256X>)) 
		Combined result: 5.04 cycles

-----VFPCLASSPDZ256rik-----
	VFPCLASSPDZ256rik(2(Class<VR256X>) -> 0(Class<VK4>))  [1.01;4.03]
		Dependencies:
			VPTESTNMQZ256rrk(2(Class<VR256X>) -> 0(Class<VK4>)) 
			VPMOVM2QZ256rk(1(Class<VK4>) -> 0(Class<VR256X>)) 
		Combined result: 5.03 cycles

-----VFPCLASSPDZri-----
	VFPCLASSPDZri(1(Class<VR512>) -> 0(Class<VK8>))  [1.04;5.15]
		Dependencies:
			VPCMPQZrrik(2(Class<VR512>) -> 0(Class<VK8>)) 
			VPMOVM2QZrk(1(Class<VK8>) -> 0(Class<VR512>)) 
		Combined result: 6.15 cycles

-----VFPCLASSPDZrik-----
	VFPCLASSPDZrik(2(Class<VR512>) -> 0(Class<VK8>))  [1.06;5.17]
		Dependencies:
			VPCMPQZrrik(2(Class<VR512>) -> 0(Class<VK8>)) 
			VPMOVM2QZrk(1(Class<VK8>) -> 0(Class<VR512>)) 
		Combined result: 6.17 cycles

-----VFPCLASSPHZ128ri-----
	0x138383c540b0
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VFPCLASSPHZ128rik-----
	0x138383c54158
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VFPCLASSPHZ256ri-----
	0x138383c541c8
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VFPCLASSPHZ256rik-----
	0x138383c54270
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VFPCLASSPHZri-----
	0x138383c542e0
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VFPCLASSPHZrik-----
	0x138383c54388
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VFPCLASSPSZ128ri-----
	VFPCLASSPSZ128ri(1(Class<VR128X>) -> 0(Class<VK4>))  [1.03;3.05]
		Dependencies:
			VPCMPEQDZ128rr(2(Class<VR128X>) -> 0(Class<VK4>)) 
			VPMOVM2DZ128rk(1(Class<VK4>) -> 0(Class<VR128X>)) 
		Combined result: 4.05 cycles

-----VFPCLASSPSZ128rik-----
	VFPCLASSPSZ128rik(2(Class<VR128X>) -> 0(Class<VK4>))  [1;3.03]
		Dependencies:
			VPCMPEQDZ128rr(2(Class<VR128X>) -> 0(Class<VK4>)) 
			VPMOVM2DZ128rk(1(Class<VK4>) -> 0(Class<VR128X>)) 
		Combined result: 4.03 cycles

-----VFPCLASSPSZ256ri-----
	VFPCLASSPSZ256ri(1(Class<VR256X>) -> 0(Class<VK8>))  [1;4.04]
		Dependencies:
			VCMPPSZ256rri(1(Class<VR256X>) -> 0(Class<VK8>)) 
			VPMOVM2DZ256rk(1(Class<VK8>) -> 0(Class<VR256X>)) 
		Combined result: 5.04 cycles

-----VFPCLASSPSZ256rik-----
	VFPCLASSPSZ256rik(2(Class<VR256X>) -> 0(Class<VK8>))  [1.01;4.04]
		Dependencies:
			VCMPPSZ256rri(1(Class<VR256X>) -> 0(Class<VK8>)) 
			VPMOVM2DZ256rk(1(Class<VK8>) -> 0(Class<VR256X>)) 
		Combined result: 5.04 cycles

-----VFPCLASSPSZri-----
	VFPCLASSPSZri(1(Class<VR512>) -> 0(Class<VK16>))  [0.99;5.12]
		Dependencies:
			VPTESTNMDZrr(2(Class<VR512>) -> 0(Class<VK16>)) 
			VPMOVM2DZrk(1(Class<VK16>) -> 0(Class<VR512>)) 
		Combined result: 6.12 cycles

-----VFPCLASSPSZrik-----
	VFPCLASSPSZrik(2(Class<VR512>) -> 0(Class<VK16>))  [1.05;5.18]
		Dependencies:
			VPTESTNMDZrr(2(Class<VR512>) -> 0(Class<VK16>)) 
			VPMOVM2DZrk(1(Class<VK16>) -> 0(Class<VR512>)) 
		Combined result: 6.18 cycles

-----VFRCZPDYrr-----
	VFRCZPDYrr(1(Class<VR256>) -> 0(Class<VR256>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VFRCZPDrr-----
	VFRCZPDrr(1(Class<VR128>) -> 0(Class<VR128>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VFRCZPSYrr-----
	VFRCZPSYrr(1(Class<VR256>) -> 0(Class<VR256>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VFRCZPSrr-----
	VFRCZPSrr(1(Class<VR128>) -> 0(Class<VR128>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VFRCZSDrr-----
	VFRCZSDrr(1(Class<VR128>) -> 0(Class<VR128>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VFRCZSSrr-----
	VFRCZSSrr(1(Class<VR128>) -> 0(Class<VR128>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VGETEXPBF16Z128r-----
	VGETEXPBF16Z128r(1(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VGETEXPBF16Z128rk-----
	VGETEXPBF16Z128rk(1(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VGETEXPBF16Z128rk(3(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VGETEXPBF16Z128rkz-----
	VGETEXPBF16Z128rkz(2(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VGETEXPBF16Z256r-----
	VGETEXPBF16Z256r(1(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VGETEXPBF16Z256rk-----
	VGETEXPBF16Z256rk(1(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VGETEXPBF16Z256rk(3(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VGETEXPBF16Z256rkz-----
	VGETEXPBF16Z256rkz(2(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VGETEXPBF16Zr-----
	VGETEXPBF16Zr(1(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VGETEXPBF16Zrk-----
	VGETEXPBF16Zrk(1(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VGETEXPBF16Zrk(3(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VGETEXPBF16Zrkz-----
	VGETEXPBF16Zrkz(2(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VGETEXPPDZ128r-----
	VGETEXPPDZ128r(1(Class<VR128X>) -> 0(Class<VR128X>))  [3.04;3.04]
		 Successful, latency: 3.04

-----VGETEXPPDZ128rk-----
	VGETEXPPDZ128rk(1(Class<VR128X>) -> 0(Class<VR128X>))  [3.06;3.06]
		 Successful, latency: 3.06
	VGETEXPPDZ128rk(3(Class<VR128X>) -> 0(Class<VR128X>))  [3.04;3.04]
		 Successful, latency: 3.04

-----VGETEXPPDZ128rkz-----
	VGETEXPPDZ128rkz(2(Class<VR128X>) -> 0(Class<VR128X>))  [3.04;3.04]
		 Successful, latency: 3.04

-----VGETEXPPDZ256r-----
	VGETEXPPDZ256r(1(Class<VR256X>) -> 0(Class<VR256X>))  [3.03;3.03]
		 Successful, latency: 3.03

-----VGETEXPPDZ256rb-----
	VGETEXPPDZ256rb(1(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VGETEXPPDZ256rbk-----
	VGETEXPPDZ256rbk(1(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VGETEXPPDZ256rbk(3(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VGETEXPPDZ256rbkz-----
	VGETEXPPDZ256rbkz(2(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VGETEXPPDZ256rk-----
	VGETEXPPDZ256rk(1(Class<VR256X>) -> 0(Class<VR256X>))  [3.02;3.02]
		 Successful, latency: 3.02
	VGETEXPPDZ256rk(3(Class<VR256X>) -> 0(Class<VR256X>))  [3.05;3.05]
		 Successful, latency: 3.05

-----VGETEXPPDZ256rkz-----
	VGETEXPPDZ256rkz(2(Class<VR256X>) -> 0(Class<VR256X>))  [3.02;3.02]
		 Successful, latency: 3.02

-----VGETEXPPDZr-----
	VGETEXPPDZr(1(Class<VR512>) -> 0(Class<VR512>))  [3.04;3.04]
		 Successful, latency: 3.04

-----VGETEXPPDZrb-----
	VGETEXPPDZrb(1(Class<VR512>) -> 0(Class<VR512>))  [3.04;3.04]
		 Successful, latency: 3.04

-----VGETEXPPDZrbk-----
	VGETEXPPDZrbk(1(Class<VR512>) -> 0(Class<VR512>))  [3.07;3.07]
		 Successful, latency: 3.07
	VGETEXPPDZrbk(3(Class<VR512>) -> 0(Class<VR512>))  [3.02;3.02]
		 Successful, latency: 3.02

-----VGETEXPPDZrbkz-----
	VGETEXPPDZrbkz(2(Class<VR512>) -> 0(Class<VR512>))  [3.04;3.04]
		 Successful, latency: 3.04

-----VGETEXPPDZrk-----
	VGETEXPPDZrk(1(Class<VR512>) -> 0(Class<VR512>))  [3.04;3.04]
		 Successful, latency: 3.04
	VGETEXPPDZrk(3(Class<VR512>) -> 0(Class<VR512>))  [3.04;3.04]
		 Successful, latency: 3.04

-----VGETEXPPDZrkz-----
	VGETEXPPDZrkz(2(Class<VR512>) -> 0(Class<VR512>))  [3.06;3.06]
		 Successful, latency: 3.06

-----VGETEXPPHZ128r-----
	VGETEXPPHZ128r(1(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VGETEXPPHZ128rk-----
	VGETEXPPHZ128rk(1(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VGETEXPPHZ128rk(3(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VGETEXPPHZ128rkz-----
	VGETEXPPHZ128rkz(2(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VGETEXPPHZ256r-----
	VGETEXPPHZ256r(1(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VGETEXPPHZ256rb-----
	VGETEXPPHZ256rb(1(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VGETEXPPHZ256rbk-----
	VGETEXPPHZ256rbk(1(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VGETEXPPHZ256rbk(3(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VGETEXPPHZ256rbkz-----
	VGETEXPPHZ256rbkz(2(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VGETEXPPHZ256rk-----
	VGETEXPPHZ256rk(1(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VGETEXPPHZ256rk(3(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VGETEXPPHZ256rkz-----
	VGETEXPPHZ256rkz(2(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VGETEXPPHZr-----
	VGETEXPPHZr(1(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VGETEXPPHZrb-----
	VGETEXPPHZrb(1(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VGETEXPPHZrbk-----
	VGETEXPPHZrbk(1(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VGETEXPPHZrbk(3(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VGETEXPPHZrbkz-----
	VGETEXPPHZrbkz(2(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VGETEXPPHZrk-----
	VGETEXPPHZrk(1(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VGETEXPPHZrk(3(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VGETEXPPHZrkz-----
	VGETEXPPHZrkz(2(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VGETEXPPSZ128r-----
	VGETEXPPSZ128r(1(Class<VR128X>) -> 0(Class<VR128X>))  [3.03;3.03]
		 Successful, latency: 3.03

-----VGETEXPPSZ128rk-----
	VGETEXPPSZ128rk(1(Class<VR128X>) -> 0(Class<VR128X>))  [3.04;3.04]
		 Successful, latency: 3.04
	VGETEXPPSZ128rk(3(Class<VR128X>) -> 0(Class<VR128X>))  [3.02;3.02]
		 Successful, latency: 3.02

-----VGETEXPPSZ128rkz-----
	VGETEXPPSZ128rkz(2(Class<VR128X>) -> 0(Class<VR128X>))  [3.06;3.06]
		 Successful, latency: 3.06

-----VGETEXPPSZ256r-----
	VGETEXPPSZ256r(1(Class<VR256X>) -> 0(Class<VR256X>))  [3.05;3.05]
		 Successful, latency: 3.05

-----VGETEXPPSZ256rb-----
	VGETEXPPSZ256rb(1(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VGETEXPPSZ256rbk-----
	VGETEXPPSZ256rbk(1(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VGETEXPPSZ256rbk(3(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VGETEXPPSZ256rbkz-----
	VGETEXPPSZ256rbkz(2(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VGETEXPPSZ256rk-----
	VGETEXPPSZ256rk(1(Class<VR256X>) -> 0(Class<VR256X>))  [3.03;3.03]
		 Successful, latency: 3.03
	VGETEXPPSZ256rk(3(Class<VR256X>) -> 0(Class<VR256X>))  [3.05;3.05]
		 Successful, latency: 3.05

-----VGETEXPPSZ256rkz-----
	VGETEXPPSZ256rkz(2(Class<VR256X>) -> 0(Class<VR256X>))  [3.02;3.02]
		 Successful, latency: 3.02

-----VGETEXPPSZr-----
	VGETEXPPSZr(1(Class<VR512>) -> 0(Class<VR512>))  [3.08;3.08]
		 Successful, latency: 3.08

-----VGETEXPPSZrb-----
	VGETEXPPSZrb(1(Class<VR512>) -> 0(Class<VR512>))  [3.06;3.06]
		 Successful, latency: 3.06

-----VGETEXPPSZrbk-----
	VGETEXPPSZrbk(1(Class<VR512>) -> 0(Class<VR512>))  [3.03;3.03]
		 Successful, latency: 3.03
	VGETEXPPSZrbk(3(Class<VR512>) -> 0(Class<VR512>))  [3.03;3.03]
		 Successful, latency: 3.03

-----VGETEXPPSZrbkz-----
	VGETEXPPSZrbkz(2(Class<VR512>) -> 0(Class<VR512>))  [3.02;3.02]
		 Successful, latency: 3.02

-----VGETEXPPSZrk-----
	VGETEXPPSZrk(1(Class<VR512>) -> 0(Class<VR512>))  [3.03;3.03]
		 Successful, latency: 3.03
	VGETEXPPSZrk(3(Class<VR512>) -> 0(Class<VR512>))  [3.05;3.05]
		 Successful, latency: 3.05

-----VGETEXPPSZrkz-----
	VGETEXPPSZrkz(2(Class<VR512>) -> 0(Class<VR512>))  [3.03;3.03]
		 Successful, latency: 3.03

-----VGETEXPSDZr-----
	VGETEXPSDZr(1(Class<VR128X>) -> 0(Class<VR128X>))  [3.05;3.05]
		 Successful, latency: 3.05
	VGETEXPSDZr(2(Class<VR128X>) -> 0(Class<VR128X>))  [3.02;3.02]
		 Successful, latency: 3.02

-----VGETEXPSDZrb-----
	VGETEXPSDZrb(1(Class<VR128X>) -> 0(Class<VR128X>))  [3.05;3.05]
		 Successful, latency: 3.05
	VGETEXPSDZrb(2(Class<VR128X>) -> 0(Class<VR128X>))  [3.04;3.04]
		 Successful, latency: 3.04

-----VGETEXPSDZrbk-----
	VGETEXPSDZrbk(1(Class<VR128X>) -> 0(Class<VR128X>))  [3.03;3.03]
		 Successful, latency: 3.03
	VGETEXPSDZrbk(3(Class<VR128X>) -> 0(Class<VR128X>))  [3.02;3.02]
		 Successful, latency: 3.02
	VGETEXPSDZrbk(4(Class<VR128X>) -> 0(Class<VR128X>))  [3.02;3.02]
		 Successful, latency: 3.02

-----VGETEXPSDZrbkz-----
	VGETEXPSDZrbkz(2(Class<VR128X>) -> 0(Class<VR128X>))  [3.01;3.01]
		 Successful, latency: 3.01
	VGETEXPSDZrbkz(3(Class<VR128X>) -> 0(Class<VR128X>))  [3.04;3.04]
		 Successful, latency: 3.04

-----VGETEXPSDZrk-----
	VGETEXPSDZrk(1(Class<VR128X>) -> 0(Class<VR128X>))  [3.02;3.02]
		 Successful, latency: 3.02
	VGETEXPSDZrk(3(Class<VR128X>) -> 0(Class<VR128X>))  [3.02;3.02]
		 Successful, latency: 3.02
	VGETEXPSDZrk(4(Class<VR128X>) -> 0(Class<VR128X>))  [3.06;3.06]
		 Successful, latency: 3.06

-----VGETEXPSDZrkz-----
	VGETEXPSDZrkz(2(Class<VR128X>) -> 0(Class<VR128X>))  [3.05;3.05]
		 Successful, latency: 3.05
	VGETEXPSDZrkz(3(Class<VR128X>) -> 0(Class<VR128X>))  [3.06;3.06]
		 Successful, latency: 3.06

-----VGETEXPSHZr-----
	VGETEXPSHZr(1(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VGETEXPSHZr(2(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VGETEXPSHZrb-----
	VGETEXPSHZrb(1(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VGETEXPSHZrb(2(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VGETEXPSHZrbk-----
	VGETEXPSHZrbk(1(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VGETEXPSHZrbk(3(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VGETEXPSHZrbk(4(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VGETEXPSHZrbkz-----
	VGETEXPSHZrbkz(2(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VGETEXPSHZrbkz(3(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VGETEXPSHZrk-----
	VGETEXPSHZrk(1(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VGETEXPSHZrk(3(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VGETEXPSHZrk(4(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VGETEXPSHZrkz-----
	VGETEXPSHZrkz(2(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VGETEXPSHZrkz(3(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VGETEXPSSZr-----
	VGETEXPSSZr(1(Class<VR128X>) -> 0(Class<VR128X>))  [3.06;3.06]
		 Successful, latency: 3.06
	VGETEXPSSZr(2(Class<VR128X>) -> 0(Class<VR128X>))  [3.03;3.03]
		 Successful, latency: 3.03

-----VGETEXPSSZrb-----
	VGETEXPSSZrb(1(Class<VR128X>) -> 0(Class<VR128X>))  [3.03;3.03]
		 Successful, latency: 3.03
	VGETEXPSSZrb(2(Class<VR128X>) -> 0(Class<VR128X>))  [3.04;3.04]
		 Successful, latency: 3.04

-----VGETEXPSSZrbk-----
	VGETEXPSSZrbk(1(Class<VR128X>) -> 0(Class<VR128X>))  [3.05;3.05]
		 Successful, latency: 3.05
	VGETEXPSSZrbk(3(Class<VR128X>) -> 0(Class<VR128X>))  [3.02;3.02]
		 Successful, latency: 3.02
	VGETEXPSSZrbk(4(Class<VR128X>) -> 0(Class<VR128X>))  [3.05;3.05]
		 Successful, latency: 3.05

-----VGETEXPSSZrbkz-----
	VGETEXPSSZrbkz(2(Class<VR128X>) -> 0(Class<VR128X>))  [3.03;3.03]
		 Successful, latency: 3.03
	VGETEXPSSZrbkz(3(Class<VR128X>) -> 0(Class<VR128X>))  [3.05;3.05]
		 Successful, latency: 3.05

-----VGETEXPSSZrk-----
	VGETEXPSSZrk(1(Class<VR128X>) -> 0(Class<VR128X>))  [3.02;3.02]
		 Successful, latency: 3.02
	VGETEXPSSZrk(3(Class<VR128X>) -> 0(Class<VR128X>))  [3.04;3.04]
		 Successful, latency: 3.04
	VGETEXPSSZrk(4(Class<VR128X>) -> 0(Class<VR128X>))  [3.03;3.03]
		 Successful, latency: 3.03

-----VGETEXPSSZrkz-----
	VGETEXPSSZrkz(2(Class<VR128X>) -> 0(Class<VR128X>))  [3.02;3.02]
		 Successful, latency: 3.02
	VGETEXPSSZrkz(3(Class<VR128X>) -> 0(Class<VR128X>))  [3.03;3.03]
		 Successful, latency: 3.03

-----VGETMANTBF16Z128rri-----
	VGETMANTBF16Z128rri(1(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VGETMANTBF16Z128rrik-----
	VGETMANTBF16Z128rrik(1(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VGETMANTBF16Z128rrik(3(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VGETMANTBF16Z128rrikz-----
	VGETMANTBF16Z128rrikz(2(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VGETMANTBF16Z256rri-----
	VGETMANTBF16Z256rri(1(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VGETMANTBF16Z256rrik-----
	VGETMANTBF16Z256rrik(1(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VGETMANTBF16Z256rrik(3(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VGETMANTBF16Z256rrikz-----
	VGETMANTBF16Z256rrikz(2(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VGETMANTBF16Zrri-----
	VGETMANTBF16Zrri(1(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VGETMANTBF16Zrrik-----
	VGETMANTBF16Zrrik(1(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VGETMANTBF16Zrrik(3(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VGETMANTBF16Zrrikz-----
	VGETMANTBF16Zrrikz(2(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VGETMANTPDZ128rri-----
	VGETMANTPDZ128rri(1(Class<VR128X>) -> 0(Class<VR128X>))  [3.03;3.03]
		 Successful, latency: 3.03

-----VGETMANTPDZ128rrik-----
	VGETMANTPDZ128rrik(1(Class<VR128X>) -> 0(Class<VR128X>))  [3.02;3.02]
		 Successful, latency: 3.02
	VGETMANTPDZ128rrik(3(Class<VR128X>) -> 0(Class<VR128X>))  [3.05;3.05]
		 Successful, latency: 3.05

-----VGETMANTPDZ128rrikz-----
	VGETMANTPDZ128rrikz(2(Class<VR128X>) -> 0(Class<VR128X>))  [3.04;3.04]
		 Successful, latency: 3.04

-----VGETMANTPDZ256rri-----
	VGETMANTPDZ256rri(1(Class<VR256X>) -> 0(Class<VR256X>))  [3.05;3.05]
		 Successful, latency: 3.05

-----VGETMANTPDZ256rrib-----
	VGETMANTPDZ256rrib(1(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VGETMANTPDZ256rribk-----
	VGETMANTPDZ256rribk(1(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VGETMANTPDZ256rribk(3(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VGETMANTPDZ256rribkz-----
	VGETMANTPDZ256rribkz(2(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VGETMANTPDZ256rrik-----
	VGETMANTPDZ256rrik(1(Class<VR256X>) -> 0(Class<VR256X>))  [3.03;3.03]
		 Successful, latency: 3.03
	VGETMANTPDZ256rrik(3(Class<VR256X>) -> 0(Class<VR256X>))  [3.04;3.04]
		 Successful, latency: 3.04

-----VGETMANTPDZ256rrikz-----
	VGETMANTPDZ256rrikz(2(Class<VR256X>) -> 0(Class<VR256X>))  [3.04;3.04]
		 Successful, latency: 3.04

-----VGETMANTPDZrri-----
	VGETMANTPDZrri(1(Class<VR512>) -> 0(Class<VR512>))  [3.03;3.03]
		 Successful, latency: 3.03

-----VGETMANTPDZrrib-----
	VGETMANTPDZrrib(1(Class<VR512>) -> 0(Class<VR512>))  [3.02;3.02]
		 Successful, latency: 3.02

-----VGETMANTPDZrribk-----
	VGETMANTPDZrribk(1(Class<VR512>) -> 0(Class<VR512>))  [3.02;3.02]
		 Successful, latency: 3.02
	VGETMANTPDZrribk(3(Class<VR512>) -> 0(Class<VR512>))  [3.02;3.02]
		 Successful, latency: 3.02

-----VGETMANTPDZrribkz-----
	VGETMANTPDZrribkz(2(Class<VR512>) -> 0(Class<VR512>))  [3.03;3.03]
		 Successful, latency: 3.03

-----VGETMANTPDZrrik-----
	VGETMANTPDZrrik(1(Class<VR512>) -> 0(Class<VR512>))  [3.02;3.02]
		 Successful, latency: 3.02
	VGETMANTPDZrrik(3(Class<VR512>) -> 0(Class<VR512>))  [3.06;3.06]
		 Successful, latency: 3.06

-----VGETMANTPDZrrikz-----
	VGETMANTPDZrrikz(2(Class<VR512>) -> 0(Class<VR512>))  [3.02;3.02]
		 Successful, latency: 3.02

-----VGETMANTPHZ128rri-----
	VGETMANTPHZ128rri(1(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VGETMANTPHZ128rrik-----
	VGETMANTPHZ128rrik(1(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VGETMANTPHZ128rrik(3(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VGETMANTPHZ128rrikz-----
	VGETMANTPHZ128rrikz(2(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VGETMANTPHZ256rri-----
	VGETMANTPHZ256rri(1(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VGETMANTPHZ256rrib-----
	VGETMANTPHZ256rrib(1(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VGETMANTPHZ256rribk-----
	VGETMANTPHZ256rribk(1(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VGETMANTPHZ256rribk(3(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VGETMANTPHZ256rribkz-----
	VGETMANTPHZ256rribkz(2(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VGETMANTPHZ256rrik-----
	VGETMANTPHZ256rrik(1(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VGETMANTPHZ256rrik(3(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VGETMANTPHZ256rrikz-----
	VGETMANTPHZ256rrikz(2(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VGETMANTPHZrri-----
	VGETMANTPHZrri(1(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VGETMANTPHZrrib-----
	VGETMANTPHZrrib(1(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VGETMANTPHZrribk-----
	VGETMANTPHZrribk(1(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VGETMANTPHZrribk(3(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VGETMANTPHZrribkz-----
	VGETMANTPHZrribkz(2(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VGETMANTPHZrrik-----
	VGETMANTPHZrrik(1(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VGETMANTPHZrrik(3(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VGETMANTPHZrrikz-----
	VGETMANTPHZrrikz(2(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VGETMANTPSZ128rri-----
	VGETMANTPSZ128rri(1(Class<VR128X>) -> 0(Class<VR128X>))  [3.04;3.04]
		 Successful, latency: 3.04

-----VGETMANTPSZ128rrik-----
	VGETMANTPSZ128rrik(1(Class<VR128X>) -> 0(Class<VR128X>))  [3.04;3.04]
		 Successful, latency: 3.04
	VGETMANTPSZ128rrik(3(Class<VR128X>) -> 0(Class<VR128X>))  [3.06;3.06]
		 Successful, latency: 3.06

-----VGETMANTPSZ128rrikz-----
	VGETMANTPSZ128rrikz(2(Class<VR128X>) -> 0(Class<VR128X>))  [3.05;3.05]
		 Successful, latency: 3.05

-----VGETMANTPSZ256rri-----
	VGETMANTPSZ256rri(1(Class<VR256X>) -> 0(Class<VR256X>))  [3.04;3.04]
		 Successful, latency: 3.04

-----VGETMANTPSZ256rrib-----
	VGETMANTPSZ256rrib(1(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VGETMANTPSZ256rribk-----
	VGETMANTPSZ256rribk(1(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VGETMANTPSZ256rribk(3(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VGETMANTPSZ256rribkz-----
	VGETMANTPSZ256rribkz(2(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VGETMANTPSZ256rrik-----
	VGETMANTPSZ256rrik(1(Class<VR256X>) -> 0(Class<VR256X>))  [3.04;3.04]
		 Successful, latency: 3.04
	VGETMANTPSZ256rrik(3(Class<VR256X>) -> 0(Class<VR256X>))  [3.02;3.02]
		 Successful, latency: 3.02

-----VGETMANTPSZ256rrikz-----
	VGETMANTPSZ256rrikz(2(Class<VR256X>) -> 0(Class<VR256X>))  [3.03;3.03]
		 Successful, latency: 3.03

-----VGETMANTPSZrri-----
	VGETMANTPSZrri(1(Class<VR512>) -> 0(Class<VR512>))  [3.03;3.03]
		 Successful, latency: 3.03

-----VGETMANTPSZrrib-----
	VGETMANTPSZrrib(1(Class<VR512>) -> 0(Class<VR512>))  [3.01;3.01]
		 Successful, latency: 3.01

-----VGETMANTPSZrribk-----
	VGETMANTPSZrribk(1(Class<VR512>) -> 0(Class<VR512>))  [3.05;3.05]
		 Successful, latency: 3.05
	VGETMANTPSZrribk(3(Class<VR512>) -> 0(Class<VR512>))  [3.03;3.03]
		 Successful, latency: 3.03

-----VGETMANTPSZrribkz-----
	VGETMANTPSZrribkz(2(Class<VR512>) -> 0(Class<VR512>))  [3.02;3.02]
		 Successful, latency: 3.02

-----VGETMANTPSZrrik-----
	VGETMANTPSZrrik(1(Class<VR512>) -> 0(Class<VR512>))  [3.03;3.03]
		 Successful, latency: 3.03
	VGETMANTPSZrrik(3(Class<VR512>) -> 0(Class<VR512>))  [3.05;3.05]
		 Successful, latency: 3.05

-----VGETMANTPSZrrikz-----
	VGETMANTPSZrrikz(2(Class<VR512>) -> 0(Class<VR512>))  [3.06;3.06]
		 Successful, latency: 3.06

-----VGETMANTSDZrri-----
	VGETMANTSDZrri(1(Class<VR128X>) -> 0(Class<VR128X>))  [3.03;3.03]
		 Successful, latency: 3.03
	VGETMANTSDZrri(2(Class<VR128X>) -> 0(Class<VR128X>))  [3.05;3.05]
		 Successful, latency: 3.05

-----VGETMANTSDZrrib-----
	VGETMANTSDZrrib(1(Class<VR128X>) -> 0(Class<VR128X>))  [3.07;3.07]
		 Successful, latency: 3.07
	VGETMANTSDZrrib(2(Class<VR128X>) -> 0(Class<VR128X>))  [3.04;3.04]
		 Successful, latency: 3.04

-----VGETMANTSDZrribk-----
	VGETMANTSDZrribk(1(Class<VR128X>) -> 0(Class<VR128X>))  [3.02;3.02]
		 Successful, latency: 3.02
	VGETMANTSDZrribk(3(Class<VR128X>) -> 0(Class<VR128X>))  [3.04;3.04]
		 Successful, latency: 3.04
	VGETMANTSDZrribk(4(Class<VR128X>) -> 0(Class<VR128X>))  [3.02;3.02]
		 Successful, latency: 3.02

-----VGETMANTSDZrribkz-----
	VGETMANTSDZrribkz(2(Class<VR128X>) -> 0(Class<VR128X>))  [3.05;3.05]
		 Successful, latency: 3.05
	VGETMANTSDZrribkz(3(Class<VR128X>) -> 0(Class<VR128X>))  [3.04;3.04]
		 Successful, latency: 3.04

-----VGETMANTSDZrrik-----
	VGETMANTSDZrrik(1(Class<VR128X>) -> 0(Class<VR128X>))  [3.04;3.04]
		 Successful, latency: 3.04
	VGETMANTSDZrrik(3(Class<VR128X>) -> 0(Class<VR128X>))  [3.03;3.03]
		 Successful, latency: 3.03
	VGETMANTSDZrrik(4(Class<VR128X>) -> 0(Class<VR128X>))  [3.04;3.04]
		 Successful, latency: 3.04

-----VGETMANTSDZrrikz-----
	VGETMANTSDZrrikz(2(Class<VR128X>) -> 0(Class<VR128X>))  [3.03;3.03]
		 Successful, latency: 3.03
	VGETMANTSDZrrikz(3(Class<VR128X>) -> 0(Class<VR128X>))  [3.04;3.04]
		 Successful, latency: 3.04

-----VGETMANTSHZrri-----
	VGETMANTSHZrri(1(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VGETMANTSHZrri(2(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VGETMANTSHZrrib-----
	VGETMANTSHZrrib(1(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VGETMANTSHZrrib(2(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VGETMANTSHZrribk-----
	VGETMANTSHZrribk(1(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VGETMANTSHZrribk(3(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VGETMANTSHZrribk(4(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VGETMANTSHZrribkz-----
	VGETMANTSHZrribkz(2(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VGETMANTSHZrribkz(3(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VGETMANTSHZrrik-----
	VGETMANTSHZrrik(1(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VGETMANTSHZrrik(3(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VGETMANTSHZrrik(4(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VGETMANTSHZrrikz-----
	VGETMANTSHZrrikz(2(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VGETMANTSHZrrikz(3(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VGETMANTSSZrri-----
	VGETMANTSSZrri(1(Class<VR128X>) -> 0(Class<VR128X>))  [3.05;3.05]
		 Successful, latency: 3.05
	VGETMANTSSZrri(2(Class<VR128X>) -> 0(Class<VR128X>))  [3.05;3.05]
		 Successful, latency: 3.05

-----VGETMANTSSZrrib-----
	VGETMANTSSZrrib(1(Class<VR128X>) -> 0(Class<VR128X>))  [3.05;3.05]
		 Successful, latency: 3.05
	VGETMANTSSZrrib(2(Class<VR128X>) -> 0(Class<VR128X>))  [3.04;3.04]
		 Successful, latency: 3.04

-----VGETMANTSSZrribk-----
	VGETMANTSSZrribk(1(Class<VR128X>) -> 0(Class<VR128X>))  [3.02;3.02]
		 Successful, latency: 3.02
	VGETMANTSSZrribk(3(Class<VR128X>) -> 0(Class<VR128X>))  [3.04;3.04]
		 Successful, latency: 3.04
	VGETMANTSSZrribk(4(Class<VR128X>) -> 0(Class<VR128X>))  [3.02;3.02]
		 Successful, latency: 3.02

-----VGETMANTSSZrribkz-----
	VGETMANTSSZrribkz(2(Class<VR128X>) -> 0(Class<VR128X>))  [3.05;3.05]
		 Successful, latency: 3.05
	VGETMANTSSZrribkz(3(Class<VR128X>) -> 0(Class<VR128X>))  [3.04;3.04]
		 Successful, latency: 3.04

-----VGETMANTSSZrrik-----
	VGETMANTSSZrrik(1(Class<VR128X>) -> 0(Class<VR128X>))  [3.04;3.04]
		 Successful, latency: 3.04
	VGETMANTSSZrrik(3(Class<VR128X>) -> 0(Class<VR128X>))  [3.03;3.03]
		 Successful, latency: 3.03
	VGETMANTSSZrrik(4(Class<VR128X>) -> 0(Class<VR128X>))  [3.02;3.02]
		 Successful, latency: 3.02

-----VGETMANTSSZrrikz-----
	VGETMANTSSZrrikz(2(Class<VR128X>) -> 0(Class<VR128X>))  [3.04;3.04]
		 Successful, latency: 3.04
	VGETMANTSSZrrikz(3(Class<VR128X>) -> 0(Class<VR128X>))  [3.03;3.03]
		 Successful, latency: 3.03

-----VGF2P8AFFINEINVQBYrri-----
	VGF2P8AFFINEINVQBYrri(1(Class<VR256>) -> 0(Class<VR256>))  [3.05;3.05]
		 Successful, latency: 3.05
	VGF2P8AFFINEINVQBYrri(2(Class<VR256>) -> 0(Class<VR256>))  [3.02;3.02]
		 Successful, latency: 3.02

-----VGF2P8AFFINEINVQBZ128rri-----
	VGF2P8AFFINEINVQBZ128rri(1(Class<VR128X>) -> 0(Class<VR128X>))  [3.09;3.09]
		 Successful, latency: 3.09
	VGF2P8AFFINEINVQBZ128rri(2(Class<VR128X>) -> 0(Class<VR128X>))  [3.03;3.03]
		 Successful, latency: 3.03

-----VGF2P8AFFINEINVQBZ128rrik-----
	VGF2P8AFFINEINVQBZ128rrik(1(Class<VR128X>) -> 0(Class<VR128X>))  [3.02;3.02]
		 Successful, latency: 3.02
	VGF2P8AFFINEINVQBZ128rrik(3(Class<VR128X>) -> 0(Class<VR128X>))  [3.06;3.06]
		 Successful, latency: 3.06
	VGF2P8AFFINEINVQBZ128rrik(4(Class<VR128X>) -> 0(Class<VR128X>))  [3.04;3.04]
		 Successful, latency: 3.04

-----VGF2P8AFFINEINVQBZ128rrikz-----
	VGF2P8AFFINEINVQBZ128rrikz(2(Class<VR128X>) -> 0(Class<VR128X>))  [3.04;3.04]
		 Successful, latency: 3.04
	VGF2P8AFFINEINVQBZ128rrikz(3(Class<VR128X>) -> 0(Class<VR128X>))  [3.02;3.02]
		 Successful, latency: 3.02

-----VGF2P8AFFINEINVQBZ256rri-----
	VGF2P8AFFINEINVQBZ256rri(1(Class<VR256X>) -> 0(Class<VR256X>))  [3.03;3.03]
		 Successful, latency: 3.03
	VGF2P8AFFINEINVQBZ256rri(2(Class<VR256X>) -> 0(Class<VR256X>))  [3.06;3.06]
		 Successful, latency: 3.06

-----VGF2P8AFFINEINVQBZ256rrik-----
	VGF2P8AFFINEINVQBZ256rrik(1(Class<VR256X>) -> 0(Class<VR256X>))  [3.04;3.04]
		 Successful, latency: 3.04
	VGF2P8AFFINEINVQBZ256rrik(3(Class<VR256X>) -> 0(Class<VR256X>))  [3.03;3.03]
		 Successful, latency: 3.03
	VGF2P8AFFINEINVQBZ256rrik(4(Class<VR256X>) -> 0(Class<VR256X>))  [3.02;3.02]
		 Successful, latency: 3.02

-----VGF2P8AFFINEINVQBZ256rrikz-----
	VGF2P8AFFINEINVQBZ256rrikz(2(Class<VR256X>) -> 0(Class<VR256X>))  [3.04;3.04]
		 Successful, latency: 3.04
	VGF2P8AFFINEINVQBZ256rrikz(3(Class<VR256X>) -> 0(Class<VR256X>))  [3.04;3.04]
		 Successful, latency: 3.04

-----VGF2P8AFFINEINVQBZrri-----
	VGF2P8AFFINEINVQBZrri(1(Class<VR512>) -> 0(Class<VR512>))  [3.08;3.08]
		 Successful, latency: 3.08
	VGF2P8AFFINEINVQBZrri(2(Class<VR512>) -> 0(Class<VR512>))  [3.03;3.03]
		 Successful, latency: 3.03

-----VGF2P8AFFINEINVQBZrrik-----
	VGF2P8AFFINEINVQBZrrik(1(Class<VR512>) -> 0(Class<VR512>))  [3.06;3.06]
		 Successful, latency: 3.06
	VGF2P8AFFINEINVQBZrrik(3(Class<VR512>) -> 0(Class<VR512>))  [3.05;3.05]
		 Successful, latency: 3.05
	VGF2P8AFFINEINVQBZrrik(4(Class<VR512>) -> 0(Class<VR512>))  [3.03;3.03]
		 Successful, latency: 3.03

-----VGF2P8AFFINEINVQBZrrikz-----
	VGF2P8AFFINEINVQBZrrikz(2(Class<VR512>) -> 0(Class<VR512>))  [3.04;3.04]
		 Successful, latency: 3.04
	VGF2P8AFFINEINVQBZrrikz(3(Class<VR512>) -> 0(Class<VR512>))  [3.03;3.03]
		 Successful, latency: 3.03

-----VGF2P8AFFINEINVQBrri-----
	VGF2P8AFFINEINVQBrri(1(Class<VR128>) -> 0(Class<VR128>))  [3.04;3.04]
		 Successful, latency: 3.04
	VGF2P8AFFINEINVQBrri(2(Class<VR128>) -> 0(Class<VR128>))  [3.05;3.05]
		 Successful, latency: 3.05

-----VGF2P8AFFINEQBYrri-----
	VGF2P8AFFINEQBYrri(1(Class<VR256>) -> 0(Class<VR256>))  [3.03;3.03]
		 Successful, latency: 3.03
	VGF2P8AFFINEQBYrri(2(Class<VR256>) -> 0(Class<VR256>))  [3.02;3.02]
		 Successful, latency: 3.02

-----VGF2P8AFFINEQBZ128rri-----
	VGF2P8AFFINEQBZ128rri(1(Class<VR128X>) -> 0(Class<VR128X>))  [3.04;3.04]
		 Successful, latency: 3.04
	VGF2P8AFFINEQBZ128rri(2(Class<VR128X>) -> 0(Class<VR128X>))  [3.03;3.03]
		 Successful, latency: 3.03

-----VGF2P8AFFINEQBZ128rrik-----
	VGF2P8AFFINEQBZ128rrik(1(Class<VR128X>) -> 0(Class<VR128X>))  [3.04;3.04]
		 Successful, latency: 3.04
	VGF2P8AFFINEQBZ128rrik(3(Class<VR128X>) -> 0(Class<VR128X>))  [3.05;3.05]
		 Successful, latency: 3.05
	VGF2P8AFFINEQBZ128rrik(4(Class<VR128X>) -> 0(Class<VR128X>))  [3.06;3.06]
		 Successful, latency: 3.06

-----VGF2P8AFFINEQBZ128rrikz-----
	VGF2P8AFFINEQBZ128rrikz(2(Class<VR128X>) -> 0(Class<VR128X>))  [3.03;3.03]
		 Successful, latency: 3.03
	VGF2P8AFFINEQBZ128rrikz(3(Class<VR128X>) -> 0(Class<VR128X>))  [3.06;3.06]
		 Successful, latency: 3.06

-----VGF2P8AFFINEQBZ256rri-----
	VGF2P8AFFINEQBZ256rri(1(Class<VR256X>) -> 0(Class<VR256X>))  [3.03;3.03]
		 Successful, latency: 3.03
	VGF2P8AFFINEQBZ256rri(2(Class<VR256X>) -> 0(Class<VR256X>))  [3.03;3.03]
		 Successful, latency: 3.03

-----VGF2P8AFFINEQBZ256rrik-----
	VGF2P8AFFINEQBZ256rrik(1(Class<VR256X>) -> 0(Class<VR256X>))  [3.02;3.02]
		 Successful, latency: 3.02
	VGF2P8AFFINEQBZ256rrik(3(Class<VR256X>) -> 0(Class<VR256X>))  [3.03;3.03]
		 Successful, latency: 3.03
	VGF2P8AFFINEQBZ256rrik(4(Class<VR256X>) -> 0(Class<VR256X>))  [3.04;3.04]
		 Successful, latency: 3.04

-----VGF2P8AFFINEQBZ256rrikz-----
	VGF2P8AFFINEQBZ256rrikz(2(Class<VR256X>) -> 0(Class<VR256X>))  [3.02;3.02]
		 Successful, latency: 3.02
	VGF2P8AFFINEQBZ256rrikz(3(Class<VR256X>) -> 0(Class<VR256X>))  [3.06;3.06]
		 Successful, latency: 3.06

-----VGF2P8AFFINEQBZrri-----
	VGF2P8AFFINEQBZrri(1(Class<VR512>) -> 0(Class<VR512>))  [3.02;3.02]
		 Successful, latency: 3.02
	VGF2P8AFFINEQBZrri(2(Class<VR512>) -> 0(Class<VR512>))  [3.04;3.04]
		 Successful, latency: 3.04

-----VGF2P8AFFINEQBZrrik-----
	VGF2P8AFFINEQBZrrik(1(Class<VR512>) -> 0(Class<VR512>))  [3.02;3.02]
		 Successful, latency: 3.02
	VGF2P8AFFINEQBZrrik(3(Class<VR512>) -> 0(Class<VR512>))  [3.04;3.04]
		 Successful, latency: 3.04
	VGF2P8AFFINEQBZrrik(4(Class<VR512>) -> 0(Class<VR512>))  [3.04;3.04]
		 Successful, latency: 3.04

-----VGF2P8AFFINEQBZrrikz-----
	VGF2P8AFFINEQBZrrikz(2(Class<VR512>) -> 0(Class<VR512>))  [3.03;3.03]
		 Successful, latency: 3.03
	VGF2P8AFFINEQBZrrikz(3(Class<VR512>) -> 0(Class<VR512>))  [3.07;3.07]
		 Successful, latency: 3.07

-----VGF2P8AFFINEQBrri-----
	VGF2P8AFFINEQBrri(1(Class<VR128>) -> 0(Class<VR128>))  [3.02;3.02]
		 Successful, latency: 3.02
	VGF2P8AFFINEQBrri(2(Class<VR128>) -> 0(Class<VR128>))  [3.04;3.04]
		 Successful, latency: 3.04

-----VGF2P8MULBYrr-----
	VGF2P8MULBYrr(1(Class<VR256>) -> 0(Class<VR256>))  [3.04;3.04]
		 Successful, latency: 3.04
	VGF2P8MULBYrr(2(Class<VR256>) -> 0(Class<VR256>))  [3.05;3.05]
		 Successful, latency: 3.05

-----VGF2P8MULBZ128rr-----
	VGF2P8MULBZ128rr(1(Class<VR128X>) -> 0(Class<VR128X>))  [3.05;3.05]
		 Successful, latency: 3.05
	VGF2P8MULBZ128rr(2(Class<VR128X>) -> 0(Class<VR128X>))  [3.04;3.04]
		 Successful, latency: 3.04

-----VGF2P8MULBZ128rrk-----
	VGF2P8MULBZ128rrk(1(Class<VR128X>) -> 0(Class<VR128X>))  [3.06;3.06]
		 Successful, latency: 3.06
	VGF2P8MULBZ128rrk(3(Class<VR128X>) -> 0(Class<VR128X>))  [3.02;3.02]
		 Successful, latency: 3.02
	VGF2P8MULBZ128rrk(4(Class<VR128X>) -> 0(Class<VR128X>))  [3.04;3.04]
		 Successful, latency: 3.04

-----VGF2P8MULBZ128rrkz-----
	VGF2P8MULBZ128rrkz(2(Class<VR128X>) -> 0(Class<VR128X>))  [3.05;3.05]
		 Successful, latency: 3.05
	VGF2P8MULBZ128rrkz(3(Class<VR128X>) -> 0(Class<VR128X>))  [3.03;3.03]
		 Successful, latency: 3.03

-----VGF2P8MULBZ256rr-----
	VGF2P8MULBZ256rr(1(Class<VR256X>) -> 0(Class<VR256X>))  [3.04;3.04]
		 Successful, latency: 3.04
	VGF2P8MULBZ256rr(2(Class<VR256X>) -> 0(Class<VR256X>))  [3.02;3.02]
		 Successful, latency: 3.02

-----VGF2P8MULBZ256rrk-----
	VGF2P8MULBZ256rrk(1(Class<VR256X>) -> 0(Class<VR256X>))  [3.03;3.03]
		 Successful, latency: 3.03
	VGF2P8MULBZ256rrk(3(Class<VR256X>) -> 0(Class<VR256X>))  [3.04;3.04]
		 Successful, latency: 3.04
	VGF2P8MULBZ256rrk(4(Class<VR256X>) -> 0(Class<VR256X>))  [3.03;3.03]
		 Successful, latency: 3.03

-----VGF2P8MULBZ256rrkz-----
	VGF2P8MULBZ256rrkz(2(Class<VR256X>) -> 0(Class<VR256X>))  [3.03;3.03]
		 Successful, latency: 3.03
	VGF2P8MULBZ256rrkz(3(Class<VR256X>) -> 0(Class<VR256X>))  [3.05;3.05]
		 Successful, latency: 3.05

-----VGF2P8MULBZrr-----
	VGF2P8MULBZrr(1(Class<VR512>) -> 0(Class<VR512>))  [3.02;3.02]
		 Successful, latency: 3.02
	VGF2P8MULBZrr(2(Class<VR512>) -> 0(Class<VR512>))  [3.05;3.05]
		 Successful, latency: 3.05

-----VGF2P8MULBZrrk-----
	VGF2P8MULBZrrk(1(Class<VR512>) -> 0(Class<VR512>))  [3.02;3.02]
		 Successful, latency: 3.02
	VGF2P8MULBZrrk(3(Class<VR512>) -> 0(Class<VR512>))  [3.02;3.02]
		 Successful, latency: 3.02
	VGF2P8MULBZrrk(4(Class<VR512>) -> 0(Class<VR512>))  [3.05;3.05]
		 Successful, latency: 3.05

-----VGF2P8MULBZrrkz-----
	VGF2P8MULBZrrkz(2(Class<VR512>) -> 0(Class<VR512>))  [3.02;3.02]
		 Successful, latency: 3.02
	VGF2P8MULBZrrkz(3(Class<VR512>) -> 0(Class<VR512>))  [3.03;3.03]
		 Successful, latency: 3.03

-----VGF2P8MULBrr-----
	VGF2P8MULBrr(1(Class<VR128>) -> 0(Class<VR128>))  [3.04;3.04]
		 Successful, latency: 3.04
	VGF2P8MULBrr(2(Class<VR128>) -> 0(Class<VR128>))  [3.05;3.05]
		 Successful, latency: 3.05

-----VHADDPDYrr-----
	VHADDPDYrr(1(Class<VR256>) -> 0(Class<VR256>))  [4.42;4.42]
		 Successful, latency: 4.42
	VHADDPDYrr(2(Class<VR256>) -> 0(Class<VR256>))  [4.48;4.48]
		 Successful, latency: 4.48

-----VHADDPDrr-----
	VHADDPDrr(1(Class<VR128>) -> 0(Class<VR128>))  [4.57;4.57]
		 Successful, latency: 4.57
	VHADDPDrr(2(Class<VR128>) -> 0(Class<VR128>))  [4.36;4.36]
		 Successful, latency: 4.36

-----VHADDPSYrr-----
	VHADDPSYrr(1(Class<VR256>) -> 0(Class<VR256>))  [4.39;4.39]
		 Successful, latency: 4.39
	VHADDPSYrr(2(Class<VR256>) -> 0(Class<VR256>))  [4.46;4.46]
		 Successful, latency: 4.46

-----VHADDPSrr-----
	VHADDPSrr(1(Class<VR128>) -> 0(Class<VR128>))  [4.46;4.46]
		 Successful, latency: 4.46
	VHADDPSrr(2(Class<VR128>) -> 0(Class<VR128>))  [4.52;4.52]
		 Successful, latency: 4.52

-----VHSUBPDYrr-----
	VHSUBPDYrr(1(Class<VR256>) -> 0(Class<VR256>))  [4.52;4.52]
		 Successful, latency: 4.52
	VHSUBPDYrr(2(Class<VR256>) -> 0(Class<VR256>))  [4.49;4.49]
		 Successful, latency: 4.49

-----VHSUBPDrr-----
	VHSUBPDrr(1(Class<VR128>) -> 0(Class<VR128>))  [4.5;4.5]
		 Successful, latency: 4.5
	VHSUBPDrr(2(Class<VR128>) -> 0(Class<VR128>))  [4.48;4.48]
		 Successful, latency: 4.48

-----VHSUBPSYrr-----
	VHSUBPSYrr(1(Class<VR256>) -> 0(Class<VR256>))  [4.48;4.48]
		 Successful, latency: 4.48
	VHSUBPSYrr(2(Class<VR256>) -> 0(Class<VR256>))  [4.48;4.48]
		 Successful, latency: 4.48

-----VHSUBPSrr-----
	VHSUBPSrr(1(Class<VR128>) -> 0(Class<VR128>))  [4.54;4.54]
		 Successful, latency: 4.54
	VHSUBPSrr(2(Class<VR128>) -> 0(Class<VR128>))  [4.56;4.56]
		 Successful, latency: 4.56

-----VINSERTF128rri-----
	VINSERTF128rri(1(Class<VR256>) -> 0(Class<VR256>))  [1.01;1.01]
		 Successful, latency: 1.01
	VINSERTF128rri(2(Class<VR128>) -> 0(Class<VR256>))  [0.985;3.02]
		Dependencies:
			VEXTRACTF128rri(1(Class<VR256>) -> 0(Class<VR128>)) 
			VPBROADCASTWYrr(1(Class<VR128>) -> 0(Class<VR256>)) 
		Combined result: 4.03 cycles

-----VINSERTF32X4Z256rri-----
	VINSERTF32X4Z256rri(1(Class<VR256X>) -> 0(Class<VR256X>))  [1.01;1.01]
		 Successful, latency: 1.01
	VINSERTF32X4Z256rri(2(Class<VR128X>) -> 0(Class<VR256X>))  [0.989;3.01]
		Dependencies:
			VEXTRACTI32X4Z256rrik(3(Class<VR256X>) -> 0(Class<VR128X>)) 
			VBROADCASTF32X2Z256rr(1(Class<VR128X>) -> 0(Class<VR256X>)) 
		Combined result: 4.03 cycles

-----VINSERTF32X4Z256rrik-----
	VINSERTF32X4Z256rrik(1(Class<VR256X>) -> 0(Class<VR256X>))  [1;1]
		 Successful, latency: 1
	VINSERTF32X4Z256rrik(3(Class<VR256X>) -> 0(Class<VR256X>))  [1.01;1.01]
		 Successful, latency: 1.01
	VINSERTF32X4Z256rrik(4(Class<VR128X>) -> 0(Class<VR256X>))  [0.989;3.01]
		Dependencies:
			VEXTRACTI32X4Z256rrik(3(Class<VR256X>) -> 0(Class<VR128X>)) 
			VBROADCASTF32X2Z256rr(1(Class<VR128X>) -> 0(Class<VR256X>)) 
		Combined result: 4.03 cycles

-----VINSERTF32X4Z256rrikz-----
	VINSERTF32X4Z256rrikz(2(Class<VR256X>) -> 0(Class<VR256X>))  [1;1]
		 Successful, latency: 1
	VINSERTF32X4Z256rrikz(3(Class<VR128X>) -> 0(Class<VR256X>))  [1.01;3.03]
		Dependencies:
			VEXTRACTI32X4Z256rrik(3(Class<VR256X>) -> 0(Class<VR128X>)) 
			VBROADCASTF32X2Z256rr(1(Class<VR128X>) -> 0(Class<VR256X>)) 
		Combined result: 4.05 cycles

-----VINSERTF32X4Zrri-----
	VINSERTF32X4Zrri(1(Class<VR512>) -> 0(Class<VR512>))  [1.01;1.01]
		 Successful, latency: 1.01
	VINSERTF32X4Zrri(2(Class<VR128X>) -> 0(Class<VR512>))  [0.989;4.01]
		Dependencies:
			VEXTRACTF64X2Zrri(1(Class<VR512>) -> 0(Class<VR128X>)) 
			VINSERTF32X4Zrri(2(Class<VR128X>) -> 0(Class<VR512>)) 
		Combined result: 5.04 cycles

-----VINSERTF32X4Zrrik-----
	VINSERTF32X4Zrrik(1(Class<VR512>) -> 0(Class<VR512>))  [1.01;1.01]
		 Successful, latency: 1.01
	VINSERTF32X4Zrrik(3(Class<VR512>) -> 0(Class<VR512>))  [1.01;1.01]
		 Successful, latency: 1.01
	VINSERTF32X4Zrrik(4(Class<VR128X>) -> 0(Class<VR512>))  [0.994;4.02]
		Dependencies:
			VEXTRACTF64X2Zrri(1(Class<VR512>) -> 0(Class<VR128X>)) 
			VINSERTF32X4Zrri(2(Class<VR128X>) -> 0(Class<VR512>)) 
		Combined result: 5.04 cycles

-----VINSERTF32X4Zrrikz-----
	VINSERTF32X4Zrrikz(2(Class<VR512>) -> 0(Class<VR512>))  [1.01;1.01]
		 Successful, latency: 1.01
	VINSERTF32X4Zrrikz(3(Class<VR128X>) -> 0(Class<VR512>))  [1.02;4.04]
		Dependencies:
			VEXTRACTF64X2Zrri(1(Class<VR512>) -> 0(Class<VR128X>)) 
			VINSERTF32X4Zrri(2(Class<VR128X>) -> 0(Class<VR512>)) 
		Combined result: 5.07 cycles

-----VINSERTF32X8Zrri-----
	VINSERTF32X8Zrri(1(Class<VR512>) -> 0(Class<VR512>))  [1.01;1.01]
		 Successful, latency: 1.01
	VINSERTF32X8Zrri(2(Class<VR256X>) -> 0(Class<VR512>))  [1.01;4.03]
		Dependencies:
			VPMOVDWZrr(1(Class<VR512>) -> 0(Class<VR256X>)) 
			VINSERTF64X4Zrri(2(Class<VR256X>) -> 0(Class<VR512>)) 
		Combined result: 5.07 cycles

-----VINSERTF32X8Zrrik-----
	VINSERTF32X8Zrrik(1(Class<VR512>) -> 0(Class<VR512>))  [1.02;1.02]
		 Successful, latency: 1.02
	VINSERTF32X8Zrrik(3(Class<VR512>) -> 0(Class<VR512>))  [1;1]
		 Successful, latency: 1
	VINSERTF32X8Zrrik(4(Class<VR256X>) -> 0(Class<VR512>))  [0.987;4.01]
		Dependencies:
			VPMOVDWZrr(1(Class<VR512>) -> 0(Class<VR256X>)) 
			VINSERTF64X4Zrri(2(Class<VR256X>) -> 0(Class<VR512>)) 
		Combined result: 5.05 cycles

-----VINSERTF32X8Zrrikz-----
	VINSERTF32X8Zrrikz(2(Class<VR512>) -> 0(Class<VR512>))  [1.01;1.01]
		 Successful, latency: 1.01
	VINSERTF32X8Zrrikz(3(Class<VR256X>) -> 0(Class<VR512>))  [0.978;4]
		Dependencies:
			VPMOVDWZrr(1(Class<VR512>) -> 0(Class<VR256X>)) 
			VINSERTF64X4Zrri(2(Class<VR256X>) -> 0(Class<VR512>)) 
		Combined result: 5.04 cycles

-----VINSERTF64X2Z256rri-----
	VINSERTF64X2Z256rri(1(Class<VR256X>) -> 0(Class<VR256X>))  [1;1]
		 Successful, latency: 1
	VINSERTF64X2Z256rri(2(Class<VR128X>) -> 0(Class<VR256X>))  [1.05;3.07]
		Dependencies:
			VEXTRACTI32X4Z256rrik(3(Class<VR256X>) -> 0(Class<VR128X>)) 
			VBROADCASTF32X2Z256rr(1(Class<VR128X>) -> 0(Class<VR256X>)) 
		Combined result: 4.09 cycles

-----VINSERTF64X2Z256rrik-----
	VINSERTF64X2Z256rrik(1(Class<VR256X>) -> 0(Class<VR256X>))  [1.01;1.01]
		 Successful, latency: 1.01
	VINSERTF64X2Z256rrik(3(Class<VR256X>) -> 0(Class<VR256X>))  [1.02;1.02]
		 Successful, latency: 1.02
	VINSERTF64X2Z256rrik(4(Class<VR128X>) -> 0(Class<VR256X>))  [0.995;3.02]
		Dependencies:
			VEXTRACTI32X4Z256rrik(3(Class<VR256X>) -> 0(Class<VR128X>)) 
			VBROADCASTF32X2Z256rr(1(Class<VR128X>) -> 0(Class<VR256X>)) 
		Combined result: 4.04 cycles

-----VINSERTF64X2Z256rrikz-----
	VINSERTF64X2Z256rrikz(2(Class<VR256X>) -> 0(Class<VR256X>))  [1;1]
		 Successful, latency: 1
	VINSERTF64X2Z256rrikz(3(Class<VR128X>) -> 0(Class<VR256X>))  [0.994;3.01]
		Dependencies:
			VEXTRACTI32X4Z256rrik(3(Class<VR256X>) -> 0(Class<VR128X>)) 
			VBROADCASTF32X2Z256rr(1(Class<VR128X>) -> 0(Class<VR256X>)) 
		Combined result: 4.04 cycles

-----VINSERTF64X2Zrri-----
	VINSERTF64X2Zrri(1(Class<VR512>) -> 0(Class<VR512>))  [1;1]
		 Successful, latency: 1
	VINSERTF64X2Zrri(2(Class<VR128X>) -> 0(Class<VR512>))  [0.989;4.01]
		Dependencies:
			VEXTRACTF64X2Zrri(1(Class<VR512>) -> 0(Class<VR128X>)) 
			VINSERTF32X4Zrri(2(Class<VR128X>) -> 0(Class<VR512>)) 
		Combined result: 5.04 cycles

-----VINSERTF64X2Zrrik-----
	VINSERTF64X2Zrrik(1(Class<VR512>) -> 0(Class<VR512>))  [1;1]
		 Successful, latency: 1
	VINSERTF64X2Zrrik(3(Class<VR512>) -> 0(Class<VR512>))  [0.999;0.999]
		 Successful, latency: 0.999
	VINSERTF64X2Zrrik(4(Class<VR128X>) -> 0(Class<VR512>))  [1.02;4.04]
		Dependencies:
			VEXTRACTF64X2Zrri(1(Class<VR512>) -> 0(Class<VR128X>)) 
			VINSERTF32X4Zrri(2(Class<VR128X>) -> 0(Class<VR512>)) 
		Combined result: 5.07 cycles

-----VINSERTF64X2Zrrikz-----
	VINSERTF64X2Zrrikz(2(Class<VR512>) -> 0(Class<VR512>))  [1.01;1.01]
		 Successful, latency: 1.01
	VINSERTF64X2Zrrikz(3(Class<VR128X>) -> 0(Class<VR512>))  [1;4.02]
		Dependencies:
			VEXTRACTF64X2Zrri(1(Class<VR512>) -> 0(Class<VR128X>)) 
			VINSERTF32X4Zrri(2(Class<VR128X>) -> 0(Class<VR512>)) 
		Combined result: 5.05 cycles

-----VINSERTF64X4Zrri-----
	VINSERTF64X4Zrri(1(Class<VR512>) -> 0(Class<VR512>))  [1.01;1.01]
		 Successful, latency: 1.01
	VINSERTF64X4Zrri(2(Class<VR256X>) -> 0(Class<VR512>))  [0.999;4.02]
		Dependencies:
			VPMOVDWZrr(1(Class<VR512>) -> 0(Class<VR256X>)) 
			VINSERTF64X4Zrri(2(Class<VR256X>) -> 0(Class<VR512>)) 
		Combined result: 5.06 cycles

-----VINSERTF64X4Zrrik-----
	VINSERTF64X4Zrrik(1(Class<VR512>) -> 0(Class<VR512>))  [1.01;1.01]
		 Successful, latency: 1.01
	VINSERTF64X4Zrrik(3(Class<VR512>) -> 0(Class<VR512>))  [1;1]
		 Successful, latency: 1
	VINSERTF64X4Zrrik(4(Class<VR256X>) -> 0(Class<VR512>))  [0.984;4.01]
		Dependencies:
			VPMOVDWZrr(1(Class<VR512>) -> 0(Class<VR256X>)) 
			VINSERTF64X4Zrri(2(Class<VR256X>) -> 0(Class<VR512>)) 
		Combined result: 5.05 cycles

-----VINSERTF64X4Zrrikz-----
	VINSERTF64X4Zrrikz(2(Class<VR512>) -> 0(Class<VR512>))  [1.01;1.01]
		 Successful, latency: 1.01
	VINSERTF64X4Zrrikz(3(Class<VR256X>) -> 0(Class<VR512>))  [0.971;4]
		Dependencies:
			VPMOVDWZrr(1(Class<VR512>) -> 0(Class<VR256X>)) 
			VINSERTF64X4Zrri(2(Class<VR256X>) -> 0(Class<VR512>)) 
		Combined result: 5.03 cycles

-----VINSERTI128rri-----
	VINSERTI128rri(1(Class<VR256>) -> 0(Class<VR256>))  [1;1]
		 Successful, latency: 1
	VINSERTI128rri(2(Class<VR128>) -> 0(Class<VR256>))  [1.01;3.04]
		Dependencies:
			VEXTRACTF128rri(1(Class<VR256>) -> 0(Class<VR128>)) 
			VPBROADCASTWYrr(1(Class<VR128>) -> 0(Class<VR256>)) 
		Combined result: 4.05 cycles

-----VINSERTI32X4Z256rri-----
	VINSERTI32X4Z256rri(1(Class<VR256X>) -> 0(Class<VR256X>))  [1;1]
		 Successful, latency: 1
	VINSERTI32X4Z256rri(2(Class<VR128X>) -> 0(Class<VR256X>))  [0.987;3.01]
		Dependencies:
			VEXTRACTI32X4Z256rrik(3(Class<VR256X>) -> 0(Class<VR128X>)) 
			VBROADCASTF32X2Z256rr(1(Class<VR128X>) -> 0(Class<VR256X>)) 
		Combined result: 4.03 cycles

-----VINSERTI32X4Z256rrik-----
	VINSERTI32X4Z256rrik(1(Class<VR256X>) -> 0(Class<VR256X>))  [1.01;1.01]
		 Successful, latency: 1.01
	VINSERTI32X4Z256rrik(3(Class<VR256X>) -> 0(Class<VR256X>))  [1.01;1.01]
		 Successful, latency: 1.01
	VINSERTI32X4Z256rrik(4(Class<VR128X>) -> 0(Class<VR256X>))  [0.994;3.01]
		Dependencies:
			VEXTRACTI32X4Z256rrik(3(Class<VR256X>) -> 0(Class<VR128X>)) 
			VBROADCASTF32X2Z256rr(1(Class<VR128X>) -> 0(Class<VR256X>)) 
		Combined result: 4.04 cycles

-----VINSERTI32X4Z256rrikz-----
	VINSERTI32X4Z256rrikz(2(Class<VR256X>) -> 0(Class<VR256X>))  [1;1]
		 Successful, latency: 1
	VINSERTI32X4Z256rrikz(3(Class<VR128X>) -> 0(Class<VR256X>))  [1.01;3.03]
		Dependencies:
			VEXTRACTI32X4Z256rrik(3(Class<VR256X>) -> 0(Class<VR128X>)) 
			VBROADCASTF32X2Z256rr(1(Class<VR128X>) -> 0(Class<VR256X>)) 
		Combined result: 4.05 cycles

-----VINSERTI32X4Zrri-----
	VINSERTI32X4Zrri(1(Class<VR512>) -> 0(Class<VR512>))  [1.01;1.01]
		 Successful, latency: 1.01
	VINSERTI32X4Zrri(2(Class<VR128X>) -> 0(Class<VR512>))  [1.01;4.03]
		Dependencies:
			VEXTRACTF64X2Zrri(1(Class<VR512>) -> 0(Class<VR128X>)) 
			VINSERTF32X4Zrri(2(Class<VR128X>) -> 0(Class<VR512>)) 
		Combined result: 5.06 cycles

-----VINSERTI32X4Zrrik-----
	VINSERTI32X4Zrrik(1(Class<VR512>) -> 0(Class<VR512>))  [1.01;1.01]
		 Successful, latency: 1.01
	VINSERTI32X4Zrrik(3(Class<VR512>) -> 0(Class<VR512>))  [1.01;1.01]
		 Successful, latency: 1.01
	VINSERTI32X4Zrrik(4(Class<VR128X>) -> 0(Class<VR512>))  [1.01;4.03]
		Dependencies:
			VEXTRACTF64X2Zrri(1(Class<VR512>) -> 0(Class<VR128X>)) 
			VINSERTF32X4Zrri(2(Class<VR128X>) -> 0(Class<VR512>)) 
		Combined result: 5.06 cycles

-----VINSERTI32X4Zrrikz-----
	VINSERTI32X4Zrrikz(2(Class<VR512>) -> 0(Class<VR512>))  [1.01;1.01]
		 Successful, latency: 1.01
	VINSERTI32X4Zrrikz(3(Class<VR128X>) -> 0(Class<VR512>))  [1;4.02]
		Dependencies:
			VEXTRACTF64X2Zrri(1(Class<VR512>) -> 0(Class<VR128X>)) 
			VINSERTF32X4Zrri(2(Class<VR128X>) -> 0(Class<VR512>)) 
		Combined result: 5.05 cycles

-----VINSERTI32X8Zrri-----
	VINSERTI32X8Zrri(1(Class<VR512>) -> 0(Class<VR512>))  [1.01;1.01]
		 Successful, latency: 1.01
	VINSERTI32X8Zrri(2(Class<VR256X>) -> 0(Class<VR512>))  [0.968;3.99]
		Dependencies:
			VPMOVDWZrr(1(Class<VR512>) -> 0(Class<VR256X>)) 
			VINSERTF64X4Zrri(2(Class<VR256X>) -> 0(Class<VR512>)) 
		Combined result: 5.03 cycles

-----VINSERTI32X8Zrrik-----
	VINSERTI32X8Zrrik(1(Class<VR512>) -> 0(Class<VR512>))  [1.01;1.01]
		 Successful, latency: 1.01
	VINSERTI32X8Zrrik(3(Class<VR512>) -> 0(Class<VR512>))  [1.01;1.01]
		 Successful, latency: 1.01
	VINSERTI32X8Zrrik(4(Class<VR256X>) -> 0(Class<VR512>))  [0.973;4]
		Dependencies:
			VPMOVDWZrr(1(Class<VR512>) -> 0(Class<VR256X>)) 
			VINSERTF64X4Zrri(2(Class<VR256X>) -> 0(Class<VR512>)) 
		Combined result: 5.04 cycles

-----VINSERTI32X8Zrrikz-----
	VINSERTI32X8Zrrikz(2(Class<VR512>) -> 0(Class<VR512>))  [1.01;1.01]
		 Successful, latency: 1.01
	VINSERTI32X8Zrrikz(3(Class<VR256X>) -> 0(Class<VR512>))  [0.984;4.01]
		Dependencies:
			VPMOVDWZrr(1(Class<VR512>) -> 0(Class<VR256X>)) 
			VINSERTF64X4Zrri(2(Class<VR256X>) -> 0(Class<VR512>)) 
		Combined result: 5.05 cycles

-----VINSERTI64X2Z256rri-----
	VINSERTI64X2Z256rri(1(Class<VR256X>) -> 0(Class<VR256X>))  [1.01;1.01]
		 Successful, latency: 1.01
	VINSERTI64X2Z256rri(2(Class<VR128X>) -> 0(Class<VR256X>))  [0.989;3.01]
		Dependencies:
			VEXTRACTI32X4Z256rrik(3(Class<VR256X>) -> 0(Class<VR128X>)) 
			VBROADCASTF32X2Z256rr(1(Class<VR128X>) -> 0(Class<VR256X>)) 
		Combined result: 4.03 cycles

-----VINSERTI64X2Z256rrik-----
	VINSERTI64X2Z256rrik(1(Class<VR256X>) -> 0(Class<VR256X>))  [1.01;1.01]
		 Successful, latency: 1.01
	VINSERTI64X2Z256rrik(3(Class<VR256X>) -> 0(Class<VR256X>))  [1.02;1.02]
		 Successful, latency: 1.02
	VINSERTI64X2Z256rrik(4(Class<VR128X>) -> 0(Class<VR256X>))  [1.02;3.04]
		Dependencies:
			VEXTRACTI32X4Z256rrik(3(Class<VR256X>) -> 0(Class<VR128X>)) 
			VBROADCASTF32X2Z256rr(1(Class<VR128X>) -> 0(Class<VR256X>)) 
		Combined result: 4.07 cycles

-----VINSERTI64X2Z256rrikz-----
	VINSERTI64X2Z256rrikz(2(Class<VR256X>) -> 0(Class<VR256X>))  [1.02;1.02]
		 Successful, latency: 1.02
	VINSERTI64X2Z256rrikz(3(Class<VR128X>) -> 0(Class<VR256X>))  [0.995;3.02]
		Dependencies:
			VEXTRACTI32X4Z256rrik(3(Class<VR256X>) -> 0(Class<VR128X>)) 
			VBROADCASTF32X2Z256rr(1(Class<VR128X>) -> 0(Class<VR256X>)) 
		Combined result: 4.04 cycles

-----VINSERTI64X2Zrri-----
	VINSERTI64X2Zrri(1(Class<VR512>) -> 0(Class<VR512>))  [1.01;1.01]
		 Successful, latency: 1.01
	VINSERTI64X2Zrri(2(Class<VR128X>) -> 0(Class<VR512>))  [0.985;4.01]
		Dependencies:
			VEXTRACTF64X2Zrri(1(Class<VR512>) -> 0(Class<VR128X>)) 
			VINSERTF32X4Zrri(2(Class<VR128X>) -> 0(Class<VR512>)) 
		Combined result: 5.04 cycles

-----VINSERTI64X2Zrrik-----
	VINSERTI64X2Zrrik(1(Class<VR512>) -> 0(Class<VR512>))  [1.01;1.01]
		 Successful, latency: 1.01
	VINSERTI64X2Zrrik(3(Class<VR512>) -> 0(Class<VR512>))  [1.02;1.02]
		 Successful, latency: 1.02
	VINSERTI64X2Zrrik(4(Class<VR128X>) -> 0(Class<VR512>))  [1.02;4.04]
		Dependencies:
			VEXTRACTF64X2Zrri(1(Class<VR512>) -> 0(Class<VR128X>)) 
			VINSERTF32X4Zrri(2(Class<VR128X>) -> 0(Class<VR512>)) 
		Combined result: 5.07 cycles

-----VINSERTI64X2Zrrikz-----
	VINSERTI64X2Zrrikz(2(Class<VR512>) -> 0(Class<VR512>))  [1.01;1.01]
		 Successful, latency: 1.01
	VINSERTI64X2Zrrikz(3(Class<VR128X>) -> 0(Class<VR512>))  [0.994;4.02]
		Dependencies:
			VEXTRACTF64X2Zrri(1(Class<VR512>) -> 0(Class<VR128X>)) 
			VINSERTF32X4Zrri(2(Class<VR128X>) -> 0(Class<VR512>)) 
		Combined result: 5.04 cycles

-----VINSERTI64X4Zrri-----
	VINSERTI64X4Zrri(1(Class<VR512>) -> 0(Class<VR512>))  [1.01;1.01]
		 Successful, latency: 1.01
	VINSERTI64X4Zrri(2(Class<VR256X>) -> 0(Class<VR512>))  [0.982;4.01]
		Dependencies:
			VPMOVDWZrr(1(Class<VR512>) -> 0(Class<VR256X>)) 
			VINSERTF64X4Zrri(2(Class<VR256X>) -> 0(Class<VR512>)) 
		Combined result: 5.04 cycles

-----VINSERTI64X4Zrrik-----
	VINSERTI64X4Zrrik(1(Class<VR512>) -> 0(Class<VR512>))  [1.01;1.01]
		 Successful, latency: 1.01
	VINSERTI64X4Zrrik(3(Class<VR512>) -> 0(Class<VR512>))  [1.01;1.01]
		 Successful, latency: 1.01
	VINSERTI64X4Zrrik(4(Class<VR256X>) -> 0(Class<VR512>))  [0.965;3.99]
		Dependencies:
			VPMOVDWZrr(1(Class<VR512>) -> 0(Class<VR256X>)) 
			VINSERTF64X4Zrri(2(Class<VR256X>) -> 0(Class<VR512>)) 
		Combined result: 5.03 cycles

-----VINSERTI64X4Zrrikz-----
	VINSERTI64X4Zrrikz(2(Class<VR512>) -> 0(Class<VR512>))  [1.01;1.01]
		 Successful, latency: 1.01
	VINSERTI64X4Zrrikz(3(Class<VR256X>) -> 0(Class<VR512>))  [0.984;4.01]
		Dependencies:
			VPMOVDWZrr(1(Class<VR512>) -> 0(Class<VR256X>)) 
			VINSERTF64X4Zrri(2(Class<VR256X>) -> 0(Class<VR512>)) 
		Combined result: 5.05 cycles

-----VINSERTPSZrri-----
	VINSERTPSZrri(1(Class<VR128X>) -> 0(Class<VR128X>))  [1;1]
		 Successful, latency: 1
	VINSERTPSZrri(2(Class<VR128X>) -> 0(Class<VR128X>))  [1;1]
		 Successful, latency: 1

-----VINSERTPSrri-----
	VINSERTPSrri(1(Class<VR128>) -> 0(Class<VR128>))  [1;1]
		 Successful, latency: 1
	VINSERTPSrri(2(Class<VR128>) -> 0(Class<VR128>))  [1;1]
		 Successful, latency: 1

-----VMAXBF16Z128rr-----
	VMAXBF16Z128rr(1(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VMAXBF16Z128rr(2(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VMAXBF16Z128rrk-----
	VMAXBF16Z128rrk(1(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VMAXBF16Z128rrk(3(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VMAXBF16Z128rrk(4(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VMAXBF16Z128rrkz-----
	VMAXBF16Z128rrkz(2(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VMAXBF16Z128rrkz(3(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VMAXBF16Z256rr-----
	VMAXBF16Z256rr(1(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VMAXBF16Z256rr(2(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VMAXBF16Z256rrk-----
	VMAXBF16Z256rrk(1(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VMAXBF16Z256rrk(3(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VMAXBF16Z256rrk(4(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VMAXBF16Z256rrkz-----
	VMAXBF16Z256rrkz(2(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VMAXBF16Z256rrkz(3(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VMAXBF16Zrr-----
	VMAXBF16Zrr(1(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VMAXBF16Zrr(2(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VMAXBF16Zrrk-----
	VMAXBF16Zrrk(1(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VMAXBF16Zrrk(3(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VMAXBF16Zrrk(4(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VMAXBF16Zrrkz-----
	VMAXBF16Zrrkz(2(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VMAXBF16Zrrkz(3(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VMAXCPDYrr-----
	VMAXCPDYrr(1(Class<VR256>) -> 0(Class<VR256>))  [2.01;2.01]
		 Successful, latency: 2.01
	VMAXCPDYrr(2(Class<VR256>) -> 0(Class<VR256>))  [2.02;2.02]
		 Successful, latency: 2.02

-----VMAXCPDZ128rr-----
	VMAXCPDZ128rr(1(Class<VR128X>) -> 0(Class<VR128X>))  [2.02;2.02]
		 Successful, latency: 2.02
	VMAXCPDZ128rr(2(Class<VR128X>) -> 0(Class<VR128X>))  [2.01;2.01]
		 Successful, latency: 2.01

-----VMAXCPDZ128rrk-----
	VMAXCPDZ128rrk(1(Class<VR128X>) -> 0(Class<VR128X>))  [2.02;2.02]
		 Successful, latency: 2.02
	VMAXCPDZ128rrk(3(Class<VR128X>) -> 0(Class<VR128X>))  [2.02;2.02]
		 Successful, latency: 2.02
	VMAXCPDZ128rrk(4(Class<VR128X>) -> 0(Class<VR128X>))  [2.03;2.03]
		 Successful, latency: 2.03

-----VMAXCPDZ128rrkz-----
	VMAXCPDZ128rrkz(2(Class<VR128X>) -> 0(Class<VR128X>))  [2.01;2.01]
		 Successful, latency: 2.01
	VMAXCPDZ128rrkz(3(Class<VR128X>) -> 0(Class<VR128X>))  [2.02;2.02]
		 Successful, latency: 2.02

-----VMAXCPDZ256rr-----
	VMAXCPDZ256rr(1(Class<VR256X>) -> 0(Class<VR256X>))  [2.03;2.03]
		 Successful, latency: 2.03
	VMAXCPDZ256rr(2(Class<VR256X>) -> 0(Class<VR256X>))  [2.02;2.02]
		 Successful, latency: 2.02

-----VMAXCPDZ256rrk-----
	VMAXCPDZ256rrk(1(Class<VR256X>) -> 0(Class<VR256X>))  [2.03;2.03]
		 Successful, latency: 2.03
	VMAXCPDZ256rrk(3(Class<VR256X>) -> 0(Class<VR256X>))  [2.03;2.03]
		 Successful, latency: 2.03
	VMAXCPDZ256rrk(4(Class<VR256X>) -> 0(Class<VR256X>))  [2.03;2.03]
		 Successful, latency: 2.03

-----VMAXCPDZ256rrkz-----
	VMAXCPDZ256rrkz(2(Class<VR256X>) -> 0(Class<VR256X>))  [2.02;2.02]
		 Successful, latency: 2.02
	VMAXCPDZ256rrkz(3(Class<VR256X>) -> 0(Class<VR256X>))  [2.02;2.02]
		 Successful, latency: 2.02

-----VMAXCPDZrr-----
	VMAXCPDZrr(1(Class<VR512>) -> 0(Class<VR512>))  [2.02;2.02]
		 Successful, latency: 2.02
	VMAXCPDZrr(2(Class<VR512>) -> 0(Class<VR512>))  [2.01;2.01]
		 Successful, latency: 2.01

-----VMAXCPDZrrk-----
	VMAXCPDZrrk(1(Class<VR512>) -> 0(Class<VR512>))  [2.02;2.02]
		 Successful, latency: 2.02
	VMAXCPDZrrk(3(Class<VR512>) -> 0(Class<VR512>))  [2.01;2.01]
		 Successful, latency: 2.01
	VMAXCPDZrrk(4(Class<VR512>) -> 0(Class<VR512>))  [2.01;2.01]
		 Successful, latency: 2.01

-----VMAXCPDZrrkz-----
	VMAXCPDZrrkz(2(Class<VR512>) -> 0(Class<VR512>))  [2.02;2.02]
		 Successful, latency: 2.02
	VMAXCPDZrrkz(3(Class<VR512>) -> 0(Class<VR512>))  [2.01;2.01]
		 Successful, latency: 2.01

-----VMAXCPDrr-----
	VMAXCPDrr(1(Class<VR128>) -> 0(Class<VR128>))  [2.02;2.02]
		 Successful, latency: 2.02
	VMAXCPDrr(2(Class<VR128>) -> 0(Class<VR128>))  [2.02;2.02]
		 Successful, latency: 2.02

-----VMAXCPHZ128rr-----
	VMAXCPHZ128rr(1(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VMAXCPHZ128rr(2(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VMAXCPHZ128rrk-----
	VMAXCPHZ128rrk(1(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VMAXCPHZ128rrk(3(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VMAXCPHZ128rrk(4(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VMAXCPHZ128rrkz-----
	VMAXCPHZ128rrkz(2(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VMAXCPHZ128rrkz(3(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VMAXCPHZ256rr-----
	VMAXCPHZ256rr(1(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VMAXCPHZ256rr(2(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VMAXCPHZ256rrk-----
	VMAXCPHZ256rrk(1(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VMAXCPHZ256rrk(3(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VMAXCPHZ256rrk(4(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VMAXCPHZ256rrkz-----
	VMAXCPHZ256rrkz(2(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VMAXCPHZ256rrkz(3(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VMAXCPHZrr-----
	VMAXCPHZrr(1(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VMAXCPHZrr(2(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VMAXCPHZrrk-----
	VMAXCPHZrrk(1(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VMAXCPHZrrk(3(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VMAXCPHZrrk(4(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VMAXCPHZrrkz-----
	VMAXCPHZrrkz(2(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VMAXCPHZrrkz(3(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VMAXCPSYrr-----
	VMAXCPSYrr(1(Class<VR256>) -> 0(Class<VR256>))  [2.02;2.02]
		 Successful, latency: 2.02
	VMAXCPSYrr(2(Class<VR256>) -> 0(Class<VR256>))  [2.02;2.02]
		 Successful, latency: 2.02

-----VMAXCPSZ128rr-----
	VMAXCPSZ128rr(1(Class<VR128X>) -> 0(Class<VR128X>))  [2.03;2.03]
		 Successful, latency: 2.03
	VMAXCPSZ128rr(2(Class<VR128X>) -> 0(Class<VR128X>))  [2.02;2.02]
		 Successful, latency: 2.02

-----VMAXCPSZ128rrk-----
	VMAXCPSZ128rrk(1(Class<VR128X>) -> 0(Class<VR128X>))  [2.02;2.02]
		 Successful, latency: 2.02
	VMAXCPSZ128rrk(3(Class<VR128X>) -> 0(Class<VR128X>))  [2.01;2.01]
		 Successful, latency: 2.01
	VMAXCPSZ128rrk(4(Class<VR128X>) -> 0(Class<VR128X>))  [2.02;2.02]
		 Successful, latency: 2.02

-----VMAXCPSZ128rrkz-----
	VMAXCPSZ128rrkz(2(Class<VR128X>) -> 0(Class<VR128X>))  [2.01;2.01]
		 Successful, latency: 2.01
	VMAXCPSZ128rrkz(3(Class<VR128X>) -> 0(Class<VR128X>))  [2.02;2.02]
		 Successful, latency: 2.02

-----VMAXCPSZ256rr-----
	VMAXCPSZ256rr(1(Class<VR256X>) -> 0(Class<VR256X>))  [2.02;2.02]
		 Successful, latency: 2.02
	VMAXCPSZ256rr(2(Class<VR256X>) -> 0(Class<VR256X>))  [2.02;2.02]
		 Successful, latency: 2.02

-----VMAXCPSZ256rrk-----
	VMAXCPSZ256rrk(1(Class<VR256X>) -> 0(Class<VR256X>))  [2.02;2.02]
		 Successful, latency: 2.02
	VMAXCPSZ256rrk(3(Class<VR256X>) -> 0(Class<VR256X>))  [2.02;2.02]
		 Successful, latency: 2.02
	VMAXCPSZ256rrk(4(Class<VR256X>) -> 0(Class<VR256X>))  [2.01;2.01]
		 Successful, latency: 2.01

-----VMAXCPSZ256rrkz-----
	VMAXCPSZ256rrkz(2(Class<VR256X>) -> 0(Class<VR256X>))  [2.03;2.03]
		 Successful, latency: 2.03
	VMAXCPSZ256rrkz(3(Class<VR256X>) -> 0(Class<VR256X>))  [2.02;2.02]
		 Successful, latency: 2.02

-----VMAXCPSZrr-----
	VMAXCPSZrr(1(Class<VR512>) -> 0(Class<VR512>))  [2.02;2.02]
		 Successful, latency: 2.02
	VMAXCPSZrr(2(Class<VR512>) -> 0(Class<VR512>))  [2.02;2.02]
		 Successful, latency: 2.02

-----VMAXCPSZrrk-----
	VMAXCPSZrrk(1(Class<VR512>) -> 0(Class<VR512>))  [2.02;2.02]
		 Successful, latency: 2.02
	VMAXCPSZrrk(3(Class<VR512>) -> 0(Class<VR512>))  [2.02;2.02]
		 Successful, latency: 2.02
	VMAXCPSZrrk(4(Class<VR512>) -> 0(Class<VR512>))  [2.02;2.02]
		 Successful, latency: 2.02

-----VMAXCPSZrrkz-----
	VMAXCPSZrrkz(2(Class<VR512>) -> 0(Class<VR512>))  [2.03;2.03]
		 Successful, latency: 2.03
	VMAXCPSZrrkz(3(Class<VR512>) -> 0(Class<VR512>))  [2.03;2.03]
		 Successful, latency: 2.03

-----VMAXCPSrr-----
	VMAXCPSrr(1(Class<VR128>) -> 0(Class<VR128>))  [2.02;2.02]
		 Successful, latency: 2.02
	VMAXCPSrr(2(Class<VR128>) -> 0(Class<VR128>))  [2.01;2.01]
		 Successful, latency: 2.01

-----VMAXCSDZrr-----
	VMAXCSDZrr(1(Class<FR64X>) -> 0(Class<FR64X>))  [2.02;2.02]
		 Successful, latency: 2.02
	VMAXCSDZrr(2(Class<FR64X>) -> 0(Class<FR64X>))  [2.02;2.02]
		 Successful, latency: 2.02

-----VMAXCSDrr-----
	VMAXCSDrr(1(Class<FR64>) -> 0(Class<FR64>))  [2.02;2.02]
		 Successful, latency: 2.02
	VMAXCSDrr(2(Class<FR64>) -> 0(Class<FR64>))  [2.01;2.01]
		 Successful, latency: 2.01

-----VMAXCSHZrr-----
	VMAXCSHZrr(1(Class<FR16X>) -> 0(Class<FR16X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VMAXCSHZrr(2(Class<FR16X>) -> 0(Class<FR16X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VMAXCSSZrr-----
	VMAXCSSZrr(1(Class<FR32X>) -> 0(Class<FR32X>))  [2.03;2.03]
		 Successful, latency: 2.03
	VMAXCSSZrr(2(Class<FR32X>) -> 0(Class<FR32X>))  [2.02;2.02]
		 Successful, latency: 2.02

-----VMAXCSSrr-----
	VMAXCSSrr(1(Class<FR32>) -> 0(Class<FR32>))  [2.02;2.02]
		 Successful, latency: 2.02
	VMAXCSSrr(2(Class<FR32>) -> 0(Class<FR32>))  [2.03;2.03]
		 Successful, latency: 2.03

-----VMAXPDYrr-----
	VMAXPDYrr(1(Class<VR256>) -> 0(Class<VR256>))  [2.02;2.02]
		 Successful, latency: 2.02
	VMAXPDYrr(2(Class<VR256>) -> 0(Class<VR256>))  [2.01;2.01]
		 Successful, latency: 2.01

-----VMAXPDZ128rr-----
	VMAXPDZ128rr(1(Class<VR128X>) -> 0(Class<VR128X>))  [2.03;2.03]
		 Successful, latency: 2.03
	VMAXPDZ128rr(2(Class<VR128X>) -> 0(Class<VR128X>))  [2.02;2.02]
		 Successful, latency: 2.02

-----VMAXPDZ128rrk-----
	VMAXPDZ128rrk(1(Class<VR128X>) -> 0(Class<VR128X>))  [2.01;2.01]
		 Successful, latency: 2.01
	VMAXPDZ128rrk(3(Class<VR128X>) -> 0(Class<VR128X>))  [2.03;2.03]
		 Successful, latency: 2.03
	VMAXPDZ128rrk(4(Class<VR128X>) -> 0(Class<VR128X>))  [2.02;2.02]
		 Successful, latency: 2.02

-----VMAXPDZ128rrkz-----
	VMAXPDZ128rrkz(2(Class<VR128X>) -> 0(Class<VR128X>))  [2.02;2.02]
		 Successful, latency: 2.02
	VMAXPDZ128rrkz(3(Class<VR128X>) -> 0(Class<VR128X>))  [2.02;2.02]
		 Successful, latency: 2.02

-----VMAXPDZ256rr-----
	VMAXPDZ256rr(1(Class<VR256X>) -> 0(Class<VR256X>))  [2.02;2.02]
		 Successful, latency: 2.02
	VMAXPDZ256rr(2(Class<VR256X>) -> 0(Class<VR256X>))  [2.03;2.03]
		 Successful, latency: 2.03

-----VMAXPDZ256rrb-----
	VMAXPDZ256rrb(1(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VMAXPDZ256rrb(2(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VMAXPDZ256rrbk-----
	VMAXPDZ256rrbk(1(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VMAXPDZ256rrbk(3(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VMAXPDZ256rrbk(4(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VMAXPDZ256rrbkz-----
	VMAXPDZ256rrbkz(2(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VMAXPDZ256rrbkz(3(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VMAXPDZ256rrk-----
	VMAXPDZ256rrk(1(Class<VR256X>) -> 0(Class<VR256X>))  [2.02;2.02]
		 Successful, latency: 2.02
	VMAXPDZ256rrk(3(Class<VR256X>) -> 0(Class<VR256X>))  [2.02;2.02]
		 Successful, latency: 2.02
	VMAXPDZ256rrk(4(Class<VR256X>) -> 0(Class<VR256X>))  [2.02;2.02]
		 Successful, latency: 2.02

-----VMAXPDZ256rrkz-----
	VMAXPDZ256rrkz(2(Class<VR256X>) -> 0(Class<VR256X>))  [2.01;2.01]
		 Successful, latency: 2.01
	VMAXPDZ256rrkz(3(Class<VR256X>) -> 0(Class<VR256X>))  [2.01;2.01]
		 Successful, latency: 2.01

-----VMAXPDZrr-----
	VMAXPDZrr(1(Class<VR512>) -> 0(Class<VR512>))  [2.02;2.02]
		 Successful, latency: 2.02
	VMAXPDZrr(2(Class<VR512>) -> 0(Class<VR512>))  [2.02;2.02]
		 Successful, latency: 2.02

-----VMAXPDZrrb-----
	VMAXPDZrrb(1(Class<VR512>) -> 0(Class<VR512>))  [2.03;2.03]
		 Successful, latency: 2.03
	VMAXPDZrrb(2(Class<VR512>) -> 0(Class<VR512>))  [2.01;2.01]
		 Successful, latency: 2.01

-----VMAXPDZrrbk-----
	VMAXPDZrrbk(1(Class<VR512>) -> 0(Class<VR512>))  [2.03;2.03]
		 Successful, latency: 2.03
	VMAXPDZrrbk(3(Class<VR512>) -> 0(Class<VR512>))  [2.05;2.05]
		 Successful, latency: 2.05
	VMAXPDZrrbk(4(Class<VR512>) -> 0(Class<VR512>))  [2.03;2.03]
		 Successful, latency: 2.03

-----VMAXPDZrrbkz-----
	VMAXPDZrrbkz(2(Class<VR512>) -> 0(Class<VR512>))  [2.02;2.02]
		 Successful, latency: 2.02
	VMAXPDZrrbkz(3(Class<VR512>) -> 0(Class<VR512>))  [2.04;2.04]
		 Successful, latency: 2.04

-----VMAXPDZrrk-----
	VMAXPDZrrk(1(Class<VR512>) -> 0(Class<VR512>))  [2.01;2.01]
		 Successful, latency: 2.01
	VMAXPDZrrk(3(Class<VR512>) -> 0(Class<VR512>))  [2.02;2.02]
		 Successful, latency: 2.02
	VMAXPDZrrk(4(Class<VR512>) -> 0(Class<VR512>))  [2.02;2.02]
		 Successful, latency: 2.02

-----VMAXPDZrrkz-----
	VMAXPDZrrkz(2(Class<VR512>) -> 0(Class<VR512>))  [2.02;2.02]
		 Successful, latency: 2.02
	VMAXPDZrrkz(3(Class<VR512>) -> 0(Class<VR512>))  [2.01;2.01]
		 Successful, latency: 2.01

-----VMAXPDrr-----
	VMAXPDrr(1(Class<VR128>) -> 0(Class<VR128>))  [2.02;2.02]
		 Successful, latency: 2.02
	VMAXPDrr(2(Class<VR128>) -> 0(Class<VR128>))  [2.03;2.03]
		 Successful, latency: 2.03

-----VMAXPHZ128rr-----
	VMAXPHZ128rr(1(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VMAXPHZ128rr(2(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VMAXPHZ128rrk-----
	VMAXPHZ128rrk(1(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VMAXPHZ128rrk(3(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VMAXPHZ128rrk(4(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VMAXPHZ128rrkz-----
	VMAXPHZ128rrkz(2(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VMAXPHZ128rrkz(3(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VMAXPHZ256rr-----
	VMAXPHZ256rr(1(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VMAXPHZ256rr(2(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VMAXPHZ256rrb-----
	VMAXPHZ256rrb(1(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VMAXPHZ256rrb(2(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VMAXPHZ256rrbk-----
	VMAXPHZ256rrbk(1(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VMAXPHZ256rrbk(3(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VMAXPHZ256rrbk(4(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VMAXPHZ256rrbkz-----
	VMAXPHZ256rrbkz(2(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VMAXPHZ256rrbkz(3(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VMAXPHZ256rrk-----
	VMAXPHZ256rrk(1(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VMAXPHZ256rrk(3(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VMAXPHZ256rrk(4(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VMAXPHZ256rrkz-----
	VMAXPHZ256rrkz(2(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VMAXPHZ256rrkz(3(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VMAXPHZrr-----
	VMAXPHZrr(1(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VMAXPHZrr(2(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VMAXPHZrrb-----
	VMAXPHZrrb(1(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VMAXPHZrrb(2(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VMAXPHZrrbk-----
	VMAXPHZrrbk(1(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VMAXPHZrrbk(3(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VMAXPHZrrbk(4(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VMAXPHZrrbkz-----
	VMAXPHZrrbkz(2(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VMAXPHZrrbkz(3(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VMAXPHZrrk-----
	VMAXPHZrrk(1(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VMAXPHZrrk(3(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VMAXPHZrrk(4(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VMAXPHZrrkz-----
	VMAXPHZrrkz(2(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VMAXPHZrrkz(3(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VMAXPSYrr-----
	VMAXPSYrr(1(Class<VR256>) -> 0(Class<VR256>))  [2.03;2.03]
		 Successful, latency: 2.03
	VMAXPSYrr(2(Class<VR256>) -> 0(Class<VR256>))  [2.01;2.01]
		 Successful, latency: 2.01

-----VMAXPSZ128rr-----
	VMAXPSZ128rr(1(Class<VR128X>) -> 0(Class<VR128X>))  [2.01;2.01]
		 Successful, latency: 2.01
	VMAXPSZ128rr(2(Class<VR128X>) -> 0(Class<VR128X>))  [2.01;2.01]
		 Successful, latency: 2.01

-----VMAXPSZ128rrk-----
	VMAXPSZ128rrk(1(Class<VR128X>) -> 0(Class<VR128X>))  [2.02;2.02]
		 Successful, latency: 2.02
	VMAXPSZ128rrk(3(Class<VR128X>) -> 0(Class<VR128X>))  [2.01;2.01]
		 Successful, latency: 2.01
	VMAXPSZ128rrk(4(Class<VR128X>) -> 0(Class<VR128X>))  [2.02;2.02]
		 Successful, latency: 2.02

-----VMAXPSZ128rrkz-----
	VMAXPSZ128rrkz(2(Class<VR128X>) -> 0(Class<VR128X>))  [2.02;2.02]
		 Successful, latency: 2.02
	VMAXPSZ128rrkz(3(Class<VR128X>) -> 0(Class<VR128X>))  [2.01;2.01]
		 Successful, latency: 2.01

-----VMAXPSZ256rr-----
	VMAXPSZ256rr(1(Class<VR256X>) -> 0(Class<VR256X>))  [2.03;2.03]
		 Successful, latency: 2.03
	VMAXPSZ256rr(2(Class<VR256X>) -> 0(Class<VR256X>))  [2.01;2.01]
		 Successful, latency: 2.01

-----VMAXPSZ256rrb-----
	VMAXPSZ256rrb(1(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VMAXPSZ256rrb(2(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VMAXPSZ256rrbk-----
	VMAXPSZ256rrbk(1(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VMAXPSZ256rrbk(3(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VMAXPSZ256rrbk(4(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VMAXPSZ256rrbkz-----
	VMAXPSZ256rrbkz(2(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VMAXPSZ256rrbkz(3(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VMAXPSZ256rrk-----
	VMAXPSZ256rrk(1(Class<VR256X>) -> 0(Class<VR256X>))  [2.02;2.02]
		 Successful, latency: 2.02
	VMAXPSZ256rrk(3(Class<VR256X>) -> 0(Class<VR256X>))  [2.02;2.02]
		 Successful, latency: 2.02
	VMAXPSZ256rrk(4(Class<VR256X>) -> 0(Class<VR256X>))  [2.01;2.01]
		 Successful, latency: 2.01

-----VMAXPSZ256rrkz-----
	VMAXPSZ256rrkz(2(Class<VR256X>) -> 0(Class<VR256X>))  [2.02;2.02]
		 Successful, latency: 2.02
	VMAXPSZ256rrkz(3(Class<VR256X>) -> 0(Class<VR256X>))  [2.03;2.03]
		 Successful, latency: 2.03

-----VMAXPSZrr-----
	VMAXPSZrr(1(Class<VR512>) -> 0(Class<VR512>))  [2.03;2.03]
		 Successful, latency: 2.03
	VMAXPSZrr(2(Class<VR512>) -> 0(Class<VR512>))  [2.02;2.02]
		 Successful, latency: 2.02

-----VMAXPSZrrb-----
	VMAXPSZrrb(1(Class<VR512>) -> 0(Class<VR512>))  [2.02;2.02]
		 Successful, latency: 2.02
	VMAXPSZrrb(2(Class<VR512>) -> 0(Class<VR512>))  [2.02;2.02]
		 Successful, latency: 2.02

-----VMAXPSZrrbk-----
	VMAXPSZrrbk(1(Class<VR512>) -> 0(Class<VR512>))  [2.02;2.02]
		 Successful, latency: 2.02
	VMAXPSZrrbk(3(Class<VR512>) -> 0(Class<VR512>))  [2.02;2.02]
		 Successful, latency: 2.02
	VMAXPSZrrbk(4(Class<VR512>) -> 0(Class<VR512>))  [2.02;2.02]
		 Successful, latency: 2.02

-----VMAXPSZrrbkz-----
	VMAXPSZrrbkz(2(Class<VR512>) -> 0(Class<VR512>))  [2.02;2.02]
		 Successful, latency: 2.02
	VMAXPSZrrbkz(3(Class<VR512>) -> 0(Class<VR512>))  [2.02;2.02]
		 Successful, latency: 2.02

-----VMAXPSZrrk-----
	VMAXPSZrrk(1(Class<VR512>) -> 0(Class<VR512>))  [2.02;2.02]
		 Successful, latency: 2.02
	VMAXPSZrrk(3(Class<VR512>) -> 0(Class<VR512>))  [2.02;2.02]
		 Successful, latency: 2.02
	VMAXPSZrrk(4(Class<VR512>) -> 0(Class<VR512>))  [2.01;2.01]
		 Successful, latency: 2.01

-----VMAXPSZrrkz-----
	VMAXPSZrrkz(2(Class<VR512>) -> 0(Class<VR512>))  [2.03;2.03]
		 Successful, latency: 2.03
	VMAXPSZrrkz(3(Class<VR512>) -> 0(Class<VR512>))  [2.01;2.01]
		 Successful, latency: 2.01

-----VMAXPSrr-----
	VMAXPSrr(1(Class<VR128>) -> 0(Class<VR128>))  [2.02;2.02]
		 Successful, latency: 2.02
	VMAXPSrr(2(Class<VR128>) -> 0(Class<VR128>))  [2.02;2.02]
		 Successful, latency: 2.02

-----VMAXSDZrr-----
	VMAXSDZrr(1(Class<FR64X>) -> 0(Class<FR64X>))  [2.02;2.02]
		 Successful, latency: 2.02
	VMAXSDZrr(2(Class<FR64X>) -> 0(Class<FR64X>))  [2.02;2.02]
		 Successful, latency: 2.02

-----VMAXSDZrr_Int-----
	VMAXSDZrr_Int(1(Class<VR128X>) -> 0(Class<VR128X>))  [2.02;2.02]
		 Successful, latency: 2.02
	VMAXSDZrr_Int(2(Class<VR128X>) -> 0(Class<VR128X>))  [2.02;2.02]
		 Successful, latency: 2.02

-----VMAXSDZrrb_Int-----
	VMAXSDZrrb_Int(1(Class<VR128X>) -> 0(Class<VR128X>))  [2.02;2.02]
		 Successful, latency: 2.02
	VMAXSDZrrb_Int(2(Class<VR128X>) -> 0(Class<VR128X>))  [2.02;2.02]
		 Successful, latency: 2.02

-----VMAXSDZrrbk_Int-----
	VMAXSDZrrbk_Int(1(Class<VR128X>) -> 0(Class<VR128X>))  [2.02;2.02]
		 Successful, latency: 2.02
	VMAXSDZrrbk_Int(3(Class<VR128X>) -> 0(Class<VR128X>))  [2.02;2.02]
		 Successful, latency: 2.02
	VMAXSDZrrbk_Int(4(Class<VR128X>) -> 0(Class<VR128X>))  [2.02;2.02]
		 Successful, latency: 2.02

-----VMAXSDZrrbkz_Int-----
	VMAXSDZrrbkz_Int(2(Class<VR128X>) -> 0(Class<VR128X>))  [2.01;2.01]
		 Successful, latency: 2.01
	VMAXSDZrrbkz_Int(3(Class<VR128X>) -> 0(Class<VR128X>))  [2.01;2.01]
		 Successful, latency: 2.01

-----VMAXSDZrrk_Int-----
	VMAXSDZrrk_Int(1(Class<VR128X>) -> 0(Class<VR128X>))  [2.01;2.01]
		 Successful, latency: 2.01
	VMAXSDZrrk_Int(3(Class<VR128X>) -> 0(Class<VR128X>))  [2.02;2.02]
		 Successful, latency: 2.02
	VMAXSDZrrk_Int(4(Class<VR128X>) -> 0(Class<VR128X>))  [2.02;2.02]
		 Successful, latency: 2.02

-----VMAXSDZrrkz_Int-----
	VMAXSDZrrkz_Int(2(Class<VR128X>) -> 0(Class<VR128X>))  [2.03;2.03]
		 Successful, latency: 2.03
	VMAXSDZrrkz_Int(3(Class<VR128X>) -> 0(Class<VR128X>))  [2.03;2.03]
		 Successful, latency: 2.03

-----VMAXSDrr-----
	VMAXSDrr(1(Class<FR64>) -> 0(Class<FR64>))  [2.02;2.02]
		 Successful, latency: 2.02
	VMAXSDrr(2(Class<FR64>) -> 0(Class<FR64>))  [2.02;2.02]
		 Successful, latency: 2.02

-----VMAXSDrr_Int-----
	VMAXSDrr_Int(1(Class<VR128>) -> 0(Class<VR128>))  [2.02;2.02]
		 Successful, latency: 2.02
	VMAXSDrr_Int(2(Class<VR128>) -> 0(Class<VR128>))  [2.02;2.02]
		 Successful, latency: 2.02

-----VMAXSHZrr-----
	VMAXSHZrr(1(Class<FR16X>) -> 0(Class<FR16X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VMAXSHZrr(2(Class<FR16X>) -> 0(Class<FR16X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VMAXSHZrr_Int-----
	VMAXSHZrr_Int(1(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VMAXSHZrr_Int(2(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VMAXSHZrrb_Int-----
	VMAXSHZrrb_Int(1(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VMAXSHZrrb_Int(2(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VMAXSHZrrbk_Int-----
	VMAXSHZrrbk_Int(1(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VMAXSHZrrbk_Int(3(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VMAXSHZrrbk_Int(4(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VMAXSHZrrbkz_Int-----
	VMAXSHZrrbkz_Int(2(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VMAXSHZrrbkz_Int(3(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VMAXSHZrrk_Int-----
	VMAXSHZrrk_Int(1(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VMAXSHZrrk_Int(3(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VMAXSHZrrk_Int(4(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VMAXSHZrrkz_Int-----
	VMAXSHZrrkz_Int(2(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VMAXSHZrrkz_Int(3(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VMAXSSZrr-----
	VMAXSSZrr(1(Class<FR32X>) -> 0(Class<FR32X>))  [2.02;2.02]
		 Successful, latency: 2.02
	VMAXSSZrr(2(Class<FR32X>) -> 0(Class<FR32X>))  [2.02;2.02]
		 Successful, latency: 2.02

-----VMAXSSZrr_Int-----
	VMAXSSZrr_Int(1(Class<VR128X>) -> 0(Class<VR128X>))  [2.02;2.02]
		 Successful, latency: 2.02
	VMAXSSZrr_Int(2(Class<VR128X>) -> 0(Class<VR128X>))  [2.02;2.02]
		 Successful, latency: 2.02

-----VMAXSSZrrb_Int-----
	VMAXSSZrrb_Int(1(Class<VR128X>) -> 0(Class<VR128X>))  [2.01;2.01]
		 Successful, latency: 2.01
	VMAXSSZrrb_Int(2(Class<VR128X>) -> 0(Class<VR128X>))  [2.03;2.03]
		 Successful, latency: 2.03

-----VMAXSSZrrbk_Int-----
	VMAXSSZrrbk_Int(1(Class<VR128X>) -> 0(Class<VR128X>))  [2.02;2.02]
		 Successful, latency: 2.02
	VMAXSSZrrbk_Int(3(Class<VR128X>) -> 0(Class<VR128X>))  [2.02;2.02]
		 Successful, latency: 2.02
	VMAXSSZrrbk_Int(4(Class<VR128X>) -> 0(Class<VR128X>))  [2.02;2.02]
		 Successful, latency: 2.02

-----VMAXSSZrrbkz_Int-----
	VMAXSSZrrbkz_Int(2(Class<VR128X>) -> 0(Class<VR128X>))  [2.02;2.02]
		 Successful, latency: 2.02
	VMAXSSZrrbkz_Int(3(Class<VR128X>) -> 0(Class<VR128X>))  [2.02;2.02]
		 Successful, latency: 2.02

-----VMAXSSZrrk_Int-----
	VMAXSSZrrk_Int(1(Class<VR128X>) -> 0(Class<VR128X>))  [2.02;2.02]
		 Successful, latency: 2.02
	VMAXSSZrrk_Int(3(Class<VR128X>) -> 0(Class<VR128X>))  [2.02;2.02]
		 Successful, latency: 2.02
	VMAXSSZrrk_Int(4(Class<VR128X>) -> 0(Class<VR128X>))  [2.01;2.01]
		 Successful, latency: 2.01

-----VMAXSSZrrkz_Int-----
	VMAXSSZrrkz_Int(2(Class<VR128X>) -> 0(Class<VR128X>))  [2.01;2.01]
		 Successful, latency: 2.01
	VMAXSSZrrkz_Int(3(Class<VR128X>) -> 0(Class<VR128X>))  [2.02;2.02]
		 Successful, latency: 2.02

-----VMAXSSrr-----
	VMAXSSrr(1(Class<FR32>) -> 0(Class<FR32>))  [2.03;2.03]
		 Successful, latency: 2.03
	VMAXSSrr(2(Class<FR32>) -> 0(Class<FR32>))  [2.02;2.02]
		 Successful, latency: 2.02

-----VMAXSSrr_Int-----
	VMAXSSrr_Int(1(Class<VR128>) -> 0(Class<VR128>))  [2.02;2.02]
		 Successful, latency: 2.02
	VMAXSSrr_Int(2(Class<VR128>) -> 0(Class<VR128>))  [2.02;2.02]
		 Successful, latency: 2.02

-----VMINBF16Z128rr-----
	VMINBF16Z128rr(1(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VMINBF16Z128rr(2(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VMINBF16Z128rrk-----
	VMINBF16Z128rrk(1(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VMINBF16Z128rrk(3(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VMINBF16Z128rrk(4(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VMINBF16Z128rrkz-----
	VMINBF16Z128rrkz(2(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VMINBF16Z128rrkz(3(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VMINBF16Z256rr-----
	VMINBF16Z256rr(1(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VMINBF16Z256rr(2(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VMINBF16Z256rrk-----
	VMINBF16Z256rrk(1(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VMINBF16Z256rrk(3(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VMINBF16Z256rrk(4(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VMINBF16Z256rrkz-----
	VMINBF16Z256rrkz(2(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VMINBF16Z256rrkz(3(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VMINBF16Zrr-----
	VMINBF16Zrr(1(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VMINBF16Zrr(2(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VMINBF16Zrrk-----
	VMINBF16Zrrk(1(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VMINBF16Zrrk(3(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VMINBF16Zrrk(4(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VMINBF16Zrrkz-----
	VMINBF16Zrrkz(2(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VMINBF16Zrrkz(3(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VMINCPDYrr-----
	VMINCPDYrr(1(Class<VR256>) -> 0(Class<VR256>))  [2.03;2.03]
		 Successful, latency: 2.03
	VMINCPDYrr(2(Class<VR256>) -> 0(Class<VR256>))  [2.03;2.03]
		 Successful, latency: 2.03

-----VMINCPDZ128rr-----
	VMINCPDZ128rr(1(Class<VR128X>) -> 0(Class<VR128X>))  [2.01;2.01]
		 Successful, latency: 2.01
	VMINCPDZ128rr(2(Class<VR128X>) -> 0(Class<VR128X>))  [2.01;2.01]
		 Successful, latency: 2.01

-----VMINCPDZ128rrk-----
	VMINCPDZ128rrk(1(Class<VR128X>) -> 0(Class<VR128X>))  [2;2]
		 Successful, latency: 2
	VMINCPDZ128rrk(3(Class<VR128X>) -> 0(Class<VR128X>))  [2.02;2.02]
		 Successful, latency: 2.02
	VMINCPDZ128rrk(4(Class<VR128X>) -> 0(Class<VR128X>))  [2.02;2.02]
		 Successful, latency: 2.02

-----VMINCPDZ128rrkz-----
	VMINCPDZ128rrkz(2(Class<VR128X>) -> 0(Class<VR128X>))  [2.01;2.01]
		 Successful, latency: 2.01
	VMINCPDZ128rrkz(3(Class<VR128X>) -> 0(Class<VR128X>))  [2.03;2.03]
		 Successful, latency: 2.03

-----VMINCPDZ256rr-----
	VMINCPDZ256rr(1(Class<VR256X>) -> 0(Class<VR256X>))  [2.01;2.01]
		 Successful, latency: 2.01
	VMINCPDZ256rr(2(Class<VR256X>) -> 0(Class<VR256X>))  [2.01;2.01]
		 Successful, latency: 2.01

-----VMINCPDZ256rrk-----
	VMINCPDZ256rrk(1(Class<VR256X>) -> 0(Class<VR256X>))  [2.01;2.01]
		 Successful, latency: 2.01
	VMINCPDZ256rrk(3(Class<VR256X>) -> 0(Class<VR256X>))  [2.03;2.03]
		 Successful, latency: 2.03
	VMINCPDZ256rrk(4(Class<VR256X>) -> 0(Class<VR256X>))  [2.02;2.02]
		 Successful, latency: 2.02

-----VMINCPDZ256rrkz-----
	VMINCPDZ256rrkz(2(Class<VR256X>) -> 0(Class<VR256X>))  [2.02;2.02]
		 Successful, latency: 2.02
	VMINCPDZ256rrkz(3(Class<VR256X>) -> 0(Class<VR256X>))  [2.01;2.01]
		 Successful, latency: 2.01

-----VMINCPDZrr-----
	VMINCPDZrr(1(Class<VR512>) -> 0(Class<VR512>))  [2.02;2.02]
		 Successful, latency: 2.02
	VMINCPDZrr(2(Class<VR512>) -> 0(Class<VR512>))  [2.01;2.01]
		 Successful, latency: 2.01

-----VMINCPDZrrk-----
	VMINCPDZrrk(1(Class<VR512>) -> 0(Class<VR512>))  [2.02;2.02]
		 Successful, latency: 2.02
	VMINCPDZrrk(3(Class<VR512>) -> 0(Class<VR512>))  [2.02;2.02]
		 Successful, latency: 2.02
	VMINCPDZrrk(4(Class<VR512>) -> 0(Class<VR512>))  [2.01;2.01]
		 Successful, latency: 2.01

-----VMINCPDZrrkz-----
	VMINCPDZrrkz(2(Class<VR512>) -> 0(Class<VR512>))  [2.02;2.02]
		 Successful, latency: 2.02
	VMINCPDZrrkz(3(Class<VR512>) -> 0(Class<VR512>))  [2.01;2.01]
		 Successful, latency: 2.01

-----VMINCPDrr-----
	VMINCPDrr(1(Class<VR128>) -> 0(Class<VR128>))  [2.02;2.02]
		 Successful, latency: 2.02
	VMINCPDrr(2(Class<VR128>) -> 0(Class<VR128>))  [2.01;2.01]
		 Successful, latency: 2.01

-----VMINCPHZ128rr-----
	VMINCPHZ128rr(1(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VMINCPHZ128rr(2(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VMINCPHZ128rrk-----
	VMINCPHZ128rrk(1(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VMINCPHZ128rrk(3(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VMINCPHZ128rrk(4(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VMINCPHZ128rrkz-----
	VMINCPHZ128rrkz(2(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VMINCPHZ128rrkz(3(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VMINCPHZ256rr-----
	VMINCPHZ256rr(1(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VMINCPHZ256rr(2(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VMINCPHZ256rrk-----
	VMINCPHZ256rrk(1(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VMINCPHZ256rrk(3(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VMINCPHZ256rrk(4(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VMINCPHZ256rrkz-----
	VMINCPHZ256rrkz(2(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VMINCPHZ256rrkz(3(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VMINCPHZrr-----
	VMINCPHZrr(1(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VMINCPHZrr(2(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VMINCPHZrrk-----
	VMINCPHZrrk(1(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VMINCPHZrrk(3(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VMINCPHZrrk(4(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VMINCPHZrrkz-----
	VMINCPHZrrkz(2(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VMINCPHZrrkz(3(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VMINCPSYrr-----
	VMINCPSYrr(1(Class<VR256>) -> 0(Class<VR256>))  [2.03;2.03]
		 Successful, latency: 2.03
	VMINCPSYrr(2(Class<VR256>) -> 0(Class<VR256>))  [2.02;2.02]
		 Successful, latency: 2.02

-----VMINCPSZ128rr-----
	VMINCPSZ128rr(1(Class<VR128X>) -> 0(Class<VR128X>))  [2.02;2.02]
		 Successful, latency: 2.02
	VMINCPSZ128rr(2(Class<VR128X>) -> 0(Class<VR128X>))  [2.01;2.01]
		 Successful, latency: 2.01

-----VMINCPSZ128rrk-----
	VMINCPSZ128rrk(1(Class<VR128X>) -> 0(Class<VR128X>))  [2.01;2.01]
		 Successful, latency: 2.01
	VMINCPSZ128rrk(3(Class<VR128X>) -> 0(Class<VR128X>))  [2.02;2.02]
		 Successful, latency: 2.02
	VMINCPSZ128rrk(4(Class<VR128X>) -> 0(Class<VR128X>))  [2.01;2.01]
		 Successful, latency: 2.01

-----VMINCPSZ128rrkz-----
	VMINCPSZ128rrkz(2(Class<VR128X>) -> 0(Class<VR128X>))  [2.02;2.02]
		 Successful, latency: 2.02
	VMINCPSZ128rrkz(3(Class<VR128X>) -> 0(Class<VR128X>))  [2.02;2.02]
		 Successful, latency: 2.02

-----VMINCPSZ256rr-----
	VMINCPSZ256rr(1(Class<VR256X>) -> 0(Class<VR256X>))  [2.03;2.03]
		 Successful, latency: 2.03
	VMINCPSZ256rr(2(Class<VR256X>) -> 0(Class<VR256X>))  [2.01;2.01]
		 Successful, latency: 2.01

-----VMINCPSZ256rrk-----
	VMINCPSZ256rrk(1(Class<VR256X>) -> 0(Class<VR256X>))  [2.02;2.02]
		 Successful, latency: 2.02
	VMINCPSZ256rrk(3(Class<VR256X>) -> 0(Class<VR256X>))  [2.01;2.01]
		 Successful, latency: 2.01
	VMINCPSZ256rrk(4(Class<VR256X>) -> 0(Class<VR256X>))  [2.02;2.02]
		 Successful, latency: 2.02

-----VMINCPSZ256rrkz-----
	VMINCPSZ256rrkz(2(Class<VR256X>) -> 0(Class<VR256X>))  [2.03;2.03]
		 Successful, latency: 2.03
	VMINCPSZ256rrkz(3(Class<VR256X>) -> 0(Class<VR256X>))  [2.02;2.02]
		 Successful, latency: 2.02

-----VMINCPSZrr-----
	VMINCPSZrr(1(Class<VR512>) -> 0(Class<VR512>))  [2.02;2.02]
		 Successful, latency: 2.02
	VMINCPSZrr(2(Class<VR512>) -> 0(Class<VR512>))  [2.02;2.02]
		 Successful, latency: 2.02

-----VMINCPSZrrk-----
	VMINCPSZrrk(1(Class<VR512>) -> 0(Class<VR512>))  [2.01;2.01]
		 Successful, latency: 2.01
	VMINCPSZrrk(3(Class<VR512>) -> 0(Class<VR512>))  [2;2]
		 Successful, latency: 2
	VMINCPSZrrk(4(Class<VR512>) -> 0(Class<VR512>))  [2.02;2.02]
		 Successful, latency: 2.02

-----VMINCPSZrrkz-----
	VMINCPSZrrkz(2(Class<VR512>) -> 0(Class<VR512>))  [2.01;2.01]
		 Successful, latency: 2.01
	VMINCPSZrrkz(3(Class<VR512>) -> 0(Class<VR512>))  [2.02;2.02]
		 Successful, latency: 2.02

-----VMINCPSrr-----
	VMINCPSrr(1(Class<VR128>) -> 0(Class<VR128>))  [2.01;2.01]
		 Successful, latency: 2.01
	VMINCPSrr(2(Class<VR128>) -> 0(Class<VR128>))  [2.02;2.02]
		 Successful, latency: 2.02

-----VMINCSDZrr-----
	VMINCSDZrr(1(Class<FR64X>) -> 0(Class<FR64X>))  [2.03;2.03]
		 Successful, latency: 2.03
	VMINCSDZrr(2(Class<FR64X>) -> 0(Class<FR64X>))  [2.02;2.02]
		 Successful, latency: 2.02

-----VMINCSDrr-----
	VMINCSDrr(1(Class<FR64>) -> 0(Class<FR64>))  [2.02;2.02]
		 Successful, latency: 2.02
	VMINCSDrr(2(Class<FR64>) -> 0(Class<FR64>))  [2.02;2.02]
		 Successful, latency: 2.02

-----VMINCSHZrr-----
	VMINCSHZrr(1(Class<FR16X>) -> 0(Class<FR16X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VMINCSHZrr(2(Class<FR16X>) -> 0(Class<FR16X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VMINCSSZrr-----
	VMINCSSZrr(1(Class<FR32X>) -> 0(Class<FR32X>))  [2.02;2.02]
		 Successful, latency: 2.02
	VMINCSSZrr(2(Class<FR32X>) -> 0(Class<FR32X>))  [2.01;2.01]
		 Successful, latency: 2.01

-----VMINCSSrr-----
	VMINCSSrr(1(Class<FR32>) -> 0(Class<FR32>))  [2.03;2.03]
		 Successful, latency: 2.03
	VMINCSSrr(2(Class<FR32>) -> 0(Class<FR32>))  [2.02;2.02]
		 Successful, latency: 2.02

-----VMINMAXBF16Z128rri-----
	VMINMAXBF16Z128rri(1(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VMINMAXBF16Z128rri(2(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VMINMAXBF16Z128rrik-----
	VMINMAXBF16Z128rrik(1(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VMINMAXBF16Z128rrik(3(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VMINMAXBF16Z128rrik(4(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VMINMAXBF16Z128rrikz-----
	VMINMAXBF16Z128rrikz(2(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VMINMAXBF16Z128rrikz(3(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VMINMAXBF16Z256rri-----
	VMINMAXBF16Z256rri(1(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VMINMAXBF16Z256rri(2(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VMINMAXBF16Z256rrik-----
	VMINMAXBF16Z256rrik(1(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VMINMAXBF16Z256rrik(3(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VMINMAXBF16Z256rrik(4(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VMINMAXBF16Z256rrikz-----
	VMINMAXBF16Z256rrikz(2(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VMINMAXBF16Z256rrikz(3(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VMINMAXBF16Zrri-----
	VMINMAXBF16Zrri(1(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VMINMAXBF16Zrri(2(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VMINMAXBF16Zrrik-----
	VMINMAXBF16Zrrik(1(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VMINMAXBF16Zrrik(3(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VMINMAXBF16Zrrik(4(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VMINMAXBF16Zrrikz-----
	VMINMAXBF16Zrrikz(2(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VMINMAXBF16Zrrikz(3(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VMINMAXPDZ128rri-----
	VMINMAXPDZ128rri(1(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VMINMAXPDZ128rri(2(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VMINMAXPDZ128rrik-----
	VMINMAXPDZ128rrik(1(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VMINMAXPDZ128rrik(3(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VMINMAXPDZ128rrik(4(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VMINMAXPDZ128rrikz-----
	VMINMAXPDZ128rrikz(2(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VMINMAXPDZ128rrikz(3(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VMINMAXPDZ256rri-----
	VMINMAXPDZ256rri(1(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VMINMAXPDZ256rri(2(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VMINMAXPDZ256rrib-----
	VMINMAXPDZ256rrib(1(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VMINMAXPDZ256rrib(2(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VMINMAXPDZ256rribk-----
	VMINMAXPDZ256rribk(1(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VMINMAXPDZ256rribk(3(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VMINMAXPDZ256rribk(4(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VMINMAXPDZ256rribkz-----
	VMINMAXPDZ256rribkz(2(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VMINMAXPDZ256rribkz(3(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VMINMAXPDZ256rrik-----
	VMINMAXPDZ256rrik(1(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VMINMAXPDZ256rrik(3(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VMINMAXPDZ256rrik(4(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VMINMAXPDZ256rrikz-----
	VMINMAXPDZ256rrikz(2(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VMINMAXPDZ256rrikz(3(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VMINMAXPDZrri-----
	VMINMAXPDZrri(1(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VMINMAXPDZrri(2(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VMINMAXPDZrrib-----
	VMINMAXPDZrrib(1(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VMINMAXPDZrrib(2(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VMINMAXPDZrribk-----
	VMINMAXPDZrribk(1(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VMINMAXPDZrribk(3(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VMINMAXPDZrribk(4(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VMINMAXPDZrribkz-----
	VMINMAXPDZrribkz(2(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VMINMAXPDZrribkz(3(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VMINMAXPDZrrik-----
	VMINMAXPDZrrik(1(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VMINMAXPDZrrik(3(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VMINMAXPDZrrik(4(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VMINMAXPDZrrikz-----
	VMINMAXPDZrrikz(2(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VMINMAXPDZrrikz(3(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VMINMAXPHZ128rri-----
	VMINMAXPHZ128rri(1(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VMINMAXPHZ128rri(2(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VMINMAXPHZ128rrik-----
	VMINMAXPHZ128rrik(1(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VMINMAXPHZ128rrik(3(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VMINMAXPHZ128rrik(4(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VMINMAXPHZ128rrikz-----
	VMINMAXPHZ128rrikz(2(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VMINMAXPHZ128rrikz(3(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VMINMAXPHZ256rri-----
	VMINMAXPHZ256rri(1(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VMINMAXPHZ256rri(2(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VMINMAXPHZ256rrib-----
	VMINMAXPHZ256rrib(1(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VMINMAXPHZ256rrib(2(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VMINMAXPHZ256rribk-----
	VMINMAXPHZ256rribk(1(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VMINMAXPHZ256rribk(3(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VMINMAXPHZ256rribk(4(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VMINMAXPHZ256rribkz-----
	VMINMAXPHZ256rribkz(2(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VMINMAXPHZ256rribkz(3(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VMINMAXPHZ256rrik-----
	VMINMAXPHZ256rrik(1(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VMINMAXPHZ256rrik(3(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VMINMAXPHZ256rrik(4(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VMINMAXPHZ256rrikz-----
	VMINMAXPHZ256rrikz(2(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VMINMAXPHZ256rrikz(3(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VMINMAXPHZrri-----
	VMINMAXPHZrri(1(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VMINMAXPHZrri(2(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VMINMAXPHZrrib-----
	VMINMAXPHZrrib(1(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VMINMAXPHZrrib(2(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VMINMAXPHZrribk-----
	VMINMAXPHZrribk(1(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VMINMAXPHZrribk(3(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VMINMAXPHZrribk(4(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VMINMAXPHZrribkz-----
	VMINMAXPHZrribkz(2(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VMINMAXPHZrribkz(3(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VMINMAXPHZrrik-----
	VMINMAXPHZrrik(1(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VMINMAXPHZrrik(3(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VMINMAXPHZrrik(4(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VMINMAXPHZrrikz-----
	VMINMAXPHZrrikz(2(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VMINMAXPHZrrikz(3(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VMINMAXPSZ128rri-----
	VMINMAXPSZ128rri(1(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VMINMAXPSZ128rri(2(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VMINMAXPSZ128rrik-----
	VMINMAXPSZ128rrik(1(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VMINMAXPSZ128rrik(3(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VMINMAXPSZ128rrik(4(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VMINMAXPSZ128rrikz-----
	VMINMAXPSZ128rrikz(2(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VMINMAXPSZ128rrikz(3(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VMINMAXPSZ256rri-----
	VMINMAXPSZ256rri(1(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VMINMAXPSZ256rri(2(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VMINMAXPSZ256rrib-----
	VMINMAXPSZ256rrib(1(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VMINMAXPSZ256rrib(2(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VMINMAXPSZ256rribk-----
	VMINMAXPSZ256rribk(1(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VMINMAXPSZ256rribk(3(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VMINMAXPSZ256rribk(4(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VMINMAXPSZ256rribkz-----
	VMINMAXPSZ256rribkz(2(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VMINMAXPSZ256rribkz(3(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VMINMAXPSZ256rrik-----
	VMINMAXPSZ256rrik(1(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VMINMAXPSZ256rrik(3(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VMINMAXPSZ256rrik(4(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VMINMAXPSZ256rrikz-----
	VMINMAXPSZ256rrikz(2(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VMINMAXPSZ256rrikz(3(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VMINMAXPSZrri-----
	VMINMAXPSZrri(1(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VMINMAXPSZrri(2(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VMINMAXPSZrrib-----
	VMINMAXPSZrrib(1(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VMINMAXPSZrrib(2(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VMINMAXPSZrribk-----
	VMINMAXPSZrribk(1(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VMINMAXPSZrribk(3(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VMINMAXPSZrribk(4(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VMINMAXPSZrribkz-----
	VMINMAXPSZrribkz(2(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VMINMAXPSZrribkz(3(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VMINMAXPSZrrik-----
	VMINMAXPSZrrik(1(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VMINMAXPSZrrik(3(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VMINMAXPSZrrik(4(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VMINMAXPSZrrikz-----
	VMINMAXPSZrrikz(2(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VMINMAXPSZrrikz(3(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VMINMAXSDrri-----
	VMINMAXSDrri(1(Class<FR64X>) -> 0(Class<FR64X>))  [ERROR_ASSEMBLY]
		ERROR_ASSEMBLY, this instruction cannot be measured on this platform
	VMINMAXSDrri(2(Class<FR64X>) -> 0(Class<FR64X>))  [ERROR_ASSEMBLY]
		ERROR_ASSEMBLY, this instruction cannot be measured on this platform

-----VMINMAXSDrri_Int-----
	VMINMAXSDrri_Int(1(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VMINMAXSDrri_Int(2(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VMINMAXSDrrib_Int-----
	VMINMAXSDrrib_Int(1(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VMINMAXSDrrib_Int(2(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VMINMAXSDrribk_Int-----
	VMINMAXSDrribk_Int(1(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VMINMAXSDrribk_Int(3(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VMINMAXSDrribk_Int(4(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VMINMAXSDrribkz_Int-----
	VMINMAXSDrribkz_Int(2(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VMINMAXSDrribkz_Int(3(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VMINMAXSDrrik_Int-----
	VMINMAXSDrrik_Int(1(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VMINMAXSDrrik_Int(3(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VMINMAXSDrrik_Int(4(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VMINMAXSDrrikz_Int-----
	VMINMAXSDrrikz_Int(2(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VMINMAXSDrrikz_Int(3(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VMINMAXSHrri-----
	VMINMAXSHrri(1(Class<FR16X>) -> 0(Class<FR16X>))  [ERROR_ASSEMBLY]
		ERROR_ASSEMBLY, this instruction cannot be measured on this platform
	VMINMAXSHrri(2(Class<FR16X>) -> 0(Class<FR16X>))  [ERROR_ASSEMBLY]
		ERROR_ASSEMBLY, this instruction cannot be measured on this platform

-----VMINMAXSHrri_Int-----
	VMINMAXSHrri_Int(1(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VMINMAXSHrri_Int(2(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VMINMAXSHrrib_Int-----
	VMINMAXSHrrib_Int(1(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VMINMAXSHrrib_Int(2(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VMINMAXSHrribk_Int-----
	VMINMAXSHrribk_Int(1(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VMINMAXSHrribk_Int(3(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VMINMAXSHrribk_Int(4(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VMINMAXSHrribkz_Int-----
	VMINMAXSHrribkz_Int(2(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VMINMAXSHrribkz_Int(3(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VMINMAXSHrrik_Int-----
	VMINMAXSHrrik_Int(1(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VMINMAXSHrrik_Int(3(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VMINMAXSHrrik_Int(4(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VMINMAXSHrrikz_Int-----
	VMINMAXSHrrikz_Int(2(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VMINMAXSHrrikz_Int(3(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VMINMAXSSrri-----
	VMINMAXSSrri(1(Class<FR32X>) -> 0(Class<FR32X>))  [ERROR_ASSEMBLY]
		ERROR_ASSEMBLY, this instruction cannot be measured on this platform
	VMINMAXSSrri(2(Class<FR32X>) -> 0(Class<FR32X>))  [ERROR_ASSEMBLY]
		ERROR_ASSEMBLY, this instruction cannot be measured on this platform

-----VMINMAXSSrri_Int-----
	VMINMAXSSrri_Int(1(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VMINMAXSSrri_Int(2(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VMINMAXSSrrib_Int-----
	VMINMAXSSrrib_Int(1(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VMINMAXSSrrib_Int(2(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VMINMAXSSrribk_Int-----
	VMINMAXSSrribk_Int(1(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VMINMAXSSrribk_Int(3(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VMINMAXSSrribk_Int(4(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VMINMAXSSrribkz_Int-----
	VMINMAXSSrribkz_Int(2(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VMINMAXSSrribkz_Int(3(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VMINMAXSSrrik_Int-----
	VMINMAXSSrrik_Int(1(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VMINMAXSSrrik_Int(3(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VMINMAXSSrrik_Int(4(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VMINMAXSSrrikz_Int-----
	VMINMAXSSrrikz_Int(2(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VMINMAXSSrrikz_Int(3(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VMINPDYrr-----
	VMINPDYrr(1(Class<VR256>) -> 0(Class<VR256>))  [2.02;2.02]
		 Successful, latency: 2.02
	VMINPDYrr(2(Class<VR256>) -> 0(Class<VR256>))  [2.02;2.02]
		 Successful, latency: 2.02

-----VMINPDZ128rr-----
	VMINPDZ128rr(1(Class<VR128X>) -> 0(Class<VR128X>))  [2.01;2.01]
		 Successful, latency: 2.01
	VMINPDZ128rr(2(Class<VR128X>) -> 0(Class<VR128X>))  [2.01;2.01]
		 Successful, latency: 2.01

-----VMINPDZ128rrk-----
	VMINPDZ128rrk(1(Class<VR128X>) -> 0(Class<VR128X>))  [2;2]
		 Successful, latency: 2
	VMINPDZ128rrk(3(Class<VR128X>) -> 0(Class<VR128X>))  [2.04;2.04]
		 Successful, latency: 2.04
	VMINPDZ128rrk(4(Class<VR128X>) -> 0(Class<VR128X>))  [2.02;2.02]
		 Successful, latency: 2.02

-----VMINPDZ128rrkz-----
	VMINPDZ128rrkz(2(Class<VR128X>) -> 0(Class<VR128X>))  [2.01;2.01]
		 Successful, latency: 2.01
	VMINPDZ128rrkz(3(Class<VR128X>) -> 0(Class<VR128X>))  [2.02;2.02]
		 Successful, latency: 2.02

-----VMINPDZ256rr-----
	VMINPDZ256rr(1(Class<VR256X>) -> 0(Class<VR256X>))  [2.03;2.03]
		 Successful, latency: 2.03
	VMINPDZ256rr(2(Class<VR256X>) -> 0(Class<VR256X>))  [2.03;2.03]
		 Successful, latency: 2.03

-----VMINPDZ256rrb-----
	VMINPDZ256rrb(1(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VMINPDZ256rrb(2(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VMINPDZ256rrbk-----
	VMINPDZ256rrbk(1(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VMINPDZ256rrbk(3(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VMINPDZ256rrbk(4(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VMINPDZ256rrbkz-----
	VMINPDZ256rrbkz(2(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VMINPDZ256rrbkz(3(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VMINPDZ256rrk-----
	VMINPDZ256rrk(1(Class<VR256X>) -> 0(Class<VR256X>))  [2.02;2.02]
		 Successful, latency: 2.02
	VMINPDZ256rrk(3(Class<VR256X>) -> 0(Class<VR256X>))  [2.02;2.02]
		 Successful, latency: 2.02
	VMINPDZ256rrk(4(Class<VR256X>) -> 0(Class<VR256X>))  [2.02;2.02]
		 Successful, latency: 2.02

-----VMINPDZ256rrkz-----
	VMINPDZ256rrkz(2(Class<VR256X>) -> 0(Class<VR256X>))  [2.02;2.02]
		 Successful, latency: 2.02
	VMINPDZ256rrkz(3(Class<VR256X>) -> 0(Class<VR256X>))  [2.02;2.02]
		 Successful, latency: 2.02

-----VMINPDZrr-----
	VMINPDZrr(1(Class<VR512>) -> 0(Class<VR512>))  [2.02;2.02]
		 Successful, latency: 2.02
	VMINPDZrr(2(Class<VR512>) -> 0(Class<VR512>))  [2.02;2.02]
		 Successful, latency: 2.02

-----VMINPDZrrb-----
	VMINPDZrrb(1(Class<VR512>) -> 0(Class<VR512>))  [2.03;2.03]
		 Successful, latency: 2.03
	VMINPDZrrb(2(Class<VR512>) -> 0(Class<VR512>))  [2.02;2.02]
		 Successful, latency: 2.02

-----VMINPDZrrbk-----
	VMINPDZrrbk(1(Class<VR512>) -> 0(Class<VR512>))  [2.01;2.01]
		 Successful, latency: 2.01
	VMINPDZrrbk(3(Class<VR512>) -> 0(Class<VR512>))  [2.02;2.02]
		 Successful, latency: 2.02
	VMINPDZrrbk(4(Class<VR512>) -> 0(Class<VR512>))  [2.03;2.03]
		 Successful, latency: 2.03

-----VMINPDZrrbkz-----
	VMINPDZrrbkz(2(Class<VR512>) -> 0(Class<VR512>))  [2.02;2.02]
		 Successful, latency: 2.02
	VMINPDZrrbkz(3(Class<VR512>) -> 0(Class<VR512>))  [2.02;2.02]
		 Successful, latency: 2.02

-----VMINPDZrrk-----
	VMINPDZrrk(1(Class<VR512>) -> 0(Class<VR512>))  [2.02;2.02]
		 Successful, latency: 2.02
	VMINPDZrrk(3(Class<VR512>) -> 0(Class<VR512>))  [2.01;2.01]
		 Successful, latency: 2.01
	VMINPDZrrk(4(Class<VR512>) -> 0(Class<VR512>))  [2.02;2.02]
		 Successful, latency: 2.02

-----VMINPDZrrkz-----
	VMINPDZrrkz(2(Class<VR512>) -> 0(Class<VR512>))  [2.02;2.02]
		 Successful, latency: 2.02
	VMINPDZrrkz(3(Class<VR512>) -> 0(Class<VR512>))  [2.02;2.02]
		 Successful, latency: 2.02

-----VMINPDrr-----
	VMINPDrr(1(Class<VR128>) -> 0(Class<VR128>))  [2.01;2.01]
		 Successful, latency: 2.01
	VMINPDrr(2(Class<VR128>) -> 0(Class<VR128>))  [2.01;2.01]
		 Successful, latency: 2.01

-----VMINPHZ128rr-----
	VMINPHZ128rr(1(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VMINPHZ128rr(2(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VMINPHZ128rrk-----
	VMINPHZ128rrk(1(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VMINPHZ128rrk(3(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VMINPHZ128rrk(4(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VMINPHZ128rrkz-----
	VMINPHZ128rrkz(2(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VMINPHZ128rrkz(3(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VMINPHZ256rr-----
	VMINPHZ256rr(1(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VMINPHZ256rr(2(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VMINPHZ256rrb-----
	VMINPHZ256rrb(1(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VMINPHZ256rrb(2(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VMINPHZ256rrbk-----
	VMINPHZ256rrbk(1(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VMINPHZ256rrbk(3(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VMINPHZ256rrbk(4(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VMINPHZ256rrbkz-----
	VMINPHZ256rrbkz(2(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VMINPHZ256rrbkz(3(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VMINPHZ256rrk-----
	VMINPHZ256rrk(1(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VMINPHZ256rrk(3(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VMINPHZ256rrk(4(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VMINPHZ256rrkz-----
	VMINPHZ256rrkz(2(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VMINPHZ256rrkz(3(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VMINPHZrr-----
	VMINPHZrr(1(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VMINPHZrr(2(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VMINPHZrrb-----
	VMINPHZrrb(1(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VMINPHZrrb(2(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VMINPHZrrbk-----
	VMINPHZrrbk(1(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VMINPHZrrbk(3(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VMINPHZrrbk(4(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VMINPHZrrbkz-----
	VMINPHZrrbkz(2(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VMINPHZrrbkz(3(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VMINPHZrrk-----
	VMINPHZrrk(1(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VMINPHZrrk(3(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VMINPHZrrk(4(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VMINPHZrrkz-----
	VMINPHZrrkz(2(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VMINPHZrrkz(3(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VMINPSYrr-----
	VMINPSYrr(1(Class<VR256>) -> 0(Class<VR256>))  [2.01;2.01]
		 Successful, latency: 2.01
	VMINPSYrr(2(Class<VR256>) -> 0(Class<VR256>))  [2.02;2.02]
		 Successful, latency: 2.02

-----VMINPSZ128rr-----
	VMINPSZ128rr(1(Class<VR128X>) -> 0(Class<VR128X>))  [2;2]
		 Successful, latency: 2
	VMINPSZ128rr(2(Class<VR128X>) -> 0(Class<VR128X>))  [2.02;2.02]
		 Successful, latency: 2.02

-----VMINPSZ128rrk-----
	VMINPSZ128rrk(1(Class<VR128X>) -> 0(Class<VR128X>))  [2.01;2.01]
		 Successful, latency: 2.01
	VMINPSZ128rrk(3(Class<VR128X>) -> 0(Class<VR128X>))  [2.02;2.02]
		 Successful, latency: 2.02
	VMINPSZ128rrk(4(Class<VR128X>) -> 0(Class<VR128X>))  [2.02;2.02]
		 Successful, latency: 2.02

-----VMINPSZ128rrkz-----
	VMINPSZ128rrkz(2(Class<VR128X>) -> 0(Class<VR128X>))  [2.01;2.01]
		 Successful, latency: 2.01
	VMINPSZ128rrkz(3(Class<VR128X>) -> 0(Class<VR128X>))  [2.02;2.02]
		 Successful, latency: 2.02

-----VMINPSZ256rr-----
	VMINPSZ256rr(1(Class<VR256X>) -> 0(Class<VR256X>))  [2.01;2.01]
		 Successful, latency: 2.01
	VMINPSZ256rr(2(Class<VR256X>) -> 0(Class<VR256X>))  [2.03;2.03]
		 Successful, latency: 2.03

-----VMINPSZ256rrb-----
	VMINPSZ256rrb(1(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VMINPSZ256rrb(2(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VMINPSZ256rrbk-----
	VMINPSZ256rrbk(1(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VMINPSZ256rrbk(3(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VMINPSZ256rrbk(4(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VMINPSZ256rrbkz-----
	VMINPSZ256rrbkz(2(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VMINPSZ256rrbkz(3(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VMINPSZ256rrk-----
	VMINPSZ256rrk(1(Class<VR256X>) -> 0(Class<VR256X>))  [2.02;2.02]
		 Successful, latency: 2.02
	VMINPSZ256rrk(3(Class<VR256X>) -> 0(Class<VR256X>))  [2.02;2.02]
		 Successful, latency: 2.02
	VMINPSZ256rrk(4(Class<VR256X>) -> 0(Class<VR256X>))  [2.02;2.02]
		 Successful, latency: 2.02

-----VMINPSZ256rrkz-----
	VMINPSZ256rrkz(2(Class<VR256X>) -> 0(Class<VR256X>))  [2.02;2.02]
		 Successful, latency: 2.02
	VMINPSZ256rrkz(3(Class<VR256X>) -> 0(Class<VR256X>))  [2.02;2.02]
		 Successful, latency: 2.02

-----VMINPSZrr-----
	VMINPSZrr(1(Class<VR512>) -> 0(Class<VR512>))  [2.03;2.03]
		 Successful, latency: 2.03
	VMINPSZrr(2(Class<VR512>) -> 0(Class<VR512>))  [2.01;2.01]
		 Successful, latency: 2.01

-----VMINPSZrrb-----
	VMINPSZrrb(1(Class<VR512>) -> 0(Class<VR512>))  [2.01;2.01]
		 Successful, latency: 2.01
	VMINPSZrrb(2(Class<VR512>) -> 0(Class<VR512>))  [2.02;2.02]
		 Successful, latency: 2.02

-----VMINPSZrrbk-----
	VMINPSZrrbk(1(Class<VR512>) -> 0(Class<VR512>))  [2.02;2.02]
		 Successful, latency: 2.02
	VMINPSZrrbk(3(Class<VR512>) -> 0(Class<VR512>))  [2.02;2.02]
		 Successful, latency: 2.02
	VMINPSZrrbk(4(Class<VR512>) -> 0(Class<VR512>))  [2.02;2.02]
		 Successful, latency: 2.02

-----VMINPSZrrbkz-----
	VMINPSZrrbkz(2(Class<VR512>) -> 0(Class<VR512>))  [2.02;2.02]
		 Successful, latency: 2.02
	VMINPSZrrbkz(3(Class<VR512>) -> 0(Class<VR512>))  [2.02;2.02]
		 Successful, latency: 2.02

-----VMINPSZrrk-----
	VMINPSZrrk(1(Class<VR512>) -> 0(Class<VR512>))  [2.02;2.02]
		 Successful, latency: 2.02
	VMINPSZrrk(3(Class<VR512>) -> 0(Class<VR512>))  [2.01;2.01]
		 Successful, latency: 2.01
	VMINPSZrrk(4(Class<VR512>) -> 0(Class<VR512>))  [2.02;2.02]
		 Successful, latency: 2.02

-----VMINPSZrrkz-----
	VMINPSZrrkz(2(Class<VR512>) -> 0(Class<VR512>))  [2.02;2.02]
		 Successful, latency: 2.02
	VMINPSZrrkz(3(Class<VR512>) -> 0(Class<VR512>))  [2.01;2.01]
		 Successful, latency: 2.01

-----VMINPSrr-----
	VMINPSrr(1(Class<VR128>) -> 0(Class<VR128>))  [2.01;2.01]
		 Successful, latency: 2.01
	VMINPSrr(2(Class<VR128>) -> 0(Class<VR128>))  [2.01;2.01]
		 Successful, latency: 2.01

-----VMINSDZrr-----
	VMINSDZrr(1(Class<FR64X>) -> 0(Class<FR64X>))  [2.02;2.02]
		 Successful, latency: 2.02
	VMINSDZrr(2(Class<FR64X>) -> 0(Class<FR64X>))  [2.02;2.02]
		 Successful, latency: 2.02

-----VMINSDZrr_Int-----
	VMINSDZrr_Int(1(Class<VR128X>) -> 0(Class<VR128X>))  [2.02;2.02]
		 Successful, latency: 2.02
	VMINSDZrr_Int(2(Class<VR128X>) -> 0(Class<VR128X>))  [2.02;2.02]
		 Successful, latency: 2.02

-----VMINSDZrrb_Int-----
	VMINSDZrrb_Int(1(Class<VR128X>) -> 0(Class<VR128X>))  [2.02;2.02]
		 Successful, latency: 2.02
	VMINSDZrrb_Int(2(Class<VR128X>) -> 0(Class<VR128X>))  [2.03;2.03]
		 Successful, latency: 2.03

-----VMINSDZrrbk_Int-----
	VMINSDZrrbk_Int(1(Class<VR128X>) -> 0(Class<VR128X>))  [2.01;2.01]
		 Successful, latency: 2.01
	VMINSDZrrbk_Int(3(Class<VR128X>) -> 0(Class<VR128X>))  [2.02;2.02]
		 Successful, latency: 2.02
	VMINSDZrrbk_Int(4(Class<VR128X>) -> 0(Class<VR128X>))  [2.02;2.02]
		 Successful, latency: 2.02

-----VMINSDZrrbkz_Int-----
	VMINSDZrrbkz_Int(2(Class<VR128X>) -> 0(Class<VR128X>))  [2.02;2.02]
		 Successful, latency: 2.02
	VMINSDZrrbkz_Int(3(Class<VR128X>) -> 0(Class<VR128X>))  [2.04;2.04]
		 Successful, latency: 2.04

-----VMINSDZrrk_Int-----
	VMINSDZrrk_Int(1(Class<VR128X>) -> 0(Class<VR128X>))  [2.02;2.02]
		 Successful, latency: 2.02
	VMINSDZrrk_Int(3(Class<VR128X>) -> 0(Class<VR128X>))  [2.02;2.02]
		 Successful, latency: 2.02
	VMINSDZrrk_Int(4(Class<VR128X>) -> 0(Class<VR128X>))  [2.01;2.01]
		 Successful, latency: 2.01

-----VMINSDZrrkz_Int-----
	VMINSDZrrkz_Int(2(Class<VR128X>) -> 0(Class<VR128X>))  [2.02;2.02]
		 Successful, latency: 2.02
	VMINSDZrrkz_Int(3(Class<VR128X>) -> 0(Class<VR128X>))  [2.01;2.01]
		 Successful, latency: 2.01

-----VMINSDrr-----
	VMINSDrr(1(Class<FR64>) -> 0(Class<FR64>))  [2.02;2.02]
		 Successful, latency: 2.02
	VMINSDrr(2(Class<FR64>) -> 0(Class<FR64>))  [2.02;2.02]
		 Successful, latency: 2.02

-----VMINSDrr_Int-----
	VMINSDrr_Int(1(Class<VR128>) -> 0(Class<VR128>))  [2.02;2.02]
		 Successful, latency: 2.02
	VMINSDrr_Int(2(Class<VR128>) -> 0(Class<VR128>))  [2.02;2.02]
		 Successful, latency: 2.02

-----VMINSHZrr-----
	VMINSHZrr(1(Class<FR16X>) -> 0(Class<FR16X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VMINSHZrr(2(Class<FR16X>) -> 0(Class<FR16X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VMINSHZrr_Int-----
	VMINSHZrr_Int(1(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VMINSHZrr_Int(2(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VMINSHZrrb_Int-----
	VMINSHZrrb_Int(1(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VMINSHZrrb_Int(2(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VMINSHZrrbk_Int-----
	VMINSHZrrbk_Int(1(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VMINSHZrrbk_Int(3(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VMINSHZrrbk_Int(4(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VMINSHZrrbkz_Int-----
	VMINSHZrrbkz_Int(2(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VMINSHZrrbkz_Int(3(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VMINSHZrrk_Int-----
	VMINSHZrrk_Int(1(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VMINSHZrrk_Int(3(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VMINSHZrrk_Int(4(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VMINSHZrrkz_Int-----
	VMINSHZrrkz_Int(2(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VMINSHZrrkz_Int(3(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VMINSSZrr-----
	VMINSSZrr(1(Class<FR32X>) -> 0(Class<FR32X>))  [2.02;2.02]
		 Successful, latency: 2.02
	VMINSSZrr(2(Class<FR32X>) -> 0(Class<FR32X>))  [2.02;2.02]
		 Successful, latency: 2.02

-----VMINSSZrr_Int-----
	VMINSSZrr_Int(1(Class<VR128X>) -> 0(Class<VR128X>))  [2.01;2.01]
		 Successful, latency: 2.01
	VMINSSZrr_Int(2(Class<VR128X>) -> 0(Class<VR128X>))  [2.03;2.03]
		 Successful, latency: 2.03

-----VMINSSZrrb_Int-----
	VMINSSZrrb_Int(1(Class<VR128X>) -> 0(Class<VR128X>))  [2.02;2.02]
		 Successful, latency: 2.02
	VMINSSZrrb_Int(2(Class<VR128X>) -> 0(Class<VR128X>))  [2.04;2.04]
		 Successful, latency: 2.04

-----VMINSSZrrbk_Int-----
	VMINSSZrrbk_Int(1(Class<VR128X>) -> 0(Class<VR128X>))  [2.02;2.02]
		 Successful, latency: 2.02
	VMINSSZrrbk_Int(3(Class<VR128X>) -> 0(Class<VR128X>))  [2.01;2.01]
		 Successful, latency: 2.01
	VMINSSZrrbk_Int(4(Class<VR128X>) -> 0(Class<VR128X>))  [2.04;2.04]
		 Successful, latency: 2.04

-----VMINSSZrrbkz_Int-----
	VMINSSZrrbkz_Int(2(Class<VR128X>) -> 0(Class<VR128X>))  [2.02;2.02]
		 Successful, latency: 2.02
	VMINSSZrrbkz_Int(3(Class<VR128X>) -> 0(Class<VR128X>))  [2.02;2.02]
		 Successful, latency: 2.02

-----VMINSSZrrk_Int-----
	VMINSSZrrk_Int(1(Class<VR128X>) -> 0(Class<VR128X>))  [2.01;2.01]
		 Successful, latency: 2.01
	VMINSSZrrk_Int(3(Class<VR128X>) -> 0(Class<VR128X>))  [2.02;2.02]
		 Successful, latency: 2.02
	VMINSSZrrk_Int(4(Class<VR128X>) -> 0(Class<VR128X>))  [2.02;2.02]
		 Successful, latency: 2.02

-----VMINSSZrrkz_Int-----
	VMINSSZrrkz_Int(2(Class<VR128X>) -> 0(Class<VR128X>))  [2.02;2.02]
		 Successful, latency: 2.02
	VMINSSZrrkz_Int(3(Class<VR128X>) -> 0(Class<VR128X>))  [2.02;2.02]
		 Successful, latency: 2.02

-----VMINSSrr-----
	VMINSSrr(1(Class<FR32>) -> 0(Class<FR32>))  [2.02;2.02]
		 Successful, latency: 2.02
	VMINSSrr(2(Class<FR32>) -> 0(Class<FR32>))  [2.04;2.04]
		 Successful, latency: 2.04

-----VMINSSrr_Int-----
	VMINSSrr_Int(1(Class<VR128>) -> 0(Class<VR128>))  [2.01;2.01]
		 Successful, latency: 2.01
	VMINSSrr_Int(2(Class<VR128>) -> 0(Class<VR128>))  [2.01;2.01]
		 Successful, latency: 2.01

-----VMOV64toPQIZrr-----
	VMOV64toPQIZrr(1(Class<GR64>) -> 0(Class<VR128X>))  [1.02;5.05]
		Dependencies:
			VMOVPQIto64Zrr(1(Class<VR128X>) -> 0(Class<GR64>)) 
			VMOV64toPQIZrr(1(Class<GR64>) -> 0(Class<VR128X>)) 
		Combined result: 6.06 cycles

-----VMOV64toPQIrr-----
	VMOV64toPQIrr(1(Class<GR64>) -> 0(Class<VR128>))  [0.982;5.02]
		Dependencies:
			MOVPQIto64rr(1(Class<VR128>) -> 0(Class<GR64>)) 
			VMOV64toPQIrr(1(Class<GR64>) -> 0(Class<VR128>)) 
		Combined result: 6.05 cycles

-----VMOV64toSDZrr-----
	VMOV64toSDZrr(1(Class<GR64>) -> 0(Class<FR64X>))  [0.97;5.03]
		Dependencies:
			VMOVSDto64Zrr(1(Class<FR64X>) -> 0(Class<GR64>)) 
			VMOV64toSDZrr(1(Class<GR64>) -> 0(Class<FR64X>)) 
		Combined result: 6.02 cycles

-----VMOV64toSDrr-----
	VMOV64toSDrr(1(Class<GR64>) -> 0(Class<FR64>))  [1.01;5.05]
		Dependencies:
			VMOVSDto64rr(1(Class<FR64>) -> 0(Class<GR64>)) 
			VMOV64toSDrr(1(Class<GR64>) -> 0(Class<FR64>)) 
		Combined result: 6.04 cycles

-----VMOVAPDYrr-----
	VMOVAPDYrr(1(Class<VR256>) -> 0(Class<VR256>))  [0.168;0.168]
		 Successful, latency: 0.168

-----VMOVAPDYrr_REV-----
	VMOVAPDYrr_REV(1(Class<VR256>) -> 0(Class<VR256>))  [0.168;0.168]
		 Successful, latency: 0.168

-----VMOVAPDZ128rr-----
	VMOVAPDZ128rr(1(Class<VR128X>) -> 0(Class<VR128X>))  [0.166;0.166]
		 Successful, latency: 0.166

-----VMOVAPDZ128rr_REV-----
	VMOVAPDZ128rr_REV(1(Class<VR128X>) -> 0(Class<VR128X>))  [0.168;0.168]
		 Successful, latency: 0.168

-----VMOVAPDZ128rrk-----
	VMOVAPDZ128rrk(1(Class<VR128X>) -> 0(Class<VR128X>))  [1.01;1.01]
		 Successful, latency: 1.01
	VMOVAPDZ128rrk(3(Class<VR128X>) -> 0(Class<VR128X>))  [1;1]
		 Successful, latency: 1

-----VMOVAPDZ128rrk_REV-----
	VMOVAPDZ128rrk_REV(2(Class<VR128X>) -> 0(Class<VR128X>))  [0.998;0.998]
		 Successful, latency: 0.998

-----VMOVAPDZ128rrkz-----
	VMOVAPDZ128rrkz(2(Class<VR128X>) -> 0(Class<VR128X>))  [1;1]
		 Successful, latency: 1

-----VMOVAPDZ128rrkz_REV-----
	VMOVAPDZ128rrkz_REV(2(Class<VR128X>) -> 0(Class<VR128X>))  [1.01;1.01]
		 Successful, latency: 1.01

-----VMOVAPDZ256rr-----
	VMOVAPDZ256rr(1(Class<VR256X>) -> 0(Class<VR256X>))  [0.168;0.168]
		 Successful, latency: 0.168

-----VMOVAPDZ256rr_REV-----
	VMOVAPDZ256rr_REV(1(Class<VR256X>) -> 0(Class<VR256X>))  [0.168;0.168]
		 Successful, latency: 0.168

-----VMOVAPDZ256rrk-----
	VMOVAPDZ256rrk(1(Class<VR256X>) -> 0(Class<VR256X>))  [1.02;1.02]
		 Successful, latency: 1.02
	VMOVAPDZ256rrk(3(Class<VR256X>) -> 0(Class<VR256X>))  [1.02;1.02]
		 Successful, latency: 1.02

-----VMOVAPDZ256rrk_REV-----
	VMOVAPDZ256rrk_REV(2(Class<VR256X>) -> 0(Class<VR256X>))  [1.01;1.01]
		 Successful, latency: 1.01

-----VMOVAPDZ256rrkz-----
	VMOVAPDZ256rrkz(2(Class<VR256X>) -> 0(Class<VR256X>))  [1.01;1.01]
		 Successful, latency: 1.01

-----VMOVAPDZ256rrkz_REV-----
	VMOVAPDZ256rrkz_REV(2(Class<VR256X>) -> 0(Class<VR256X>))  [1.01;1.01]
		 Successful, latency: 1.01

-----VMOVAPDZrr-----
	VMOVAPDZrr(1(Class<VR512>) -> 0(Class<VR512>))  [0.168;0.168]
		 Successful, latency: 0.168

-----VMOVAPDZrr_REV-----
	VMOVAPDZrr_REV(1(Class<VR512>) -> 0(Class<VR512>))  [0.168;0.168]
		 Successful, latency: 0.168

-----VMOVAPDZrrk-----
	VMOVAPDZrrk(1(Class<VR512>) -> 0(Class<VR512>))  [1.02;1.02]
		 Successful, latency: 1.02
	VMOVAPDZrrk(3(Class<VR512>) -> 0(Class<VR512>))  [1.01;1.01]
		 Successful, latency: 1.01

-----VMOVAPDZrrk_REV-----
	VMOVAPDZrrk_REV(2(Class<VR512>) -> 0(Class<VR512>))  [1.01;1.01]
		 Successful, latency: 1.01

-----VMOVAPDZrrkz-----
	VMOVAPDZrrkz(2(Class<VR512>) -> 0(Class<VR512>))  [1;1]
		 Successful, latency: 1

-----VMOVAPDZrrkz_REV-----
	VMOVAPDZrrkz_REV(2(Class<VR512>) -> 0(Class<VR512>))  [1.01;1.01]
		 Successful, latency: 1.01

-----VMOVAPDrr-----
	VMOVAPDrr(1(Class<VR128>) -> 0(Class<VR128>))  [0.168;0.168]
		 Successful, latency: 0.168

-----VMOVAPDrr_REV-----
	VMOVAPDrr_REV(1(Class<VR128>) -> 0(Class<VR128>))  [0.168;0.168]
		 Successful, latency: 0.168

-----VMOVAPSYrr-----
	VMOVAPSYrr(1(Class<VR256>) -> 0(Class<VR256>))  [0.168;0.168]
		 Successful, latency: 0.168

-----VMOVAPSYrr_REV-----
	VMOVAPSYrr_REV(1(Class<VR256>) -> 0(Class<VR256>))  [0.166;0.166]
		 Successful, latency: 0.166

-----VMOVAPSZ128rr-----
	VMOVAPSZ128rr(1(Class<VR128X>) -> 0(Class<VR128X>))  [0.168;0.168]
		 Successful, latency: 0.168

-----VMOVAPSZ128rr_REV-----
	VMOVAPSZ128rr_REV(1(Class<VR128X>) -> 0(Class<VR128X>))  [0.168;0.168]
		 Successful, latency: 0.168

-----VMOVAPSZ128rrk-----
	VMOVAPSZ128rrk(1(Class<VR128X>) -> 0(Class<VR128X>))  [1.01;1.01]
		 Successful, latency: 1.01
	VMOVAPSZ128rrk(3(Class<VR128X>) -> 0(Class<VR128X>))  [1.02;1.02]
		 Successful, latency: 1.02

-----VMOVAPSZ128rrk_REV-----
	VMOVAPSZ128rrk_REV(2(Class<VR128X>) -> 0(Class<VR128X>))  [1;1]
		 Successful, latency: 1

-----VMOVAPSZ128rrkz-----
	VMOVAPSZ128rrkz(2(Class<VR128X>) -> 0(Class<VR128X>))  [1;1]
		 Successful, latency: 1

-----VMOVAPSZ128rrkz_REV-----
	VMOVAPSZ128rrkz_REV(2(Class<VR128X>) -> 0(Class<VR128X>))  [1;1]
		 Successful, latency: 1

-----VMOVAPSZ256rr-----
	VMOVAPSZ256rr(1(Class<VR256X>) -> 0(Class<VR256X>))  [0.166;0.166]
		 Successful, latency: 0.166

-----VMOVAPSZ256rr_REV-----
	VMOVAPSZ256rr_REV(1(Class<VR256X>) -> 0(Class<VR256X>))  [0.166;0.166]
		 Successful, latency: 0.166

-----VMOVAPSZ256rrk-----
	VMOVAPSZ256rrk(1(Class<VR256X>) -> 0(Class<VR256X>))  [1.01;1.01]
		 Successful, latency: 1.01
	VMOVAPSZ256rrk(3(Class<VR256X>) -> 0(Class<VR256X>))  [1;1]
		 Successful, latency: 1

-----VMOVAPSZ256rrk_REV-----
	VMOVAPSZ256rrk_REV(2(Class<VR256X>) -> 0(Class<VR256X>))  [1;1]
		 Successful, latency: 1

-----VMOVAPSZ256rrkz-----
	VMOVAPSZ256rrkz(2(Class<VR256X>) -> 0(Class<VR256X>))  [1.01;1.01]
		 Successful, latency: 1.01

-----VMOVAPSZ256rrkz_REV-----
	VMOVAPSZ256rrkz_REV(2(Class<VR256X>) -> 0(Class<VR256X>))  [1;1]
		 Successful, latency: 1

-----VMOVAPSZrr-----
	VMOVAPSZrr(1(Class<VR512>) -> 0(Class<VR512>))  [0.168;0.168]
		 Successful, latency: 0.168

-----VMOVAPSZrr_REV-----
	VMOVAPSZrr_REV(1(Class<VR512>) -> 0(Class<VR512>))  [0.166;0.166]
		 Successful, latency: 0.166

-----VMOVAPSZrrk-----
	VMOVAPSZrrk(1(Class<VR512>) -> 0(Class<VR512>))  [1.02;1.02]
		 Successful, latency: 1.02
	VMOVAPSZrrk(3(Class<VR512>) -> 0(Class<VR512>))  [1;1]
		 Successful, latency: 1

-----VMOVAPSZrrk_REV-----
	VMOVAPSZrrk_REV(2(Class<VR512>) -> 0(Class<VR512>))  [1.01;1.01]
		 Successful, latency: 1.01

-----VMOVAPSZrrkz-----
	VMOVAPSZrrkz(2(Class<VR512>) -> 0(Class<VR512>))  [1.01;1.01]
		 Successful, latency: 1.01

-----VMOVAPSZrrkz_REV-----
	VMOVAPSZrrkz_REV(2(Class<VR512>) -> 0(Class<VR512>))  [1.01;1.01]
		 Successful, latency: 1.01

-----VMOVAPSrr-----
	VMOVAPSrr(1(Class<VR128>) -> 0(Class<VR128>))  [0.166;0.166]
		 Successful, latency: 0.166

-----VMOVAPSrr_REV-----
	VMOVAPSrr_REV(1(Class<VR128>) -> 0(Class<VR128>))  [0.168;0.168]
		 Successful, latency: 0.168

-----VMOVDDUPYrr-----
	VMOVDDUPYrr(1(Class<VR256>) -> 0(Class<VR256>))  [1.01;1.01]
		 Successful, latency: 1.01

-----VMOVDDUPZ128rr-----
	VMOVDDUPZ128rr(1(Class<VR128X>) -> 0(Class<VR128X>))  [1.01;1.01]
		 Successful, latency: 1.01

-----VMOVDDUPZ128rrk-----
	VMOVDDUPZ128rrk(1(Class<VR128X>) -> 0(Class<VR128X>))  [2.02;2.02]
		 Successful, latency: 2.02
	VMOVDDUPZ128rrk(3(Class<VR128X>) -> 0(Class<VR128X>))  [2.03;2.03]
		 Successful, latency: 2.03

-----VMOVDDUPZ128rrkz-----
	VMOVDDUPZ128rrkz(2(Class<VR128X>) -> 0(Class<VR128X>))  [2.01;2.01]
		 Successful, latency: 2.01

-----VMOVDDUPZ256rr-----
	VMOVDDUPZ256rr(1(Class<VR256X>) -> 0(Class<VR256X>))  [1.02;1.02]
		 Successful, latency: 1.02

-----VMOVDDUPZ256rrk-----
	VMOVDDUPZ256rrk(1(Class<VR256X>) -> 0(Class<VR256X>))  [2.02;2.02]
		 Successful, latency: 2.02
	VMOVDDUPZ256rrk(3(Class<VR256X>) -> 0(Class<VR256X>))  [2.01;2.01]
		 Successful, latency: 2.01

-----VMOVDDUPZ256rrkz-----
	VMOVDDUPZ256rrkz(2(Class<VR256X>) -> 0(Class<VR256X>))  [2.03;2.03]
		 Successful, latency: 2.03

-----VMOVDDUPZrr-----
	VMOVDDUPZrr(1(Class<VR512>) -> 0(Class<VR512>))  [2.02;2.02]
		 Successful, latency: 2.02

-----VMOVDDUPZrrk-----
	VMOVDDUPZrrk(1(Class<VR512>) -> 0(Class<VR512>))  [2.02;2.02]
		 Successful, latency: 2.02
	VMOVDDUPZrrk(3(Class<VR512>) -> 0(Class<VR512>))  [2.02;2.02]
		 Successful, latency: 2.02

-----VMOVDDUPZrrkz-----
	VMOVDDUPZrrkz(2(Class<VR512>) -> 0(Class<VR512>))  [2.02;2.02]
		 Successful, latency: 2.02

-----VMOVDDUPrr-----
	VMOVDDUPrr(1(Class<VR128>) -> 0(Class<VR128>))  [1;1]
		 Successful, latency: 1

-----VMOVDI2PDIZrr-----
	VMOVDI2PDIZrr(1(Class<GR32>) -> 0(Class<VR128X>))  [0.989;5.04]
		Dependencies:
			VMOVPDI2DIZrr(1(Class<VR128X>) -> 0(Class<GR32>)) 
			VMOVDI2PDIZrr(1(Class<GR32>) -> 0(Class<VR128X>)) 
		Combined result: 6.04 cycles

-----VMOVDI2PDIrr-----
	VMOVDI2PDIrr(1(Class<GR32>) -> 0(Class<VR128>))  [0.982;5.02]
		Dependencies:
			MOVMSKPSrr(1(Class<VR128>) -> 0(Class<GR32>)) 
			VMOVDI2PDIrr(1(Class<GR32>) -> 0(Class<VR128>)) 
		Combined result: 6.04 cycles

-----VMOVDI2SSZrr-----
	VMOVDI2SSZrr(1(Class<GR32>) -> 0(Class<FR32X>))  [0.996;5.04]
		Dependencies:
			VMOVDI2SSZrr(1(Class<GR32>) -> 0(Class<FR32X>)) 
			VMOVSS2DIZrr(1(Class<FR32X>) -> 0(Class<GR32>)) 
		Combined result: 6.04 cycles

-----VMOVDI2SSrr-----
	VMOVDI2SSrr(1(Class<GR32>) -> 0(Class<FR32>))  [0.961;5.01]
		Dependencies:
			VMOVSS2DIrr(1(Class<FR32>) -> 0(Class<GR32>)) 
			VMOVDI2SSrr(1(Class<GR32>) -> 0(Class<FR32>)) 
		Combined result: 6.06 cycles

-----VMOVDQA32Z128rr-----
	VMOVDQA32Z128rr(1(Class<VR128X>) -> 0(Class<VR128X>))  [0.168;0.168]
		 Successful, latency: 0.168

-----VMOVDQA32Z128rr_REV-----
	VMOVDQA32Z128rr_REV(1(Class<VR128X>) -> 0(Class<VR128X>))  [0.168;0.168]
		 Successful, latency: 0.168

-----VMOVDQA32Z128rrk-----
	VMOVDQA32Z128rrk(1(Class<VR128X>) -> 0(Class<VR128X>))  [1;1]
		 Successful, latency: 1
	VMOVDQA32Z128rrk(3(Class<VR128X>) -> 0(Class<VR128X>))  [1.01;1.01]
		 Successful, latency: 1.01

-----VMOVDQA32Z128rrk_REV-----
	VMOVDQA32Z128rrk_REV(2(Class<VR128X>) -> 0(Class<VR128X>))  [1.01;1.01]
		 Successful, latency: 1.01

-----VMOVDQA32Z128rrkz-----
	VMOVDQA32Z128rrkz(2(Class<VR128X>) -> 0(Class<VR128X>))  [0.996;0.996]
		 Successful, latency: 0.996

-----VMOVDQA32Z128rrkz_REV-----
	VMOVDQA32Z128rrkz_REV(2(Class<VR128X>) -> 0(Class<VR128X>))  [1.01;1.01]
		 Successful, latency: 1.01

-----VMOVDQA32Z256rr-----
	VMOVDQA32Z256rr(1(Class<VR256X>) -> 0(Class<VR256X>))  [0.166;0.166]
		 Successful, latency: 0.166

-----VMOVDQA32Z256rr_REV-----
	VMOVDQA32Z256rr_REV(1(Class<VR256X>) -> 0(Class<VR256X>))  [0.168;0.168]
		 Successful, latency: 0.168

-----VMOVDQA32Z256rrk-----
	VMOVDQA32Z256rrk(1(Class<VR256X>) -> 0(Class<VR256X>))  [1.01;1.01]
		 Successful, latency: 1.01
	VMOVDQA32Z256rrk(3(Class<VR256X>) -> 0(Class<VR256X>))  [1.01;1.01]
		 Successful, latency: 1.01

-----VMOVDQA32Z256rrk_REV-----
	VMOVDQA32Z256rrk_REV(2(Class<VR256X>) -> 0(Class<VR256X>))  [1;1]
		 Successful, latency: 1

-----VMOVDQA32Z256rrkz-----
	VMOVDQA32Z256rrkz(2(Class<VR256X>) -> 0(Class<VR256X>))  [1;1]
		 Successful, latency: 1

-----VMOVDQA32Z256rrkz_REV-----
	VMOVDQA32Z256rrkz_REV(2(Class<VR256X>) -> 0(Class<VR256X>))  [1.01;1.01]
		 Successful, latency: 1.01

-----VMOVDQA32Zrr-----
	VMOVDQA32Zrr(1(Class<VR512>) -> 0(Class<VR512>))  [0.168;0.168]
		 Successful, latency: 0.168

-----VMOVDQA32Zrr_REV-----
	VMOVDQA32Zrr_REV(1(Class<VR512>) -> 0(Class<VR512>))  [0.168;0.168]
		 Successful, latency: 0.168

-----VMOVDQA32Zrrk-----
	VMOVDQA32Zrrk(1(Class<VR512>) -> 0(Class<VR512>))  [1.02;1.02]
		 Successful, latency: 1.02
	VMOVDQA32Zrrk(3(Class<VR512>) -> 0(Class<VR512>))  [1.02;1.02]
		 Successful, latency: 1.02

-----VMOVDQA32Zrrk_REV-----
	VMOVDQA32Zrrk_REV(2(Class<VR512>) -> 0(Class<VR512>))  [1.01;1.01]
		 Successful, latency: 1.01

-----VMOVDQA32Zrrkz-----
	VMOVDQA32Zrrkz(2(Class<VR512>) -> 0(Class<VR512>))  [1.01;1.01]
		 Successful, latency: 1.01

-----VMOVDQA32Zrrkz_REV-----
	VMOVDQA32Zrrkz_REV(2(Class<VR512>) -> 0(Class<VR512>))  [1;1]
		 Successful, latency: 1

-----VMOVDQA64Z128rr-----
	VMOVDQA64Z128rr(1(Class<VR128X>) -> 0(Class<VR128X>))  [0.166;0.166]
		 Successful, latency: 0.166

-----VMOVDQA64Z128rr_REV-----
	VMOVDQA64Z128rr_REV(1(Class<VR128X>) -> 0(Class<VR128X>))  [0.168;0.168]
		 Successful, latency: 0.168

-----VMOVDQA64Z128rrk-----
	VMOVDQA64Z128rrk(1(Class<VR128X>) -> 0(Class<VR128X>))  [1;1]
		 Successful, latency: 1
	VMOVDQA64Z128rrk(3(Class<VR128X>) -> 0(Class<VR128X>))  [1.02;1.02]
		 Successful, latency: 1.02

-----VMOVDQA64Z128rrk_REV-----
	VMOVDQA64Z128rrk_REV(2(Class<VR128X>) -> 0(Class<VR128X>))  [1.01;1.01]
		 Successful, latency: 1.01

-----VMOVDQA64Z128rrkz-----
	VMOVDQA64Z128rrkz(2(Class<VR128X>) -> 0(Class<VR128X>))  [1.02;1.02]
		 Successful, latency: 1.02

-----VMOVDQA64Z128rrkz_REV-----
	VMOVDQA64Z128rrkz_REV(2(Class<VR128X>) -> 0(Class<VR128X>))  [1;1]
		 Successful, latency: 1

-----VMOVDQA64Z256rr-----
	VMOVDQA64Z256rr(1(Class<VR256X>) -> 0(Class<VR256X>))  [0.168;0.168]
		 Successful, latency: 0.168

-----VMOVDQA64Z256rr_REV-----
	VMOVDQA64Z256rr_REV(1(Class<VR256X>) -> 0(Class<VR256X>))  [0.168;0.168]
		 Successful, latency: 0.168

-----VMOVDQA64Z256rrk-----
	VMOVDQA64Z256rrk(1(Class<VR256X>) -> 0(Class<VR256X>))  [1.01;1.01]
		 Successful, latency: 1.01
	VMOVDQA64Z256rrk(3(Class<VR256X>) -> 0(Class<VR256X>))  [1.01;1.01]
		 Successful, latency: 1.01

-----VMOVDQA64Z256rrk_REV-----
	VMOVDQA64Z256rrk_REV(2(Class<VR256X>) -> 0(Class<VR256X>))  [1.01;1.01]
		 Successful, latency: 1.01

-----VMOVDQA64Z256rrkz-----
	VMOVDQA64Z256rrkz(2(Class<VR256X>) -> 0(Class<VR256X>))  [1.01;1.01]
		 Successful, latency: 1.01

-----VMOVDQA64Z256rrkz_REV-----
	VMOVDQA64Z256rrkz_REV(2(Class<VR256X>) -> 0(Class<VR256X>))  [1.01;1.01]
		 Successful, latency: 1.01

-----VMOVDQA64Zrr-----
	VMOVDQA64Zrr(1(Class<VR512>) -> 0(Class<VR512>))  [0.168;0.168]
		 Successful, latency: 0.168

-----VMOVDQA64Zrr_REV-----
	VMOVDQA64Zrr_REV(1(Class<VR512>) -> 0(Class<VR512>))  [0.168;0.168]
		 Successful, latency: 0.168

-----VMOVDQA64Zrrk-----
	VMOVDQA64Zrrk(1(Class<VR512>) -> 0(Class<VR512>))  [1;1]
		 Successful, latency: 1
	VMOVDQA64Zrrk(3(Class<VR512>) -> 0(Class<VR512>))  [1.02;1.02]
		 Successful, latency: 1.02

-----VMOVDQA64Zrrk_REV-----
	VMOVDQA64Zrrk_REV(2(Class<VR512>) -> 0(Class<VR512>))  [1.01;1.01]
		 Successful, latency: 1.01

-----VMOVDQA64Zrrkz-----
	VMOVDQA64Zrrkz(2(Class<VR512>) -> 0(Class<VR512>))  [1.01;1.01]
		 Successful, latency: 1.01

-----VMOVDQA64Zrrkz_REV-----
	VMOVDQA64Zrrkz_REV(2(Class<VR512>) -> 0(Class<VR512>))  [1.01;1.01]
		 Successful, latency: 1.01

-----VMOVDQAYrr-----
	VMOVDQAYrr(1(Class<VR256>) -> 0(Class<VR256>))  [0.168;0.168]
		 Successful, latency: 0.168

-----VMOVDQAYrr_REV-----
	VMOVDQAYrr_REV(1(Class<VR256>) -> 0(Class<VR256>))  [0.168;0.168]
		 Successful, latency: 0.168

-----VMOVDQArr-----
	VMOVDQArr(1(Class<VR128>) -> 0(Class<VR128>))  [0.168;0.168]
		 Successful, latency: 0.168

-----VMOVDQArr_REV-----
	VMOVDQArr_REV(1(Class<VR128>) -> 0(Class<VR128>))  [0.168;0.168]
		 Successful, latency: 0.168

-----VMOVDQU16Z128rr-----
	VMOVDQU16Z128rr(1(Class<VR128X>) -> 0(Class<VR128X>))  [0.168;0.168]
		 Successful, latency: 0.168

-----VMOVDQU16Z128rr_REV-----
	VMOVDQU16Z128rr_REV(1(Class<VR128X>) -> 0(Class<VR128X>))  [0.166;0.166]
		 Successful, latency: 0.166

-----VMOVDQU16Z128rrk-----
	VMOVDQU16Z128rrk(1(Class<VR128X>) -> 0(Class<VR128X>))  [1.01;1.01]
		 Successful, latency: 1.01
	VMOVDQU16Z128rrk(3(Class<VR128X>) -> 0(Class<VR128X>))  [1.01;1.01]
		 Successful, latency: 1.01

-----VMOVDQU16Z128rrk_REV-----
	VMOVDQU16Z128rrk_REV(2(Class<VR128X>) -> 0(Class<VR128X>))  [1;1]
		 Successful, latency: 1

-----VMOVDQU16Z128rrkz-----
	VMOVDQU16Z128rrkz(2(Class<VR128X>) -> 0(Class<VR128X>))  [1.01;1.01]
		 Successful, latency: 1.01

-----VMOVDQU16Z128rrkz_REV-----
	VMOVDQU16Z128rrkz_REV(2(Class<VR128X>) -> 0(Class<VR128X>))  [1.01;1.01]
		 Successful, latency: 1.01

-----VMOVDQU16Z256rr-----
	VMOVDQU16Z256rr(1(Class<VR256X>) -> 0(Class<VR256X>))  [0.168;0.168]
		 Successful, latency: 0.168

-----VMOVDQU16Z256rr_REV-----
	VMOVDQU16Z256rr_REV(1(Class<VR256X>) -> 0(Class<VR256X>))  [0.168;0.168]
		 Successful, latency: 0.168

-----VMOVDQU16Z256rrk-----
	VMOVDQU16Z256rrk(1(Class<VR256X>) -> 0(Class<VR256X>))  [1;1]
		 Successful, latency: 1
	VMOVDQU16Z256rrk(3(Class<VR256X>) -> 0(Class<VR256X>))  [1.02;1.02]
		 Successful, latency: 1.02

-----VMOVDQU16Z256rrk_REV-----
	VMOVDQU16Z256rrk_REV(2(Class<VR256X>) -> 0(Class<VR256X>))  [1.01;1.01]
		 Successful, latency: 1.01

-----VMOVDQU16Z256rrkz-----
	VMOVDQU16Z256rrkz(2(Class<VR256X>) -> 0(Class<VR256X>))  [1.02;1.02]
		 Successful, latency: 1.02

-----VMOVDQU16Z256rrkz_REV-----
	VMOVDQU16Z256rrkz_REV(2(Class<VR256X>) -> 0(Class<VR256X>))  [1;1]
		 Successful, latency: 1

-----VMOVDQU16Zrr-----
	VMOVDQU16Zrr(1(Class<VR512>) -> 0(Class<VR512>))  [0.166;0.166]
		 Successful, latency: 0.166

-----VMOVDQU16Zrr_REV-----
	VMOVDQU16Zrr_REV(1(Class<VR512>) -> 0(Class<VR512>))  [0.168;0.168]
		 Successful, latency: 0.168

-----VMOVDQU16Zrrk-----
	VMOVDQU16Zrrk(1(Class<VR512>) -> 0(Class<VR512>))  [1;1]
		 Successful, latency: 1
	VMOVDQU16Zrrk(3(Class<VR512>) -> 0(Class<VR512>))  [1.01;1.01]
		 Successful, latency: 1.01

-----VMOVDQU16Zrrk_REV-----
	VMOVDQU16Zrrk_REV(2(Class<VR512>) -> 0(Class<VR512>))  [1.02;1.02]
		 Successful, latency: 1.02

-----VMOVDQU16Zrrkz-----
	VMOVDQU16Zrrkz(2(Class<VR512>) -> 0(Class<VR512>))  [1;1]
		 Successful, latency: 1

-----VMOVDQU16Zrrkz_REV-----
	VMOVDQU16Zrrkz_REV(2(Class<VR512>) -> 0(Class<VR512>))  [1;1]
		 Successful, latency: 1

-----VMOVDQU32Z128rr-----
	VMOVDQU32Z128rr(1(Class<VR128X>) -> 0(Class<VR128X>))  [0.168;0.168]
		 Successful, latency: 0.168

-----VMOVDQU32Z128rr_REV-----
	VMOVDQU32Z128rr_REV(1(Class<VR128X>) -> 0(Class<VR128X>))  [0.168;0.168]
		 Successful, latency: 0.168

-----VMOVDQU32Z128rrk-----
	VMOVDQU32Z128rrk(1(Class<VR128X>) -> 0(Class<VR128X>))  [1.01;1.01]
		 Successful, latency: 1.01
	VMOVDQU32Z128rrk(3(Class<VR128X>) -> 0(Class<VR128X>))  [1.02;1.02]
		 Successful, latency: 1.02

-----VMOVDQU32Z128rrk_REV-----
	VMOVDQU32Z128rrk_REV(2(Class<VR128X>) -> 0(Class<VR128X>))  [1.02;1.02]
		 Successful, latency: 1.02

-----VMOVDQU32Z128rrkz-----
	VMOVDQU32Z128rrkz(2(Class<VR128X>) -> 0(Class<VR128X>))  [1;1]
		 Successful, latency: 1

-----VMOVDQU32Z128rrkz_REV-----
	VMOVDQU32Z128rrkz_REV(2(Class<VR128X>) -> 0(Class<VR128X>))  [1.01;1.01]
		 Successful, latency: 1.01

-----VMOVDQU32Z256rr-----
	VMOVDQU32Z256rr(1(Class<VR256X>) -> 0(Class<VR256X>))  [0.166;0.166]
		 Successful, latency: 0.166

-----VMOVDQU32Z256rr_REV-----
	VMOVDQU32Z256rr_REV(1(Class<VR256X>) -> 0(Class<VR256X>))  [0.168;0.168]
		 Successful, latency: 0.168

-----VMOVDQU32Z256rrk-----
	VMOVDQU32Z256rrk(1(Class<VR256X>) -> 0(Class<VR256X>))  [1.02;1.02]
		 Successful, latency: 1.02
	VMOVDQU32Z256rrk(3(Class<VR256X>) -> 0(Class<VR256X>))  [1.01;1.01]
		 Successful, latency: 1.01

-----VMOVDQU32Z256rrk_REV-----
	VMOVDQU32Z256rrk_REV(2(Class<VR256X>) -> 0(Class<VR256X>))  [1;1]
		 Successful, latency: 1

-----VMOVDQU32Z256rrkz-----
	VMOVDQU32Z256rrkz(2(Class<VR256X>) -> 0(Class<VR256X>))  [1.01;1.01]
		 Successful, latency: 1.01

-----VMOVDQU32Z256rrkz_REV-----
	VMOVDQU32Z256rrkz_REV(2(Class<VR256X>) -> 0(Class<VR256X>))  [1.02;1.02]
		 Successful, latency: 1.02

-----VMOVDQU32Zrr-----
	VMOVDQU32Zrr(1(Class<VR512>) -> 0(Class<VR512>))  [0.168;0.168]
		 Successful, latency: 0.168

-----VMOVDQU32Zrr_REV-----
	VMOVDQU32Zrr_REV(1(Class<VR512>) -> 0(Class<VR512>))  [0.168;0.168]
		 Successful, latency: 0.168

-----VMOVDQU32Zrrk-----
	VMOVDQU32Zrrk(1(Class<VR512>) -> 0(Class<VR512>))  [1.01;1.01]
		 Successful, latency: 1.01
	VMOVDQU32Zrrk(3(Class<VR512>) -> 0(Class<VR512>))  [1.01;1.01]
		 Successful, latency: 1.01

-----VMOVDQU32Zrrk_REV-----
	VMOVDQU32Zrrk_REV(2(Class<VR512>) -> 0(Class<VR512>))  [1.01;1.01]
		 Successful, latency: 1.01

-----VMOVDQU32Zrrkz-----
	VMOVDQU32Zrrkz(2(Class<VR512>) -> 0(Class<VR512>))  [1.01;1.01]
		 Successful, latency: 1.01

-----VMOVDQU32Zrrkz_REV-----
	VMOVDQU32Zrrkz_REV(2(Class<VR512>) -> 0(Class<VR512>))  [1.01;1.01]
		 Successful, latency: 1.01

-----VMOVDQU64Z128rr-----
	VMOVDQU64Z128rr(1(Class<VR128X>) -> 0(Class<VR128X>))  [0.168;0.168]
		 Successful, latency: 0.168

-----VMOVDQU64Z128rr_REV-----
	VMOVDQU64Z128rr_REV(1(Class<VR128X>) -> 0(Class<VR128X>))  [0.166;0.166]
		 Successful, latency: 0.166

-----VMOVDQU64Z128rrk-----
	VMOVDQU64Z128rrk(1(Class<VR128X>) -> 0(Class<VR128X>))  [1.01;1.01]
		 Successful, latency: 1.01
	VMOVDQU64Z128rrk(3(Class<VR128X>) -> 0(Class<VR128X>))  [1.03;1.03]
		 Successful, latency: 1.03

-----VMOVDQU64Z128rrk_REV-----
	VMOVDQU64Z128rrk_REV(2(Class<VR128X>) -> 0(Class<VR128X>))  [1.01;1.01]
		 Successful, latency: 1.01

-----VMOVDQU64Z128rrkz-----
	VMOVDQU64Z128rrkz(2(Class<VR128X>) -> 0(Class<VR128X>))  [1.01;1.01]
		 Successful, latency: 1.01

-----VMOVDQU64Z128rrkz_REV-----
	VMOVDQU64Z128rrkz_REV(2(Class<VR128X>) -> 0(Class<VR128X>))  [1.01;1.01]
		 Successful, latency: 1.01

-----VMOVDQU64Z256rr-----
	VMOVDQU64Z256rr(1(Class<VR256X>) -> 0(Class<VR256X>))  [0.168;0.168]
		 Successful, latency: 0.168

-----VMOVDQU64Z256rr_REV-----
	VMOVDQU64Z256rr_REV(1(Class<VR256X>) -> 0(Class<VR256X>))  [0.168;0.168]
		 Successful, latency: 0.168

-----VMOVDQU64Z256rrk-----
	VMOVDQU64Z256rrk(1(Class<VR256X>) -> 0(Class<VR256X>))  [1.01;1.01]
		 Successful, latency: 1.01
	VMOVDQU64Z256rrk(3(Class<VR256X>) -> 0(Class<VR256X>))  [1;1]
		 Successful, latency: 1

-----VMOVDQU64Z256rrk_REV-----
	VMOVDQU64Z256rrk_REV(2(Class<VR256X>) -> 0(Class<VR256X>))  [1.02;1.02]
		 Successful, latency: 1.02

-----VMOVDQU64Z256rrkz-----
	VMOVDQU64Z256rrkz(2(Class<VR256X>) -> 0(Class<VR256X>))  [1.01;1.01]
		 Successful, latency: 1.01

-----VMOVDQU64Z256rrkz_REV-----
	VMOVDQU64Z256rrkz_REV(2(Class<VR256X>) -> 0(Class<VR256X>))  [1.02;1.02]
		 Successful, latency: 1.02

-----VMOVDQU64Zrr-----
	VMOVDQU64Zrr(1(Class<VR512>) -> 0(Class<VR512>))  [0.168;0.168]
		 Successful, latency: 0.168

-----VMOVDQU64Zrr_REV-----
	VMOVDQU64Zrr_REV(1(Class<VR512>) -> 0(Class<VR512>))  [0.168;0.168]
		 Successful, latency: 0.168

-----VMOVDQU64Zrrk-----
	VMOVDQU64Zrrk(1(Class<VR512>) -> 0(Class<VR512>))  [1;1]
		 Successful, latency: 1
	VMOVDQU64Zrrk(3(Class<VR512>) -> 0(Class<VR512>))  [1;1]
		 Successful, latency: 1

-----VMOVDQU64Zrrk_REV-----
	VMOVDQU64Zrrk_REV(2(Class<VR512>) -> 0(Class<VR512>))  [1;1]
		 Successful, latency: 1

-----VMOVDQU64Zrrkz-----
	VMOVDQU64Zrrkz(2(Class<VR512>) -> 0(Class<VR512>))  [1.01;1.01]
		 Successful, latency: 1.01

-----VMOVDQU64Zrrkz_REV-----
	VMOVDQU64Zrrkz_REV(2(Class<VR512>) -> 0(Class<VR512>))  [1.01;1.01]
		 Successful, latency: 1.01

-----VMOVDQU8Z128rr-----
	VMOVDQU8Z128rr(1(Class<VR128X>) -> 0(Class<VR128X>))  [0.168;0.168]
		 Successful, latency: 0.168

-----VMOVDQU8Z128rr_REV-----
	VMOVDQU8Z128rr_REV(1(Class<VR128X>) -> 0(Class<VR128X>))  [0.166;0.166]
		 Successful, latency: 0.166

-----VMOVDQU8Z128rrk-----
	VMOVDQU8Z128rrk(1(Class<VR128X>) -> 0(Class<VR128X>))  [1.01;1.01]
		 Successful, latency: 1.01
	VMOVDQU8Z128rrk(3(Class<VR128X>) -> 0(Class<VR128X>))  [1.01;1.01]
		 Successful, latency: 1.01

-----VMOVDQU8Z128rrk_REV-----
	VMOVDQU8Z128rrk_REV(2(Class<VR128X>) -> 0(Class<VR128X>))  [1.01;1.01]
		 Successful, latency: 1.01

-----VMOVDQU8Z128rrkz-----
	VMOVDQU8Z128rrkz(2(Class<VR128X>) -> 0(Class<VR128X>))  [0.998;0.998]
		 Successful, latency: 0.998

-----VMOVDQU8Z128rrkz_REV-----
	VMOVDQU8Z128rrkz_REV(2(Class<VR128X>) -> 0(Class<VR128X>))  [1.01;1.01]
		 Successful, latency: 1.01

-----VMOVDQU8Z256rr-----
	VMOVDQU8Z256rr(1(Class<VR256X>) -> 0(Class<VR256X>))  [0.168;0.168]
		 Successful, latency: 0.168

-----VMOVDQU8Z256rr_REV-----
	VMOVDQU8Z256rr_REV(1(Class<VR256X>) -> 0(Class<VR256X>))  [0.168;0.168]
		 Successful, latency: 0.168

-----VMOVDQU8Z256rrk-----
	VMOVDQU8Z256rrk(1(Class<VR256X>) -> 0(Class<VR256X>))  [1;1]
		 Successful, latency: 1
	VMOVDQU8Z256rrk(3(Class<VR256X>) -> 0(Class<VR256X>))  [1;1]
		 Successful, latency: 1

-----VMOVDQU8Z256rrk_REV-----
	VMOVDQU8Z256rrk_REV(2(Class<VR256X>) -> 0(Class<VR256X>))  [1;1]
		 Successful, latency: 1

-----VMOVDQU8Z256rrkz-----
	VMOVDQU8Z256rrkz(2(Class<VR256X>) -> 0(Class<VR256X>))  [1.01;1.01]
		 Successful, latency: 1.01

-----VMOVDQU8Z256rrkz_REV-----
	VMOVDQU8Z256rrkz_REV(2(Class<VR256X>) -> 0(Class<VR256X>))  [1.02;1.02]
		 Successful, latency: 1.02

-----VMOVDQU8Zrr-----
	VMOVDQU8Zrr(1(Class<VR512>) -> 0(Class<VR512>))  [0.166;0.166]
		 Successful, latency: 0.166

-----VMOVDQU8Zrr_REV-----
	VMOVDQU8Zrr_REV(1(Class<VR512>) -> 0(Class<VR512>))  [0.166;0.166]
		 Successful, latency: 0.166

-----VMOVDQU8Zrrk-----
	VMOVDQU8Zrrk(1(Class<VR512>) -> 0(Class<VR512>))  [1.01;1.01]
		 Successful, latency: 1.01
	VMOVDQU8Zrrk(3(Class<VR512>) -> 0(Class<VR512>))  [1.02;1.02]
		 Successful, latency: 1.02

-----VMOVDQU8Zrrk_REV-----
	VMOVDQU8Zrrk_REV(2(Class<VR512>) -> 0(Class<VR512>))  [1.02;1.02]
		 Successful, latency: 1.02

-----VMOVDQU8Zrrkz-----
	VMOVDQU8Zrrkz(2(Class<VR512>) -> 0(Class<VR512>))  [1.01;1.01]
		 Successful, latency: 1.01

-----VMOVDQU8Zrrkz_REV-----
	VMOVDQU8Zrrkz_REV(2(Class<VR512>) -> 0(Class<VR512>))  [1.01;1.01]
		 Successful, latency: 1.01

-----VMOVDQUYrr-----
	VMOVDQUYrr(1(Class<VR256>) -> 0(Class<VR256>))  [0.166;0.166]
		 Successful, latency: 0.166

-----VMOVDQUYrr_REV-----
	VMOVDQUYrr_REV(1(Class<VR256>) -> 0(Class<VR256>))  [0.168;0.168]
		 Successful, latency: 0.168

-----VMOVDQUrr-----
	VMOVDQUrr(1(Class<VR128>) -> 0(Class<VR128>))  [0.168;0.168]
		 Successful, latency: 0.168

-----VMOVDQUrr_REV-----
	VMOVDQUrr_REV(1(Class<VR128>) -> 0(Class<VR128>))  [0.168;0.168]
		 Successful, latency: 0.168

-----VMOVHLPSZrr-----
	VMOVHLPSZrr(1(Class<VR128X>) -> 0(Class<VR128X>))  [1.02;1.02]
		 Successful, latency: 1.02
	VMOVHLPSZrr(2(Class<VR128X>) -> 0(Class<VR128X>))  [1;1]
		 Successful, latency: 1

-----VMOVHLPSrr-----
	VMOVHLPSrr(1(Class<VR128>) -> 0(Class<VR128>))  [1.01;1.01]
		 Successful, latency: 1.01
	VMOVHLPSrr(2(Class<VR128>) -> 0(Class<VR128>))  [1;1]
		 Successful, latency: 1

-----VMOVLHPSZrr-----
	VMOVLHPSZrr(1(Class<VR128X>) -> 0(Class<VR128X>))  [1.01;1.01]
		 Successful, latency: 1.01
	VMOVLHPSZrr(2(Class<VR128X>) -> 0(Class<VR128X>))  [1.01;1.01]
		 Successful, latency: 1.01

-----VMOVLHPSrr-----
	VMOVLHPSrr(1(Class<VR128>) -> 0(Class<VR128>))  [1;1]
		 Successful, latency: 1
	VMOVLHPSrr(2(Class<VR128>) -> 0(Class<VR128>))  [1.01;1.01]
		 Successful, latency: 1.01

-----VMOVMSKPDrr-----
	VMOVMSKPDrr(1(Class<VR128>) -> 0(Class<GR32>))  [1.01;5.04]
		Dependencies:
			MOVMSKPSrr(1(Class<VR128>) -> 0(Class<GR32>)) 
			VMOVDI2PDIrr(1(Class<GR32>) -> 0(Class<VR128>)) 
		Combined result: 6.04 cycles

-----VMOVMSKPSrr-----
	VMOVMSKPSrr(1(Class<VR128>) -> 0(Class<GR32>))  [1.02;5.05]
		Dependencies:
			MOVMSKPSrr(1(Class<VR128>) -> 0(Class<GR32>)) 
			VMOVDI2PDIrr(1(Class<GR32>) -> 0(Class<VR128>)) 
		Combined result: 6.05 cycles

-----VMOVPDI2DIZrr-----
	VMOVPDI2DIZrr(1(Class<VR128X>) -> 0(Class<GR32>))  [0.998;5.05]
		Dependencies:
			VMOVPDI2DIZrr(1(Class<VR128X>) -> 0(Class<GR32>)) 
			VMOVDI2PDIZrr(1(Class<GR32>) -> 0(Class<VR128X>)) 
		Combined result: 6.05 cycles

-----VMOVPDI2DIrr-----
	VMOVPDI2DIrr(1(Class<VR128>) -> 0(Class<GR32>))  [1.01;5.05]
		Dependencies:
			MOVMSKPSrr(1(Class<VR128>) -> 0(Class<GR32>)) 
			VMOVDI2PDIrr(1(Class<GR32>) -> 0(Class<VR128>)) 
		Combined result: 6.05 cycles

-----VMOVPQI2QIZrr-----
	VMOVPQI2QIZrr(1(Class<VR128X>) -> 0(Class<VR128X>))  [0.999;0.999]
		 Successful, latency: 0.999

-----VMOVPQI2QIrr-----
	VMOVPQI2QIrr(1(Class<VR128>) -> 0(Class<VR128>))  [1.01;1.01]
		 Successful, latency: 1.01

-----VMOVPQIto64Zrr-----
	VMOVPQIto64Zrr(1(Class<VR128X>) -> 0(Class<GR64>))  [1.01;5.04]
		Dependencies:
			VMOVPQIto64Zrr(1(Class<VR128X>) -> 0(Class<GR64>)) 
			VMOV64toPQIZrr(1(Class<GR64>) -> 0(Class<VR128X>)) 
		Combined result: 6.04 cycles

-----VMOVPQIto64rr-----
	VMOVPQIto64rr(1(Class<VR128>) -> 0(Class<GR64>))  [1.01;5.05]
		Dependencies:
			MOVPQIto64rr(1(Class<VR128>) -> 0(Class<GR64>)) 
			VMOV64toPQIrr(1(Class<GR64>) -> 0(Class<VR128>)) 
		Combined result: 6.05 cycles

-----VMOVSDZrr-----
	VMOVSDZrr(1(Class<VR128X>) -> 0(Class<VR128X>))  [1.01;1.01]
		 Successful, latency: 1.01
	VMOVSDZrr(2(Class<VR128X>) -> 0(Class<VR128X>))  [0.996;0.996]
		 Successful, latency: 0.996

-----VMOVSDZrr_REV-----
	VMOVSDZrr_REV(1(Class<VR128X>) -> 0(Class<VR128X>))  [1.01;1.01]
		 Successful, latency: 1.01
	VMOVSDZrr_REV(2(Class<VR128X>) -> 0(Class<VR128X>))  [1;1]
		 Successful, latency: 1

-----VMOVSDZrrk-----
	VMOVSDZrrk(1(Class<VR128X>) -> 0(Class<VR128X>))  [1;1]
		 Successful, latency: 1
	VMOVSDZrrk(3(Class<VR128X>) -> 0(Class<VR128X>))  [1;1]
		 Successful, latency: 1
	VMOVSDZrrk(4(Class<VR128X>) -> 0(Class<VR128X>))  [1.01;1.01]
		 Successful, latency: 1.01

-----VMOVSDZrrk_REV-----
	VMOVSDZrrk_REV(1(Class<VR128X>) -> 0(Class<VR128X>))  [1.01;1.01]
		 Successful, latency: 1.01
	VMOVSDZrrk_REV(3(Class<VR128X>) -> 0(Class<VR128X>))  [1.02;1.02]
		 Successful, latency: 1.02
	VMOVSDZrrk_REV(4(Class<VR128X>) -> 0(Class<VR128X>))  [1.01;1.01]
		 Successful, latency: 1.01

-----VMOVSDZrrkz-----
	VMOVSDZrrkz(2(Class<VR128X>) -> 0(Class<VR128X>))  [1.01;1.01]
		 Successful, latency: 1.01
	VMOVSDZrrkz(3(Class<VR128X>) -> 0(Class<VR128X>))  [1.03;1.03]
		 Successful, latency: 1.03

-----VMOVSDZrrkz_REV-----
	VMOVSDZrrkz_REV(2(Class<VR128X>) -> 0(Class<VR128X>))  [1.01;1.01]
		 Successful, latency: 1.01
	VMOVSDZrrkz_REV(3(Class<VR128X>) -> 0(Class<VR128X>))  [1.02;1.02]
		 Successful, latency: 1.02

-----VMOVSDrr-----
	VMOVSDrr(1(Class<VR128>) -> 0(Class<VR128>))  [1.01;1.01]
		 Successful, latency: 1.01
	VMOVSDrr(2(Class<VR128>) -> 0(Class<VR128>))  [1.02;1.02]
		 Successful, latency: 1.02

-----VMOVSDrr_REV-----
	VMOVSDrr_REV(1(Class<VR128>) -> 0(Class<VR128>))  [1.01;1.01]
		 Successful, latency: 1.01
	VMOVSDrr_REV(2(Class<VR128>) -> 0(Class<VR128>))  [1.01;1.01]
		 Successful, latency: 1.01

-----VMOVSDto64Zrr-----
	VMOVSDto64Zrr(1(Class<FR64X>) -> 0(Class<GR64>))  [0.991;5.05]
		Dependencies:
			VMOVSDto64Zrr(1(Class<FR64X>) -> 0(Class<GR64>)) 
			VMOV64toSDZrr(1(Class<GR64>) -> 0(Class<FR64X>)) 
		Combined result: 6.05 cycles

-----VMOVSDto64rr-----
	VMOVSDto64rr(1(Class<FR64>) -> 0(Class<GR64>))  [0.997;5.04]
		Dependencies:
			VMOVSDto64rr(1(Class<FR64>) -> 0(Class<GR64>)) 
			VMOV64toSDrr(1(Class<GR64>) -> 0(Class<FR64>)) 
		Combined result: 6.04 cycles

-----VMOVSHDUPYrr-----
	VMOVSHDUPYrr(1(Class<VR256>) -> 0(Class<VR256>))  [0.999;0.999]
		 Successful, latency: 0.999

-----VMOVSHDUPZ128rr-----
	VMOVSHDUPZ128rr(1(Class<VR128X>) -> 0(Class<VR128X>))  [1.01;1.01]
		 Successful, latency: 1.01

-----VMOVSHDUPZ128rrk-----
	VMOVSHDUPZ128rrk(1(Class<VR128X>) -> 0(Class<VR128X>))  [1;1]
		 Successful, latency: 1
	VMOVSHDUPZ128rrk(3(Class<VR128X>) -> 0(Class<VR128X>))  [1;1]
		 Successful, latency: 1

-----VMOVSHDUPZ128rrkz-----
	VMOVSHDUPZ128rrkz(2(Class<VR128X>) -> 0(Class<VR128X>))  [1.02;1.02]
		 Successful, latency: 1.02

-----VMOVSHDUPZ256rr-----
	VMOVSHDUPZ256rr(1(Class<VR256X>) -> 0(Class<VR256X>))  [1;1]
		 Successful, latency: 1

-----VMOVSHDUPZ256rrk-----
	VMOVSHDUPZ256rrk(1(Class<VR256X>) -> 0(Class<VR256X>))  [1.01;1.01]
		 Successful, latency: 1.01
	VMOVSHDUPZ256rrk(3(Class<VR256X>) -> 0(Class<VR256X>))  [1;1]
		 Successful, latency: 1

-----VMOVSHDUPZ256rrkz-----
	VMOVSHDUPZ256rrkz(2(Class<VR256X>) -> 0(Class<VR256X>))  [1.01;1.01]
		 Successful, latency: 1.01

-----VMOVSHDUPZrr-----
	VMOVSHDUPZrr(1(Class<VR512>) -> 0(Class<VR512>))  [1.12;1.12]
		 Successful, latency: 1.12

-----VMOVSHDUPZrrk-----
	VMOVSHDUPZrrk(1(Class<VR512>) -> 0(Class<VR512>))  [1.15;1.15]
		 Successful, latency: 1.15
	VMOVSHDUPZrrk(3(Class<VR512>) -> 0(Class<VR512>))  [1.15;1.15]
		 Successful, latency: 1.15

-----VMOVSHDUPZrrkz-----
	VMOVSHDUPZrrkz(2(Class<VR512>) -> 0(Class<VR512>))  [1.14;1.14]
		 Successful, latency: 1.14

-----VMOVSHDUPrr-----
	VMOVSHDUPrr(1(Class<VR128>) -> 0(Class<VR128>))  [1.01;1.01]
		 Successful, latency: 1.01

-----VMOVSHZrr-----
	VMOVSHZrr(1(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VMOVSHZrr(2(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VMOVSHZrr_REV-----
	VMOVSHZrr_REV(1(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VMOVSHZrr_REV(2(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VMOVSHZrrk-----
	VMOVSHZrrk(1(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VMOVSHZrrk(3(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VMOVSHZrrk(4(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VMOVSHZrrk_REV-----
	VMOVSHZrrk_REV(1(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VMOVSHZrrk_REV(3(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VMOVSHZrrk_REV(4(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VMOVSHZrrkz-----
	VMOVSHZrrkz(2(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VMOVSHZrrkz(3(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VMOVSHZrrkz_REV-----
	VMOVSHZrrkz_REV(2(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VMOVSHZrrkz_REV(3(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VMOVSLDUPYrr-----
	VMOVSLDUPYrr(1(Class<VR256>) -> 0(Class<VR256>))  [1;1]
		 Successful, latency: 1

-----VMOVSLDUPZ128rr-----
	VMOVSLDUPZ128rr(1(Class<VR128X>) -> 0(Class<VR128X>))  [1;1]
		 Successful, latency: 1

-----VMOVSLDUPZ128rrk-----
	VMOVSLDUPZ128rrk(1(Class<VR128X>) -> 0(Class<VR128X>))  [0.999;0.999]
		 Successful, latency: 0.999
	VMOVSLDUPZ128rrk(3(Class<VR128X>) -> 0(Class<VR128X>))  [1.01;1.01]
		 Successful, latency: 1.01

-----VMOVSLDUPZ128rrkz-----
	VMOVSLDUPZ128rrkz(2(Class<VR128X>) -> 0(Class<VR128X>))  [1.01;1.01]
		 Successful, latency: 1.01

-----VMOVSLDUPZ256rr-----
	VMOVSLDUPZ256rr(1(Class<VR256X>) -> 0(Class<VR256X>))  [1.01;1.01]
		 Successful, latency: 1.01

-----VMOVSLDUPZ256rrk-----
	VMOVSLDUPZ256rrk(1(Class<VR256X>) -> 0(Class<VR256X>))  [1;1]
		 Successful, latency: 1
	VMOVSLDUPZ256rrk(3(Class<VR256X>) -> 0(Class<VR256X>))  [1.01;1.01]
		 Successful, latency: 1.01

-----VMOVSLDUPZ256rrkz-----
	VMOVSLDUPZ256rrkz(2(Class<VR256X>) -> 0(Class<VR256X>))  [0.999;0.999]
		 Successful, latency: 0.999

-----VMOVSLDUPZrr-----
	VMOVSLDUPZrr(1(Class<VR512>) -> 0(Class<VR512>))  [1.14;1.14]
		 Successful, latency: 1.14

-----VMOVSLDUPZrrk-----
	VMOVSLDUPZrrk(1(Class<VR512>) -> 0(Class<VR512>))  [1.09;1.09]
		 Successful, latency: 1.09
	VMOVSLDUPZrrk(3(Class<VR512>) -> 0(Class<VR512>))  [1.14;1.14]
		 Successful, latency: 1.14

-----VMOVSLDUPZrrkz-----
	VMOVSLDUPZrrkz(2(Class<VR512>) -> 0(Class<VR512>))  [1.09;1.09]
		 Successful, latency: 1.09

-----VMOVSLDUPrr-----
	VMOVSLDUPrr(1(Class<VR128>) -> 0(Class<VR128>))  [1.01;1.01]
		 Successful, latency: 1.01

-----VMOVSS2DIZrr-----
	VMOVSS2DIZrr(1(Class<FR32X>) -> 0(Class<GR32>))  [1;5.04]
		Dependencies:
			VMOVDI2SSZrr(1(Class<GR32>) -> 0(Class<FR32X>)) 
			VMOVSS2DIZrr(1(Class<FR32X>) -> 0(Class<GR32>)) 
		Combined result: 6.04 cycles

-----VMOVSS2DIrr-----
	VMOVSS2DIrr(1(Class<FR32>) -> 0(Class<GR32>))  [1.04;5.1]
		Dependencies:
			VMOVSS2DIrr(1(Class<FR32>) -> 0(Class<GR32>)) 
			VMOVDI2SSrr(1(Class<GR32>) -> 0(Class<FR32>)) 
		Combined result: 6.1 cycles

-----VMOVSSZrr-----
	VMOVSSZrr(1(Class<VR128X>) -> 0(Class<VR128X>))  [1;1]
		 Successful, latency: 1
	VMOVSSZrr(2(Class<VR128X>) -> 0(Class<VR128X>))  [1;1]
		 Successful, latency: 1

-----VMOVSSZrr_REV-----
	VMOVSSZrr_REV(1(Class<VR128X>) -> 0(Class<VR128X>))  [1.01;1.01]
		 Successful, latency: 1.01
	VMOVSSZrr_REV(2(Class<VR128X>) -> 0(Class<VR128X>))  [1.02;1.02]
		 Successful, latency: 1.02

-----VMOVSSZrrk-----
	VMOVSSZrrk(1(Class<VR128X>) -> 0(Class<VR128X>))  [1;1]
		 Successful, latency: 1
	VMOVSSZrrk(3(Class<VR128X>) -> 0(Class<VR128X>))  [1.01;1.01]
		 Successful, latency: 1.01
	VMOVSSZrrk(4(Class<VR128X>) -> 0(Class<VR128X>))  [1.01;1.01]
		 Successful, latency: 1.01

-----VMOVSSZrrk_REV-----
	VMOVSSZrrk_REV(1(Class<VR128X>) -> 0(Class<VR128X>))  [1;1]
		 Successful, latency: 1
	VMOVSSZrrk_REV(3(Class<VR128X>) -> 0(Class<VR128X>))  [1.01;1.01]
		 Successful, latency: 1.01
	VMOVSSZrrk_REV(4(Class<VR128X>) -> 0(Class<VR128X>))  [1.01;1.01]
		 Successful, latency: 1.01

-----VMOVSSZrrkz-----
	VMOVSSZrrkz(2(Class<VR128X>) -> 0(Class<VR128X>))  [1;1]
		 Successful, latency: 1
	VMOVSSZrrkz(3(Class<VR128X>) -> 0(Class<VR128X>))  [1.01;1.01]
		 Successful, latency: 1.01

-----VMOVSSZrrkz_REV-----
	VMOVSSZrrkz_REV(2(Class<VR128X>) -> 0(Class<VR128X>))  [1.02;1.02]
		 Successful, latency: 1.02
	VMOVSSZrrkz_REV(3(Class<VR128X>) -> 0(Class<VR128X>))  [1.01;1.01]
		 Successful, latency: 1.01

-----VMOVSSrr-----
	VMOVSSrr(1(Class<VR128>) -> 0(Class<VR128>))  [1.01;1.01]
		 Successful, latency: 1.01
	VMOVSSrr(2(Class<VR128>) -> 0(Class<VR128>))  [1.01;1.01]
		 Successful, latency: 1.01

-----VMOVSSrr_REV-----
	VMOVSSrr_REV(1(Class<VR128>) -> 0(Class<VR128>))  [1.01;1.01]
		 Successful, latency: 1.01
	VMOVSSrr_REV(2(Class<VR128>) -> 0(Class<VR128>))  [1.02;1.02]
		 Successful, latency: 1.02

-----VMOVUPDYrr-----
	VMOVUPDYrr(1(Class<VR256>) -> 0(Class<VR256>))  [0.166;0.166]
		 Successful, latency: 0.166

-----VMOVUPDYrr_REV-----
	VMOVUPDYrr_REV(1(Class<VR256>) -> 0(Class<VR256>))  [0.168;0.168]
		 Successful, latency: 0.168

-----VMOVUPDZ128rr-----
	VMOVUPDZ128rr(1(Class<VR128X>) -> 0(Class<VR128X>))  [0.168;0.168]
		 Successful, latency: 0.168

-----VMOVUPDZ128rr_REV-----
	VMOVUPDZ128rr_REV(1(Class<VR128X>) -> 0(Class<VR128X>))  [0.166;0.166]
		 Successful, latency: 0.166

-----VMOVUPDZ128rrk-----
	VMOVUPDZ128rrk(1(Class<VR128X>) -> 0(Class<VR128X>))  [1.01;1.01]
		 Successful, latency: 1.01
	VMOVUPDZ128rrk(3(Class<VR128X>) -> 0(Class<VR128X>))  [1.01;1.01]
		 Successful, latency: 1.01

-----VMOVUPDZ128rrk_REV-----
	VMOVUPDZ128rrk_REV(2(Class<VR128X>) -> 0(Class<VR128X>))  [1;1]
		 Successful, latency: 1

-----VMOVUPDZ128rrkz-----
	VMOVUPDZ128rrkz(2(Class<VR128X>) -> 0(Class<VR128X>))  [1.01;1.01]
		 Successful, latency: 1.01

-----VMOVUPDZ128rrkz_REV-----
	VMOVUPDZ128rrkz_REV(2(Class<VR128X>) -> 0(Class<VR128X>))  [0.999;0.999]
		 Successful, latency: 0.999

-----VMOVUPDZ256rr-----
	VMOVUPDZ256rr(1(Class<VR256X>) -> 0(Class<VR256X>))  [0.168;0.168]
		 Successful, latency: 0.168

-----VMOVUPDZ256rr_REV-----
	VMOVUPDZ256rr_REV(1(Class<VR256X>) -> 0(Class<VR256X>))  [0.168;0.168]
		 Successful, latency: 0.168

-----VMOVUPDZ256rrk-----
	VMOVUPDZ256rrk(1(Class<VR256X>) -> 0(Class<VR256X>))  [1;1]
		 Successful, latency: 1
	VMOVUPDZ256rrk(3(Class<VR256X>) -> 0(Class<VR256X>))  [1.01;1.01]
		 Successful, latency: 1.01

-----VMOVUPDZ256rrk_REV-----
	VMOVUPDZ256rrk_REV(2(Class<VR256X>) -> 0(Class<VR256X>))  [1.01;1.01]
		 Successful, latency: 1.01

-----VMOVUPDZ256rrkz-----
	VMOVUPDZ256rrkz(2(Class<VR256X>) -> 0(Class<VR256X>))  [1;1]
		 Successful, latency: 1

-----VMOVUPDZ256rrkz_REV-----
	VMOVUPDZ256rrkz_REV(2(Class<VR256X>) -> 0(Class<VR256X>))  [1.01;1.01]
		 Successful, latency: 1.01

-----VMOVUPDZrr-----
	VMOVUPDZrr(1(Class<VR512>) -> 0(Class<VR512>))  [0.168;0.168]
		 Successful, latency: 0.168

-----VMOVUPDZrr_REV-----
	VMOVUPDZrr_REV(1(Class<VR512>) -> 0(Class<VR512>))  [0.168;0.168]
		 Successful, latency: 0.168

-----VMOVUPDZrrk-----
	VMOVUPDZrrk(1(Class<VR512>) -> 0(Class<VR512>))  [1;1]
		 Successful, latency: 1
	VMOVUPDZrrk(3(Class<VR512>) -> 0(Class<VR512>))  [1;1]
		 Successful, latency: 1

-----VMOVUPDZrrk_REV-----
	VMOVUPDZrrk_REV(2(Class<VR512>) -> 0(Class<VR512>))  [1.01;1.01]
		 Successful, latency: 1.01

-----VMOVUPDZrrkz-----
	VMOVUPDZrrkz(2(Class<VR512>) -> 0(Class<VR512>))  [1.01;1.01]
		 Successful, latency: 1.01

-----VMOVUPDZrrkz_REV-----
	VMOVUPDZrrkz_REV(2(Class<VR512>) -> 0(Class<VR512>))  [1;1]
		 Successful, latency: 1

-----VMOVUPDrr-----
	VMOVUPDrr(1(Class<VR128>) -> 0(Class<VR128>))  [0.168;0.168]
		 Successful, latency: 0.168

-----VMOVUPDrr_REV-----
	VMOVUPDrr_REV(1(Class<VR128>) -> 0(Class<VR128>))  [0.168;0.168]
		 Successful, latency: 0.168

-----VMOVUPSYrr-----
	VMOVUPSYrr(1(Class<VR256>) -> 0(Class<VR256>))  [0.168;0.168]
		 Successful, latency: 0.168

-----VMOVUPSYrr_REV-----
	VMOVUPSYrr_REV(1(Class<VR256>) -> 0(Class<VR256>))  [0.168;0.168]
		 Successful, latency: 0.168

-----VMOVUPSZ128rr-----
	VMOVUPSZ128rr(1(Class<VR128X>) -> 0(Class<VR128X>))  [0.168;0.168]
		 Successful, latency: 0.168

-----VMOVUPSZ128rr_REV-----
	VMOVUPSZ128rr_REV(1(Class<VR128X>) -> 0(Class<VR128X>))  [0.166;0.166]
		 Successful, latency: 0.166

-----VMOVUPSZ128rrk-----
	VMOVUPSZ128rrk(1(Class<VR128X>) -> 0(Class<VR128X>))  [1.01;1.01]
		 Successful, latency: 1.01
	VMOVUPSZ128rrk(3(Class<VR128X>) -> 0(Class<VR128X>))  [1.03;1.03]
		 Successful, latency: 1.03

-----VMOVUPSZ128rrk_REV-----
	VMOVUPSZ128rrk_REV(2(Class<VR128X>) -> 0(Class<VR128X>))  [1;1]
		 Successful, latency: 1

-----VMOVUPSZ128rrkz-----
	VMOVUPSZ128rrkz(2(Class<VR128X>) -> 0(Class<VR128X>))  [1;1]
		 Successful, latency: 1

-----VMOVUPSZ128rrkz_REV-----
	VMOVUPSZ128rrkz_REV(2(Class<VR128X>) -> 0(Class<VR128X>))  [1.01;1.01]
		 Successful, latency: 1.01

-----VMOVUPSZ256rr-----
	VMOVUPSZ256rr(1(Class<VR256X>) -> 0(Class<VR256X>))  [0.168;0.168]
		 Successful, latency: 0.168

-----VMOVUPSZ256rr_REV-----
	VMOVUPSZ256rr_REV(1(Class<VR256X>) -> 0(Class<VR256X>))  [0.168;0.168]
		 Successful, latency: 0.168

-----VMOVUPSZ256rrk-----
	VMOVUPSZ256rrk(1(Class<VR256X>) -> 0(Class<VR256X>))  [1.01;1.01]
		 Successful, latency: 1.01
	VMOVUPSZ256rrk(3(Class<VR256X>) -> 0(Class<VR256X>))  [1;1]
		 Successful, latency: 1

-----VMOVUPSZ256rrk_REV-----
	VMOVUPSZ256rrk_REV(2(Class<VR256X>) -> 0(Class<VR256X>))  [1.02;1.02]
		 Successful, latency: 1.02

-----VMOVUPSZ256rrkz-----
	VMOVUPSZ256rrkz(2(Class<VR256X>) -> 0(Class<VR256X>))  [1;1]
		 Successful, latency: 1

-----VMOVUPSZ256rrkz_REV-----
	VMOVUPSZ256rrkz_REV(2(Class<VR256X>) -> 0(Class<VR256X>))  [1.01;1.01]
		 Successful, latency: 1.01

-----VMOVUPSZrr-----
	VMOVUPSZrr(1(Class<VR512>) -> 0(Class<VR512>))  [0.168;0.168]
		 Successful, latency: 0.168

-----VMOVUPSZrr_REV-----
	VMOVUPSZrr_REV(1(Class<VR512>) -> 0(Class<VR512>))  [0.166;0.166]
		 Successful, latency: 0.166

-----VMOVUPSZrrk-----
	VMOVUPSZrrk(1(Class<VR512>) -> 0(Class<VR512>))  [1.01;1.01]
		 Successful, latency: 1.01
	VMOVUPSZrrk(3(Class<VR512>) -> 0(Class<VR512>))  [1.01;1.01]
		 Successful, latency: 1.01

-----VMOVUPSZrrk_REV-----
	VMOVUPSZrrk_REV(2(Class<VR512>) -> 0(Class<VR512>))  [1;1]
		 Successful, latency: 1

-----VMOVUPSZrrkz-----
	VMOVUPSZrrkz(2(Class<VR512>) -> 0(Class<VR512>))  [1;1]
		 Successful, latency: 1

-----VMOVUPSZrrkz_REV-----
	VMOVUPSZrrkz_REV(2(Class<VR512>) -> 0(Class<VR512>))  [1;1]
		 Successful, latency: 1

-----VMOVUPSrr-----
	VMOVUPSrr(1(Class<VR128>) -> 0(Class<VR128>))  [0.166;0.166]
		 Successful, latency: 0.166

-----VMOVUPSrr_REV-----
	VMOVUPSrr_REV(1(Class<VR128>) -> 0(Class<VR128>))  [0.166;0.166]
		 Successful, latency: 0.166

-----VMOVZPDILo2PDIZrr-----
	VMOVZPDILo2PDIZrr(1(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VMOVZPDILo2PDIZrr2-----
	VMOVZPDILo2PDIZrr2(1(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VMOVZPQILo2PQIZrr-----
	VMOVZPQILo2PQIZrr(1(Class<VR128X>) -> 0(Class<VR128X>))  [1.01;1.01]
		 Successful, latency: 1.01

-----VMOVZPQILo2PQIrr-----
	VMOVZPQILo2PQIrr(1(Class<VR128>) -> 0(Class<VR128>))  [1.01;1.01]
		 Successful, latency: 1.01

-----VMOVZPWILo2PWIZrr-----
	VMOVZPWILo2PWIZrr(1(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VMOVZPWILo2PWIZrr2-----
	VMOVZPWILo2PWIZrr2(1(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VMPSADBWYrri-----
	VMPSADBWYrri(1(Class<VR256>) -> 0(Class<VR256>))  [5.06;5.06]
		 Successful, latency: 5.06
	VMPSADBWYrri(2(Class<VR256>) -> 0(Class<VR256>))  [5.05;5.05]
		 Successful, latency: 5.05

-----VMPSADBWZ128rri-----
	VMPSADBWZ128rri(1(Class<VR128X>) -> 0(Class<VR128X>))  [5.07;5.07]
		 Successful, latency: 5.07
	VMPSADBWZ128rri(2(Class<VR128X>) -> 0(Class<VR128X>))  [5.04;5.04]
		 Successful, latency: 5.04

-----VMPSADBWZ128rrik-----
	VMPSADBWZ128rrik(1(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VMPSADBWZ128rrik(3(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VMPSADBWZ128rrik(4(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VMPSADBWZ128rrikz-----
	VMPSADBWZ128rrikz(2(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VMPSADBWZ128rrikz(3(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VMPSADBWZ256rri-----
	VMPSADBWZ256rri(1(Class<VR256X>) -> 0(Class<VR256X>))  [5.04;5.04]
		 Successful, latency: 5.04
	VMPSADBWZ256rri(2(Class<VR256X>) -> 0(Class<VR256X>))  [5.03;5.03]
		 Successful, latency: 5.03

-----VMPSADBWZ256rrik-----
	VMPSADBWZ256rrik(1(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VMPSADBWZ256rrik(3(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VMPSADBWZ256rrik(4(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VMPSADBWZ256rrikz-----
	VMPSADBWZ256rrikz(2(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VMPSADBWZ256rrikz(3(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VMPSADBWZrri-----
	VMPSADBWZrri(1(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VMPSADBWZrri(2(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VMPSADBWZrrik-----
	VMPSADBWZrrik(1(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VMPSADBWZrrik(3(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VMPSADBWZrrik(4(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VMPSADBWZrrikz-----
	VMPSADBWZrrikz(2(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VMPSADBWZrrikz(3(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VMPSADBWrri-----
	VMPSADBWrri(1(Class<VR128>) -> 0(Class<VR128>))  [5.04;5.04]
		 Successful, latency: 5.04
	VMPSADBWrri(2(Class<VR128>) -> 0(Class<VR128>))  [5.05;5.05]
		 Successful, latency: 5.05

-----VMREAD32rr-----
	VMREAD32rr(1(Class<GR32>) -> 0(Class<GR32>))  [ERROR_ASSEMBLY]
		ERROR_ASSEMBLY, this instruction cannot be measured on this platform

-----VMREAD64rr-----
	VMREAD64rr(1(Class<GR64>) -> 0(Class<GR64>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VMULBF16Z128rr-----
	VMULBF16Z128rr(1(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VMULBF16Z128rr(2(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VMULBF16Z128rrk-----
	VMULBF16Z128rrk(1(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VMULBF16Z128rrk(3(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VMULBF16Z128rrk(4(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VMULBF16Z128rrkz-----
	VMULBF16Z128rrkz(2(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VMULBF16Z128rrkz(3(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VMULBF16Z256rr-----
	VMULBF16Z256rr(1(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VMULBF16Z256rr(2(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VMULBF16Z256rrk-----
	VMULBF16Z256rrk(1(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VMULBF16Z256rrk(3(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VMULBF16Z256rrk(4(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VMULBF16Z256rrkz-----
	VMULBF16Z256rrkz(2(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VMULBF16Z256rrkz(3(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VMULBF16Zrr-----
	VMULBF16Zrr(1(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VMULBF16Zrr(2(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VMULBF16Zrrk-----
	VMULBF16Zrrk(1(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VMULBF16Zrrk(3(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VMULBF16Zrrk(4(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VMULBF16Zrrkz-----
	VMULBF16Zrrkz(2(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VMULBF16Zrrkz(3(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VMULPDYrr-----
	VMULPDYrr(1(Class<VR256>) -> 0(Class<VR256>))  [4.26;4.26]
		 Successful, latency: 4.26
	VMULPDYrr(2(Class<VR256>) -> 0(Class<VR256>))  [4.26;4.26]
		 Successful, latency: 4.26

-----VMULPDZ128rr-----
	VMULPDZ128rr(1(Class<VR128X>) -> 0(Class<VR128X>))  [4.3;4.3]
		 Successful, latency: 4.3
	VMULPDZ128rr(2(Class<VR128X>) -> 0(Class<VR128X>))  [4.29;4.29]
		 Successful, latency: 4.29

-----VMULPDZ128rrk-----
	VMULPDZ128rrk(1(Class<VR128X>) -> 0(Class<VR128X>))  [3.03;3.03]
		 Successful, latency: 3.03
	VMULPDZ128rrk(3(Class<VR128X>) -> 0(Class<VR128X>))  [3.02;3.02]
		 Successful, latency: 3.02
	VMULPDZ128rrk(4(Class<VR128X>) -> 0(Class<VR128X>))  [3.04;3.04]
		 Successful, latency: 3.04

-----VMULPDZ128rrkz-----
	VMULPDZ128rrkz(2(Class<VR128X>) -> 0(Class<VR128X>))  [3.04;3.04]
		 Successful, latency: 3.04
	VMULPDZ128rrkz(3(Class<VR128X>) -> 0(Class<VR128X>))  [3.03;3.03]
		 Successful, latency: 3.03

-----VMULPDZ256rr-----
	VMULPDZ256rr(1(Class<VR256X>) -> 0(Class<VR256X>))  [4.28;4.28]
		 Successful, latency: 4.28
	VMULPDZ256rr(2(Class<VR256X>) -> 0(Class<VR256X>))  [4.27;4.27]
		 Successful, latency: 4.27

-----VMULPDZ256rrb-----
	VMULPDZ256rrb(1(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VMULPDZ256rrb(2(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VMULPDZ256rrbk-----
	VMULPDZ256rrbk(1(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VMULPDZ256rrbk(3(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VMULPDZ256rrbk(4(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VMULPDZ256rrbkz-----
	VMULPDZ256rrbkz(2(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VMULPDZ256rrbkz(3(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VMULPDZ256rrk-----
	VMULPDZ256rrk(1(Class<VR256X>) -> 0(Class<VR256X>))  [3.08;3.08]
		 Successful, latency: 3.08
	VMULPDZ256rrk(3(Class<VR256X>) -> 0(Class<VR256X>))  [3.03;3.03]
		 Successful, latency: 3.03
	VMULPDZ256rrk(4(Class<VR256X>) -> 0(Class<VR256X>))  [3.03;3.03]
		 Successful, latency: 3.03

-----VMULPDZ256rrkz-----
	VMULPDZ256rrkz(2(Class<VR256X>) -> 0(Class<VR256X>))  [3.02;3.02]
		 Successful, latency: 3.02
	VMULPDZ256rrkz(3(Class<VR256X>) -> 0(Class<VR256X>))  [3.04;3.04]
		 Successful, latency: 3.04

-----VMULPDZrr-----
	VMULPDZrr(1(Class<VR512>) -> 0(Class<VR512>))  [4.26;4.26]
		 Successful, latency: 4.26
	VMULPDZrr(2(Class<VR512>) -> 0(Class<VR512>))  [4.29;4.29]
		 Successful, latency: 4.29

-----VMULPDZrrb-----
	VMULPDZrrb(1(Class<VR512>) -> 0(Class<VR512>))  [4.6;4.6]
		 Successful, latency: 4.6
	VMULPDZrrb(2(Class<VR512>) -> 0(Class<VR512>))  [4.61;4.61]
		 Successful, latency: 4.61

-----VMULPDZrrbk-----
	VMULPDZrrbk(1(Class<VR512>) -> 0(Class<VR512>))  [3.03;3.03]
		 Successful, latency: 3.03
	VMULPDZrrbk(3(Class<VR512>) -> 0(Class<VR512>))  [3.04;3.04]
		 Successful, latency: 3.04
	VMULPDZrrbk(4(Class<VR512>) -> 0(Class<VR512>))  [3.05;3.05]
		 Successful, latency: 3.05

-----VMULPDZrrbkz-----
	VMULPDZrrbkz(2(Class<VR512>) -> 0(Class<VR512>))  [3.02;3.02]
		 Successful, latency: 3.02
	VMULPDZrrbkz(3(Class<VR512>) -> 0(Class<VR512>))  [3.02;3.02]
		 Successful, latency: 3.02

-----VMULPDZrrk-----
	VMULPDZrrk(1(Class<VR512>) -> 0(Class<VR512>))  [3.03;3.03]
		 Successful, latency: 3.03
	VMULPDZrrk(3(Class<VR512>) -> 0(Class<VR512>))  [3.02;3.02]
		 Successful, latency: 3.02
	VMULPDZrrk(4(Class<VR512>) -> 0(Class<VR512>))  [3.03;3.03]
		 Successful, latency: 3.03

-----VMULPDZrrkz-----
	VMULPDZrrkz(2(Class<VR512>) -> 0(Class<VR512>))  [3.04;3.04]
		 Successful, latency: 3.04
	VMULPDZrrkz(3(Class<VR512>) -> 0(Class<VR512>))  [3.04;3.04]
		 Successful, latency: 3.04

-----VMULPDrr-----
	VMULPDrr(1(Class<VR128>) -> 0(Class<VR128>))  [4.29;4.29]
		 Successful, latency: 4.29
	VMULPDrr(2(Class<VR128>) -> 0(Class<VR128>))  [4.56;4.56]
		 Successful, latency: 4.56

-----VMULPHZ128rr-----
	VMULPHZ128rr(1(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VMULPHZ128rr(2(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VMULPHZ128rrk-----
	VMULPHZ128rrk(1(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VMULPHZ128rrk(3(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VMULPHZ128rrk(4(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VMULPHZ128rrkz-----
	VMULPHZ128rrkz(2(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VMULPHZ128rrkz(3(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VMULPHZ256rr-----
	VMULPHZ256rr(1(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VMULPHZ256rr(2(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VMULPHZ256rrb-----
	VMULPHZ256rrb(1(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VMULPHZ256rrb(2(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VMULPHZ256rrbk-----
	VMULPHZ256rrbk(1(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VMULPHZ256rrbk(3(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VMULPHZ256rrbk(4(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VMULPHZ256rrbkz-----
	VMULPHZ256rrbkz(2(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VMULPHZ256rrbkz(3(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VMULPHZ256rrk-----
	VMULPHZ256rrk(1(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VMULPHZ256rrk(3(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VMULPHZ256rrk(4(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VMULPHZ256rrkz-----
	VMULPHZ256rrkz(2(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VMULPHZ256rrkz(3(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VMULPHZrr-----
	VMULPHZrr(1(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VMULPHZrr(2(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VMULPHZrrb-----
	VMULPHZrrb(1(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VMULPHZrrb(2(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VMULPHZrrbk-----
	VMULPHZrrbk(1(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VMULPHZrrbk(3(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VMULPHZrrbk(4(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VMULPHZrrbkz-----
	VMULPHZrrbkz(2(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VMULPHZrrbkz(3(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VMULPHZrrk-----
	VMULPHZrrk(1(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VMULPHZrrk(3(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VMULPHZrrk(4(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VMULPHZrrkz-----
	VMULPHZrrkz(2(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VMULPHZrrkz(3(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VMULPSYrr-----
	VMULPSYrr(1(Class<VR256>) -> 0(Class<VR256>))  [1.8;1.8]
		 Successful, latency: 1.8
	VMULPSYrr(2(Class<VR256>) -> 0(Class<VR256>))  [1.43;1.43]
		 Successful, latency: 1.43

-----VMULPSZ128rr-----
	VMULPSZ128rr(1(Class<VR128X>) -> 0(Class<VR128X>))  [4.31;4.31]
		 Successful, latency: 4.31
	VMULPSZ128rr(2(Class<VR128X>) -> 0(Class<VR128X>))  [4.57;4.57]
		 Successful, latency: 4.57

-----VMULPSZ128rrk-----
	VMULPSZ128rrk(1(Class<VR128X>) -> 0(Class<VR128X>))  [3.04;3.04]
		 Successful, latency: 3.04
	VMULPSZ128rrk(3(Class<VR128X>) -> 0(Class<VR128X>))  [3.03;3.03]
		 Successful, latency: 3.03
	VMULPSZ128rrk(4(Class<VR128X>) -> 0(Class<VR128X>))  [3.03;3.03]
		 Successful, latency: 3.03

-----VMULPSZ128rrkz-----
	VMULPSZ128rrkz(2(Class<VR128X>) -> 0(Class<VR128X>))  [3.04;3.04]
		 Successful, latency: 3.04
	VMULPSZ128rrkz(3(Class<VR128X>) -> 0(Class<VR128X>))  [3.05;3.05]
		 Successful, latency: 3.05

-----VMULPSZ256rr-----
	VMULPSZ256rr(1(Class<VR256X>) -> 0(Class<VR256X>))  [1.81;1.81]
		 Successful, latency: 1.81
	VMULPSZ256rr(2(Class<VR256X>) -> 0(Class<VR256X>))  [1.44;1.44]
		 Successful, latency: 1.44

-----VMULPSZ256rrb-----
	VMULPSZ256rrb(1(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VMULPSZ256rrb(2(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VMULPSZ256rrbk-----
	VMULPSZ256rrbk(1(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VMULPSZ256rrbk(3(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VMULPSZ256rrbk(4(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VMULPSZ256rrbkz-----
	VMULPSZ256rrbkz(2(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VMULPSZ256rrbkz(3(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VMULPSZ256rrk-----
	VMULPSZ256rrk(1(Class<VR256X>) -> 0(Class<VR256X>))  [3.04;3.04]
		 Successful, latency: 3.04
	VMULPSZ256rrk(3(Class<VR256X>) -> 0(Class<VR256X>))  [3.04;3.04]
		 Successful, latency: 3.04
	VMULPSZ256rrk(4(Class<VR256X>) -> 0(Class<VR256X>))  [3.04;3.04]
		 Successful, latency: 3.04

-----VMULPSZ256rrkz-----
	VMULPSZ256rrkz(2(Class<VR256X>) -> 0(Class<VR256X>))  [3.04;3.04]
		 Successful, latency: 3.04
	VMULPSZ256rrkz(3(Class<VR256X>) -> 0(Class<VR256X>))  [3.03;3.03]
		 Successful, latency: 3.03

-----VMULPSZrr-----
	VMULPSZrr(1(Class<VR512>) -> 0(Class<VR512>))  [1.78;1.78]
		 Successful, latency: 1.78
	VMULPSZrr(2(Class<VR512>) -> 0(Class<VR512>))  [1.83;1.83]
		 Successful, latency: 1.83

-----VMULPSZrrb-----
	VMULPSZrrb(1(Class<VR512>) -> 0(Class<VR512>))  [1.8;1.8]
		 Successful, latency: 1.8
	VMULPSZrrb(2(Class<VR512>) -> 0(Class<VR512>))  [1.81;1.81]
		 Successful, latency: 1.81

-----VMULPSZrrbk-----
	VMULPSZrrbk(1(Class<VR512>) -> 0(Class<VR512>))  [3.02;3.02]
		 Successful, latency: 3.02
	VMULPSZrrbk(3(Class<VR512>) -> 0(Class<VR512>))  [3.03;3.03]
		 Successful, latency: 3.03
	VMULPSZrrbk(4(Class<VR512>) -> 0(Class<VR512>))  [3.09;3.09]
		 Successful, latency: 3.09

-----VMULPSZrrbkz-----
	VMULPSZrrbkz(2(Class<VR512>) -> 0(Class<VR512>))  [3.02;3.02]
		 Successful, latency: 3.02
	VMULPSZrrbkz(3(Class<VR512>) -> 0(Class<VR512>))  [3.04;3.04]
		 Successful, latency: 3.04

-----VMULPSZrrk-----
	VMULPSZrrk(1(Class<VR512>) -> 0(Class<VR512>))  [3.04;3.04]
		 Successful, latency: 3.04
	VMULPSZrrk(3(Class<VR512>) -> 0(Class<VR512>))  [3.04;3.04]
		 Successful, latency: 3.04
	VMULPSZrrk(4(Class<VR512>) -> 0(Class<VR512>))  [3.03;3.03]
		 Successful, latency: 3.03

-----VMULPSZrrkz-----
	VMULPSZrrkz(2(Class<VR512>) -> 0(Class<VR512>))  [3.04;3.04]
		 Successful, latency: 3.04
	VMULPSZrrkz(3(Class<VR512>) -> 0(Class<VR512>))  [3.02;3.02]
		 Successful, latency: 3.02

-----VMULPSrr-----
	VMULPSrr(1(Class<VR128>) -> 0(Class<VR128>))  [4.28;4.28]
		 Successful, latency: 4.28
	VMULPSrr(2(Class<VR128>) -> 0(Class<VR128>))  [4.28;4.28]
		 Successful, latency: 4.28

-----VMULSDZrr-----
	VMULSDZrr(1(Class<FR64X>) -> 0(Class<FR64X>))  [4.28;4.28]
		 Successful, latency: 4.28
	VMULSDZrr(2(Class<FR64X>) -> 0(Class<FR64X>))  [4.31;4.31]
		 Successful, latency: 4.31

-----VMULSDZrr_Int-----
	VMULSDZrr_Int(1(Class<VR128X>) -> 0(Class<VR128X>))  [4.28;4.28]
		 Successful, latency: 4.28
	VMULSDZrr_Int(2(Class<VR128X>) -> 0(Class<VR128X>))  [4.27;4.27]
		 Successful, latency: 4.27

-----VMULSDZrrb_Int-----
	VMULSDZrrb_Int(1(Class<VR128X>) -> 0(Class<VR128X>))  [4.24;4.24]
		 Successful, latency: 4.24
	VMULSDZrrb_Int(2(Class<VR128X>) -> 0(Class<VR128X>))  [4.24;4.24]
		 Successful, latency: 4.24

-----VMULSDZrrbk_Int-----
	VMULSDZrrbk_Int(1(Class<VR128X>) -> 0(Class<VR128X>))  [3.04;3.04]
		 Successful, latency: 3.04
	VMULSDZrrbk_Int(3(Class<VR128X>) -> 0(Class<VR128X>))  [3.04;3.04]
		 Successful, latency: 3.04
	VMULSDZrrbk_Int(4(Class<VR128X>) -> 0(Class<VR128X>))  [3.04;3.04]
		 Successful, latency: 3.04

-----VMULSDZrrbkz_Int-----
	VMULSDZrrbkz_Int(2(Class<VR128X>) -> 0(Class<VR128X>))  [3.06;3.06]
		 Successful, latency: 3.06
	VMULSDZrrbkz_Int(3(Class<VR128X>) -> 0(Class<VR128X>))  [3.04;3.04]
		 Successful, latency: 3.04

-----VMULSDZrrk_Int-----
	VMULSDZrrk_Int(1(Class<VR128X>) -> 0(Class<VR128X>))  [3.03;3.03]
		 Successful, latency: 3.03
	VMULSDZrrk_Int(3(Class<VR128X>) -> 0(Class<VR128X>))  [3.06;3.06]
		 Successful, latency: 3.06
	VMULSDZrrk_Int(4(Class<VR128X>) -> 0(Class<VR128X>))  [3.03;3.03]
		 Successful, latency: 3.03

-----VMULSDZrrkz_Int-----
	VMULSDZrrkz_Int(2(Class<VR128X>) -> 0(Class<VR128X>))  [3.06;3.06]
		 Successful, latency: 3.06
	VMULSDZrrkz_Int(3(Class<VR128X>) -> 0(Class<VR128X>))  [3.04;3.04]
		 Successful, latency: 3.04

-----VMULSDrr-----
	VMULSDrr(1(Class<FR64>) -> 0(Class<FR64>))  [4.61;4.61]
		 Successful, latency: 4.61
	VMULSDrr(2(Class<FR64>) -> 0(Class<FR64>))  [4.56;4.56]
		 Successful, latency: 4.56

-----VMULSDrr_Int-----
	VMULSDrr_Int(1(Class<VR128>) -> 0(Class<VR128>))  [4.57;4.57]
		 Successful, latency: 4.57
	VMULSDrr_Int(2(Class<VR128>) -> 0(Class<VR128>))  [4.57;4.57]
		 Successful, latency: 4.57

-----VMULSHZrr-----
	VMULSHZrr(1(Class<FR16X>) -> 0(Class<FR16X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VMULSHZrr(2(Class<FR16X>) -> 0(Class<FR16X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VMULSHZrr_Int-----
	VMULSHZrr_Int(1(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VMULSHZrr_Int(2(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VMULSHZrrb_Int-----
	VMULSHZrrb_Int(1(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VMULSHZrrb_Int(2(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VMULSHZrrbk_Int-----
	VMULSHZrrbk_Int(1(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VMULSHZrrbk_Int(3(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VMULSHZrrbk_Int(4(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VMULSHZrrbkz_Int-----
	VMULSHZrrbkz_Int(2(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VMULSHZrrbkz_Int(3(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VMULSHZrrk_Int-----
	VMULSHZrrk_Int(1(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VMULSHZrrk_Int(3(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VMULSHZrrk_Int(4(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VMULSHZrrkz_Int-----
	VMULSHZrrkz_Int(2(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VMULSHZrrkz_Int(3(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VMULSSZrr-----
	VMULSSZrr(1(Class<FR32X>) -> 0(Class<FR32X>))  [4.28;4.28]
		 Successful, latency: 4.28
	VMULSSZrr(2(Class<FR32X>) -> 0(Class<FR32X>))  [4.58;4.58]
		 Successful, latency: 4.58

-----VMULSSZrr_Int-----
	VMULSSZrr_Int(1(Class<VR128X>) -> 0(Class<VR128X>))  [4.28;4.28]
		 Successful, latency: 4.28
	VMULSSZrr_Int(2(Class<VR128X>) -> 0(Class<VR128X>))  [4.57;4.57]
		 Successful, latency: 4.57

-----VMULSSZrrb_Int-----
	VMULSSZrrb_Int(1(Class<VR128X>) -> 0(Class<VR128X>))  [4.25;4.25]
		 Successful, latency: 4.25
	VMULSSZrrb_Int(2(Class<VR128X>) -> 0(Class<VR128X>))  [4.57;4.57]
		 Successful, latency: 4.57

-----VMULSSZrrbk_Int-----
	VMULSSZrrbk_Int(1(Class<VR128X>) -> 0(Class<VR128X>))  [3.03;3.03]
		 Successful, latency: 3.03
	VMULSSZrrbk_Int(3(Class<VR128X>) -> 0(Class<VR128X>))  [3.03;3.03]
		 Successful, latency: 3.03
	VMULSSZrrbk_Int(4(Class<VR128X>) -> 0(Class<VR128X>))  [3.03;3.03]
		 Successful, latency: 3.03

-----VMULSSZrrbkz_Int-----
	VMULSSZrrbkz_Int(2(Class<VR128X>) -> 0(Class<VR128X>))  [3.03;3.03]
		 Successful, latency: 3.03
	VMULSSZrrbkz_Int(3(Class<VR128X>) -> 0(Class<VR128X>))  [3.04;3.04]
		 Successful, latency: 3.04

-----VMULSSZrrk_Int-----
	VMULSSZrrk_Int(1(Class<VR128X>) -> 0(Class<VR128X>))  [3.02;3.02]
		 Successful, latency: 3.02
	VMULSSZrrk_Int(3(Class<VR128X>) -> 0(Class<VR128X>))  [3.03;3.03]
		 Successful, latency: 3.03
	VMULSSZrrk_Int(4(Class<VR128X>) -> 0(Class<VR128X>))  [3.05;3.05]
		 Successful, latency: 3.05

-----VMULSSZrrkz_Int-----
	VMULSSZrrkz_Int(2(Class<VR128X>) -> 0(Class<VR128X>))  [3.03;3.03]
		 Successful, latency: 3.03
	VMULSSZrrkz_Int(3(Class<VR128X>) -> 0(Class<VR128X>))  [3.04;3.04]
		 Successful, latency: 3.04

-----VMULSSrr-----
	VMULSSrr(1(Class<FR32>) -> 0(Class<FR32>))  [4.58;4.58]
		 Successful, latency: 4.58
	VMULSSrr(2(Class<FR32>) -> 0(Class<FR32>))  [4.56;4.56]
		 Successful, latency: 4.56

-----VMULSSrr_Int-----
	VMULSSrr_Int(1(Class<VR128>) -> 0(Class<VR128>))  [4.6;4.6]
		 Successful, latency: 4.6
	VMULSSrr_Int(2(Class<VR128>) -> 0(Class<VR128>))  [4.6;4.6]
		 Successful, latency: 4.6

-----VMWRITE32rr-----
	VMWRITE32rr(1(Class<GR32>) -> 0(Class<GR32>))  [ERROR_ASSEMBLY]
		ERROR_ASSEMBLY, this instruction cannot be measured on this platform

-----VMWRITE64rr-----
	VMWRITE64rr(1(Class<GR64>) -> 0(Class<GR64>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VORPDYrr-----
	VORPDYrr(1(Class<VR256>) -> 0(Class<VR256>))  [0.998;0.998]
		 Successful, latency: 0.998
	VORPDYrr(2(Class<VR256>) -> 0(Class<VR256>))  [1.01;1.01]
		 Successful, latency: 1.01

-----VORPDZ128rr-----
	VORPDZ128rr(1(Class<VR128X>) -> 0(Class<VR128X>))  [1.01;1.01]
		 Successful, latency: 1.01
	VORPDZ128rr(2(Class<VR128X>) -> 0(Class<VR128X>))  [1.01;1.01]
		 Successful, latency: 1.01

-----VORPDZ128rrk-----
	VORPDZ128rrk(1(Class<VR128X>) -> 0(Class<VR128X>))  [1.02;1.02]
		 Successful, latency: 1.02
	VORPDZ128rrk(3(Class<VR128X>) -> 0(Class<VR128X>))  [1.02;1.02]
		 Successful, latency: 1.02
	VORPDZ128rrk(4(Class<VR128X>) -> 0(Class<VR128X>))  [1.01;1.01]
		 Successful, latency: 1.01

-----VORPDZ128rrkz-----
	VORPDZ128rrkz(2(Class<VR128X>) -> 0(Class<VR128X>))  [1.01;1.01]
		 Successful, latency: 1.01
	VORPDZ128rrkz(3(Class<VR128X>) -> 0(Class<VR128X>))  [1.01;1.01]
		 Successful, latency: 1.01

-----VORPDZ256rr-----
	VORPDZ256rr(1(Class<VR256X>) -> 0(Class<VR256X>))  [1.01;1.01]
		 Successful, latency: 1.01
	VORPDZ256rr(2(Class<VR256X>) -> 0(Class<VR256X>))  [1.01;1.01]
		 Successful, latency: 1.01

-----VORPDZ256rrk-----
	VORPDZ256rrk(1(Class<VR256X>) -> 0(Class<VR256X>))  [1.01;1.01]
		 Successful, latency: 1.01
	VORPDZ256rrk(3(Class<VR256X>) -> 0(Class<VR256X>))  [1;1]
		 Successful, latency: 1
	VORPDZ256rrk(4(Class<VR256X>) -> 0(Class<VR256X>))  [1;1]
		 Successful, latency: 1

-----VORPDZ256rrkz-----
	VORPDZ256rrkz(2(Class<VR256X>) -> 0(Class<VR256X>))  [1;1]
		 Successful, latency: 1
	VORPDZ256rrkz(3(Class<VR256X>) -> 0(Class<VR256X>))  [1;1]
		 Successful, latency: 1

-----VORPDZrr-----
	VORPDZrr(1(Class<VR512>) -> 0(Class<VR512>))  [1;1]
		 Successful, latency: 1
	VORPDZrr(2(Class<VR512>) -> 0(Class<VR512>))  [0.999;0.999]
		 Successful, latency: 0.999

-----VORPDZrrk-----
	VORPDZrrk(1(Class<VR512>) -> 0(Class<VR512>))  [1.01;1.01]
		 Successful, latency: 1.01
	VORPDZrrk(3(Class<VR512>) -> 0(Class<VR512>))  [1;1]
		 Successful, latency: 1
	VORPDZrrk(4(Class<VR512>) -> 0(Class<VR512>))  [0.999;0.999]
		 Successful, latency: 0.999

-----VORPDZrrkz-----
	VORPDZrrkz(2(Class<VR512>) -> 0(Class<VR512>))  [1.01;1.01]
		 Successful, latency: 1.01
	VORPDZrrkz(3(Class<VR512>) -> 0(Class<VR512>))  [1.01;1.01]
		 Successful, latency: 1.01

-----VORPDrr-----
	VORPDrr(1(Class<VR128>) -> 0(Class<VR128>))  [1.01;1.01]
		 Successful, latency: 1.01
	VORPDrr(2(Class<VR128>) -> 0(Class<VR128>))  [0.999;0.999]
		 Successful, latency: 0.999

-----VORPSYrr-----
	VORPSYrr(1(Class<VR256>) -> 0(Class<VR256>))  [1;1]
		 Successful, latency: 1
	VORPSYrr(2(Class<VR256>) -> 0(Class<VR256>))  [1.02;1.02]
		 Successful, latency: 1.02

-----VORPSZ128rr-----
	VORPSZ128rr(1(Class<VR128X>) -> 0(Class<VR128X>))  [1.01;1.01]
		 Successful, latency: 1.01
	VORPSZ128rr(2(Class<VR128X>) -> 0(Class<VR128X>))  [1.01;1.01]
		 Successful, latency: 1.01

-----VORPSZ128rrk-----
	VORPSZ128rrk(1(Class<VR128X>) -> 0(Class<VR128X>))  [1;1]
		 Successful, latency: 1
	VORPSZ128rrk(3(Class<VR128X>) -> 0(Class<VR128X>))  [1.01;1.01]
		 Successful, latency: 1.01
	VORPSZ128rrk(4(Class<VR128X>) -> 0(Class<VR128X>))  [1.01;1.01]
		 Successful, latency: 1.01

-----VORPSZ128rrkz-----
	VORPSZ128rrkz(2(Class<VR128X>) -> 0(Class<VR128X>))  [0.999;0.999]
		 Successful, latency: 0.999
	VORPSZ128rrkz(3(Class<VR128X>) -> 0(Class<VR128X>))  [1.02;1.02]
		 Successful, latency: 1.02

-----VORPSZ256rr-----
	VORPSZ256rr(1(Class<VR256X>) -> 0(Class<VR256X>))  [1.01;1.01]
		 Successful, latency: 1.01
	VORPSZ256rr(2(Class<VR256X>) -> 0(Class<VR256X>))  [1;1]
		 Successful, latency: 1

-----VORPSZ256rrk-----
	VORPSZ256rrk(1(Class<VR256X>) -> 0(Class<VR256X>))  [1.01;1.01]
		 Successful, latency: 1.01
	VORPSZ256rrk(3(Class<VR256X>) -> 0(Class<VR256X>))  [0.998;0.998]
		 Successful, latency: 0.998
	VORPSZ256rrk(4(Class<VR256X>) -> 0(Class<VR256X>))  [1.01;1.01]
		 Successful, latency: 1.01

-----VORPSZ256rrkz-----
	VORPSZ256rrkz(2(Class<VR256X>) -> 0(Class<VR256X>))  [1;1]
		 Successful, latency: 1
	VORPSZ256rrkz(3(Class<VR256X>) -> 0(Class<VR256X>))  [1;1]
		 Successful, latency: 1

-----VORPSZrr-----
	VORPSZrr(1(Class<VR512>) -> 0(Class<VR512>))  [1.01;1.01]
		 Successful, latency: 1.01
	VORPSZrr(2(Class<VR512>) -> 0(Class<VR512>))  [1;1]
		 Successful, latency: 1

-----VORPSZrrk-----
	VORPSZrrk(1(Class<VR512>) -> 0(Class<VR512>))  [1.01;1.01]
		 Successful, latency: 1.01
	VORPSZrrk(3(Class<VR512>) -> 0(Class<VR512>))  [1.01;1.01]
		 Successful, latency: 1.01
	VORPSZrrk(4(Class<VR512>) -> 0(Class<VR512>))  [1;1]
		 Successful, latency: 1

-----VORPSZrrkz-----
	VORPSZrrkz(2(Class<VR512>) -> 0(Class<VR512>))  [1.01;1.01]
		 Successful, latency: 1.01
	VORPSZrrkz(3(Class<VR512>) -> 0(Class<VR512>))  [1.01;1.01]
		 Successful, latency: 1.01

-----VORPSrr-----
	VORPSrr(1(Class<VR128>) -> 0(Class<VR128>))  [1.01;1.01]
		 Successful, latency: 1.01
	VORPSrr(2(Class<VR128>) -> 0(Class<VR128>))  [1.01;1.01]
		 Successful, latency: 1.01

-----VPABSBYrr-----
	VPABSBYrr(1(Class<VR256>) -> 0(Class<VR256>))  [2.02;2.02]
		 Successful, latency: 2.02

-----VPABSBZ128rr-----
	VPABSBZ128rr(1(Class<VR128X>) -> 0(Class<VR128X>))  [2.02;2.02]
		 Successful, latency: 2.02

-----VPABSBZ128rrk-----
	VPABSBZ128rrk(1(Class<VR128X>) -> 0(Class<VR128X>))  [2.01;2.01]
		 Successful, latency: 2.01
	VPABSBZ128rrk(3(Class<VR128X>) -> 0(Class<VR128X>))  [2.02;2.02]
		 Successful, latency: 2.02

-----VPABSBZ128rrkz-----
	VPABSBZ128rrkz(2(Class<VR128X>) -> 0(Class<VR128X>))  [2.01;2.01]
		 Successful, latency: 2.01

-----VPABSBZ256rr-----
	VPABSBZ256rr(1(Class<VR256X>) -> 0(Class<VR256X>))  [2.02;2.02]
		 Successful, latency: 2.02

-----VPABSBZ256rrk-----
	VPABSBZ256rrk(1(Class<VR256X>) -> 0(Class<VR256X>))  [2.03;2.03]
		 Successful, latency: 2.03
	VPABSBZ256rrk(3(Class<VR256X>) -> 0(Class<VR256X>))  [2.02;2.02]
		 Successful, latency: 2.02

-----VPABSBZ256rrkz-----
	VPABSBZ256rrkz(2(Class<VR256X>) -> 0(Class<VR256X>))  [2.03;2.03]
		 Successful, latency: 2.03

-----VPABSBZrr-----
	VPABSBZrr(1(Class<VR512>) -> 0(Class<VR512>))  [2.04;2.04]
		 Successful, latency: 2.04

-----VPABSBZrrk-----
	VPABSBZrrk(1(Class<VR512>) -> 0(Class<VR512>))  [2.02;2.02]
		 Successful, latency: 2.02
	VPABSBZrrk(3(Class<VR512>) -> 0(Class<VR512>))  [2.02;2.02]
		 Successful, latency: 2.02

-----VPABSBZrrkz-----
	VPABSBZrrkz(2(Class<VR512>) -> 0(Class<VR512>))  [2.05;2.05]
		 Successful, latency: 2.05

-----VPABSBrr-----
	VPABSBrr(1(Class<VR128>) -> 0(Class<VR128>))  [2.02;2.02]
		 Successful, latency: 2.02

-----VPABSDYrr-----
	VPABSDYrr(1(Class<VR256>) -> 0(Class<VR256>))  [2.02;2.02]
		 Successful, latency: 2.02

-----VPABSDZ128rr-----
	VPABSDZ128rr(1(Class<VR128X>) -> 0(Class<VR128X>))  [2.02;2.02]
		 Successful, latency: 2.02

-----VPABSDZ128rrk-----
	VPABSDZ128rrk(1(Class<VR128X>) -> 0(Class<VR128X>))  [2.02;2.02]
		 Successful, latency: 2.02
	VPABSDZ128rrk(3(Class<VR128X>) -> 0(Class<VR128X>))  [2.01;2.01]
		 Successful, latency: 2.01

-----VPABSDZ128rrkz-----
	VPABSDZ128rrkz(2(Class<VR128X>) -> 0(Class<VR128X>))  [2.02;2.02]
		 Successful, latency: 2.02

-----VPABSDZ256rr-----
	VPABSDZ256rr(1(Class<VR256X>) -> 0(Class<VR256X>))  [2.01;2.01]
		 Successful, latency: 2.01

-----VPABSDZ256rrk-----
	VPABSDZ256rrk(1(Class<VR256X>) -> 0(Class<VR256X>))  [1.99;1.99]
		 Successful, latency: 1.99
	VPABSDZ256rrk(3(Class<VR256X>) -> 0(Class<VR256X>))  [2.02;2.02]
		 Successful, latency: 2.02

-----VPABSDZ256rrkz-----
	VPABSDZ256rrkz(2(Class<VR256X>) -> 0(Class<VR256X>))  [2.02;2.02]
		 Successful, latency: 2.02

-----VPABSDZrr-----
	VPABSDZrr(1(Class<VR512>) -> 0(Class<VR512>))  [2.01;2.01]
		 Successful, latency: 2.01

-----VPABSDZrrk-----
	VPABSDZrrk(1(Class<VR512>) -> 0(Class<VR512>))  [2.02;2.02]
		 Successful, latency: 2.02
	VPABSDZrrk(3(Class<VR512>) -> 0(Class<VR512>))  [2.03;2.03]
		 Successful, latency: 2.03

-----VPABSDZrrkz-----
	VPABSDZrrkz(2(Class<VR512>) -> 0(Class<VR512>))  [2.02;2.02]
		 Successful, latency: 2.02

-----VPABSDrr-----
	VPABSDrr(1(Class<VR128>) -> 0(Class<VR128>))  [2.02;2.02]
		 Successful, latency: 2.02

-----VPABSQZ128rr-----
	VPABSQZ128rr(1(Class<VR128X>) -> 0(Class<VR128X>))  [2.02;2.02]
		 Successful, latency: 2.02

-----VPABSQZ128rrk-----
	VPABSQZ128rrk(1(Class<VR128X>) -> 0(Class<VR128X>))  [2.02;2.02]
		 Successful, latency: 2.02
	VPABSQZ128rrk(3(Class<VR128X>) -> 0(Class<VR128X>))  [2.03;2.03]
		 Successful, latency: 2.03

-----VPABSQZ128rrkz-----
	VPABSQZ128rrkz(2(Class<VR128X>) -> 0(Class<VR128X>))  [2.03;2.03]
		 Successful, latency: 2.03

-----VPABSQZ256rr-----
	VPABSQZ256rr(1(Class<VR256X>) -> 0(Class<VR256X>))  [2.02;2.02]
		 Successful, latency: 2.02

-----VPABSQZ256rrk-----
	VPABSQZ256rrk(1(Class<VR256X>) -> 0(Class<VR256X>))  [2.02;2.02]
		 Successful, latency: 2.02
	VPABSQZ256rrk(3(Class<VR256X>) -> 0(Class<VR256X>))  [2.01;2.01]
		 Successful, latency: 2.01

-----VPABSQZ256rrkz-----
	VPABSQZ256rrkz(2(Class<VR256X>) -> 0(Class<VR256X>))  [2.02;2.02]
		 Successful, latency: 2.02

-----VPABSQZrr-----
	VPABSQZrr(1(Class<VR512>) -> 0(Class<VR512>))  [2.01;2.01]
		 Successful, latency: 2.01

-----VPABSQZrrk-----
	VPABSQZrrk(1(Class<VR512>) -> 0(Class<VR512>))  [2.03;2.03]
		 Successful, latency: 2.03
	VPABSQZrrk(3(Class<VR512>) -> 0(Class<VR512>))  [2.01;2.01]
		 Successful, latency: 2.01

-----VPABSQZrrkz-----
	VPABSQZrrkz(2(Class<VR512>) -> 0(Class<VR512>))  [2.02;2.02]
		 Successful, latency: 2.02

-----VPABSWYrr-----
	VPABSWYrr(1(Class<VR256>) -> 0(Class<VR256>))  [2.03;2.03]
		 Successful, latency: 2.03

-----VPABSWZ128rr-----
	VPABSWZ128rr(1(Class<VR128X>) -> 0(Class<VR128X>))  [2.02;2.02]
		 Successful, latency: 2.02

-----VPABSWZ128rrk-----
	VPABSWZ128rrk(1(Class<VR128X>) -> 0(Class<VR128X>))  [2.02;2.02]
		 Successful, latency: 2.02
	VPABSWZ128rrk(3(Class<VR128X>) -> 0(Class<VR128X>))  [2.02;2.02]
		 Successful, latency: 2.02

-----VPABSWZ128rrkz-----
	VPABSWZ128rrkz(2(Class<VR128X>) -> 0(Class<VR128X>))  [2.02;2.02]
		 Successful, latency: 2.02

-----VPABSWZ256rr-----
	VPABSWZ256rr(1(Class<VR256X>) -> 0(Class<VR256X>))  [2.02;2.02]
		 Successful, latency: 2.02

-----VPABSWZ256rrk-----
	VPABSWZ256rrk(1(Class<VR256X>) -> 0(Class<VR256X>))  [2.01;2.01]
		 Successful, latency: 2.01
	VPABSWZ256rrk(3(Class<VR256X>) -> 0(Class<VR256X>))  [2.02;2.02]
		 Successful, latency: 2.02

-----VPABSWZ256rrkz-----
	VPABSWZ256rrkz(2(Class<VR256X>) -> 0(Class<VR256X>))  [2.02;2.02]
		 Successful, latency: 2.02

-----VPABSWZrr-----
	VPABSWZrr(1(Class<VR512>) -> 0(Class<VR512>))  [2.02;2.02]
		 Successful, latency: 2.02

-----VPABSWZrrk-----
	VPABSWZrrk(1(Class<VR512>) -> 0(Class<VR512>))  [2.02;2.02]
		 Successful, latency: 2.02
	VPABSWZrrk(3(Class<VR512>) -> 0(Class<VR512>))  [2.02;2.02]
		 Successful, latency: 2.02

-----VPABSWZrrkz-----
	VPABSWZrrkz(2(Class<VR512>) -> 0(Class<VR512>))  [2.02;2.02]
		 Successful, latency: 2.02

-----VPABSWrr-----
	VPABSWrr(1(Class<VR128>) -> 0(Class<VR128>))  [2.01;2.01]
		 Successful, latency: 2.01

-----VPACKSSDWYrr-----
	VPACKSSDWYrr(1(Class<VR256>) -> 0(Class<VR256>))  [2.03;2.03]
		 Successful, latency: 2.03
	VPACKSSDWYrr(2(Class<VR256>) -> 0(Class<VR256>))  [2.01;2.01]
		 Successful, latency: 2.01

-----VPACKSSDWZ128rr-----
	VPACKSSDWZ128rr(1(Class<VR128X>) -> 0(Class<VR128X>))  [2.01;2.01]
		 Successful, latency: 2.01
	VPACKSSDWZ128rr(2(Class<VR128X>) -> 0(Class<VR128X>))  [2.01;2.01]
		 Successful, latency: 2.01

-----VPACKSSDWZ128rrk-----
	VPACKSSDWZ128rrk(1(Class<VR128X>) -> 0(Class<VR128X>))  [2.01;2.01]
		 Successful, latency: 2.01
	VPACKSSDWZ128rrk(3(Class<VR128X>) -> 0(Class<VR128X>))  [2.01;2.01]
		 Successful, latency: 2.01
	VPACKSSDWZ128rrk(4(Class<VR128X>) -> 0(Class<VR128X>))  [2.01;2.01]
		 Successful, latency: 2.01

-----VPACKSSDWZ128rrkz-----
	VPACKSSDWZ128rrkz(2(Class<VR128X>) -> 0(Class<VR128X>))  [2.01;2.01]
		 Successful, latency: 2.01
	VPACKSSDWZ128rrkz(3(Class<VR128X>) -> 0(Class<VR128X>))  [2.02;2.02]
		 Successful, latency: 2.02

-----VPACKSSDWZ256rr-----
	VPACKSSDWZ256rr(1(Class<VR256X>) -> 0(Class<VR256X>))  [2.02;2.02]
		 Successful, latency: 2.02
	VPACKSSDWZ256rr(2(Class<VR256X>) -> 0(Class<VR256X>))  [2.02;2.02]
		 Successful, latency: 2.02

-----VPACKSSDWZ256rrk-----
	VPACKSSDWZ256rrk(1(Class<VR256X>) -> 0(Class<VR256X>))  [2.01;2.01]
		 Successful, latency: 2.01
	VPACKSSDWZ256rrk(3(Class<VR256X>) -> 0(Class<VR256X>))  [2.02;2.02]
		 Successful, latency: 2.02
	VPACKSSDWZ256rrk(4(Class<VR256X>) -> 0(Class<VR256X>))  [2.01;2.01]
		 Successful, latency: 2.01

-----VPACKSSDWZ256rrkz-----
	VPACKSSDWZ256rrkz(2(Class<VR256X>) -> 0(Class<VR256X>))  [2;2]
		 Successful, latency: 2
	VPACKSSDWZ256rrkz(3(Class<VR256X>) -> 0(Class<VR256X>))  [2.02;2.02]
		 Successful, latency: 2.02

-----VPACKSSDWZrr-----
	VPACKSSDWZrr(1(Class<VR512>) -> 0(Class<VR512>))  [2.01;2.01]
		 Successful, latency: 2.01
	VPACKSSDWZrr(2(Class<VR512>) -> 0(Class<VR512>))  [2.02;2.02]
		 Successful, latency: 2.02

-----VPACKSSDWZrrk-----
	VPACKSSDWZrrk(1(Class<VR512>) -> 0(Class<VR512>))  [2.02;2.02]
		 Successful, latency: 2.02
	VPACKSSDWZrrk(3(Class<VR512>) -> 0(Class<VR512>))  [2.01;2.01]
		 Successful, latency: 2.01
	VPACKSSDWZrrk(4(Class<VR512>) -> 0(Class<VR512>))  [2.01;2.01]
		 Successful, latency: 2.01

-----VPACKSSDWZrrkz-----
	VPACKSSDWZrrkz(2(Class<VR512>) -> 0(Class<VR512>))  [2.02;2.02]
		 Successful, latency: 2.02
	VPACKSSDWZrrkz(3(Class<VR512>) -> 0(Class<VR512>))  [2.02;2.02]
		 Successful, latency: 2.02

-----VPACKSSDWrr-----
	VPACKSSDWrr(1(Class<VR128>) -> 0(Class<VR128>))  [2.02;2.02]
		 Successful, latency: 2.02
	VPACKSSDWrr(2(Class<VR128>) -> 0(Class<VR128>))  [2.03;2.03]
		 Successful, latency: 2.03

-----VPACKSSWBYrr-----
	VPACKSSWBYrr(1(Class<VR256>) -> 0(Class<VR256>))  [2.01;2.01]
		 Successful, latency: 2.01
	VPACKSSWBYrr(2(Class<VR256>) -> 0(Class<VR256>))  [2.01;2.01]
		 Successful, latency: 2.01

-----VPACKSSWBZ128rr-----
	VPACKSSWBZ128rr(1(Class<VR128X>) -> 0(Class<VR128X>))  [2.02;2.02]
		 Successful, latency: 2.02
	VPACKSSWBZ128rr(2(Class<VR128X>) -> 0(Class<VR128X>))  [2.02;2.02]
		 Successful, latency: 2.02

-----VPACKSSWBZ128rrk-----
	VPACKSSWBZ128rrk(1(Class<VR128X>) -> 0(Class<VR128X>))  [2.01;2.01]
		 Successful, latency: 2.01
	VPACKSSWBZ128rrk(3(Class<VR128X>) -> 0(Class<VR128X>))  [2.02;2.02]
		 Successful, latency: 2.02
	VPACKSSWBZ128rrk(4(Class<VR128X>) -> 0(Class<VR128X>))  [2.03;2.03]
		 Successful, latency: 2.03

-----VPACKSSWBZ128rrkz-----
	VPACKSSWBZ128rrkz(2(Class<VR128X>) -> 0(Class<VR128X>))  [2.01;2.01]
		 Successful, latency: 2.01
	VPACKSSWBZ128rrkz(3(Class<VR128X>) -> 0(Class<VR128X>))  [2.03;2.03]
		 Successful, latency: 2.03

-----VPACKSSWBZ256rr-----
	VPACKSSWBZ256rr(1(Class<VR256X>) -> 0(Class<VR256X>))  [2.02;2.02]
		 Successful, latency: 2.02
	VPACKSSWBZ256rr(2(Class<VR256X>) -> 0(Class<VR256X>))  [2.01;2.01]
		 Successful, latency: 2.01

-----VPACKSSWBZ256rrk-----
	VPACKSSWBZ256rrk(1(Class<VR256X>) -> 0(Class<VR256X>))  [2.01;2.01]
		 Successful, latency: 2.01
	VPACKSSWBZ256rrk(3(Class<VR256X>) -> 0(Class<VR256X>))  [2.02;2.02]
		 Successful, latency: 2.02
	VPACKSSWBZ256rrk(4(Class<VR256X>) -> 0(Class<VR256X>))  [2.02;2.02]
		 Successful, latency: 2.02

-----VPACKSSWBZ256rrkz-----
	VPACKSSWBZ256rrkz(2(Class<VR256X>) -> 0(Class<VR256X>))  [2.01;2.01]
		 Successful, latency: 2.01
	VPACKSSWBZ256rrkz(3(Class<VR256X>) -> 0(Class<VR256X>))  [2.02;2.02]
		 Successful, latency: 2.02

-----VPACKSSWBZrr-----
	VPACKSSWBZrr(1(Class<VR512>) -> 0(Class<VR512>))  [2.02;2.02]
		 Successful, latency: 2.02
	VPACKSSWBZrr(2(Class<VR512>) -> 0(Class<VR512>))  [2.01;2.01]
		 Successful, latency: 2.01

-----VPACKSSWBZrrk-----
	VPACKSSWBZrrk(1(Class<VR512>) -> 0(Class<VR512>))  [2.01;2.01]
		 Successful, latency: 2.01
	VPACKSSWBZrrk(3(Class<VR512>) -> 0(Class<VR512>))  [2.01;2.01]
		 Successful, latency: 2.01
	VPACKSSWBZrrk(4(Class<VR512>) -> 0(Class<VR512>))  [2.03;2.03]
		 Successful, latency: 2.03

-----VPACKSSWBZrrkz-----
	VPACKSSWBZrrkz(2(Class<VR512>) -> 0(Class<VR512>))  [2;2]
		 Successful, latency: 2
	VPACKSSWBZrrkz(3(Class<VR512>) -> 0(Class<VR512>))  [2.02;2.02]
		 Successful, latency: 2.02

-----VPACKSSWBrr-----
	VPACKSSWBrr(1(Class<VR128>) -> 0(Class<VR128>))  [2.02;2.02]
		 Successful, latency: 2.02
	VPACKSSWBrr(2(Class<VR128>) -> 0(Class<VR128>))  [2.01;2.01]
		 Successful, latency: 2.01

-----VPACKUSDWYrr-----
	VPACKUSDWYrr(1(Class<VR256>) -> 0(Class<VR256>))  [2.02;2.02]
		 Successful, latency: 2.02
	VPACKUSDWYrr(2(Class<VR256>) -> 0(Class<VR256>))  [2.01;2.01]
		 Successful, latency: 2.01

-----VPACKUSDWZ128rr-----
	VPACKUSDWZ128rr(1(Class<VR128X>) -> 0(Class<VR128X>))  [2.02;2.02]
		 Successful, latency: 2.02
	VPACKUSDWZ128rr(2(Class<VR128X>) -> 0(Class<VR128X>))  [2.02;2.02]
		 Successful, latency: 2.02

-----VPACKUSDWZ128rrk-----
	VPACKUSDWZ128rrk(1(Class<VR128X>) -> 0(Class<VR128X>))  [2.01;2.01]
		 Successful, latency: 2.01
	VPACKUSDWZ128rrk(3(Class<VR128X>) -> 0(Class<VR128X>))  [2.02;2.02]
		 Successful, latency: 2.02
	VPACKUSDWZ128rrk(4(Class<VR128X>) -> 0(Class<VR128X>))  [2.02;2.02]
		 Successful, latency: 2.02

-----VPACKUSDWZ128rrkz-----
	VPACKUSDWZ128rrkz(2(Class<VR128X>) -> 0(Class<VR128X>))  [2.02;2.02]
		 Successful, latency: 2.02
	VPACKUSDWZ128rrkz(3(Class<VR128X>) -> 0(Class<VR128X>))  [2.01;2.01]
		 Successful, latency: 2.01

-----VPACKUSDWZ256rr-----
	VPACKUSDWZ256rr(1(Class<VR256X>) -> 0(Class<VR256X>))  [2.02;2.02]
		 Successful, latency: 2.02
	VPACKUSDWZ256rr(2(Class<VR256X>) -> 0(Class<VR256X>))  [2.01;2.01]
		 Successful, latency: 2.01

-----VPACKUSDWZ256rrk-----
	VPACKUSDWZ256rrk(1(Class<VR256X>) -> 0(Class<VR256X>))  [2.02;2.02]
		 Successful, latency: 2.02
	VPACKUSDWZ256rrk(3(Class<VR256X>) -> 0(Class<VR256X>))  [2.03;2.03]
		 Successful, latency: 2.03
	VPACKUSDWZ256rrk(4(Class<VR256X>) -> 0(Class<VR256X>))  [2.02;2.02]
		 Successful, latency: 2.02

-----VPACKUSDWZ256rrkz-----
	VPACKUSDWZ256rrkz(2(Class<VR256X>) -> 0(Class<VR256X>))  [2.03;2.03]
		 Successful, latency: 2.03
	VPACKUSDWZ256rrkz(3(Class<VR256X>) -> 0(Class<VR256X>))  [2.01;2.01]
		 Successful, latency: 2.01

-----VPACKUSDWZrr-----
	VPACKUSDWZrr(1(Class<VR512>) -> 0(Class<VR512>))  [2.03;2.03]
		 Successful, latency: 2.03
	VPACKUSDWZrr(2(Class<VR512>) -> 0(Class<VR512>))  [2.02;2.02]
		 Successful, latency: 2.02

-----VPACKUSDWZrrk-----
	VPACKUSDWZrrk(1(Class<VR512>) -> 0(Class<VR512>))  [2.01;2.01]
		 Successful, latency: 2.01
	VPACKUSDWZrrk(3(Class<VR512>) -> 0(Class<VR512>))  [2.01;2.01]
		 Successful, latency: 2.01
	VPACKUSDWZrrk(4(Class<VR512>) -> 0(Class<VR512>))  [2.01;2.01]
		 Successful, latency: 2.01

-----VPACKUSDWZrrkz-----
	VPACKUSDWZrrkz(2(Class<VR512>) -> 0(Class<VR512>))  [2;2]
		 Successful, latency: 2
	VPACKUSDWZrrkz(3(Class<VR512>) -> 0(Class<VR512>))  [2.01;2.01]
		 Successful, latency: 2.01

-----VPACKUSDWrr-----
	VPACKUSDWrr(1(Class<VR128>) -> 0(Class<VR128>))  [2.02;2.02]
		 Successful, latency: 2.02
	VPACKUSDWrr(2(Class<VR128>) -> 0(Class<VR128>))  [2.02;2.02]
		 Successful, latency: 2.02

-----VPACKUSWBYrr-----
	VPACKUSWBYrr(1(Class<VR256>) -> 0(Class<VR256>))  [2.01;2.01]
		 Successful, latency: 2.01
	VPACKUSWBYrr(2(Class<VR256>) -> 0(Class<VR256>))  [2.02;2.02]
		 Successful, latency: 2.02

-----VPACKUSWBZ128rr-----
	VPACKUSWBZ128rr(1(Class<VR128X>) -> 0(Class<VR128X>))  [2.02;2.02]
		 Successful, latency: 2.02
	VPACKUSWBZ128rr(2(Class<VR128X>) -> 0(Class<VR128X>))  [2.01;2.01]
		 Successful, latency: 2.01

-----VPACKUSWBZ128rrk-----
	VPACKUSWBZ128rrk(1(Class<VR128X>) -> 0(Class<VR128X>))  [2.02;2.02]
		 Successful, latency: 2.02
	VPACKUSWBZ128rrk(3(Class<VR128X>) -> 0(Class<VR128X>))  [2.03;2.03]
		 Successful, latency: 2.03
	VPACKUSWBZ128rrk(4(Class<VR128X>) -> 0(Class<VR128X>))  [2.02;2.02]
		 Successful, latency: 2.02

-----VPACKUSWBZ128rrkz-----
	VPACKUSWBZ128rrkz(2(Class<VR128X>) -> 0(Class<VR128X>))  [2.01;2.01]
		 Successful, latency: 2.01
	VPACKUSWBZ128rrkz(3(Class<VR128X>) -> 0(Class<VR128X>))  [2.03;2.03]
		 Successful, latency: 2.03

-----VPACKUSWBZ256rr-----
	VPACKUSWBZ256rr(1(Class<VR256X>) -> 0(Class<VR256X>))  [2.02;2.02]
		 Successful, latency: 2.02
	VPACKUSWBZ256rr(2(Class<VR256X>) -> 0(Class<VR256X>))  [2.01;2.01]
		 Successful, latency: 2.01

-----VPACKUSWBZ256rrk-----
	VPACKUSWBZ256rrk(1(Class<VR256X>) -> 0(Class<VR256X>))  [2.05;2.05]
		 Successful, latency: 2.05
	VPACKUSWBZ256rrk(3(Class<VR256X>) -> 0(Class<VR256X>))  [2.02;2.02]
		 Successful, latency: 2.02
	VPACKUSWBZ256rrk(4(Class<VR256X>) -> 0(Class<VR256X>))  [2.01;2.01]
		 Successful, latency: 2.01

-----VPACKUSWBZ256rrkz-----
	VPACKUSWBZ256rrkz(2(Class<VR256X>) -> 0(Class<VR256X>))  [2.03;2.03]
		 Successful, latency: 2.03
	VPACKUSWBZ256rrkz(3(Class<VR256X>) -> 0(Class<VR256X>))  [2.02;2.02]
		 Successful, latency: 2.02

-----VPACKUSWBZrr-----
	VPACKUSWBZrr(1(Class<VR512>) -> 0(Class<VR512>))  [2.02;2.02]
		 Successful, latency: 2.02
	VPACKUSWBZrr(2(Class<VR512>) -> 0(Class<VR512>))  [2.01;2.01]
		 Successful, latency: 2.01

-----VPACKUSWBZrrk-----
	VPACKUSWBZrrk(1(Class<VR512>) -> 0(Class<VR512>))  [2.01;2.01]
		 Successful, latency: 2.01
	VPACKUSWBZrrk(3(Class<VR512>) -> 0(Class<VR512>))  [2.03;2.03]
		 Successful, latency: 2.03
	VPACKUSWBZrrk(4(Class<VR512>) -> 0(Class<VR512>))  [2.02;2.02]
		 Successful, latency: 2.02

-----VPACKUSWBZrrkz-----
	VPACKUSWBZrrkz(2(Class<VR512>) -> 0(Class<VR512>))  [2.01;2.01]
		 Successful, latency: 2.01
	VPACKUSWBZrrkz(3(Class<VR512>) -> 0(Class<VR512>))  [2.01;2.01]
		 Successful, latency: 2.01

-----VPACKUSWBrr-----
	VPACKUSWBrr(1(Class<VR128>) -> 0(Class<VR128>))  [2.03;2.03]
		 Successful, latency: 2.03
	VPACKUSWBrr(2(Class<VR128>) -> 0(Class<VR128>))  [2;2]
		 Successful, latency: 2

-----VPADDBYrr-----
	VPADDBYrr(1(Class<VR256>) -> 0(Class<VR256>))  [1.01;1.01]
		 Successful, latency: 1.01
	VPADDBYrr(2(Class<VR256>) -> 0(Class<VR256>))  [0.999;0.999]
		 Successful, latency: 0.999

-----VPADDBZ128rr-----
	VPADDBZ128rr(1(Class<VR128X>) -> 0(Class<VR128X>))  [1;1]
		 Successful, latency: 1
	VPADDBZ128rr(2(Class<VR128X>) -> 0(Class<VR128X>))  [1.02;1.02]
		 Successful, latency: 1.02

-----VPADDBZ128rrk-----
	VPADDBZ128rrk(1(Class<VR128X>) -> 0(Class<VR128X>))  [1.01;1.01]
		 Successful, latency: 1.01
	VPADDBZ128rrk(3(Class<VR128X>) -> 0(Class<VR128X>))  [1.01;1.01]
		 Successful, latency: 1.01
	VPADDBZ128rrk(4(Class<VR128X>) -> 0(Class<VR128X>))  [1.01;1.01]
		 Successful, latency: 1.01

-----VPADDBZ128rrkz-----
	VPADDBZ128rrkz(2(Class<VR128X>) -> 0(Class<VR128X>))  [1.01;1.01]
		 Successful, latency: 1.01
	VPADDBZ128rrkz(3(Class<VR128X>) -> 0(Class<VR128X>))  [1;1]
		 Successful, latency: 1

-----VPADDBZ256rr-----
	VPADDBZ256rr(1(Class<VR256X>) -> 0(Class<VR256X>))  [1.01;1.01]
		 Successful, latency: 1.01
	VPADDBZ256rr(2(Class<VR256X>) -> 0(Class<VR256X>))  [1.02;1.02]
		 Successful, latency: 1.02

-----VPADDBZ256rrk-----
	VPADDBZ256rrk(1(Class<VR256X>) -> 0(Class<VR256X>))  [1.01;1.01]
		 Successful, latency: 1.01
	VPADDBZ256rrk(3(Class<VR256X>) -> 0(Class<VR256X>))  [1.01;1.01]
		 Successful, latency: 1.01
	VPADDBZ256rrk(4(Class<VR256X>) -> 0(Class<VR256X>))  [1.01;1.01]
		 Successful, latency: 1.01

-----VPADDBZ256rrkz-----
	VPADDBZ256rrkz(2(Class<VR256X>) -> 0(Class<VR256X>))  [1;1]
		 Successful, latency: 1
	VPADDBZ256rrkz(3(Class<VR256X>) -> 0(Class<VR256X>))  [0.998;0.998]
		 Successful, latency: 0.998

-----VPADDBZrr-----
	VPADDBZrr(1(Class<VR512>) -> 0(Class<VR512>))  [1;1]
		 Successful, latency: 1
	VPADDBZrr(2(Class<VR512>) -> 0(Class<VR512>))  [1.01;1.01]
		 Successful, latency: 1.01

-----VPADDBZrrk-----
	VPADDBZrrk(1(Class<VR512>) -> 0(Class<VR512>))  [1.01;1.01]
		 Successful, latency: 1.01
	VPADDBZrrk(3(Class<VR512>) -> 0(Class<VR512>))  [1.01;1.01]
		 Successful, latency: 1.01
	VPADDBZrrk(4(Class<VR512>) -> 0(Class<VR512>))  [1.01;1.01]
		 Successful, latency: 1.01

-----VPADDBZrrkz-----
	VPADDBZrrkz(2(Class<VR512>) -> 0(Class<VR512>))  [0.999;0.999]
		 Successful, latency: 0.999
	VPADDBZrrkz(3(Class<VR512>) -> 0(Class<VR512>))  [1.03;1.03]
		 Successful, latency: 1.03

-----VPADDBrr-----
	VPADDBrr(1(Class<VR128>) -> 0(Class<VR128>))  [1.02;1.02]
		 Successful, latency: 1.02
	VPADDBrr(2(Class<VR128>) -> 0(Class<VR128>))  [0.999;0.999]
		 Successful, latency: 0.999

-----VPADDDYrr-----
	VPADDDYrr(1(Class<VR256>) -> 0(Class<VR256>))  [1.01;1.01]
		 Successful, latency: 1.01
	VPADDDYrr(2(Class<VR256>) -> 0(Class<VR256>))  [1.02;1.02]
		 Successful, latency: 1.02

-----VPADDDZ128rr-----
	VPADDDZ128rr(1(Class<VR128X>) -> 0(Class<VR128X>))  [1.01;1.01]
		 Successful, latency: 1.01
	VPADDDZ128rr(2(Class<VR128X>) -> 0(Class<VR128X>))  [1.01;1.01]
		 Successful, latency: 1.01

-----VPADDDZ128rrk-----
	VPADDDZ128rrk(1(Class<VR128X>) -> 0(Class<VR128X>))  [1.01;1.01]
		 Successful, latency: 1.01
	VPADDDZ128rrk(3(Class<VR128X>) -> 0(Class<VR128X>))  [1.01;1.01]
		 Successful, latency: 1.01
	VPADDDZ128rrk(4(Class<VR128X>) -> 0(Class<VR128X>))  [1.01;1.01]
		 Successful, latency: 1.01

-----VPADDDZ128rrkz-----
	VPADDDZ128rrkz(2(Class<VR128X>) -> 0(Class<VR128X>))  [1.01;1.01]
		 Successful, latency: 1.01
	VPADDDZ128rrkz(3(Class<VR128X>) -> 0(Class<VR128X>))  [1.01;1.01]
		 Successful, latency: 1.01

-----VPADDDZ256rr-----
	VPADDDZ256rr(1(Class<VR256X>) -> 0(Class<VR256X>))  [1.01;1.01]
		 Successful, latency: 1.01
	VPADDDZ256rr(2(Class<VR256X>) -> 0(Class<VR256X>))  [1.02;1.02]
		 Successful, latency: 1.02

-----VPADDDZ256rrk-----
	VPADDDZ256rrk(1(Class<VR256X>) -> 0(Class<VR256X>))  [1;1]
		 Successful, latency: 1
	VPADDDZ256rrk(3(Class<VR256X>) -> 0(Class<VR256X>))  [1.01;1.01]
		 Successful, latency: 1.01
	VPADDDZ256rrk(4(Class<VR256X>) -> 0(Class<VR256X>))  [1.01;1.01]
		 Successful, latency: 1.01

-----VPADDDZ256rrkz-----
	VPADDDZ256rrkz(2(Class<VR256X>) -> 0(Class<VR256X>))  [1.01;1.01]
		 Successful, latency: 1.01
	VPADDDZ256rrkz(3(Class<VR256X>) -> 0(Class<VR256X>))  [1.02;1.02]
		 Successful, latency: 1.02

-----VPADDDZrr-----
	VPADDDZrr(1(Class<VR512>) -> 0(Class<VR512>))  [1.01;1.01]
		 Successful, latency: 1.01
	VPADDDZrr(2(Class<VR512>) -> 0(Class<VR512>))  [1.01;1.01]
		 Successful, latency: 1.01

-----VPADDDZrrk-----
	VPADDDZrrk(1(Class<VR512>) -> 0(Class<VR512>))  [1;1]
		 Successful, latency: 1
	VPADDDZrrk(3(Class<VR512>) -> 0(Class<VR512>))  [1;1]
		 Successful, latency: 1
	VPADDDZrrk(4(Class<VR512>) -> 0(Class<VR512>))  [1.01;1.01]
		 Successful, latency: 1.01

-----VPADDDZrrkz-----
	VPADDDZrrkz(2(Class<VR512>) -> 0(Class<VR512>))  [1.02;1.02]
		 Successful, latency: 1.02
	VPADDDZrrkz(3(Class<VR512>) -> 0(Class<VR512>))  [1;1]
		 Successful, latency: 1

-----VPADDDrr-----
	VPADDDrr(1(Class<VR128>) -> 0(Class<VR128>))  [1.01;1.01]
		 Successful, latency: 1.01
	VPADDDrr(2(Class<VR128>) -> 0(Class<VR128>))  [1.01;1.01]
		 Successful, latency: 1.01

-----VPADDQYrr-----
	VPADDQYrr(1(Class<VR256>) -> 0(Class<VR256>))  [1;1]
		 Successful, latency: 1
	VPADDQYrr(2(Class<VR256>) -> 0(Class<VR256>))  [1.02;1.02]
		 Successful, latency: 1.02

-----VPADDQZ128rr-----
	VPADDQZ128rr(1(Class<VR128X>) -> 0(Class<VR128X>))  [1.01;1.01]
		 Successful, latency: 1.01
	VPADDQZ128rr(2(Class<VR128X>) -> 0(Class<VR128X>))  [1.01;1.01]
		 Successful, latency: 1.01

-----VPADDQZ128rrk-----
	VPADDQZ128rrk(1(Class<VR128X>) -> 0(Class<VR128X>))  [1;1]
		 Successful, latency: 1
	VPADDQZ128rrk(3(Class<VR128X>) -> 0(Class<VR128X>))  [0.998;0.998]
		 Successful, latency: 0.998
	VPADDQZ128rrk(4(Class<VR128X>) -> 0(Class<VR128X>))  [1.01;1.01]
		 Successful, latency: 1.01

-----VPADDQZ128rrkz-----
	VPADDQZ128rrkz(2(Class<VR128X>) -> 0(Class<VR128X>))  [1;1]
		 Successful, latency: 1
	VPADDQZ128rrkz(3(Class<VR128X>) -> 0(Class<VR128X>))  [1.01;1.01]
		 Successful, latency: 1.01

-----VPADDQZ256rr-----
	VPADDQZ256rr(1(Class<VR256X>) -> 0(Class<VR256X>))  [1.01;1.01]
		 Successful, latency: 1.01
	VPADDQZ256rr(2(Class<VR256X>) -> 0(Class<VR256X>))  [1.01;1.01]
		 Successful, latency: 1.01

-----VPADDQZ256rrk-----
	VPADDQZ256rrk(1(Class<VR256X>) -> 0(Class<VR256X>))  [1.01;1.01]
		 Successful, latency: 1.01
	VPADDQZ256rrk(3(Class<VR256X>) -> 0(Class<VR256X>))  [1.01;1.01]
		 Successful, latency: 1.01
	VPADDQZ256rrk(4(Class<VR256X>) -> 0(Class<VR256X>))  [1.01;1.01]
		 Successful, latency: 1.01

-----VPADDQZ256rrkz-----
	VPADDQZ256rrkz(2(Class<VR256X>) -> 0(Class<VR256X>))  [1;1]
		 Successful, latency: 1
	VPADDQZ256rrkz(3(Class<VR256X>) -> 0(Class<VR256X>))  [1.01;1.01]
		 Successful, latency: 1.01

-----VPADDQZrr-----
	VPADDQZrr(1(Class<VR512>) -> 0(Class<VR512>))  [1;1]
		 Successful, latency: 1
	VPADDQZrr(2(Class<VR512>) -> 0(Class<VR512>))  [1.02;1.02]
		 Successful, latency: 1.02

-----VPADDQZrrk-----
	VPADDQZrrk(1(Class<VR512>) -> 0(Class<VR512>))  [1;1]
		 Successful, latency: 1
	VPADDQZrrk(3(Class<VR512>) -> 0(Class<VR512>))  [1.01;1.01]
		 Successful, latency: 1.01
	VPADDQZrrk(4(Class<VR512>) -> 0(Class<VR512>))  [1.01;1.01]
		 Successful, latency: 1.01

-----VPADDQZrrkz-----
	VPADDQZrrkz(2(Class<VR512>) -> 0(Class<VR512>))  [1.01;1.01]
		 Successful, latency: 1.01
	VPADDQZrrkz(3(Class<VR512>) -> 0(Class<VR512>))  [1;1]
		 Successful, latency: 1

-----VPADDQrr-----
	VPADDQrr(1(Class<VR128>) -> 0(Class<VR128>))  [0.999;0.999]
		 Successful, latency: 0.999
	VPADDQrr(2(Class<VR128>) -> 0(Class<VR128>))  [1.01;1.01]
		 Successful, latency: 1.01

-----VPADDSBYrr-----
	VPADDSBYrr(1(Class<VR256>) -> 0(Class<VR256>))  [2.02;2.02]
		 Successful, latency: 2.02
	VPADDSBYrr(2(Class<VR256>) -> 0(Class<VR256>))  [2.02;2.02]
		 Successful, latency: 2.02

-----VPADDSBZ128rr-----
	VPADDSBZ128rr(1(Class<VR128X>) -> 0(Class<VR128X>))  [2.02;2.02]
		 Successful, latency: 2.02
	VPADDSBZ128rr(2(Class<VR128X>) -> 0(Class<VR128X>))  [2.02;2.02]
		 Successful, latency: 2.02

-----VPADDSBZ128rrk-----
	VPADDSBZ128rrk(1(Class<VR128X>) -> 0(Class<VR128X>))  [2.04;2.04]
		 Successful, latency: 2.04
	VPADDSBZ128rrk(3(Class<VR128X>) -> 0(Class<VR128X>))  [2.02;2.02]
		 Successful, latency: 2.02
	VPADDSBZ128rrk(4(Class<VR128X>) -> 0(Class<VR128X>))  [2.01;2.01]
		 Successful, latency: 2.01

-----VPADDSBZ128rrkz-----
	VPADDSBZ128rrkz(2(Class<VR128X>) -> 0(Class<VR128X>))  [2.01;2.01]
		 Successful, latency: 2.01
	VPADDSBZ128rrkz(3(Class<VR128X>) -> 0(Class<VR128X>))  [2.01;2.01]
		 Successful, latency: 2.01

-----VPADDSBZ256rr-----
	VPADDSBZ256rr(1(Class<VR256X>) -> 0(Class<VR256X>))  [2.02;2.02]
		 Successful, latency: 2.02
	VPADDSBZ256rr(2(Class<VR256X>) -> 0(Class<VR256X>))  [2.03;2.03]
		 Successful, latency: 2.03

-----VPADDSBZ256rrk-----
	VPADDSBZ256rrk(1(Class<VR256X>) -> 0(Class<VR256X>))  [2.01;2.01]
		 Successful, latency: 2.01
	VPADDSBZ256rrk(3(Class<VR256X>) -> 0(Class<VR256X>))  [2.02;2.02]
		 Successful, latency: 2.02
	VPADDSBZ256rrk(4(Class<VR256X>) -> 0(Class<VR256X>))  [2.01;2.01]
		 Successful, latency: 2.01

-----VPADDSBZ256rrkz-----
	VPADDSBZ256rrkz(2(Class<VR256X>) -> 0(Class<VR256X>))  [2.02;2.02]
		 Successful, latency: 2.02
	VPADDSBZ256rrkz(3(Class<VR256X>) -> 0(Class<VR256X>))  [2.01;2.01]
		 Successful, latency: 2.01

-----VPADDSBZrr-----
	VPADDSBZrr(1(Class<VR512>) -> 0(Class<VR512>))  [2.03;2.03]
		 Successful, latency: 2.03
	VPADDSBZrr(2(Class<VR512>) -> 0(Class<VR512>))  [2.01;2.01]
		 Successful, latency: 2.01

-----VPADDSBZrrk-----
	VPADDSBZrrk(1(Class<VR512>) -> 0(Class<VR512>))  [2.03;2.03]
		 Successful, latency: 2.03
	VPADDSBZrrk(3(Class<VR512>) -> 0(Class<VR512>))  [2.02;2.02]
		 Successful, latency: 2.02
	VPADDSBZrrk(4(Class<VR512>) -> 0(Class<VR512>))  [2.03;2.03]
		 Successful, latency: 2.03

-----VPADDSBZrrkz-----
	VPADDSBZrrkz(2(Class<VR512>) -> 0(Class<VR512>))  [2.03;2.03]
		 Successful, latency: 2.03
	VPADDSBZrrkz(3(Class<VR512>) -> 0(Class<VR512>))  [2.01;2.01]
		 Successful, latency: 2.01

-----VPADDSBrr-----
	VPADDSBrr(1(Class<VR128>) -> 0(Class<VR128>))  [2.02;2.02]
		 Successful, latency: 2.02
	VPADDSBrr(2(Class<VR128>) -> 0(Class<VR128>))  [2.04;2.04]
		 Successful, latency: 2.04

-----VPADDSWYrr-----
	VPADDSWYrr(1(Class<VR256>) -> 0(Class<VR256>))  [2.02;2.02]
		 Successful, latency: 2.02
	VPADDSWYrr(2(Class<VR256>) -> 0(Class<VR256>))  [2.01;2.01]
		 Successful, latency: 2.01

-----VPADDSWZ128rr-----
	VPADDSWZ128rr(1(Class<VR128X>) -> 0(Class<VR128X>))  [2.02;2.02]
		 Successful, latency: 2.02
	VPADDSWZ128rr(2(Class<VR128X>) -> 0(Class<VR128X>))  [2.01;2.01]
		 Successful, latency: 2.01

-----VPADDSWZ128rrk-----
	VPADDSWZ128rrk(1(Class<VR128X>) -> 0(Class<VR128X>))  [2.01;2.01]
		 Successful, latency: 2.01
	VPADDSWZ128rrk(3(Class<VR128X>) -> 0(Class<VR128X>))  [2.02;2.02]
		 Successful, latency: 2.02
	VPADDSWZ128rrk(4(Class<VR128X>) -> 0(Class<VR128X>))  [2.03;2.03]
		 Successful, latency: 2.03

-----VPADDSWZ128rrkz-----
	VPADDSWZ128rrkz(2(Class<VR128X>) -> 0(Class<VR128X>))  [2.03;2.03]
		 Successful, latency: 2.03
	VPADDSWZ128rrkz(3(Class<VR128X>) -> 0(Class<VR128X>))  [2.03;2.03]
		 Successful, latency: 2.03

-----VPADDSWZ256rr-----
	VPADDSWZ256rr(1(Class<VR256X>) -> 0(Class<VR256X>))  [2.02;2.02]
		 Successful, latency: 2.02
	VPADDSWZ256rr(2(Class<VR256X>) -> 0(Class<VR256X>))  [2.02;2.02]
		 Successful, latency: 2.02

-----VPADDSWZ256rrk-----
	VPADDSWZ256rrk(1(Class<VR256X>) -> 0(Class<VR256X>))  [2.01;2.01]
		 Successful, latency: 2.01
	VPADDSWZ256rrk(3(Class<VR256X>) -> 0(Class<VR256X>))  [2.01;2.01]
		 Successful, latency: 2.01
	VPADDSWZ256rrk(4(Class<VR256X>) -> 0(Class<VR256X>))  [2.02;2.02]
		 Successful, latency: 2.02

-----VPADDSWZ256rrkz-----
	VPADDSWZ256rrkz(2(Class<VR256X>) -> 0(Class<VR256X>))  [2.02;2.02]
		 Successful, latency: 2.02
	VPADDSWZ256rrkz(3(Class<VR256X>) -> 0(Class<VR256X>))  [2.02;2.02]
		 Successful, latency: 2.02

-----VPADDSWZrr-----
	VPADDSWZrr(1(Class<VR512>) -> 0(Class<VR512>))  [2.02;2.02]
		 Successful, latency: 2.02
	VPADDSWZrr(2(Class<VR512>) -> 0(Class<VR512>))  [2.01;2.01]
		 Successful, latency: 2.01

-----VPADDSWZrrk-----
	VPADDSWZrrk(1(Class<VR512>) -> 0(Class<VR512>))  [2.03;2.03]
		 Successful, latency: 2.03
	VPADDSWZrrk(3(Class<VR512>) -> 0(Class<VR512>))  [2.02;2.02]
		 Successful, latency: 2.02
	VPADDSWZrrk(4(Class<VR512>) -> 0(Class<VR512>))  [2.01;2.01]
		 Successful, latency: 2.01

-----VPADDSWZrrkz-----
	VPADDSWZrrkz(2(Class<VR512>) -> 0(Class<VR512>))  [2.02;2.02]
		 Successful, latency: 2.02
	VPADDSWZrrkz(3(Class<VR512>) -> 0(Class<VR512>))  [2.04;2.04]
		 Successful, latency: 2.04

-----VPADDSWrr-----
	VPADDSWrr(1(Class<VR128>) -> 0(Class<VR128>))  [2.01;2.01]
		 Successful, latency: 2.01
	VPADDSWrr(2(Class<VR128>) -> 0(Class<VR128>))  [2.02;2.02]
		 Successful, latency: 2.02

-----VPADDUSBYrr-----
	VPADDUSBYrr(1(Class<VR256>) -> 0(Class<VR256>))  [2.02;2.02]
		 Successful, latency: 2.02
	VPADDUSBYrr(2(Class<VR256>) -> 0(Class<VR256>))  [2.02;2.02]
		 Successful, latency: 2.02

-----VPADDUSBZ128rr-----
	VPADDUSBZ128rr(1(Class<VR128X>) -> 0(Class<VR128X>))  [2.01;2.01]
		 Successful, latency: 2.01
	VPADDUSBZ128rr(2(Class<VR128X>) -> 0(Class<VR128X>))  [2.02;2.02]
		 Successful, latency: 2.02

-----VPADDUSBZ128rrk-----
	VPADDUSBZ128rrk(1(Class<VR128X>) -> 0(Class<VR128X>))  [2.02;2.02]
		 Successful, latency: 2.02
	VPADDUSBZ128rrk(3(Class<VR128X>) -> 0(Class<VR128X>))  [2.02;2.02]
		 Successful, latency: 2.02
	VPADDUSBZ128rrk(4(Class<VR128X>) -> 0(Class<VR128X>))  [2.01;2.01]
		 Successful, latency: 2.01

-----VPADDUSBZ128rrkz-----
	VPADDUSBZ128rrkz(2(Class<VR128X>) -> 0(Class<VR128X>))  [2.01;2.01]
		 Successful, latency: 2.01
	VPADDUSBZ128rrkz(3(Class<VR128X>) -> 0(Class<VR128X>))  [2.03;2.03]
		 Successful, latency: 2.03

-----VPADDUSBZ256rr-----
	VPADDUSBZ256rr(1(Class<VR256X>) -> 0(Class<VR256X>))  [2.02;2.02]
		 Successful, latency: 2.02
	VPADDUSBZ256rr(2(Class<VR256X>) -> 0(Class<VR256X>))  [2.01;2.01]
		 Successful, latency: 2.01

-----VPADDUSBZ256rrk-----
	VPADDUSBZ256rrk(1(Class<VR256X>) -> 0(Class<VR256X>))  [2;2]
		 Successful, latency: 2
	VPADDUSBZ256rrk(3(Class<VR256X>) -> 0(Class<VR256X>))  [2.02;2.02]
		 Successful, latency: 2.02
	VPADDUSBZ256rrk(4(Class<VR256X>) -> 0(Class<VR256X>))  [2.02;2.02]
		 Successful, latency: 2.02

-----VPADDUSBZ256rrkz-----
	VPADDUSBZ256rrkz(2(Class<VR256X>) -> 0(Class<VR256X>))  [2.02;2.02]
		 Successful, latency: 2.02
	VPADDUSBZ256rrkz(3(Class<VR256X>) -> 0(Class<VR256X>))  [2.01;2.01]
		 Successful, latency: 2.01

-----VPADDUSBZrr-----
	VPADDUSBZrr(1(Class<VR512>) -> 0(Class<VR512>))  [2.01;2.01]
		 Successful, latency: 2.01
	VPADDUSBZrr(2(Class<VR512>) -> 0(Class<VR512>))  [2.04;2.04]
		 Successful, latency: 2.04

-----VPADDUSBZrrk-----
	VPADDUSBZrrk(1(Class<VR512>) -> 0(Class<VR512>))  [2.02;2.02]
		 Successful, latency: 2.02
	VPADDUSBZrrk(3(Class<VR512>) -> 0(Class<VR512>))  [2.01;2.01]
		 Successful, latency: 2.01
	VPADDUSBZrrk(4(Class<VR512>) -> 0(Class<VR512>))  [2.02;2.02]
		 Successful, latency: 2.02

-----VPADDUSBZrrkz-----
	VPADDUSBZrrkz(2(Class<VR512>) -> 0(Class<VR512>))  [2.02;2.02]
		 Successful, latency: 2.02
	VPADDUSBZrrkz(3(Class<VR512>) -> 0(Class<VR512>))  [2.01;2.01]
		 Successful, latency: 2.01

-----VPADDUSBrr-----
	VPADDUSBrr(1(Class<VR128>) -> 0(Class<VR128>))  [2.02;2.02]
		 Successful, latency: 2.02
	VPADDUSBrr(2(Class<VR128>) -> 0(Class<VR128>))  [2.02;2.02]
		 Successful, latency: 2.02

-----VPADDUSWYrr-----
	VPADDUSWYrr(1(Class<VR256>) -> 0(Class<VR256>))  [2.02;2.02]
		 Successful, latency: 2.02
	VPADDUSWYrr(2(Class<VR256>) -> 0(Class<VR256>))  [2.03;2.03]
		 Successful, latency: 2.03

-----VPADDUSWZ128rr-----
	VPADDUSWZ128rr(1(Class<VR128X>) -> 0(Class<VR128X>))  [2.03;2.03]
		 Successful, latency: 2.03
	VPADDUSWZ128rr(2(Class<VR128X>) -> 0(Class<VR128X>))  [2.01;2.01]
		 Successful, latency: 2.01

-----VPADDUSWZ128rrk-----
	VPADDUSWZ128rrk(1(Class<VR128X>) -> 0(Class<VR128X>))  [2.03;2.03]
		 Successful, latency: 2.03
	VPADDUSWZ128rrk(3(Class<VR128X>) -> 0(Class<VR128X>))  [2.02;2.02]
		 Successful, latency: 2.02
	VPADDUSWZ128rrk(4(Class<VR128X>) -> 0(Class<VR128X>))  [2.01;2.01]
		 Successful, latency: 2.01

-----VPADDUSWZ128rrkz-----
	VPADDUSWZ128rrkz(2(Class<VR128X>) -> 0(Class<VR128X>))  [2.02;2.02]
		 Successful, latency: 2.02
	VPADDUSWZ128rrkz(3(Class<VR128X>) -> 0(Class<VR128X>))  [2.02;2.02]
		 Successful, latency: 2.02

-----VPADDUSWZ256rr-----
	VPADDUSWZ256rr(1(Class<VR256X>) -> 0(Class<VR256X>))  [2.02;2.02]
		 Successful, latency: 2.02
	VPADDUSWZ256rr(2(Class<VR256X>) -> 0(Class<VR256X>))  [2.02;2.02]
		 Successful, latency: 2.02

-----VPADDUSWZ256rrk-----
	VPADDUSWZ256rrk(1(Class<VR256X>) -> 0(Class<VR256X>))  [2.02;2.02]
		 Successful, latency: 2.02
	VPADDUSWZ256rrk(3(Class<VR256X>) -> 0(Class<VR256X>))  [2.02;2.02]
		 Successful, latency: 2.02
	VPADDUSWZ256rrk(4(Class<VR256X>) -> 0(Class<VR256X>))  [2.02;2.02]
		 Successful, latency: 2.02

-----VPADDUSWZ256rrkz-----
	VPADDUSWZ256rrkz(2(Class<VR256X>) -> 0(Class<VR256X>))  [2.01;2.01]
		 Successful, latency: 2.01
	VPADDUSWZ256rrkz(3(Class<VR256X>) -> 0(Class<VR256X>))  [2.01;2.01]
		 Successful, latency: 2.01

-----VPADDUSWZrr-----
	VPADDUSWZrr(1(Class<VR512>) -> 0(Class<VR512>))  [2.02;2.02]
		 Successful, latency: 2.02
	VPADDUSWZrr(2(Class<VR512>) -> 0(Class<VR512>))  [2.01;2.01]
		 Successful, latency: 2.01

-----VPADDUSWZrrk-----
	VPADDUSWZrrk(1(Class<VR512>) -> 0(Class<VR512>))  [2.02;2.02]
		 Successful, latency: 2.02
	VPADDUSWZrrk(3(Class<VR512>) -> 0(Class<VR512>))  [2.01;2.01]
		 Successful, latency: 2.01
	VPADDUSWZrrk(4(Class<VR512>) -> 0(Class<VR512>))  [2.02;2.02]
		 Successful, latency: 2.02

-----VPADDUSWZrrkz-----
	VPADDUSWZrrkz(2(Class<VR512>) -> 0(Class<VR512>))  [2.03;2.03]
		 Successful, latency: 2.03
	VPADDUSWZrrkz(3(Class<VR512>) -> 0(Class<VR512>))  [2.01;2.01]
		 Successful, latency: 2.01

-----VPADDUSWrr-----
	VPADDUSWrr(1(Class<VR128>) -> 0(Class<VR128>))  [2.02;2.02]
		 Successful, latency: 2.02
	VPADDUSWrr(2(Class<VR128>) -> 0(Class<VR128>))  [2.02;2.02]
		 Successful, latency: 2.02

-----VPADDWYrr-----
	VPADDWYrr(1(Class<VR256>) -> 0(Class<VR256>))  [1.01;1.01]
		 Successful, latency: 1.01
	VPADDWYrr(2(Class<VR256>) -> 0(Class<VR256>))  [1.01;1.01]
		 Successful, latency: 1.01

-----VPADDWZ128rr-----
	VPADDWZ128rr(1(Class<VR128X>) -> 0(Class<VR128X>))  [1.01;1.01]
		 Successful, latency: 1.01
	VPADDWZ128rr(2(Class<VR128X>) -> 0(Class<VR128X>))  [1;1]
		 Successful, latency: 1

-----VPADDWZ128rrk-----
	VPADDWZ128rrk(1(Class<VR128X>) -> 0(Class<VR128X>))  [1.01;1.01]
		 Successful, latency: 1.01
	VPADDWZ128rrk(3(Class<VR128X>) -> 0(Class<VR128X>))  [1.02;1.02]
		 Successful, latency: 1.02
	VPADDWZ128rrk(4(Class<VR128X>) -> 0(Class<VR128X>))  [1;1]
		 Successful, latency: 1

-----VPADDWZ128rrkz-----
	VPADDWZ128rrkz(2(Class<VR128X>) -> 0(Class<VR128X>))  [1.01;1.01]
		 Successful, latency: 1.01
	VPADDWZ128rrkz(3(Class<VR128X>) -> 0(Class<VR128X>))  [1.01;1.01]
		 Successful, latency: 1.01

-----VPADDWZ256rr-----
	VPADDWZ256rr(1(Class<VR256X>) -> 0(Class<VR256X>))  [1.02;1.02]
		 Successful, latency: 1.02
	VPADDWZ256rr(2(Class<VR256X>) -> 0(Class<VR256X>))  [1.01;1.01]
		 Successful, latency: 1.01

-----VPADDWZ256rrk-----
	VPADDWZ256rrk(1(Class<VR256X>) -> 0(Class<VR256X>))  [1.02;1.02]
		 Successful, latency: 1.02
	VPADDWZ256rrk(3(Class<VR256X>) -> 0(Class<VR256X>))  [1.03;1.03]
		 Successful, latency: 1.03
	VPADDWZ256rrk(4(Class<VR256X>) -> 0(Class<VR256X>))  [1.01;1.01]
		 Successful, latency: 1.01

-----VPADDWZ256rrkz-----
	VPADDWZ256rrkz(2(Class<VR256X>) -> 0(Class<VR256X>))  [1;1]
		 Successful, latency: 1
	VPADDWZ256rrkz(3(Class<VR256X>) -> 0(Class<VR256X>))  [1;1]
		 Successful, latency: 1

-----VPADDWZrr-----
	VPADDWZrr(1(Class<VR512>) -> 0(Class<VR512>))  [1;1]
		 Successful, latency: 1
	VPADDWZrr(2(Class<VR512>) -> 0(Class<VR512>))  [1.01;1.01]
		 Successful, latency: 1.01

-----VPADDWZrrk-----
	VPADDWZrrk(1(Class<VR512>) -> 0(Class<VR512>))  [1.01;1.01]
		 Successful, latency: 1.01
	VPADDWZrrk(3(Class<VR512>) -> 0(Class<VR512>))  [1.01;1.01]
		 Successful, latency: 1.01
	VPADDWZrrk(4(Class<VR512>) -> 0(Class<VR512>))  [1.01;1.01]
		 Successful, latency: 1.01

-----VPADDWZrrkz-----
	VPADDWZrrkz(2(Class<VR512>) -> 0(Class<VR512>))  [1.02;1.02]
		 Successful, latency: 1.02
	VPADDWZrrkz(3(Class<VR512>) -> 0(Class<VR512>))  [1;1]
		 Successful, latency: 1

-----VPADDWrr-----
	VPADDWrr(1(Class<VR128>) -> 0(Class<VR128>))  [0.999;0.999]
		 Successful, latency: 0.999
	VPADDWrr(2(Class<VR128>) -> 0(Class<VR128>))  [1.01;1.01]
		 Successful, latency: 1.01

-----VPALIGNRYrri-----
	VPALIGNRYrri(1(Class<VR256>) -> 0(Class<VR256>))  [2.02;2.02]
		 Successful, latency: 2.02
	VPALIGNRYrri(2(Class<VR256>) -> 0(Class<VR256>))  [2.02;2.02]
		 Successful, latency: 2.02

-----VPALIGNRZ128rri-----
	VPALIGNRZ128rri(1(Class<VR128X>) -> 0(Class<VR128X>))  [2.02;2.02]
		 Successful, latency: 2.02
	VPALIGNRZ128rri(2(Class<VR128X>) -> 0(Class<VR128X>))  [2;2]
		 Successful, latency: 2

-----VPALIGNRZ128rrik-----
	VPALIGNRZ128rrik(1(Class<VR128X>) -> 0(Class<VR128X>))  [2.02;2.02]
		 Successful, latency: 2.02
	VPALIGNRZ128rrik(3(Class<VR128X>) -> 0(Class<VR128X>))  [2.03;2.03]
		 Successful, latency: 2.03
	VPALIGNRZ128rrik(4(Class<VR128X>) -> 0(Class<VR128X>))  [2.03;2.03]
		 Successful, latency: 2.03

-----VPALIGNRZ128rrikz-----
	VPALIGNRZ128rrikz(2(Class<VR128X>) -> 0(Class<VR128X>))  [2.02;2.02]
		 Successful, latency: 2.02
	VPALIGNRZ128rrikz(3(Class<VR128X>) -> 0(Class<VR128X>))  [2.02;2.02]
		 Successful, latency: 2.02

-----VPALIGNRZ256rri-----
	VPALIGNRZ256rri(1(Class<VR256X>) -> 0(Class<VR256X>))  [2.02;2.02]
		 Successful, latency: 2.02
	VPALIGNRZ256rri(2(Class<VR256X>) -> 0(Class<VR256X>))  [2.02;2.02]
		 Successful, latency: 2.02

-----VPALIGNRZ256rrik-----
	VPALIGNRZ256rrik(1(Class<VR256X>) -> 0(Class<VR256X>))  [2.02;2.02]
		 Successful, latency: 2.02
	VPALIGNRZ256rrik(3(Class<VR256X>) -> 0(Class<VR256X>))  [2.02;2.02]
		 Successful, latency: 2.02
	VPALIGNRZ256rrik(4(Class<VR256X>) -> 0(Class<VR256X>))  [2.01;2.01]
		 Successful, latency: 2.01

-----VPALIGNRZ256rrikz-----
	VPALIGNRZ256rrikz(2(Class<VR256X>) -> 0(Class<VR256X>))  [2.01;2.01]
		 Successful, latency: 2.01
	VPALIGNRZ256rrikz(3(Class<VR256X>) -> 0(Class<VR256X>))  [2.02;2.02]
		 Successful, latency: 2.02

-----VPALIGNRZrri-----
	VPALIGNRZrri(1(Class<VR512>) -> 0(Class<VR512>))  [2.02;2.02]
		 Successful, latency: 2.02
	VPALIGNRZrri(2(Class<VR512>) -> 0(Class<VR512>))  [2.01;2.01]
		 Successful, latency: 2.01

-----VPALIGNRZrrik-----
	VPALIGNRZrrik(1(Class<VR512>) -> 0(Class<VR512>))  [2.01;2.01]
		 Successful, latency: 2.01
	VPALIGNRZrrik(3(Class<VR512>) -> 0(Class<VR512>))  [2.02;2.02]
		 Successful, latency: 2.02
	VPALIGNRZrrik(4(Class<VR512>) -> 0(Class<VR512>))  [2.02;2.02]
		 Successful, latency: 2.02

-----VPALIGNRZrrikz-----
	VPALIGNRZrrikz(2(Class<VR512>) -> 0(Class<VR512>))  [2.02;2.02]
		 Successful, latency: 2.02
	VPALIGNRZrrikz(3(Class<VR512>) -> 0(Class<VR512>))  [2.01;2.01]
		 Successful, latency: 2.01

-----VPALIGNRrri-----
	VPALIGNRrri(1(Class<VR128>) -> 0(Class<VR128>))  [2;2]
		 Successful, latency: 2
	VPALIGNRrri(2(Class<VR128>) -> 0(Class<VR128>))  [2.02;2.02]
		 Successful, latency: 2.02

-----VPANDDZ128rr-----
	VPANDDZ128rr(1(Class<VR128X>) -> 0(Class<VR128X>))  [1.01;1.01]
		 Successful, latency: 1.01
	VPANDDZ128rr(2(Class<VR128X>) -> 0(Class<VR128X>))  [1.01;1.01]
		 Successful, latency: 1.01

-----VPANDDZ128rrk-----
	VPANDDZ128rrk(1(Class<VR128X>) -> 0(Class<VR128X>))  [1.01;1.01]
		 Successful, latency: 1.01
	VPANDDZ128rrk(3(Class<VR128X>) -> 0(Class<VR128X>))  [1.01;1.01]
		 Successful, latency: 1.01
	VPANDDZ128rrk(4(Class<VR128X>) -> 0(Class<VR128X>))  [1.02;1.02]
		 Successful, latency: 1.02

-----VPANDDZ128rrkz-----
	VPANDDZ128rrkz(2(Class<VR128X>) -> 0(Class<VR128X>))  [1;1]
		 Successful, latency: 1
	VPANDDZ128rrkz(3(Class<VR128X>) -> 0(Class<VR128X>))  [1.01;1.01]
		 Successful, latency: 1.01

-----VPANDDZ256rr-----
	VPANDDZ256rr(1(Class<VR256X>) -> 0(Class<VR256X>))  [1.02;1.02]
		 Successful, latency: 1.02
	VPANDDZ256rr(2(Class<VR256X>) -> 0(Class<VR256X>))  [1.01;1.01]
		 Successful, latency: 1.01

-----VPANDDZ256rrk-----
	VPANDDZ256rrk(1(Class<VR256X>) -> 0(Class<VR256X>))  [1;1]
		 Successful, latency: 1
	VPANDDZ256rrk(3(Class<VR256X>) -> 0(Class<VR256X>))  [1.02;1.02]
		 Successful, latency: 1.02
	VPANDDZ256rrk(4(Class<VR256X>) -> 0(Class<VR256X>))  [1.02;1.02]
		 Successful, latency: 1.02

-----VPANDDZ256rrkz-----
	VPANDDZ256rrkz(2(Class<VR256X>) -> 0(Class<VR256X>))  [1.01;1.01]
		 Successful, latency: 1.01
	VPANDDZ256rrkz(3(Class<VR256X>) -> 0(Class<VR256X>))  [1;1]
		 Successful, latency: 1

-----VPANDDZrr-----
	VPANDDZrr(1(Class<VR512>) -> 0(Class<VR512>))  [1.01;1.01]
		 Successful, latency: 1.01
	VPANDDZrr(2(Class<VR512>) -> 0(Class<VR512>))  [1.01;1.01]
		 Successful, latency: 1.01

-----VPANDDZrrk-----
	VPANDDZrrk(1(Class<VR512>) -> 0(Class<VR512>))  [1;1]
		 Successful, latency: 1
	VPANDDZrrk(3(Class<VR512>) -> 0(Class<VR512>))  [1.01;1.01]
		 Successful, latency: 1.01
	VPANDDZrrk(4(Class<VR512>) -> 0(Class<VR512>))  [1.01;1.01]
		 Successful, latency: 1.01

-----VPANDDZrrkz-----
	VPANDDZrrkz(2(Class<VR512>) -> 0(Class<VR512>))  [1;1]
		 Successful, latency: 1
	VPANDDZrrkz(3(Class<VR512>) -> 0(Class<VR512>))  [1;1]
		 Successful, latency: 1

-----VPANDNDZ128rr-----
	VPANDNDZ128rr(1(Class<VR128X>) -> 0(Class<VR128X>))  [1.01;1.01]
		 Successful, latency: 1.01
	VPANDNDZ128rr(2(Class<VR128X>) -> 0(Class<VR128X>))  [1.01;1.01]
		 Successful, latency: 1.01

-----VPANDNDZ128rrk-----
	VPANDNDZ128rrk(1(Class<VR128X>) -> 0(Class<VR128X>))  [1.01;1.01]
		 Successful, latency: 1.01
	VPANDNDZ128rrk(3(Class<VR128X>) -> 0(Class<VR128X>))  [1.01;1.01]
		 Successful, latency: 1.01
	VPANDNDZ128rrk(4(Class<VR128X>) -> 0(Class<VR128X>))  [1.01;1.01]
		 Successful, latency: 1.01

-----VPANDNDZ128rrkz-----
	VPANDNDZ128rrkz(2(Class<VR128X>) -> 0(Class<VR128X>))  [1.01;1.01]
		 Successful, latency: 1.01
	VPANDNDZ128rrkz(3(Class<VR128X>) -> 0(Class<VR128X>))  [1.01;1.01]
		 Successful, latency: 1.01

-----VPANDNDZ256rr-----
	VPANDNDZ256rr(1(Class<VR256X>) -> 0(Class<VR256X>))  [1;1]
		 Successful, latency: 1
	VPANDNDZ256rr(2(Class<VR256X>) -> 0(Class<VR256X>))  [1.01;1.01]
		 Successful, latency: 1.01

-----VPANDNDZ256rrk-----
	VPANDNDZ256rrk(1(Class<VR256X>) -> 0(Class<VR256X>))  [1.01;1.01]
		 Successful, latency: 1.01
	VPANDNDZ256rrk(3(Class<VR256X>) -> 0(Class<VR256X>))  [1;1]
		 Successful, latency: 1
	VPANDNDZ256rrk(4(Class<VR256X>) -> 0(Class<VR256X>))  [1;1]
		 Successful, latency: 1

-----VPANDNDZ256rrkz-----
	VPANDNDZ256rrkz(2(Class<VR256X>) -> 0(Class<VR256X>))  [1;1]
		 Successful, latency: 1
	VPANDNDZ256rrkz(3(Class<VR256X>) -> 0(Class<VR256X>))  [1;1]
		 Successful, latency: 1

-----VPANDNDZrr-----
	VPANDNDZrr(1(Class<VR512>) -> 0(Class<VR512>))  [1.01;1.01]
		 Successful, latency: 1.01
	VPANDNDZrr(2(Class<VR512>) -> 0(Class<VR512>))  [1.01;1.01]
		 Successful, latency: 1.01

-----VPANDNDZrrk-----
	VPANDNDZrrk(1(Class<VR512>) -> 0(Class<VR512>))  [1.01;1.01]
		 Successful, latency: 1.01
	VPANDNDZrrk(3(Class<VR512>) -> 0(Class<VR512>))  [1;1]
		 Successful, latency: 1
	VPANDNDZrrk(4(Class<VR512>) -> 0(Class<VR512>))  [1;1]
		 Successful, latency: 1

-----VPANDNDZrrkz-----
	VPANDNDZrrkz(2(Class<VR512>) -> 0(Class<VR512>))  [0.998;0.998]
		 Successful, latency: 0.998
	VPANDNDZrrkz(3(Class<VR512>) -> 0(Class<VR512>))  [1.01;1.01]
		 Successful, latency: 1.01

-----VPANDNQZ128rr-----
	VPANDNQZ128rr(1(Class<VR128X>) -> 0(Class<VR128X>))  [1;1]
		 Successful, latency: 1
	VPANDNQZ128rr(2(Class<VR128X>) -> 0(Class<VR128X>))  [0.999;0.999]
		 Successful, latency: 0.999

-----VPANDNQZ128rrk-----
	VPANDNQZ128rrk(1(Class<VR128X>) -> 0(Class<VR128X>))  [1.01;1.01]
		 Successful, latency: 1.01
	VPANDNQZ128rrk(3(Class<VR128X>) -> 0(Class<VR128X>))  [1;1]
		 Successful, latency: 1
	VPANDNQZ128rrk(4(Class<VR128X>) -> 0(Class<VR128X>))  [1.02;1.02]
		 Successful, latency: 1.02

-----VPANDNQZ128rrkz-----
	VPANDNQZ128rrkz(2(Class<VR128X>) -> 0(Class<VR128X>))  [0.999;0.999]
		 Successful, latency: 0.999
	VPANDNQZ128rrkz(3(Class<VR128X>) -> 0(Class<VR128X>))  [1.01;1.01]
		 Successful, latency: 1.01

-----VPANDNQZ256rr-----
	VPANDNQZ256rr(1(Class<VR256X>) -> 0(Class<VR256X>))  [1.02;1.02]
		 Successful, latency: 1.02
	VPANDNQZ256rr(2(Class<VR256X>) -> 0(Class<VR256X>))  [1.01;1.01]
		 Successful, latency: 1.01

-----VPANDNQZ256rrk-----
	VPANDNQZ256rrk(1(Class<VR256X>) -> 0(Class<VR256X>))  [1.01;1.01]
		 Successful, latency: 1.01
	VPANDNQZ256rrk(3(Class<VR256X>) -> 0(Class<VR256X>))  [1;1]
		 Successful, latency: 1
	VPANDNQZ256rrk(4(Class<VR256X>) -> 0(Class<VR256X>))  [1.01;1.01]
		 Successful, latency: 1.01

-----VPANDNQZ256rrkz-----
	VPANDNQZ256rrkz(2(Class<VR256X>) -> 0(Class<VR256X>))  [1;1]
		 Successful, latency: 1
	VPANDNQZ256rrkz(3(Class<VR256X>) -> 0(Class<VR256X>))  [1;1]
		 Successful, latency: 1

-----VPANDNQZrr-----
	VPANDNQZrr(1(Class<VR512>) -> 0(Class<VR512>))  [1.01;1.01]
		 Successful, latency: 1.01
	VPANDNQZrr(2(Class<VR512>) -> 0(Class<VR512>))  [1.01;1.01]
		 Successful, latency: 1.01

-----VPANDNQZrrk-----
	VPANDNQZrrk(1(Class<VR512>) -> 0(Class<VR512>))  [1.02;1.02]
		 Successful, latency: 1.02
	VPANDNQZrrk(3(Class<VR512>) -> 0(Class<VR512>))  [1.01;1.01]
		 Successful, latency: 1.01
	VPANDNQZrrk(4(Class<VR512>) -> 0(Class<VR512>))  [1.01;1.01]
		 Successful, latency: 1.01

-----VPANDNQZrrkz-----
	VPANDNQZrrkz(2(Class<VR512>) -> 0(Class<VR512>))  [1.01;1.01]
		 Successful, latency: 1.01
	VPANDNQZrrkz(3(Class<VR512>) -> 0(Class<VR512>))  [1;1]
		 Successful, latency: 1

-----VPANDNYrr-----
	VPANDNYrr(1(Class<VR256>) -> 0(Class<VR256>))  [1.02;1.02]
		 Successful, latency: 1.02
	VPANDNYrr(2(Class<VR256>) -> 0(Class<VR256>))  [1.01;1.01]
		 Successful, latency: 1.01

-----VPANDNrr-----
	VPANDNrr(1(Class<VR128>) -> 0(Class<VR128>))  [1.02;1.02]
		 Successful, latency: 1.02
	VPANDNrr(2(Class<VR128>) -> 0(Class<VR128>))  [1;1]
		 Successful, latency: 1

-----VPANDQZ128rr-----
	VPANDQZ128rr(1(Class<VR128X>) -> 0(Class<VR128X>))  [1;1]
		 Successful, latency: 1
	VPANDQZ128rr(2(Class<VR128X>) -> 0(Class<VR128X>))  [1.01;1.01]
		 Successful, latency: 1.01

-----VPANDQZ128rrk-----
	VPANDQZ128rrk(1(Class<VR128X>) -> 0(Class<VR128X>))  [1.01;1.01]
		 Successful, latency: 1.01
	VPANDQZ128rrk(3(Class<VR128X>) -> 0(Class<VR128X>))  [0.999;0.999]
		 Successful, latency: 0.999
	VPANDQZ128rrk(4(Class<VR128X>) -> 0(Class<VR128X>))  [1.01;1.01]
		 Successful, latency: 1.01

-----VPANDQZ128rrkz-----
	VPANDQZ128rrkz(2(Class<VR128X>) -> 0(Class<VR128X>))  [1;1]
		 Successful, latency: 1
	VPANDQZ128rrkz(3(Class<VR128X>) -> 0(Class<VR128X>))  [1.01;1.01]
		 Successful, latency: 1.01

-----VPANDQZ256rr-----
	VPANDQZ256rr(1(Class<VR256X>) -> 0(Class<VR256X>))  [1.01;1.01]
		 Successful, latency: 1.01
	VPANDQZ256rr(2(Class<VR256X>) -> 0(Class<VR256X>))  [1.02;1.02]
		 Successful, latency: 1.02

-----VPANDQZ256rrk-----
	VPANDQZ256rrk(1(Class<VR256X>) -> 0(Class<VR256X>))  [1;1]
		 Successful, latency: 1
	VPANDQZ256rrk(3(Class<VR256X>) -> 0(Class<VR256X>))  [1.01;1.01]
		 Successful, latency: 1.01
	VPANDQZ256rrk(4(Class<VR256X>) -> 0(Class<VR256X>))  [1.01;1.01]
		 Successful, latency: 1.01

-----VPANDQZ256rrkz-----
	VPANDQZ256rrkz(2(Class<VR256X>) -> 0(Class<VR256X>))  [1;1]
		 Successful, latency: 1
	VPANDQZ256rrkz(3(Class<VR256X>) -> 0(Class<VR256X>))  [1.01;1.01]
		 Successful, latency: 1.01

-----VPANDQZrr-----
	VPANDQZrr(1(Class<VR512>) -> 0(Class<VR512>))  [1.01;1.01]
		 Successful, latency: 1.01
	VPANDQZrr(2(Class<VR512>) -> 0(Class<VR512>))  [1.01;1.01]
		 Successful, latency: 1.01

-----VPANDQZrrk-----
	VPANDQZrrk(1(Class<VR512>) -> 0(Class<VR512>))  [1.02;1.02]
		 Successful, latency: 1.02
	VPANDQZrrk(3(Class<VR512>) -> 0(Class<VR512>))  [1;1]
		 Successful, latency: 1
	VPANDQZrrk(4(Class<VR512>) -> 0(Class<VR512>))  [0.996;0.996]
		 Successful, latency: 0.996

-----VPANDQZrrkz-----
	VPANDQZrrkz(2(Class<VR512>) -> 0(Class<VR512>))  [1.02;1.02]
		 Successful, latency: 1.02
	VPANDQZrrkz(3(Class<VR512>) -> 0(Class<VR512>))  [1;1]
		 Successful, latency: 1

-----VPANDYrr-----
	VPANDYrr(1(Class<VR256>) -> 0(Class<VR256>))  [1;1]
		 Successful, latency: 1
	VPANDYrr(2(Class<VR256>) -> 0(Class<VR256>))  [1;1]
		 Successful, latency: 1

-----VPANDrr-----
	VPANDrr(1(Class<VR128>) -> 0(Class<VR128>))  [1.02;1.02]
		 Successful, latency: 1.02
	VPANDrr(2(Class<VR128>) -> 0(Class<VR128>))  [1.01;1.01]
		 Successful, latency: 1.01

-----VPAVGBYrr-----
	VPAVGBYrr(1(Class<VR256>) -> 0(Class<VR256>))  [2.02;2.02]
		 Successful, latency: 2.02
	VPAVGBYrr(2(Class<VR256>) -> 0(Class<VR256>))  [2.01;2.01]
		 Successful, latency: 2.01

-----VPAVGBZ128rr-----
	VPAVGBZ128rr(1(Class<VR128X>) -> 0(Class<VR128X>))  [2.01;2.01]
		 Successful, latency: 2.01
	VPAVGBZ128rr(2(Class<VR128X>) -> 0(Class<VR128X>))  [2.01;2.01]
		 Successful, latency: 2.01

-----VPAVGBZ128rrk-----
	VPAVGBZ128rrk(1(Class<VR128X>) -> 0(Class<VR128X>))  [2.01;2.01]
		 Successful, latency: 2.01
	VPAVGBZ128rrk(3(Class<VR128X>) -> 0(Class<VR128X>))  [2.01;2.01]
		 Successful, latency: 2.01
	VPAVGBZ128rrk(4(Class<VR128X>) -> 0(Class<VR128X>))  [2.02;2.02]
		 Successful, latency: 2.02

-----VPAVGBZ128rrkz-----
	VPAVGBZ128rrkz(2(Class<VR128X>) -> 0(Class<VR128X>))  [2.02;2.02]
		 Successful, latency: 2.02
	VPAVGBZ128rrkz(3(Class<VR128X>) -> 0(Class<VR128X>))  [2.01;2.01]
		 Successful, latency: 2.01

-----VPAVGBZ256rr-----
	VPAVGBZ256rr(1(Class<VR256X>) -> 0(Class<VR256X>))  [2.02;2.02]
		 Successful, latency: 2.02
	VPAVGBZ256rr(2(Class<VR256X>) -> 0(Class<VR256X>))  [2.03;2.03]
		 Successful, latency: 2.03

-----VPAVGBZ256rrk-----
	VPAVGBZ256rrk(1(Class<VR256X>) -> 0(Class<VR256X>))  [2.02;2.02]
		 Successful, latency: 2.02
	VPAVGBZ256rrk(3(Class<VR256X>) -> 0(Class<VR256X>))  [2.02;2.02]
		 Successful, latency: 2.02
	VPAVGBZ256rrk(4(Class<VR256X>) -> 0(Class<VR256X>))  [2.02;2.02]
		 Successful, latency: 2.02

-----VPAVGBZ256rrkz-----
	VPAVGBZ256rrkz(2(Class<VR256X>) -> 0(Class<VR256X>))  [2.02;2.02]
		 Successful, latency: 2.02
	VPAVGBZ256rrkz(3(Class<VR256X>) -> 0(Class<VR256X>))  [2.03;2.03]
		 Successful, latency: 2.03

-----VPAVGBZrr-----
	VPAVGBZrr(1(Class<VR512>) -> 0(Class<VR512>))  [2.03;2.03]
		 Successful, latency: 2.03
	VPAVGBZrr(2(Class<VR512>) -> 0(Class<VR512>))  [2.02;2.02]
		 Successful, latency: 2.02

-----VPAVGBZrrk-----
	VPAVGBZrrk(1(Class<VR512>) -> 0(Class<VR512>))  [2.02;2.02]
		 Successful, latency: 2.02
	VPAVGBZrrk(3(Class<VR512>) -> 0(Class<VR512>))  [2.02;2.02]
		 Successful, latency: 2.02
	VPAVGBZrrk(4(Class<VR512>) -> 0(Class<VR512>))  [2.01;2.01]
		 Successful, latency: 2.01

-----VPAVGBZrrkz-----
	VPAVGBZrrkz(2(Class<VR512>) -> 0(Class<VR512>))  [2.02;2.02]
		 Successful, latency: 2.02
	VPAVGBZrrkz(3(Class<VR512>) -> 0(Class<VR512>))  [2.01;2.01]
		 Successful, latency: 2.01

-----VPAVGBrr-----
	VPAVGBrr(1(Class<VR128>) -> 0(Class<VR128>))  [2.01;2.01]
		 Successful, latency: 2.01
	VPAVGBrr(2(Class<VR128>) -> 0(Class<VR128>))  [2.02;2.02]
		 Successful, latency: 2.02

-----VPAVGWYrr-----
	VPAVGWYrr(1(Class<VR256>) -> 0(Class<VR256>))  [2.02;2.02]
		 Successful, latency: 2.02
	VPAVGWYrr(2(Class<VR256>) -> 0(Class<VR256>))  [2.01;2.01]
		 Successful, latency: 2.01

-----VPAVGWZ128rr-----
	VPAVGWZ128rr(1(Class<VR128X>) -> 0(Class<VR128X>))  [2.04;2.04]
		 Successful, latency: 2.04
	VPAVGWZ128rr(2(Class<VR128X>) -> 0(Class<VR128X>))  [2.01;2.01]
		 Successful, latency: 2.01

-----VPAVGWZ128rrk-----
	VPAVGWZ128rrk(1(Class<VR128X>) -> 0(Class<VR128X>))  [2.02;2.02]
		 Successful, latency: 2.02
	VPAVGWZ128rrk(3(Class<VR128X>) -> 0(Class<VR128X>))  [2.02;2.02]
		 Successful, latency: 2.02
	VPAVGWZ128rrk(4(Class<VR128X>) -> 0(Class<VR128X>))  [2.02;2.02]
		 Successful, latency: 2.02

-----VPAVGWZ128rrkz-----
	VPAVGWZ128rrkz(2(Class<VR128X>) -> 0(Class<VR128X>))  [2.02;2.02]
		 Successful, latency: 2.02
	VPAVGWZ128rrkz(3(Class<VR128X>) -> 0(Class<VR128X>))  [2.02;2.02]
		 Successful, latency: 2.02

-----VPAVGWZ256rr-----
	VPAVGWZ256rr(1(Class<VR256X>) -> 0(Class<VR256X>))  [2.02;2.02]
		 Successful, latency: 2.02
	VPAVGWZ256rr(2(Class<VR256X>) -> 0(Class<VR256X>))  [2.01;2.01]
		 Successful, latency: 2.01

-----VPAVGWZ256rrk-----
	VPAVGWZ256rrk(1(Class<VR256X>) -> 0(Class<VR256X>))  [2.01;2.01]
		 Successful, latency: 2.01
	VPAVGWZ256rrk(3(Class<VR256X>) -> 0(Class<VR256X>))  [2.02;2.02]
		 Successful, latency: 2.02
	VPAVGWZ256rrk(4(Class<VR256X>) -> 0(Class<VR256X>))  [2.02;2.02]
		 Successful, latency: 2.02

-----VPAVGWZ256rrkz-----
	VPAVGWZ256rrkz(2(Class<VR256X>) -> 0(Class<VR256X>))  [2.02;2.02]
		 Successful, latency: 2.02
	VPAVGWZ256rrkz(3(Class<VR256X>) -> 0(Class<VR256X>))  [2.02;2.02]
		 Successful, latency: 2.02

-----VPAVGWZrr-----
	VPAVGWZrr(1(Class<VR512>) -> 0(Class<VR512>))  [2.03;2.03]
		 Successful, latency: 2.03
	VPAVGWZrr(2(Class<VR512>) -> 0(Class<VR512>))  [2.02;2.02]
		 Successful, latency: 2.02

-----VPAVGWZrrk-----
	VPAVGWZrrk(1(Class<VR512>) -> 0(Class<VR512>))  [2.01;2.01]
		 Successful, latency: 2.01
	VPAVGWZrrk(3(Class<VR512>) -> 0(Class<VR512>))  [2.02;2.02]
		 Successful, latency: 2.02
	VPAVGWZrrk(4(Class<VR512>) -> 0(Class<VR512>))  [2.01;2.01]
		 Successful, latency: 2.01

-----VPAVGWZrrkz-----
	VPAVGWZrrkz(2(Class<VR512>) -> 0(Class<VR512>))  [2.02;2.02]
		 Successful, latency: 2.02
	VPAVGWZrrkz(3(Class<VR512>) -> 0(Class<VR512>))  [2.02;2.02]
		 Successful, latency: 2.02

-----VPAVGWrr-----
	VPAVGWrr(1(Class<VR128>) -> 0(Class<VR128>))  [2.02;2.02]
		 Successful, latency: 2.02
	VPAVGWrr(2(Class<VR128>) -> 0(Class<VR128>))  [2.04;2.04]
		 Successful, latency: 2.04

-----VPBLENDDYrri-----
	VPBLENDDYrri(1(Class<VR256>) -> 0(Class<VR256>))  [1;1]
		 Successful, latency: 1
	VPBLENDDYrri(2(Class<VR256>) -> 0(Class<VR256>))  [1.01;1.01]
		 Successful, latency: 1.01

-----VPBLENDDrri-----
	VPBLENDDrri(1(Class<VR128>) -> 0(Class<VR128>))  [1;1]
		 Successful, latency: 1
	VPBLENDDrri(2(Class<VR128>) -> 0(Class<VR128>))  [1.01;1.01]
		 Successful, latency: 1.01

-----VPBLENDMBZ128rr-----
	VPBLENDMBZ128rr(1(Class<VR128X>) -> 0(Class<VR128X>))  [1.01;1.01]
		 Successful, latency: 1.01
	VPBLENDMBZ128rr(2(Class<VR128X>) -> 0(Class<VR128X>))  [1.01;1.01]
		 Successful, latency: 1.01

-----VPBLENDMBZ128rrk-----
	VPBLENDMBZ128rrk(2(Class<VR128X>) -> 0(Class<VR128X>))  [1;1]
		 Successful, latency: 1
	VPBLENDMBZ128rrk(3(Class<VR128X>) -> 0(Class<VR128X>))  [1.02;1.02]
		 Successful, latency: 1.02

-----VPBLENDMBZ128rrkz-----
	VPBLENDMBZ128rrkz(2(Class<VR128X>) -> 0(Class<VR128X>))  [1;1]
		 Successful, latency: 1
	VPBLENDMBZ128rrkz(3(Class<VR128X>) -> 0(Class<VR128X>))  [0.998;0.998]
		 Successful, latency: 0.998

-----VPBLENDMBZ256rr-----
	VPBLENDMBZ256rr(1(Class<VR256X>) -> 0(Class<VR256X>))  [1;1]
		 Successful, latency: 1
	VPBLENDMBZ256rr(2(Class<VR256X>) -> 0(Class<VR256X>))  [1.01;1.01]
		 Successful, latency: 1.01

-----VPBLENDMBZ256rrk-----
	VPBLENDMBZ256rrk(2(Class<VR256X>) -> 0(Class<VR256X>))  [1;1]
		 Successful, latency: 1
	VPBLENDMBZ256rrk(3(Class<VR256X>) -> 0(Class<VR256X>))  [1;1]
		 Successful, latency: 1

-----VPBLENDMBZ256rrkz-----
	VPBLENDMBZ256rrkz(2(Class<VR256X>) -> 0(Class<VR256X>))  [1;1]
		 Successful, latency: 1
	VPBLENDMBZ256rrkz(3(Class<VR256X>) -> 0(Class<VR256X>))  [1;1]
		 Successful, latency: 1

-----VPBLENDMBZrr-----
	VPBLENDMBZrr(1(Class<VR512>) -> 0(Class<VR512>))  [0.999;0.999]
		 Successful, latency: 0.999
	VPBLENDMBZrr(2(Class<VR512>) -> 0(Class<VR512>))  [1.01;1.01]
		 Successful, latency: 1.01

-----VPBLENDMBZrrk-----
	VPBLENDMBZrrk(2(Class<VR512>) -> 0(Class<VR512>))  [1.01;1.01]
		 Successful, latency: 1.01
	VPBLENDMBZrrk(3(Class<VR512>) -> 0(Class<VR512>))  [1.02;1.02]
		 Successful, latency: 1.02

-----VPBLENDMBZrrkz-----
	VPBLENDMBZrrkz(2(Class<VR512>) -> 0(Class<VR512>))  [1;1]
		 Successful, latency: 1
	VPBLENDMBZrrkz(3(Class<VR512>) -> 0(Class<VR512>))  [1.01;1.01]
		 Successful, latency: 1.01

-----VPBLENDMDZ128rr-----
	VPBLENDMDZ128rr(1(Class<VR128X>) -> 0(Class<VR128X>))  [1.01;1.01]
		 Successful, latency: 1.01
	VPBLENDMDZ128rr(2(Class<VR128X>) -> 0(Class<VR128X>))  [1.01;1.01]
		 Successful, latency: 1.01

-----VPBLENDMDZ128rrk-----
	VPBLENDMDZ128rrk(2(Class<VR128X>) -> 0(Class<VR128X>))  [1;1]
		 Successful, latency: 1
	VPBLENDMDZ128rrk(3(Class<VR128X>) -> 0(Class<VR128X>))  [1.01;1.01]
		 Successful, latency: 1.01

-----VPBLENDMDZ128rrkz-----
	VPBLENDMDZ128rrkz(2(Class<VR128X>) -> 0(Class<VR128X>))  [1;1]
		 Successful, latency: 1
	VPBLENDMDZ128rrkz(3(Class<VR128X>) -> 0(Class<VR128X>))  [1.01;1.01]
		 Successful, latency: 1.01

-----VPBLENDMDZ256rr-----
	VPBLENDMDZ256rr(1(Class<VR256X>) -> 0(Class<VR256X>))  [1.01;1.01]
		 Successful, latency: 1.01
	VPBLENDMDZ256rr(2(Class<VR256X>) -> 0(Class<VR256X>))  [1.01;1.01]
		 Successful, latency: 1.01

-----VPBLENDMDZ256rrk-----
	VPBLENDMDZ256rrk(2(Class<VR256X>) -> 0(Class<VR256X>))  [1.01;1.01]
		 Successful, latency: 1.01
	VPBLENDMDZ256rrk(3(Class<VR256X>) -> 0(Class<VR256X>))  [1.01;1.01]
		 Successful, latency: 1.01

-----VPBLENDMDZ256rrkz-----
	VPBLENDMDZ256rrkz(2(Class<VR256X>) -> 0(Class<VR256X>))  [1.01;1.01]
		 Successful, latency: 1.01
	VPBLENDMDZ256rrkz(3(Class<VR256X>) -> 0(Class<VR256X>))  [0.996;0.996]
		 Successful, latency: 0.996

-----VPBLENDMDZrr-----
	VPBLENDMDZrr(1(Class<VR512>) -> 0(Class<VR512>))  [0.999;0.999]
		 Successful, latency: 0.999
	VPBLENDMDZrr(2(Class<VR512>) -> 0(Class<VR512>))  [1;1]
		 Successful, latency: 1

-----VPBLENDMDZrrk-----
	VPBLENDMDZrrk(2(Class<VR512>) -> 0(Class<VR512>))  [0.996;0.996]
		 Successful, latency: 0.996
	VPBLENDMDZrrk(3(Class<VR512>) -> 0(Class<VR512>))  [0.999;0.999]
		 Successful, latency: 0.999

-----VPBLENDMDZrrkz-----
	VPBLENDMDZrrkz(2(Class<VR512>) -> 0(Class<VR512>))  [1;1]
		 Successful, latency: 1
	VPBLENDMDZrrkz(3(Class<VR512>) -> 0(Class<VR512>))  [0.999;0.999]
		 Successful, latency: 0.999

-----VPBLENDMQZ128rr-----
	VPBLENDMQZ128rr(1(Class<VR128X>) -> 0(Class<VR128X>))  [1.02;1.02]
		 Successful, latency: 1.02
	VPBLENDMQZ128rr(2(Class<VR128X>) -> 0(Class<VR128X>))  [1.01;1.01]
		 Successful, latency: 1.01

-----VPBLENDMQZ128rrk-----
	VPBLENDMQZ128rrk(2(Class<VR128X>) -> 0(Class<VR128X>))  [1;1]
		 Successful, latency: 1
	VPBLENDMQZ128rrk(3(Class<VR128X>) -> 0(Class<VR128X>))  [0.998;0.998]
		 Successful, latency: 0.998

-----VPBLENDMQZ128rrkz-----
	VPBLENDMQZ128rrkz(2(Class<VR128X>) -> 0(Class<VR128X>))  [1;1]
		 Successful, latency: 1
	VPBLENDMQZ128rrkz(3(Class<VR128X>) -> 0(Class<VR128X>))  [1.01;1.01]
		 Successful, latency: 1.01

-----VPBLENDMQZ256rr-----
	VPBLENDMQZ256rr(1(Class<VR256X>) -> 0(Class<VR256X>))  [1.02;1.02]
		 Successful, latency: 1.02
	VPBLENDMQZ256rr(2(Class<VR256X>) -> 0(Class<VR256X>))  [1;1]
		 Successful, latency: 1

-----VPBLENDMQZ256rrk-----
	VPBLENDMQZ256rrk(2(Class<VR256X>) -> 0(Class<VR256X>))  [0.999;0.999]
		 Successful, latency: 0.999
	VPBLENDMQZ256rrk(3(Class<VR256X>) -> 0(Class<VR256X>))  [1.01;1.01]
		 Successful, latency: 1.01

-----VPBLENDMQZ256rrkz-----
	VPBLENDMQZ256rrkz(2(Class<VR256X>) -> 0(Class<VR256X>))  [1.01;1.01]
		 Successful, latency: 1.01
	VPBLENDMQZ256rrkz(3(Class<VR256X>) -> 0(Class<VR256X>))  [1.01;1.01]
		 Successful, latency: 1.01

-----VPBLENDMQZrr-----
	VPBLENDMQZrr(1(Class<VR512>) -> 0(Class<VR512>))  [1;1]
		 Successful, latency: 1
	VPBLENDMQZrr(2(Class<VR512>) -> 0(Class<VR512>))  [0.999;0.999]
		 Successful, latency: 0.999

-----VPBLENDMQZrrk-----
	VPBLENDMQZrrk(2(Class<VR512>) -> 0(Class<VR512>))  [1.02;1.02]
		 Successful, latency: 1.02
	VPBLENDMQZrrk(3(Class<VR512>) -> 0(Class<VR512>))  [1.01;1.01]
		 Successful, latency: 1.01

-----VPBLENDMQZrrkz-----
	VPBLENDMQZrrkz(2(Class<VR512>) -> 0(Class<VR512>))  [0.995;0.995]
		 Successful, latency: 0.995
	VPBLENDMQZrrkz(3(Class<VR512>) -> 0(Class<VR512>))  [1.01;1.01]
		 Successful, latency: 1.01

-----VPBLENDMWZ128rr-----
	VPBLENDMWZ128rr(1(Class<VR128X>) -> 0(Class<VR128X>))  [1;1]
		 Successful, latency: 1
	VPBLENDMWZ128rr(2(Class<VR128X>) -> 0(Class<VR128X>))  [1;1]
		 Successful, latency: 1

-----VPBLENDMWZ128rrk-----
	VPBLENDMWZ128rrk(2(Class<VR128X>) -> 0(Class<VR128X>))  [1.02;1.02]
		 Successful, latency: 1.02
	VPBLENDMWZ128rrk(3(Class<VR128X>) -> 0(Class<VR128X>))  [1.01;1.01]
		 Successful, latency: 1.01

-----VPBLENDMWZ128rrkz-----
	VPBLENDMWZ128rrkz(2(Class<VR128X>) -> 0(Class<VR128X>))  [1.01;1.01]
		 Successful, latency: 1.01
	VPBLENDMWZ128rrkz(3(Class<VR128X>) -> 0(Class<VR128X>))  [0.999;0.999]
		 Successful, latency: 0.999

-----VPBLENDMWZ256rr-----
	VPBLENDMWZ256rr(1(Class<VR256X>) -> 0(Class<VR256X>))  [1.01;1.01]
		 Successful, latency: 1.01
	VPBLENDMWZ256rr(2(Class<VR256X>) -> 0(Class<VR256X>))  [1.01;1.01]
		 Successful, latency: 1.01

-----VPBLENDMWZ256rrk-----
	VPBLENDMWZ256rrk(2(Class<VR256X>) -> 0(Class<VR256X>))  [1.01;1.01]
		 Successful, latency: 1.01
	VPBLENDMWZ256rrk(3(Class<VR256X>) -> 0(Class<VR256X>))  [1.01;1.01]
		 Successful, latency: 1.01

-----VPBLENDMWZ256rrkz-----
	VPBLENDMWZ256rrkz(2(Class<VR256X>) -> 0(Class<VR256X>))  [1;1]
		 Successful, latency: 1
	VPBLENDMWZ256rrkz(3(Class<VR256X>) -> 0(Class<VR256X>))  [1.01;1.01]
		 Successful, latency: 1.01

-----VPBLENDMWZrr-----
	VPBLENDMWZrr(1(Class<VR512>) -> 0(Class<VR512>))  [1;1]
		 Successful, latency: 1
	VPBLENDMWZrr(2(Class<VR512>) -> 0(Class<VR512>))  [1.01;1.01]
		 Successful, latency: 1.01

-----VPBLENDMWZrrk-----
	VPBLENDMWZrrk(2(Class<VR512>) -> 0(Class<VR512>))  [1.02;1.02]
		 Successful, latency: 1.02
	VPBLENDMWZrrk(3(Class<VR512>) -> 0(Class<VR512>))  [1.01;1.01]
		 Successful, latency: 1.01

-----VPBLENDMWZrrkz-----
	VPBLENDMWZrrkz(2(Class<VR512>) -> 0(Class<VR512>))  [1;1]
		 Successful, latency: 1
	VPBLENDMWZrrkz(3(Class<VR512>) -> 0(Class<VR512>))  [1.01;1.01]
		 Successful, latency: 1.01

-----VPBLENDVBYrrr-----
	VPBLENDVBYrrr(1(Class<VR256>) -> 0(Class<VR256>))  [1;1]
		 Successful, latency: 1
	VPBLENDVBYrrr(2(Class<VR256>) -> 0(Class<VR256>))  [1.01;1.01]
		 Successful, latency: 1.01
	VPBLENDVBYrrr(3(Class<VR256>) -> 0(Class<VR256>))  [0.999;0.999]
		 Successful, latency: 0.999

-----VPBLENDVBrrr-----
	VPBLENDVBrrr(1(Class<VR128>) -> 0(Class<VR128>))  [1.01;1.01]
		 Successful, latency: 1.01
	VPBLENDVBrrr(2(Class<VR128>) -> 0(Class<VR128>))  [1.01;1.01]
		 Successful, latency: 1.01
	VPBLENDVBrrr(3(Class<VR128>) -> 0(Class<VR128>))  [1.01;1.01]
		 Successful, latency: 1.01

-----VPBLENDWYrri-----
	VPBLENDWYrri(1(Class<VR256>) -> 0(Class<VR256>))  [1;1]
		 Successful, latency: 1
	VPBLENDWYrri(2(Class<VR256>) -> 0(Class<VR256>))  [1;1]
		 Successful, latency: 1

-----VPBLENDWrri-----
	VPBLENDWrri(1(Class<VR128>) -> 0(Class<VR128>))  [1.01;1.01]
		 Successful, latency: 1.01
	VPBLENDWrri(2(Class<VR128>) -> 0(Class<VR128>))  [1.01;1.01]
		 Successful, latency: 1.01

-----VPBROADCASTBYrr-----
	VPBROADCASTBYrr(1(Class<VR128>) -> 0(Class<VR256>))  [0.991;3.02]
		Dependencies:
			VEXTRACTF128rri(1(Class<VR256>) -> 0(Class<VR128>)) 
			VPBROADCASTWYrr(1(Class<VR128>) -> 0(Class<VR256>)) 
		Combined result: 4.03 cycles

-----VPBROADCASTBZ128rr-----
	VPBROADCASTBZ128rr(1(Class<VR128X>) -> 0(Class<VR128X>))  [1.01;1.01]
		 Successful, latency: 1.01

-----VPBROADCASTBZ128rrk-----
	VPBROADCASTBZ128rrk(1(Class<VR128X>) -> 0(Class<VR128X>))  [1.01;1.01]
		 Successful, latency: 1.01
	VPBROADCASTBZ128rrk(3(Class<VR128X>) -> 0(Class<VR128X>))  [1;1]
		 Successful, latency: 1

-----VPBROADCASTBZ128rrkz-----
	VPBROADCASTBZ128rrkz(2(Class<VR128X>) -> 0(Class<VR128X>))  [1.01;1.01]
		 Successful, latency: 1.01

-----VPBROADCASTBZ256rr-----
	VPBROADCASTBZ256rr(1(Class<VR128X>) -> 0(Class<VR256X>))  [0.999;3.02]
		Dependencies:
			VEXTRACTI32X4Z256rrik(3(Class<VR256X>) -> 0(Class<VR128X>)) 
			VBROADCASTF32X2Z256rr(1(Class<VR128X>) -> 0(Class<VR256X>)) 
		Combined result: 4.04 cycles

-----VPBROADCASTBZ256rrk-----
	VPBROADCASTBZ256rrk(1(Class<VR256X>) -> 0(Class<VR256X>))  [1.02;1.02]
		 Successful, latency: 1.02
	VPBROADCASTBZ256rrk(3(Class<VR128X>) -> 0(Class<VR256X>))  [0.99;3.01]
		Dependencies:
			VEXTRACTI32X4Z256rrik(3(Class<VR256X>) -> 0(Class<VR128X>)) 
			VBROADCASTF32X2Z256rr(1(Class<VR128X>) -> 0(Class<VR256X>)) 
		Combined result: 4.03 cycles

-----VPBROADCASTBZ256rrkz-----
	VPBROADCASTBZ256rrkz(2(Class<VR128X>) -> 0(Class<VR256X>))  [0.974;3]
		Dependencies:
			VEXTRACTI32X4Z256rrik(3(Class<VR256X>) -> 0(Class<VR128X>)) 
			VBROADCASTF32X2Z256rr(1(Class<VR128X>) -> 0(Class<VR256X>)) 
		Combined result: 4.02 cycles

-----VPBROADCASTBZrr-----
	VPBROADCASTBZrr(1(Class<VR128X>) -> 0(Class<VR512>))  [1.04;4.06]
		Dependencies:
			VEXTRACTF64X2Zrri(1(Class<VR512>) -> 0(Class<VR128X>)) 
			VINSERTF32X4Zrri(2(Class<VR128X>) -> 0(Class<VR512>)) 
		Combined result: 5.09 cycles

-----VPBROADCASTBZrrk-----
	VPBROADCASTBZrrk(1(Class<VR512>) -> 0(Class<VR512>))  [1.01;1.01]
		 Successful, latency: 1.01
	VPBROADCASTBZrrk(3(Class<VR128X>) -> 0(Class<VR512>))  [1.02;4.04]
		Dependencies:
			VEXTRACTF64X2Zrri(1(Class<VR512>) -> 0(Class<VR128X>)) 
			VINSERTF32X4Zrri(2(Class<VR128X>) -> 0(Class<VR512>)) 
		Combined result: 5.07 cycles

-----VPBROADCASTBZrrkz-----
	VPBROADCASTBZrrkz(2(Class<VR128X>) -> 0(Class<VR512>))  [0.986;4.01]
		Dependencies:
			VEXTRACTF64X2Zrri(1(Class<VR512>) -> 0(Class<VR128X>)) 
			VINSERTF32X4Zrri(2(Class<VR128X>) -> 0(Class<VR512>)) 
		Combined result: 5.04 cycles

-----VPBROADCASTBrZ128rr-----
	VPBROADCASTBrZ128rr(1(Class<GR32>) -> 0(Class<VR128X>))  [2;6.06]
		Dependencies:
			VMOVPDI2DIZrr(1(Class<VR128X>) -> 0(Class<GR32>)) 
			VMOVDI2PDIZrr(1(Class<GR32>) -> 0(Class<VR128X>)) 
		Combined result: 7.05 cycles

-----VPBROADCASTBrZ128rrk-----
	VPBROADCASTBrZ128rrk(1(Class<VR128X>) -> 0(Class<VR128X>))  [1.01;1.01]
		 Successful, latency: 1.01
	VPBROADCASTBrZ128rrk(3(Class<GR32>) -> 0(Class<VR128X>))  [2.06;6.12]
		Dependencies:
			VMOVPDI2DIZrr(1(Class<VR128X>) -> 0(Class<GR32>)) 
			VMOVDI2PDIZrr(1(Class<GR32>) -> 0(Class<VR128X>)) 
		Combined result: 7.12 cycles

-----VPBROADCASTBrZ128rrkz-----
	VPBROADCASTBrZ128rrkz(2(Class<GR32>) -> 0(Class<VR128X>))  [2.02;6.07]
		Dependencies:
			VMOVPDI2DIZrr(1(Class<VR128X>) -> 0(Class<GR32>)) 
			VMOVDI2PDIZrr(1(Class<GR32>) -> 0(Class<VR128X>)) 
		Combined result: 7.07 cycles

-----VPBROADCASTBrZ256rrk-----
	VPBROADCASTBrZ256rrk(1(Class<VR256X>) -> 0(Class<VR256X>))  [1;1]
		 Successful, latency: 1

-----VPBROADCASTBrZrrk-----
	VPBROADCASTBrZrrk(1(Class<VR512>) -> 0(Class<VR512>))  [1.04;1.04]
		 Successful, latency: 1.04

-----VPBROADCASTBrr-----
	VPBROADCASTBrr(1(Class<VR128>) -> 0(Class<VR128>))  [0.999;0.999]
		 Successful, latency: 0.999

-----VPBROADCASTDYrr-----
	VPBROADCASTDYrr(1(Class<VR128>) -> 0(Class<VR256>))  [1.03;3.06]
		Dependencies:
			VEXTRACTF128rri(1(Class<VR256>) -> 0(Class<VR128>)) 
			VPBROADCASTWYrr(1(Class<VR128>) -> 0(Class<VR256>)) 
		Combined result: 4.07 cycles

-----VPBROADCASTDZ128rr-----
	VPBROADCASTDZ128rr(1(Class<VR128X>) -> 0(Class<VR128X>))  [1.01;1.01]
		 Successful, latency: 1.01

-----VPBROADCASTDZ128rrk-----
	VPBROADCASTDZ128rrk(1(Class<VR128X>) -> 0(Class<VR128X>))  [0.998;0.998]
		 Successful, latency: 0.998
	VPBROADCASTDZ128rrk(3(Class<VR128X>) -> 0(Class<VR128X>))  [1.02;1.02]
		 Successful, latency: 1.02

-----VPBROADCASTDZ128rrkz-----
	VPBROADCASTDZ128rrkz(2(Class<VR128X>) -> 0(Class<VR128X>))  [1.01;1.01]
		 Successful, latency: 1.01

-----VPBROADCASTDZ256rr-----
	VPBROADCASTDZ256rr(1(Class<VR128X>) -> 0(Class<VR256X>))  [0.987;3.01]
		Dependencies:
			VEXTRACTI32X4Z256rrik(3(Class<VR256X>) -> 0(Class<VR128X>)) 
			VBROADCASTF32X2Z256rr(1(Class<VR128X>) -> 0(Class<VR256X>)) 
		Combined result: 4.03 cycles

-----VPBROADCASTDZ256rrk-----
	VPBROADCASTDZ256rrk(1(Class<VR256X>) -> 0(Class<VR256X>))  [1.01;1.01]
		 Successful, latency: 1.01
	VPBROADCASTDZ256rrk(3(Class<VR128X>) -> 0(Class<VR256X>))  [0.985;3.01]
		Dependencies:
			VEXTRACTI32X4Z256rrik(3(Class<VR256X>) -> 0(Class<VR128X>)) 
			VBROADCASTF32X2Z256rr(1(Class<VR128X>) -> 0(Class<VR256X>)) 
		Combined result: 4.03 cycles

-----VPBROADCASTDZ256rrkz-----
	VPBROADCASTDZ256rrkz(2(Class<VR128X>) -> 0(Class<VR256X>))  [0.996;3.02]
		Dependencies:
			VEXTRACTI32X4Z256rrik(3(Class<VR256X>) -> 0(Class<VR128X>)) 
			VBROADCASTF32X2Z256rr(1(Class<VR128X>) -> 0(Class<VR256X>)) 
		Combined result: 4.04 cycles

-----VPBROADCASTDZrr-----
	VPBROADCASTDZrr(1(Class<VR128X>) -> 0(Class<VR512>))  [0.996;4.02]
		Dependencies:
			VEXTRACTF64X2Zrri(1(Class<VR512>) -> 0(Class<VR128X>)) 
			VINSERTF32X4Zrri(2(Class<VR128X>) -> 0(Class<VR512>)) 
		Combined result: 5.05 cycles

-----VPBROADCASTDZrrk-----
	VPBROADCASTDZrrk(1(Class<VR512>) -> 0(Class<VR512>))  [0.998;0.998]
		 Successful, latency: 0.998
	VPBROADCASTDZrrk(3(Class<VR128X>) -> 0(Class<VR512>))  [1.07;4.09]
		Dependencies:
			VEXTRACTF64X2Zrri(1(Class<VR512>) -> 0(Class<VR128X>)) 
			VINSERTF32X4Zrri(2(Class<VR128X>) -> 0(Class<VR512>)) 
		Combined result: 5.12 cycles

-----VPBROADCASTDZrrkz-----
	VPBROADCASTDZrrkz(2(Class<VR128X>) -> 0(Class<VR512>))  [0.985;4.01]
		Dependencies:
			VEXTRACTF64X2Zrri(1(Class<VR512>) -> 0(Class<VR128X>)) 
			VINSERTF32X4Zrri(2(Class<VR128X>) -> 0(Class<VR512>)) 
		Combined result: 5.04 cycles

-----VPBROADCASTDrZ128rr-----
	VPBROADCASTDrZ128rr(1(Class<GR32>) -> 0(Class<VR128X>))  [1.98;6.04]
		Dependencies:
			VMOVPDI2DIZrr(1(Class<VR128X>) -> 0(Class<GR32>)) 
			VMOVDI2PDIZrr(1(Class<GR32>) -> 0(Class<VR128X>)) 
		Combined result: 7.03 cycles

-----VPBROADCASTDrZ128rrk-----
	VPBROADCASTDrZ128rrk(1(Class<VR128X>) -> 0(Class<VR128X>))  [1.01;1.01]
		 Successful, latency: 1.01
	VPBROADCASTDrZ128rrk(3(Class<GR32>) -> 0(Class<VR128X>))  [2;6.06]
		Dependencies:
			VMOVPDI2DIZrr(1(Class<VR128X>) -> 0(Class<GR32>)) 
			VMOVDI2PDIZrr(1(Class<GR32>) -> 0(Class<VR128X>)) 
		Combined result: 7.05 cycles

-----VPBROADCASTDrZ128rrkz-----
	VPBROADCASTDrZ128rrkz(2(Class<GR32>) -> 0(Class<VR128X>))  [2.01;6.06]
		Dependencies:
			VMOVPDI2DIZrr(1(Class<VR128X>) -> 0(Class<GR32>)) 
			VMOVDI2PDIZrr(1(Class<GR32>) -> 0(Class<VR128X>)) 
		Combined result: 7.06 cycles

-----VPBROADCASTDrZ256rrk-----
	VPBROADCASTDrZ256rrk(1(Class<VR256X>) -> 0(Class<VR256X>))  [1.01;1.01]
		 Successful, latency: 1.01

-----VPBROADCASTDrZrrk-----
	VPBROADCASTDrZrrk(1(Class<VR512>) -> 0(Class<VR512>))  [1.04;1.04]
		 Successful, latency: 1.04

-----VPBROADCASTDrr-----
	VPBROADCASTDrr(1(Class<VR128>) -> 0(Class<VR128>))  [1.01;1.01]
		 Successful, latency: 1.01

-----VPBROADCASTMB2QZ128rr-----
	VPBROADCASTMB2QZ128rr(1(Class<VK8>) -> 0(Class<VR128X>))  [1.99;4.01]
		Dependencies:
			VPCMPGTWZ128rr(1(Class<VR128X>) -> 0(Class<VK8>)) 
			VPMOVM2WZ128rk(1(Class<VK8>) -> 0(Class<VR128X>)) 
		Combined result: 5.05 cycles

-----VPBROADCASTMB2QZ256rr-----
	VPBROADCASTMB2QZ256rr(1(Class<VK8>) -> 0(Class<VR256X>))  [2.02;5.05]
		Dependencies:
			VCMPPSZ256rri(1(Class<VR256X>) -> 0(Class<VK8>)) 
			VPMOVM2DZ256rk(1(Class<VK8>) -> 0(Class<VR256X>)) 
		Combined result: 6.04 cycles

-----VPBROADCASTMB2QZrr-----
	VPBROADCASTMB2QZrr(1(Class<VK8>) -> 0(Class<VR512>))  [1.93;6.04]
		Dependencies:
			VPCMPQZrrik(2(Class<VR512>) -> 0(Class<VK8>)) 
			VPMOVM2QZrk(1(Class<VK8>) -> 0(Class<VR512>)) 
		Combined result: 7.09 cycles

-----VPBROADCASTMW2DZ128rr-----
	VPBROADCASTMW2DZ128rr(1(Class<VK16>) -> 0(Class<VR128X>))  [2.03;4.05]
		Dependencies:
			VPMOVB2MZ128kr(1(Class<VR128X>) -> 0(Class<VK16>)) 
			VPMOVM2BZ128rk(1(Class<VK16>) -> 0(Class<VR128X>)) 
		Combined result: 5.07 cycles

-----VPBROADCASTMW2DZ256rr-----
	VPBROADCASTMW2DZ256rr(1(Class<VK16>) -> 0(Class<VR256X>))  [2;5.02]
		Dependencies:
			VPCMPEQWZ256rr(2(Class<VR256X>) -> 0(Class<VK16>)) 
			VPMOVM2WZ256rk(1(Class<VK16>) -> 0(Class<VR256X>)) 
		Combined result: 6.05 cycles

-----VPBROADCASTMW2DZrr-----
	VPBROADCASTMW2DZrr(1(Class<VK16>) -> 0(Class<VR512>))  [1.88;6.01]
		Dependencies:
			VPTESTNMDZrr(2(Class<VR512>) -> 0(Class<VK16>)) 
			VPMOVM2DZrk(1(Class<VK16>) -> 0(Class<VR512>)) 
		Combined result: 7.06 cycles

-----VPBROADCASTQYrr-----
	VPBROADCASTQYrr(1(Class<VR128>) -> 0(Class<VR256>))  [0.969;3]
		Dependencies:
			VEXTRACTF128rri(1(Class<VR256>) -> 0(Class<VR128>)) 
			VPBROADCASTWYrr(1(Class<VR128>) -> 0(Class<VR256>)) 
		Combined result: 4.01 cycles

-----VPBROADCASTQZ128rr-----
	VPBROADCASTQZ128rr(1(Class<VR128X>) -> 0(Class<VR128X>))  [1.01;1.01]
		 Successful, latency: 1.01

-----VPBROADCASTQZ128rrk-----
	VPBROADCASTQZ128rrk(1(Class<VR128X>) -> 0(Class<VR128X>))  [1;1]
		 Successful, latency: 1
	VPBROADCASTQZ128rrk(3(Class<VR128X>) -> 0(Class<VR128X>))  [1;1]
		 Successful, latency: 1

-----VPBROADCASTQZ128rrkz-----
	VPBROADCASTQZ128rrkz(2(Class<VR128X>) -> 0(Class<VR128X>))  [1;1]
		 Successful, latency: 1

-----VPBROADCASTQZ256rr-----
	VPBROADCASTQZ256rr(1(Class<VR128X>) -> 0(Class<VR256X>))  [0.986;3.01]
		Dependencies:
			VEXTRACTI32X4Z256rrik(3(Class<VR256X>) -> 0(Class<VR128X>)) 
			VBROADCASTF32X2Z256rr(1(Class<VR128X>) -> 0(Class<VR256X>)) 
		Combined result: 4.03 cycles

-----VPBROADCASTQZ256rrk-----
	VPBROADCASTQZ256rrk(1(Class<VR256X>) -> 0(Class<VR256X>))  [1.01;1.01]
		 Successful, latency: 1.01
	VPBROADCASTQZ256rrk(3(Class<VR128X>) -> 0(Class<VR256X>))  [0.989;3.01]
		Dependencies:
			VEXTRACTI32X4Z256rrik(3(Class<VR256X>) -> 0(Class<VR128X>)) 
			VBROADCASTF32X2Z256rr(1(Class<VR128X>) -> 0(Class<VR256X>)) 
		Combined result: 4.03 cycles

-----VPBROADCASTQZ256rrkz-----
	VPBROADCASTQZ256rrkz(2(Class<VR128X>) -> 0(Class<VR256X>))  [0.982;3]
		Dependencies:
			VEXTRACTI32X4Z256rrik(3(Class<VR256X>) -> 0(Class<VR128X>)) 
			VBROADCASTF32X2Z256rr(1(Class<VR128X>) -> 0(Class<VR256X>)) 
		Combined result: 4.03 cycles

-----VPBROADCASTQZrr-----
	VPBROADCASTQZrr(1(Class<VR128X>) -> 0(Class<VR512>))  [1.03;4.05]
		Dependencies:
			VEXTRACTF64X2Zrri(1(Class<VR512>) -> 0(Class<VR128X>)) 
			VINSERTF32X4Zrri(2(Class<VR128X>) -> 0(Class<VR512>)) 
		Combined result: 5.08 cycles

-----VPBROADCASTQZrrk-----
	VPBROADCASTQZrrk(1(Class<VR512>) -> 0(Class<VR512>))  [1;1]
		 Successful, latency: 1
	VPBROADCASTQZrrk(3(Class<VR128X>) -> 0(Class<VR512>))  [1.01;4.03]
		Dependencies:
			VEXTRACTF64X2Zrri(1(Class<VR512>) -> 0(Class<VR128X>)) 
			VINSERTF32X4Zrri(2(Class<VR128X>) -> 0(Class<VR512>)) 
		Combined result: 5.06 cycles

-----VPBROADCASTQZrrkz-----
	VPBROADCASTQZrrkz(2(Class<VR128X>) -> 0(Class<VR512>))  [0.987;4.01]
		Dependencies:
			VEXTRACTF64X2Zrri(1(Class<VR512>) -> 0(Class<VR128X>)) 
			VINSERTF32X4Zrri(2(Class<VR128X>) -> 0(Class<VR512>)) 
		Combined result: 5.04 cycles

-----VPBROADCASTQrZ128rr-----
	VPBROADCASTQrZ128rr(1(Class<GR64>) -> 0(Class<VR128X>))  [2.02;6.05]
		Dependencies:
			VMOVPQIto64Zrr(1(Class<VR128X>) -> 0(Class<GR64>)) 
			VMOV64toPQIZrr(1(Class<GR64>) -> 0(Class<VR128X>)) 
		Combined result: 7.06 cycles

-----VPBROADCASTQrZ128rrk-----
	VPBROADCASTQrZ128rrk(1(Class<VR128X>) -> 0(Class<VR128X>))  [1.01;1.01]
		 Successful, latency: 1.01
	VPBROADCASTQrZ128rrk(3(Class<GR64>) -> 0(Class<VR128X>))  [2.04;6.08]
		Dependencies:
			VMOVPQIto64Zrr(1(Class<VR128X>) -> 0(Class<GR64>)) 
			VMOV64toPQIZrr(1(Class<GR64>) -> 0(Class<VR128X>)) 
		Combined result: 7.08 cycles

-----VPBROADCASTQrZ128rrkz-----
	VPBROADCASTQrZ128rrkz(2(Class<GR64>) -> 0(Class<VR128X>))  [2.01;6.04]
		Dependencies:
			VMOVPQIto64Zrr(1(Class<VR128X>) -> 0(Class<GR64>)) 
			VMOV64toPQIZrr(1(Class<GR64>) -> 0(Class<VR128X>)) 
		Combined result: 7.05 cycles

-----VPBROADCASTQrZ256rrk-----
	VPBROADCASTQrZ256rrk(1(Class<VR256X>) -> 0(Class<VR256X>))  [1;1]
		 Successful, latency: 1

-----VPBROADCASTQrZrrk-----
	VPBROADCASTQrZrrk(1(Class<VR512>) -> 0(Class<VR512>))  [1.04;1.04]
		 Successful, latency: 1.04

-----VPBROADCASTQrr-----
	VPBROADCASTQrr(1(Class<VR128>) -> 0(Class<VR128>))  [1.02;1.02]
		 Successful, latency: 1.02

-----VPBROADCASTWYrr-----
	VPBROADCASTWYrr(1(Class<VR128>) -> 0(Class<VR256>))  [0.982;3.01]
		Dependencies:
			VEXTRACTF128rri(1(Class<VR256>) -> 0(Class<VR128>)) 
			VPBROADCASTWYrr(1(Class<VR128>) -> 0(Class<VR256>)) 
		Combined result: 4.03 cycles

-----VPBROADCASTWZ128rr-----
	VPBROADCASTWZ128rr(1(Class<VR128X>) -> 0(Class<VR128X>))  [1.01;1.01]
		 Successful, latency: 1.01

-----VPBROADCASTWZ128rrk-----
	VPBROADCASTWZ128rrk(1(Class<VR128X>) -> 0(Class<VR128X>))  [1.01;1.01]
		 Successful, latency: 1.01
	VPBROADCASTWZ128rrk(3(Class<VR128X>) -> 0(Class<VR128X>))  [1;1]
		 Successful, latency: 1

-----VPBROADCASTWZ128rrkz-----
	VPBROADCASTWZ128rrkz(2(Class<VR128X>) -> 0(Class<VR128X>))  [1.01;1.01]
		 Successful, latency: 1.01

-----VPBROADCASTWZ256rr-----
	VPBROADCASTWZ256rr(1(Class<VR128X>) -> 0(Class<VR256X>))  [0.99;3.01]
		Dependencies:
			VEXTRACTI32X4Z256rrik(3(Class<VR256X>) -> 0(Class<VR128X>)) 
			VBROADCASTF32X2Z256rr(1(Class<VR128X>) -> 0(Class<VR256X>)) 
		Combined result: 4.03 cycles

-----VPBROADCASTWZ256rrk-----
	VPBROADCASTWZ256rrk(1(Class<VR256X>) -> 0(Class<VR256X>))  [1.02;1.02]
		 Successful, latency: 1.02
	VPBROADCASTWZ256rrk(3(Class<VR128X>) -> 0(Class<VR256X>))  [0.984;3]
		Dependencies:
			VEXTRACTI32X4Z256rrik(3(Class<VR256X>) -> 0(Class<VR128X>)) 
			VBROADCASTF32X2Z256rr(1(Class<VR128X>) -> 0(Class<VR256X>)) 
		Combined result: 4.03 cycles

-----VPBROADCASTWZ256rrkz-----
	VPBROADCASTWZ256rrkz(2(Class<VR128X>) -> 0(Class<VR256X>))  [0.986;3.01]
		Dependencies:
			VEXTRACTI32X4Z256rrik(3(Class<VR256X>) -> 0(Class<VR128X>)) 
			VBROADCASTF32X2Z256rr(1(Class<VR128X>) -> 0(Class<VR256X>)) 
		Combined result: 4.03 cycles

-----VPBROADCASTWZrr-----
	VPBROADCASTWZrr(1(Class<VR128X>) -> 0(Class<VR512>))  [1.03;4.05]
		Dependencies:
			VEXTRACTF64X2Zrri(1(Class<VR512>) -> 0(Class<VR128X>)) 
			VINSERTF32X4Zrri(2(Class<VR128X>) -> 0(Class<VR512>)) 
		Combined result: 5.08 cycles

-----VPBROADCASTWZrrk-----
	VPBROADCASTWZrrk(1(Class<VR512>) -> 0(Class<VR512>))  [1.02;1.02]
		 Successful, latency: 1.02
	VPBROADCASTWZrrk(3(Class<VR128X>) -> 0(Class<VR512>))  [1;4.03]
		Dependencies:
			VEXTRACTF64X2Zrri(1(Class<VR512>) -> 0(Class<VR128X>)) 
			VINSERTF32X4Zrri(2(Class<VR128X>) -> 0(Class<VR512>)) 
		Combined result: 5.05 cycles

-----VPBROADCASTWZrrkz-----
	VPBROADCASTWZrrkz(2(Class<VR128X>) -> 0(Class<VR512>))  [1;4.03]
		Dependencies:
			VEXTRACTF64X2Zrri(1(Class<VR512>) -> 0(Class<VR128X>)) 
			VINSERTF32X4Zrri(2(Class<VR128X>) -> 0(Class<VR512>)) 
		Combined result: 5.05 cycles

-----VPBROADCASTWrZ128rr-----
	VPBROADCASTWrZ128rr(1(Class<GR32>) -> 0(Class<VR128X>))  [2;6.06]
		Dependencies:
			VMOVPDI2DIZrr(1(Class<VR128X>) -> 0(Class<GR32>)) 
			VMOVDI2PDIZrr(1(Class<GR32>) -> 0(Class<VR128X>)) 
		Combined result: 7.06 cycles

-----VPBROADCASTWrZ128rrk-----
	VPBROADCASTWrZ128rrk(1(Class<VR128X>) -> 0(Class<VR128X>))  [1;1]
		 Successful, latency: 1
	VPBROADCASTWrZ128rrk(3(Class<GR32>) -> 0(Class<VR128X>))  [2;6.05]
		Dependencies:
			VMOVPDI2DIZrr(1(Class<VR128X>) -> 0(Class<GR32>)) 
			VMOVDI2PDIZrr(1(Class<GR32>) -> 0(Class<VR128X>)) 
		Combined result: 7.05 cycles

-----VPBROADCASTWrZ128rrkz-----
	VPBROADCASTWrZ128rrkz(2(Class<GR32>) -> 0(Class<VR128X>))  [2.02;6.07]
		Dependencies:
			VMOVPDI2DIZrr(1(Class<VR128X>) -> 0(Class<GR32>)) 
			VMOVDI2PDIZrr(1(Class<GR32>) -> 0(Class<VR128X>)) 
		Combined result: 7.07 cycles

-----VPBROADCASTWrZ256rrk-----
	VPBROADCASTWrZ256rrk(1(Class<VR256X>) -> 0(Class<VR256X>))  [1.01;1.01]
		 Successful, latency: 1.01

-----VPBROADCASTWrZrrk-----
	VPBROADCASTWrZrrk(1(Class<VR512>) -> 0(Class<VR512>))  [1.05;1.05]
		 Successful, latency: 1.05

-----VPBROADCASTWrr-----
	VPBROADCASTWrr(1(Class<VR128>) -> 0(Class<VR128>))  [1;1]
		 Successful, latency: 1

-----VPCLMULQDQYrri-----
	VPCLMULQDQYrri(1(Class<VR256>) -> 0(Class<VR256>))  [4.03;4.03]
		 Successful, latency: 4.03
	VPCLMULQDQYrri(2(Class<VR256>) -> 0(Class<VR256>))  [4.04;4.04]
		 Successful, latency: 4.04

-----VPCLMULQDQZ128rri-----
	VPCLMULQDQZ128rri(1(Class<VR128X>) -> 0(Class<VR128X>))  [4.03;4.03]
		 Successful, latency: 4.03
	VPCLMULQDQZ128rri(2(Class<VR128X>) -> 0(Class<VR128X>))  [4.03;4.03]
		 Successful, latency: 4.03

-----VPCLMULQDQZ256rri-----
	VPCLMULQDQZ256rri(1(Class<VR256X>) -> 0(Class<VR256X>))  [4.02;4.02]
		 Successful, latency: 4.02
	VPCLMULQDQZ256rri(2(Class<VR256X>) -> 0(Class<VR256X>))  [4.03;4.03]
		 Successful, latency: 4.03

-----VPCLMULQDQZrri-----
	VPCLMULQDQZrri(1(Class<VR512>) -> 0(Class<VR512>))  [4.03;4.03]
		 Successful, latency: 4.03
	VPCLMULQDQZrri(2(Class<VR512>) -> 0(Class<VR512>))  [4;4]
		 Successful, latency: 4

-----VPCLMULQDQrri-----
	VPCLMULQDQrri(1(Class<VR128>) -> 0(Class<VR128>))  [4.03;4.03]
		 Successful, latency: 4.03
	VPCLMULQDQrri(2(Class<VR128>) -> 0(Class<VR128>))  [4.03;4.03]
		 Successful, latency: 4.03

-----VPCMOVYrrr-----
	VPCMOVYrrr(1(Class<VR256>) -> 0(Class<VR256>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VPCMOVYrrr(2(Class<VR256>) -> 0(Class<VR256>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VPCMOVYrrr(3(Class<VR256>) -> 0(Class<VR256>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VPCMOVYrrr_REV-----
	VPCMOVYrrr_REV(1(Class<VR256>) -> 0(Class<VR256>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VPCMOVYrrr_REV(2(Class<VR256>) -> 0(Class<VR256>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VPCMOVYrrr_REV(3(Class<VR256>) -> 0(Class<VR256>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VPCMOVrrr-----
	VPCMOVrrr(1(Class<VR128>) -> 0(Class<VR128>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VPCMOVrrr(2(Class<VR128>) -> 0(Class<VR128>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VPCMOVrrr(3(Class<VR128>) -> 0(Class<VR128>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VPCMOVrrr_REV-----
	VPCMOVrrr_REV(1(Class<VR128>) -> 0(Class<VR128>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VPCMOVrrr_REV(2(Class<VR128>) -> 0(Class<VR128>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VPCMOVrrr_REV(3(Class<VR128>) -> 0(Class<VR128>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VPCMPBZ128rri-----
	VPCMPBZ128rri(1(Class<VR128X>) -> 0(Class<VK16>))  [1.02;3.04]
		Dependencies:
			VPMOVB2MZ128kr(1(Class<VR128X>) -> 0(Class<VK16>)) 
			VPMOVM2BZ128rk(1(Class<VK16>) -> 0(Class<VR128X>)) 
		Combined result: 4.04 cycles
	VPCMPBZ128rri(2(Class<VR128X>) -> 0(Class<VK16>))  [1.01;3.03]
		Dependencies:
			VPMOVB2MZ128kr(1(Class<VR128X>) -> 0(Class<VK16>)) 
			VPMOVM2BZ128rk(1(Class<VK16>) -> 0(Class<VR128X>)) 
		Combined result: 4.03 cycles

-----VPCMPBZ128rrik-----
	VPCMPBZ128rrik(2(Class<VR128X>) -> 0(Class<VK16>))  [1.01;3.03]
		Dependencies:
			VPMOVB2MZ128kr(1(Class<VR128X>) -> 0(Class<VK16>)) 
			VPMOVM2BZ128rk(1(Class<VK16>) -> 0(Class<VR128X>)) 
		Combined result: 4.03 cycles
	VPCMPBZ128rrik(3(Class<VR128X>) -> 0(Class<VK16>))  [1;3.02]
		Dependencies:
			VPMOVB2MZ128kr(1(Class<VR128X>) -> 0(Class<VK16>)) 
			VPMOVM2BZ128rk(1(Class<VK16>) -> 0(Class<VR128X>)) 
		Combined result: 4.02 cycles

-----VPCMPBZ256rri-----
	VPCMPBZ256rri(1(Class<VR256X>) -> 0(Class<VK32>))  [1.02;4.04]
		Dependencies:
			VPSHUFBITQMBZ256rr(1(Class<VR256X>) -> 0(Class<VK32>)) 
			VPMOVM2BZ256rk(1(Class<VK32>) -> 0(Class<VR256X>)) 
		Combined result: 5.04 cycles
	VPCMPBZ256rri(2(Class<VR256X>) -> 0(Class<VK32>))  [1.01;4.03]
		Dependencies:
			VPSHUFBITQMBZ256rr(1(Class<VR256X>) -> 0(Class<VK32>)) 
			VPMOVM2BZ256rk(1(Class<VK32>) -> 0(Class<VR256X>)) 
		Combined result: 5.03 cycles

-----VPCMPBZ256rrik-----
	VPCMPBZ256rrik(2(Class<VR256X>) -> 0(Class<VK32>))  [1.02;4.05]
		Dependencies:
			VPSHUFBITQMBZ256rr(1(Class<VR256X>) -> 0(Class<VK32>)) 
			VPMOVM2BZ256rk(1(Class<VK32>) -> 0(Class<VR256X>)) 
		Combined result: 5.05 cycles
	VPCMPBZ256rrik(3(Class<VR256X>) -> 0(Class<VK32>))  [1.01;4.03]
		Dependencies:
			VPSHUFBITQMBZ256rr(1(Class<VR256X>) -> 0(Class<VK32>)) 
			VPMOVM2BZ256rk(1(Class<VK32>) -> 0(Class<VR256X>)) 
		Combined result: 5.03 cycles

-----VPCMPBZrri-----
	VPCMPBZrri(1(Class<VR512>) -> 0(Class<VK64>))  [1.98;5.13]
		Dependencies:
			VPTESTNMBZrr(1(Class<VR512>) -> 0(Class<VK64>)) 
			VPMOVM2BZrk(1(Class<VK64>) -> 0(Class<VR512>)) 
		Combined result: 6.13 cycles
	VPCMPBZrri(2(Class<VR512>) -> 0(Class<VK64>))  [2.02;5.17]
		Dependencies:
			VPTESTNMBZrr(1(Class<VR512>) -> 0(Class<VK64>)) 
			VPMOVM2BZrk(1(Class<VK64>) -> 0(Class<VR512>)) 
		Combined result: 6.17 cycles

-----VPCMPBZrrik-----
	VPCMPBZrrik(2(Class<VR512>) -> 0(Class<VK64>))  [2.01;5.17]
		Dependencies:
			VPTESTNMBZrr(1(Class<VR512>) -> 0(Class<VK64>)) 
			VPMOVM2BZrk(1(Class<VK64>) -> 0(Class<VR512>)) 
		Combined result: 6.17 cycles
	VPCMPBZrrik(3(Class<VR512>) -> 0(Class<VK64>))  [1.99;5.15]
		Dependencies:
			VPTESTNMBZrr(1(Class<VR512>) -> 0(Class<VK64>)) 
			VPMOVM2BZrk(1(Class<VK64>) -> 0(Class<VR512>)) 
		Combined result: 6.15 cycles

-----VPCMPDZ128rri-----
	VPCMPDZ128rri(1(Class<VR128X>) -> 0(Class<VK4>))  [1.04;3.06]
		Dependencies:
			VPCMPEQDZ128rr(2(Class<VR128X>) -> 0(Class<VK4>)) 
			VPMOVM2DZ128rk(1(Class<VK4>) -> 0(Class<VR128X>)) 
		Combined result: 4.06 cycles
	VPCMPDZ128rri(2(Class<VR128X>) -> 0(Class<VK4>))  [0.997;3.02]
		Dependencies:
			VPCMPEQDZ128rr(2(Class<VR128X>) -> 0(Class<VK4>)) 
			VPMOVM2DZ128rk(1(Class<VK4>) -> 0(Class<VR128X>)) 
		Combined result: 4.02 cycles

-----VPCMPDZ128rrik-----
	VPCMPDZ128rrik(2(Class<VR128X>) -> 0(Class<VK4>))  [1.01;3.03]
		Dependencies:
			VPCMPEQDZ128rr(2(Class<VR128X>) -> 0(Class<VK4>)) 
			VPMOVM2DZ128rk(1(Class<VK4>) -> 0(Class<VR128X>)) 
		Combined result: 4.03 cycles
	VPCMPDZ128rrik(3(Class<VR128X>) -> 0(Class<VK4>))  [0.994;3.02]
		Dependencies:
			VPCMPEQDZ128rr(2(Class<VR128X>) -> 0(Class<VK4>)) 
			VPMOVM2DZ128rk(1(Class<VK4>) -> 0(Class<VR128X>)) 
		Combined result: 4.02 cycles

-----VPCMPDZ256rri-----
	VPCMPDZ256rri(1(Class<VR256X>) -> 0(Class<VK8>))  [1;4.04]
		Dependencies:
			VCMPPSZ256rri(1(Class<VR256X>) -> 0(Class<VK8>)) 
			VPMOVM2DZ256rk(1(Class<VK8>) -> 0(Class<VR256X>)) 
		Combined result: 5.04 cycles
	VPCMPDZ256rri(2(Class<VR256X>) -> 0(Class<VK8>))  [1.02;4.06]
		Dependencies:
			VCMPPSZ256rri(1(Class<VR256X>) -> 0(Class<VK8>)) 
			VPMOVM2DZ256rk(1(Class<VK8>) -> 0(Class<VR256X>)) 
		Combined result: 5.06 cycles

-----VPCMPDZ256rrik-----
	VPCMPDZ256rrik(2(Class<VR256X>) -> 0(Class<VK8>))  [1.02;4.06]
		Dependencies:
			VCMPPSZ256rri(1(Class<VR256X>) -> 0(Class<VK8>)) 
			VPMOVM2DZ256rk(1(Class<VK8>) -> 0(Class<VR256X>)) 
		Combined result: 5.06 cycles
	VPCMPDZ256rrik(3(Class<VR256X>) -> 0(Class<VK8>))  [1;4.04]
		Dependencies:
			VCMPPSZ256rri(1(Class<VR256X>) -> 0(Class<VK8>)) 
			VPMOVM2DZ256rk(1(Class<VK8>) -> 0(Class<VR256X>)) 
		Combined result: 5.04 cycles

-----VPCMPDZrri-----
	VPCMPDZrri(1(Class<VR512>) -> 0(Class<VK16>))  [0.982;5.12]
		Dependencies:
			VPTESTNMDZrr(2(Class<VR512>) -> 0(Class<VK16>)) 
			VPMOVM2DZrk(1(Class<VK16>) -> 0(Class<VR512>)) 
		Combined result: 6.12 cycles
	VPCMPDZrri(2(Class<VR512>) -> 0(Class<VK16>))  [1;5.13]
		Dependencies:
			VPTESTNMDZrr(2(Class<VR512>) -> 0(Class<VK16>)) 
			VPMOVM2DZrk(1(Class<VK16>) -> 0(Class<VR512>)) 
		Combined result: 6.13 cycles

-----VPCMPDZrrik-----
	VPCMPDZrrik(2(Class<VR512>) -> 0(Class<VK16>))  [1.05;5.18]
		Dependencies:
			VPTESTNMDZrr(2(Class<VR512>) -> 0(Class<VK16>)) 
			VPMOVM2DZrk(1(Class<VK16>) -> 0(Class<VR512>)) 
		Combined result: 6.18 cycles
	VPCMPDZrrik(3(Class<VR512>) -> 0(Class<VK16>))  [1.08;5.22]
		Dependencies:
			VPTESTNMDZrr(2(Class<VR512>) -> 0(Class<VK16>)) 
			VPMOVM2DZrk(1(Class<VK16>) -> 0(Class<VR512>)) 
		Combined result: 6.22 cycles

-----VPCMPEQBYrr-----
	VPCMPEQBYrr(1(Class<VR256>) -> 0(Class<VR256>))  [1;1]
		 Successful, latency: 1
	VPCMPEQBYrr(2(Class<VR256>) -> 0(Class<VR256>))  [1.02;1.02]
		 Successful, latency: 1.02

-----VPCMPEQBZ128rr-----
	VPCMPEQBZ128rr(1(Class<VR128X>) -> 0(Class<VK16>))  [1.02;3.04]
		Dependencies:
			VPMOVB2MZ128kr(1(Class<VR128X>) -> 0(Class<VK16>)) 
			VPMOVM2BZ128rk(1(Class<VK16>) -> 0(Class<VR128X>)) 
		Combined result: 4.04 cycles
	VPCMPEQBZ128rr(2(Class<VR128X>) -> 0(Class<VK16>))  [1.03;3.05]
		Dependencies:
			VPMOVB2MZ128kr(1(Class<VR128X>) -> 0(Class<VK16>)) 
			VPMOVM2BZ128rk(1(Class<VK16>) -> 0(Class<VR128X>)) 
		Combined result: 4.05 cycles

-----VPCMPEQBZ128rrk-----
	VPCMPEQBZ128rrk(2(Class<VR128X>) -> 0(Class<VK16>))  [1.03;3.05]
		Dependencies:
			VPMOVB2MZ128kr(1(Class<VR128X>) -> 0(Class<VK16>)) 
			VPMOVM2BZ128rk(1(Class<VK16>) -> 0(Class<VR128X>)) 
		Combined result: 4.05 cycles
	VPCMPEQBZ128rrk(3(Class<VR128X>) -> 0(Class<VK16>))  [1.01;3.03]
		Dependencies:
			VPMOVB2MZ128kr(1(Class<VR128X>) -> 0(Class<VK16>)) 
			VPMOVM2BZ128rk(1(Class<VK16>) -> 0(Class<VR128X>)) 
		Combined result: 4.03 cycles

-----VPCMPEQBZ256rr-----
	VPCMPEQBZ256rr(1(Class<VR256X>) -> 0(Class<VK32>))  [1.02;4.04]
		Dependencies:
			VPSHUFBITQMBZ256rr(1(Class<VR256X>) -> 0(Class<VK32>)) 
			VPMOVM2BZ256rk(1(Class<VK32>) -> 0(Class<VR256X>)) 
		Combined result: 5.04 cycles
	VPCMPEQBZ256rr(2(Class<VR256X>) -> 0(Class<VK32>))  [1.02;4.05]
		Dependencies:
			VPSHUFBITQMBZ256rr(1(Class<VR256X>) -> 0(Class<VK32>)) 
			VPMOVM2BZ256rk(1(Class<VK32>) -> 0(Class<VR256X>)) 
		Combined result: 5.05 cycles

-----VPCMPEQBZ256rrk-----
	VPCMPEQBZ256rrk(2(Class<VR256X>) -> 0(Class<VK32>))  [1.01;4.04]
		Dependencies:
			VPSHUFBITQMBZ256rr(1(Class<VR256X>) -> 0(Class<VK32>)) 
			VPMOVM2BZ256rk(1(Class<VK32>) -> 0(Class<VR256X>)) 
		Combined result: 5.04 cycles
	VPCMPEQBZ256rrk(3(Class<VR256X>) -> 0(Class<VK32>))  [1.02;4.04]
		Dependencies:
			VPSHUFBITQMBZ256rr(1(Class<VR256X>) -> 0(Class<VK32>)) 
			VPMOVM2BZ256rk(1(Class<VK32>) -> 0(Class<VR256X>)) 
		Combined result: 5.04 cycles

-----VPCMPEQBZrr-----
	VPCMPEQBZrr(1(Class<VR512>) -> 0(Class<VK64>))  [2.03;5.18]
		Dependencies:
			VPTESTNMBZrr(1(Class<VR512>) -> 0(Class<VK64>)) 
			VPMOVM2BZrk(1(Class<VK64>) -> 0(Class<VR512>)) 
		Combined result: 6.18 cycles
	VPCMPEQBZrr(2(Class<VR512>) -> 0(Class<VK64>))  [1.98;5.14]
		Dependencies:
			VPTESTNMBZrr(1(Class<VR512>) -> 0(Class<VK64>)) 
			VPMOVM2BZrk(1(Class<VK64>) -> 0(Class<VR512>)) 
		Combined result: 6.14 cycles

-----VPCMPEQBZrrk-----
	VPCMPEQBZrrk(2(Class<VR512>) -> 0(Class<VK64>))  [2.02;5.17]
		Dependencies:
			VPTESTNMBZrr(1(Class<VR512>) -> 0(Class<VK64>)) 
			VPMOVM2BZrk(1(Class<VK64>) -> 0(Class<VR512>)) 
		Combined result: 6.17 cycles
	VPCMPEQBZrrk(3(Class<VR512>) -> 0(Class<VK64>))  [2;5.16]
		Dependencies:
			VPTESTNMBZrr(1(Class<VR512>) -> 0(Class<VK64>)) 
			VPMOVM2BZrk(1(Class<VK64>) -> 0(Class<VR512>)) 
		Combined result: 6.16 cycles

-----VPCMPEQBrr-----
	VPCMPEQBrr(1(Class<VR128>) -> 0(Class<VR128>))  [1.01;1.01]
		 Successful, latency: 1.01
	VPCMPEQBrr(2(Class<VR128>) -> 0(Class<VR128>))  [1.01;1.01]
		 Successful, latency: 1.01

-----VPCMPEQDYrr-----
	VPCMPEQDYrr(1(Class<VR256>) -> 0(Class<VR256>))  [1.01;1.01]
		 Successful, latency: 1.01
	VPCMPEQDYrr(2(Class<VR256>) -> 0(Class<VR256>))  [1;1]
		 Successful, latency: 1

-----VPCMPEQDZ128rr-----
	VPCMPEQDZ128rr(1(Class<VR128X>) -> 0(Class<VK4>))  [1.02;3.05]
		Dependencies:
			VPCMPEQDZ128rr(2(Class<VR128X>) -> 0(Class<VK4>)) 
			VPMOVM2DZ128rk(1(Class<VK4>) -> 0(Class<VR128X>)) 
		Combined result: 4.05 cycles
	VPCMPEQDZ128rr(2(Class<VR128X>) -> 0(Class<VK4>))  [1.02;3.05]
		Dependencies:
			VPCMPEQDZ128rr(2(Class<VR128X>) -> 0(Class<VK4>)) 
			VPMOVM2DZ128rk(1(Class<VK4>) -> 0(Class<VR128X>)) 
		Combined result: 4.05 cycles

-----VPCMPEQDZ128rrk-----
	VPCMPEQDZ128rrk(2(Class<VR128X>) -> 0(Class<VK4>))  [0.997;3.02]
		Dependencies:
			VPCMPEQDZ128rr(2(Class<VR128X>) -> 0(Class<VK4>)) 
			VPMOVM2DZ128rk(1(Class<VK4>) -> 0(Class<VR128X>)) 
		Combined result: 4.02 cycles
	VPCMPEQDZ128rrk(3(Class<VR128X>) -> 0(Class<VK4>))  [1.05;3.07]
		Dependencies:
			VPCMPEQDZ128rr(2(Class<VR128X>) -> 0(Class<VK4>)) 
			VPMOVM2DZ128rk(1(Class<VK4>) -> 0(Class<VR128X>)) 
		Combined result: 4.07 cycles

-----VPCMPEQDZ256rr-----
	VPCMPEQDZ256rr(1(Class<VR256X>) -> 0(Class<VK8>))  [1.01;4.05]
		Dependencies:
			VCMPPSZ256rri(1(Class<VR256X>) -> 0(Class<VK8>)) 
			VPMOVM2DZ256rk(1(Class<VK8>) -> 0(Class<VR256X>)) 
		Combined result: 5.05 cycles
	VPCMPEQDZ256rr(2(Class<VR256X>) -> 0(Class<VK8>))  [0.992;4.03]
		Dependencies:
			VCMPPSZ256rri(1(Class<VR256X>) -> 0(Class<VK8>)) 
			VPMOVM2DZ256rk(1(Class<VK8>) -> 0(Class<VR256X>)) 
		Combined result: 5.03 cycles

-----VPCMPEQDZ256rrk-----
	VPCMPEQDZ256rrk(2(Class<VR256X>) -> 0(Class<VK8>))  [0.997;4.04]
		Dependencies:
			VCMPPSZ256rri(1(Class<VR256X>) -> 0(Class<VK8>)) 
			VPMOVM2DZ256rk(1(Class<VK8>) -> 0(Class<VR256X>)) 
		Combined result: 5.04 cycles
	VPCMPEQDZ256rrk(3(Class<VR256X>) -> 0(Class<VK8>))  [0.999;4.04]
		Dependencies:
			VCMPPSZ256rri(1(Class<VR256X>) -> 0(Class<VK8>)) 
			VPMOVM2DZ256rk(1(Class<VK8>) -> 0(Class<VR256X>)) 
		Combined result: 5.04 cycles

-----VPCMPEQDZrr-----
	VPCMPEQDZrr(1(Class<VR512>) -> 0(Class<VK16>))  [1.01;5.15]
		Dependencies:
			VPTESTNMDZrr(2(Class<VR512>) -> 0(Class<VK16>)) 
			VPMOVM2DZrk(1(Class<VK16>) -> 0(Class<VR512>)) 
		Combined result: 6.15 cycles
	VPCMPEQDZrr(2(Class<VR512>) -> 0(Class<VK16>))  [1.05;5.18]
		Dependencies:
			VPTESTNMDZrr(2(Class<VR512>) -> 0(Class<VK16>)) 
			VPMOVM2DZrk(1(Class<VK16>) -> 0(Class<VR512>)) 
		Combined result: 6.18 cycles

-----VPCMPEQDZrrk-----
	VPCMPEQDZrrk(2(Class<VR512>) -> 0(Class<VK16>))  [1.03;5.16]
		Dependencies:
			VPTESTNMDZrr(2(Class<VR512>) -> 0(Class<VK16>)) 
			VPMOVM2DZrk(1(Class<VK16>) -> 0(Class<VR512>)) 
		Combined result: 6.16 cycles
	VPCMPEQDZrrk(3(Class<VR512>) -> 0(Class<VK16>))  [1.04;5.18]
		Dependencies:
			VPTESTNMDZrr(2(Class<VR512>) -> 0(Class<VK16>)) 
			VPMOVM2DZrk(1(Class<VK16>) -> 0(Class<VR512>)) 
		Combined result: 6.18 cycles

-----VPCMPEQDrr-----
	VPCMPEQDrr(1(Class<VR128>) -> 0(Class<VR128>))  [1.01;1.01]
		 Successful, latency: 1.01
	VPCMPEQDrr(2(Class<VR128>) -> 0(Class<VR128>))  [1.01;1.01]
		 Successful, latency: 1.01

-----VPCMPEQQYrr-----
	VPCMPEQQYrr(1(Class<VR256>) -> 0(Class<VR256>))  [2.02;2.02]
		 Successful, latency: 2.02
	VPCMPEQQYrr(2(Class<VR256>) -> 0(Class<VR256>))  [2.02;2.02]
		 Successful, latency: 2.02

-----VPCMPEQQZ128rr-----
	VPCMPEQQZ128rr(1(Class<VR128X>) -> 0(Class<VK2>))  [1.02;3.04]
		Dependencies:
			VPCMPQZ128rri(2(Class<VR128X>) -> 0(Class<VK2>)) 
			VPMOVM2QZ128rk(1(Class<VK2>) -> 0(Class<VR128X>)) 
		Combined result: 4.04 cycles
	VPCMPEQQZ128rr(2(Class<VR128X>) -> 0(Class<VK2>))  [1.04;3.06]
		Dependencies:
			VPCMPQZ128rri(2(Class<VR128X>) -> 0(Class<VK2>)) 
			VPMOVM2QZ128rk(1(Class<VK2>) -> 0(Class<VR128X>)) 
		Combined result: 4.06 cycles

-----VPCMPEQQZ128rrk-----
	VPCMPEQQZ128rrk(2(Class<VR128X>) -> 0(Class<VK2>))  [1.01;3.03]
		Dependencies:
			VPCMPQZ128rri(2(Class<VR128X>) -> 0(Class<VK2>)) 
			VPMOVM2QZ128rk(1(Class<VK2>) -> 0(Class<VR128X>)) 
		Combined result: 4.03 cycles
	VPCMPEQQZ128rrk(3(Class<VR128X>) -> 0(Class<VK2>))  [1.02;3.04]
		Dependencies:
			VPCMPQZ128rri(2(Class<VR128X>) -> 0(Class<VK2>)) 
			VPMOVM2QZ128rk(1(Class<VK2>) -> 0(Class<VR128X>)) 
		Combined result: 4.04 cycles

-----VPCMPEQQZ256rr-----
	VPCMPEQQZ256rr(1(Class<VR256X>) -> 0(Class<VK4>))  [1.01;4.04]
		Dependencies:
			VPTESTNMQZ256rrk(2(Class<VR256X>) -> 0(Class<VK4>)) 
			VPMOVM2QZ256rk(1(Class<VK4>) -> 0(Class<VR256X>)) 
		Combined result: 5.04 cycles
	VPCMPEQQZ256rr(2(Class<VR256X>) -> 0(Class<VK4>))  [1.01;4.04]
		Dependencies:
			VPTESTNMQZ256rrk(2(Class<VR256X>) -> 0(Class<VK4>)) 
			VPMOVM2QZ256rk(1(Class<VK4>) -> 0(Class<VR256X>)) 
		Combined result: 5.04 cycles

-----VPCMPEQQZ256rrk-----
	VPCMPEQQZ256rrk(2(Class<VR256X>) -> 0(Class<VK4>))  [1.03;4.06]
		Dependencies:
			VPTESTNMQZ256rrk(2(Class<VR256X>) -> 0(Class<VK4>)) 
			VPMOVM2QZ256rk(1(Class<VK4>) -> 0(Class<VR256X>)) 
		Combined result: 5.06 cycles
	VPCMPEQQZ256rrk(3(Class<VR256X>) -> 0(Class<VK4>))  [1.02;4.05]
		Dependencies:
			VPTESTNMQZ256rrk(2(Class<VR256X>) -> 0(Class<VK4>)) 
			VPMOVM2QZ256rk(1(Class<VK4>) -> 0(Class<VR256X>)) 
		Combined result: 5.05 cycles

-----VPCMPEQQZrr-----
	VPCMPEQQZrr(1(Class<VR512>) -> 0(Class<VK8>))  [1.03;5.13]
		Dependencies:
			VPCMPQZrrik(2(Class<VR512>) -> 0(Class<VK8>)) 
			VPMOVM2QZrk(1(Class<VK8>) -> 0(Class<VR512>)) 
		Combined result: 6.13 cycles
	VPCMPEQQZrr(2(Class<VR512>) -> 0(Class<VK8>))  [1.06;5.17]
		Dependencies:
			VPCMPQZrrik(2(Class<VR512>) -> 0(Class<VK8>)) 
			VPMOVM2QZrk(1(Class<VK8>) -> 0(Class<VR512>)) 
		Combined result: 6.17 cycles

-----VPCMPEQQZrrk-----
	VPCMPEQQZrrk(2(Class<VR512>) -> 0(Class<VK8>))  [1.06;5.17]
		Dependencies:
			VPCMPQZrrik(2(Class<VR512>) -> 0(Class<VK8>)) 
			VPMOVM2QZrk(1(Class<VK8>) -> 0(Class<VR512>)) 
		Combined result: 6.17 cycles
	VPCMPEQQZrrk(3(Class<VR512>) -> 0(Class<VK8>))  [1.14;5.24]
		Dependencies:
			VPCMPQZrrik(2(Class<VR512>) -> 0(Class<VK8>)) 
			VPMOVM2QZrk(1(Class<VK8>) -> 0(Class<VR512>)) 
		Combined result: 6.24 cycles

-----VPCMPEQQrr-----
	VPCMPEQQrr(1(Class<VR128>) -> 0(Class<VR128>))  [2.02;2.02]
		 Successful, latency: 2.02
	VPCMPEQQrr(2(Class<VR128>) -> 0(Class<VR128>))  [2.02;2.02]
		 Successful, latency: 2.02

-----VPCMPEQWYrr-----
	VPCMPEQWYrr(1(Class<VR256>) -> 0(Class<VR256>))  [1.01;1.01]
		 Successful, latency: 1.01
	VPCMPEQWYrr(2(Class<VR256>) -> 0(Class<VR256>))  [1;1]
		 Successful, latency: 1

-----VPCMPEQWZ128rr-----
	VPCMPEQWZ128rr(1(Class<VR128X>) -> 0(Class<VK8>))  [1.03;3.05]
		Dependencies:
			VPCMPGTWZ128rr(1(Class<VR128X>) -> 0(Class<VK8>)) 
			VPMOVM2WZ128rk(1(Class<VK8>) -> 0(Class<VR128X>)) 
		Combined result: 4.05 cycles
	VPCMPEQWZ128rr(2(Class<VR128X>) -> 0(Class<VK8>))  [1.01;3.03]
		Dependencies:
			VPCMPGTWZ128rr(1(Class<VR128X>) -> 0(Class<VK8>)) 
			VPMOVM2WZ128rk(1(Class<VK8>) -> 0(Class<VR128X>)) 
		Combined result: 4.03 cycles

-----VPCMPEQWZ128rrk-----
	VPCMPEQWZ128rrk(2(Class<VR128X>) -> 0(Class<VK8>))  [1.01;3.03]
		Dependencies:
			VPCMPGTWZ128rr(1(Class<VR128X>) -> 0(Class<VK8>)) 
			VPMOVM2WZ128rk(1(Class<VK8>) -> 0(Class<VR128X>)) 
		Combined result: 4.03 cycles
	VPCMPEQWZ128rrk(3(Class<VR128X>) -> 0(Class<VK8>))  [1.02;3.04]
		Dependencies:
			VPCMPGTWZ128rr(1(Class<VR128X>) -> 0(Class<VK8>)) 
			VPMOVM2WZ128rk(1(Class<VK8>) -> 0(Class<VR128X>)) 
		Combined result: 4.04 cycles

-----VPCMPEQWZ256rr-----
	VPCMPEQWZ256rr(1(Class<VR256X>) -> 0(Class<VK16>))  [1.01;4.04]
		Dependencies:
			VPCMPEQWZ256rr(2(Class<VR256X>) -> 0(Class<VK16>)) 
			VPMOVM2WZ256rk(1(Class<VK16>) -> 0(Class<VR256X>)) 
		Combined result: 5.04 cycles
	VPCMPEQWZ256rr(2(Class<VR256X>) -> 0(Class<VK16>))  [1.03;4.06]
		Dependencies:
			VPCMPEQWZ256rr(2(Class<VR256X>) -> 0(Class<VK16>)) 
			VPMOVM2WZ256rk(1(Class<VK16>) -> 0(Class<VR256X>)) 
		Combined result: 5.06 cycles

-----VPCMPEQWZ256rrk-----
	VPCMPEQWZ256rrk(2(Class<VR256X>) -> 0(Class<VK16>))  [1.04;4.07]
		Dependencies:
			VPCMPEQWZ256rr(2(Class<VR256X>) -> 0(Class<VK16>)) 
			VPMOVM2WZ256rk(1(Class<VK16>) -> 0(Class<VR256X>)) 
		Combined result: 5.07 cycles
	VPCMPEQWZ256rrk(3(Class<VR256X>) -> 0(Class<VK16>))  [1.04;4.07]
		Dependencies:
			VPCMPEQWZ256rr(2(Class<VR256X>) -> 0(Class<VK16>)) 
			VPMOVM2WZ256rk(1(Class<VK16>) -> 0(Class<VR256X>)) 
		Combined result: 5.07 cycles

-----VPCMPEQWZrr-----
	VPCMPEQWZrr(1(Class<VR512>) -> 0(Class<VK32>))  [1.02;5.17]
		Dependencies:
			VPCMPUWZrrik(3(Class<VR512>) -> 0(Class<VK32>)) 
			VPMOVM2WZrk(1(Class<VK32>) -> 0(Class<VR512>)) 
		Combined result: 6.17 cycles
	VPCMPEQWZrr(2(Class<VR512>) -> 0(Class<VK32>))  [1.01;5.15]
		Dependencies:
			VPCMPUWZrrik(3(Class<VR512>) -> 0(Class<VK32>)) 
			VPMOVM2WZrk(1(Class<VK32>) -> 0(Class<VR512>)) 
		Combined result: 6.15 cycles

-----VPCMPEQWZrrk-----
	VPCMPEQWZrrk(2(Class<VR512>) -> 0(Class<VK32>))  [1.03;5.17]
		Dependencies:
			VPCMPUWZrrik(3(Class<VR512>) -> 0(Class<VK32>)) 
			VPMOVM2WZrk(1(Class<VK32>) -> 0(Class<VR512>)) 
		Combined result: 6.17 cycles
	VPCMPEQWZrrk(3(Class<VR512>) -> 0(Class<VK32>))  [1.03;5.17]
		Dependencies:
			VPCMPUWZrrik(3(Class<VR512>) -> 0(Class<VK32>)) 
			VPMOVM2WZrk(1(Class<VK32>) -> 0(Class<VR512>)) 
		Combined result: 6.17 cycles

-----VPCMPEQWrr-----
	VPCMPEQWrr(1(Class<VR128>) -> 0(Class<VR128>))  [1.02;1.02]
		 Successful, latency: 1.02
	VPCMPEQWrr(2(Class<VR128>) -> 0(Class<VR128>))  [1.01;1.01]
		 Successful, latency: 1.01

-----VPCMPESTRIrri-----
	VPCMPESTRIrri(0(Class<VR128>) -> impl(Reg<EFLAGS>))  [3.02;2.03]
		Dependencies:
			CMOV_VR128(impl(Reg<EFLAGS>) -> 0(Class<VR128>)) 
			COMISDrr_Int(0(Class<VR128>) -> impl(Reg<EFLAGS>)) 
		Combined result: 3.04 cycles
	VPCMPESTRIrri(1(Class<VR128>) -> impl(Reg<EFLAGS>))  [3.02;2.03]
		Dependencies:
			CMOV_VR128(impl(Reg<EFLAGS>) -> 0(Class<VR128>)) 
			COMISDrr_Int(0(Class<VR128>) -> impl(Reg<EFLAGS>)) 
		Combined result: 3.04 cycles
	VPCMPESTRIrri(impl(Reg<EAX>) -> impl(Reg<EFLAGS>))  [15.1;15.1]
		Dependencies:
			ADC32i32(impl(Reg<EFLAGS>) -> impl(Reg<EAX>)) 
			ADC32i32(impl(Reg<EAX>) -> impl(Reg<EFLAGS>)) 
		Combined result: 16.1 cycles

-----VPCMPESTRMrri-----
	VPCMPESTRMrri(0(Class<VR128>) -> impl(Reg<EFLAGS>))  [7.04;6.04]
		Dependencies:
			CMOV_VR128(impl(Reg<EFLAGS>) -> 0(Class<VR128>)) 
			COMISDrr_Int(0(Class<VR128>) -> impl(Reg<EFLAGS>)) 
		Combined result: 7.05 cycles
	VPCMPESTRMrri(1(Class<VR128>) -> impl(Reg<EFLAGS>))  [7.03;6.03]
		Dependencies:
			CMOV_VR128(impl(Reg<EFLAGS>) -> 0(Class<VR128>)) 
			COMISDrr_Int(0(Class<VR128>) -> impl(Reg<EFLAGS>)) 
		Combined result: 7.04 cycles
	VPCMPESTRMrri(0(Class<VR128>) -> impl(Reg<XMM0>))  [1.03;7.08]
		Dependencies:
			PBLENDVBrr0(impl(Reg<XMM0>) -> 0(Class<VR128>)) 
			VPCMPISTRMrri(0(Class<VR128>) -> impl(Reg<XMM0>)) 
		Combined result: 8.08 cycles
	VPCMPESTRMrri(1(Class<VR128>) -> impl(Reg<XMM0>))  [1.03;7.08]
		Dependencies:
			PBLENDVBrr0(impl(Reg<XMM0>) -> 0(Class<VR128>)) 
			VPCMPISTRMrri(0(Class<VR128>) -> impl(Reg<XMM0>)) 
		Combined result: 8.08 cycles
	VPCMPESTRMrri(impl(Reg<EAX>) -> impl(Reg<EFLAGS>))  [15.1;15.1]
		Dependencies:
			ADC32i32(impl(Reg<EFLAGS>) -> impl(Reg<EAX>)) 
			ADC32i32(impl(Reg<EAX>) -> impl(Reg<EFLAGS>)) 
		Combined result: 16.1 cycles

-----VPCMPGTBYrr-----
	VPCMPGTBYrr(1(Class<VR256>) -> 0(Class<VR256>))  [1.01;1.01]
		 Successful, latency: 1.01
	VPCMPGTBYrr(2(Class<VR256>) -> 0(Class<VR256>))  [1.02;1.02]
		 Successful, latency: 1.02

-----VPCMPGTBZ128rr-----
	VPCMPGTBZ128rr(1(Class<VR128X>) -> 0(Class<VK16>))  [1.01;3.03]
		Dependencies:
			VPMOVB2MZ128kr(1(Class<VR128X>) -> 0(Class<VK16>)) 
			VPMOVM2BZ128rk(1(Class<VK16>) -> 0(Class<VR128X>)) 
		Combined result: 4.03 cycles
	VPCMPGTBZ128rr(2(Class<VR128X>) -> 0(Class<VK16>))  [1.02;3.04]
		Dependencies:
			VPMOVB2MZ128kr(1(Class<VR128X>) -> 0(Class<VK16>)) 
			VPMOVM2BZ128rk(1(Class<VK16>) -> 0(Class<VR128X>)) 
		Combined result: 4.04 cycles

-----VPCMPGTBZ128rrk-----
	VPCMPGTBZ128rrk(2(Class<VR128X>) -> 0(Class<VK16>))  [1.02;3.03]
		Dependencies:
			VPMOVB2MZ128kr(1(Class<VR128X>) -> 0(Class<VK16>)) 
			VPMOVM2BZ128rk(1(Class<VK16>) -> 0(Class<VR128X>)) 
		Combined result: 4.03 cycles
	VPCMPGTBZ128rrk(3(Class<VR128X>) -> 0(Class<VK16>))  [1;3.02]
		Dependencies:
			VPMOVB2MZ128kr(1(Class<VR128X>) -> 0(Class<VK16>)) 
			VPMOVM2BZ128rk(1(Class<VK16>) -> 0(Class<VR128X>)) 
		Combined result: 4.02 cycles

-----VPCMPGTBZ256rr-----
	VPCMPGTBZ256rr(1(Class<VR256X>) -> 0(Class<VK32>))  [1.01;4.03]
		Dependencies:
			VPSHUFBITQMBZ256rr(1(Class<VR256X>) -> 0(Class<VK32>)) 
			VPMOVM2BZ256rk(1(Class<VK32>) -> 0(Class<VR256X>)) 
		Combined result: 5.03 cycles
	VPCMPGTBZ256rr(2(Class<VR256X>) -> 0(Class<VK32>))  [1.01;4.04]
		Dependencies:
			VPSHUFBITQMBZ256rr(1(Class<VR256X>) -> 0(Class<VK32>)) 
			VPMOVM2BZ256rk(1(Class<VK32>) -> 0(Class<VR256X>)) 
		Combined result: 5.04 cycles

-----VPCMPGTBZ256rrk-----
	VPCMPGTBZ256rrk(2(Class<VR256X>) -> 0(Class<VK32>))  [1.01;4.03]
		Dependencies:
			VPSHUFBITQMBZ256rr(1(Class<VR256X>) -> 0(Class<VK32>)) 
			VPMOVM2BZ256rk(1(Class<VK32>) -> 0(Class<VR256X>)) 
		Combined result: 5.03 cycles
	VPCMPGTBZ256rrk(3(Class<VR256X>) -> 0(Class<VK32>))  [1.05;4.07]
		Dependencies:
			VPSHUFBITQMBZ256rr(1(Class<VR256X>) -> 0(Class<VK32>)) 
			VPMOVM2BZ256rk(1(Class<VK32>) -> 0(Class<VR256X>)) 
		Combined result: 5.07 cycles

-----VPCMPGTBZrr-----
	VPCMPGTBZrr(1(Class<VR512>) -> 0(Class<VK64>))  [2.02;5.18]
		Dependencies:
			VPTESTNMBZrr(1(Class<VR512>) -> 0(Class<VK64>)) 
			VPMOVM2BZrk(1(Class<VK64>) -> 0(Class<VR512>)) 
		Combined result: 6.18 cycles
	VPCMPGTBZrr(2(Class<VR512>) -> 0(Class<VK64>))  [2.04;5.2]
		Dependencies:
			VPTESTNMBZrr(1(Class<VR512>) -> 0(Class<VK64>)) 
			VPMOVM2BZrk(1(Class<VK64>) -> 0(Class<VR512>)) 
		Combined result: 6.2 cycles

-----VPCMPGTBZrrk-----
	VPCMPGTBZrrk(2(Class<VR512>) -> 0(Class<VK64>))  [2;5.16]
		Dependencies:
			VPTESTNMBZrr(1(Class<VR512>) -> 0(Class<VK64>)) 
			VPMOVM2BZrk(1(Class<VK64>) -> 0(Class<VR512>)) 
		Combined result: 6.16 cycles
	VPCMPGTBZrrk(3(Class<VR512>) -> 0(Class<VK64>))  [2.01;5.16]
		Dependencies:
			VPTESTNMBZrr(1(Class<VR512>) -> 0(Class<VK64>)) 
			VPMOVM2BZrk(1(Class<VK64>) -> 0(Class<VR512>)) 
		Combined result: 6.16 cycles

-----VPCMPGTBrr-----
	VPCMPGTBrr(1(Class<VR128>) -> 0(Class<VR128>))  [1;1]
		 Successful, latency: 1
	VPCMPGTBrr(2(Class<VR128>) -> 0(Class<VR128>))  [1.01;1.01]
		 Successful, latency: 1.01

-----VPCMPGTDYrr-----
	VPCMPGTDYrr(1(Class<VR256>) -> 0(Class<VR256>))  [1.01;1.01]
		 Successful, latency: 1.01
	VPCMPGTDYrr(2(Class<VR256>) -> 0(Class<VR256>))  [0.999;0.999]
		 Successful, latency: 0.999

-----VPCMPGTDZ128rr-----
	VPCMPGTDZ128rr(1(Class<VR128X>) -> 0(Class<VK4>))  [1.01;3.03]
		Dependencies:
			VPCMPEQDZ128rr(2(Class<VR128X>) -> 0(Class<VK4>)) 
			VPMOVM2DZ128rk(1(Class<VK4>) -> 0(Class<VR128X>)) 
		Combined result: 4.03 cycles
	VPCMPGTDZ128rr(2(Class<VR128X>) -> 0(Class<VK4>))  [1.04;3.07]
		Dependencies:
			VPCMPEQDZ128rr(2(Class<VR128X>) -> 0(Class<VK4>)) 
			VPMOVM2DZ128rk(1(Class<VK4>) -> 0(Class<VR128X>)) 
		Combined result: 4.07 cycles

-----VPCMPGTDZ128rrk-----
	VPCMPGTDZ128rrk(2(Class<VR128X>) -> 0(Class<VK4>))  [1.02;3.05]
		Dependencies:
			VPCMPEQDZ128rr(2(Class<VR128X>) -> 0(Class<VK4>)) 
			VPMOVM2DZ128rk(1(Class<VK4>) -> 0(Class<VR128X>)) 
		Combined result: 4.05 cycles
	VPCMPGTDZ128rrk(3(Class<VR128X>) -> 0(Class<VK4>))  [0.997;3.02]
		Dependencies:
			VPCMPEQDZ128rr(2(Class<VR128X>) -> 0(Class<VK4>)) 
			VPMOVM2DZ128rk(1(Class<VK4>) -> 0(Class<VR128X>)) 
		Combined result: 4.02 cycles

-----VPCMPGTDZ256rr-----
	VPCMPGTDZ256rr(1(Class<VR256X>) -> 0(Class<VK8>))  [1.01;4.05]
		Dependencies:
			VCMPPSZ256rri(1(Class<VR256X>) -> 0(Class<VK8>)) 
			VPMOVM2DZ256rk(1(Class<VK8>) -> 0(Class<VR256X>)) 
		Combined result: 5.05 cycles
	VPCMPGTDZ256rr(2(Class<VR256X>) -> 0(Class<VK8>))  [1;4.04]
		Dependencies:
			VCMPPSZ256rri(1(Class<VR256X>) -> 0(Class<VK8>)) 
			VPMOVM2DZ256rk(1(Class<VK8>) -> 0(Class<VR256X>)) 
		Combined result: 5.04 cycles

-----VPCMPGTDZ256rrk-----
	VPCMPGTDZ256rrk(2(Class<VR256X>) -> 0(Class<VK8>))  [0.995;4.03]
		Dependencies:
			VCMPPSZ256rri(1(Class<VR256X>) -> 0(Class<VK8>)) 
			VPMOVM2DZ256rk(1(Class<VK8>) -> 0(Class<VR256X>)) 
		Combined result: 5.03 cycles
	VPCMPGTDZ256rrk(3(Class<VR256X>) -> 0(Class<VK8>))  [1;4.04]
		Dependencies:
			VCMPPSZ256rri(1(Class<VR256X>) -> 0(Class<VK8>)) 
			VPMOVM2DZ256rk(1(Class<VK8>) -> 0(Class<VR256X>)) 
		Combined result: 5.04 cycles

-----VPCMPGTDZrr-----
	VPCMPGTDZrr(1(Class<VR512>) -> 0(Class<VK16>))  [1.03;5.16]
		Dependencies:
			VPTESTNMDZrr(2(Class<VR512>) -> 0(Class<VK16>)) 
			VPMOVM2DZrk(1(Class<VK16>) -> 0(Class<VR512>)) 
		Combined result: 6.16 cycles
	VPCMPGTDZrr(2(Class<VR512>) -> 0(Class<VK16>))  [1.03;5.16]
		Dependencies:
			VPTESTNMDZrr(2(Class<VR512>) -> 0(Class<VK16>)) 
			VPMOVM2DZrk(1(Class<VK16>) -> 0(Class<VR512>)) 
		Combined result: 6.16 cycles

-----VPCMPGTDZrrk-----
	VPCMPGTDZrrk(2(Class<VR512>) -> 0(Class<VK16>))  [1.06;5.2]
		Dependencies:
			VPTESTNMDZrr(2(Class<VR512>) -> 0(Class<VK16>)) 
			VPMOVM2DZrk(1(Class<VK16>) -> 0(Class<VR512>)) 
		Combined result: 6.2 cycles
	VPCMPGTDZrrk(3(Class<VR512>) -> 0(Class<VK16>))  [1.04;5.17]
		Dependencies:
			VPTESTNMDZrr(2(Class<VR512>) -> 0(Class<VK16>)) 
			VPMOVM2DZrk(1(Class<VK16>) -> 0(Class<VR512>)) 
		Combined result: 6.17 cycles

-----VPCMPGTDrr-----
	VPCMPGTDrr(1(Class<VR128>) -> 0(Class<VR128>))  [1.01;1.01]
		 Successful, latency: 1.01
	VPCMPGTDrr(2(Class<VR128>) -> 0(Class<VR128>))  [1.01;1.01]
		 Successful, latency: 1.01

-----VPCMPGTQYrr-----
	VPCMPGTQYrr(1(Class<VR256>) -> 0(Class<VR256>))  [2.02;2.02]
		 Successful, latency: 2.02
	VPCMPGTQYrr(2(Class<VR256>) -> 0(Class<VR256>))  [2.02;2.02]
		 Successful, latency: 2.02

-----VPCMPGTQZ128rr-----
	VPCMPGTQZ128rr(1(Class<VR128X>) -> 0(Class<VK2>))  [1.01;3.03]
		Dependencies:
			VPCMPQZ128rri(2(Class<VR128X>) -> 0(Class<VK2>)) 
			VPMOVM2QZ128rk(1(Class<VK2>) -> 0(Class<VR128X>)) 
		Combined result: 4.03 cycles
	VPCMPGTQZ128rr(2(Class<VR128X>) -> 0(Class<VK2>))  [1.02;3.04]
		Dependencies:
			VPCMPQZ128rri(2(Class<VR128X>) -> 0(Class<VK2>)) 
			VPMOVM2QZ128rk(1(Class<VK2>) -> 0(Class<VR128X>)) 
		Combined result: 4.04 cycles

-----VPCMPGTQZ128rrk-----
	VPCMPGTQZ128rrk(2(Class<VR128X>) -> 0(Class<VK2>))  [1.04;3.05]
		Dependencies:
			VPCMPQZ128rri(2(Class<VR128X>) -> 0(Class<VK2>)) 
			VPMOVM2QZ128rk(1(Class<VK2>) -> 0(Class<VR128X>)) 
		Combined result: 4.05 cycles
	VPCMPGTQZ128rrk(3(Class<VR128X>) -> 0(Class<VK2>))  [1.01;3.03]
		Dependencies:
			VPCMPQZ128rri(2(Class<VR128X>) -> 0(Class<VK2>)) 
			VPMOVM2QZ128rk(1(Class<VK2>) -> 0(Class<VR128X>)) 
		Combined result: 4.03 cycles

-----VPCMPGTQZ256rr-----
	VPCMPGTQZ256rr(1(Class<VR256X>) -> 0(Class<VK4>))  [1.01;4.04]
		Dependencies:
			VPTESTNMQZ256rrk(2(Class<VR256X>) -> 0(Class<VK4>)) 
			VPMOVM2QZ256rk(1(Class<VK4>) -> 0(Class<VR256X>)) 
		Combined result: 5.04 cycles
	VPCMPGTQZ256rr(2(Class<VR256X>) -> 0(Class<VK4>))  [1.05;4.08]
		Dependencies:
			VPTESTNMQZ256rrk(2(Class<VR256X>) -> 0(Class<VK4>)) 
			VPMOVM2QZ256rk(1(Class<VK4>) -> 0(Class<VR256X>)) 
		Combined result: 5.08 cycles

-----VPCMPGTQZ256rrk-----
	VPCMPGTQZ256rrk(2(Class<VR256X>) -> 0(Class<VK4>))  [1.04;4.07]
		Dependencies:
			VPTESTNMQZ256rrk(2(Class<VR256X>) -> 0(Class<VK4>)) 
			VPMOVM2QZ256rk(1(Class<VK4>) -> 0(Class<VR256X>)) 
		Combined result: 5.07 cycles
	VPCMPGTQZ256rrk(3(Class<VR256X>) -> 0(Class<VK4>))  [1.02;4.04]
		Dependencies:
			VPTESTNMQZ256rrk(2(Class<VR256X>) -> 0(Class<VK4>)) 
			VPMOVM2QZ256rk(1(Class<VK4>) -> 0(Class<VR256X>)) 
		Combined result: 5.04 cycles

-----VPCMPGTQZrr-----
	VPCMPGTQZrr(1(Class<VR512>) -> 0(Class<VK8>))  [1.03;5.14]
		Dependencies:
			VPCMPQZrrik(2(Class<VR512>) -> 0(Class<VK8>)) 
			VPMOVM2QZrk(1(Class<VK8>) -> 0(Class<VR512>)) 
		Combined result: 6.14 cycles
	VPCMPGTQZrr(2(Class<VR512>) -> 0(Class<VK8>))  [1.06;5.17]
		Dependencies:
			VPCMPQZrrik(2(Class<VR512>) -> 0(Class<VK8>)) 
			VPMOVM2QZrk(1(Class<VK8>) -> 0(Class<VR512>)) 
		Combined result: 6.17 cycles

-----VPCMPGTQZrrk-----
	VPCMPGTQZrrk(2(Class<VR512>) -> 0(Class<VK8>))  [1.06;5.17]
		Dependencies:
			VPCMPQZrrik(2(Class<VR512>) -> 0(Class<VK8>)) 
			VPMOVM2QZrk(1(Class<VK8>) -> 0(Class<VR512>)) 
		Combined result: 6.17 cycles
	VPCMPGTQZrrk(3(Class<VR512>) -> 0(Class<VK8>))  [1.06;5.17]
		Dependencies:
			VPCMPQZrrik(2(Class<VR512>) -> 0(Class<VK8>)) 
			VPMOVM2QZrk(1(Class<VK8>) -> 0(Class<VR512>)) 
		Combined result: 6.17 cycles

-----VPCMPGTQrr-----
	VPCMPGTQrr(1(Class<VR128>) -> 0(Class<VR128>))  [2.02;2.02]
		 Successful, latency: 2.02
	VPCMPGTQrr(2(Class<VR128>) -> 0(Class<VR128>))  [2.01;2.01]
		 Successful, latency: 2.01

-----VPCMPGTWYrr-----
	VPCMPGTWYrr(1(Class<VR256>) -> 0(Class<VR256>))  [1.01;1.01]
		 Successful, latency: 1.01
	VPCMPGTWYrr(2(Class<VR256>) -> 0(Class<VR256>))  [1;1]
		 Successful, latency: 1

-----VPCMPGTWZ128rr-----
	VPCMPGTWZ128rr(1(Class<VR128X>) -> 0(Class<VK8>))  [1.04;3.06]
		Dependencies:
			VPCMPGTWZ128rr(1(Class<VR128X>) -> 0(Class<VK8>)) 
			VPMOVM2WZ128rk(1(Class<VK8>) -> 0(Class<VR128X>)) 
		Combined result: 4.06 cycles
	VPCMPGTWZ128rr(2(Class<VR128X>) -> 0(Class<VK8>))  [1.03;3.05]
		Dependencies:
			VPCMPGTWZ128rr(1(Class<VR128X>) -> 0(Class<VK8>)) 
			VPMOVM2WZ128rk(1(Class<VK8>) -> 0(Class<VR128X>)) 
		Combined result: 4.05 cycles

-----VPCMPGTWZ128rrk-----
	VPCMPGTWZ128rrk(2(Class<VR128X>) -> 0(Class<VK8>))  [1.06;3.08]
		Dependencies:
			VPCMPGTWZ128rr(1(Class<VR128X>) -> 0(Class<VK8>)) 
			VPMOVM2WZ128rk(1(Class<VK8>) -> 0(Class<VR128X>)) 
		Combined result: 4.08 cycles
	VPCMPGTWZ128rrk(3(Class<VR128X>) -> 0(Class<VK8>))  [1.02;3.04]
		Dependencies:
			VPCMPGTWZ128rr(1(Class<VR128X>) -> 0(Class<VK8>)) 
			VPMOVM2WZ128rk(1(Class<VK8>) -> 0(Class<VR128X>)) 
		Combined result: 4.04 cycles

-----VPCMPGTWZ256rr-----
	VPCMPGTWZ256rr(1(Class<VR256X>) -> 0(Class<VK16>))  [1.02;4.04]
		Dependencies:
			VPCMPEQWZ256rr(2(Class<VR256X>) -> 0(Class<VK16>)) 
			VPMOVM2WZ256rk(1(Class<VK16>) -> 0(Class<VR256X>)) 
		Combined result: 5.04 cycles
	VPCMPGTWZ256rr(2(Class<VR256X>) -> 0(Class<VK16>))  [1.01;4.04]
		Dependencies:
			VPCMPEQWZ256rr(2(Class<VR256X>) -> 0(Class<VK16>)) 
			VPMOVM2WZ256rk(1(Class<VK16>) -> 0(Class<VR256X>)) 
		Combined result: 5.04 cycles

-----VPCMPGTWZ256rrk-----
	VPCMPGTWZ256rrk(2(Class<VR256X>) -> 0(Class<VK16>))  [1;4.03]
		Dependencies:
			VPCMPEQWZ256rr(2(Class<VR256X>) -> 0(Class<VK16>)) 
			VPMOVM2WZ256rk(1(Class<VK16>) -> 0(Class<VR256X>)) 
		Combined result: 5.03 cycles
	VPCMPGTWZ256rrk(3(Class<VR256X>) -> 0(Class<VK16>))  [1.05;4.07]
		Dependencies:
			VPCMPEQWZ256rr(2(Class<VR256X>) -> 0(Class<VK16>)) 
			VPMOVM2WZ256rk(1(Class<VK16>) -> 0(Class<VR256X>)) 
		Combined result: 5.07 cycles

-----VPCMPGTWZrr-----
	VPCMPGTWZrr(1(Class<VR512>) -> 0(Class<VK32>))  [0.986;5.13]
		Dependencies:
			VPCMPUWZrrik(3(Class<VR512>) -> 0(Class<VK32>)) 
			VPMOVM2WZrk(1(Class<VK32>) -> 0(Class<VR512>)) 
		Combined result: 6.13 cycles
	VPCMPGTWZrr(2(Class<VR512>) -> 0(Class<VK32>))  [1.03;5.18]
		Dependencies:
			VPCMPUWZrrik(3(Class<VR512>) -> 0(Class<VK32>)) 
			VPMOVM2WZrk(1(Class<VK32>) -> 0(Class<VR512>)) 
		Combined result: 6.18 cycles

-----VPCMPGTWZrrk-----
	VPCMPGTWZrrk(2(Class<VR512>) -> 0(Class<VK32>))  [0.99;5.13]
		Dependencies:
			VPCMPUWZrrik(3(Class<VR512>) -> 0(Class<VK32>)) 
			VPMOVM2WZrk(1(Class<VK32>) -> 0(Class<VR512>)) 
		Combined result: 6.13 cycles
	VPCMPGTWZrrk(3(Class<VR512>) -> 0(Class<VK32>))  [1.04;5.18]
		Dependencies:
			VPCMPUWZrrik(3(Class<VR512>) -> 0(Class<VK32>)) 
			VPMOVM2WZrk(1(Class<VK32>) -> 0(Class<VR512>)) 
		Combined result: 6.18 cycles

-----VPCMPGTWrr-----
	VPCMPGTWrr(1(Class<VR128>) -> 0(Class<VR128>))  [1.01;1.01]
		 Successful, latency: 1.01
	VPCMPGTWrr(2(Class<VR128>) -> 0(Class<VR128>))  [1.01;1.01]
		 Successful, latency: 1.01

-----VPCMPISTRIrri-----
	VPCMPISTRIrri(0(Class<VR128>) -> impl(Reg<EFLAGS>))  [1.99;0.999]
		Dependencies:
			CMOV_VR128(impl(Reg<EFLAGS>) -> 0(Class<VR128>)) 
			COMISDrr_Int(0(Class<VR128>) -> impl(Reg<EFLAGS>)) 
		Combined result: 2.01 cycles
	VPCMPISTRIrri(1(Class<VR128>) -> impl(Reg<EFLAGS>))  [2;1]
		Dependencies:
			CMOV_VR128(impl(Reg<EFLAGS>) -> 0(Class<VR128>)) 
			COMISDrr_Int(0(Class<VR128>) -> impl(Reg<EFLAGS>)) 
		Combined result: 2.01 cycles

-----VPCMPISTRMrri-----
	VPCMPISTRMrri(0(Class<VR128>) -> impl(Reg<EFLAGS>))  [7.04;6.04]
		Dependencies:
			CMOV_VR128(impl(Reg<EFLAGS>) -> 0(Class<VR128>)) 
			COMISDrr_Int(0(Class<VR128>) -> impl(Reg<EFLAGS>)) 
		Combined result: 7.05 cycles
	VPCMPISTRMrri(1(Class<VR128>) -> impl(Reg<EFLAGS>))  [7.04;6.04]
		Dependencies:
			CMOV_VR128(impl(Reg<EFLAGS>) -> 0(Class<VR128>)) 
			COMISDrr_Int(0(Class<VR128>) -> impl(Reg<EFLAGS>)) 
		Combined result: 7.05 cycles
	VPCMPISTRMrri(0(Class<VR128>) -> impl(Reg<XMM0>))  [0.999;7.04]
		Dependencies:
			PBLENDVBrr0(impl(Reg<XMM0>) -> 0(Class<VR128>)) 
			VPCMPISTRMrri(0(Class<VR128>) -> impl(Reg<XMM0>)) 
		Combined result: 8.05 cycles
	VPCMPISTRMrri(1(Class<VR128>) -> impl(Reg<XMM0>))  [1;7.05]
		Dependencies:
			PBLENDVBrr0(impl(Reg<XMM0>) -> 0(Class<VR128>)) 
			VPCMPISTRMrri(0(Class<VR128>) -> impl(Reg<XMM0>)) 
		Combined result: 8.05 cycles

-----VPCMPQZ128rri-----
	VPCMPQZ128rri(1(Class<VR128X>) -> 0(Class<VK2>))  [1.03;3.05]
		Dependencies:
			VPCMPQZ128rri(2(Class<VR128X>) -> 0(Class<VK2>)) 
			VPMOVM2QZ128rk(1(Class<VK2>) -> 0(Class<VR128X>)) 
		Combined result: 4.05 cycles
	VPCMPQZ128rri(2(Class<VR128X>) -> 0(Class<VK2>))  [1.02;3.03]
		Dependencies:
			VPCMPQZ128rri(2(Class<VR128X>) -> 0(Class<VK2>)) 
			VPMOVM2QZ128rk(1(Class<VK2>) -> 0(Class<VR128X>)) 
		Combined result: 4.03 cycles

-----VPCMPQZ128rrik-----
	VPCMPQZ128rrik(2(Class<VR128X>) -> 0(Class<VK2>))  [1.01;3.03]
		Dependencies:
			VPCMPQZ128rri(2(Class<VR128X>) -> 0(Class<VK2>)) 
			VPMOVM2QZ128rk(1(Class<VK2>) -> 0(Class<VR128X>)) 
		Combined result: 4.03 cycles
	VPCMPQZ128rrik(3(Class<VR128X>) -> 0(Class<VK2>))  [1.04;3.06]
		Dependencies:
			VPCMPQZ128rri(2(Class<VR128X>) -> 0(Class<VK2>)) 
			VPMOVM2QZ128rk(1(Class<VK2>) -> 0(Class<VR128X>)) 
		Combined result: 4.06 cycles

-----VPCMPQZ256rri-----
	VPCMPQZ256rri(1(Class<VR256X>) -> 0(Class<VK4>))  [1.02;4.04]
		Dependencies:
			VPTESTNMQZ256rrk(2(Class<VR256X>) -> 0(Class<VK4>)) 
			VPMOVM2QZ256rk(1(Class<VK4>) -> 0(Class<VR256X>)) 
		Combined result: 5.04 cycles
	VPCMPQZ256rri(2(Class<VR256X>) -> 0(Class<VK4>))  [1.01;4.04]
		Dependencies:
			VPTESTNMQZ256rrk(2(Class<VR256X>) -> 0(Class<VK4>)) 
			VPMOVM2QZ256rk(1(Class<VK4>) -> 0(Class<VR256X>)) 
		Combined result: 5.04 cycles

-----VPCMPQZ256rrik-----
	VPCMPQZ256rrik(2(Class<VR256X>) -> 0(Class<VK4>))  [1.01;4.04]
		Dependencies:
			VPTESTNMQZ256rrk(2(Class<VR256X>) -> 0(Class<VK4>)) 
			VPMOVM2QZ256rk(1(Class<VK4>) -> 0(Class<VR256X>)) 
		Combined result: 5.04 cycles
	VPCMPQZ256rrik(3(Class<VR256X>) -> 0(Class<VK4>))  [0.993;4.02]
		Dependencies:
			VPTESTNMQZ256rrk(2(Class<VR256X>) -> 0(Class<VK4>)) 
			VPMOVM2QZ256rk(1(Class<VK4>) -> 0(Class<VR256X>)) 
		Combined result: 5.02 cycles

-----VPCMPQZrri-----
	VPCMPQZrri(1(Class<VR512>) -> 0(Class<VK8>))  [1.03;5.13]
		Dependencies:
			VPCMPQZrrik(2(Class<VR512>) -> 0(Class<VK8>)) 
			VPMOVM2QZrk(1(Class<VK8>) -> 0(Class<VR512>)) 
		Combined result: 6.13 cycles
	VPCMPQZrri(2(Class<VR512>) -> 0(Class<VK8>))  [1.05;5.16]
		Dependencies:
			VPCMPQZrrik(2(Class<VR512>) -> 0(Class<VK8>)) 
			VPMOVM2QZrk(1(Class<VK8>) -> 0(Class<VR512>)) 
		Combined result: 6.16 cycles

-----VPCMPQZrrik-----
	VPCMPQZrrik(2(Class<VR512>) -> 0(Class<VK8>))  [1.06;5.16]
		Dependencies:
			VPCMPQZrrik(2(Class<VR512>) -> 0(Class<VK8>)) 
			VPMOVM2QZrk(1(Class<VK8>) -> 0(Class<VR512>)) 
		Combined result: 6.16 cycles
	VPCMPQZrrik(3(Class<VR512>) -> 0(Class<VK8>))  [1.06;5.17]
		Dependencies:
			VPCMPQZrrik(2(Class<VR512>) -> 0(Class<VK8>)) 
			VPMOVM2QZrk(1(Class<VK8>) -> 0(Class<VR512>)) 
		Combined result: 6.17 cycles

-----VPCMPUBZ128rri-----
	VPCMPUBZ128rri(1(Class<VR128X>) -> 0(Class<VK16>))  [1.02;3.04]
		Dependencies:
			VPMOVB2MZ128kr(1(Class<VR128X>) -> 0(Class<VK16>)) 
			VPMOVM2BZ128rk(1(Class<VK16>) -> 0(Class<VR128X>)) 
		Combined result: 4.04 cycles
	VPCMPUBZ128rri(2(Class<VR128X>) -> 0(Class<VK16>))  [1.01;3.03]
		Dependencies:
			VPMOVB2MZ128kr(1(Class<VR128X>) -> 0(Class<VK16>)) 
			VPMOVM2BZ128rk(1(Class<VK16>) -> 0(Class<VR128X>)) 
		Combined result: 4.03 cycles

-----VPCMPUBZ128rrik-----
	VPCMPUBZ128rrik(2(Class<VR128X>) -> 0(Class<VK16>))  [1.04;3.05]
		Dependencies:
			VPMOVB2MZ128kr(1(Class<VR128X>) -> 0(Class<VK16>)) 
			VPMOVM2BZ128rk(1(Class<VK16>) -> 0(Class<VR128X>)) 
		Combined result: 4.05 cycles
	VPCMPUBZ128rrik(3(Class<VR128X>) -> 0(Class<VK16>))  [1.04;3.06]
		Dependencies:
			VPMOVB2MZ128kr(1(Class<VR128X>) -> 0(Class<VK16>)) 
			VPMOVM2BZ128rk(1(Class<VK16>) -> 0(Class<VR128X>)) 
		Combined result: 4.06 cycles

-----VPCMPUBZ256rri-----
	VPCMPUBZ256rri(1(Class<VR256X>) -> 0(Class<VK32>))  [1.02;4.04]
		Dependencies:
			VPSHUFBITQMBZ256rr(1(Class<VR256X>) -> 0(Class<VK32>)) 
			VPMOVM2BZ256rk(1(Class<VK32>) -> 0(Class<VR256X>)) 
		Combined result: 5.04 cycles
	VPCMPUBZ256rri(2(Class<VR256X>) -> 0(Class<VK32>))  [1.02;4.04]
		Dependencies:
			VPSHUFBITQMBZ256rr(1(Class<VR256X>) -> 0(Class<VK32>)) 
			VPMOVM2BZ256rk(1(Class<VK32>) -> 0(Class<VR256X>)) 
		Combined result: 5.04 cycles

-----VPCMPUBZ256rrik-----
	VPCMPUBZ256rrik(2(Class<VR256X>) -> 0(Class<VK32>))  [1.04;4.06]
		Dependencies:
			VPSHUFBITQMBZ256rr(1(Class<VR256X>) -> 0(Class<VK32>)) 
			VPMOVM2BZ256rk(1(Class<VK32>) -> 0(Class<VR256X>)) 
		Combined result: 5.06 cycles
	VPCMPUBZ256rrik(3(Class<VR256X>) -> 0(Class<VK32>))  [1.02;4.04]
		Dependencies:
			VPSHUFBITQMBZ256rr(1(Class<VR256X>) -> 0(Class<VK32>)) 
			VPMOVM2BZ256rk(1(Class<VK32>) -> 0(Class<VR256X>)) 
		Combined result: 5.04 cycles

-----VPCMPUBZrri-----
	VPCMPUBZrri(1(Class<VR512>) -> 0(Class<VK64>))  [2.02;5.18]
		Dependencies:
			VPTESTNMBZrr(1(Class<VR512>) -> 0(Class<VK64>)) 
			VPMOVM2BZrk(1(Class<VK64>) -> 0(Class<VR512>)) 
		Combined result: 6.18 cycles
	VPCMPUBZrri(2(Class<VR512>) -> 0(Class<VK64>))  [2.05;5.2]
		Dependencies:
			VPTESTNMBZrr(1(Class<VR512>) -> 0(Class<VK64>)) 
			VPMOVM2BZrk(1(Class<VK64>) -> 0(Class<VR512>)) 
		Combined result: 6.2 cycles

-----VPCMPUBZrrik-----
	VPCMPUBZrrik(2(Class<VR512>) -> 0(Class<VK64>))  [2.01;5.17]
		Dependencies:
			VPTESTNMBZrr(1(Class<VR512>) -> 0(Class<VK64>)) 
			VPMOVM2BZrk(1(Class<VK64>) -> 0(Class<VR512>)) 
		Combined result: 6.17 cycles
	VPCMPUBZrrik(3(Class<VR512>) -> 0(Class<VK64>))  [1.99;5.14]
		Dependencies:
			VPTESTNMBZrr(1(Class<VR512>) -> 0(Class<VK64>)) 
			VPMOVM2BZrk(1(Class<VK64>) -> 0(Class<VR512>)) 
		Combined result: 6.14 cycles

-----VPCMPUDZ128rri-----
	VPCMPUDZ128rri(1(Class<VR128X>) -> 0(Class<VK4>))  [0.994;3.02]
		Dependencies:
			VPCMPEQDZ128rr(2(Class<VR128X>) -> 0(Class<VK4>)) 
			VPMOVM2DZ128rk(1(Class<VK4>) -> 0(Class<VR128X>)) 
		Combined result: 4.02 cycles
	VPCMPUDZ128rri(2(Class<VR128X>) -> 0(Class<VK4>))  [1.02;3.04]
		Dependencies:
			VPCMPEQDZ128rr(2(Class<VR128X>) -> 0(Class<VK4>)) 
			VPMOVM2DZ128rk(1(Class<VK4>) -> 0(Class<VR128X>)) 
		Combined result: 4.04 cycles

-----VPCMPUDZ128rrik-----
	VPCMPUDZ128rrik(2(Class<VR128X>) -> 0(Class<VK4>))  [1.01;3.03]
		Dependencies:
			VPCMPEQDZ128rr(2(Class<VR128X>) -> 0(Class<VK4>)) 
			VPMOVM2DZ128rk(1(Class<VK4>) -> 0(Class<VR128X>)) 
		Combined result: 4.03 cycles
	VPCMPUDZ128rrik(3(Class<VR128X>) -> 0(Class<VK4>))  [1.01;3.04]
		Dependencies:
			VPCMPEQDZ128rr(2(Class<VR128X>) -> 0(Class<VK4>)) 
			VPMOVM2DZ128rk(1(Class<VK4>) -> 0(Class<VR128X>)) 
		Combined result: 4.04 cycles

-----VPCMPUDZ256rri-----
	VPCMPUDZ256rri(1(Class<VR256X>) -> 0(Class<VK8>))  [0.999;4.04]
		Dependencies:
			VCMPPSZ256rri(1(Class<VR256X>) -> 0(Class<VK8>)) 
			VPMOVM2DZ256rk(1(Class<VK8>) -> 0(Class<VR256X>)) 
		Combined result: 5.04 cycles
	VPCMPUDZ256rri(2(Class<VR256X>) -> 0(Class<VK8>))  [1.01;4.05]
		Dependencies:
			VCMPPSZ256rri(1(Class<VR256X>) -> 0(Class<VK8>)) 
			VPMOVM2DZ256rk(1(Class<VK8>) -> 0(Class<VR256X>)) 
		Combined result: 5.05 cycles

-----VPCMPUDZ256rrik-----
	VPCMPUDZ256rrik(2(Class<VR256X>) -> 0(Class<VK8>))  [1.01;4.04]
		Dependencies:
			VCMPPSZ256rri(1(Class<VR256X>) -> 0(Class<VK8>)) 
			VPMOVM2DZ256rk(1(Class<VK8>) -> 0(Class<VR256X>)) 
		Combined result: 5.04 cycles
	VPCMPUDZ256rrik(3(Class<VR256X>) -> 0(Class<VK8>))  [1.04;4.08]
		Dependencies:
			VCMPPSZ256rri(1(Class<VR256X>) -> 0(Class<VK8>)) 
			VPMOVM2DZ256rk(1(Class<VK8>) -> 0(Class<VR256X>)) 
		Combined result: 5.08 cycles

-----VPCMPUDZrri-----
	VPCMPUDZrri(1(Class<VR512>) -> 0(Class<VK16>))  [0.999;5.13]
		Dependencies:
			VPTESTNMDZrr(2(Class<VR512>) -> 0(Class<VK16>)) 
			VPMOVM2DZrk(1(Class<VK16>) -> 0(Class<VR512>)) 
		Combined result: 6.13 cycles
	VPCMPUDZrri(2(Class<VR512>) -> 0(Class<VK16>))  [1.03;5.16]
		Dependencies:
			VPTESTNMDZrr(2(Class<VR512>) -> 0(Class<VK16>)) 
			VPMOVM2DZrk(1(Class<VK16>) -> 0(Class<VR512>)) 
		Combined result: 6.16 cycles

-----VPCMPUDZrrik-----
	VPCMPUDZrrik(2(Class<VR512>) -> 0(Class<VK16>))  [1.03;5.17]
		Dependencies:
			VPTESTNMDZrr(2(Class<VR512>) -> 0(Class<VK16>)) 
			VPMOVM2DZrk(1(Class<VK16>) -> 0(Class<VR512>)) 
		Combined result: 6.17 cycles
	VPCMPUDZrrik(3(Class<VR512>) -> 0(Class<VK16>))  [1.04;5.17]
		Dependencies:
			VPTESTNMDZrr(2(Class<VR512>) -> 0(Class<VK16>)) 
			VPMOVM2DZrk(1(Class<VK16>) -> 0(Class<VR512>)) 
		Combined result: 6.17 cycles

-----VPCMPUQZ128rri-----
	VPCMPUQZ128rri(1(Class<VR128X>) -> 0(Class<VK2>))  [1.01;3.03]
		Dependencies:
			VPCMPQZ128rri(2(Class<VR128X>) -> 0(Class<VK2>)) 
			VPMOVM2QZ128rk(1(Class<VK2>) -> 0(Class<VR128X>)) 
		Combined result: 4.03 cycles
	VPCMPUQZ128rri(2(Class<VR128X>) -> 0(Class<VK2>))  [1.01;3.02]
		Dependencies:
			VPCMPQZ128rri(2(Class<VR128X>) -> 0(Class<VK2>)) 
			VPMOVM2QZ128rk(1(Class<VK2>) -> 0(Class<VR128X>)) 
		Combined result: 4.02 cycles

-----VPCMPUQZ128rrik-----
	VPCMPUQZ128rrik(2(Class<VR128X>) -> 0(Class<VK2>))  [1.01;3.02]
		Dependencies:
			VPCMPQZ128rri(2(Class<VR128X>) -> 0(Class<VK2>)) 
			VPMOVM2QZ128rk(1(Class<VK2>) -> 0(Class<VR128X>)) 
		Combined result: 4.02 cycles
	VPCMPUQZ128rrik(3(Class<VR128X>) -> 0(Class<VK2>))  [1.01;3.03]
		Dependencies:
			VPCMPQZ128rri(2(Class<VR128X>) -> 0(Class<VK2>)) 
			VPMOVM2QZ128rk(1(Class<VK2>) -> 0(Class<VR128X>)) 
		Combined result: 4.03 cycles

-----VPCMPUQZ256rri-----
	VPCMPUQZ256rri(1(Class<VR256X>) -> 0(Class<VK4>))  [1.02;4.05]
		Dependencies:
			VPTESTNMQZ256rrk(2(Class<VR256X>) -> 0(Class<VK4>)) 
			VPMOVM2QZ256rk(1(Class<VK4>) -> 0(Class<VR256X>)) 
		Combined result: 5.05 cycles
	VPCMPUQZ256rri(2(Class<VR256X>) -> 0(Class<VK4>))  [0.996;4.03]
		Dependencies:
			VPTESTNMQZ256rrk(2(Class<VR256X>) -> 0(Class<VK4>)) 
			VPMOVM2QZ256rk(1(Class<VK4>) -> 0(Class<VR256X>)) 
		Combined result: 5.03 cycles

-----VPCMPUQZ256rrik-----
	VPCMPUQZ256rrik(2(Class<VR256X>) -> 0(Class<VK4>))  [1.01;4.04]
		Dependencies:
			VPTESTNMQZ256rrk(2(Class<VR256X>) -> 0(Class<VK4>)) 
			VPMOVM2QZ256rk(1(Class<VK4>) -> 0(Class<VR256X>)) 
		Combined result: 5.04 cycles
	VPCMPUQZ256rrik(3(Class<VR256X>) -> 0(Class<VK4>))  [1.01;4.04]
		Dependencies:
			VPTESTNMQZ256rrk(2(Class<VR256X>) -> 0(Class<VK4>)) 
			VPMOVM2QZ256rk(1(Class<VK4>) -> 0(Class<VR256X>)) 
		Combined result: 5.04 cycles

-----VPCMPUQZrri-----
	VPCMPUQZrri(1(Class<VR512>) -> 0(Class<VK8>))  [1.08;5.18]
		Dependencies:
			VPCMPQZrrik(2(Class<VR512>) -> 0(Class<VK8>)) 
			VPMOVM2QZrk(1(Class<VK8>) -> 0(Class<VR512>)) 
		Combined result: 6.18 cycles
	VPCMPUQZrri(2(Class<VR512>) -> 0(Class<VK8>))  [1.04;5.15]
		Dependencies:
			VPCMPQZrrik(2(Class<VR512>) -> 0(Class<VK8>)) 
			VPMOVM2QZrk(1(Class<VK8>) -> 0(Class<VR512>)) 
		Combined result: 6.15 cycles

-----VPCMPUQZrrik-----
	VPCMPUQZrrik(2(Class<VR512>) -> 0(Class<VK8>))  [1.03;5.13]
		Dependencies:
			VPCMPQZrrik(2(Class<VR512>) -> 0(Class<VK8>)) 
			VPMOVM2QZrk(1(Class<VK8>) -> 0(Class<VR512>)) 
		Combined result: 6.13 cycles
	VPCMPUQZrrik(3(Class<VR512>) -> 0(Class<VK8>))  [1.05;5.15]
		Dependencies:
			VPCMPQZrrik(2(Class<VR512>) -> 0(Class<VK8>)) 
			VPMOVM2QZrk(1(Class<VK8>) -> 0(Class<VR512>)) 
		Combined result: 6.15 cycles

-----VPCMPUWZ128rri-----
	VPCMPUWZ128rri(1(Class<VR128X>) -> 0(Class<VK8>))  [1.05;3.07]
		Dependencies:
			VPCMPGTWZ128rr(1(Class<VR128X>) -> 0(Class<VK8>)) 
			VPMOVM2WZ128rk(1(Class<VK8>) -> 0(Class<VR128X>)) 
		Combined result: 4.07 cycles
	VPCMPUWZ128rri(2(Class<VR128X>) -> 0(Class<VK8>))  [1.05;3.07]
		Dependencies:
			VPCMPGTWZ128rr(1(Class<VR128X>) -> 0(Class<VK8>)) 
			VPMOVM2WZ128rk(1(Class<VK8>) -> 0(Class<VR128X>)) 
		Combined result: 4.07 cycles

-----VPCMPUWZ128rrik-----
	VPCMPUWZ128rrik(2(Class<VR128X>) -> 0(Class<VK8>))  [1.01;3.03]
		Dependencies:
			VPCMPGTWZ128rr(1(Class<VR128X>) -> 0(Class<VK8>)) 
			VPMOVM2WZ128rk(1(Class<VK8>) -> 0(Class<VR128X>)) 
		Combined result: 4.03 cycles
	VPCMPUWZ128rrik(3(Class<VR128X>) -> 0(Class<VK8>))  [1.03;3.05]
		Dependencies:
			VPCMPGTWZ128rr(1(Class<VR128X>) -> 0(Class<VK8>)) 
			VPMOVM2WZ128rk(1(Class<VK8>) -> 0(Class<VR128X>)) 
		Combined result: 4.05 cycles

-----VPCMPUWZ256rri-----
	VPCMPUWZ256rri(1(Class<VR256X>) -> 0(Class<VK16>))  [1.03;4.06]
		Dependencies:
			VPCMPEQWZ256rr(2(Class<VR256X>) -> 0(Class<VK16>)) 
			VPMOVM2WZ256rk(1(Class<VK16>) -> 0(Class<VR256X>)) 
		Combined result: 5.06 cycles
	VPCMPUWZ256rri(2(Class<VR256X>) -> 0(Class<VK16>))  [1.02;4.05]
		Dependencies:
			VPCMPEQWZ256rr(2(Class<VR256X>) -> 0(Class<VK16>)) 
			VPMOVM2WZ256rk(1(Class<VK16>) -> 0(Class<VR256X>)) 
		Combined result: 5.05 cycles

-----VPCMPUWZ256rrik-----
	VPCMPUWZ256rrik(2(Class<VR256X>) -> 0(Class<VK16>))  [1.03;4.05]
		Dependencies:
			VPCMPEQWZ256rr(2(Class<VR256X>) -> 0(Class<VK16>)) 
			VPMOVM2WZ256rk(1(Class<VK16>) -> 0(Class<VR256X>)) 
		Combined result: 5.05 cycles
	VPCMPUWZ256rrik(3(Class<VR256X>) -> 0(Class<VK16>))  [1.02;4.04]
		Dependencies:
			VPCMPEQWZ256rr(2(Class<VR256X>) -> 0(Class<VK16>)) 
			VPMOVM2WZ256rk(1(Class<VK16>) -> 0(Class<VR256X>)) 
		Combined result: 5.04 cycles

-----VPCMPUWZrri-----
	VPCMPUWZrri(1(Class<VR512>) -> 0(Class<VK32>))  [1.07;5.21]
		Dependencies:
			VPCMPUWZrrik(3(Class<VR512>) -> 0(Class<VK32>)) 
			VPMOVM2WZrk(1(Class<VK32>) -> 0(Class<VR512>)) 
		Combined result: 6.21 cycles
	VPCMPUWZrri(2(Class<VR512>) -> 0(Class<VK32>))  [1.04;5.18]
		Dependencies:
			VPCMPUWZrrik(3(Class<VR512>) -> 0(Class<VK32>)) 
			VPMOVM2WZrk(1(Class<VK32>) -> 0(Class<VR512>)) 
		Combined result: 6.18 cycles

-----VPCMPUWZrrik-----
	VPCMPUWZrrik(2(Class<VR512>) -> 0(Class<VK32>))  [1.02;5.16]
		Dependencies:
			VPCMPUWZrrik(3(Class<VR512>) -> 0(Class<VK32>)) 
			VPMOVM2WZrk(1(Class<VK32>) -> 0(Class<VR512>)) 
		Combined result: 6.16 cycles
	VPCMPUWZrrik(3(Class<VR512>) -> 0(Class<VK32>))  [1.03;5.17]
		Dependencies:
			VPCMPUWZrrik(3(Class<VR512>) -> 0(Class<VK32>)) 
			VPMOVM2WZrk(1(Class<VK32>) -> 0(Class<VR512>)) 
		Combined result: 6.17 cycles

-----VPCMPWZ128rri-----
	VPCMPWZ128rri(1(Class<VR128X>) -> 0(Class<VK8>))  [1.02;3.04]
		Dependencies:
			VPCMPGTWZ128rr(1(Class<VR128X>) -> 0(Class<VK8>)) 
			VPMOVM2WZ128rk(1(Class<VK8>) -> 0(Class<VR128X>)) 
		Combined result: 4.04 cycles
	VPCMPWZ128rri(2(Class<VR128X>) -> 0(Class<VK8>))  [1.05;3.07]
		Dependencies:
			VPCMPGTWZ128rr(1(Class<VR128X>) -> 0(Class<VK8>)) 
			VPMOVM2WZ128rk(1(Class<VK8>) -> 0(Class<VR128X>)) 
		Combined result: 4.07 cycles

-----VPCMPWZ128rrik-----
	VPCMPWZ128rrik(2(Class<VR128X>) -> 0(Class<VK8>))  [1.02;3.04]
		Dependencies:
			VPCMPGTWZ128rr(1(Class<VR128X>) -> 0(Class<VK8>)) 
			VPMOVM2WZ128rk(1(Class<VK8>) -> 0(Class<VR128X>)) 
		Combined result: 4.04 cycles
	VPCMPWZ128rrik(3(Class<VR128X>) -> 0(Class<VK8>))  [1.02;3.04]
		Dependencies:
			VPCMPGTWZ128rr(1(Class<VR128X>) -> 0(Class<VK8>)) 
			VPMOVM2WZ128rk(1(Class<VK8>) -> 0(Class<VR128X>)) 
		Combined result: 4.04 cycles

-----VPCMPWZ256rri-----
	VPCMPWZ256rri(1(Class<VR256X>) -> 0(Class<VK16>))  [1.01;4.04]
		Dependencies:
			VPCMPEQWZ256rr(2(Class<VR256X>) -> 0(Class<VK16>)) 
			VPMOVM2WZ256rk(1(Class<VK16>) -> 0(Class<VR256X>)) 
		Combined result: 5.04 cycles
	VPCMPWZ256rri(2(Class<VR256X>) -> 0(Class<VK16>))  [1.03;4.06]
		Dependencies:
			VPCMPEQWZ256rr(2(Class<VR256X>) -> 0(Class<VK16>)) 
			VPMOVM2WZ256rk(1(Class<VK16>) -> 0(Class<VR256X>)) 
		Combined result: 5.06 cycles

-----VPCMPWZ256rrik-----
	VPCMPWZ256rrik(2(Class<VR256X>) -> 0(Class<VK16>))  [1.01;4.04]
		Dependencies:
			VPCMPEQWZ256rr(2(Class<VR256X>) -> 0(Class<VK16>)) 
			VPMOVM2WZ256rk(1(Class<VK16>) -> 0(Class<VR256X>)) 
		Combined result: 5.04 cycles
	VPCMPWZ256rrik(3(Class<VR256X>) -> 0(Class<VK16>))  [1.01;4.04]
		Dependencies:
			VPCMPEQWZ256rr(2(Class<VR256X>) -> 0(Class<VK16>)) 
			VPMOVM2WZ256rk(1(Class<VK16>) -> 0(Class<VR256X>)) 
		Combined result: 5.04 cycles

-----VPCMPWZrri-----
	VPCMPWZrri(1(Class<VR512>) -> 0(Class<VK32>))  [1.03;5.17]
		Dependencies:
			VPCMPUWZrrik(3(Class<VR512>) -> 0(Class<VK32>)) 
			VPMOVM2WZrk(1(Class<VK32>) -> 0(Class<VR512>)) 
		Combined result: 6.17 cycles
	VPCMPWZrri(2(Class<VR512>) -> 0(Class<VK32>))  [0.957;5.1]
		Dependencies:
			VPCMPUWZrrik(3(Class<VR512>) -> 0(Class<VK32>)) 
			VPMOVM2WZrk(1(Class<VK32>) -> 0(Class<VR512>)) 
		Combined result: 6.1 cycles

-----VPCMPWZrrik-----
	VPCMPWZrrik(2(Class<VR512>) -> 0(Class<VK32>))  [1.02;5.16]
		Dependencies:
			VPCMPUWZrrik(3(Class<VR512>) -> 0(Class<VK32>)) 
			VPMOVM2WZrk(1(Class<VK32>) -> 0(Class<VR512>)) 
		Combined result: 6.16 cycles
	VPCMPWZrrik(3(Class<VR512>) -> 0(Class<VK32>))  [1.04;5.18]
		Dependencies:
			VPCMPUWZrrik(3(Class<VR512>) -> 0(Class<VK32>)) 
			VPMOVM2WZrk(1(Class<VK32>) -> 0(Class<VR512>)) 
		Combined result: 6.18 cycles

-----VPCOMBri-----
	VPCOMBri(1(Class<VR128>) -> 0(Class<VR128>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VPCOMBri(2(Class<VR128>) -> 0(Class<VR128>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VPCOMDri-----
	VPCOMDri(1(Class<VR128>) -> 0(Class<VR128>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VPCOMDri(2(Class<VR128>) -> 0(Class<VR128>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VPCOMPRESSBZ128rr-----
	VPCOMPRESSBZ128rr(1(Class<VR128X>) -> 0(Class<VR128X>))  [2.02;2.02]
		 Successful, latency: 2.02

-----VPCOMPRESSBZ128rrk-----
	VPCOMPRESSBZ128rrk(1(Class<VR128X>) -> 0(Class<VR128X>))  [2.03;2.03]
		 Successful, latency: 2.03
	VPCOMPRESSBZ128rrk(3(Class<VR128X>) -> 0(Class<VR128X>))  [2.02;2.02]
		 Successful, latency: 2.02

-----VPCOMPRESSBZ128rrkz-----
	VPCOMPRESSBZ128rrkz(2(Class<VR128X>) -> 0(Class<VR128X>))  [2.02;2.02]
		 Successful, latency: 2.02

-----VPCOMPRESSBZ256rr-----
	VPCOMPRESSBZ256rr(1(Class<VR256X>) -> 0(Class<VR256X>))  [4.03;4.03]
		 Successful, latency: 4.03

-----VPCOMPRESSBZ256rrk-----
	VPCOMPRESSBZ256rrk(1(Class<VR256X>) -> 0(Class<VR256X>))  [4.03;4.03]
		 Successful, latency: 4.03
	VPCOMPRESSBZ256rrk(3(Class<VR256X>) -> 0(Class<VR256X>))  [4.03;4.03]
		 Successful, latency: 4.03

-----VPCOMPRESSBZ256rrkz-----
	VPCOMPRESSBZ256rrkz(2(Class<VR256X>) -> 0(Class<VR256X>))  [4.04;4.04]
		 Successful, latency: 4.04

-----VPCOMPRESSBZrr-----
	VPCOMPRESSBZrr(1(Class<VR512>) -> 0(Class<VR512>))  [5.08;5.08]
		 Successful, latency: 5.08

-----VPCOMPRESSBZrrk-----
	VPCOMPRESSBZrrk(1(Class<VR512>) -> 0(Class<VR512>))  [5.09;5.09]
		 Successful, latency: 5.09
	VPCOMPRESSBZrrk(3(Class<VR512>) -> 0(Class<VR512>))  [5.09;5.09]
		 Successful, latency: 5.09

-----VPCOMPRESSBZrrkz-----
	VPCOMPRESSBZrrkz(2(Class<VR512>) -> 0(Class<VR512>))  [5.09;5.09]
		 Successful, latency: 5.09

-----VPCOMPRESSDZ128rr-----
	VPCOMPRESSDZ128rr(1(Class<VR128X>) -> 0(Class<VR128X>))  [2.01;2.01]
		 Successful, latency: 2.01

-----VPCOMPRESSDZ128rrk-----
	VPCOMPRESSDZ128rrk(1(Class<VR128X>) -> 0(Class<VR128X>))  [2.02;2.02]
		 Successful, latency: 2.02
	VPCOMPRESSDZ128rrk(3(Class<VR128X>) -> 0(Class<VR128X>))  [2.01;2.01]
		 Successful, latency: 2.01

-----VPCOMPRESSDZ128rrkz-----
	VPCOMPRESSDZ128rrkz(2(Class<VR128X>) -> 0(Class<VR128X>))  [2.01;2.01]
		 Successful, latency: 2.01

-----VPCOMPRESSDZ256rr-----
	VPCOMPRESSDZ256rr(1(Class<VR256X>) -> 0(Class<VR256X>))  [4.04;4.04]
		 Successful, latency: 4.04

-----VPCOMPRESSDZ256rrk-----
	VPCOMPRESSDZ256rrk(1(Class<VR256X>) -> 0(Class<VR256X>))  [4.04;4.04]
		 Successful, latency: 4.04
	VPCOMPRESSDZ256rrk(3(Class<VR256X>) -> 0(Class<VR256X>))  [4.03;4.03]
		 Successful, latency: 4.03

-----VPCOMPRESSDZ256rrkz-----
	VPCOMPRESSDZ256rrkz(2(Class<VR256X>) -> 0(Class<VR256X>))  [4.05;4.05]
		 Successful, latency: 4.05

-----VPCOMPRESSDZrr-----
	VPCOMPRESSDZrr(1(Class<VR512>) -> 0(Class<VR512>))  [5.07;5.07]
		 Successful, latency: 5.07

-----VPCOMPRESSDZrrk-----
	VPCOMPRESSDZrrk(1(Class<VR512>) -> 0(Class<VR512>))  [5.05;5.05]
		 Successful, latency: 5.05
	VPCOMPRESSDZrrk(3(Class<VR512>) -> 0(Class<VR512>))  [5.09;5.09]
		 Successful, latency: 5.09

-----VPCOMPRESSDZrrkz-----
	VPCOMPRESSDZrrkz(2(Class<VR512>) -> 0(Class<VR512>))  [5.07;5.07]
		 Successful, latency: 5.07

-----VPCOMPRESSQZ128rr-----
	VPCOMPRESSQZ128rr(1(Class<VR128X>) -> 0(Class<VR128X>))  [2.03;2.03]
		 Successful, latency: 2.03

-----VPCOMPRESSQZ128rrk-----
	VPCOMPRESSQZ128rrk(1(Class<VR128X>) -> 0(Class<VR128X>))  [2.03;2.03]
		 Successful, latency: 2.03
	VPCOMPRESSQZ128rrk(3(Class<VR128X>) -> 0(Class<VR128X>))  [2.02;2.02]
		 Successful, latency: 2.02

-----VPCOMPRESSQZ128rrkz-----
	VPCOMPRESSQZ128rrkz(2(Class<VR128X>) -> 0(Class<VR128X>))  [2.02;2.02]
		 Successful, latency: 2.02

-----VPCOMPRESSQZ256rr-----
	VPCOMPRESSQZ256rr(1(Class<VR256X>) -> 0(Class<VR256X>))  [4.04;4.04]
		 Successful, latency: 4.04

-----VPCOMPRESSQZ256rrk-----
	VPCOMPRESSQZ256rrk(1(Class<VR256X>) -> 0(Class<VR256X>))  [4.03;4.03]
		 Successful, latency: 4.03
	VPCOMPRESSQZ256rrk(3(Class<VR256X>) -> 0(Class<VR256X>))  [4.03;4.03]
		 Successful, latency: 4.03

-----VPCOMPRESSQZ256rrkz-----
	VPCOMPRESSQZ256rrkz(2(Class<VR256X>) -> 0(Class<VR256X>))  [4.03;4.03]
		 Successful, latency: 4.03

-----VPCOMPRESSQZrr-----
	VPCOMPRESSQZrr(1(Class<VR512>) -> 0(Class<VR512>))  [5.06;5.06]
		 Successful, latency: 5.06

-----VPCOMPRESSQZrrk-----
	VPCOMPRESSQZrrk(1(Class<VR512>) -> 0(Class<VR512>))  [5.06;5.06]
		 Successful, latency: 5.06
	VPCOMPRESSQZrrk(3(Class<VR512>) -> 0(Class<VR512>))  [5.1;5.1]
		 Successful, latency: 5.1

-----VPCOMPRESSQZrrkz-----
	VPCOMPRESSQZrrkz(2(Class<VR512>) -> 0(Class<VR512>))  [5.07;5.07]
		 Successful, latency: 5.07

-----VPCOMPRESSWZ128rr-----
	VPCOMPRESSWZ128rr(1(Class<VR128X>) -> 0(Class<VR128X>))  [2.02;2.02]
		 Successful, latency: 2.02

-----VPCOMPRESSWZ128rrk-----
	VPCOMPRESSWZ128rrk(1(Class<VR128X>) -> 0(Class<VR128X>))  [2.02;2.02]
		 Successful, latency: 2.02
	VPCOMPRESSWZ128rrk(3(Class<VR128X>) -> 0(Class<VR128X>))  [2.02;2.02]
		 Successful, latency: 2.02

-----VPCOMPRESSWZ128rrkz-----
	VPCOMPRESSWZ128rrkz(2(Class<VR128X>) -> 0(Class<VR128X>))  [2.03;2.03]
		 Successful, latency: 2.03

-----VPCOMPRESSWZ256rr-----
	VPCOMPRESSWZ256rr(1(Class<VR256X>) -> 0(Class<VR256X>))  [4.04;4.04]
		 Successful, latency: 4.04

-----VPCOMPRESSWZ256rrk-----
	VPCOMPRESSWZ256rrk(1(Class<VR256X>) -> 0(Class<VR256X>))  [4.03;4.03]
		 Successful, latency: 4.03
	VPCOMPRESSWZ256rrk(3(Class<VR256X>) -> 0(Class<VR256X>))  [4.05;4.05]
		 Successful, latency: 4.05

-----VPCOMPRESSWZ256rrkz-----
	VPCOMPRESSWZ256rrkz(2(Class<VR256X>) -> 0(Class<VR256X>))  [4.03;4.03]
		 Successful, latency: 4.03

-----VPCOMPRESSWZrr-----
	VPCOMPRESSWZrr(1(Class<VR512>) -> 0(Class<VR512>))  [5.09;5.09]
		 Successful, latency: 5.09

-----VPCOMPRESSWZrrk-----
	VPCOMPRESSWZrrk(1(Class<VR512>) -> 0(Class<VR512>))  [5.07;5.07]
		 Successful, latency: 5.07
	VPCOMPRESSWZrrk(3(Class<VR512>) -> 0(Class<VR512>))  [5.09;5.09]
		 Successful, latency: 5.09

-----VPCOMPRESSWZrrkz-----
	VPCOMPRESSWZrrkz(2(Class<VR512>) -> 0(Class<VR512>))  [5.07;5.07]
		 Successful, latency: 5.07

-----VPCOMQri-----
	VPCOMQri(1(Class<VR128>) -> 0(Class<VR128>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VPCOMQri(2(Class<VR128>) -> 0(Class<VR128>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VPCOMUBri-----
	VPCOMUBri(1(Class<VR128>) -> 0(Class<VR128>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VPCOMUBri(2(Class<VR128>) -> 0(Class<VR128>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VPCOMUDri-----
	VPCOMUDri(1(Class<VR128>) -> 0(Class<VR128>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VPCOMUDri(2(Class<VR128>) -> 0(Class<VR128>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VPCOMUQri-----
	VPCOMUQri(1(Class<VR128>) -> 0(Class<VR128>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VPCOMUQri(2(Class<VR128>) -> 0(Class<VR128>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VPCOMUWri-----
	VPCOMUWri(1(Class<VR128>) -> 0(Class<VR128>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VPCOMUWri(2(Class<VR128>) -> 0(Class<VR128>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VPCOMWri-----
	VPCOMWri(1(Class<VR128>) -> 0(Class<VR128>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VPCOMWri(2(Class<VR128>) -> 0(Class<VR128>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VPCONFLICTDZ128rr-----
	VPCONFLICTDZ128rr(1(Class<VR128X>) -> 0(Class<VR128X>))  [2.03;2.03]
		 Successful, latency: 2.03

-----VPCONFLICTDZ128rrk-----
	VPCONFLICTDZ128rrk(1(Class<VR128X>) -> 0(Class<VR128X>))  [2.03;2.03]
		 Successful, latency: 2.03
	VPCONFLICTDZ128rrk(3(Class<VR128X>) -> 0(Class<VR128X>))  [2.02;2.02]
		 Successful, latency: 2.02

-----VPCONFLICTDZ128rrkz-----
	VPCONFLICTDZ128rrkz(2(Class<VR128X>) -> 0(Class<VR128X>))  [2.02;2.02]
		 Successful, latency: 2.02

-----VPCONFLICTDZ256rr-----
	VPCONFLICTDZ256rr(1(Class<VR256X>) -> 0(Class<VR256X>))  [6.04;6.04]
		 Successful, latency: 6.04

-----VPCONFLICTDZ256rrk-----
	VPCONFLICTDZ256rrk(1(Class<VR256X>) -> 0(Class<VR256X>))  [2.03;2.03]
		 Successful, latency: 2.03
	VPCONFLICTDZ256rrk(3(Class<VR256X>) -> 0(Class<VR256X>))  [6.04;6.04]
		 Successful, latency: 6.04

-----VPCONFLICTDZ256rrkz-----
	VPCONFLICTDZ256rrkz(2(Class<VR256X>) -> 0(Class<VR256X>))  [6.07;6.07]
		 Successful, latency: 6.07

-----VPCONFLICTDZrr-----
	VPCONFLICTDZrr(1(Class<VR512>) -> 0(Class<VR512>))  [6.03;6.03]
		 Successful, latency: 6.03

-----VPCONFLICTDZrrk-----
	VPCONFLICTDZrrk(1(Class<VR512>) -> 0(Class<VR512>))  [2.02;2.02]
		 Successful, latency: 2.02
	VPCONFLICTDZrrk(3(Class<VR512>) -> 0(Class<VR512>))  [6.07;6.07]
		 Successful, latency: 6.07

-----VPCONFLICTDZrrkz-----
	VPCONFLICTDZrrkz(2(Class<VR512>) -> 0(Class<VR512>))  [6.04;6.04]
		 Successful, latency: 6.04

-----VPCONFLICTQZ128rr-----
	VPCONFLICTQZ128rr(1(Class<VR128X>) -> 0(Class<VR128X>))  [2.02;2.02]
		 Successful, latency: 2.02

-----VPCONFLICTQZ128rrk-----
	VPCONFLICTQZ128rrk(1(Class<VR128X>) -> 0(Class<VR128X>))  [2.02;2.02]
		 Successful, latency: 2.02
	VPCONFLICTQZ128rrk(3(Class<VR128X>) -> 0(Class<VR128X>))  [2.03;2.03]
		 Successful, latency: 2.03

-----VPCONFLICTQZ128rrkz-----
	VPCONFLICTQZ128rrkz(2(Class<VR128X>) -> 0(Class<VR128X>))  [2.02;2.02]
		 Successful, latency: 2.02

-----VPCONFLICTQZ256rr-----
	VPCONFLICTQZ256rr(1(Class<VR256X>) -> 0(Class<VR256X>))  [6.05;6.05]
		 Successful, latency: 6.05

-----VPCONFLICTQZ256rrk-----
	VPCONFLICTQZ256rrk(1(Class<VR256X>) -> 0(Class<VR256X>))  [2.02;2.02]
		 Successful, latency: 2.02
	VPCONFLICTQZ256rrk(3(Class<VR256X>) -> 0(Class<VR256X>))  [6.07;6.07]
		 Successful, latency: 6.07

-----VPCONFLICTQZ256rrkz-----
	VPCONFLICTQZ256rrkz(2(Class<VR256X>) -> 0(Class<VR256X>))  [6.05;6.05]
		 Successful, latency: 6.05

-----VPCONFLICTQZrr-----
	VPCONFLICTQZrr(1(Class<VR512>) -> 0(Class<VR512>))  [6.04;6.04]
		 Successful, latency: 6.04

-----VPCONFLICTQZrrk-----
	VPCONFLICTQZrrk(1(Class<VR512>) -> 0(Class<VR512>))  [2.02;2.02]
		 Successful, latency: 2.02
	VPCONFLICTQZrrk(3(Class<VR512>) -> 0(Class<VR512>))  [6.06;6.06]
		 Successful, latency: 6.06

-----VPCONFLICTQZrrkz-----
	VPCONFLICTQZrrkz(2(Class<VR512>) -> 0(Class<VR512>))  [6.03;6.03]
		 Successful, latency: 6.03

-----VPDPBSSDSYrr-----
	VPDPBSSDSYrr(1(Class<VR256>) -> 0(Class<VR256>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VPDPBSSDSYrr(2(Class<VR256>) -> 0(Class<VR256>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VPDPBSSDSYrr(3(Class<VR256>) -> 0(Class<VR256>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VPDPBSSDSZ128r-----
	VPDPBSSDSZ128r(1(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VPDPBSSDSZ128r(2(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VPDPBSSDSZ128r(3(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VPDPBSSDSZ128rk-----
	VPDPBSSDSZ128rk(1(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VPDPBSSDSZ128rk(3(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VPDPBSSDSZ128rk(4(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VPDPBSSDSZ128rkz-----
	VPDPBSSDSZ128rkz(1(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VPDPBSSDSZ128rkz(3(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VPDPBSSDSZ128rkz(4(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VPDPBSSDSZ256r-----
	VPDPBSSDSZ256r(1(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VPDPBSSDSZ256r(2(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VPDPBSSDSZ256r(3(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VPDPBSSDSZ256rk-----
	VPDPBSSDSZ256rk(1(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VPDPBSSDSZ256rk(3(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VPDPBSSDSZ256rk(4(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VPDPBSSDSZ256rkz-----
	VPDPBSSDSZ256rkz(1(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VPDPBSSDSZ256rkz(3(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VPDPBSSDSZ256rkz(4(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VPDPBSSDSZr-----
	VPDPBSSDSZr(1(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VPDPBSSDSZr(2(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VPDPBSSDSZr(3(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VPDPBSSDSZrk-----
	VPDPBSSDSZrk(1(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VPDPBSSDSZrk(3(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VPDPBSSDSZrk(4(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VPDPBSSDSZrkz-----
	VPDPBSSDSZrkz(1(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VPDPBSSDSZrkz(3(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VPDPBSSDSZrkz(4(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VPDPBSSDSrr-----
	VPDPBSSDSrr(1(Class<VR128>) -> 0(Class<VR128>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VPDPBSSDSrr(2(Class<VR128>) -> 0(Class<VR128>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VPDPBSSDSrr(3(Class<VR128>) -> 0(Class<VR128>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VPDPBSSDYrr-----
	VPDPBSSDYrr(1(Class<VR256>) -> 0(Class<VR256>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VPDPBSSDYrr(2(Class<VR256>) -> 0(Class<VR256>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VPDPBSSDYrr(3(Class<VR256>) -> 0(Class<VR256>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VPDPBSSDZ128r-----
	VPDPBSSDZ128r(1(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VPDPBSSDZ128r(2(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VPDPBSSDZ128r(3(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VPDPBSSDZ128rk-----
	VPDPBSSDZ128rk(1(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VPDPBSSDZ128rk(3(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VPDPBSSDZ128rk(4(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VPDPBSSDZ128rkz-----
	VPDPBSSDZ128rkz(1(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VPDPBSSDZ128rkz(3(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VPDPBSSDZ128rkz(4(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VPDPBSSDZ256r-----
	VPDPBSSDZ256r(1(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VPDPBSSDZ256r(2(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VPDPBSSDZ256r(3(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VPDPBSSDZ256rk-----
	VPDPBSSDZ256rk(1(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VPDPBSSDZ256rk(3(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VPDPBSSDZ256rk(4(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VPDPBSSDZ256rkz-----
	VPDPBSSDZ256rkz(1(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VPDPBSSDZ256rkz(3(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VPDPBSSDZ256rkz(4(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VPDPBSSDZr-----
	VPDPBSSDZr(1(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VPDPBSSDZr(2(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VPDPBSSDZr(3(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VPDPBSSDZrk-----
	VPDPBSSDZrk(1(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VPDPBSSDZrk(3(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VPDPBSSDZrk(4(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VPDPBSSDZrkz-----
	VPDPBSSDZrkz(1(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VPDPBSSDZrkz(3(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VPDPBSSDZrkz(4(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VPDPBSSDrr-----
	VPDPBSSDrr(1(Class<VR128>) -> 0(Class<VR128>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VPDPBSSDrr(2(Class<VR128>) -> 0(Class<VR128>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VPDPBSSDrr(3(Class<VR128>) -> 0(Class<VR128>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VPDPBSUDSYrr-----
	VPDPBSUDSYrr(1(Class<VR256>) -> 0(Class<VR256>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VPDPBSUDSYrr(2(Class<VR256>) -> 0(Class<VR256>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VPDPBSUDSYrr(3(Class<VR256>) -> 0(Class<VR256>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VPDPBSUDSZ128r-----
	VPDPBSUDSZ128r(1(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VPDPBSUDSZ128r(2(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VPDPBSUDSZ128r(3(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VPDPBSUDSZ128rk-----
	VPDPBSUDSZ128rk(1(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VPDPBSUDSZ128rk(3(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VPDPBSUDSZ128rk(4(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VPDPBSUDSZ128rkz-----
	VPDPBSUDSZ128rkz(1(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VPDPBSUDSZ128rkz(3(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VPDPBSUDSZ128rkz(4(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VPDPBSUDSZ256r-----
	VPDPBSUDSZ256r(1(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VPDPBSUDSZ256r(2(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VPDPBSUDSZ256r(3(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VPDPBSUDSZ256rk-----
	VPDPBSUDSZ256rk(1(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VPDPBSUDSZ256rk(3(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VPDPBSUDSZ256rk(4(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VPDPBSUDSZ256rkz-----
	VPDPBSUDSZ256rkz(1(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VPDPBSUDSZ256rkz(3(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VPDPBSUDSZ256rkz(4(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VPDPBSUDSZr-----
	VPDPBSUDSZr(1(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VPDPBSUDSZr(2(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VPDPBSUDSZr(3(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VPDPBSUDSZrk-----
	VPDPBSUDSZrk(1(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VPDPBSUDSZrk(3(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VPDPBSUDSZrk(4(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VPDPBSUDSZrkz-----
	VPDPBSUDSZrkz(1(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VPDPBSUDSZrkz(3(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VPDPBSUDSZrkz(4(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VPDPBSUDSrr-----
	VPDPBSUDSrr(1(Class<VR128>) -> 0(Class<VR128>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VPDPBSUDSrr(2(Class<VR128>) -> 0(Class<VR128>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VPDPBSUDSrr(3(Class<VR128>) -> 0(Class<VR128>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VPDPBSUDYrr-----
	VPDPBSUDYrr(1(Class<VR256>) -> 0(Class<VR256>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VPDPBSUDYrr(2(Class<VR256>) -> 0(Class<VR256>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VPDPBSUDYrr(3(Class<VR256>) -> 0(Class<VR256>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VPDPBSUDZ128r-----
	VPDPBSUDZ128r(1(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VPDPBSUDZ128r(2(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VPDPBSUDZ128r(3(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VPDPBSUDZ128rk-----
	VPDPBSUDZ128rk(1(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VPDPBSUDZ128rk(3(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VPDPBSUDZ128rk(4(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VPDPBSUDZ128rkz-----
	VPDPBSUDZ128rkz(1(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VPDPBSUDZ128rkz(3(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VPDPBSUDZ128rkz(4(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VPDPBSUDZ256r-----
	VPDPBSUDZ256r(1(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VPDPBSUDZ256r(2(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VPDPBSUDZ256r(3(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VPDPBSUDZ256rk-----
	VPDPBSUDZ256rk(1(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VPDPBSUDZ256rk(3(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VPDPBSUDZ256rk(4(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VPDPBSUDZ256rkz-----
	VPDPBSUDZ256rkz(1(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VPDPBSUDZ256rkz(3(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VPDPBSUDZ256rkz(4(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VPDPBSUDZr-----
	VPDPBSUDZr(1(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VPDPBSUDZr(2(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VPDPBSUDZr(3(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VPDPBSUDZrk-----
	VPDPBSUDZrk(1(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VPDPBSUDZrk(3(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VPDPBSUDZrk(4(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VPDPBSUDZrkz-----
	VPDPBSUDZrkz(1(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VPDPBSUDZrkz(3(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VPDPBSUDZrkz(4(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VPDPBSUDrr-----
	VPDPBSUDrr(1(Class<VR128>) -> 0(Class<VR128>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VPDPBSUDrr(2(Class<VR128>) -> 0(Class<VR128>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VPDPBSUDrr(3(Class<VR128>) -> 0(Class<VR128>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VPDPBUSDSYrr-----
	VPDPBUSDSYrr(1(Class<VR256>) -> 0(Class<VR256>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VPDPBUSDSYrr(2(Class<VR256>) -> 0(Class<VR256>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VPDPBUSDSYrr(3(Class<VR256>) -> 0(Class<VR256>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VPDPBUSDSZ128r-----
	VPDPBUSDSZ128r(1(Class<VR128X>) -> 0(Class<VR128X>))  [4.07;4.07]
		 Successful, latency: 4.07
	VPDPBUSDSZ128r(2(Class<VR128X>) -> 0(Class<VR128X>))  [4.04;4.04]
		 Successful, latency: 4.04
	VPDPBUSDSZ128r(3(Class<VR128X>) -> 0(Class<VR128X>))  [4.04;4.04]
		 Successful, latency: 4.04

-----VPDPBUSDSZ128rk-----
	VPDPBUSDSZ128rk(1(Class<VR128X>) -> 0(Class<VR128X>))  [4.04;4.04]
		 Successful, latency: 4.04
	VPDPBUSDSZ128rk(3(Class<VR128X>) -> 0(Class<VR128X>))  [4.03;4.03]
		 Successful, latency: 4.03
	VPDPBUSDSZ128rk(4(Class<VR128X>) -> 0(Class<VR128X>))  [4.04;4.04]
		 Successful, latency: 4.04

-----VPDPBUSDSZ128rkz-----
	VPDPBUSDSZ128rkz(1(Class<VR128X>) -> 0(Class<VR128X>))  [4.03;4.03]
		 Successful, latency: 4.03
	VPDPBUSDSZ128rkz(3(Class<VR128X>) -> 0(Class<VR128X>))  [4.04;4.04]
		 Successful, latency: 4.04
	VPDPBUSDSZ128rkz(4(Class<VR128X>) -> 0(Class<VR128X>))  [4.03;4.03]
		 Successful, latency: 4.03

-----VPDPBUSDSZ256r-----
	VPDPBUSDSZ256r(1(Class<VR256X>) -> 0(Class<VR256X>))  [4.02;4.02]
		 Successful, latency: 4.02
	VPDPBUSDSZ256r(2(Class<VR256X>) -> 0(Class<VR256X>))  [4.03;4.03]
		 Successful, latency: 4.03
	VPDPBUSDSZ256r(3(Class<VR256X>) -> 0(Class<VR256X>))  [4.05;4.05]
		 Successful, latency: 4.05

-----VPDPBUSDSZ256rk-----
	VPDPBUSDSZ256rk(1(Class<VR256X>) -> 0(Class<VR256X>))  [4.03;4.03]
		 Successful, latency: 4.03
	VPDPBUSDSZ256rk(3(Class<VR256X>) -> 0(Class<VR256X>))  [4.04;4.04]
		 Successful, latency: 4.04
	VPDPBUSDSZ256rk(4(Class<VR256X>) -> 0(Class<VR256X>))  [4.03;4.03]
		 Successful, latency: 4.03

-----VPDPBUSDSZ256rkz-----
	VPDPBUSDSZ256rkz(1(Class<VR256X>) -> 0(Class<VR256X>))  [4.04;4.04]
		 Successful, latency: 4.04
	VPDPBUSDSZ256rkz(3(Class<VR256X>) -> 0(Class<VR256X>))  [4.03;4.03]
		 Successful, latency: 4.03
	VPDPBUSDSZ256rkz(4(Class<VR256X>) -> 0(Class<VR256X>))  [4.03;4.03]
		 Successful, latency: 4.03

-----VPDPBUSDSZr-----
	VPDPBUSDSZr(1(Class<VR512>) -> 0(Class<VR512>))  [4.04;4.04]
		 Successful, latency: 4.04
	VPDPBUSDSZr(2(Class<VR512>) -> 0(Class<VR512>))  [4.05;4.05]
		 Successful, latency: 4.05
	VPDPBUSDSZr(3(Class<VR512>) -> 0(Class<VR512>))  [4.04;4.04]
		 Successful, latency: 4.04

-----VPDPBUSDSZrk-----
	VPDPBUSDSZrk(1(Class<VR512>) -> 0(Class<VR512>))  [4.04;4.04]
		 Successful, latency: 4.04
	VPDPBUSDSZrk(3(Class<VR512>) -> 0(Class<VR512>))  [4.03;4.03]
		 Successful, latency: 4.03
	VPDPBUSDSZrk(4(Class<VR512>) -> 0(Class<VR512>))  [4.04;4.04]
		 Successful, latency: 4.04

-----VPDPBUSDSZrkz-----
	VPDPBUSDSZrkz(1(Class<VR512>) -> 0(Class<VR512>))  [4.03;4.03]
		 Successful, latency: 4.03
	VPDPBUSDSZrkz(3(Class<VR512>) -> 0(Class<VR512>))  [4.03;4.03]
		 Successful, latency: 4.03
	VPDPBUSDSZrkz(4(Class<VR512>) -> 0(Class<VR512>))  [4.03;4.03]
		 Successful, latency: 4.03

-----VPDPBUSDSrr-----
	VPDPBUSDSrr(1(Class<VR128>) -> 0(Class<VR128>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VPDPBUSDSrr(2(Class<VR128>) -> 0(Class<VR128>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VPDPBUSDSrr(3(Class<VR128>) -> 0(Class<VR128>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VPDPBUSDYrr-----
	VPDPBUSDYrr(1(Class<VR256>) -> 0(Class<VR256>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VPDPBUSDYrr(2(Class<VR256>) -> 0(Class<VR256>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VPDPBUSDYrr(3(Class<VR256>) -> 0(Class<VR256>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VPDPBUSDZ128r-----
	VPDPBUSDZ128r(1(Class<VR128X>) -> 0(Class<VR128X>))  [4.03;4.03]
		 Successful, latency: 4.03
	VPDPBUSDZ128r(2(Class<VR128X>) -> 0(Class<VR128X>))  [4.03;4.03]
		 Successful, latency: 4.03
	VPDPBUSDZ128r(3(Class<VR128X>) -> 0(Class<VR128X>))  [4.04;4.04]
		 Successful, latency: 4.04

-----VPDPBUSDZ128rk-----
	VPDPBUSDZ128rk(1(Class<VR128X>) -> 0(Class<VR128X>))  [4.03;4.03]
		 Successful, latency: 4.03
	VPDPBUSDZ128rk(3(Class<VR128X>) -> 0(Class<VR128X>))  [4.04;4.04]
		 Successful, latency: 4.04
	VPDPBUSDZ128rk(4(Class<VR128X>) -> 0(Class<VR128X>))  [4.07;4.07]
		 Successful, latency: 4.07

-----VPDPBUSDZ128rkz-----
	VPDPBUSDZ128rkz(1(Class<VR128X>) -> 0(Class<VR128X>))  [4.03;4.03]
		 Successful, latency: 4.03
	VPDPBUSDZ128rkz(3(Class<VR128X>) -> 0(Class<VR128X>))  [4.03;4.03]
		 Successful, latency: 4.03
	VPDPBUSDZ128rkz(4(Class<VR128X>) -> 0(Class<VR128X>))  [4.03;4.03]
		 Successful, latency: 4.03

-----VPDPBUSDZ256r-----
	VPDPBUSDZ256r(1(Class<VR256X>) -> 0(Class<VR256X>))  [4.04;4.04]
		 Successful, latency: 4.04
	VPDPBUSDZ256r(2(Class<VR256X>) -> 0(Class<VR256X>))  [4.09;4.09]
		 Successful, latency: 4.09
	VPDPBUSDZ256r(3(Class<VR256X>) -> 0(Class<VR256X>))  [4.03;4.03]
		 Successful, latency: 4.03

-----VPDPBUSDZ256rk-----
	VPDPBUSDZ256rk(1(Class<VR256X>) -> 0(Class<VR256X>))  [4.04;4.04]
		 Successful, latency: 4.04
	VPDPBUSDZ256rk(3(Class<VR256X>) -> 0(Class<VR256X>))  [4.04;4.04]
		 Successful, latency: 4.04
	VPDPBUSDZ256rk(4(Class<VR256X>) -> 0(Class<VR256X>))  [4.02;4.02]
		 Successful, latency: 4.02

-----VPDPBUSDZ256rkz-----
	VPDPBUSDZ256rkz(1(Class<VR256X>) -> 0(Class<VR256X>))  [4.05;4.05]
		 Successful, latency: 4.05
	VPDPBUSDZ256rkz(3(Class<VR256X>) -> 0(Class<VR256X>))  [4.06;4.06]
		 Successful, latency: 4.06
	VPDPBUSDZ256rkz(4(Class<VR256X>) -> 0(Class<VR256X>))  [4.05;4.05]
		 Successful, latency: 4.05

-----VPDPBUSDZr-----
	VPDPBUSDZr(1(Class<VR512>) -> 0(Class<VR512>))  [4.03;4.03]
		 Successful, latency: 4.03
	VPDPBUSDZr(2(Class<VR512>) -> 0(Class<VR512>))  [4.02;4.02]
		 Successful, latency: 4.02
	VPDPBUSDZr(3(Class<VR512>) -> 0(Class<VR512>))  [4.05;4.05]
		 Successful, latency: 4.05

-----VPDPBUSDZrk-----
	VPDPBUSDZrk(1(Class<VR512>) -> 0(Class<VR512>))  [4.08;4.08]
		 Successful, latency: 4.08
	VPDPBUSDZrk(3(Class<VR512>) -> 0(Class<VR512>))  [4.06;4.06]
		 Successful, latency: 4.06
	VPDPBUSDZrk(4(Class<VR512>) -> 0(Class<VR512>))  [4.04;4.04]
		 Successful, latency: 4.04

-----VPDPBUSDZrkz-----
	VPDPBUSDZrkz(1(Class<VR512>) -> 0(Class<VR512>))  [4.05;4.05]
		 Successful, latency: 4.05
	VPDPBUSDZrkz(3(Class<VR512>) -> 0(Class<VR512>))  [4.03;4.03]
		 Successful, latency: 4.03
	VPDPBUSDZrkz(4(Class<VR512>) -> 0(Class<VR512>))  [4.02;4.02]
		 Successful, latency: 4.02

-----VPDPBUSDrr-----
	VPDPBUSDrr(1(Class<VR128>) -> 0(Class<VR128>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VPDPBUSDrr(2(Class<VR128>) -> 0(Class<VR128>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VPDPBUSDrr(3(Class<VR128>) -> 0(Class<VR128>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VPDPBUUDSYrr-----
	VPDPBUUDSYrr(1(Class<VR256>) -> 0(Class<VR256>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VPDPBUUDSYrr(2(Class<VR256>) -> 0(Class<VR256>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VPDPBUUDSYrr(3(Class<VR256>) -> 0(Class<VR256>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VPDPBUUDSZ128r-----
	VPDPBUUDSZ128r(1(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VPDPBUUDSZ128r(2(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VPDPBUUDSZ128r(3(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VPDPBUUDSZ128rk-----
	VPDPBUUDSZ128rk(1(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VPDPBUUDSZ128rk(3(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VPDPBUUDSZ128rk(4(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VPDPBUUDSZ128rkz-----
	VPDPBUUDSZ128rkz(1(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VPDPBUUDSZ128rkz(3(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VPDPBUUDSZ128rkz(4(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VPDPBUUDSZ256r-----
	VPDPBUUDSZ256r(1(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VPDPBUUDSZ256r(2(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VPDPBUUDSZ256r(3(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VPDPBUUDSZ256rk-----
	VPDPBUUDSZ256rk(1(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VPDPBUUDSZ256rk(3(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VPDPBUUDSZ256rk(4(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VPDPBUUDSZ256rkz-----
	VPDPBUUDSZ256rkz(1(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VPDPBUUDSZ256rkz(3(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VPDPBUUDSZ256rkz(4(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VPDPBUUDSZr-----
	VPDPBUUDSZr(1(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VPDPBUUDSZr(2(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VPDPBUUDSZr(3(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VPDPBUUDSZrk-----
	VPDPBUUDSZrk(1(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VPDPBUUDSZrk(3(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VPDPBUUDSZrk(4(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VPDPBUUDSZrkz-----
	VPDPBUUDSZrkz(1(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VPDPBUUDSZrkz(3(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VPDPBUUDSZrkz(4(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VPDPBUUDSrr-----
	VPDPBUUDSrr(1(Class<VR128>) -> 0(Class<VR128>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VPDPBUUDSrr(2(Class<VR128>) -> 0(Class<VR128>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VPDPBUUDSrr(3(Class<VR128>) -> 0(Class<VR128>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VPDPBUUDYrr-----
	VPDPBUUDYrr(1(Class<VR256>) -> 0(Class<VR256>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VPDPBUUDYrr(2(Class<VR256>) -> 0(Class<VR256>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VPDPBUUDYrr(3(Class<VR256>) -> 0(Class<VR256>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VPDPBUUDZ128r-----
	VPDPBUUDZ128r(1(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VPDPBUUDZ128r(2(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VPDPBUUDZ128r(3(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VPDPBUUDZ128rk-----
	VPDPBUUDZ128rk(1(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VPDPBUUDZ128rk(3(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VPDPBUUDZ128rk(4(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VPDPBUUDZ128rkz-----
	VPDPBUUDZ128rkz(1(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VPDPBUUDZ128rkz(3(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VPDPBUUDZ128rkz(4(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VPDPBUUDZ256r-----
	VPDPBUUDZ256r(1(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VPDPBUUDZ256r(2(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VPDPBUUDZ256r(3(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VPDPBUUDZ256rk-----
	VPDPBUUDZ256rk(1(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VPDPBUUDZ256rk(3(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VPDPBUUDZ256rk(4(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VPDPBUUDZ256rkz-----
	VPDPBUUDZ256rkz(1(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VPDPBUUDZ256rkz(3(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VPDPBUUDZ256rkz(4(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VPDPBUUDZr-----
	VPDPBUUDZr(1(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VPDPBUUDZr(2(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VPDPBUUDZr(3(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VPDPBUUDZrk-----
	VPDPBUUDZrk(1(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VPDPBUUDZrk(3(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VPDPBUUDZrk(4(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VPDPBUUDZrkz-----
	VPDPBUUDZrkz(1(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VPDPBUUDZrkz(3(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VPDPBUUDZrkz(4(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VPDPBUUDrr-----
	VPDPBUUDrr(1(Class<VR128>) -> 0(Class<VR128>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VPDPBUUDrr(2(Class<VR128>) -> 0(Class<VR128>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VPDPBUUDrr(3(Class<VR128>) -> 0(Class<VR128>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VPDPWSSDSYrr-----
	VPDPWSSDSYrr(1(Class<VR256>) -> 0(Class<VR256>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VPDPWSSDSYrr(2(Class<VR256>) -> 0(Class<VR256>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VPDPWSSDSYrr(3(Class<VR256>) -> 0(Class<VR256>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VPDPWSSDSZ128r-----
	VPDPWSSDSZ128r(1(Class<VR128X>) -> 0(Class<VR128X>))  [4.03;4.03]
		 Successful, latency: 4.03
	VPDPWSSDSZ128r(2(Class<VR128X>) -> 0(Class<VR128X>))  [4.04;4.04]
		 Successful, latency: 4.04
	VPDPWSSDSZ128r(3(Class<VR128X>) -> 0(Class<VR128X>))  [4.05;4.05]
		 Successful, latency: 4.05

-----VPDPWSSDSZ128rk-----
	VPDPWSSDSZ128rk(1(Class<VR128X>) -> 0(Class<VR128X>))  [4.04;4.04]
		 Successful, latency: 4.04
	VPDPWSSDSZ128rk(3(Class<VR128X>) -> 0(Class<VR128X>))  [4.03;4.03]
		 Successful, latency: 4.03
	VPDPWSSDSZ128rk(4(Class<VR128X>) -> 0(Class<VR128X>))  [4.04;4.04]
		 Successful, latency: 4.04

-----VPDPWSSDSZ128rkz-----
	VPDPWSSDSZ128rkz(1(Class<VR128X>) -> 0(Class<VR128X>))  [4.05;4.05]
		 Successful, latency: 4.05
	VPDPWSSDSZ128rkz(3(Class<VR128X>) -> 0(Class<VR128X>))  [4.03;4.03]
		 Successful, latency: 4.03
	VPDPWSSDSZ128rkz(4(Class<VR128X>) -> 0(Class<VR128X>))  [4.02;4.02]
		 Successful, latency: 4.02

-----VPDPWSSDSZ256r-----
	VPDPWSSDSZ256r(1(Class<VR256X>) -> 0(Class<VR256X>))  [4.04;4.04]
		 Successful, latency: 4.04
	VPDPWSSDSZ256r(2(Class<VR256X>) -> 0(Class<VR256X>))  [4.05;4.05]
		 Successful, latency: 4.05
	VPDPWSSDSZ256r(3(Class<VR256X>) -> 0(Class<VR256X>))  [4.03;4.03]
		 Successful, latency: 4.03

-----VPDPWSSDSZ256rk-----
	VPDPWSSDSZ256rk(1(Class<VR256X>) -> 0(Class<VR256X>))  [4.06;4.06]
		 Successful, latency: 4.06
	VPDPWSSDSZ256rk(3(Class<VR256X>) -> 0(Class<VR256X>))  [4.06;4.06]
		 Successful, latency: 4.06
	VPDPWSSDSZ256rk(4(Class<VR256X>) -> 0(Class<VR256X>))  [4.05;4.05]
		 Successful, latency: 4.05

-----VPDPWSSDSZ256rkz-----
	VPDPWSSDSZ256rkz(1(Class<VR256X>) -> 0(Class<VR256X>))  [4.03;4.03]
		 Successful, latency: 4.03
	VPDPWSSDSZ256rkz(3(Class<VR256X>) -> 0(Class<VR256X>))  [4.04;4.04]
		 Successful, latency: 4.04
	VPDPWSSDSZ256rkz(4(Class<VR256X>) -> 0(Class<VR256X>))  [4.04;4.04]
		 Successful, latency: 4.04

-----VPDPWSSDSZr-----
	VPDPWSSDSZr(1(Class<VR512>) -> 0(Class<VR512>))  [4.03;4.03]
		 Successful, latency: 4.03
	VPDPWSSDSZr(2(Class<VR512>) -> 0(Class<VR512>))  [4.04;4.04]
		 Successful, latency: 4.04
	VPDPWSSDSZr(3(Class<VR512>) -> 0(Class<VR512>))  [4.04;4.04]
		 Successful, latency: 4.04

-----VPDPWSSDSZrk-----
	VPDPWSSDSZrk(1(Class<VR512>) -> 0(Class<VR512>))  [4.07;4.07]
		 Successful, latency: 4.07
	VPDPWSSDSZrk(3(Class<VR512>) -> 0(Class<VR512>))  [4.02;4.02]
		 Successful, latency: 4.02
	VPDPWSSDSZrk(4(Class<VR512>) -> 0(Class<VR512>))  [4.08;4.08]
		 Successful, latency: 4.08

-----VPDPWSSDSZrkz-----
	VPDPWSSDSZrkz(1(Class<VR512>) -> 0(Class<VR512>))  [4.04;4.04]
		 Successful, latency: 4.04
	VPDPWSSDSZrkz(3(Class<VR512>) -> 0(Class<VR512>))  [4.07;4.07]
		 Successful, latency: 4.07
	VPDPWSSDSZrkz(4(Class<VR512>) -> 0(Class<VR512>))  [4.05;4.05]
		 Successful, latency: 4.05

-----VPDPWSSDSrr-----
	VPDPWSSDSrr(1(Class<VR128>) -> 0(Class<VR128>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VPDPWSSDSrr(2(Class<VR128>) -> 0(Class<VR128>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VPDPWSSDSrr(3(Class<VR128>) -> 0(Class<VR128>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VPDPWSSDYrr-----
	VPDPWSSDYrr(1(Class<VR256>) -> 0(Class<VR256>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VPDPWSSDYrr(2(Class<VR256>) -> 0(Class<VR256>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VPDPWSSDYrr(3(Class<VR256>) -> 0(Class<VR256>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VPDPWSSDZ128r-----
	VPDPWSSDZ128r(1(Class<VR128X>) -> 0(Class<VR128X>))  [4.02;4.02]
		 Successful, latency: 4.02
	VPDPWSSDZ128r(2(Class<VR128X>) -> 0(Class<VR128X>))  [4.03;4.03]
		 Successful, latency: 4.03
	VPDPWSSDZ128r(3(Class<VR128X>) -> 0(Class<VR128X>))  [4.04;4.04]
		 Successful, latency: 4.04

-----VPDPWSSDZ128rk-----
	VPDPWSSDZ128rk(1(Class<VR128X>) -> 0(Class<VR128X>))  [4.03;4.03]
		 Successful, latency: 4.03
	VPDPWSSDZ128rk(3(Class<VR128X>) -> 0(Class<VR128X>))  [4.02;4.02]
		 Successful, latency: 4.02
	VPDPWSSDZ128rk(4(Class<VR128X>) -> 0(Class<VR128X>))  [4.04;4.04]
		 Successful, latency: 4.04

-----VPDPWSSDZ128rkz-----
	VPDPWSSDZ128rkz(1(Class<VR128X>) -> 0(Class<VR128X>))  [4.02;4.02]
		 Successful, latency: 4.02
	VPDPWSSDZ128rkz(3(Class<VR128X>) -> 0(Class<VR128X>))  [4.04;4.04]
		 Successful, latency: 4.04
	VPDPWSSDZ128rkz(4(Class<VR128X>) -> 0(Class<VR128X>))  [4.05;4.05]
		 Successful, latency: 4.05

-----VPDPWSSDZ256r-----
	VPDPWSSDZ256r(1(Class<VR256X>) -> 0(Class<VR256X>))  [4.03;4.03]
		 Successful, latency: 4.03
	VPDPWSSDZ256r(2(Class<VR256X>) -> 0(Class<VR256X>))  [4.04;4.04]
		 Successful, latency: 4.04
	VPDPWSSDZ256r(3(Class<VR256X>) -> 0(Class<VR256X>))  [4.06;4.06]
		 Successful, latency: 4.06

-----VPDPWSSDZ256rk-----
	VPDPWSSDZ256rk(1(Class<VR256X>) -> 0(Class<VR256X>))  [4.03;4.03]
		 Successful, latency: 4.03
	VPDPWSSDZ256rk(3(Class<VR256X>) -> 0(Class<VR256X>))  [4.03;4.03]
		 Successful, latency: 4.03
	VPDPWSSDZ256rk(4(Class<VR256X>) -> 0(Class<VR256X>))  [4.04;4.04]
		 Successful, latency: 4.04

-----VPDPWSSDZ256rkz-----
	VPDPWSSDZ256rkz(1(Class<VR256X>) -> 0(Class<VR256X>))  [4.02;4.02]
		 Successful, latency: 4.02
	VPDPWSSDZ256rkz(3(Class<VR256X>) -> 0(Class<VR256X>))  [4.04;4.04]
		 Successful, latency: 4.04
	VPDPWSSDZ256rkz(4(Class<VR256X>) -> 0(Class<VR256X>))  [4.06;4.06]
		 Successful, latency: 4.06

-----VPDPWSSDZr-----
	VPDPWSSDZr(1(Class<VR512>) -> 0(Class<VR512>))  [4.03;4.03]
		 Successful, latency: 4.03
	VPDPWSSDZr(2(Class<VR512>) -> 0(Class<VR512>))  [4.07;4.07]
		 Successful, latency: 4.07
	VPDPWSSDZr(3(Class<VR512>) -> 0(Class<VR512>))  [4.06;4.06]
		 Successful, latency: 4.06

-----VPDPWSSDZrk-----
	VPDPWSSDZrk(1(Class<VR512>) -> 0(Class<VR512>))  [4.03;4.03]
		 Successful, latency: 4.03
	VPDPWSSDZrk(3(Class<VR512>) -> 0(Class<VR512>))  [4.05;4.05]
		 Successful, latency: 4.05
	VPDPWSSDZrk(4(Class<VR512>) -> 0(Class<VR512>))  [4.03;4.03]
		 Successful, latency: 4.03

-----VPDPWSSDZrkz-----
	VPDPWSSDZrkz(1(Class<VR512>) -> 0(Class<VR512>))  [4.03;4.03]
		 Successful, latency: 4.03
	VPDPWSSDZrkz(3(Class<VR512>) -> 0(Class<VR512>))  [4.03;4.03]
		 Successful, latency: 4.03
	VPDPWSSDZrkz(4(Class<VR512>) -> 0(Class<VR512>))  [4.05;4.05]
		 Successful, latency: 4.05

-----VPDPWSSDrr-----
	VPDPWSSDrr(1(Class<VR128>) -> 0(Class<VR128>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VPDPWSSDrr(2(Class<VR128>) -> 0(Class<VR128>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VPDPWSSDrr(3(Class<VR128>) -> 0(Class<VR128>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VPDPWSUDSYrr-----
	VPDPWSUDSYrr(1(Class<VR256>) -> 0(Class<VR256>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VPDPWSUDSYrr(2(Class<VR256>) -> 0(Class<VR256>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VPDPWSUDSYrr(3(Class<VR256>) -> 0(Class<VR256>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VPDPWSUDSZ128r-----
	VPDPWSUDSZ128r(1(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VPDPWSUDSZ128r(2(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VPDPWSUDSZ128r(3(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VPDPWSUDSZ128rk-----
	VPDPWSUDSZ128rk(1(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VPDPWSUDSZ128rk(3(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VPDPWSUDSZ128rk(4(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VPDPWSUDSZ128rkz-----
	VPDPWSUDSZ128rkz(1(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VPDPWSUDSZ128rkz(3(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VPDPWSUDSZ128rkz(4(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VPDPWSUDSZ256r-----
	VPDPWSUDSZ256r(1(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VPDPWSUDSZ256r(2(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VPDPWSUDSZ256r(3(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VPDPWSUDSZ256rk-----
	VPDPWSUDSZ256rk(1(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VPDPWSUDSZ256rk(3(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VPDPWSUDSZ256rk(4(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VPDPWSUDSZ256rkz-----
	VPDPWSUDSZ256rkz(1(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VPDPWSUDSZ256rkz(3(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VPDPWSUDSZ256rkz(4(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VPDPWSUDSZr-----
	VPDPWSUDSZr(1(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VPDPWSUDSZr(2(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VPDPWSUDSZr(3(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VPDPWSUDSZrk-----
	VPDPWSUDSZrk(1(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VPDPWSUDSZrk(3(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VPDPWSUDSZrk(4(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VPDPWSUDSZrkz-----
	VPDPWSUDSZrkz(1(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VPDPWSUDSZrkz(3(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VPDPWSUDSZrkz(4(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VPDPWSUDSrr-----
	VPDPWSUDSrr(1(Class<VR128>) -> 0(Class<VR128>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VPDPWSUDSrr(2(Class<VR128>) -> 0(Class<VR128>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VPDPWSUDSrr(3(Class<VR128>) -> 0(Class<VR128>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VPDPWSUDYrr-----
	VPDPWSUDYrr(1(Class<VR256>) -> 0(Class<VR256>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VPDPWSUDYrr(2(Class<VR256>) -> 0(Class<VR256>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VPDPWSUDYrr(3(Class<VR256>) -> 0(Class<VR256>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VPDPWSUDZ128r-----
	VPDPWSUDZ128r(1(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VPDPWSUDZ128r(2(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VPDPWSUDZ128r(3(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VPDPWSUDZ128rk-----
	VPDPWSUDZ128rk(1(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VPDPWSUDZ128rk(3(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VPDPWSUDZ128rk(4(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VPDPWSUDZ128rkz-----
	VPDPWSUDZ128rkz(1(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VPDPWSUDZ128rkz(3(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VPDPWSUDZ128rkz(4(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VPDPWSUDZ256r-----
	VPDPWSUDZ256r(1(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VPDPWSUDZ256r(2(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VPDPWSUDZ256r(3(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VPDPWSUDZ256rk-----
	VPDPWSUDZ256rk(1(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VPDPWSUDZ256rk(3(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VPDPWSUDZ256rk(4(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VPDPWSUDZ256rkz-----
	VPDPWSUDZ256rkz(1(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VPDPWSUDZ256rkz(3(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VPDPWSUDZ256rkz(4(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VPDPWSUDZr-----
	VPDPWSUDZr(1(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VPDPWSUDZr(2(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VPDPWSUDZr(3(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VPDPWSUDZrk-----
	VPDPWSUDZrk(1(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VPDPWSUDZrk(3(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VPDPWSUDZrk(4(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VPDPWSUDZrkz-----
	VPDPWSUDZrkz(1(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VPDPWSUDZrkz(3(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VPDPWSUDZrkz(4(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VPDPWSUDrr-----
	VPDPWSUDrr(1(Class<VR128>) -> 0(Class<VR128>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VPDPWSUDrr(2(Class<VR128>) -> 0(Class<VR128>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VPDPWSUDrr(3(Class<VR128>) -> 0(Class<VR128>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VPDPWUSDSYrr-----
	VPDPWUSDSYrr(1(Class<VR256>) -> 0(Class<VR256>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VPDPWUSDSYrr(2(Class<VR256>) -> 0(Class<VR256>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VPDPWUSDSYrr(3(Class<VR256>) -> 0(Class<VR256>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VPDPWUSDSZ128r-----
	VPDPWUSDSZ128r(1(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VPDPWUSDSZ128r(2(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VPDPWUSDSZ128r(3(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VPDPWUSDSZ128rk-----
	VPDPWUSDSZ128rk(1(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VPDPWUSDSZ128rk(3(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VPDPWUSDSZ128rk(4(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VPDPWUSDSZ128rkz-----
	VPDPWUSDSZ128rkz(1(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VPDPWUSDSZ128rkz(3(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VPDPWUSDSZ128rkz(4(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VPDPWUSDSZ256r-----
	VPDPWUSDSZ256r(1(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VPDPWUSDSZ256r(2(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VPDPWUSDSZ256r(3(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VPDPWUSDSZ256rk-----
	VPDPWUSDSZ256rk(1(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VPDPWUSDSZ256rk(3(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VPDPWUSDSZ256rk(4(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VPDPWUSDSZ256rkz-----
	VPDPWUSDSZ256rkz(1(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VPDPWUSDSZ256rkz(3(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VPDPWUSDSZ256rkz(4(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VPDPWUSDSZr-----
	VPDPWUSDSZr(1(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VPDPWUSDSZr(2(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VPDPWUSDSZr(3(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VPDPWUSDSZrk-----
	VPDPWUSDSZrk(1(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VPDPWUSDSZrk(3(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VPDPWUSDSZrk(4(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VPDPWUSDSZrkz-----
	VPDPWUSDSZrkz(1(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VPDPWUSDSZrkz(3(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VPDPWUSDSZrkz(4(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VPDPWUSDSrr-----
	VPDPWUSDSrr(1(Class<VR128>) -> 0(Class<VR128>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VPDPWUSDSrr(2(Class<VR128>) -> 0(Class<VR128>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VPDPWUSDSrr(3(Class<VR128>) -> 0(Class<VR128>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VPDPWUSDYrr-----
	VPDPWUSDYrr(1(Class<VR256>) -> 0(Class<VR256>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VPDPWUSDYrr(2(Class<VR256>) -> 0(Class<VR256>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VPDPWUSDYrr(3(Class<VR256>) -> 0(Class<VR256>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VPDPWUSDZ128r-----
	VPDPWUSDZ128r(1(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VPDPWUSDZ128r(2(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VPDPWUSDZ128r(3(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VPDPWUSDZ128rk-----
	VPDPWUSDZ128rk(1(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VPDPWUSDZ128rk(3(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VPDPWUSDZ128rk(4(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VPDPWUSDZ128rkz-----
	VPDPWUSDZ128rkz(1(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VPDPWUSDZ128rkz(3(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VPDPWUSDZ128rkz(4(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VPDPWUSDZ256r-----
	VPDPWUSDZ256r(1(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VPDPWUSDZ256r(2(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VPDPWUSDZ256r(3(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VPDPWUSDZ256rk-----
	VPDPWUSDZ256rk(1(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VPDPWUSDZ256rk(3(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VPDPWUSDZ256rk(4(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VPDPWUSDZ256rkz-----
	VPDPWUSDZ256rkz(1(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VPDPWUSDZ256rkz(3(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VPDPWUSDZ256rkz(4(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VPDPWUSDZr-----
	VPDPWUSDZr(1(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VPDPWUSDZr(2(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VPDPWUSDZr(3(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VPDPWUSDZrk-----
	VPDPWUSDZrk(1(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VPDPWUSDZrk(3(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VPDPWUSDZrk(4(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VPDPWUSDZrkz-----
	VPDPWUSDZrkz(1(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VPDPWUSDZrkz(3(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VPDPWUSDZrkz(4(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VPDPWUSDrr-----
	VPDPWUSDrr(1(Class<VR128>) -> 0(Class<VR128>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VPDPWUSDrr(2(Class<VR128>) -> 0(Class<VR128>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VPDPWUSDrr(3(Class<VR128>) -> 0(Class<VR128>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VPDPWUUDSYrr-----
	VPDPWUUDSYrr(1(Class<VR256>) -> 0(Class<VR256>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VPDPWUUDSYrr(2(Class<VR256>) -> 0(Class<VR256>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VPDPWUUDSYrr(3(Class<VR256>) -> 0(Class<VR256>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VPDPWUUDSZ128r-----
	VPDPWUUDSZ128r(1(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VPDPWUUDSZ128r(2(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VPDPWUUDSZ128r(3(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VPDPWUUDSZ128rk-----
	VPDPWUUDSZ128rk(1(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VPDPWUUDSZ128rk(3(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VPDPWUUDSZ128rk(4(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VPDPWUUDSZ128rkz-----
	VPDPWUUDSZ128rkz(1(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VPDPWUUDSZ128rkz(3(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VPDPWUUDSZ128rkz(4(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VPDPWUUDSZ256r-----
	VPDPWUUDSZ256r(1(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VPDPWUUDSZ256r(2(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VPDPWUUDSZ256r(3(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VPDPWUUDSZ256rk-----
	VPDPWUUDSZ256rk(1(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VPDPWUUDSZ256rk(3(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VPDPWUUDSZ256rk(4(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VPDPWUUDSZ256rkz-----
	VPDPWUUDSZ256rkz(1(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VPDPWUUDSZ256rkz(3(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VPDPWUUDSZ256rkz(4(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VPDPWUUDSZr-----
	VPDPWUUDSZr(1(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VPDPWUUDSZr(2(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VPDPWUUDSZr(3(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VPDPWUUDSZrk-----
	VPDPWUUDSZrk(1(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VPDPWUUDSZrk(3(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VPDPWUUDSZrk(4(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VPDPWUUDSZrkz-----
	VPDPWUUDSZrkz(1(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VPDPWUUDSZrkz(3(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VPDPWUUDSZrkz(4(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VPDPWUUDSrr-----
	VPDPWUUDSrr(1(Class<VR128>) -> 0(Class<VR128>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VPDPWUUDSrr(2(Class<VR128>) -> 0(Class<VR128>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VPDPWUUDSrr(3(Class<VR128>) -> 0(Class<VR128>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VPDPWUUDYrr-----
	VPDPWUUDYrr(1(Class<VR256>) -> 0(Class<VR256>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VPDPWUUDYrr(2(Class<VR256>) -> 0(Class<VR256>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VPDPWUUDYrr(3(Class<VR256>) -> 0(Class<VR256>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VPDPWUUDZ128r-----
	VPDPWUUDZ128r(1(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VPDPWUUDZ128r(2(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VPDPWUUDZ128r(3(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VPDPWUUDZ128rk-----
	VPDPWUUDZ128rk(1(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VPDPWUUDZ128rk(3(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VPDPWUUDZ128rk(4(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VPDPWUUDZ128rkz-----
	VPDPWUUDZ128rkz(1(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VPDPWUUDZ128rkz(3(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VPDPWUUDZ128rkz(4(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VPDPWUUDZ256r-----
	VPDPWUUDZ256r(1(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VPDPWUUDZ256r(2(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VPDPWUUDZ256r(3(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VPDPWUUDZ256rk-----
	VPDPWUUDZ256rk(1(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VPDPWUUDZ256rk(3(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VPDPWUUDZ256rk(4(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VPDPWUUDZ256rkz-----
	VPDPWUUDZ256rkz(1(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VPDPWUUDZ256rkz(3(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VPDPWUUDZ256rkz(4(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VPDPWUUDZr-----
	VPDPWUUDZr(1(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VPDPWUUDZr(2(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VPDPWUUDZr(3(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VPDPWUUDZrk-----
	VPDPWUUDZrk(1(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VPDPWUUDZrk(3(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VPDPWUUDZrk(4(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VPDPWUUDZrkz-----
	VPDPWUUDZrkz(1(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VPDPWUUDZrkz(3(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VPDPWUUDZrkz(4(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VPDPWUUDrr-----
	VPDPWUUDrr(1(Class<VR128>) -> 0(Class<VR128>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VPDPWUUDrr(2(Class<VR128>) -> 0(Class<VR128>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VPDPWUUDrr(3(Class<VR128>) -> 0(Class<VR128>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VPERM2F128rri-----
	VPERM2F128rri(1(Class<VR256>) -> 0(Class<VR256>))  [3.03;3.03]
		 Successful, latency: 3.03
	VPERM2F128rri(2(Class<VR256>) -> 0(Class<VR256>))  [3.05;3.05]
		 Successful, latency: 3.05

-----VPERM2I128rri-----
	VPERM2I128rri(1(Class<VR256>) -> 0(Class<VR256>))  [3.02;3.02]
		 Successful, latency: 3.02
	VPERM2I128rri(2(Class<VR256>) -> 0(Class<VR256>))  [3.03;3.03]
		 Successful, latency: 3.03

-----VPERMBZ128rr-----
	VPERMBZ128rr(1(Class<VR128X>) -> 0(Class<VR128X>))  [2.01;2.01]
		 Successful, latency: 2.01
	VPERMBZ128rr(2(Class<VR128X>) -> 0(Class<VR128X>))  [2.01;2.01]
		 Successful, latency: 2.01

-----VPERMBZ128rrk-----
	VPERMBZ128rrk(1(Class<VR128X>) -> 0(Class<VR128X>))  [2.01;2.01]
		 Successful, latency: 2.01
	VPERMBZ128rrk(3(Class<VR128X>) -> 0(Class<VR128X>))  [2.02;2.02]
		 Successful, latency: 2.02
	VPERMBZ128rrk(4(Class<VR128X>) -> 0(Class<VR128X>))  [2.01;2.01]
		 Successful, latency: 2.01

-----VPERMBZ128rrkz-----
	VPERMBZ128rrkz(2(Class<VR128X>) -> 0(Class<VR128X>))  [2.01;2.01]
		 Successful, latency: 2.01
	VPERMBZ128rrkz(3(Class<VR128X>) -> 0(Class<VR128X>))  [2.02;2.02]
		 Successful, latency: 2.02

-----VPERMBZ256rr-----
	VPERMBZ256rr(1(Class<VR256X>) -> 0(Class<VR256X>))  [4.04;4.04]
		 Successful, latency: 4.04
	VPERMBZ256rr(2(Class<VR256X>) -> 0(Class<VR256X>))  [4.07;4.07]
		 Successful, latency: 4.07

-----VPERMBZ256rrk-----
	VPERMBZ256rrk(1(Class<VR256X>) -> 0(Class<VR256X>))  [4.06;4.06]
		 Successful, latency: 4.06
	VPERMBZ256rrk(3(Class<VR256X>) -> 0(Class<VR256X>))  [4.02;4.02]
		 Successful, latency: 4.02
	VPERMBZ256rrk(4(Class<VR256X>) -> 0(Class<VR256X>))  [4.06;4.06]
		 Successful, latency: 4.06

-----VPERMBZ256rrkz-----
	VPERMBZ256rrkz(2(Class<VR256X>) -> 0(Class<VR256X>))  [4.02;4.02]
		 Successful, latency: 4.02
	VPERMBZ256rrkz(3(Class<VR256X>) -> 0(Class<VR256X>))  [4.08;4.08]
		 Successful, latency: 4.08

-----VPERMBZrr-----
	VPERMBZrr(1(Class<VR512>) -> 0(Class<VR512>))  [5.05;5.05]
		 Successful, latency: 5.05
	VPERMBZrr(2(Class<VR512>) -> 0(Class<VR512>))  [5.04;5.04]
		 Successful, latency: 5.04

-----VPERMBZrrk-----
	VPERMBZrrk(1(Class<VR512>) -> 0(Class<VR512>))  [5.05;5.05]
		 Successful, latency: 5.05
	VPERMBZrrk(3(Class<VR512>) -> 0(Class<VR512>))  [5.04;5.04]
		 Successful, latency: 5.04
	VPERMBZrrk(4(Class<VR512>) -> 0(Class<VR512>))  [5.06;5.06]
		 Successful, latency: 5.06

-----VPERMBZrrkz-----
	VPERMBZrrkz(2(Class<VR512>) -> 0(Class<VR512>))  [5.04;5.04]
		 Successful, latency: 5.04
	VPERMBZrrkz(3(Class<VR512>) -> 0(Class<VR512>))  [5.08;5.08]
		 Successful, latency: 5.08

-----VPERMDYrr-----
	VPERMDYrr(1(Class<VR256>) -> 0(Class<VR256>))  [4.03;4.03]
		 Successful, latency: 4.03
	VPERMDYrr(2(Class<VR256>) -> 0(Class<VR256>))  [4.05;4.05]
		 Successful, latency: 4.05

-----VPERMDZ256rr-----
	VPERMDZ256rr(1(Class<VR256X>) -> 0(Class<VR256X>))  [4.04;4.04]
		 Successful, latency: 4.04
	VPERMDZ256rr(2(Class<VR256X>) -> 0(Class<VR256X>))  [4.03;4.03]
		 Successful, latency: 4.03

-----VPERMDZ256rrk-----
	VPERMDZ256rrk(1(Class<VR256X>) -> 0(Class<VR256X>))  [4.01;4.01]
		 Successful, latency: 4.01
	VPERMDZ256rrk(3(Class<VR256X>) -> 0(Class<VR256X>))  [4.03;4.03]
		 Successful, latency: 4.03
	VPERMDZ256rrk(4(Class<VR256X>) -> 0(Class<VR256X>))  [4.06;4.06]
		 Successful, latency: 4.06

-----VPERMDZ256rrkz-----
	VPERMDZ256rrkz(2(Class<VR256X>) -> 0(Class<VR256X>))  [4.05;4.05]
		 Successful, latency: 4.05
	VPERMDZ256rrkz(3(Class<VR256X>) -> 0(Class<VR256X>))  [4.03;4.03]
		 Successful, latency: 4.03

-----VPERMDZrr-----
	VPERMDZrr(1(Class<VR512>) -> 0(Class<VR512>))  [5.04;5.04]
		 Successful, latency: 5.04
	VPERMDZrr(2(Class<VR512>) -> 0(Class<VR512>))  [5.03;5.03]
		 Successful, latency: 5.03

-----VPERMDZrrk-----
	VPERMDZrrk(1(Class<VR512>) -> 0(Class<VR512>))  [5.04;5.04]
		 Successful, latency: 5.04
	VPERMDZrrk(3(Class<VR512>) -> 0(Class<VR512>))  [5.05;5.05]
		 Successful, latency: 5.05
	VPERMDZrrk(4(Class<VR512>) -> 0(Class<VR512>))  [5.05;5.05]
		 Successful, latency: 5.05

-----VPERMDZrrkz-----
	VPERMDZrrkz(2(Class<VR512>) -> 0(Class<VR512>))  [5.04;5.04]
		 Successful, latency: 5.04
	VPERMDZrrkz(3(Class<VR512>) -> 0(Class<VR512>))  [5.04;5.04]
		 Successful, latency: 5.04

-----VPERMI2BZ128rr-----
	VPERMI2BZ128rr(1(Class<VR128X>) -> 0(Class<VR128X>))  [3.04;3.04]
		 Successful, latency: 3.04
	VPERMI2BZ128rr(2(Class<VR128X>) -> 0(Class<VR128X>))  [3.06;3.06]
		 Successful, latency: 3.06
	VPERMI2BZ128rr(3(Class<VR128X>) -> 0(Class<VR128X>))  [3.03;3.03]
		 Successful, latency: 3.03

-----VPERMI2BZ128rrk-----
	VPERMI2BZ128rrk(1(Class<VR128X>) -> 0(Class<VR128X>))  [3.07;3.07]
		 Successful, latency: 3.07
	VPERMI2BZ128rrk(3(Class<VR128X>) -> 0(Class<VR128X>))  [3.03;3.03]
		 Successful, latency: 3.03
	VPERMI2BZ128rrk(4(Class<VR128X>) -> 0(Class<VR128X>))  [3.06;3.06]
		 Successful, latency: 3.06

-----VPERMI2BZ128rrkz-----
	VPERMI2BZ128rrkz(1(Class<VR128X>) -> 0(Class<VR128X>))  [3.03;3.03]
		 Successful, latency: 3.03
	VPERMI2BZ128rrkz(3(Class<VR128X>) -> 0(Class<VR128X>))  [3.06;3.06]
		 Successful, latency: 3.06
	VPERMI2BZ128rrkz(4(Class<VR128X>) -> 0(Class<VR128X>))  [3.03;3.03]
		 Successful, latency: 3.03

-----VPERMI2BZ256rr-----
	VPERMI2BZ256rr(1(Class<VR256X>) -> 0(Class<VR256X>))  [4.03;4.03]
		 Successful, latency: 4.03
	VPERMI2BZ256rr(2(Class<VR256X>) -> 0(Class<VR256X>))  [4.04;4.04]
		 Successful, latency: 4.04
	VPERMI2BZ256rr(3(Class<VR256X>) -> 0(Class<VR256X>))  [4.04;4.04]
		 Successful, latency: 4.04

-----VPERMI2BZ256rrk-----
	VPERMI2BZ256rrk(1(Class<VR256X>) -> 0(Class<VR256X>))  [4.03;4.03]
		 Successful, latency: 4.03
	VPERMI2BZ256rrk(3(Class<VR256X>) -> 0(Class<VR256X>))  [4.05;4.05]
		 Successful, latency: 4.05
	VPERMI2BZ256rrk(4(Class<VR256X>) -> 0(Class<VR256X>))  [4.06;4.06]
		 Successful, latency: 4.06

-----VPERMI2BZ256rrkz-----
	VPERMI2BZ256rrkz(1(Class<VR256X>) -> 0(Class<VR256X>))  [4.05;4.05]
		 Successful, latency: 4.05
	VPERMI2BZ256rrkz(3(Class<VR256X>) -> 0(Class<VR256X>))  [4.04;4.04]
		 Successful, latency: 4.04
	VPERMI2BZ256rrkz(4(Class<VR256X>) -> 0(Class<VR256X>))  [4.07;4.07]
		 Successful, latency: 4.07

-----VPERMI2BZrr-----
	VPERMI2BZrr(1(Class<VR512>) -> 0(Class<VR512>))  [5.03;5.03]
		 Successful, latency: 5.03
	VPERMI2BZrr(2(Class<VR512>) -> 0(Class<VR512>))  [5.06;5.06]
		 Successful, latency: 5.06
	VPERMI2BZrr(3(Class<VR512>) -> 0(Class<VR512>))  [5.05;5.05]
		 Successful, latency: 5.05

-----VPERMI2BZrrk-----
	VPERMI2BZrrk(1(Class<VR512>) -> 0(Class<VR512>))  [5.04;5.04]
		 Successful, latency: 5.04
	VPERMI2BZrrk(3(Class<VR512>) -> 0(Class<VR512>))  [5.03;5.03]
		 Successful, latency: 5.03
	VPERMI2BZrrk(4(Class<VR512>) -> 0(Class<VR512>))  [5.04;5.04]
		 Successful, latency: 5.04

-----VPERMI2BZrrkz-----
	VPERMI2BZrrkz(1(Class<VR512>) -> 0(Class<VR512>))  [5.05;5.05]
		 Successful, latency: 5.05
	VPERMI2BZrrkz(3(Class<VR512>) -> 0(Class<VR512>))  [5.06;5.06]
		 Successful, latency: 5.06
	VPERMI2BZrrkz(4(Class<VR512>) -> 0(Class<VR512>))  [5.05;5.05]
		 Successful, latency: 5.05

-----VPERMI2DZ128rr-----
	VPERMI2DZ128rr(1(Class<VR128X>) -> 0(Class<VR128X>))  [3.05;3.05]
		 Successful, latency: 3.05
	VPERMI2DZ128rr(2(Class<VR128X>) -> 0(Class<VR128X>))  [3.06;3.06]
		 Successful, latency: 3.06
	VPERMI2DZ128rr(3(Class<VR128X>) -> 0(Class<VR128X>))  [3.05;3.05]
		 Successful, latency: 3.05

-----VPERMI2DZ128rrk-----
	VPERMI2DZ128rrk(1(Class<VR128X>) -> 0(Class<VR128X>))  [3.02;3.02]
		 Successful, latency: 3.02
	VPERMI2DZ128rrk(3(Class<VR128X>) -> 0(Class<VR128X>))  [3.04;3.04]
		 Successful, latency: 3.04
	VPERMI2DZ128rrk(4(Class<VR128X>) -> 0(Class<VR128X>))  [3.03;3.03]
		 Successful, latency: 3.03

-----VPERMI2DZ128rrkz-----
	VPERMI2DZ128rrkz(1(Class<VR128X>) -> 0(Class<VR128X>))  [3.03;3.03]
		 Successful, latency: 3.03
	VPERMI2DZ128rrkz(3(Class<VR128X>) -> 0(Class<VR128X>))  [3.03;3.03]
		 Successful, latency: 3.03
	VPERMI2DZ128rrkz(4(Class<VR128X>) -> 0(Class<VR128X>))  [3.02;3.02]
		 Successful, latency: 3.02

-----VPERMI2DZ256rr-----
	VPERMI2DZ256rr(1(Class<VR256X>) -> 0(Class<VR256X>))  [4.04;4.04]
		 Successful, latency: 4.04
	VPERMI2DZ256rr(2(Class<VR256X>) -> 0(Class<VR256X>))  [4.07;4.07]
		 Successful, latency: 4.07
	VPERMI2DZ256rr(3(Class<VR256X>) -> 0(Class<VR256X>))  [4.05;4.05]
		 Successful, latency: 4.05

-----VPERMI2DZ256rrk-----
	VPERMI2DZ256rrk(1(Class<VR256X>) -> 0(Class<VR256X>))  [4.03;4.03]
		 Successful, latency: 4.03
	VPERMI2DZ256rrk(3(Class<VR256X>) -> 0(Class<VR256X>))  [4.03;4.03]
		 Successful, latency: 4.03
	VPERMI2DZ256rrk(4(Class<VR256X>) -> 0(Class<VR256X>))  [4.03;4.03]
		 Successful, latency: 4.03

-----VPERMI2DZ256rrkz-----
	VPERMI2DZ256rrkz(1(Class<VR256X>) -> 0(Class<VR256X>))  [4.03;4.03]
		 Successful, latency: 4.03
	VPERMI2DZ256rrkz(3(Class<VR256X>) -> 0(Class<VR256X>))  [4.03;4.03]
		 Successful, latency: 4.03
	VPERMI2DZ256rrkz(4(Class<VR256X>) -> 0(Class<VR256X>))  [4.04;4.04]
		 Successful, latency: 4.04

-----VPERMI2DZrr-----
	VPERMI2DZrr(1(Class<VR512>) -> 0(Class<VR512>))  [5.05;5.05]
		 Successful, latency: 5.05
	VPERMI2DZrr(2(Class<VR512>) -> 0(Class<VR512>))  [5.04;5.04]
		 Successful, latency: 5.04
	VPERMI2DZrr(3(Class<VR512>) -> 0(Class<VR512>))  [5.04;5.04]
		 Successful, latency: 5.04

-----VPERMI2DZrrk-----
	VPERMI2DZrrk(1(Class<VR512>) -> 0(Class<VR512>))  [5.04;5.04]
		 Successful, latency: 5.04
	VPERMI2DZrrk(3(Class<VR512>) -> 0(Class<VR512>))  [5.04;5.04]
		 Successful, latency: 5.04
	VPERMI2DZrrk(4(Class<VR512>) -> 0(Class<VR512>))  [5.05;5.05]
		 Successful, latency: 5.05

-----VPERMI2DZrrkz-----
	VPERMI2DZrrkz(1(Class<VR512>) -> 0(Class<VR512>))  [5.04;5.04]
		 Successful, latency: 5.04
	VPERMI2DZrrkz(3(Class<VR512>) -> 0(Class<VR512>))  [5.04;5.04]
		 Successful, latency: 5.04
	VPERMI2DZrrkz(4(Class<VR512>) -> 0(Class<VR512>))  [5.07;5.07]
		 Successful, latency: 5.07

-----VPERMI2PDZ128rr-----
	VPERMI2PDZ128rr(1(Class<VR128X>) -> 0(Class<VR128X>))  [3.07;3.07]
		 Successful, latency: 3.07
	VPERMI2PDZ128rr(2(Class<VR128X>) -> 0(Class<VR128X>))  [3.04;3.04]
		 Successful, latency: 3.04
	VPERMI2PDZ128rr(3(Class<VR128X>) -> 0(Class<VR128X>))  [3.03;3.03]
		 Successful, latency: 3.03

-----VPERMI2PDZ128rrk-----
	VPERMI2PDZ128rrk(1(Class<VR128X>) -> 0(Class<VR128X>))  [3.02;3.02]
		 Successful, latency: 3.02
	VPERMI2PDZ128rrk(3(Class<VR128X>) -> 0(Class<VR128X>))  [3.04;3.04]
		 Successful, latency: 3.04
	VPERMI2PDZ128rrk(4(Class<VR128X>) -> 0(Class<VR128X>))  [3.02;3.02]
		 Successful, latency: 3.02

-----VPERMI2PDZ128rrkz-----
	VPERMI2PDZ128rrkz(1(Class<VR128X>) -> 0(Class<VR128X>))  [3.03;3.03]
		 Successful, latency: 3.03
	VPERMI2PDZ128rrkz(3(Class<VR128X>) -> 0(Class<VR128X>))  [3.03;3.03]
		 Successful, latency: 3.03
	VPERMI2PDZ128rrkz(4(Class<VR128X>) -> 0(Class<VR128X>))  [3.06;3.06]
		 Successful, latency: 3.06

-----VPERMI2PDZ256rr-----
	VPERMI2PDZ256rr(1(Class<VR256X>) -> 0(Class<VR256X>))  [4.03;4.03]
		 Successful, latency: 4.03
	VPERMI2PDZ256rr(2(Class<VR256X>) -> 0(Class<VR256X>))  [4.03;4.03]
		 Successful, latency: 4.03
	VPERMI2PDZ256rr(3(Class<VR256X>) -> 0(Class<VR256X>))  [4.02;4.02]
		 Successful, latency: 4.02

-----VPERMI2PDZ256rrk-----
	VPERMI2PDZ256rrk(1(Class<VR256X>) -> 0(Class<VR256X>))  [4.04;4.04]
		 Successful, latency: 4.04
	VPERMI2PDZ256rrk(3(Class<VR256X>) -> 0(Class<VR256X>))  [4.04;4.04]
		 Successful, latency: 4.04
	VPERMI2PDZ256rrk(4(Class<VR256X>) -> 0(Class<VR256X>))  [4.04;4.04]
		 Successful, latency: 4.04

-----VPERMI2PDZ256rrkz-----
	VPERMI2PDZ256rrkz(1(Class<VR256X>) -> 0(Class<VR256X>))  [4.03;4.03]
		 Successful, latency: 4.03
	VPERMI2PDZ256rrkz(3(Class<VR256X>) -> 0(Class<VR256X>))  [4.07;4.07]
		 Successful, latency: 4.07
	VPERMI2PDZ256rrkz(4(Class<VR256X>) -> 0(Class<VR256X>))  [4.04;4.04]
		 Successful, latency: 4.04

-----VPERMI2PDZrr-----
	VPERMI2PDZrr(1(Class<VR512>) -> 0(Class<VR512>))  [5.04;5.04]
		 Successful, latency: 5.04
	VPERMI2PDZrr(2(Class<VR512>) -> 0(Class<VR512>))  [5.05;5.05]
		 Successful, latency: 5.05
	VPERMI2PDZrr(3(Class<VR512>) -> 0(Class<VR512>))  [5.04;5.04]
		 Successful, latency: 5.04

-----VPERMI2PDZrrk-----
	VPERMI2PDZrrk(1(Class<VR512>) -> 0(Class<VR512>))  [5.03;5.03]
		 Successful, latency: 5.03
	VPERMI2PDZrrk(3(Class<VR512>) -> 0(Class<VR512>))  [5.05;5.05]
		 Successful, latency: 5.05
	VPERMI2PDZrrk(4(Class<VR512>) -> 0(Class<VR512>))  [5.04;5.04]
		 Successful, latency: 5.04

-----VPERMI2PDZrrkz-----
	VPERMI2PDZrrkz(1(Class<VR512>) -> 0(Class<VR512>))  [5.05;5.05]
		 Successful, latency: 5.05
	VPERMI2PDZrrkz(3(Class<VR512>) -> 0(Class<VR512>))  [5.03;5.03]
		 Successful, latency: 5.03
	VPERMI2PDZrrkz(4(Class<VR512>) -> 0(Class<VR512>))  [5.04;5.04]
		 Successful, latency: 5.04

-----VPERMI2PSZ128rr-----
	VPERMI2PSZ128rr(1(Class<VR128X>) -> 0(Class<VR128X>))  [3.02;3.02]
		 Successful, latency: 3.02
	VPERMI2PSZ128rr(2(Class<VR128X>) -> 0(Class<VR128X>))  [3.02;3.02]
		 Successful, latency: 3.02
	VPERMI2PSZ128rr(3(Class<VR128X>) -> 0(Class<VR128X>))  [3.02;3.02]
		 Successful, latency: 3.02

-----VPERMI2PSZ128rrk-----
	VPERMI2PSZ128rrk(1(Class<VR128X>) -> 0(Class<VR128X>))  [3.05;3.05]
		 Successful, latency: 3.05
	VPERMI2PSZ128rrk(3(Class<VR128X>) -> 0(Class<VR128X>))  [3.05;3.05]
		 Successful, latency: 3.05
	VPERMI2PSZ128rrk(4(Class<VR128X>) -> 0(Class<VR128X>))  [3.02;3.02]
		 Successful, latency: 3.02

-----VPERMI2PSZ128rrkz-----
	VPERMI2PSZ128rrkz(1(Class<VR128X>) -> 0(Class<VR128X>))  [3.03;3.03]
		 Successful, latency: 3.03
	VPERMI2PSZ128rrkz(3(Class<VR128X>) -> 0(Class<VR128X>))  [3.04;3.04]
		 Successful, latency: 3.04
	VPERMI2PSZ128rrkz(4(Class<VR128X>) -> 0(Class<VR128X>))  [3.02;3.02]
		 Successful, latency: 3.02

-----VPERMI2PSZ256rr-----
	VPERMI2PSZ256rr(1(Class<VR256X>) -> 0(Class<VR256X>))  [4.06;4.06]
		 Successful, latency: 4.06
	VPERMI2PSZ256rr(2(Class<VR256X>) -> 0(Class<VR256X>))  [4.03;4.03]
		 Successful, latency: 4.03
	VPERMI2PSZ256rr(3(Class<VR256X>) -> 0(Class<VR256X>))  [4.07;4.07]
		 Successful, latency: 4.07

-----VPERMI2PSZ256rrk-----
	VPERMI2PSZ256rrk(1(Class<VR256X>) -> 0(Class<VR256X>))  [4.05;4.05]
		 Successful, latency: 4.05
	VPERMI2PSZ256rrk(3(Class<VR256X>) -> 0(Class<VR256X>))  [4.03;4.03]
		 Successful, latency: 4.03
	VPERMI2PSZ256rrk(4(Class<VR256X>) -> 0(Class<VR256X>))  [4.05;4.05]
		 Successful, latency: 4.05

-----VPERMI2PSZ256rrkz-----
	VPERMI2PSZ256rrkz(1(Class<VR256X>) -> 0(Class<VR256X>))  [4.03;4.03]
		 Successful, latency: 4.03
	VPERMI2PSZ256rrkz(3(Class<VR256X>) -> 0(Class<VR256X>))  [4.04;4.04]
		 Successful, latency: 4.04
	VPERMI2PSZ256rrkz(4(Class<VR256X>) -> 0(Class<VR256X>))  [4.03;4.03]
		 Successful, latency: 4.03

-----VPERMI2PSZrr-----
	VPERMI2PSZrr(1(Class<VR512>) -> 0(Class<VR512>))  [5.05;5.05]
		 Successful, latency: 5.05
	VPERMI2PSZrr(2(Class<VR512>) -> 0(Class<VR512>))  [5.04;5.04]
		 Successful, latency: 5.04
	VPERMI2PSZrr(3(Class<VR512>) -> 0(Class<VR512>))  [5.04;5.04]
		 Successful, latency: 5.04

-----VPERMI2PSZrrk-----
	VPERMI2PSZrrk(1(Class<VR512>) -> 0(Class<VR512>))  [5.04;5.04]
		 Successful, latency: 5.04
	VPERMI2PSZrrk(3(Class<VR512>) -> 0(Class<VR512>))  [5.05;5.05]
		 Successful, latency: 5.05
	VPERMI2PSZrrk(4(Class<VR512>) -> 0(Class<VR512>))  [5.07;5.07]
		 Successful, latency: 5.07

-----VPERMI2PSZrrkz-----
	VPERMI2PSZrrkz(1(Class<VR512>) -> 0(Class<VR512>))  [5.03;5.03]
		 Successful, latency: 5.03
	VPERMI2PSZrrkz(3(Class<VR512>) -> 0(Class<VR512>))  [5.11;5.11]
		 Successful, latency: 5.11
	VPERMI2PSZrrkz(4(Class<VR512>) -> 0(Class<VR512>))  [5.05;5.05]
		 Successful, latency: 5.05

-----VPERMI2QZ128rr-----
	VPERMI2QZ128rr(1(Class<VR128X>) -> 0(Class<VR128X>))  [3.04;3.04]
		 Successful, latency: 3.04
	VPERMI2QZ128rr(2(Class<VR128X>) -> 0(Class<VR128X>))  [3.04;3.04]
		 Successful, latency: 3.04
	VPERMI2QZ128rr(3(Class<VR128X>) -> 0(Class<VR128X>))  [3.02;3.02]
		 Successful, latency: 3.02

-----VPERMI2QZ128rrk-----
	VPERMI2QZ128rrk(1(Class<VR128X>) -> 0(Class<VR128X>))  [3.03;3.03]
		 Successful, latency: 3.03
	VPERMI2QZ128rrk(3(Class<VR128X>) -> 0(Class<VR128X>))  [3.02;3.02]
		 Successful, latency: 3.02
	VPERMI2QZ128rrk(4(Class<VR128X>) -> 0(Class<VR128X>))  [3.02;3.02]
		 Successful, latency: 3.02

-----VPERMI2QZ128rrkz-----
	VPERMI2QZ128rrkz(1(Class<VR128X>) -> 0(Class<VR128X>))  [3.06;3.06]
		 Successful, latency: 3.06
	VPERMI2QZ128rrkz(3(Class<VR128X>) -> 0(Class<VR128X>))  [3.04;3.04]
		 Successful, latency: 3.04
	VPERMI2QZ128rrkz(4(Class<VR128X>) -> 0(Class<VR128X>))  [3.03;3.03]
		 Successful, latency: 3.03

-----VPERMI2QZ256rr-----
	VPERMI2QZ256rr(1(Class<VR256X>) -> 0(Class<VR256X>))  [4.04;4.04]
		 Successful, latency: 4.04
	VPERMI2QZ256rr(2(Class<VR256X>) -> 0(Class<VR256X>))  [4.07;4.07]
		 Successful, latency: 4.07
	VPERMI2QZ256rr(3(Class<VR256X>) -> 0(Class<VR256X>))  [4.03;4.03]
		 Successful, latency: 4.03

-----VPERMI2QZ256rrk-----
	VPERMI2QZ256rrk(1(Class<VR256X>) -> 0(Class<VR256X>))  [4.04;4.04]
		 Successful, latency: 4.04
	VPERMI2QZ256rrk(3(Class<VR256X>) -> 0(Class<VR256X>))  [4.03;4.03]
		 Successful, latency: 4.03
	VPERMI2QZ256rrk(4(Class<VR256X>) -> 0(Class<VR256X>))  [4.02;4.02]
		 Successful, latency: 4.02

-----VPERMI2QZ256rrkz-----
	VPERMI2QZ256rrkz(1(Class<VR256X>) -> 0(Class<VR256X>))  [4.03;4.03]
		 Successful, latency: 4.03
	VPERMI2QZ256rrkz(3(Class<VR256X>) -> 0(Class<VR256X>))  [4.06;4.06]
		 Successful, latency: 4.06
	VPERMI2QZ256rrkz(4(Class<VR256X>) -> 0(Class<VR256X>))  [4.04;4.04]
		 Successful, latency: 4.04

-----VPERMI2QZrr-----
	VPERMI2QZrr(1(Class<VR512>) -> 0(Class<VR512>))  [5.05;5.05]
		 Successful, latency: 5.05
	VPERMI2QZrr(2(Class<VR512>) -> 0(Class<VR512>))  [5.05;5.05]
		 Successful, latency: 5.05
	VPERMI2QZrr(3(Class<VR512>) -> 0(Class<VR512>))  [5.04;5.04]
		 Successful, latency: 5.04

-----VPERMI2QZrrk-----
	VPERMI2QZrrk(1(Class<VR512>) -> 0(Class<VR512>))  [5.04;5.04]
		 Successful, latency: 5.04
	VPERMI2QZrrk(3(Class<VR512>) -> 0(Class<VR512>))  [5.03;5.03]
		 Successful, latency: 5.03
	VPERMI2QZrrk(4(Class<VR512>) -> 0(Class<VR512>))  [5.03;5.03]
		 Successful, latency: 5.03

-----VPERMI2QZrrkz-----
	VPERMI2QZrrkz(1(Class<VR512>) -> 0(Class<VR512>))  [5.06;5.06]
		 Successful, latency: 5.06
	VPERMI2QZrrkz(3(Class<VR512>) -> 0(Class<VR512>))  [5.05;5.05]
		 Successful, latency: 5.05
	VPERMI2QZrrkz(4(Class<VR512>) -> 0(Class<VR512>))  [5.04;5.04]
		 Successful, latency: 5.04

-----VPERMI2WZ128rr-----
	VPERMI2WZ128rr(1(Class<VR128X>) -> 0(Class<VR128X>))  [3.03;3.03]
		 Successful, latency: 3.03
	VPERMI2WZ128rr(2(Class<VR128X>) -> 0(Class<VR128X>))  [3.06;3.06]
		 Successful, latency: 3.06
	VPERMI2WZ128rr(3(Class<VR128X>) -> 0(Class<VR128X>))  [3.04;3.04]
		 Successful, latency: 3.04

-----VPERMI2WZ128rrk-----
	VPERMI2WZ128rrk(1(Class<VR128X>) -> 0(Class<VR128X>))  [3.04;3.04]
		 Successful, latency: 3.04
	VPERMI2WZ128rrk(3(Class<VR128X>) -> 0(Class<VR128X>))  [3.03;3.03]
		 Successful, latency: 3.03
	VPERMI2WZ128rrk(4(Class<VR128X>) -> 0(Class<VR128X>))  [3.07;3.07]
		 Successful, latency: 3.07

-----VPERMI2WZ128rrkz-----
	VPERMI2WZ128rrkz(1(Class<VR128X>) -> 0(Class<VR128X>))  [3.02;3.02]
		 Successful, latency: 3.02
	VPERMI2WZ128rrkz(3(Class<VR128X>) -> 0(Class<VR128X>))  [3.03;3.03]
		 Successful, latency: 3.03
	VPERMI2WZ128rrkz(4(Class<VR128X>) -> 0(Class<VR128X>))  [3.02;3.02]
		 Successful, latency: 3.02

-----VPERMI2WZ256rr-----
	VPERMI2WZ256rr(1(Class<VR256X>) -> 0(Class<VR256X>))  [4.04;4.04]
		 Successful, latency: 4.04
	VPERMI2WZ256rr(2(Class<VR256X>) -> 0(Class<VR256X>))  [4.06;4.06]
		 Successful, latency: 4.06
	VPERMI2WZ256rr(3(Class<VR256X>) -> 0(Class<VR256X>))  [4.05;4.05]
		 Successful, latency: 4.05

-----VPERMI2WZ256rrk-----
	VPERMI2WZ256rrk(1(Class<VR256X>) -> 0(Class<VR256X>))  [4.03;4.03]
		 Successful, latency: 4.03
	VPERMI2WZ256rrk(3(Class<VR256X>) -> 0(Class<VR256X>))  [4.04;4.04]
		 Successful, latency: 4.04
	VPERMI2WZ256rrk(4(Class<VR256X>) -> 0(Class<VR256X>))  [4.03;4.03]
		 Successful, latency: 4.03

-----VPERMI2WZ256rrkz-----
	VPERMI2WZ256rrkz(1(Class<VR256X>) -> 0(Class<VR256X>))  [4.03;4.03]
		 Successful, latency: 4.03
	VPERMI2WZ256rrkz(3(Class<VR256X>) -> 0(Class<VR256X>))  [4.04;4.04]
		 Successful, latency: 4.04
	VPERMI2WZ256rrkz(4(Class<VR256X>) -> 0(Class<VR256X>))  [4.07;4.07]
		 Successful, latency: 4.07

-----VPERMI2WZrr-----
	VPERMI2WZrr(1(Class<VR512>) -> 0(Class<VR512>))  [5.04;5.04]
		 Successful, latency: 5.04
	VPERMI2WZrr(2(Class<VR512>) -> 0(Class<VR512>))  [5.04;5.04]
		 Successful, latency: 5.04
	VPERMI2WZrr(3(Class<VR512>) -> 0(Class<VR512>))  [5.09;5.09]
		 Successful, latency: 5.09

-----VPERMI2WZrrk-----
	VPERMI2WZrrk(1(Class<VR512>) -> 0(Class<VR512>))  [5.07;5.07]
		 Successful, latency: 5.07
	VPERMI2WZrrk(3(Class<VR512>) -> 0(Class<VR512>))  [5.04;5.04]
		 Successful, latency: 5.04
	VPERMI2WZrrk(4(Class<VR512>) -> 0(Class<VR512>))  [5.05;5.05]
		 Successful, latency: 5.05

-----VPERMI2WZrrkz-----
	VPERMI2WZrrkz(1(Class<VR512>) -> 0(Class<VR512>))  [5.04;5.04]
		 Successful, latency: 5.04
	VPERMI2WZrrkz(3(Class<VR512>) -> 0(Class<VR512>))  [5.05;5.05]
		 Successful, latency: 5.05
	VPERMI2WZrrkz(4(Class<VR512>) -> 0(Class<VR512>))  [5.04;5.04]
		 Successful, latency: 5.04

-----VPERMIL2PDYrr-----
	VPERMIL2PDYrr(1(Class<VR256>) -> 0(Class<VR256>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VPERMIL2PDYrr(2(Class<VR256>) -> 0(Class<VR256>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VPERMIL2PDYrr(3(Class<VR256>) -> 0(Class<VR256>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VPERMIL2PDYrr_REV-----
	VPERMIL2PDYrr_REV(1(Class<VR256>) -> 0(Class<VR256>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VPERMIL2PDYrr_REV(2(Class<VR256>) -> 0(Class<VR256>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VPERMIL2PDYrr_REV(3(Class<VR256>) -> 0(Class<VR256>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VPERMIL2PDrr-----
	VPERMIL2PDrr(1(Class<VR128>) -> 0(Class<VR128>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VPERMIL2PDrr(2(Class<VR128>) -> 0(Class<VR128>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VPERMIL2PDrr(3(Class<VR128>) -> 0(Class<VR128>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VPERMIL2PDrr_REV-----
	VPERMIL2PDrr_REV(1(Class<VR128>) -> 0(Class<VR128>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VPERMIL2PDrr_REV(2(Class<VR128>) -> 0(Class<VR128>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VPERMIL2PDrr_REV(3(Class<VR128>) -> 0(Class<VR128>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VPERMIL2PSYrr-----
	VPERMIL2PSYrr(1(Class<VR256>) -> 0(Class<VR256>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VPERMIL2PSYrr(2(Class<VR256>) -> 0(Class<VR256>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VPERMIL2PSYrr(3(Class<VR256>) -> 0(Class<VR256>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VPERMIL2PSYrr_REV-----
	VPERMIL2PSYrr_REV(1(Class<VR256>) -> 0(Class<VR256>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VPERMIL2PSYrr_REV(2(Class<VR256>) -> 0(Class<VR256>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VPERMIL2PSYrr_REV(3(Class<VR256>) -> 0(Class<VR256>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VPERMIL2PSrr-----
	VPERMIL2PSrr(1(Class<VR128>) -> 0(Class<VR128>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VPERMIL2PSrr(2(Class<VR128>) -> 0(Class<VR128>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VPERMIL2PSrr(3(Class<VR128>) -> 0(Class<VR128>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VPERMIL2PSrr_REV-----
	VPERMIL2PSrr_REV(1(Class<VR128>) -> 0(Class<VR128>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VPERMIL2PSrr_REV(2(Class<VR128>) -> 0(Class<VR128>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VPERMIL2PSrr_REV(3(Class<VR128>) -> 0(Class<VR128>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VPERMILPDYri-----
	VPERMILPDYri(1(Class<VR256>) -> 0(Class<VR256>))  [1.01;1.01]
		 Successful, latency: 1.01

-----VPERMILPDYrr-----
	VPERMILPDYrr(1(Class<VR256>) -> 0(Class<VR256>))  [2.02;2.02]
		 Successful, latency: 2.02
	VPERMILPDYrr(2(Class<VR256>) -> 0(Class<VR256>))  [2.01;2.01]
		 Successful, latency: 2.01

-----VPERMILPDZ128ri-----
	VPERMILPDZ128ri(1(Class<VR128X>) -> 0(Class<VR128X>))  [1.01;1.01]
		 Successful, latency: 1.01

-----VPERMILPDZ128rik-----
	VPERMILPDZ128rik(1(Class<VR128X>) -> 0(Class<VR128X>))  [1.01;1.01]
		 Successful, latency: 1.01
	VPERMILPDZ128rik(3(Class<VR128X>) -> 0(Class<VR128X>))  [1.01;1.01]
		 Successful, latency: 1.01

-----VPERMILPDZ128rikz-----
	VPERMILPDZ128rikz(2(Class<VR128X>) -> 0(Class<VR128X>))  [1.01;1.01]
		 Successful, latency: 1.01

-----VPERMILPDZ128rr-----
	VPERMILPDZ128rr(1(Class<VR128X>) -> 0(Class<VR128X>))  [2.01;2.01]
		 Successful, latency: 2.01
	VPERMILPDZ128rr(2(Class<VR128X>) -> 0(Class<VR128X>))  [2.02;2.02]
		 Successful, latency: 2.02

-----VPERMILPDZ128rrk-----
	VPERMILPDZ128rrk(1(Class<VR128X>) -> 0(Class<VR128X>))  [2.02;2.02]
		 Successful, latency: 2.02
	VPERMILPDZ128rrk(3(Class<VR128X>) -> 0(Class<VR128X>))  [2.03;2.03]
		 Successful, latency: 2.03
	VPERMILPDZ128rrk(4(Class<VR128X>) -> 0(Class<VR128X>))  [2.02;2.02]
		 Successful, latency: 2.02

-----VPERMILPDZ128rrkz-----
	VPERMILPDZ128rrkz(2(Class<VR128X>) -> 0(Class<VR128X>))  [2.02;2.02]
		 Successful, latency: 2.02
	VPERMILPDZ128rrkz(3(Class<VR128X>) -> 0(Class<VR128X>))  [2;2]
		 Successful, latency: 2

-----VPERMILPDZ256ri-----
	VPERMILPDZ256ri(1(Class<VR256X>) -> 0(Class<VR256X>))  [1.01;1.01]
		 Successful, latency: 1.01

-----VPERMILPDZ256rik-----
	VPERMILPDZ256rik(1(Class<VR256X>) -> 0(Class<VR256X>))  [1.02;1.02]
		 Successful, latency: 1.02
	VPERMILPDZ256rik(3(Class<VR256X>) -> 0(Class<VR256X>))  [1.01;1.01]
		 Successful, latency: 1.01

-----VPERMILPDZ256rikz-----
	VPERMILPDZ256rikz(2(Class<VR256X>) -> 0(Class<VR256X>))  [1;1]
		 Successful, latency: 1

-----VPERMILPDZ256rr-----
	VPERMILPDZ256rr(1(Class<VR256X>) -> 0(Class<VR256X>))  [2.01;2.01]
		 Successful, latency: 2.01
	VPERMILPDZ256rr(2(Class<VR256X>) -> 0(Class<VR256X>))  [2.02;2.02]
		 Successful, latency: 2.02

-----VPERMILPDZ256rrk-----
	VPERMILPDZ256rrk(1(Class<VR256X>) -> 0(Class<VR256X>))  [2.03;2.03]
		 Successful, latency: 2.03
	VPERMILPDZ256rrk(3(Class<VR256X>) -> 0(Class<VR256X>))  [2.02;2.02]
		 Successful, latency: 2.02
	VPERMILPDZ256rrk(4(Class<VR256X>) -> 0(Class<VR256X>))  [2.02;2.02]
		 Successful, latency: 2.02

-----VPERMILPDZ256rrkz-----
	VPERMILPDZ256rrkz(2(Class<VR256X>) -> 0(Class<VR256X>))  [2.04;2.04]
		 Successful, latency: 2.04
	VPERMILPDZ256rrkz(3(Class<VR256X>) -> 0(Class<VR256X>))  [2.02;2.02]
		 Successful, latency: 2.02

-----VPERMILPDZri-----
	VPERMILPDZri(1(Class<VR512>) -> 0(Class<VR512>))  [1.08;1.08]
		 Successful, latency: 1.08

-----VPERMILPDZrik-----
	VPERMILPDZrik(1(Class<VR512>) -> 0(Class<VR512>))  [1.07;1.07]
		 Successful, latency: 1.07
	VPERMILPDZrik(3(Class<VR512>) -> 0(Class<VR512>))  [1.13;1.13]
		 Successful, latency: 1.13

-----VPERMILPDZrikz-----
	VPERMILPDZrikz(2(Class<VR512>) -> 0(Class<VR512>))  [1.14;1.14]
		 Successful, latency: 1.14

-----VPERMILPDZrr-----
	VPERMILPDZrr(1(Class<VR512>) -> 0(Class<VR512>))  [2.01;2.01]
		 Successful, latency: 2.01
	VPERMILPDZrr(2(Class<VR512>) -> 0(Class<VR512>))  [2;2]
		 Successful, latency: 2

-----VPERMILPDZrrk-----
	VPERMILPDZrrk(1(Class<VR512>) -> 0(Class<VR512>))  [2.02;2.02]
		 Successful, latency: 2.02
	VPERMILPDZrrk(3(Class<VR512>) -> 0(Class<VR512>))  [2.02;2.02]
		 Successful, latency: 2.02
	VPERMILPDZrrk(4(Class<VR512>) -> 0(Class<VR512>))  [2.02;2.02]
		 Successful, latency: 2.02

-----VPERMILPDZrrkz-----
	VPERMILPDZrrkz(2(Class<VR512>) -> 0(Class<VR512>))  [2.02;2.02]
		 Successful, latency: 2.02
	VPERMILPDZrrkz(3(Class<VR512>) -> 0(Class<VR512>))  [2.01;2.01]
		 Successful, latency: 2.01

-----VPERMILPDri-----
	VPERMILPDri(1(Class<VR128>) -> 0(Class<VR128>))  [1.01;1.01]
		 Successful, latency: 1.01

-----VPERMILPDrr-----
	VPERMILPDrr(1(Class<VR128>) -> 0(Class<VR128>))  [2.01;2.01]
		 Successful, latency: 2.01
	VPERMILPDrr(2(Class<VR128>) -> 0(Class<VR128>))  [2.03;2.03]
		 Successful, latency: 2.03

-----VPERMILPSYri-----
	VPERMILPSYri(1(Class<VR256>) -> 0(Class<VR256>))  [1.01;1.01]
		 Successful, latency: 1.01

-----VPERMILPSYrr-----
	VPERMILPSYrr(1(Class<VR256>) -> 0(Class<VR256>))  [2.02;2.02]
		 Successful, latency: 2.02
	VPERMILPSYrr(2(Class<VR256>) -> 0(Class<VR256>))  [2.01;2.01]
		 Successful, latency: 2.01

-----VPERMILPSZ128ri-----
	VPERMILPSZ128ri(1(Class<VR128X>) -> 0(Class<VR128X>))  [1.01;1.01]
		 Successful, latency: 1.01

-----VPERMILPSZ128rik-----
	VPERMILPSZ128rik(1(Class<VR128X>) -> 0(Class<VR128X>))  [1;1]
		 Successful, latency: 1
	VPERMILPSZ128rik(3(Class<VR128X>) -> 0(Class<VR128X>))  [1.01;1.01]
		 Successful, latency: 1.01

-----VPERMILPSZ128rikz-----
	VPERMILPSZ128rikz(2(Class<VR128X>) -> 0(Class<VR128X>))  [1;1]
		 Successful, latency: 1

-----VPERMILPSZ128rr-----
	VPERMILPSZ128rr(1(Class<VR128X>) -> 0(Class<VR128X>))  [2.02;2.02]
		 Successful, latency: 2.02
	VPERMILPSZ128rr(2(Class<VR128X>) -> 0(Class<VR128X>))  [2.01;2.01]
		 Successful, latency: 2.01

-----VPERMILPSZ128rrk-----
	VPERMILPSZ128rrk(1(Class<VR128X>) -> 0(Class<VR128X>))  [2.02;2.02]
		 Successful, latency: 2.02
	VPERMILPSZ128rrk(3(Class<VR128X>) -> 0(Class<VR128X>))  [2.02;2.02]
		 Successful, latency: 2.02
	VPERMILPSZ128rrk(4(Class<VR128X>) -> 0(Class<VR128X>))  [2.02;2.02]
		 Successful, latency: 2.02

-----VPERMILPSZ128rrkz-----
	VPERMILPSZ128rrkz(2(Class<VR128X>) -> 0(Class<VR128X>))  [2.02;2.02]
		 Successful, latency: 2.02
	VPERMILPSZ128rrkz(3(Class<VR128X>) -> 0(Class<VR128X>))  [2.02;2.02]
		 Successful, latency: 2.02

-----VPERMILPSZ256ri-----
	VPERMILPSZ256ri(1(Class<VR256X>) -> 0(Class<VR256X>))  [1.01;1.01]
		 Successful, latency: 1.01

-----VPERMILPSZ256rik-----
	VPERMILPSZ256rik(1(Class<VR256X>) -> 0(Class<VR256X>))  [1;1]
		 Successful, latency: 1
	VPERMILPSZ256rik(3(Class<VR256X>) -> 0(Class<VR256X>))  [1;1]
		 Successful, latency: 1

-----VPERMILPSZ256rikz-----
	VPERMILPSZ256rikz(2(Class<VR256X>) -> 0(Class<VR256X>))  [1.01;1.01]
		 Successful, latency: 1.01

-----VPERMILPSZ256rr-----
	VPERMILPSZ256rr(1(Class<VR256X>) -> 0(Class<VR256X>))  [2.03;2.03]
		 Successful, latency: 2.03
	VPERMILPSZ256rr(2(Class<VR256X>) -> 0(Class<VR256X>))  [2.02;2.02]
		 Successful, latency: 2.02

-----VPERMILPSZ256rrk-----
	VPERMILPSZ256rrk(1(Class<VR256X>) -> 0(Class<VR256X>))  [2.02;2.02]
		 Successful, latency: 2.02
	VPERMILPSZ256rrk(3(Class<VR256X>) -> 0(Class<VR256X>))  [2.01;2.01]
		 Successful, latency: 2.01
	VPERMILPSZ256rrk(4(Class<VR256X>) -> 0(Class<VR256X>))  [2.03;2.03]
		 Successful, latency: 2.03

-----VPERMILPSZ256rrkz-----
	VPERMILPSZ256rrkz(2(Class<VR256X>) -> 0(Class<VR256X>))  [2.02;2.02]
		 Successful, latency: 2.02
	VPERMILPSZ256rrkz(3(Class<VR256X>) -> 0(Class<VR256X>))  [2.02;2.02]
		 Successful, latency: 2.02

-----VPERMILPSZri-----
	VPERMILPSZri(1(Class<VR512>) -> 0(Class<VR512>))  [1.15;1.15]
		 Successful, latency: 1.15

-----VPERMILPSZrik-----
	VPERMILPSZrik(1(Class<VR512>) -> 0(Class<VR512>))  [1.16;1.16]
		 Successful, latency: 1.16
	VPERMILPSZrik(3(Class<VR512>) -> 0(Class<VR512>))  [1.07;1.07]
		 Successful, latency: 1.07

-----VPERMILPSZrikz-----
	VPERMILPSZrikz(2(Class<VR512>) -> 0(Class<VR512>))  [1.11;1.11]
		 Successful, latency: 1.11

-----VPERMILPSZrr-----
	VPERMILPSZrr(1(Class<VR512>) -> 0(Class<VR512>))  [2.02;2.02]
		 Successful, latency: 2.02
	VPERMILPSZrr(2(Class<VR512>) -> 0(Class<VR512>))  [2.03;2.03]
		 Successful, latency: 2.03

-----VPERMILPSZrrk-----
	VPERMILPSZrrk(1(Class<VR512>) -> 0(Class<VR512>))  [2.02;2.02]
		 Successful, latency: 2.02
	VPERMILPSZrrk(3(Class<VR512>) -> 0(Class<VR512>))  [2.02;2.02]
		 Successful, latency: 2.02
	VPERMILPSZrrk(4(Class<VR512>) -> 0(Class<VR512>))  [2.01;2.01]
		 Successful, latency: 2.01

-----VPERMILPSZrrkz-----
	VPERMILPSZrrkz(2(Class<VR512>) -> 0(Class<VR512>))  [2.01;2.01]
		 Successful, latency: 2.01
	VPERMILPSZrrkz(3(Class<VR512>) -> 0(Class<VR512>))  [2.01;2.01]
		 Successful, latency: 2.01

-----VPERMILPSri-----
	VPERMILPSri(1(Class<VR128>) -> 0(Class<VR128>))  [1;1]
		 Successful, latency: 1

-----VPERMILPSrr-----
	VPERMILPSrr(1(Class<VR128>) -> 0(Class<VR128>))  [2.02;2.02]
		 Successful, latency: 2.02
	VPERMILPSrr(2(Class<VR128>) -> 0(Class<VR128>))  [2.02;2.02]
		 Successful, latency: 2.02

-----VPERMPDYri-----
	VPERMPDYri(1(Class<VR256>) -> 0(Class<VR256>))  [4.06;4.06]
		 Successful, latency: 4.06

-----VPERMPDZ256ri-----
	VPERMPDZ256ri(1(Class<VR256X>) -> 0(Class<VR256X>))  [4.05;4.05]
		 Successful, latency: 4.05

-----VPERMPDZ256rik-----
	VPERMPDZ256rik(1(Class<VR256X>) -> 0(Class<VR256X>))  [4.04;4.04]
		 Successful, latency: 4.04
	VPERMPDZ256rik(3(Class<VR256X>) -> 0(Class<VR256X>))  [4.04;4.04]
		 Successful, latency: 4.04

-----VPERMPDZ256rikz-----
	VPERMPDZ256rikz(2(Class<VR256X>) -> 0(Class<VR256X>))  [4.05;4.05]
		 Successful, latency: 4.05

-----VPERMPDZ256rr-----
	VPERMPDZ256rr(1(Class<VR256X>) -> 0(Class<VR256X>))  [4.01;4.01]
		 Successful, latency: 4.01
	VPERMPDZ256rr(2(Class<VR256X>) -> 0(Class<VR256X>))  [4.07;4.07]
		 Successful, latency: 4.07

-----VPERMPDZ256rrk-----
	VPERMPDZ256rrk(1(Class<VR256X>) -> 0(Class<VR256X>))  [4.04;4.04]
		 Successful, latency: 4.04
	VPERMPDZ256rrk(3(Class<VR256X>) -> 0(Class<VR256X>))  [4.03;4.03]
		 Successful, latency: 4.03
	VPERMPDZ256rrk(4(Class<VR256X>) -> 0(Class<VR256X>))  [4.05;4.05]
		 Successful, latency: 4.05

-----VPERMPDZ256rrkz-----
	VPERMPDZ256rrkz(2(Class<VR256X>) -> 0(Class<VR256X>))  [4.05;4.05]
		 Successful, latency: 4.05
	VPERMPDZ256rrkz(3(Class<VR256X>) -> 0(Class<VR256X>))  [4.05;4.05]
		 Successful, latency: 4.05

-----VPERMPDZri-----
	VPERMPDZri(1(Class<VR512>) -> 0(Class<VR512>))  [4.05;4.05]
		 Successful, latency: 4.05

-----VPERMPDZrik-----
	VPERMPDZrik(1(Class<VR512>) -> 0(Class<VR512>))  [4.03;4.03]
		 Successful, latency: 4.03
	VPERMPDZrik(3(Class<VR512>) -> 0(Class<VR512>))  [4.04;4.04]
		 Successful, latency: 4.04

-----VPERMPDZrikz-----
	VPERMPDZrikz(2(Class<VR512>) -> 0(Class<VR512>))  [4.06;4.06]
		 Successful, latency: 4.06

-----VPERMPDZrr-----
	VPERMPDZrr(1(Class<VR512>) -> 0(Class<VR512>))  [5.07;5.07]
		 Successful, latency: 5.07
	VPERMPDZrr(2(Class<VR512>) -> 0(Class<VR512>))  [5.07;5.07]
		 Successful, latency: 5.07

-----VPERMPDZrrk-----
	VPERMPDZrrk(1(Class<VR512>) -> 0(Class<VR512>))  [5.05;5.05]
		 Successful, latency: 5.05
	VPERMPDZrrk(3(Class<VR512>) -> 0(Class<VR512>))  [5.04;5.04]
		 Successful, latency: 5.04
	VPERMPDZrrk(4(Class<VR512>) -> 0(Class<VR512>))  [5.05;5.05]
		 Successful, latency: 5.05

-----VPERMPDZrrkz-----
	VPERMPDZrrkz(2(Class<VR512>) -> 0(Class<VR512>))  [5.04;5.04]
		 Successful, latency: 5.04
	VPERMPDZrrkz(3(Class<VR512>) -> 0(Class<VR512>))  [5.04;5.04]
		 Successful, latency: 5.04

-----VPERMPSYrr-----
	VPERMPSYrr(1(Class<VR256>) -> 0(Class<VR256>))  [4.03;4.03]
		 Successful, latency: 4.03
	VPERMPSYrr(2(Class<VR256>) -> 0(Class<VR256>))  [4.03;4.03]
		 Successful, latency: 4.03

-----VPERMPSZ256rr-----
	VPERMPSZ256rr(1(Class<VR256X>) -> 0(Class<VR256X>))  [4.06;4.06]
		 Successful, latency: 4.06
	VPERMPSZ256rr(2(Class<VR256X>) -> 0(Class<VR256X>))  [4.04;4.04]
		 Successful, latency: 4.04

-----VPERMPSZ256rrk-----
	VPERMPSZ256rrk(1(Class<VR256X>) -> 0(Class<VR256X>))  [4.03;4.03]
		 Successful, latency: 4.03
	VPERMPSZ256rrk(3(Class<VR256X>) -> 0(Class<VR256X>))  [4.04;4.04]
		 Successful, latency: 4.04
	VPERMPSZ256rrk(4(Class<VR256X>) -> 0(Class<VR256X>))  [4.03;4.03]
		 Successful, latency: 4.03

-----VPERMPSZ256rrkz-----
	VPERMPSZ256rrkz(2(Class<VR256X>) -> 0(Class<VR256X>))  [4.04;4.04]
		 Successful, latency: 4.04
	VPERMPSZ256rrkz(3(Class<VR256X>) -> 0(Class<VR256X>))  [4.03;4.03]
		 Successful, latency: 4.03

-----VPERMPSZrr-----
	VPERMPSZrr(1(Class<VR512>) -> 0(Class<VR512>))  [5.04;5.04]
		 Successful, latency: 5.04
	VPERMPSZrr(2(Class<VR512>) -> 0(Class<VR512>))  [5.04;5.04]
		 Successful, latency: 5.04

-----VPERMPSZrrk-----
	VPERMPSZrrk(1(Class<VR512>) -> 0(Class<VR512>))  [5.04;5.04]
		 Successful, latency: 5.04
	VPERMPSZrrk(3(Class<VR512>) -> 0(Class<VR512>))  [5.05;5.05]
		 Successful, latency: 5.05
	VPERMPSZrrk(4(Class<VR512>) -> 0(Class<VR512>))  [5.06;5.06]
		 Successful, latency: 5.06

-----VPERMPSZrrkz-----
	VPERMPSZrrkz(2(Class<VR512>) -> 0(Class<VR512>))  [5.03;5.03]
		 Successful, latency: 5.03
	VPERMPSZrrkz(3(Class<VR512>) -> 0(Class<VR512>))  [5.04;5.04]
		 Successful, latency: 5.04

-----VPERMQYri-----
	VPERMQYri(1(Class<VR256>) -> 0(Class<VR256>))  [4.02;4.02]
		 Successful, latency: 4.02

-----VPERMQZ256ri-----
	VPERMQZ256ri(1(Class<VR256X>) -> 0(Class<VR256X>))  [4.04;4.04]
		 Successful, latency: 4.04

-----VPERMQZ256rik-----
	VPERMQZ256rik(1(Class<VR256X>) -> 0(Class<VR256X>))  [4.04;4.04]
		 Successful, latency: 4.04
	VPERMQZ256rik(3(Class<VR256X>) -> 0(Class<VR256X>))  [4.05;4.05]
		 Successful, latency: 4.05

-----VPERMQZ256rikz-----
	VPERMQZ256rikz(2(Class<VR256X>) -> 0(Class<VR256X>))  [4.04;4.04]
		 Successful, latency: 4.04

-----VPERMQZ256rr-----
	VPERMQZ256rr(1(Class<VR256X>) -> 0(Class<VR256X>))  [4.04;4.04]
		 Successful, latency: 4.04
	VPERMQZ256rr(2(Class<VR256X>) -> 0(Class<VR256X>))  [4.1;4.1]
		 Successful, latency: 4.1

-----VPERMQZ256rrk-----
	VPERMQZ256rrk(1(Class<VR256X>) -> 0(Class<VR256X>))  [4.03;4.03]
		 Successful, latency: 4.03
	VPERMQZ256rrk(3(Class<VR256X>) -> 0(Class<VR256X>))  [4.05;4.05]
		 Successful, latency: 4.05
	VPERMQZ256rrk(4(Class<VR256X>) -> 0(Class<VR256X>))  [4.03;4.03]
		 Successful, latency: 4.03

-----VPERMQZ256rrkz-----
	VPERMQZ256rrkz(2(Class<VR256X>) -> 0(Class<VR256X>))  [4.03;4.03]
		 Successful, latency: 4.03
	VPERMQZ256rrkz(3(Class<VR256X>) -> 0(Class<VR256X>))  [4.04;4.04]
		 Successful, latency: 4.04

-----VPERMQZri-----
	VPERMQZri(1(Class<VR512>) -> 0(Class<VR512>))  [4.03;4.03]
		 Successful, latency: 4.03

-----VPERMQZrik-----
	VPERMQZrik(1(Class<VR512>) -> 0(Class<VR512>))  [4.03;4.03]
		 Successful, latency: 4.03
	VPERMQZrik(3(Class<VR512>) -> 0(Class<VR512>))  [4.03;4.03]
		 Successful, latency: 4.03

-----VPERMQZrikz-----
	VPERMQZrikz(2(Class<VR512>) -> 0(Class<VR512>))  [4.05;4.05]
		 Successful, latency: 4.05

-----VPERMQZrr-----
	VPERMQZrr(1(Class<VR512>) -> 0(Class<VR512>))  [5.05;5.05]
		 Successful, latency: 5.05
	VPERMQZrr(2(Class<VR512>) -> 0(Class<VR512>))  [5.05;5.05]
		 Successful, latency: 5.05

-----VPERMQZrrk-----
	VPERMQZrrk(1(Class<VR512>) -> 0(Class<VR512>))  [5.05;5.05]
		 Successful, latency: 5.05
	VPERMQZrrk(3(Class<VR512>) -> 0(Class<VR512>))  [5.04;5.04]
		 Successful, latency: 5.04
	VPERMQZrrk(4(Class<VR512>) -> 0(Class<VR512>))  [5.03;5.03]
		 Successful, latency: 5.03

-----VPERMQZrrkz-----
	VPERMQZrrkz(2(Class<VR512>) -> 0(Class<VR512>))  [5.04;5.04]
		 Successful, latency: 5.04
	VPERMQZrrkz(3(Class<VR512>) -> 0(Class<VR512>))  [5.04;5.04]
		 Successful, latency: 5.04

-----VPERMT2BZ128rr-----
	VPERMT2BZ128rr(1(Class<VR128X>) -> 0(Class<VR128X>))  [3.05;3.05]
		 Successful, latency: 3.05
	VPERMT2BZ128rr(2(Class<VR128X>) -> 0(Class<VR128X>))  [3.08;3.08]
		 Successful, latency: 3.08
	VPERMT2BZ128rr(3(Class<VR128X>) -> 0(Class<VR128X>))  [3.02;3.02]
		 Successful, latency: 3.02

-----VPERMT2BZ128rrk-----
	VPERMT2BZ128rrk(1(Class<VR128X>) -> 0(Class<VR128X>))  [3.05;3.05]
		 Successful, latency: 3.05
	VPERMT2BZ128rrk(3(Class<VR128X>) -> 0(Class<VR128X>))  [3.05;3.05]
		 Successful, latency: 3.05
	VPERMT2BZ128rrk(4(Class<VR128X>) -> 0(Class<VR128X>))  [3.01;3.01]
		 Successful, latency: 3.01

-----VPERMT2BZ128rrkz-----
	VPERMT2BZ128rrkz(1(Class<VR128X>) -> 0(Class<VR128X>))  [3.03;3.03]
		 Successful, latency: 3.03
	VPERMT2BZ128rrkz(3(Class<VR128X>) -> 0(Class<VR128X>))  [3.03;3.03]
		 Successful, latency: 3.03
	VPERMT2BZ128rrkz(4(Class<VR128X>) -> 0(Class<VR128X>))  [3.03;3.03]
		 Successful, latency: 3.03

-----VPERMT2BZ256rr-----
	VPERMT2BZ256rr(1(Class<VR256X>) -> 0(Class<VR256X>))  [4.03;4.03]
		 Successful, latency: 4.03
	VPERMT2BZ256rr(2(Class<VR256X>) -> 0(Class<VR256X>))  [4.06;4.06]
		 Successful, latency: 4.06
	VPERMT2BZ256rr(3(Class<VR256X>) -> 0(Class<VR256X>))  [4.03;4.03]
		 Successful, latency: 4.03

-----VPERMT2BZ256rrk-----
	VPERMT2BZ256rrk(1(Class<VR256X>) -> 0(Class<VR256X>))  [4.03;4.03]
		 Successful, latency: 4.03
	VPERMT2BZ256rrk(3(Class<VR256X>) -> 0(Class<VR256X>))  [4.04;4.04]
		 Successful, latency: 4.04
	VPERMT2BZ256rrk(4(Class<VR256X>) -> 0(Class<VR256X>))  [4.04;4.04]
		 Successful, latency: 4.04

-----VPERMT2BZ256rrkz-----
	VPERMT2BZ256rrkz(1(Class<VR256X>) -> 0(Class<VR256X>))  [4.05;4.05]
		 Successful, latency: 4.05
	VPERMT2BZ256rrkz(3(Class<VR256X>) -> 0(Class<VR256X>))  [4.05;4.05]
		 Successful, latency: 4.05
	VPERMT2BZ256rrkz(4(Class<VR256X>) -> 0(Class<VR256X>))  [4.05;4.05]
		 Successful, latency: 4.05

-----VPERMT2BZrr-----
	VPERMT2BZrr(1(Class<VR512>) -> 0(Class<VR512>))  [5.03;5.03]
		 Successful, latency: 5.03
	VPERMT2BZrr(2(Class<VR512>) -> 0(Class<VR512>))  [5.05;5.05]
		 Successful, latency: 5.05
	VPERMT2BZrr(3(Class<VR512>) -> 0(Class<VR512>))  [5.05;5.05]
		 Successful, latency: 5.05

-----VPERMT2BZrrk-----
	VPERMT2BZrrk(1(Class<VR512>) -> 0(Class<VR512>))  [5.05;5.05]
		 Successful, latency: 5.05
	VPERMT2BZrrk(3(Class<VR512>) -> 0(Class<VR512>))  [5.04;5.04]
		 Successful, latency: 5.04
	VPERMT2BZrrk(4(Class<VR512>) -> 0(Class<VR512>))  [5.04;5.04]
		 Successful, latency: 5.04

-----VPERMT2BZrrkz-----
	VPERMT2BZrrkz(1(Class<VR512>) -> 0(Class<VR512>))  [5.04;5.04]
		 Successful, latency: 5.04
	VPERMT2BZrrkz(3(Class<VR512>) -> 0(Class<VR512>))  [5.05;5.05]
		 Successful, latency: 5.05
	VPERMT2BZrrkz(4(Class<VR512>) -> 0(Class<VR512>))  [5.04;5.04]
		 Successful, latency: 5.04

-----VPERMT2DZ128rr-----
	VPERMT2DZ128rr(1(Class<VR128X>) -> 0(Class<VR128X>))  [3.05;3.05]
		 Successful, latency: 3.05
	VPERMT2DZ128rr(2(Class<VR128X>) -> 0(Class<VR128X>))  [3.04;3.04]
		 Successful, latency: 3.04
	VPERMT2DZ128rr(3(Class<VR128X>) -> 0(Class<VR128X>))  [3.02;3.02]
		 Successful, latency: 3.02

-----VPERMT2DZ128rrk-----
	VPERMT2DZ128rrk(1(Class<VR128X>) -> 0(Class<VR128X>))  [3.03;3.03]
		 Successful, latency: 3.03
	VPERMT2DZ128rrk(3(Class<VR128X>) -> 0(Class<VR128X>))  [3.05;3.05]
		 Successful, latency: 3.05
	VPERMT2DZ128rrk(4(Class<VR128X>) -> 0(Class<VR128X>))  [3.03;3.03]
		 Successful, latency: 3.03

-----VPERMT2DZ128rrkz-----
	VPERMT2DZ128rrkz(1(Class<VR128X>) -> 0(Class<VR128X>))  [3.04;3.04]
		 Successful, latency: 3.04
	VPERMT2DZ128rrkz(3(Class<VR128X>) -> 0(Class<VR128X>))  [3.06;3.06]
		 Successful, latency: 3.06
	VPERMT2DZ128rrkz(4(Class<VR128X>) -> 0(Class<VR128X>))  [3.04;3.04]
		 Successful, latency: 3.04

-----VPERMT2DZ256rr-----
	VPERMT2DZ256rr(1(Class<VR256X>) -> 0(Class<VR256X>))  [4.04;4.04]
		 Successful, latency: 4.04
	VPERMT2DZ256rr(2(Class<VR256X>) -> 0(Class<VR256X>))  [4.04;4.04]
		 Successful, latency: 4.04
	VPERMT2DZ256rr(3(Class<VR256X>) -> 0(Class<VR256X>))  [4.03;4.03]
		 Successful, latency: 4.03

-----VPERMT2DZ256rrk-----
	VPERMT2DZ256rrk(1(Class<VR256X>) -> 0(Class<VR256X>))  [4.04;4.04]
		 Successful, latency: 4.04
	VPERMT2DZ256rrk(3(Class<VR256X>) -> 0(Class<VR256X>))  [4.04;4.04]
		 Successful, latency: 4.04
	VPERMT2DZ256rrk(4(Class<VR256X>) -> 0(Class<VR256X>))  [4.02;4.02]
		 Successful, latency: 4.02

-----VPERMT2DZ256rrkz-----
	VPERMT2DZ256rrkz(1(Class<VR256X>) -> 0(Class<VR256X>))  [4.04;4.04]
		 Successful, latency: 4.04
	VPERMT2DZ256rrkz(3(Class<VR256X>) -> 0(Class<VR256X>))  [4.04;4.04]
		 Successful, latency: 4.04
	VPERMT2DZ256rrkz(4(Class<VR256X>) -> 0(Class<VR256X>))  [4.06;4.06]
		 Successful, latency: 4.06

-----VPERMT2DZrr-----
	VPERMT2DZrr(1(Class<VR512>) -> 0(Class<VR512>))  [5.06;5.06]
		 Successful, latency: 5.06
	VPERMT2DZrr(2(Class<VR512>) -> 0(Class<VR512>))  [5.04;5.04]
		 Successful, latency: 5.04
	VPERMT2DZrr(3(Class<VR512>) -> 0(Class<VR512>))  [5.04;5.04]
		 Successful, latency: 5.04

-----VPERMT2DZrrk-----
	VPERMT2DZrrk(1(Class<VR512>) -> 0(Class<VR512>))  [5.05;5.05]
		 Successful, latency: 5.05
	VPERMT2DZrrk(3(Class<VR512>) -> 0(Class<VR512>))  [5.04;5.04]
		 Successful, latency: 5.04
	VPERMT2DZrrk(4(Class<VR512>) -> 0(Class<VR512>))  [5.03;5.03]
		 Successful, latency: 5.03

-----VPERMT2DZrrkz-----
	VPERMT2DZrrkz(1(Class<VR512>) -> 0(Class<VR512>))  [5.04;5.04]
		 Successful, latency: 5.04
	VPERMT2DZrrkz(3(Class<VR512>) -> 0(Class<VR512>))  [5.04;5.04]
		 Successful, latency: 5.04
	VPERMT2DZrrkz(4(Class<VR512>) -> 0(Class<VR512>))  [5.06;5.06]
		 Successful, latency: 5.06

-----VPERMT2PDZ128rr-----
	VPERMT2PDZ128rr(1(Class<VR128X>) -> 0(Class<VR128X>))  [3.02;3.02]
		 Successful, latency: 3.02
	VPERMT2PDZ128rr(2(Class<VR128X>) -> 0(Class<VR128X>))  [3.03;3.03]
		 Successful, latency: 3.03
	VPERMT2PDZ128rr(3(Class<VR128X>) -> 0(Class<VR128X>))  [3.04;3.04]
		 Successful, latency: 3.04

-----VPERMT2PDZ128rrk-----
	VPERMT2PDZ128rrk(1(Class<VR128X>) -> 0(Class<VR128X>))  [3.05;3.05]
		 Successful, latency: 3.05
	VPERMT2PDZ128rrk(3(Class<VR128X>) -> 0(Class<VR128X>))  [3.04;3.04]
		 Successful, latency: 3.04
	VPERMT2PDZ128rrk(4(Class<VR128X>) -> 0(Class<VR128X>))  [3.04;3.04]
		 Successful, latency: 3.04

-----VPERMT2PDZ128rrkz-----
	VPERMT2PDZ128rrkz(1(Class<VR128X>) -> 0(Class<VR128X>))  [3.06;3.06]
		 Successful, latency: 3.06
	VPERMT2PDZ128rrkz(3(Class<VR128X>) -> 0(Class<VR128X>))  [3.03;3.03]
		 Successful, latency: 3.03
	VPERMT2PDZ128rrkz(4(Class<VR128X>) -> 0(Class<VR128X>))  [3.06;3.06]
		 Successful, latency: 3.06

-----VPERMT2PDZ256rr-----
	VPERMT2PDZ256rr(1(Class<VR256X>) -> 0(Class<VR256X>))  [4.07;4.07]
		 Successful, latency: 4.07
	VPERMT2PDZ256rr(2(Class<VR256X>) -> 0(Class<VR256X>))  [4.04;4.04]
		 Successful, latency: 4.04
	VPERMT2PDZ256rr(3(Class<VR256X>) -> 0(Class<VR256X>))  [4.03;4.03]
		 Successful, latency: 4.03

-----VPERMT2PDZ256rrk-----
	VPERMT2PDZ256rrk(1(Class<VR256X>) -> 0(Class<VR256X>))  [4.03;4.03]
		 Successful, latency: 4.03
	VPERMT2PDZ256rrk(3(Class<VR256X>) -> 0(Class<VR256X>))  [4.05;4.05]
		 Successful, latency: 4.05
	VPERMT2PDZ256rrk(4(Class<VR256X>) -> 0(Class<VR256X>))  [4.03;4.03]
		 Successful, latency: 4.03

-----VPERMT2PDZ256rrkz-----
	VPERMT2PDZ256rrkz(1(Class<VR256X>) -> 0(Class<VR256X>))  [4.06;4.06]
		 Successful, latency: 4.06
	VPERMT2PDZ256rrkz(3(Class<VR256X>) -> 0(Class<VR256X>))  [4.06;4.06]
		 Successful, latency: 4.06
	VPERMT2PDZ256rrkz(4(Class<VR256X>) -> 0(Class<VR256X>))  [4.01;4.01]
		 Successful, latency: 4.01

-----VPERMT2PDZrr-----
	VPERMT2PDZrr(1(Class<VR512>) -> 0(Class<VR512>))  [5.03;5.03]
		 Successful, latency: 5.03
	VPERMT2PDZrr(2(Class<VR512>) -> 0(Class<VR512>))  [5.04;5.04]
		 Successful, latency: 5.04
	VPERMT2PDZrr(3(Class<VR512>) -> 0(Class<VR512>))  [5.03;5.03]
		 Successful, latency: 5.03

-----VPERMT2PDZrrk-----
	VPERMT2PDZrrk(1(Class<VR512>) -> 0(Class<VR512>))  [5.04;5.04]
		 Successful, latency: 5.04
	VPERMT2PDZrrk(3(Class<VR512>) -> 0(Class<VR512>))  [5.04;5.04]
		 Successful, latency: 5.04
	VPERMT2PDZrrk(4(Class<VR512>) -> 0(Class<VR512>))  [5.1;5.1]
		 Successful, latency: 5.1

-----VPERMT2PDZrrkz-----
	VPERMT2PDZrrkz(1(Class<VR512>) -> 0(Class<VR512>))  [5.04;5.04]
		 Successful, latency: 5.04
	VPERMT2PDZrrkz(3(Class<VR512>) -> 0(Class<VR512>))  [5.04;5.04]
		 Successful, latency: 5.04
	VPERMT2PDZrrkz(4(Class<VR512>) -> 0(Class<VR512>))  [5.04;5.04]
		 Successful, latency: 5.04

-----VPERMT2PSZ128rr-----
	VPERMT2PSZ128rr(1(Class<VR128X>) -> 0(Class<VR128X>))  [3.02;3.02]
		 Successful, latency: 3.02
	VPERMT2PSZ128rr(2(Class<VR128X>) -> 0(Class<VR128X>))  [3.02;3.02]
		 Successful, latency: 3.02
	VPERMT2PSZ128rr(3(Class<VR128X>) -> 0(Class<VR128X>))  [3.04;3.04]
		 Successful, latency: 3.04

-----VPERMT2PSZ128rrk-----
	VPERMT2PSZ128rrk(1(Class<VR128X>) -> 0(Class<VR128X>))  [3.02;3.02]
		 Successful, latency: 3.02
	VPERMT2PSZ128rrk(3(Class<VR128X>) -> 0(Class<VR128X>))  [3.03;3.03]
		 Successful, latency: 3.03
	VPERMT2PSZ128rrk(4(Class<VR128X>) -> 0(Class<VR128X>))  [3.04;3.04]
		 Successful, latency: 3.04

-----VPERMT2PSZ128rrkz-----
	VPERMT2PSZ128rrkz(1(Class<VR128X>) -> 0(Class<VR128X>))  [3.03;3.03]
		 Successful, latency: 3.03
	VPERMT2PSZ128rrkz(3(Class<VR128X>) -> 0(Class<VR128X>))  [3.02;3.02]
		 Successful, latency: 3.02
	VPERMT2PSZ128rrkz(4(Class<VR128X>) -> 0(Class<VR128X>))  [3.02;3.02]
		 Successful, latency: 3.02

-----VPERMT2PSZ256rr-----
	VPERMT2PSZ256rr(1(Class<VR256X>) -> 0(Class<VR256X>))  [4.02;4.02]
		 Successful, latency: 4.02
	VPERMT2PSZ256rr(2(Class<VR256X>) -> 0(Class<VR256X>))  [4.04;4.04]
		 Successful, latency: 4.04
	VPERMT2PSZ256rr(3(Class<VR256X>) -> 0(Class<VR256X>))  [4.04;4.04]
		 Successful, latency: 4.04

-----VPERMT2PSZ256rrk-----
	VPERMT2PSZ256rrk(1(Class<VR256X>) -> 0(Class<VR256X>))  [4.04;4.04]
		 Successful, latency: 4.04
	VPERMT2PSZ256rrk(3(Class<VR256X>) -> 0(Class<VR256X>))  [4.04;4.04]
		 Successful, latency: 4.04
	VPERMT2PSZ256rrk(4(Class<VR256X>) -> 0(Class<VR256X>))  [4.05;4.05]
		 Successful, latency: 4.05

-----VPERMT2PSZ256rrkz-----
	VPERMT2PSZ256rrkz(1(Class<VR256X>) -> 0(Class<VR256X>))  [4.03;4.03]
		 Successful, latency: 4.03
	VPERMT2PSZ256rrkz(3(Class<VR256X>) -> 0(Class<VR256X>))  [4.02;4.02]
		 Successful, latency: 4.02
	VPERMT2PSZ256rrkz(4(Class<VR256X>) -> 0(Class<VR256X>))  [4.04;4.04]
		 Successful, latency: 4.04

-----VPERMT2PSZrr-----
	VPERMT2PSZrr(1(Class<VR512>) -> 0(Class<VR512>))  [5.05;5.05]
		 Successful, latency: 5.05
	VPERMT2PSZrr(2(Class<VR512>) -> 0(Class<VR512>))  [5.02;5.02]
		 Successful, latency: 5.02
	VPERMT2PSZrr(3(Class<VR512>) -> 0(Class<VR512>))  [5.04;5.04]
		 Successful, latency: 5.04

-----VPERMT2PSZrrk-----
	VPERMT2PSZrrk(1(Class<VR512>) -> 0(Class<VR512>))  [5.04;5.04]
		 Successful, latency: 5.04
	VPERMT2PSZrrk(3(Class<VR512>) -> 0(Class<VR512>))  [5.05;5.05]
		 Successful, latency: 5.05
	VPERMT2PSZrrk(4(Class<VR512>) -> 0(Class<VR512>))  [5.04;5.04]
		 Successful, latency: 5.04

-----VPERMT2PSZrrkz-----
	VPERMT2PSZrrkz(1(Class<VR512>) -> 0(Class<VR512>))  [5.05;5.05]
		 Successful, latency: 5.05
	VPERMT2PSZrrkz(3(Class<VR512>) -> 0(Class<VR512>))  [5.05;5.05]
		 Successful, latency: 5.05
	VPERMT2PSZrrkz(4(Class<VR512>) -> 0(Class<VR512>))  [5.05;5.05]
		 Successful, latency: 5.05

-----VPERMT2QZ128rr-----
	VPERMT2QZ128rr(1(Class<VR128X>) -> 0(Class<VR128X>))  [3.02;3.02]
		 Successful, latency: 3.02
	VPERMT2QZ128rr(2(Class<VR128X>) -> 0(Class<VR128X>))  [3.03;3.03]
		 Successful, latency: 3.03
	VPERMT2QZ128rr(3(Class<VR128X>) -> 0(Class<VR128X>))  [3.04;3.04]
		 Successful, latency: 3.04

-----VPERMT2QZ128rrk-----
	VPERMT2QZ128rrk(1(Class<VR128X>) -> 0(Class<VR128X>))  [3.02;3.02]
		 Successful, latency: 3.02
	VPERMT2QZ128rrk(3(Class<VR128X>) -> 0(Class<VR128X>))  [3.04;3.04]
		 Successful, latency: 3.04
	VPERMT2QZ128rrk(4(Class<VR128X>) -> 0(Class<VR128X>))  [3.06;3.06]
		 Successful, latency: 3.06

-----VPERMT2QZ128rrkz-----
	VPERMT2QZ128rrkz(1(Class<VR128X>) -> 0(Class<VR128X>))  [3.04;3.04]
		 Successful, latency: 3.04
	VPERMT2QZ128rrkz(3(Class<VR128X>) -> 0(Class<VR128X>))  [3.02;3.02]
		 Successful, latency: 3.02
	VPERMT2QZ128rrkz(4(Class<VR128X>) -> 0(Class<VR128X>))  [3.02;3.02]
		 Successful, latency: 3.02

-----VPERMT2QZ256rr-----
	VPERMT2QZ256rr(1(Class<VR256X>) -> 0(Class<VR256X>))  [4.05;4.05]
		 Successful, latency: 4.05
	VPERMT2QZ256rr(2(Class<VR256X>) -> 0(Class<VR256X>))  [4.03;4.03]
		 Successful, latency: 4.03
	VPERMT2QZ256rr(3(Class<VR256X>) -> 0(Class<VR256X>))  [4.03;4.03]
		 Successful, latency: 4.03

-----VPERMT2QZ256rrk-----
	VPERMT2QZ256rrk(1(Class<VR256X>) -> 0(Class<VR256X>))  [4.05;4.05]
		 Successful, latency: 4.05
	VPERMT2QZ256rrk(3(Class<VR256X>) -> 0(Class<VR256X>))  [4.02;4.02]
		 Successful, latency: 4.02
	VPERMT2QZ256rrk(4(Class<VR256X>) -> 0(Class<VR256X>))  [4.04;4.04]
		 Successful, latency: 4.04

-----VPERMT2QZ256rrkz-----
	VPERMT2QZ256rrkz(1(Class<VR256X>) -> 0(Class<VR256X>))  [4.02;4.02]
		 Successful, latency: 4.02
	VPERMT2QZ256rrkz(3(Class<VR256X>) -> 0(Class<VR256X>))  [4.06;4.06]
		 Successful, latency: 4.06
	VPERMT2QZ256rrkz(4(Class<VR256X>) -> 0(Class<VR256X>))  [4.05;4.05]
		 Successful, latency: 4.05

-----VPERMT2QZrr-----
	VPERMT2QZrr(1(Class<VR512>) -> 0(Class<VR512>))  [5.05;5.05]
		 Successful, latency: 5.05
	VPERMT2QZrr(2(Class<VR512>) -> 0(Class<VR512>))  [5.03;5.03]
		 Successful, latency: 5.03
	VPERMT2QZrr(3(Class<VR512>) -> 0(Class<VR512>))  [5.04;5.04]
		 Successful, latency: 5.04

-----VPERMT2QZrrk-----
	VPERMT2QZrrk(1(Class<VR512>) -> 0(Class<VR512>))  [5.07;5.07]
		 Successful, latency: 5.07
	VPERMT2QZrrk(3(Class<VR512>) -> 0(Class<VR512>))  [5.04;5.04]
		 Successful, latency: 5.04
	VPERMT2QZrrk(4(Class<VR512>) -> 0(Class<VR512>))  [5.04;5.04]
		 Successful, latency: 5.04

-----VPERMT2QZrrkz-----
	VPERMT2QZrrkz(1(Class<VR512>) -> 0(Class<VR512>))  [5.05;5.05]
		 Successful, latency: 5.05
	VPERMT2QZrrkz(3(Class<VR512>) -> 0(Class<VR512>))  [5.03;5.03]
		 Successful, latency: 5.03
	VPERMT2QZrrkz(4(Class<VR512>) -> 0(Class<VR512>))  [5.1;5.1]
		 Successful, latency: 5.1

-----VPERMT2WZ128rr-----
	VPERMT2WZ128rr(1(Class<VR128X>) -> 0(Class<VR128X>))  [3.05;3.05]
		 Successful, latency: 3.05
	VPERMT2WZ128rr(2(Class<VR128X>) -> 0(Class<VR128X>))  [3.05;3.05]
		 Successful, latency: 3.05
	VPERMT2WZ128rr(3(Class<VR128X>) -> 0(Class<VR128X>))  [3.05;3.05]
		 Successful, latency: 3.05

-----VPERMT2WZ128rrk-----
	VPERMT2WZ128rrk(1(Class<VR128X>) -> 0(Class<VR128X>))  [3.06;3.06]
		 Successful, latency: 3.06
	VPERMT2WZ128rrk(3(Class<VR128X>) -> 0(Class<VR128X>))  [3.06;3.06]
		 Successful, latency: 3.06
	VPERMT2WZ128rrk(4(Class<VR128X>) -> 0(Class<VR128X>))  [3.04;3.04]
		 Successful, latency: 3.04

-----VPERMT2WZ128rrkz-----
	VPERMT2WZ128rrkz(1(Class<VR128X>) -> 0(Class<VR128X>))  [3.04;3.04]
		 Successful, latency: 3.04
	VPERMT2WZ128rrkz(3(Class<VR128X>) -> 0(Class<VR128X>))  [3.02;3.02]
		 Successful, latency: 3.02
	VPERMT2WZ128rrkz(4(Class<VR128X>) -> 0(Class<VR128X>))  [3.04;3.04]
		 Successful, latency: 3.04

-----VPERMT2WZ256rr-----
	VPERMT2WZ256rr(1(Class<VR256X>) -> 0(Class<VR256X>))  [4.06;4.06]
		 Successful, latency: 4.06
	VPERMT2WZ256rr(2(Class<VR256X>) -> 0(Class<VR256X>))  [4.03;4.03]
		 Successful, latency: 4.03
	VPERMT2WZ256rr(3(Class<VR256X>) -> 0(Class<VR256X>))  [4.07;4.07]
		 Successful, latency: 4.07

-----VPERMT2WZ256rrk-----
	VPERMT2WZ256rrk(1(Class<VR256X>) -> 0(Class<VR256X>))  [4.04;4.04]
		 Successful, latency: 4.04
	VPERMT2WZ256rrk(3(Class<VR256X>) -> 0(Class<VR256X>))  [4.03;4.03]
		 Successful, latency: 4.03
	VPERMT2WZ256rrk(4(Class<VR256X>) -> 0(Class<VR256X>))  [4.03;4.03]
		 Successful, latency: 4.03

-----VPERMT2WZ256rrkz-----
	VPERMT2WZ256rrkz(1(Class<VR256X>) -> 0(Class<VR256X>))  [4.02;4.02]
		 Successful, latency: 4.02
	VPERMT2WZ256rrkz(3(Class<VR256X>) -> 0(Class<VR256X>))  [4.04;4.04]
		 Successful, latency: 4.04
	VPERMT2WZ256rrkz(4(Class<VR256X>) -> 0(Class<VR256X>))  [4.02;4.02]
		 Successful, latency: 4.02

-----VPERMT2WZrr-----
	VPERMT2WZrr(1(Class<VR512>) -> 0(Class<VR512>))  [5.04;5.04]
		 Successful, latency: 5.04
	VPERMT2WZrr(2(Class<VR512>) -> 0(Class<VR512>))  [5.05;5.05]
		 Successful, latency: 5.05
	VPERMT2WZrr(3(Class<VR512>) -> 0(Class<VR512>))  [5.04;5.04]
		 Successful, latency: 5.04

-----VPERMT2WZrrk-----
	VPERMT2WZrrk(1(Class<VR512>) -> 0(Class<VR512>))  [5.04;5.04]
		 Successful, latency: 5.04
	VPERMT2WZrrk(3(Class<VR512>) -> 0(Class<VR512>))  [5.04;5.04]
		 Successful, latency: 5.04
	VPERMT2WZrrk(4(Class<VR512>) -> 0(Class<VR512>))  [5.03;5.03]
		 Successful, latency: 5.03

-----VPERMT2WZrrkz-----
	VPERMT2WZrrkz(1(Class<VR512>) -> 0(Class<VR512>))  [5.03;5.03]
		 Successful, latency: 5.03
	VPERMT2WZrrkz(3(Class<VR512>) -> 0(Class<VR512>))  [5.03;5.03]
		 Successful, latency: 5.03
	VPERMT2WZrrkz(4(Class<VR512>) -> 0(Class<VR512>))  [5.04;5.04]
		 Successful, latency: 5.04

-----VPERMWZ128rr-----
	VPERMWZ128rr(1(Class<VR128X>) -> 0(Class<VR128X>))  [1.99;1.99]
		 Successful, latency: 1.99
	VPERMWZ128rr(2(Class<VR128X>) -> 0(Class<VR128X>))  [2.01;2.01]
		 Successful, latency: 2.01

-----VPERMWZ128rrk-----
	VPERMWZ128rrk(1(Class<VR128X>) -> 0(Class<VR128X>))  [2.02;2.02]
		 Successful, latency: 2.02
	VPERMWZ128rrk(3(Class<VR128X>) -> 0(Class<VR128X>))  [2.03;2.03]
		 Successful, latency: 2.03
	VPERMWZ128rrk(4(Class<VR128X>) -> 0(Class<VR128X>))  [2.01;2.01]
		 Successful, latency: 2.01

-----VPERMWZ128rrkz-----
	VPERMWZ128rrkz(2(Class<VR128X>) -> 0(Class<VR128X>))  [2.02;2.02]
		 Successful, latency: 2.02
	VPERMWZ128rrkz(3(Class<VR128X>) -> 0(Class<VR128X>))  [2.02;2.02]
		 Successful, latency: 2.02

-----VPERMWZ256rr-----
	VPERMWZ256rr(1(Class<VR256X>) -> 0(Class<VR256X>))  [4.03;4.03]
		 Successful, latency: 4.03
	VPERMWZ256rr(2(Class<VR256X>) -> 0(Class<VR256X>))  [4.08;4.08]
		 Successful, latency: 4.08

-----VPERMWZ256rrk-----
	VPERMWZ256rrk(1(Class<VR256X>) -> 0(Class<VR256X>))  [4.03;4.03]
		 Successful, latency: 4.03
	VPERMWZ256rrk(3(Class<VR256X>) -> 0(Class<VR256X>))  [4.05;4.05]
		 Successful, latency: 4.05
	VPERMWZ256rrk(4(Class<VR256X>) -> 0(Class<VR256X>))  [4.03;4.03]
		 Successful, latency: 4.03

-----VPERMWZ256rrkz-----
	VPERMWZ256rrkz(2(Class<VR256X>) -> 0(Class<VR256X>))  [4.04;4.04]
		 Successful, latency: 4.04
	VPERMWZ256rrkz(3(Class<VR256X>) -> 0(Class<VR256X>))  [4.03;4.03]
		 Successful, latency: 4.03

-----VPERMWZrr-----
	VPERMWZrr(1(Class<VR512>) -> 0(Class<VR512>))  [5.05;5.05]
		 Successful, latency: 5.05
	VPERMWZrr(2(Class<VR512>) -> 0(Class<VR512>))  [5.04;5.04]
		 Successful, latency: 5.04

-----VPERMWZrrk-----
	VPERMWZrrk(1(Class<VR512>) -> 0(Class<VR512>))  [5.04;5.04]
		 Successful, latency: 5.04
	VPERMWZrrk(3(Class<VR512>) -> 0(Class<VR512>))  [5.04;5.04]
		 Successful, latency: 5.04
	VPERMWZrrk(4(Class<VR512>) -> 0(Class<VR512>))  [5.04;5.04]
		 Successful, latency: 5.04

-----VPERMWZrrkz-----
	VPERMWZrrkz(2(Class<VR512>) -> 0(Class<VR512>))  [5.04;5.04]
		 Successful, latency: 5.04
	VPERMWZrrkz(3(Class<VR512>) -> 0(Class<VR512>))  [5.05;5.05]
		 Successful, latency: 5.05

-----VPEXPANDBZ128rr-----
	VPEXPANDBZ128rr(1(Class<VR128X>) -> 0(Class<VR128X>))  [2.02;2.02]
		 Successful, latency: 2.02

-----VPEXPANDBZ128rrk-----
	VPEXPANDBZ128rrk(1(Class<VR128X>) -> 0(Class<VR128X>))  [2.02;2.02]
		 Successful, latency: 2.02
	VPEXPANDBZ128rrk(3(Class<VR128X>) -> 0(Class<VR128X>))  [2.02;2.02]
		 Successful, latency: 2.02

-----VPEXPANDBZ128rrkz-----
	VPEXPANDBZ128rrkz(2(Class<VR128X>) -> 0(Class<VR128X>))  [2.02;2.02]
		 Successful, latency: 2.02

-----VPEXPANDBZ256rr-----
	VPEXPANDBZ256rr(1(Class<VR256X>) -> 0(Class<VR256X>))  [4.05;4.05]
		 Successful, latency: 4.05

-----VPEXPANDBZ256rrk-----
	VPEXPANDBZ256rrk(1(Class<VR256X>) -> 0(Class<VR256X>))  [4.05;4.05]
		 Successful, latency: 4.05
	VPEXPANDBZ256rrk(3(Class<VR256X>) -> 0(Class<VR256X>))  [4.04;4.04]
		 Successful, latency: 4.04

-----VPEXPANDBZ256rrkz-----
	VPEXPANDBZ256rrkz(2(Class<VR256X>) -> 0(Class<VR256X>))  [4.04;4.04]
		 Successful, latency: 4.04

-----VPEXPANDBZrr-----
	VPEXPANDBZrr(1(Class<VR512>) -> 0(Class<VR512>))  [5.08;5.08]
		 Successful, latency: 5.08

-----VPEXPANDBZrrk-----
	VPEXPANDBZrrk(1(Class<VR512>) -> 0(Class<VR512>))  [5.07;5.07]
		 Successful, latency: 5.07
	VPEXPANDBZrrk(3(Class<VR512>) -> 0(Class<VR512>))  [5.06;5.06]
		 Successful, latency: 5.06

-----VPEXPANDBZrrkz-----
	VPEXPANDBZrrkz(2(Class<VR512>) -> 0(Class<VR512>))  [5.08;5.08]
		 Successful, latency: 5.08

-----VPEXPANDDZ128rr-----
	VPEXPANDDZ128rr(1(Class<VR128X>) -> 0(Class<VR128X>))  [2.02;2.02]
		 Successful, latency: 2.02

-----VPEXPANDDZ128rrk-----
	VPEXPANDDZ128rrk(1(Class<VR128X>) -> 0(Class<VR128X>))  [2.02;2.02]
		 Successful, latency: 2.02
	VPEXPANDDZ128rrk(3(Class<VR128X>) -> 0(Class<VR128X>))  [2.01;2.01]
		 Successful, latency: 2.01

-----VPEXPANDDZ128rrkz-----
	VPEXPANDDZ128rrkz(2(Class<VR128X>) -> 0(Class<VR128X>))  [2.03;2.03]
		 Successful, latency: 2.03

-----VPEXPANDDZ256rr-----
	VPEXPANDDZ256rr(1(Class<VR256X>) -> 0(Class<VR256X>))  [4.04;4.04]
		 Successful, latency: 4.04

-----VPEXPANDDZ256rrk-----
	VPEXPANDDZ256rrk(1(Class<VR256X>) -> 0(Class<VR256X>))  [4.02;4.02]
		 Successful, latency: 4.02
	VPEXPANDDZ256rrk(3(Class<VR256X>) -> 0(Class<VR256X>))  [4.03;4.03]
		 Successful, latency: 4.03

-----VPEXPANDDZ256rrkz-----
	VPEXPANDDZ256rrkz(2(Class<VR256X>) -> 0(Class<VR256X>))  [4.03;4.03]
		 Successful, latency: 4.03

-----VPEXPANDDZrr-----
	VPEXPANDDZrr(1(Class<VR512>) -> 0(Class<VR512>))  [5.07;5.07]
		 Successful, latency: 5.07

-----VPEXPANDDZrrk-----
	VPEXPANDDZrrk(1(Class<VR512>) -> 0(Class<VR512>))  [5.09;5.09]
		 Successful, latency: 5.09
	VPEXPANDDZrrk(3(Class<VR512>) -> 0(Class<VR512>))  [5.07;5.07]
		 Successful, latency: 5.07

-----VPEXPANDDZrrkz-----
	VPEXPANDDZrrkz(2(Class<VR512>) -> 0(Class<VR512>))  [5.05;5.05]
		 Successful, latency: 5.05

-----VPEXPANDQZ128rr-----
	VPEXPANDQZ128rr(1(Class<VR128X>) -> 0(Class<VR128X>))  [2.02;2.02]
		 Successful, latency: 2.02

-----VPEXPANDQZ128rrk-----
	VPEXPANDQZ128rrk(1(Class<VR128X>) -> 0(Class<VR128X>))  [2.01;2.01]
		 Successful, latency: 2.01
	VPEXPANDQZ128rrk(3(Class<VR128X>) -> 0(Class<VR128X>))  [2.02;2.02]
		 Successful, latency: 2.02

-----VPEXPANDQZ128rrkz-----
	VPEXPANDQZ128rrkz(2(Class<VR128X>) -> 0(Class<VR128X>))  [2.01;2.01]
		 Successful, latency: 2.01

-----VPEXPANDQZ256rr-----
	VPEXPANDQZ256rr(1(Class<VR256X>) -> 0(Class<VR256X>))  [4.07;4.07]
		 Successful, latency: 4.07

-----VPEXPANDQZ256rrk-----
	VPEXPANDQZ256rrk(1(Class<VR256X>) -> 0(Class<VR256X>))  [4.03;4.03]
		 Successful, latency: 4.03
	VPEXPANDQZ256rrk(3(Class<VR256X>) -> 0(Class<VR256X>))  [4.05;4.05]
		 Successful, latency: 4.05

-----VPEXPANDQZ256rrkz-----
	VPEXPANDQZ256rrkz(2(Class<VR256X>) -> 0(Class<VR256X>))  [4.03;4.03]
		 Successful, latency: 4.03

-----VPEXPANDQZrr-----
	VPEXPANDQZrr(1(Class<VR512>) -> 0(Class<VR512>))  [5.09;5.09]
		 Successful, latency: 5.09

-----VPEXPANDQZrrk-----
	VPEXPANDQZrrk(1(Class<VR512>) -> 0(Class<VR512>))  [5.11;5.11]
		 Successful, latency: 5.11
	VPEXPANDQZrrk(3(Class<VR512>) -> 0(Class<VR512>))  [5.08;5.08]
		 Successful, latency: 5.08

-----VPEXPANDQZrrkz-----
	VPEXPANDQZrrkz(2(Class<VR512>) -> 0(Class<VR512>))  [5.06;5.06]
		 Successful, latency: 5.06

-----VPEXPANDWZ128rr-----
	VPEXPANDWZ128rr(1(Class<VR128X>) -> 0(Class<VR128X>))  [2.01;2.01]
		 Successful, latency: 2.01

-----VPEXPANDWZ128rrk-----
	VPEXPANDWZ128rrk(1(Class<VR128X>) -> 0(Class<VR128X>))  [2.03;2.03]
		 Successful, latency: 2.03
	VPEXPANDWZ128rrk(3(Class<VR128X>) -> 0(Class<VR128X>))  [2.02;2.02]
		 Successful, latency: 2.02

-----VPEXPANDWZ128rrkz-----
	VPEXPANDWZ128rrkz(2(Class<VR128X>) -> 0(Class<VR128X>))  [2.02;2.02]
		 Successful, latency: 2.02

-----VPEXPANDWZ256rr-----
	VPEXPANDWZ256rr(1(Class<VR256X>) -> 0(Class<VR256X>))  [4.04;4.04]
		 Successful, latency: 4.04

-----VPEXPANDWZ256rrk-----
	VPEXPANDWZ256rrk(1(Class<VR256X>) -> 0(Class<VR256X>))  [4.03;4.03]
		 Successful, latency: 4.03
	VPEXPANDWZ256rrk(3(Class<VR256X>) -> 0(Class<VR256X>))  [4.04;4.04]
		 Successful, latency: 4.04

-----VPEXPANDWZ256rrkz-----
	VPEXPANDWZ256rrkz(2(Class<VR256X>) -> 0(Class<VR256X>))  [4.03;4.03]
		 Successful, latency: 4.03

-----VPEXPANDWZrr-----
	VPEXPANDWZrr(1(Class<VR512>) -> 0(Class<VR512>))  [5.08;5.08]
		 Successful, latency: 5.08

-----VPEXPANDWZrrk-----
	VPEXPANDWZrrk(1(Class<VR512>) -> 0(Class<VR512>))  [5.08;5.08]
		 Successful, latency: 5.08
	VPEXPANDWZrrk(3(Class<VR512>) -> 0(Class<VR512>))  [5.07;5.07]
		 Successful, latency: 5.07

-----VPEXPANDWZrrkz-----
	VPEXPANDWZrrkz(2(Class<VR512>) -> 0(Class<VR512>))  [5.08;5.08]
		 Successful, latency: 5.08

-----VPEXTRBZrri-----
	VPEXTRBZrri(1(Class<VR128X>) -> 0(Class<GR32>))  [3.02;7.07]
		Dependencies:
			VMOVPDI2DIZrr(1(Class<VR128X>) -> 0(Class<GR32>)) 
			VMOVDI2PDIZrr(1(Class<GR32>) -> 0(Class<VR128X>)) 
		Combined result: 8.07 cycles

-----VPEXTRBrri-----
	VPEXTRBrri(1(Class<VR128>) -> 0(Class<GR32>))  [3.01;7.04]
		Dependencies:
			MOVMSKPSrr(1(Class<VR128>) -> 0(Class<GR32>)) 
			VMOVDI2PDIrr(1(Class<GR32>) -> 0(Class<VR128>)) 
		Combined result: 8.04 cycles

-----VPEXTRDZrri-----
	VPEXTRDZrri(1(Class<VR128X>) -> 0(Class<GR32>))  [2.03;6.08]
		Dependencies:
			VMOVPDI2DIZrr(1(Class<VR128X>) -> 0(Class<GR32>)) 
			VMOVDI2PDIZrr(1(Class<GR32>) -> 0(Class<VR128X>)) 
		Combined result: 7.08 cycles

-----VPEXTRDrri-----
	VPEXTRDrri(1(Class<VR128>) -> 0(Class<GR32>))  [2.01;6.05]
		Dependencies:
			MOVMSKPSrr(1(Class<VR128>) -> 0(Class<GR32>)) 
			VMOVDI2PDIrr(1(Class<GR32>) -> 0(Class<VR128>)) 
		Combined result: 7.05 cycles

-----VPEXTRQZrri-----
	VPEXTRQZrri(1(Class<VR128X>) -> 0(Class<GR64>))  [2.01;6.05]
		Dependencies:
			VMOVPQIto64Zrr(1(Class<VR128X>) -> 0(Class<GR64>)) 
			VMOV64toPQIZrr(1(Class<GR64>) -> 0(Class<VR128X>)) 
		Combined result: 7.05 cycles

-----VPEXTRQrri-----
	VPEXTRQrri(1(Class<VR128>) -> 0(Class<GR64>))  [2.01;6.05]
		Dependencies:
			MOVPQIto64rr(1(Class<VR128>) -> 0(Class<GR64>)) 
			VMOV64toPQIrr(1(Class<GR64>) -> 0(Class<VR128>)) 
		Combined result: 7.05 cycles

-----VPEXTRWZrri-----
	VPEXTRWZrri(1(Class<VR128X>) -> 0(Class<GR32>))  [2;6.05]
		Dependencies:
			VMOVPDI2DIZrr(1(Class<VR128X>) -> 0(Class<GR32>)) 
			VMOVDI2PDIZrr(1(Class<GR32>) -> 0(Class<VR128X>)) 
		Combined result: 7.05 cycles

-----VPEXTRWZrri_REV-----
	VPEXTRWZrri_REV(1(Class<VR128X>) -> 0(Class<GR32>))  [2.01;6.07]
		Dependencies:
			VMOVPDI2DIZrr(1(Class<VR128X>) -> 0(Class<GR32>)) 
			VMOVDI2PDIZrr(1(Class<GR32>) -> 0(Class<VR128X>)) 
		Combined result: 7.07 cycles

-----VPEXTRWrri-----
	VPEXTRWrri(1(Class<VR128>) -> 0(Class<GR32>))  [2.01;6.05]
		Dependencies:
			MOVMSKPSrr(1(Class<VR128>) -> 0(Class<GR32>)) 
			VMOVDI2PDIrr(1(Class<GR32>) -> 0(Class<VR128>)) 
		Combined result: 7.05 cycles

-----VPEXTRWrri_REV-----
	VPEXTRWrri_REV(1(Class<VR128>) -> 0(Class<GR32>))  [2.02;6.05]
		Dependencies:
			MOVMSKPSrr(1(Class<VR128>) -> 0(Class<GR32>)) 
			VMOVDI2PDIrr(1(Class<GR32>) -> 0(Class<VR128>)) 
		Combined result: 7.05 cycles

-----VPHADDBDrr-----
	VPHADDBDrr(1(Class<VR128>) -> 0(Class<VR128>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VPHADDBQrr-----
	VPHADDBQrr(1(Class<VR128>) -> 0(Class<VR128>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VPHADDBWrr-----
	VPHADDBWrr(1(Class<VR128>) -> 0(Class<VR128>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VPHADDDQrr-----
	VPHADDDQrr(1(Class<VR128>) -> 0(Class<VR128>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VPHADDDYrr-----
	VPHADDDYrr(1(Class<VR256>) -> 0(Class<VR256>))  [2.03;2.03]
		 Successful, latency: 2.03
	VPHADDDYrr(2(Class<VR256>) -> 0(Class<VR256>))  [2.02;2.02]
		 Successful, latency: 2.02

-----VPHADDDrr-----
	VPHADDDrr(1(Class<VR128>) -> 0(Class<VR128>))  [2.03;2.03]
		 Successful, latency: 2.03
	VPHADDDrr(2(Class<VR128>) -> 0(Class<VR128>))  [2.02;2.02]
		 Successful, latency: 2.02

-----VPHADDSWYrr-----
	VPHADDSWYrr(1(Class<VR256>) -> 0(Class<VR256>))  [3.02;3.02]
		 Successful, latency: 3.02
	VPHADDSWYrr(2(Class<VR256>) -> 0(Class<VR256>))  [3.04;3.04]
		 Successful, latency: 3.04

-----VPHADDSWrr-----
	VPHADDSWrr(1(Class<VR128>) -> 0(Class<VR128>))  [3.02;3.02]
		 Successful, latency: 3.02
	VPHADDSWrr(2(Class<VR128>) -> 0(Class<VR128>))  [3.02;3.02]
		 Successful, latency: 3.02

-----VPHADDUBDrr-----
	VPHADDUBDrr(1(Class<VR128>) -> 0(Class<VR128>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VPHADDUBQrr-----
	VPHADDUBQrr(1(Class<VR128>) -> 0(Class<VR128>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VPHADDUBWrr-----
	VPHADDUBWrr(1(Class<VR128>) -> 0(Class<VR128>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VPHADDUDQrr-----
	VPHADDUDQrr(1(Class<VR128>) -> 0(Class<VR128>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VPHADDUWDrr-----
	VPHADDUWDrr(1(Class<VR128>) -> 0(Class<VR128>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VPHADDUWQrr-----
	VPHADDUWQrr(1(Class<VR128>) -> 0(Class<VR128>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VPHADDWDrr-----
	VPHADDWDrr(1(Class<VR128>) -> 0(Class<VR128>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VPHADDWQrr-----
	VPHADDWQrr(1(Class<VR128>) -> 0(Class<VR128>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VPHADDWYrr-----
	VPHADDWYrr(1(Class<VR256>) -> 0(Class<VR256>))  [2.02;2.02]
		 Successful, latency: 2.02
	VPHADDWYrr(2(Class<VR256>) -> 0(Class<VR256>))  [2.03;2.03]
		 Successful, latency: 2.03

-----VPHADDWrr-----
	VPHADDWrr(1(Class<VR128>) -> 0(Class<VR128>))  [2.02;2.02]
		 Successful, latency: 2.02
	VPHADDWrr(2(Class<VR128>) -> 0(Class<VR128>))  [2.04;2.04]
		 Successful, latency: 2.04

-----VPHMINPOSUWrr-----
	VPHMINPOSUWrr(1(Class<VR128>) -> 0(Class<VR128>))  [3.04;3.04]
		 Successful, latency: 3.04

-----VPHSUBBWrr-----
	VPHSUBBWrr(1(Class<VR128>) -> 0(Class<VR128>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VPHSUBDQrr-----
	VPHSUBDQrr(1(Class<VR128>) -> 0(Class<VR128>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VPHSUBDYrr-----
	VPHSUBDYrr(1(Class<VR256>) -> 0(Class<VR256>))  [2.03;2.03]
		 Successful, latency: 2.03
	VPHSUBDYrr(2(Class<VR256>) -> 0(Class<VR256>))  [2.03;2.03]
		 Successful, latency: 2.03

-----VPHSUBDrr-----
	VPHSUBDrr(1(Class<VR128>) -> 0(Class<VR128>))  [2.01;2.01]
		 Successful, latency: 2.01
	VPHSUBDrr(2(Class<VR128>) -> 0(Class<VR128>))  [2.03;2.03]
		 Successful, latency: 2.03

-----VPHSUBSWYrr-----
	VPHSUBSWYrr(1(Class<VR256>) -> 0(Class<VR256>))  [3.06;3.06]
		 Successful, latency: 3.06
	VPHSUBSWYrr(2(Class<VR256>) -> 0(Class<VR256>))  [3.04;3.04]
		 Successful, latency: 3.04

-----VPHSUBSWrr-----
	VPHSUBSWrr(1(Class<VR128>) -> 0(Class<VR128>))  [3.03;3.03]
		 Successful, latency: 3.03
	VPHSUBSWrr(2(Class<VR128>) -> 0(Class<VR128>))  [3.02;3.02]
		 Successful, latency: 3.02

-----VPHSUBWDrr-----
	VPHSUBWDrr(1(Class<VR128>) -> 0(Class<VR128>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VPHSUBWYrr-----
	VPHSUBWYrr(1(Class<VR256>) -> 0(Class<VR256>))  [2.02;2.02]
		 Successful, latency: 2.02
	VPHSUBWYrr(2(Class<VR256>) -> 0(Class<VR256>))  [2.02;2.02]
		 Successful, latency: 2.02

-----VPHSUBWrr-----
	VPHSUBWrr(1(Class<VR128>) -> 0(Class<VR128>))  [2.05;2.05]
		 Successful, latency: 2.05
	VPHSUBWrr(2(Class<VR128>) -> 0(Class<VR128>))  [2.02;2.02]
		 Successful, latency: 2.02

-----VPINSRBZrri-----
	VPINSRBZrri(1(Class<VR128X>) -> 0(Class<VR128X>))  [2.03;2.03]
		 Successful, latency: 2.03
	VPINSRBZrri(2(Class<GR32>) -> 0(Class<VR128X>))  [3;7.06]
		Dependencies:
			VMOVPDI2DIZrr(1(Class<VR128X>) -> 0(Class<GR32>)) 
			VMOVDI2PDIZrr(1(Class<GR32>) -> 0(Class<VR128X>)) 
		Combined result: 8.05 cycles

-----VPINSRBrri-----
	VPINSRBrri(1(Class<VR128>) -> 0(Class<VR128>))  [2.02;2.02]
		 Successful, latency: 2.02
	VPINSRBrri(2(Class<GR32>) -> 0(Class<VR128>))  [3.02;7.05]
		Dependencies:
			MOVMSKPSrr(1(Class<VR128>) -> 0(Class<GR32>)) 
			VMOVDI2PDIrr(1(Class<GR32>) -> 0(Class<VR128>)) 
		Combined result: 8.08 cycles

-----VPINSRDZrri-----
	VPINSRDZrri(1(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_GENERIC]
		ERROR_GENERIC, this instruction cannot be measured on this platform

-----VPINSRDrri-----
	VPINSRDrri(1(Class<VR128>) -> 0(Class<VR128>))  [1.02;1.02]
		 Successful, latency: 1.02
	VPINSRDrri(2(Class<GR32>) -> 0(Class<VR128>))  [1.99;6.03]
		Dependencies:
			MOVMSKPSrr(1(Class<VR128>) -> 0(Class<GR32>)) 
			VMOVDI2PDIrr(1(Class<GR32>) -> 0(Class<VR128>)) 
		Combined result: 7.05 cycles

-----VPINSRQZrri-----
	VPINSRQZrri(1(Class<VR128X>) -> 0(Class<VR128X>))  [1.09;1.09]
		 Successful, latency: 1.09
	VPINSRQZrri(2(Class<GR64>) -> 0(Class<VR128X>))  [2.02;6.05]
		Dependencies:
			VMOVPQIto64Zrr(1(Class<VR128X>) -> 0(Class<GR64>)) 
			VMOV64toPQIZrr(1(Class<GR64>) -> 0(Class<VR128X>)) 
		Combined result: 7.06 cycles

-----VPINSRQrri-----
	VPINSRQrri(1(Class<VR128>) -> 0(Class<VR128>))  [1.01;1.01]
		 Successful, latency: 1.01
	VPINSRQrri(2(Class<GR64>) -> 0(Class<VR128>))  [2;6.04]
		Dependencies:
			MOVPQIto64rr(1(Class<VR128>) -> 0(Class<GR64>)) 
			VMOV64toPQIrr(1(Class<GR64>) -> 0(Class<VR128>)) 
		Combined result: 7.07 cycles

-----VPINSRWZrri-----
	VPINSRWZrri(1(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_GENERIC]
		ERROR_GENERIC, this instruction cannot be measured on this platform

-----VPINSRWrri-----
	VPINSRWrri(1(Class<VR128>) -> 0(Class<VR128>))  [0.973;0.973]
		 Successful, latency: 0.973
	VPINSRWrri(2(Class<GR32>) -> 0(Class<VR128>))  [1.96;6]
		Dependencies:
			MOVMSKPSrr(1(Class<VR128>) -> 0(Class<GR32>)) 
			VMOVDI2PDIrr(1(Class<GR32>) -> 0(Class<VR128>)) 
		Combined result: 7.02 cycles

-----VPLZCNTDZ128rr-----
	VPLZCNTDZ128rr(1(Class<VR128X>) -> 0(Class<VR128X>))  [2.01;2.01]
		 Successful, latency: 2.01

-----VPLZCNTDZ128rrk-----
	VPLZCNTDZ128rrk(1(Class<VR128X>) -> 0(Class<VR128X>))  [2.02;2.02]
		 Successful, latency: 2.02
	VPLZCNTDZ128rrk(3(Class<VR128X>) -> 0(Class<VR128X>))  [2.02;2.02]
		 Successful, latency: 2.02

-----VPLZCNTDZ128rrkz-----
	VPLZCNTDZ128rrkz(2(Class<VR128X>) -> 0(Class<VR128X>))  [2.02;2.02]
		 Successful, latency: 2.02

-----VPLZCNTDZ256rr-----
	VPLZCNTDZ256rr(1(Class<VR256X>) -> 0(Class<VR256X>))  [2.02;2.02]
		 Successful, latency: 2.02

-----VPLZCNTDZ256rrk-----
	VPLZCNTDZ256rrk(1(Class<VR256X>) -> 0(Class<VR256X>))  [2.02;2.02]
		 Successful, latency: 2.02
	VPLZCNTDZ256rrk(3(Class<VR256X>) -> 0(Class<VR256X>))  [2.02;2.02]
		 Successful, latency: 2.02

-----VPLZCNTDZ256rrkz-----
	VPLZCNTDZ256rrkz(2(Class<VR256X>) -> 0(Class<VR256X>))  [2.04;2.04]
		 Successful, latency: 2.04

-----VPLZCNTDZrr-----
	VPLZCNTDZrr(1(Class<VR512>) -> 0(Class<VR512>))  [2.02;2.02]
		 Successful, latency: 2.02

-----VPLZCNTDZrrk-----
	VPLZCNTDZrrk(1(Class<VR512>) -> 0(Class<VR512>))  [2.02;2.02]
		 Successful, latency: 2.02
	VPLZCNTDZrrk(3(Class<VR512>) -> 0(Class<VR512>))  [2.02;2.02]
		 Successful, latency: 2.02

-----VPLZCNTDZrrkz-----
	VPLZCNTDZrrkz(2(Class<VR512>) -> 0(Class<VR512>))  [2.01;2.01]
		 Successful, latency: 2.01

-----VPLZCNTQZ128rr-----
	VPLZCNTQZ128rr(1(Class<VR128X>) -> 0(Class<VR128X>))  [2.02;2.02]
		 Successful, latency: 2.02

-----VPLZCNTQZ128rrk-----
	VPLZCNTQZ128rrk(1(Class<VR128X>) -> 0(Class<VR128X>))  [2.02;2.02]
		 Successful, latency: 2.02
	VPLZCNTQZ128rrk(3(Class<VR128X>) -> 0(Class<VR128X>))  [2.01;2.01]
		 Successful, latency: 2.01

-----VPLZCNTQZ128rrkz-----
	VPLZCNTQZ128rrkz(2(Class<VR128X>) -> 0(Class<VR128X>))  [2.01;2.01]
		 Successful, latency: 2.01

-----VPLZCNTQZ256rr-----
	VPLZCNTQZ256rr(1(Class<VR256X>) -> 0(Class<VR256X>))  [2.02;2.02]
		 Successful, latency: 2.02

-----VPLZCNTQZ256rrk-----
	VPLZCNTQZ256rrk(1(Class<VR256X>) -> 0(Class<VR256X>))  [2.02;2.02]
		 Successful, latency: 2.02
	VPLZCNTQZ256rrk(3(Class<VR256X>) -> 0(Class<VR256X>))  [2.02;2.02]
		 Successful, latency: 2.02

-----VPLZCNTQZ256rrkz-----
	VPLZCNTQZ256rrkz(2(Class<VR256X>) -> 0(Class<VR256X>))  [2.02;2.02]
		 Successful, latency: 2.02

-----VPLZCNTQZrr-----
	VPLZCNTQZrr(1(Class<VR512>) -> 0(Class<VR512>))  [2.03;2.03]
		 Successful, latency: 2.03

-----VPLZCNTQZrrk-----
	VPLZCNTQZrrk(1(Class<VR512>) -> 0(Class<VR512>))  [2.02;2.02]
		 Successful, latency: 2.02
	VPLZCNTQZrrk(3(Class<VR512>) -> 0(Class<VR512>))  [2.02;2.02]
		 Successful, latency: 2.02

-----VPLZCNTQZrrkz-----
	VPLZCNTQZrrkz(2(Class<VR512>) -> 0(Class<VR512>))  [2.03;2.03]
		 Successful, latency: 2.03

-----VPMACSDDrr-----
	VPMACSDDrr(1(Class<VR128>) -> 0(Class<VR128>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VPMACSDDrr(2(Class<VR128>) -> 0(Class<VR128>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VPMACSDDrr(3(Class<VR128>) -> 0(Class<VR128>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VPMACSDQHrr-----
	VPMACSDQHrr(1(Class<VR128>) -> 0(Class<VR128>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VPMACSDQHrr(2(Class<VR128>) -> 0(Class<VR128>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VPMACSDQHrr(3(Class<VR128>) -> 0(Class<VR128>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VPMACSDQLrr-----
	VPMACSDQLrr(1(Class<VR128>) -> 0(Class<VR128>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VPMACSDQLrr(2(Class<VR128>) -> 0(Class<VR128>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VPMACSDQLrr(3(Class<VR128>) -> 0(Class<VR128>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VPMACSSDDrr-----
	VPMACSSDDrr(1(Class<VR128>) -> 0(Class<VR128>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VPMACSSDDrr(2(Class<VR128>) -> 0(Class<VR128>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VPMACSSDDrr(3(Class<VR128>) -> 0(Class<VR128>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VPMACSSDQHrr-----
	VPMACSSDQHrr(1(Class<VR128>) -> 0(Class<VR128>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VPMACSSDQHrr(2(Class<VR128>) -> 0(Class<VR128>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VPMACSSDQHrr(3(Class<VR128>) -> 0(Class<VR128>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VPMACSSDQLrr-----
	VPMACSSDQLrr(1(Class<VR128>) -> 0(Class<VR128>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VPMACSSDQLrr(2(Class<VR128>) -> 0(Class<VR128>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VPMACSSDQLrr(3(Class<VR128>) -> 0(Class<VR128>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VPMACSSWDrr-----
	VPMACSSWDrr(1(Class<VR128>) -> 0(Class<VR128>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VPMACSSWDrr(2(Class<VR128>) -> 0(Class<VR128>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VPMACSSWDrr(3(Class<VR128>) -> 0(Class<VR128>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VPMACSSWWrr-----
	VPMACSSWWrr(1(Class<VR128>) -> 0(Class<VR128>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VPMACSSWWrr(2(Class<VR128>) -> 0(Class<VR128>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VPMACSSWWrr(3(Class<VR128>) -> 0(Class<VR128>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VPMACSWDrr-----
	VPMACSWDrr(1(Class<VR128>) -> 0(Class<VR128>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VPMACSWDrr(2(Class<VR128>) -> 0(Class<VR128>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VPMACSWDrr(3(Class<VR128>) -> 0(Class<VR128>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VPMACSWWrr-----
	VPMACSWWrr(1(Class<VR128>) -> 0(Class<VR128>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VPMACSWWrr(2(Class<VR128>) -> 0(Class<VR128>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VPMACSWWrr(3(Class<VR128>) -> 0(Class<VR128>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VPMADCSSWDrr-----
	VPMADCSSWDrr(1(Class<VR128>) -> 0(Class<VR128>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VPMADCSSWDrr(2(Class<VR128>) -> 0(Class<VR128>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VPMADCSSWDrr(3(Class<VR128>) -> 0(Class<VR128>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VPMADCSWDrr-----
	VPMADCSWDrr(1(Class<VR128>) -> 0(Class<VR128>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VPMADCSWDrr(2(Class<VR128>) -> 0(Class<VR128>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VPMADCSWDrr(3(Class<VR128>) -> 0(Class<VR128>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VPMADD52HUQYrr-----
	VPMADD52HUQYrr(1(Class<VR256>) -> 0(Class<VR256>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VPMADD52HUQYrr(2(Class<VR256>) -> 0(Class<VR256>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VPMADD52HUQYrr(3(Class<VR256>) -> 0(Class<VR256>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VPMADD52HUQZ128r-----
	VPMADD52HUQZ128r(1(Class<VR128X>) -> 0(Class<VR128X>))  [4.04;4.04]
		 Successful, latency: 4.04
	VPMADD52HUQZ128r(2(Class<VR128X>) -> 0(Class<VR128X>))  [4.05;4.05]
		 Successful, latency: 4.05
	VPMADD52HUQZ128r(3(Class<VR128X>) -> 0(Class<VR128X>))  [4.04;4.04]
		 Successful, latency: 4.04

-----VPMADD52HUQZ128rk-----
	VPMADD52HUQZ128rk(1(Class<VR128X>) -> 0(Class<VR128X>))  [4.03;4.03]
		 Successful, latency: 4.03
	VPMADD52HUQZ128rk(3(Class<VR128X>) -> 0(Class<VR128X>))  [4.03;4.03]
		 Successful, latency: 4.03
	VPMADD52HUQZ128rk(4(Class<VR128X>) -> 0(Class<VR128X>))  [4.02;4.02]
		 Successful, latency: 4.02

-----VPMADD52HUQZ128rkz-----
	VPMADD52HUQZ128rkz(1(Class<VR128X>) -> 0(Class<VR128X>))  [4.03;4.03]
		 Successful, latency: 4.03
	VPMADD52HUQZ128rkz(3(Class<VR128X>) -> 0(Class<VR128X>))  [4.04;4.04]
		 Successful, latency: 4.04
	VPMADD52HUQZ128rkz(4(Class<VR128X>) -> 0(Class<VR128X>))  [4.04;4.04]
		 Successful, latency: 4.04

-----VPMADD52HUQZ256r-----
	VPMADD52HUQZ256r(1(Class<VR256X>) -> 0(Class<VR256X>))  [4.02;4.02]
		 Successful, latency: 4.02
	VPMADD52HUQZ256r(2(Class<VR256X>) -> 0(Class<VR256X>))  [4.03;4.03]
		 Successful, latency: 4.03
	VPMADD52HUQZ256r(3(Class<VR256X>) -> 0(Class<VR256X>))  [4.03;4.03]
		 Successful, latency: 4.03

-----VPMADD52HUQZ256rk-----
	VPMADD52HUQZ256rk(1(Class<VR256X>) -> 0(Class<VR256X>))  [4.07;4.07]
		 Successful, latency: 4.07
	VPMADD52HUQZ256rk(3(Class<VR256X>) -> 0(Class<VR256X>))  [4.03;4.03]
		 Successful, latency: 4.03
	VPMADD52HUQZ256rk(4(Class<VR256X>) -> 0(Class<VR256X>))  [4.03;4.03]
		 Successful, latency: 4.03

-----VPMADD52HUQZ256rkz-----
	VPMADD52HUQZ256rkz(1(Class<VR256X>) -> 0(Class<VR256X>))  [4.02;4.02]
		 Successful, latency: 4.02
	VPMADD52HUQZ256rkz(3(Class<VR256X>) -> 0(Class<VR256X>))  [4.04;4.04]
		 Successful, latency: 4.04
	VPMADD52HUQZ256rkz(4(Class<VR256X>) -> 0(Class<VR256X>))  [4.05;4.05]
		 Successful, latency: 4.05

-----VPMADD52HUQZr-----
	VPMADD52HUQZr(1(Class<VR512>) -> 0(Class<VR512>))  [4.03;4.03]
		 Successful, latency: 4.03
	VPMADD52HUQZr(2(Class<VR512>) -> 0(Class<VR512>))  [4.04;4.04]
		 Successful, latency: 4.04
	VPMADD52HUQZr(3(Class<VR512>) -> 0(Class<VR512>))  [4.05;4.05]
		 Successful, latency: 4.05

-----VPMADD52HUQZrk-----
	VPMADD52HUQZrk(1(Class<VR512>) -> 0(Class<VR512>))  [4.05;4.05]
		 Successful, latency: 4.05
	VPMADD52HUQZrk(3(Class<VR512>) -> 0(Class<VR512>))  [4.04;4.04]
		 Successful, latency: 4.04
	VPMADD52HUQZrk(4(Class<VR512>) -> 0(Class<VR512>))  [4.04;4.04]
		 Successful, latency: 4.04

-----VPMADD52HUQZrkz-----
	VPMADD52HUQZrkz(1(Class<VR512>) -> 0(Class<VR512>))  [4.05;4.05]
		 Successful, latency: 4.05
	VPMADD52HUQZrkz(3(Class<VR512>) -> 0(Class<VR512>))  [4.04;4.04]
		 Successful, latency: 4.04
	VPMADD52HUQZrkz(4(Class<VR512>) -> 0(Class<VR512>))  [4.03;4.03]
		 Successful, latency: 4.03

-----VPMADD52HUQrr-----
	VPMADD52HUQrr(1(Class<VR128>) -> 0(Class<VR128>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VPMADD52HUQrr(2(Class<VR128>) -> 0(Class<VR128>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VPMADD52HUQrr(3(Class<VR128>) -> 0(Class<VR128>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VPMADD52LUQYrr-----
	VPMADD52LUQYrr(1(Class<VR256>) -> 0(Class<VR256>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VPMADD52LUQYrr(2(Class<VR256>) -> 0(Class<VR256>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VPMADD52LUQYrr(3(Class<VR256>) -> 0(Class<VR256>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VPMADD52LUQZ128r-----
	VPMADD52LUQZ128r(1(Class<VR128X>) -> 0(Class<VR128X>))  [4.02;4.02]
		 Successful, latency: 4.02
	VPMADD52LUQZ128r(2(Class<VR128X>) -> 0(Class<VR128X>))  [4.03;4.03]
		 Successful, latency: 4.03
	VPMADD52LUQZ128r(3(Class<VR128X>) -> 0(Class<VR128X>))  [4.04;4.04]
		 Successful, latency: 4.04

-----VPMADD52LUQZ128rk-----
	VPMADD52LUQZ128rk(1(Class<VR128X>) -> 0(Class<VR128X>))  [4.03;4.03]
		 Successful, latency: 4.03
	VPMADD52LUQZ128rk(3(Class<VR128X>) -> 0(Class<VR128X>))  [4.04;4.04]
		 Successful, latency: 4.04
	VPMADD52LUQZ128rk(4(Class<VR128X>) -> 0(Class<VR128X>))  [4.04;4.04]
		 Successful, latency: 4.04

-----VPMADD52LUQZ128rkz-----
	VPMADD52LUQZ128rkz(1(Class<VR128X>) -> 0(Class<VR128X>))  [4.03;4.03]
		 Successful, latency: 4.03
	VPMADD52LUQZ128rkz(3(Class<VR128X>) -> 0(Class<VR128X>))  [4.03;4.03]
		 Successful, latency: 4.03
	VPMADD52LUQZ128rkz(4(Class<VR128X>) -> 0(Class<VR128X>))  [4.07;4.07]
		 Successful, latency: 4.07

-----VPMADD52LUQZ256r-----
	VPMADD52LUQZ256r(1(Class<VR256X>) -> 0(Class<VR256X>))  [4.02;4.02]
		 Successful, latency: 4.02
	VPMADD52LUQZ256r(2(Class<VR256X>) -> 0(Class<VR256X>))  [4.06;4.06]
		 Successful, latency: 4.06
	VPMADD52LUQZ256r(3(Class<VR256X>) -> 0(Class<VR256X>))  [4.01;4.01]
		 Successful, latency: 4.01

-----VPMADD52LUQZ256rk-----
	VPMADD52LUQZ256rk(1(Class<VR256X>) -> 0(Class<VR256X>))  [4.03;4.03]
		 Successful, latency: 4.03
	VPMADD52LUQZ256rk(3(Class<VR256X>) -> 0(Class<VR256X>))  [4.05;4.05]
		 Successful, latency: 4.05
	VPMADD52LUQZ256rk(4(Class<VR256X>) -> 0(Class<VR256X>))  [4.03;4.03]
		 Successful, latency: 4.03

-----VPMADD52LUQZ256rkz-----
	VPMADD52LUQZ256rkz(1(Class<VR256X>) -> 0(Class<VR256X>))  [4.04;4.04]
		 Successful, latency: 4.04
	VPMADD52LUQZ256rkz(3(Class<VR256X>) -> 0(Class<VR256X>))  [4.03;4.03]
		 Successful, latency: 4.03
	VPMADD52LUQZ256rkz(4(Class<VR256X>) -> 0(Class<VR256X>))  [4.07;4.07]
		 Successful, latency: 4.07

-----VPMADD52LUQZr-----
	VPMADD52LUQZr(1(Class<VR512>) -> 0(Class<VR512>))  [4.03;4.03]
		 Successful, latency: 4.03
	VPMADD52LUQZr(2(Class<VR512>) -> 0(Class<VR512>))  [4.04;4.04]
		 Successful, latency: 4.04
	VPMADD52LUQZr(3(Class<VR512>) -> 0(Class<VR512>))  [4.06;4.06]
		 Successful, latency: 4.06

-----VPMADD52LUQZrk-----
	VPMADD52LUQZrk(1(Class<VR512>) -> 0(Class<VR512>))  [4.03;4.03]
		 Successful, latency: 4.03
	VPMADD52LUQZrk(3(Class<VR512>) -> 0(Class<VR512>))  [4.05;4.05]
		 Successful, latency: 4.05
	VPMADD52LUQZrk(4(Class<VR512>) -> 0(Class<VR512>))  [4.03;4.03]
		 Successful, latency: 4.03

-----VPMADD52LUQZrkz-----
	VPMADD52LUQZrkz(1(Class<VR512>) -> 0(Class<VR512>))  [4.04;4.04]
		 Successful, latency: 4.04
	VPMADD52LUQZrkz(3(Class<VR512>) -> 0(Class<VR512>))  [4.03;4.03]
		 Successful, latency: 4.03
	VPMADD52LUQZrkz(4(Class<VR512>) -> 0(Class<VR512>))  [4.04;4.04]
		 Successful, latency: 4.04

-----VPMADD52LUQrr-----
	VPMADD52LUQrr(1(Class<VR128>) -> 0(Class<VR128>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VPMADD52LUQrr(2(Class<VR128>) -> 0(Class<VR128>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VPMADD52LUQrr(3(Class<VR128>) -> 0(Class<VR128>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VPMADDUBSWYrr-----
	VPMADDUBSWYrr(1(Class<VR256>) -> 0(Class<VR256>))  [3.02;3.02]
		 Successful, latency: 3.02
	VPMADDUBSWYrr(2(Class<VR256>) -> 0(Class<VR256>))  [3.05;3.05]
		 Successful, latency: 3.05

-----VPMADDUBSWZ128rr-----
	VPMADDUBSWZ128rr(1(Class<VR128X>) -> 0(Class<VR128X>))  [3.04;3.04]
		 Successful, latency: 3.04
	VPMADDUBSWZ128rr(2(Class<VR128X>) -> 0(Class<VR128X>))  [3.04;3.04]
		 Successful, latency: 3.04

-----VPMADDUBSWZ128rrk-----
	VPMADDUBSWZ128rrk(1(Class<VR128X>) -> 0(Class<VR128X>))  [3.02;3.02]
		 Successful, latency: 3.02
	VPMADDUBSWZ128rrk(3(Class<VR128X>) -> 0(Class<VR128X>))  [3.04;3.04]
		 Successful, latency: 3.04
	VPMADDUBSWZ128rrk(4(Class<VR128X>) -> 0(Class<VR128X>))  [3.02;3.02]
		 Successful, latency: 3.02

-----VPMADDUBSWZ128rrkz-----
	VPMADDUBSWZ128rrkz(2(Class<VR128X>) -> 0(Class<VR128X>))  [3.02;3.02]
		 Successful, latency: 3.02
	VPMADDUBSWZ128rrkz(3(Class<VR128X>) -> 0(Class<VR128X>))  [3.02;3.02]
		 Successful, latency: 3.02

-----VPMADDUBSWZ256rr-----
	VPMADDUBSWZ256rr(1(Class<VR256X>) -> 0(Class<VR256X>))  [3.04;3.04]
		 Successful, latency: 3.04
	VPMADDUBSWZ256rr(2(Class<VR256X>) -> 0(Class<VR256X>))  [3.05;3.05]
		 Successful, latency: 3.05

-----VPMADDUBSWZ256rrk-----
	VPMADDUBSWZ256rrk(1(Class<VR256X>) -> 0(Class<VR256X>))  [3.04;3.04]
		 Successful, latency: 3.04
	VPMADDUBSWZ256rrk(3(Class<VR256X>) -> 0(Class<VR256X>))  [3.05;3.05]
		 Successful, latency: 3.05
	VPMADDUBSWZ256rrk(4(Class<VR256X>) -> 0(Class<VR256X>))  [3.02;3.02]
		 Successful, latency: 3.02

-----VPMADDUBSWZ256rrkz-----
	VPMADDUBSWZ256rrkz(2(Class<VR256X>) -> 0(Class<VR256X>))  [3.03;3.03]
		 Successful, latency: 3.03
	VPMADDUBSWZ256rrkz(3(Class<VR256X>) -> 0(Class<VR256X>))  [3.02;3.02]
		 Successful, latency: 3.02

-----VPMADDUBSWZrr-----
	VPMADDUBSWZrr(1(Class<VR512>) -> 0(Class<VR512>))  [3.03;3.03]
		 Successful, latency: 3.03
	VPMADDUBSWZrr(2(Class<VR512>) -> 0(Class<VR512>))  [3.03;3.03]
		 Successful, latency: 3.03

-----VPMADDUBSWZrrk-----
	VPMADDUBSWZrrk(1(Class<VR512>) -> 0(Class<VR512>))  [3.04;3.04]
		 Successful, latency: 3.04
	VPMADDUBSWZrrk(3(Class<VR512>) -> 0(Class<VR512>))  [3.04;3.04]
		 Successful, latency: 3.04
	VPMADDUBSWZrrk(4(Class<VR512>) -> 0(Class<VR512>))  [3.02;3.02]
		 Successful, latency: 3.02

-----VPMADDUBSWZrrkz-----
	VPMADDUBSWZrrkz(2(Class<VR512>) -> 0(Class<VR512>))  [3.03;3.03]
		 Successful, latency: 3.03
	VPMADDUBSWZrrkz(3(Class<VR512>) -> 0(Class<VR512>))  [3.03;3.03]
		 Successful, latency: 3.03

-----VPMADDUBSWrr-----
	VPMADDUBSWrr(1(Class<VR128>) -> 0(Class<VR128>))  [3.03;3.03]
		 Successful, latency: 3.03
	VPMADDUBSWrr(2(Class<VR128>) -> 0(Class<VR128>))  [3.02;3.02]
		 Successful, latency: 3.02

-----VPMADDWDYrr-----
	VPMADDWDYrr(1(Class<VR256>) -> 0(Class<VR256>))  [3.04;3.04]
		 Successful, latency: 3.04
	VPMADDWDYrr(2(Class<VR256>) -> 0(Class<VR256>))  [3.06;3.06]
		 Successful, latency: 3.06

-----VPMADDWDZ128rr-----
	VPMADDWDZ128rr(1(Class<VR128X>) -> 0(Class<VR128X>))  [3.01;3.01]
		 Successful, latency: 3.01
	VPMADDWDZ128rr(2(Class<VR128X>) -> 0(Class<VR128X>))  [3.02;3.02]
		 Successful, latency: 3.02

-----VPMADDWDZ128rrk-----
	VPMADDWDZ128rrk(1(Class<VR128X>) -> 0(Class<VR128X>))  [3.05;3.05]
		 Successful, latency: 3.05
	VPMADDWDZ128rrk(3(Class<VR128X>) -> 0(Class<VR128X>))  [3.02;3.02]
		 Successful, latency: 3.02
	VPMADDWDZ128rrk(4(Class<VR128X>) -> 0(Class<VR128X>))  [3.03;3.03]
		 Successful, latency: 3.03

-----VPMADDWDZ128rrkz-----
	VPMADDWDZ128rrkz(2(Class<VR128X>) -> 0(Class<VR128X>))  [3.03;3.03]
		 Successful, latency: 3.03
	VPMADDWDZ128rrkz(3(Class<VR128X>) -> 0(Class<VR128X>))  [3.04;3.04]
		 Successful, latency: 3.04

-----VPMADDWDZ256rr-----
	VPMADDWDZ256rr(1(Class<VR256X>) -> 0(Class<VR256X>))  [3.09;3.09]
		 Successful, latency: 3.09
	VPMADDWDZ256rr(2(Class<VR256X>) -> 0(Class<VR256X>))  [3.02;3.02]
		 Successful, latency: 3.02

-----VPMADDWDZ256rrk-----
	VPMADDWDZ256rrk(1(Class<VR256X>) -> 0(Class<VR256X>))  [3.05;3.05]
		 Successful, latency: 3.05
	VPMADDWDZ256rrk(3(Class<VR256X>) -> 0(Class<VR256X>))  [3.04;3.04]
		 Successful, latency: 3.04
	VPMADDWDZ256rrk(4(Class<VR256X>) -> 0(Class<VR256X>))  [3.05;3.05]
		 Successful, latency: 3.05

-----VPMADDWDZ256rrkz-----
	VPMADDWDZ256rrkz(2(Class<VR256X>) -> 0(Class<VR256X>))  [3.06;3.06]
		 Successful, latency: 3.06
	VPMADDWDZ256rrkz(3(Class<VR256X>) -> 0(Class<VR256X>))  [3.04;3.04]
		 Successful, latency: 3.04

-----VPMADDWDZrr-----
	VPMADDWDZrr(1(Class<VR512>) -> 0(Class<VR512>))  [3.05;3.05]
		 Successful, latency: 3.05
	VPMADDWDZrr(2(Class<VR512>) -> 0(Class<VR512>))  [3.03;3.03]
		 Successful, latency: 3.03

-----VPMADDWDZrrk-----
	VPMADDWDZrrk(1(Class<VR512>) -> 0(Class<VR512>))  [3.06;3.06]
		 Successful, latency: 3.06
	VPMADDWDZrrk(3(Class<VR512>) -> 0(Class<VR512>))  [3.05;3.05]
		 Successful, latency: 3.05
	VPMADDWDZrrk(4(Class<VR512>) -> 0(Class<VR512>))  [3.02;3.02]
		 Successful, latency: 3.02

-----VPMADDWDZrrkz-----
	VPMADDWDZrrkz(2(Class<VR512>) -> 0(Class<VR512>))  [3.03;3.03]
		 Successful, latency: 3.03
	VPMADDWDZrrkz(3(Class<VR512>) -> 0(Class<VR512>))  [3.04;3.04]
		 Successful, latency: 3.04

-----VPMADDWDrr-----
	VPMADDWDrr(1(Class<VR128>) -> 0(Class<VR128>))  [3.05;3.05]
		 Successful, latency: 3.05
	VPMADDWDrr(2(Class<VR128>) -> 0(Class<VR128>))  [3.03;3.03]
		 Successful, latency: 3.03

-----VPMAXSBYrr-----
	VPMAXSBYrr(1(Class<VR256>) -> 0(Class<VR256>))  [1.01;1.01]
		 Successful, latency: 1.01
	VPMAXSBYrr(2(Class<VR256>) -> 0(Class<VR256>))  [1;1]
		 Successful, latency: 1

-----VPMAXSBZ128rr-----
	VPMAXSBZ128rr(1(Class<VR128X>) -> 0(Class<VR128X>))  [1.01;1.01]
		 Successful, latency: 1.01
	VPMAXSBZ128rr(2(Class<VR128X>) -> 0(Class<VR128X>))  [1.02;1.02]
		 Successful, latency: 1.02

-----VPMAXSBZ128rrk-----
	VPMAXSBZ128rrk(1(Class<VR128X>) -> 0(Class<VR128X>))  [1.02;1.02]
		 Successful, latency: 1.02
	VPMAXSBZ128rrk(3(Class<VR128X>) -> 0(Class<VR128X>))  [1;1]
		 Successful, latency: 1
	VPMAXSBZ128rrk(4(Class<VR128X>) -> 0(Class<VR128X>))  [1.02;1.02]
		 Successful, latency: 1.02

-----VPMAXSBZ128rrkz-----
	VPMAXSBZ128rrkz(2(Class<VR128X>) -> 0(Class<VR128X>))  [1.02;1.02]
		 Successful, latency: 1.02
	VPMAXSBZ128rrkz(3(Class<VR128X>) -> 0(Class<VR128X>))  [1.01;1.01]
		 Successful, latency: 1.01

-----VPMAXSBZ256rr-----
	VPMAXSBZ256rr(1(Class<VR256X>) -> 0(Class<VR256X>))  [0.996;0.996]
		 Successful, latency: 0.996
	VPMAXSBZ256rr(2(Class<VR256X>) -> 0(Class<VR256X>))  [1.02;1.02]
		 Successful, latency: 1.02

-----VPMAXSBZ256rrk-----
	VPMAXSBZ256rrk(1(Class<VR256X>) -> 0(Class<VR256X>))  [1.01;1.01]
		 Successful, latency: 1.01
	VPMAXSBZ256rrk(3(Class<VR256X>) -> 0(Class<VR256X>))  [1.02;1.02]
		 Successful, latency: 1.02
	VPMAXSBZ256rrk(4(Class<VR256X>) -> 0(Class<VR256X>))  [1.01;1.01]
		 Successful, latency: 1.01

-----VPMAXSBZ256rrkz-----
	VPMAXSBZ256rrkz(2(Class<VR256X>) -> 0(Class<VR256X>))  [1.01;1.01]
		 Successful, latency: 1.01
	VPMAXSBZ256rrkz(3(Class<VR256X>) -> 0(Class<VR256X>))  [1.01;1.01]
		 Successful, latency: 1.01

-----VPMAXSBZrr-----
	VPMAXSBZrr(1(Class<VR512>) -> 0(Class<VR512>))  [1.02;1.02]
		 Successful, latency: 1.02
	VPMAXSBZrr(2(Class<VR512>) -> 0(Class<VR512>))  [1.01;1.01]
		 Successful, latency: 1.01

-----VPMAXSBZrrk-----
	VPMAXSBZrrk(1(Class<VR512>) -> 0(Class<VR512>))  [1;1]
		 Successful, latency: 1
	VPMAXSBZrrk(3(Class<VR512>) -> 0(Class<VR512>))  [1.02;1.02]
		 Successful, latency: 1.02
	VPMAXSBZrrk(4(Class<VR512>) -> 0(Class<VR512>))  [1.01;1.01]
		 Successful, latency: 1.01

-----VPMAXSBZrrkz-----
	VPMAXSBZrrkz(2(Class<VR512>) -> 0(Class<VR512>))  [1.01;1.01]
		 Successful, latency: 1.01
	VPMAXSBZrrkz(3(Class<VR512>) -> 0(Class<VR512>))  [1.02;1.02]
		 Successful, latency: 1.02

-----VPMAXSBrr-----
	VPMAXSBrr(1(Class<VR128>) -> 0(Class<VR128>))  [1.01;1.01]
		 Successful, latency: 1.01
	VPMAXSBrr(2(Class<VR128>) -> 0(Class<VR128>))  [0.999;0.999]
		 Successful, latency: 0.999

-----VPMAXSDYrr-----
	VPMAXSDYrr(1(Class<VR256>) -> 0(Class<VR256>))  [1.01;1.01]
		 Successful, latency: 1.01
	VPMAXSDYrr(2(Class<VR256>) -> 0(Class<VR256>))  [1.01;1.01]
		 Successful, latency: 1.01

-----VPMAXSDZ128rr-----
	VPMAXSDZ128rr(1(Class<VR128X>) -> 0(Class<VR128X>))  [1.01;1.01]
		 Successful, latency: 1.01
	VPMAXSDZ128rr(2(Class<VR128X>) -> 0(Class<VR128X>))  [1.01;1.01]
		 Successful, latency: 1.01

-----VPMAXSDZ128rrk-----
	VPMAXSDZ128rrk(1(Class<VR128X>) -> 0(Class<VR128X>))  [0.999;0.999]
		 Successful, latency: 0.999
	VPMAXSDZ128rrk(3(Class<VR128X>) -> 0(Class<VR128X>))  [1.01;1.01]
		 Successful, latency: 1.01
	VPMAXSDZ128rrk(4(Class<VR128X>) -> 0(Class<VR128X>))  [0.999;0.999]
		 Successful, latency: 0.999

-----VPMAXSDZ128rrkz-----
	VPMAXSDZ128rrkz(2(Class<VR128X>) -> 0(Class<VR128X>))  [1.01;1.01]
		 Successful, latency: 1.01
	VPMAXSDZ128rrkz(3(Class<VR128X>) -> 0(Class<VR128X>))  [0.999;0.999]
		 Successful, latency: 0.999

-----VPMAXSDZ256rr-----
	VPMAXSDZ256rr(1(Class<VR256X>) -> 0(Class<VR256X>))  [1.01;1.01]
		 Successful, latency: 1.01
	VPMAXSDZ256rr(2(Class<VR256X>) -> 0(Class<VR256X>))  [1.01;1.01]
		 Successful, latency: 1.01

-----VPMAXSDZ256rrk-----
	VPMAXSDZ256rrk(1(Class<VR256X>) -> 0(Class<VR256X>))  [1.02;1.02]
		 Successful, latency: 1.02
	VPMAXSDZ256rrk(3(Class<VR256X>) -> 0(Class<VR256X>))  [1.01;1.01]
		 Successful, latency: 1.01
	VPMAXSDZ256rrk(4(Class<VR256X>) -> 0(Class<VR256X>))  [1.01;1.01]
		 Successful, latency: 1.01

-----VPMAXSDZ256rrkz-----
	VPMAXSDZ256rrkz(2(Class<VR256X>) -> 0(Class<VR256X>))  [1;1]
		 Successful, latency: 1
	VPMAXSDZ256rrkz(3(Class<VR256X>) -> 0(Class<VR256X>))  [1;1]
		 Successful, latency: 1

-----VPMAXSDZrr-----
	VPMAXSDZrr(1(Class<VR512>) -> 0(Class<VR512>))  [1.01;1.01]
		 Successful, latency: 1.01
	VPMAXSDZrr(2(Class<VR512>) -> 0(Class<VR512>))  [1;1]
		 Successful, latency: 1

-----VPMAXSDZrrk-----
	VPMAXSDZrrk(1(Class<VR512>) -> 0(Class<VR512>))  [1;1]
		 Successful, latency: 1
	VPMAXSDZrrk(3(Class<VR512>) -> 0(Class<VR512>))  [1;1]
		 Successful, latency: 1
	VPMAXSDZrrk(4(Class<VR512>) -> 0(Class<VR512>))  [1;1]
		 Successful, latency: 1

-----VPMAXSDZrrkz-----
	VPMAXSDZrrkz(2(Class<VR512>) -> 0(Class<VR512>))  [1.01;1.01]
		 Successful, latency: 1.01
	VPMAXSDZrrkz(3(Class<VR512>) -> 0(Class<VR512>))  [1;1]
		 Successful, latency: 1

-----VPMAXSDrr-----
	VPMAXSDrr(1(Class<VR128>) -> 0(Class<VR128>))  [1.02;1.02]
		 Successful, latency: 1.02
	VPMAXSDrr(2(Class<VR128>) -> 0(Class<VR128>))  [1.01;1.01]
		 Successful, latency: 1.01

-----VPMAXSQZ128rr-----
	VPMAXSQZ128rr(1(Class<VR128X>) -> 0(Class<VR128X>))  [2.01;2.01]
		 Successful, latency: 2.01
	VPMAXSQZ128rr(2(Class<VR128X>) -> 0(Class<VR128X>))  [2.04;2.04]
		 Successful, latency: 2.04

-----VPMAXSQZ128rrk-----
	VPMAXSQZ128rrk(1(Class<VR128X>) -> 0(Class<VR128X>))  [2.02;2.02]
		 Successful, latency: 2.02
	VPMAXSQZ128rrk(3(Class<VR128X>) -> 0(Class<VR128X>))  [2.02;2.02]
		 Successful, latency: 2.02
	VPMAXSQZ128rrk(4(Class<VR128X>) -> 0(Class<VR128X>))  [2.02;2.02]
		 Successful, latency: 2.02

-----VPMAXSQZ128rrkz-----
	VPMAXSQZ128rrkz(2(Class<VR128X>) -> 0(Class<VR128X>))  [2.02;2.02]
		 Successful, latency: 2.02
	VPMAXSQZ128rrkz(3(Class<VR128X>) -> 0(Class<VR128X>))  [2.03;2.03]
		 Successful, latency: 2.03

-----VPMAXSQZ256rr-----
	VPMAXSQZ256rr(1(Class<VR256X>) -> 0(Class<VR256X>))  [2.02;2.02]
		 Successful, latency: 2.02
	VPMAXSQZ256rr(2(Class<VR256X>) -> 0(Class<VR256X>))  [2.02;2.02]
		 Successful, latency: 2.02

-----VPMAXSQZ256rrk-----
	VPMAXSQZ256rrk(1(Class<VR256X>) -> 0(Class<VR256X>))  [2.03;2.03]
		 Successful, latency: 2.03
	VPMAXSQZ256rrk(3(Class<VR256X>) -> 0(Class<VR256X>))  [2.01;2.01]
		 Successful, latency: 2.01
	VPMAXSQZ256rrk(4(Class<VR256X>) -> 0(Class<VR256X>))  [2.02;2.02]
		 Successful, latency: 2.02

-----VPMAXSQZ256rrkz-----
	VPMAXSQZ256rrkz(2(Class<VR256X>) -> 0(Class<VR256X>))  [2.02;2.02]
		 Successful, latency: 2.02
	VPMAXSQZ256rrkz(3(Class<VR256X>) -> 0(Class<VR256X>))  [2.02;2.02]
		 Successful, latency: 2.02

-----VPMAXSQZrr-----
	VPMAXSQZrr(1(Class<VR512>) -> 0(Class<VR512>))  [2.02;2.02]
		 Successful, latency: 2.02
	VPMAXSQZrr(2(Class<VR512>) -> 0(Class<VR512>))  [2.01;2.01]
		 Successful, latency: 2.01

-----VPMAXSQZrrk-----
	VPMAXSQZrrk(1(Class<VR512>) -> 0(Class<VR512>))  [2.02;2.02]
		 Successful, latency: 2.02
	VPMAXSQZrrk(3(Class<VR512>) -> 0(Class<VR512>))  [2;2]
		 Successful, latency: 2
	VPMAXSQZrrk(4(Class<VR512>) -> 0(Class<VR512>))  [2.02;2.02]
		 Successful, latency: 2.02

-----VPMAXSQZrrkz-----
	VPMAXSQZrrkz(2(Class<VR512>) -> 0(Class<VR512>))  [2.02;2.02]
		 Successful, latency: 2.02
	VPMAXSQZrrkz(3(Class<VR512>) -> 0(Class<VR512>))  [2.01;2.01]
		 Successful, latency: 2.01

-----VPMAXSWYrr-----
	VPMAXSWYrr(1(Class<VR256>) -> 0(Class<VR256>))  [1;1]
		 Successful, latency: 1
	VPMAXSWYrr(2(Class<VR256>) -> 0(Class<VR256>))  [1;1]
		 Successful, latency: 1

-----VPMAXSWZ128rr-----
	VPMAXSWZ128rr(1(Class<VR128X>) -> 0(Class<VR128X>))  [1.01;1.01]
		 Successful, latency: 1.01
	VPMAXSWZ128rr(2(Class<VR128X>) -> 0(Class<VR128X>))  [1.01;1.01]
		 Successful, latency: 1.01

-----VPMAXSWZ128rrk-----
	VPMAXSWZ128rrk(1(Class<VR128X>) -> 0(Class<VR128X>))  [1;1]
		 Successful, latency: 1
	VPMAXSWZ128rrk(3(Class<VR128X>) -> 0(Class<VR128X>))  [1.01;1.01]
		 Successful, latency: 1.01
	VPMAXSWZ128rrk(4(Class<VR128X>) -> 0(Class<VR128X>))  [0.998;0.998]
		 Successful, latency: 0.998

-----VPMAXSWZ128rrkz-----
	VPMAXSWZ128rrkz(2(Class<VR128X>) -> 0(Class<VR128X>))  [1;1]
		 Successful, latency: 1
	VPMAXSWZ128rrkz(3(Class<VR128X>) -> 0(Class<VR128X>))  [1.01;1.01]
		 Successful, latency: 1.01

-----VPMAXSWZ256rr-----
	VPMAXSWZ256rr(1(Class<VR256X>) -> 0(Class<VR256X>))  [1.02;1.02]
		 Successful, latency: 1.02
	VPMAXSWZ256rr(2(Class<VR256X>) -> 0(Class<VR256X>))  [1;1]
		 Successful, latency: 1

-----VPMAXSWZ256rrk-----
	VPMAXSWZ256rrk(1(Class<VR256X>) -> 0(Class<VR256X>))  [1;1]
		 Successful, latency: 1
	VPMAXSWZ256rrk(3(Class<VR256X>) -> 0(Class<VR256X>))  [1.01;1.01]
		 Successful, latency: 1.01
	VPMAXSWZ256rrk(4(Class<VR256X>) -> 0(Class<VR256X>))  [1.02;1.02]
		 Successful, latency: 1.02

-----VPMAXSWZ256rrkz-----
	VPMAXSWZ256rrkz(2(Class<VR256X>) -> 0(Class<VR256X>))  [1;1]
		 Successful, latency: 1
	VPMAXSWZ256rrkz(3(Class<VR256X>) -> 0(Class<VR256X>))  [1;1]
		 Successful, latency: 1

-----VPMAXSWZrr-----
	VPMAXSWZrr(1(Class<VR512>) -> 0(Class<VR512>))  [1.02;1.02]
		 Successful, latency: 1.02
	VPMAXSWZrr(2(Class<VR512>) -> 0(Class<VR512>))  [1.01;1.01]
		 Successful, latency: 1.01

-----VPMAXSWZrrk-----
	VPMAXSWZrrk(1(Class<VR512>) -> 0(Class<VR512>))  [1.02;1.02]
		 Successful, latency: 1.02
	VPMAXSWZrrk(3(Class<VR512>) -> 0(Class<VR512>))  [0.998;0.998]
		 Successful, latency: 0.998
	VPMAXSWZrrk(4(Class<VR512>) -> 0(Class<VR512>))  [1.02;1.02]
		 Successful, latency: 1.02

-----VPMAXSWZrrkz-----
	VPMAXSWZrrkz(2(Class<VR512>) -> 0(Class<VR512>))  [1;1]
		 Successful, latency: 1
	VPMAXSWZrrkz(3(Class<VR512>) -> 0(Class<VR512>))  [0.998;0.998]
		 Successful, latency: 0.998

-----VPMAXSWrr-----
	VPMAXSWrr(1(Class<VR128>) -> 0(Class<VR128>))  [1.01;1.01]
		 Successful, latency: 1.01
	VPMAXSWrr(2(Class<VR128>) -> 0(Class<VR128>))  [1.01;1.01]
		 Successful, latency: 1.01

-----VPMAXUBYrr-----
	VPMAXUBYrr(1(Class<VR256>) -> 0(Class<VR256>))  [1.01;1.01]
		 Successful, latency: 1.01
	VPMAXUBYrr(2(Class<VR256>) -> 0(Class<VR256>))  [1.02;1.02]
		 Successful, latency: 1.02

-----VPMAXUBZ128rr-----
	VPMAXUBZ128rr(1(Class<VR128X>) -> 0(Class<VR128X>))  [1.01;1.01]
		 Successful, latency: 1.01
	VPMAXUBZ128rr(2(Class<VR128X>) -> 0(Class<VR128X>))  [1.01;1.01]
		 Successful, latency: 1.01

-----VPMAXUBZ128rrk-----
	VPMAXUBZ128rrk(1(Class<VR128X>) -> 0(Class<VR128X>))  [1;1]
		 Successful, latency: 1
	VPMAXUBZ128rrk(3(Class<VR128X>) -> 0(Class<VR128X>))  [1.01;1.01]
		 Successful, latency: 1.01
	VPMAXUBZ128rrk(4(Class<VR128X>) -> 0(Class<VR128X>))  [1;1]
		 Successful, latency: 1

-----VPMAXUBZ128rrkz-----
	VPMAXUBZ128rrkz(2(Class<VR128X>) -> 0(Class<VR128X>))  [1;1]
		 Successful, latency: 1
	VPMAXUBZ128rrkz(3(Class<VR128X>) -> 0(Class<VR128X>))  [1.01;1.01]
		 Successful, latency: 1.01

-----VPMAXUBZ256rr-----
	VPMAXUBZ256rr(1(Class<VR256X>) -> 0(Class<VR256X>))  [1.01;1.01]
		 Successful, latency: 1.01
	VPMAXUBZ256rr(2(Class<VR256X>) -> 0(Class<VR256X>))  [1.01;1.01]
		 Successful, latency: 1.01

-----VPMAXUBZ256rrk-----
	VPMAXUBZ256rrk(1(Class<VR256X>) -> 0(Class<VR256X>))  [1.01;1.01]
		 Successful, latency: 1.01
	VPMAXUBZ256rrk(3(Class<VR256X>) -> 0(Class<VR256X>))  [1.01;1.01]
		 Successful, latency: 1.01
	VPMAXUBZ256rrk(4(Class<VR256X>) -> 0(Class<VR256X>))  [1.01;1.01]
		 Successful, latency: 1.01

-----VPMAXUBZ256rrkz-----
	VPMAXUBZ256rrkz(2(Class<VR256X>) -> 0(Class<VR256X>))  [1.01;1.01]
		 Successful, latency: 1.01
	VPMAXUBZ256rrkz(3(Class<VR256X>) -> 0(Class<VR256X>))  [1;1]
		 Successful, latency: 1

-----VPMAXUBZrr-----
	VPMAXUBZrr(1(Class<VR512>) -> 0(Class<VR512>))  [1.01;1.01]
		 Successful, latency: 1.01
	VPMAXUBZrr(2(Class<VR512>) -> 0(Class<VR512>))  [1.01;1.01]
		 Successful, latency: 1.01

-----VPMAXUBZrrk-----
	VPMAXUBZrrk(1(Class<VR512>) -> 0(Class<VR512>))  [1;1]
		 Successful, latency: 1
	VPMAXUBZrrk(3(Class<VR512>) -> 0(Class<VR512>))  [1.01;1.01]
		 Successful, latency: 1.01
	VPMAXUBZrrk(4(Class<VR512>) -> 0(Class<VR512>))  [1;1]
		 Successful, latency: 1

-----VPMAXUBZrrkz-----
	VPMAXUBZrrkz(2(Class<VR512>) -> 0(Class<VR512>))  [1.01;1.01]
		 Successful, latency: 1.01
	VPMAXUBZrrkz(3(Class<VR512>) -> 0(Class<VR512>))  [1.02;1.02]
		 Successful, latency: 1.02

-----VPMAXUBrr-----
	VPMAXUBrr(1(Class<VR128>) -> 0(Class<VR128>))  [1;1]
		 Successful, latency: 1
	VPMAXUBrr(2(Class<VR128>) -> 0(Class<VR128>))  [1.01;1.01]
		 Successful, latency: 1.01

-----VPMAXUDYrr-----
	VPMAXUDYrr(1(Class<VR256>) -> 0(Class<VR256>))  [1.01;1.01]
		 Successful, latency: 1.01
	VPMAXUDYrr(2(Class<VR256>) -> 0(Class<VR256>))  [1.02;1.02]
		 Successful, latency: 1.02

-----VPMAXUDZ128rr-----
	VPMAXUDZ128rr(1(Class<VR128X>) -> 0(Class<VR128X>))  [1;1]
		 Successful, latency: 1
	VPMAXUDZ128rr(2(Class<VR128X>) -> 0(Class<VR128X>))  [1.01;1.01]
		 Successful, latency: 1.01

-----VPMAXUDZ128rrk-----
	VPMAXUDZ128rrk(1(Class<VR128X>) -> 0(Class<VR128X>))  [1;1]
		 Successful, latency: 1
	VPMAXUDZ128rrk(3(Class<VR128X>) -> 0(Class<VR128X>))  [1.01;1.01]
		 Successful, latency: 1.01
	VPMAXUDZ128rrk(4(Class<VR128X>) -> 0(Class<VR128X>))  [1;1]
		 Successful, latency: 1

-----VPMAXUDZ128rrkz-----
	VPMAXUDZ128rrkz(2(Class<VR128X>) -> 0(Class<VR128X>))  [1;1]
		 Successful, latency: 1
	VPMAXUDZ128rrkz(3(Class<VR128X>) -> 0(Class<VR128X>))  [1.01;1.01]
		 Successful, latency: 1.01

-----VPMAXUDZ256rr-----
	VPMAXUDZ256rr(1(Class<VR256X>) -> 0(Class<VR256X>))  [1.01;1.01]
		 Successful, latency: 1.01
	VPMAXUDZ256rr(2(Class<VR256X>) -> 0(Class<VR256X>))  [1.01;1.01]
		 Successful, latency: 1.01

-----VPMAXUDZ256rrk-----
	VPMAXUDZ256rrk(1(Class<VR256X>) -> 0(Class<VR256X>))  [1.01;1.01]
		 Successful, latency: 1.01
	VPMAXUDZ256rrk(3(Class<VR256X>) -> 0(Class<VR256X>))  [1.01;1.01]
		 Successful, latency: 1.01
	VPMAXUDZ256rrk(4(Class<VR256X>) -> 0(Class<VR256X>))  [1.02;1.02]
		 Successful, latency: 1.02

-----VPMAXUDZ256rrkz-----
	VPMAXUDZ256rrkz(2(Class<VR256X>) -> 0(Class<VR256X>))  [1;1]
		 Successful, latency: 1
	VPMAXUDZ256rrkz(3(Class<VR256X>) -> 0(Class<VR256X>))  [1;1]
		 Successful, latency: 1

-----VPMAXUDZrr-----
	VPMAXUDZrr(1(Class<VR512>) -> 0(Class<VR512>))  [1;1]
		 Successful, latency: 1
	VPMAXUDZrr(2(Class<VR512>) -> 0(Class<VR512>))  [1.01;1.01]
		 Successful, latency: 1.01

-----VPMAXUDZrrk-----
	VPMAXUDZrrk(1(Class<VR512>) -> 0(Class<VR512>))  [1.01;1.01]
		 Successful, latency: 1.01
	VPMAXUDZrrk(3(Class<VR512>) -> 0(Class<VR512>))  [1;1]
		 Successful, latency: 1
	VPMAXUDZrrk(4(Class<VR512>) -> 0(Class<VR512>))  [1.02;1.02]
		 Successful, latency: 1.02

-----VPMAXUDZrrkz-----
	VPMAXUDZrrkz(2(Class<VR512>) -> 0(Class<VR512>))  [1;1]
		 Successful, latency: 1
	VPMAXUDZrrkz(3(Class<VR512>) -> 0(Class<VR512>))  [1.01;1.01]
		 Successful, latency: 1.01

-----VPMAXUDrr-----
	VPMAXUDrr(1(Class<VR128>) -> 0(Class<VR128>))  [1.01;1.01]
		 Successful, latency: 1.01
	VPMAXUDrr(2(Class<VR128>) -> 0(Class<VR128>))  [1.01;1.01]
		 Successful, latency: 1.01

-----VPMAXUQZ128rr-----
	VPMAXUQZ128rr(1(Class<VR128X>) -> 0(Class<VR128X>))  [2.02;2.02]
		 Successful, latency: 2.02
	VPMAXUQZ128rr(2(Class<VR128X>) -> 0(Class<VR128X>))  [2.02;2.02]
		 Successful, latency: 2.02

-----VPMAXUQZ128rrk-----
	VPMAXUQZ128rrk(1(Class<VR128X>) -> 0(Class<VR128X>))  [2.02;2.02]
		 Successful, latency: 2.02
	VPMAXUQZ128rrk(3(Class<VR128X>) -> 0(Class<VR128X>))  [2;2]
		 Successful, latency: 2
	VPMAXUQZ128rrk(4(Class<VR128X>) -> 0(Class<VR128X>))  [2.02;2.02]
		 Successful, latency: 2.02

-----VPMAXUQZ128rrkz-----
	VPMAXUQZ128rrkz(2(Class<VR128X>) -> 0(Class<VR128X>))  [2.02;2.02]
		 Successful, latency: 2.02
	VPMAXUQZ128rrkz(3(Class<VR128X>) -> 0(Class<VR128X>))  [2.02;2.02]
		 Successful, latency: 2.02

-----VPMAXUQZ256rr-----
	VPMAXUQZ256rr(1(Class<VR256X>) -> 0(Class<VR256X>))  [2.03;2.03]
		 Successful, latency: 2.03
	VPMAXUQZ256rr(2(Class<VR256X>) -> 0(Class<VR256X>))  [2.02;2.02]
		 Successful, latency: 2.02

-----VPMAXUQZ256rrk-----
	VPMAXUQZ256rrk(1(Class<VR256X>) -> 0(Class<VR256X>))  [2.03;2.03]
		 Successful, latency: 2.03
	VPMAXUQZ256rrk(3(Class<VR256X>) -> 0(Class<VR256X>))  [2.02;2.02]
		 Successful, latency: 2.02
	VPMAXUQZ256rrk(4(Class<VR256X>) -> 0(Class<VR256X>))  [2.01;2.01]
		 Successful, latency: 2.01

-----VPMAXUQZ256rrkz-----
	VPMAXUQZ256rrkz(2(Class<VR256X>) -> 0(Class<VR256X>))  [2.02;2.02]
		 Successful, latency: 2.02
	VPMAXUQZ256rrkz(3(Class<VR256X>) -> 0(Class<VR256X>))  [2.02;2.02]
		 Successful, latency: 2.02

-----VPMAXUQZrr-----
	VPMAXUQZrr(1(Class<VR512>) -> 0(Class<VR512>))  [2.01;2.01]
		 Successful, latency: 2.01
	VPMAXUQZrr(2(Class<VR512>) -> 0(Class<VR512>))  [2.02;2.02]
		 Successful, latency: 2.02

-----VPMAXUQZrrk-----
	VPMAXUQZrrk(1(Class<VR512>) -> 0(Class<VR512>))  [2.02;2.02]
		 Successful, latency: 2.02
	VPMAXUQZrrk(3(Class<VR512>) -> 0(Class<VR512>))  [2.01;2.01]
		 Successful, latency: 2.01
	VPMAXUQZrrk(4(Class<VR512>) -> 0(Class<VR512>))  [2.02;2.02]
		 Successful, latency: 2.02

-----VPMAXUQZrrkz-----
	VPMAXUQZrrkz(2(Class<VR512>) -> 0(Class<VR512>))  [2.02;2.02]
		 Successful, latency: 2.02
	VPMAXUQZrrkz(3(Class<VR512>) -> 0(Class<VR512>))  [2.02;2.02]
		 Successful, latency: 2.02

-----VPMAXUWYrr-----
	VPMAXUWYrr(1(Class<VR256>) -> 0(Class<VR256>))  [1.01;1.01]
		 Successful, latency: 1.01
	VPMAXUWYrr(2(Class<VR256>) -> 0(Class<VR256>))  [1;1]
		 Successful, latency: 1

-----VPMAXUWZ128rr-----
	VPMAXUWZ128rr(1(Class<VR128X>) -> 0(Class<VR128X>))  [1;1]
		 Successful, latency: 1
	VPMAXUWZ128rr(2(Class<VR128X>) -> 0(Class<VR128X>))  [1.01;1.01]
		 Successful, latency: 1.01

-----VPMAXUWZ128rrk-----
	VPMAXUWZ128rrk(1(Class<VR128X>) -> 0(Class<VR128X>))  [1;1]
		 Successful, latency: 1
	VPMAXUWZ128rrk(3(Class<VR128X>) -> 0(Class<VR128X>))  [1;1]
		 Successful, latency: 1
	VPMAXUWZ128rrk(4(Class<VR128X>) -> 0(Class<VR128X>))  [1;1]
		 Successful, latency: 1

-----VPMAXUWZ128rrkz-----
	VPMAXUWZ128rrkz(2(Class<VR128X>) -> 0(Class<VR128X>))  [1.01;1.01]
		 Successful, latency: 1.01
	VPMAXUWZ128rrkz(3(Class<VR128X>) -> 0(Class<VR128X>))  [1.02;1.02]
		 Successful, latency: 1.02

-----VPMAXUWZ256rr-----
	VPMAXUWZ256rr(1(Class<VR256X>) -> 0(Class<VR256X>))  [1;1]
		 Successful, latency: 1
	VPMAXUWZ256rr(2(Class<VR256X>) -> 0(Class<VR256X>))  [1.01;1.01]
		 Successful, latency: 1.01

-----VPMAXUWZ256rrk-----
	VPMAXUWZ256rrk(1(Class<VR256X>) -> 0(Class<VR256X>))  [1.01;1.01]
		 Successful, latency: 1.01
	VPMAXUWZ256rrk(3(Class<VR256X>) -> 0(Class<VR256X>))  [1.02;1.02]
		 Successful, latency: 1.02
	VPMAXUWZ256rrk(4(Class<VR256X>) -> 0(Class<VR256X>))  [1;1]
		 Successful, latency: 1

-----VPMAXUWZ256rrkz-----
	VPMAXUWZ256rrkz(2(Class<VR256X>) -> 0(Class<VR256X>))  [1;1]
		 Successful, latency: 1
	VPMAXUWZ256rrkz(3(Class<VR256X>) -> 0(Class<VR256X>))  [1.01;1.01]
		 Successful, latency: 1.01

-----VPMAXUWZrr-----
	VPMAXUWZrr(1(Class<VR512>) -> 0(Class<VR512>))  [1.01;1.01]
		 Successful, latency: 1.01
	VPMAXUWZrr(2(Class<VR512>) -> 0(Class<VR512>))  [1;1]
		 Successful, latency: 1

-----VPMAXUWZrrk-----
	VPMAXUWZrrk(1(Class<VR512>) -> 0(Class<VR512>))  [1;1]
		 Successful, latency: 1
	VPMAXUWZrrk(3(Class<VR512>) -> 0(Class<VR512>))  [1;1]
		 Successful, latency: 1
	VPMAXUWZrrk(4(Class<VR512>) -> 0(Class<VR512>))  [1;1]
		 Successful, latency: 1

-----VPMAXUWZrrkz-----
	VPMAXUWZrrkz(2(Class<VR512>) -> 0(Class<VR512>))  [1;1]
		 Successful, latency: 1
	VPMAXUWZrrkz(3(Class<VR512>) -> 0(Class<VR512>))  [1.01;1.01]
		 Successful, latency: 1.01

-----VPMAXUWrr-----
	VPMAXUWrr(1(Class<VR128>) -> 0(Class<VR128>))  [1.01;1.01]
		 Successful, latency: 1.01
	VPMAXUWrr(2(Class<VR128>) -> 0(Class<VR128>))  [1;1]
		 Successful, latency: 1

-----VPMINSBYrr-----
	VPMINSBYrr(1(Class<VR256>) -> 0(Class<VR256>))  [1;1]
		 Successful, latency: 1
	VPMINSBYrr(2(Class<VR256>) -> 0(Class<VR256>))  [1.01;1.01]
		 Successful, latency: 1.01

-----VPMINSBZ128rr-----
	VPMINSBZ128rr(1(Class<VR128X>) -> 0(Class<VR128X>))  [1.01;1.01]
		 Successful, latency: 1.01
	VPMINSBZ128rr(2(Class<VR128X>) -> 0(Class<VR128X>))  [1.01;1.01]
		 Successful, latency: 1.01

-----VPMINSBZ128rrk-----
	VPMINSBZ128rrk(1(Class<VR128X>) -> 0(Class<VR128X>))  [0.999;0.999]
		 Successful, latency: 0.999
	VPMINSBZ128rrk(3(Class<VR128X>) -> 0(Class<VR128X>))  [1.01;1.01]
		 Successful, latency: 1.01
	VPMINSBZ128rrk(4(Class<VR128X>) -> 0(Class<VR128X>))  [1;1]
		 Successful, latency: 1

-----VPMINSBZ128rrkz-----
	VPMINSBZ128rrkz(2(Class<VR128X>) -> 0(Class<VR128X>))  [1.01;1.01]
		 Successful, latency: 1.01
	VPMINSBZ128rrkz(3(Class<VR128X>) -> 0(Class<VR128X>))  [1.01;1.01]
		 Successful, latency: 1.01

-----VPMINSBZ256rr-----
	VPMINSBZ256rr(1(Class<VR256X>) -> 0(Class<VR256X>))  [1.01;1.01]
		 Successful, latency: 1.01
	VPMINSBZ256rr(2(Class<VR256X>) -> 0(Class<VR256X>))  [1.01;1.01]
		 Successful, latency: 1.01

-----VPMINSBZ256rrk-----
	VPMINSBZ256rrk(1(Class<VR256X>) -> 0(Class<VR256X>))  [1.02;1.02]
		 Successful, latency: 1.02
	VPMINSBZ256rrk(3(Class<VR256X>) -> 0(Class<VR256X>))  [1.02;1.02]
		 Successful, latency: 1.02
	VPMINSBZ256rrk(4(Class<VR256X>) -> 0(Class<VR256X>))  [1.01;1.01]
		 Successful, latency: 1.01

-----VPMINSBZ256rrkz-----
	VPMINSBZ256rrkz(2(Class<VR256X>) -> 0(Class<VR256X>))  [1.01;1.01]
		 Successful, latency: 1.01
	VPMINSBZ256rrkz(3(Class<VR256X>) -> 0(Class<VR256X>))  [1.01;1.01]
		 Successful, latency: 1.01

-----VPMINSBZrr-----
	VPMINSBZrr(1(Class<VR512>) -> 0(Class<VR512>))  [1.01;1.01]
		 Successful, latency: 1.01
	VPMINSBZrr(2(Class<VR512>) -> 0(Class<VR512>))  [1.01;1.01]
		 Successful, latency: 1.01

-----VPMINSBZrrk-----
	VPMINSBZrrk(1(Class<VR512>) -> 0(Class<VR512>))  [1;1]
		 Successful, latency: 1
	VPMINSBZrrk(3(Class<VR512>) -> 0(Class<VR512>))  [1.01;1.01]
		 Successful, latency: 1.01
	VPMINSBZrrk(4(Class<VR512>) -> 0(Class<VR512>))  [1.02;1.02]
		 Successful, latency: 1.02

-----VPMINSBZrrkz-----
	VPMINSBZrrkz(2(Class<VR512>) -> 0(Class<VR512>))  [1;1]
		 Successful, latency: 1
	VPMINSBZrrkz(3(Class<VR512>) -> 0(Class<VR512>))  [1.02;1.02]
		 Successful, latency: 1.02

-----VPMINSBrr-----
	VPMINSBrr(1(Class<VR128>) -> 0(Class<VR128>))  [1;1]
		 Successful, latency: 1
	VPMINSBrr(2(Class<VR128>) -> 0(Class<VR128>))  [0.999;0.999]
		 Successful, latency: 0.999

-----VPMINSDYrr-----
	VPMINSDYrr(1(Class<VR256>) -> 0(Class<VR256>))  [1.01;1.01]
		 Successful, latency: 1.01
	VPMINSDYrr(2(Class<VR256>) -> 0(Class<VR256>))  [1.01;1.01]
		 Successful, latency: 1.01

-----VPMINSDZ128rr-----
	VPMINSDZ128rr(1(Class<VR128X>) -> 0(Class<VR128X>))  [1.01;1.01]
		 Successful, latency: 1.01
	VPMINSDZ128rr(2(Class<VR128X>) -> 0(Class<VR128X>))  [1.01;1.01]
		 Successful, latency: 1.01

-----VPMINSDZ128rrk-----
	VPMINSDZ128rrk(1(Class<VR128X>) -> 0(Class<VR128X>))  [1;1]
		 Successful, latency: 1
	VPMINSDZ128rrk(3(Class<VR128X>) -> 0(Class<VR128X>))  [1.01;1.01]
		 Successful, latency: 1.01
	VPMINSDZ128rrk(4(Class<VR128X>) -> 0(Class<VR128X>))  [1;1]
		 Successful, latency: 1

-----VPMINSDZ128rrkz-----
	VPMINSDZ128rrkz(2(Class<VR128X>) -> 0(Class<VR128X>))  [1;1]
		 Successful, latency: 1
	VPMINSDZ128rrkz(3(Class<VR128X>) -> 0(Class<VR128X>))  [1;1]
		 Successful, latency: 1

-----VPMINSDZ256rr-----
	VPMINSDZ256rr(1(Class<VR256X>) -> 0(Class<VR256X>))  [1;1]
		 Successful, latency: 1
	VPMINSDZ256rr(2(Class<VR256X>) -> 0(Class<VR256X>))  [1.01;1.01]
		 Successful, latency: 1.01

-----VPMINSDZ256rrk-----
	VPMINSDZ256rrk(1(Class<VR256X>) -> 0(Class<VR256X>))  [1;1]
		 Successful, latency: 1
	VPMINSDZ256rrk(3(Class<VR256X>) -> 0(Class<VR256X>))  [1;1]
		 Successful, latency: 1
	VPMINSDZ256rrk(4(Class<VR256X>) -> 0(Class<VR256X>))  [1.01;1.01]
		 Successful, latency: 1.01

-----VPMINSDZ256rrkz-----
	VPMINSDZ256rrkz(2(Class<VR256X>) -> 0(Class<VR256X>))  [1;1]
		 Successful, latency: 1
	VPMINSDZ256rrkz(3(Class<VR256X>) -> 0(Class<VR256X>))  [1.01;1.01]
		 Successful, latency: 1.01

-----VPMINSDZrr-----
	VPMINSDZrr(1(Class<VR512>) -> 0(Class<VR512>))  [1;1]
		 Successful, latency: 1
	VPMINSDZrr(2(Class<VR512>) -> 0(Class<VR512>))  [1;1]
		 Successful, latency: 1

-----VPMINSDZrrk-----
	VPMINSDZrrk(1(Class<VR512>) -> 0(Class<VR512>))  [1;1]
		 Successful, latency: 1
	VPMINSDZrrk(3(Class<VR512>) -> 0(Class<VR512>))  [1;1]
		 Successful, latency: 1
	VPMINSDZrrk(4(Class<VR512>) -> 0(Class<VR512>))  [1.01;1.01]
		 Successful, latency: 1.01

-----VPMINSDZrrkz-----
	VPMINSDZrrkz(2(Class<VR512>) -> 0(Class<VR512>))  [1.02;1.02]
		 Successful, latency: 1.02
	VPMINSDZrrkz(3(Class<VR512>) -> 0(Class<VR512>))  [0.999;0.999]
		 Successful, latency: 0.999

-----VPMINSDrr-----
	VPMINSDrr(1(Class<VR128>) -> 0(Class<VR128>))  [0.999;0.999]
		 Successful, latency: 0.999
	VPMINSDrr(2(Class<VR128>) -> 0(Class<VR128>))  [1;1]
		 Successful, latency: 1

-----VPMINSQZ128rr-----
	VPMINSQZ128rr(1(Class<VR128X>) -> 0(Class<VR128X>))  [2.02;2.02]
		 Successful, latency: 2.02
	VPMINSQZ128rr(2(Class<VR128X>) -> 0(Class<VR128X>))  [2.02;2.02]
		 Successful, latency: 2.02

-----VPMINSQZ128rrk-----
	VPMINSQZ128rrk(1(Class<VR128X>) -> 0(Class<VR128X>))  [2.01;2.01]
		 Successful, latency: 2.01
	VPMINSQZ128rrk(3(Class<VR128X>) -> 0(Class<VR128X>))  [2.02;2.02]
		 Successful, latency: 2.02
	VPMINSQZ128rrk(4(Class<VR128X>) -> 0(Class<VR128X>))  [2.02;2.02]
		 Successful, latency: 2.02

-----VPMINSQZ128rrkz-----
	VPMINSQZ128rrkz(2(Class<VR128X>) -> 0(Class<VR128X>))  [2.01;2.01]
		 Successful, latency: 2.01
	VPMINSQZ128rrkz(3(Class<VR128X>) -> 0(Class<VR128X>))  [2.02;2.02]
		 Successful, latency: 2.02

-----VPMINSQZ256rr-----
	VPMINSQZ256rr(1(Class<VR256X>) -> 0(Class<VR256X>))  [2.02;2.02]
		 Successful, latency: 2.02
	VPMINSQZ256rr(2(Class<VR256X>) -> 0(Class<VR256X>))  [2.02;2.02]
		 Successful, latency: 2.02

-----VPMINSQZ256rrk-----
	VPMINSQZ256rrk(1(Class<VR256X>) -> 0(Class<VR256X>))  [2.02;2.02]
		 Successful, latency: 2.02
	VPMINSQZ256rrk(3(Class<VR256X>) -> 0(Class<VR256X>))  [2.02;2.02]
		 Successful, latency: 2.02
	VPMINSQZ256rrk(4(Class<VR256X>) -> 0(Class<VR256X>))  [2.02;2.02]
		 Successful, latency: 2.02

-----VPMINSQZ256rrkz-----
	VPMINSQZ256rrkz(2(Class<VR256X>) -> 0(Class<VR256X>))  [2.04;2.04]
		 Successful, latency: 2.04
	VPMINSQZ256rrkz(3(Class<VR256X>) -> 0(Class<VR256X>))  [2.01;2.01]
		 Successful, latency: 2.01

-----VPMINSQZrr-----
	VPMINSQZrr(1(Class<VR512>) -> 0(Class<VR512>))  [2.01;2.01]
		 Successful, latency: 2.01
	VPMINSQZrr(2(Class<VR512>) -> 0(Class<VR512>))  [2.02;2.02]
		 Successful, latency: 2.02

-----VPMINSQZrrk-----
	VPMINSQZrrk(1(Class<VR512>) -> 0(Class<VR512>))  [2.02;2.02]
		 Successful, latency: 2.02
	VPMINSQZrrk(3(Class<VR512>) -> 0(Class<VR512>))  [2.03;2.03]
		 Successful, latency: 2.03
	VPMINSQZrrk(4(Class<VR512>) -> 0(Class<VR512>))  [2.03;2.03]
		 Successful, latency: 2.03

-----VPMINSQZrrkz-----
	VPMINSQZrrkz(2(Class<VR512>) -> 0(Class<VR512>))  [2.02;2.02]
		 Successful, latency: 2.02
	VPMINSQZrrkz(3(Class<VR512>) -> 0(Class<VR512>))  [2.01;2.01]
		 Successful, latency: 2.01

-----VPMINSWYrr-----
	VPMINSWYrr(1(Class<VR256>) -> 0(Class<VR256>))  [1;1]
		 Successful, latency: 1
	VPMINSWYrr(2(Class<VR256>) -> 0(Class<VR256>))  [1.02;1.02]
		 Successful, latency: 1.02

-----VPMINSWZ128rr-----
	VPMINSWZ128rr(1(Class<VR128X>) -> 0(Class<VR128X>))  [1.01;1.01]
		 Successful, latency: 1.01
	VPMINSWZ128rr(2(Class<VR128X>) -> 0(Class<VR128X>))  [1.02;1.02]
		 Successful, latency: 1.02

-----VPMINSWZ128rrk-----
	VPMINSWZ128rrk(1(Class<VR128X>) -> 0(Class<VR128X>))  [1;1]
		 Successful, latency: 1
	VPMINSWZ128rrk(3(Class<VR128X>) -> 0(Class<VR128X>))  [1.01;1.01]
		 Successful, latency: 1.01
	VPMINSWZ128rrk(4(Class<VR128X>) -> 0(Class<VR128X>))  [1.01;1.01]
		 Successful, latency: 1.01

-----VPMINSWZ128rrkz-----
	VPMINSWZ128rrkz(2(Class<VR128X>) -> 0(Class<VR128X>))  [1.01;1.01]
		 Successful, latency: 1.01
	VPMINSWZ128rrkz(3(Class<VR128X>) -> 0(Class<VR128X>))  [1.01;1.01]
		 Successful, latency: 1.01

-----VPMINSWZ256rr-----
	VPMINSWZ256rr(1(Class<VR256X>) -> 0(Class<VR256X>))  [1.01;1.01]
		 Successful, latency: 1.01
	VPMINSWZ256rr(2(Class<VR256X>) -> 0(Class<VR256X>))  [1.02;1.02]
		 Successful, latency: 1.02

-----VPMINSWZ256rrk-----
	VPMINSWZ256rrk(1(Class<VR256X>) -> 0(Class<VR256X>))  [1.01;1.01]
		 Successful, latency: 1.01
	VPMINSWZ256rrk(3(Class<VR256X>) -> 0(Class<VR256X>))  [1.01;1.01]
		 Successful, latency: 1.01
	VPMINSWZ256rrk(4(Class<VR256X>) -> 0(Class<VR256X>))  [1.01;1.01]
		 Successful, latency: 1.01

-----VPMINSWZ256rrkz-----
	VPMINSWZ256rrkz(2(Class<VR256X>) -> 0(Class<VR256X>))  [1.01;1.01]
		 Successful, latency: 1.01
	VPMINSWZ256rrkz(3(Class<VR256X>) -> 0(Class<VR256X>))  [1.01;1.01]
		 Successful, latency: 1.01

-----VPMINSWZrr-----
	VPMINSWZrr(1(Class<VR512>) -> 0(Class<VR512>))  [1.01;1.01]
		 Successful, latency: 1.01
	VPMINSWZrr(2(Class<VR512>) -> 0(Class<VR512>))  [1.01;1.01]
		 Successful, latency: 1.01

-----VPMINSWZrrk-----
	VPMINSWZrrk(1(Class<VR512>) -> 0(Class<VR512>))  [1.01;1.01]
		 Successful, latency: 1.01
	VPMINSWZrrk(3(Class<VR512>) -> 0(Class<VR512>))  [1.02;1.02]
		 Successful, latency: 1.02
	VPMINSWZrrk(4(Class<VR512>) -> 0(Class<VR512>))  [1;1]
		 Successful, latency: 1

-----VPMINSWZrrkz-----
	VPMINSWZrrkz(2(Class<VR512>) -> 0(Class<VR512>))  [1.01;1.01]
		 Successful, latency: 1.01
	VPMINSWZrrkz(3(Class<VR512>) -> 0(Class<VR512>))  [1;1]
		 Successful, latency: 1

-----VPMINSWrr-----
	VPMINSWrr(1(Class<VR128>) -> 0(Class<VR128>))  [1;1]
		 Successful, latency: 1
	VPMINSWrr(2(Class<VR128>) -> 0(Class<VR128>))  [1.01;1.01]
		 Successful, latency: 1.01

-----VPMINUBYrr-----
	VPMINUBYrr(1(Class<VR256>) -> 0(Class<VR256>))  [1.01;1.01]
		 Successful, latency: 1.01
	VPMINUBYrr(2(Class<VR256>) -> 0(Class<VR256>))  [1;1]
		 Successful, latency: 1

-----VPMINUBZ128rr-----
	VPMINUBZ128rr(1(Class<VR128X>) -> 0(Class<VR128X>))  [0.999;0.999]
		 Successful, latency: 0.999
	VPMINUBZ128rr(2(Class<VR128X>) -> 0(Class<VR128X>))  [1.03;1.03]
		 Successful, latency: 1.03

-----VPMINUBZ128rrk-----
	VPMINUBZ128rrk(1(Class<VR128X>) -> 0(Class<VR128X>))  [1.01;1.01]
		 Successful, latency: 1.01
	VPMINUBZ128rrk(3(Class<VR128X>) -> 0(Class<VR128X>))  [1;1]
		 Successful, latency: 1
	VPMINUBZ128rrk(4(Class<VR128X>) -> 0(Class<VR128X>))  [1.01;1.01]
		 Successful, latency: 1.01

-----VPMINUBZ128rrkz-----
	VPMINUBZ128rrkz(2(Class<VR128X>) -> 0(Class<VR128X>))  [1;1]
		 Successful, latency: 1
	VPMINUBZ128rrkz(3(Class<VR128X>) -> 0(Class<VR128X>))  [1.01;1.01]
		 Successful, latency: 1.01

-----VPMINUBZ256rr-----
	VPMINUBZ256rr(1(Class<VR256X>) -> 0(Class<VR256X>))  [1.02;1.02]
		 Successful, latency: 1.02
	VPMINUBZ256rr(2(Class<VR256X>) -> 0(Class<VR256X>))  [1;1]
		 Successful, latency: 1

-----VPMINUBZ256rrk-----
	VPMINUBZ256rrk(1(Class<VR256X>) -> 0(Class<VR256X>))  [1.01;1.01]
		 Successful, latency: 1.01
	VPMINUBZ256rrk(3(Class<VR256X>) -> 0(Class<VR256X>))  [1.01;1.01]
		 Successful, latency: 1.01
	VPMINUBZ256rrk(4(Class<VR256X>) -> 0(Class<VR256X>))  [0.999;0.999]
		 Successful, latency: 0.999

-----VPMINUBZ256rrkz-----
	VPMINUBZ256rrkz(2(Class<VR256X>) -> 0(Class<VR256X>))  [1.01;1.01]
		 Successful, latency: 1.01
	VPMINUBZ256rrkz(3(Class<VR256X>) -> 0(Class<VR256X>))  [1.01;1.01]
		 Successful, latency: 1.01

-----VPMINUBZrr-----
	VPMINUBZrr(1(Class<VR512>) -> 0(Class<VR512>))  [1.01;1.01]
		 Successful, latency: 1.01
	VPMINUBZrr(2(Class<VR512>) -> 0(Class<VR512>))  [1.02;1.02]
		 Successful, latency: 1.02

-----VPMINUBZrrk-----
	VPMINUBZrrk(1(Class<VR512>) -> 0(Class<VR512>))  [1;1]
		 Successful, latency: 1
	VPMINUBZrrk(3(Class<VR512>) -> 0(Class<VR512>))  [1.01;1.01]
		 Successful, latency: 1.01
	VPMINUBZrrk(4(Class<VR512>) -> 0(Class<VR512>))  [1.01;1.01]
		 Successful, latency: 1.01

-----VPMINUBZrrkz-----
	VPMINUBZrrkz(2(Class<VR512>) -> 0(Class<VR512>))  [1;1]
		 Successful, latency: 1
	VPMINUBZrrkz(3(Class<VR512>) -> 0(Class<VR512>))  [1.01;1.01]
		 Successful, latency: 1.01

-----VPMINUBrr-----
	VPMINUBrr(1(Class<VR128>) -> 0(Class<VR128>))  [1.02;1.02]
		 Successful, latency: 1.02
	VPMINUBrr(2(Class<VR128>) -> 0(Class<VR128>))  [1;1]
		 Successful, latency: 1

-----VPMINUDYrr-----
	VPMINUDYrr(1(Class<VR256>) -> 0(Class<VR256>))  [1.01;1.01]
		 Successful, latency: 1.01
	VPMINUDYrr(2(Class<VR256>) -> 0(Class<VR256>))  [1.01;1.01]
		 Successful, latency: 1.01

-----VPMINUDZ128rr-----
	VPMINUDZ128rr(1(Class<VR128X>) -> 0(Class<VR128X>))  [1.01;1.01]
		 Successful, latency: 1.01
	VPMINUDZ128rr(2(Class<VR128X>) -> 0(Class<VR128X>))  [1.01;1.01]
		 Successful, latency: 1.01

-----VPMINUDZ128rrk-----
	VPMINUDZ128rrk(1(Class<VR128X>) -> 0(Class<VR128X>))  [1;1]
		 Successful, latency: 1
	VPMINUDZ128rrk(3(Class<VR128X>) -> 0(Class<VR128X>))  [1.01;1.01]
		 Successful, latency: 1.01
	VPMINUDZ128rrk(4(Class<VR128X>) -> 0(Class<VR128X>))  [0.998;0.998]
		 Successful, latency: 0.998

-----VPMINUDZ128rrkz-----
	VPMINUDZ128rrkz(2(Class<VR128X>) -> 0(Class<VR128X>))  [1.01;1.01]
		 Successful, latency: 1.01
	VPMINUDZ128rrkz(3(Class<VR128X>) -> 0(Class<VR128X>))  [1.01;1.01]
		 Successful, latency: 1.01

-----VPMINUDZ256rr-----
	VPMINUDZ256rr(1(Class<VR256X>) -> 0(Class<VR256X>))  [1.01;1.01]
		 Successful, latency: 1.01
	VPMINUDZ256rr(2(Class<VR256X>) -> 0(Class<VR256X>))  [1;1]
		 Successful, latency: 1

-----VPMINUDZ256rrk-----
	VPMINUDZ256rrk(1(Class<VR256X>) -> 0(Class<VR256X>))  [1.01;1.01]
		 Successful, latency: 1.01
	VPMINUDZ256rrk(3(Class<VR256X>) -> 0(Class<VR256X>))  [1.01;1.01]
		 Successful, latency: 1.01
	VPMINUDZ256rrk(4(Class<VR256X>) -> 0(Class<VR256X>))  [1.02;1.02]
		 Successful, latency: 1.02

-----VPMINUDZ256rrkz-----
	VPMINUDZ256rrkz(2(Class<VR256X>) -> 0(Class<VR256X>))  [0.998;0.998]
		 Successful, latency: 0.998
	VPMINUDZ256rrkz(3(Class<VR256X>) -> 0(Class<VR256X>))  [1.01;1.01]
		 Successful, latency: 1.01

-----VPMINUDZrr-----
	VPMINUDZrr(1(Class<VR512>) -> 0(Class<VR512>))  [1.02;1.02]
		 Successful, latency: 1.02
	VPMINUDZrr(2(Class<VR512>) -> 0(Class<VR512>))  [1.01;1.01]
		 Successful, latency: 1.01

-----VPMINUDZrrk-----
	VPMINUDZrrk(1(Class<VR512>) -> 0(Class<VR512>))  [1.01;1.01]
		 Successful, latency: 1.01
	VPMINUDZrrk(3(Class<VR512>) -> 0(Class<VR512>))  [1;1]
		 Successful, latency: 1
	VPMINUDZrrk(4(Class<VR512>) -> 0(Class<VR512>))  [1.01;1.01]
		 Successful, latency: 1.01

-----VPMINUDZrrkz-----
	VPMINUDZrrkz(2(Class<VR512>) -> 0(Class<VR512>))  [1.01;1.01]
		 Successful, latency: 1.01
	VPMINUDZrrkz(3(Class<VR512>) -> 0(Class<VR512>))  [1;1]
		 Successful, latency: 1

-----VPMINUDrr-----
	VPMINUDrr(1(Class<VR128>) -> 0(Class<VR128>))  [1.01;1.01]
		 Successful, latency: 1.01
	VPMINUDrr(2(Class<VR128>) -> 0(Class<VR128>))  [1.02;1.02]
		 Successful, latency: 1.02

-----VPMINUQZ128rr-----
	VPMINUQZ128rr(1(Class<VR128X>) -> 0(Class<VR128X>))  [2.01;2.01]
		 Successful, latency: 2.01
	VPMINUQZ128rr(2(Class<VR128X>) -> 0(Class<VR128X>))  [2.02;2.02]
		 Successful, latency: 2.02

-----VPMINUQZ128rrk-----
	VPMINUQZ128rrk(1(Class<VR128X>) -> 0(Class<VR128X>))  [2.01;2.01]
		 Successful, latency: 2.01
	VPMINUQZ128rrk(3(Class<VR128X>) -> 0(Class<VR128X>))  [2.02;2.02]
		 Successful, latency: 2.02
	VPMINUQZ128rrk(4(Class<VR128X>) -> 0(Class<VR128X>))  [2.02;2.02]
		 Successful, latency: 2.02

-----VPMINUQZ128rrkz-----
	VPMINUQZ128rrkz(2(Class<VR128X>) -> 0(Class<VR128X>))  [2.01;2.01]
		 Successful, latency: 2.01
	VPMINUQZ128rrkz(3(Class<VR128X>) -> 0(Class<VR128X>))  [2.01;2.01]
		 Successful, latency: 2.01

-----VPMINUQZ256rr-----
	VPMINUQZ256rr(1(Class<VR256X>) -> 0(Class<VR256X>))  [2.02;2.02]
		 Successful, latency: 2.02
	VPMINUQZ256rr(2(Class<VR256X>) -> 0(Class<VR256X>))  [2.03;2.03]
		 Successful, latency: 2.03

-----VPMINUQZ256rrk-----
	VPMINUQZ256rrk(1(Class<VR256X>) -> 0(Class<VR256X>))  [2.01;2.01]
		 Successful, latency: 2.01
	VPMINUQZ256rrk(3(Class<VR256X>) -> 0(Class<VR256X>))  [2.02;2.02]
		 Successful, latency: 2.02
	VPMINUQZ256rrk(4(Class<VR256X>) -> 0(Class<VR256X>))  [2.02;2.02]
		 Successful, latency: 2.02

-----VPMINUQZ256rrkz-----
	VPMINUQZ256rrkz(2(Class<VR256X>) -> 0(Class<VR256X>))  [2.01;2.01]
		 Successful, latency: 2.01
	VPMINUQZ256rrkz(3(Class<VR256X>) -> 0(Class<VR256X>))  [2.01;2.01]
		 Successful, latency: 2.01

-----VPMINUQZrr-----
	VPMINUQZrr(1(Class<VR512>) -> 0(Class<VR512>))  [2.02;2.02]
		 Successful, latency: 2.02
	VPMINUQZrr(2(Class<VR512>) -> 0(Class<VR512>))  [2.02;2.02]
		 Successful, latency: 2.02

-----VPMINUQZrrk-----
	VPMINUQZrrk(1(Class<VR512>) -> 0(Class<VR512>))  [2.02;2.02]
		 Successful, latency: 2.02
	VPMINUQZrrk(3(Class<VR512>) -> 0(Class<VR512>))  [2.02;2.02]
		 Successful, latency: 2.02
	VPMINUQZrrk(4(Class<VR512>) -> 0(Class<VR512>))  [2.01;2.01]
		 Successful, latency: 2.01

-----VPMINUQZrrkz-----
	VPMINUQZrrkz(2(Class<VR512>) -> 0(Class<VR512>))  [2.02;2.02]
		 Successful, latency: 2.02
	VPMINUQZrrkz(3(Class<VR512>) -> 0(Class<VR512>))  [2.02;2.02]
		 Successful, latency: 2.02

-----VPMINUWYrr-----
	VPMINUWYrr(1(Class<VR256>) -> 0(Class<VR256>))  [1;1]
		 Successful, latency: 1
	VPMINUWYrr(2(Class<VR256>) -> 0(Class<VR256>))  [1.01;1.01]
		 Successful, latency: 1.01

-----VPMINUWZ128rr-----
	VPMINUWZ128rr(1(Class<VR128X>) -> 0(Class<VR128X>))  [1.02;1.02]
		 Successful, latency: 1.02
	VPMINUWZ128rr(2(Class<VR128X>) -> 0(Class<VR128X>))  [1;1]
		 Successful, latency: 1

-----VPMINUWZ128rrk-----
	VPMINUWZ128rrk(1(Class<VR128X>) -> 0(Class<VR128X>))  [1.01;1.01]
		 Successful, latency: 1.01
	VPMINUWZ128rrk(3(Class<VR128X>) -> 0(Class<VR128X>))  [1.01;1.01]
		 Successful, latency: 1.01
	VPMINUWZ128rrk(4(Class<VR128X>) -> 0(Class<VR128X>))  [1.01;1.01]
		 Successful, latency: 1.01

-----VPMINUWZ128rrkz-----
	VPMINUWZ128rrkz(2(Class<VR128X>) -> 0(Class<VR128X>))  [1.01;1.01]
		 Successful, latency: 1.01
	VPMINUWZ128rrkz(3(Class<VR128X>) -> 0(Class<VR128X>))  [1;1]
		 Successful, latency: 1

-----VPMINUWZ256rr-----
	VPMINUWZ256rr(1(Class<VR256X>) -> 0(Class<VR256X>))  [1.02;1.02]
		 Successful, latency: 1.02
	VPMINUWZ256rr(2(Class<VR256X>) -> 0(Class<VR256X>))  [1.01;1.01]
		 Successful, latency: 1.01

-----VPMINUWZ256rrk-----
	VPMINUWZ256rrk(1(Class<VR256X>) -> 0(Class<VR256X>))  [1.02;1.02]
		 Successful, latency: 1.02
	VPMINUWZ256rrk(3(Class<VR256X>) -> 0(Class<VR256X>))  [1.01;1.01]
		 Successful, latency: 1.01
	VPMINUWZ256rrk(4(Class<VR256X>) -> 0(Class<VR256X>))  [1.02;1.02]
		 Successful, latency: 1.02

-----VPMINUWZ256rrkz-----
	VPMINUWZ256rrkz(2(Class<VR256X>) -> 0(Class<VR256X>))  [1;1]
		 Successful, latency: 1
	VPMINUWZ256rrkz(3(Class<VR256X>) -> 0(Class<VR256X>))  [0.996;0.996]
		 Successful, latency: 0.996

-----VPMINUWZrr-----
	VPMINUWZrr(1(Class<VR512>) -> 0(Class<VR512>))  [0.999;0.999]
		 Successful, latency: 0.999
	VPMINUWZrr(2(Class<VR512>) -> 0(Class<VR512>))  [1;1]
		 Successful, latency: 1

-----VPMINUWZrrk-----
	VPMINUWZrrk(1(Class<VR512>) -> 0(Class<VR512>))  [1.01;1.01]
		 Successful, latency: 1.01
	VPMINUWZrrk(3(Class<VR512>) -> 0(Class<VR512>))  [1.01;1.01]
		 Successful, latency: 1.01
	VPMINUWZrrk(4(Class<VR512>) -> 0(Class<VR512>))  [1;1]
		 Successful, latency: 1

-----VPMINUWZrrkz-----
	VPMINUWZrrkz(2(Class<VR512>) -> 0(Class<VR512>))  [1;1]
		 Successful, latency: 1
	VPMINUWZrrkz(3(Class<VR512>) -> 0(Class<VR512>))  [1.01;1.01]
		 Successful, latency: 1.01

-----VPMINUWrr-----
	VPMINUWrr(1(Class<VR128>) -> 0(Class<VR128>))  [1.02;1.02]
		 Successful, latency: 1.02
	VPMINUWrr(2(Class<VR128>) -> 0(Class<VR128>))  [1.01;1.01]
		 Successful, latency: 1.01

-----VPMOVB2MZ128kr-----
	VPMOVB2MZ128kr(1(Class<VR128X>) -> 0(Class<VK16>))  [1.02;3.04]
		Dependencies:
			VPMOVB2MZ128kr(1(Class<VR128X>) -> 0(Class<VK16>)) 
			VPMOVM2BZ128rk(1(Class<VK16>) -> 0(Class<VR128X>)) 
		Combined result: 4.04 cycles

-----VPMOVB2MZ256kr-----
	VPMOVB2MZ256kr(1(Class<VR256X>) -> 0(Class<VK32>))  [1.01;4.04]
		Dependencies:
			VPSHUFBITQMBZ256rr(1(Class<VR256X>) -> 0(Class<VK32>)) 
			VPMOVM2BZ256rk(1(Class<VK32>) -> 0(Class<VR256X>)) 
		Combined result: 5.04 cycles

-----VPMOVB2MZkr-----
	VPMOVB2MZkr(1(Class<VR512>) -> 0(Class<VK64>))  [1.01;4.17]
		Dependencies:
			VPTESTNMBZrr(1(Class<VR512>) -> 0(Class<VK64>)) 
			VPMOVM2BZrk(1(Class<VK64>) -> 0(Class<VR512>)) 
		Combined result: 5.17 cycles

-----VPMOVD2MZ128kr-----
	VPMOVD2MZ128kr(1(Class<VR128X>) -> 0(Class<VK4>))  [1.01;3.03]
		Dependencies:
			VPCMPEQDZ128rr(2(Class<VR128X>) -> 0(Class<VK4>)) 
			VPMOVM2DZ128rk(1(Class<VK4>) -> 0(Class<VR128X>)) 
		Combined result: 4.03 cycles

-----VPMOVD2MZ256kr-----
	VPMOVD2MZ256kr(1(Class<VR256X>) -> 0(Class<VK8>))  [1.01;4.05]
		Dependencies:
			VCMPPSZ256rri(1(Class<VR256X>) -> 0(Class<VK8>)) 
			VPMOVM2DZ256rk(1(Class<VK8>) -> 0(Class<VR256X>)) 
		Combined result: 5.05 cycles

-----VPMOVD2MZkr-----
	VPMOVD2MZkr(1(Class<VR512>) -> 0(Class<VK16>))  [1.07;5.2]
		Dependencies:
			VPTESTNMDZrr(2(Class<VR512>) -> 0(Class<VK16>)) 
			VPMOVM2DZrk(1(Class<VK16>) -> 0(Class<VR512>)) 
		Combined result: 6.2 cycles

-----VPMOVDBZ128rr-----
	VPMOVDBZ128rr(1(Class<VR128X>) -> 0(Class<VR128X>))  [2.03;2.03]
		 Successful, latency: 2.03

-----VPMOVDBZ128rrk-----
	VPMOVDBZ128rrk(1(Class<VR128X>) -> 0(Class<VR128X>))  [2.01;2.01]
		 Successful, latency: 2.01
	VPMOVDBZ128rrk(3(Class<VR128X>) -> 0(Class<VR128X>))  [2.02;2.02]
		 Successful, latency: 2.02

-----VPMOVDBZ128rrkz-----
	VPMOVDBZ128rrkz(2(Class<VR128X>) -> 0(Class<VR128X>))  [2.01;2.01]
		 Successful, latency: 2.01

-----VPMOVDBZ256rr-----
	VPMOVDBZ256rr(1(Class<VR256X>) -> 0(Class<VR128X>))  [2.01;4.03]
		Dependencies:
			VEXTRACTI32X4Z256rrik(3(Class<VR256X>) -> 0(Class<VR128X>)) 
			VBROADCASTF32X2Z256rr(1(Class<VR128X>) -> 0(Class<VR256X>)) 
		Combined result: 5.03 cycles

-----VPMOVDBZ256rrk-----
	VPMOVDBZ256rrk(1(Class<VR128X>) -> 0(Class<VR128X>))  [4.03;4.03]
		 Successful, latency: 4.03
	VPMOVDBZ256rrk(3(Class<VR256X>) -> 0(Class<VR128X>))  [2.03;4.05]
		Dependencies:
			VEXTRACTI32X4Z256rrik(3(Class<VR256X>) -> 0(Class<VR128X>)) 
			VBROADCASTF32X2Z256rr(1(Class<VR128X>) -> 0(Class<VR256X>)) 
		Combined result: 5.05 cycles

-----VPMOVDBZ256rrkz-----
	VPMOVDBZ256rrkz(2(Class<VR256X>) -> 0(Class<VR128X>))  [2.04;4.06]
		Dependencies:
			VEXTRACTI32X4Z256rrik(3(Class<VR256X>) -> 0(Class<VR128X>)) 
			VBROADCASTF32X2Z256rr(1(Class<VR128X>) -> 0(Class<VR256X>)) 
		Combined result: 5.06 cycles

-----VPMOVDBZrr-----
	VPMOVDBZrr(1(Class<VR512>) -> 0(Class<VR128X>))  [2.03;5.06]
		Dependencies:
			VEXTRACTF64X2Zrri(1(Class<VR512>) -> 0(Class<VR128X>)) 
			VINSERTF32X4Zrri(2(Class<VR128X>) -> 0(Class<VR512>)) 
		Combined result: 6.06 cycles

-----VPMOVDBZrrk-----
	VPMOVDBZrrk(1(Class<VR128X>) -> 0(Class<VR128X>))  [5.05;5.05]
		 Successful, latency: 5.05
	VPMOVDBZrrk(3(Class<VR512>) -> 0(Class<VR128X>))  [2.02;5.04]
		Dependencies:
			VEXTRACTF64X2Zrri(1(Class<VR512>) -> 0(Class<VR128X>)) 
			VINSERTF32X4Zrri(2(Class<VR128X>) -> 0(Class<VR512>)) 
		Combined result: 6.04 cycles

-----VPMOVDBZrrkz-----
	VPMOVDBZrrkz(2(Class<VR512>) -> 0(Class<VR128X>))  [2.02;5.04]
		Dependencies:
			VEXTRACTF64X2Zrri(1(Class<VR512>) -> 0(Class<VR128X>)) 
			VINSERTF32X4Zrri(2(Class<VR128X>) -> 0(Class<VR512>)) 
		Combined result: 6.04 cycles

-----VPMOVDWZ128rr-----
	VPMOVDWZ128rr(1(Class<VR128X>) -> 0(Class<VR128X>))  [2.02;2.02]
		 Successful, latency: 2.02

-----VPMOVDWZ128rrk-----
	VPMOVDWZ128rrk(1(Class<VR128X>) -> 0(Class<VR128X>))  [2.01;2.01]
		 Successful, latency: 2.01
	VPMOVDWZ128rrk(3(Class<VR128X>) -> 0(Class<VR128X>))  [2.01;2.01]
		 Successful, latency: 2.01

-----VPMOVDWZ128rrkz-----
	VPMOVDWZ128rrkz(2(Class<VR128X>) -> 0(Class<VR128X>))  [2.02;2.02]
		 Successful, latency: 2.02

-----VPMOVDWZ256rr-----
	VPMOVDWZ256rr(1(Class<VR256X>) -> 0(Class<VR128X>))  [2.01;4.04]
		Dependencies:
			VEXTRACTI32X4Z256rrik(3(Class<VR256X>) -> 0(Class<VR128X>)) 
			VBROADCASTF32X2Z256rr(1(Class<VR128X>) -> 0(Class<VR256X>)) 
		Combined result: 5.04 cycles

-----VPMOVDWZ256rrk-----
	VPMOVDWZ256rrk(1(Class<VR128X>) -> 0(Class<VR128X>))  [4.03;4.03]
		 Successful, latency: 4.03
	VPMOVDWZ256rrk(3(Class<VR256X>) -> 0(Class<VR128X>))  [2.01;4.03]
		Dependencies:
			VEXTRACTI32X4Z256rrik(3(Class<VR256X>) -> 0(Class<VR128X>)) 
			VBROADCASTF32X2Z256rr(1(Class<VR128X>) -> 0(Class<VR256X>)) 
		Combined result: 5.03 cycles

-----VPMOVDWZ256rrkz-----
	VPMOVDWZ256rrkz(2(Class<VR256X>) -> 0(Class<VR128X>))  [2.03;4.05]
		Dependencies:
			VEXTRACTI32X4Z256rrik(3(Class<VR256X>) -> 0(Class<VR128X>)) 
			VBROADCASTF32X2Z256rr(1(Class<VR128X>) -> 0(Class<VR256X>)) 
		Combined result: 5.05 cycles

-----VPMOVDWZrr-----
	VPMOVDWZrr(1(Class<VR512>) -> 0(Class<VR256X>))  [1.04;4.06]
		Dependencies:
			VPMOVDWZrr(1(Class<VR512>) -> 0(Class<VR256X>)) 
			VINSERTF64X4Zrri(2(Class<VR256X>) -> 0(Class<VR512>)) 
		Combined result: 5.06 cycles

-----VPMOVDWZrrk-----
	VPMOVDWZrrk(1(Class<VR256X>) -> 0(Class<VR256X>))  [4.03;4.03]
		 Successful, latency: 4.03
	VPMOVDWZrrk(3(Class<VR512>) -> 0(Class<VR256X>))  [1.01;4.04]
		Dependencies:
			VPMOVDWZrr(1(Class<VR512>) -> 0(Class<VR256X>)) 
			VINSERTF64X4Zrri(2(Class<VR256X>) -> 0(Class<VR512>)) 
		Combined result: 5.04 cycles

-----VPMOVDWZrrkz-----
	VPMOVDWZrrkz(2(Class<VR512>) -> 0(Class<VR256X>))  [1.05;4.08]
		Dependencies:
			VPMOVDWZrr(1(Class<VR512>) -> 0(Class<VR256X>)) 
			VINSERTF64X4Zrri(2(Class<VR256X>) -> 0(Class<VR512>)) 
		Combined result: 5.08 cycles

-----VPMOVM2BZ128rk-----
	VPMOVM2BZ128rk(1(Class<VK16>) -> 0(Class<VR128X>))  [1;3.02]
		Dependencies:
			VPMOVB2MZ128kr(1(Class<VR128X>) -> 0(Class<VK16>)) 
			VPMOVM2BZ128rk(1(Class<VK16>) -> 0(Class<VR128X>)) 
		Combined result: 4.04 cycles

-----VPMOVM2BZ256rk-----
	VPMOVM2BZ256rk(1(Class<VK32>) -> 0(Class<VR256X>))  [0.994;4.02]
		Dependencies:
			VPSHUFBITQMBZ256rr(1(Class<VR256X>) -> 0(Class<VK32>)) 
			VPMOVM2BZ256rk(1(Class<VK32>) -> 0(Class<VR256X>)) 
		Combined result: 5.04 cycles

-----VPMOVM2BZrk-----
	VPMOVM2BZrk(1(Class<VK64>) -> 0(Class<VR512>))  [1;4.16]
		Dependencies:
			VPTESTNMBZrr(1(Class<VR512>) -> 0(Class<VK64>)) 
			VPMOVM2BZrk(1(Class<VK64>) -> 0(Class<VR512>)) 
		Combined result: 5.15 cycles

-----VPMOVM2DZ128rk-----
	VPMOVM2DZ128rk(1(Class<VK4>) -> 0(Class<VR128X>))  [0.99;3.02]
		Dependencies:
			VPCMPEQDZ128rr(2(Class<VR128X>) -> 0(Class<VK4>)) 
			VPMOVM2DZ128rk(1(Class<VK4>) -> 0(Class<VR128X>)) 
		Combined result: 4.04 cycles

-----VPMOVM2DZ256rk-----
	VPMOVM2DZ256rk(1(Class<VK8>) -> 0(Class<VR256X>))  [1.02;4.06]
		Dependencies:
			VCMPPSZ256rri(1(Class<VR256X>) -> 0(Class<VK8>)) 
			VPMOVM2DZ256rk(1(Class<VK8>) -> 0(Class<VR256X>)) 
		Combined result: 5.05 cycles

-----VPMOVM2DZrk-----
	VPMOVM2DZrk(1(Class<VK16>) -> 0(Class<VR512>))  [1;5.14]
		Dependencies:
			VPTESTNMDZrr(2(Class<VR512>) -> 0(Class<VK16>)) 
			VPMOVM2DZrk(1(Class<VK16>) -> 0(Class<VR512>)) 
		Combined result: 6.18 cycles

-----VPMOVM2QZ128rk-----
	VPMOVM2QZ128rk(1(Class<VK2>) -> 0(Class<VR128X>))  [0.995;3.01]
		Dependencies:
			VPCMPQZ128rri(2(Class<VR128X>) -> 0(Class<VK2>)) 
			VPMOVM2QZ128rk(1(Class<VK2>) -> 0(Class<VR128X>)) 
		Combined result: 4.03 cycles

-----VPMOVM2QZ256rk-----
	VPMOVM2QZ256rk(1(Class<VK4>) -> 0(Class<VR256X>))  [0.984;4.01]
		Dependencies:
			VPTESTNMQZ256rrk(2(Class<VR256X>) -> 0(Class<VK4>)) 
			VPMOVM2QZ256rk(1(Class<VK4>) -> 0(Class<VR256X>)) 
		Combined result: 5.02 cycles

-----VPMOVM2QZrk-----
	VPMOVM2QZrk(1(Class<VK8>) -> 0(Class<VR512>))  [0.952;5.06]
		Dependencies:
			VPCMPQZrrik(2(Class<VR512>) -> 0(Class<VK8>)) 
			VPMOVM2QZrk(1(Class<VK8>) -> 0(Class<VR512>)) 
		Combined result: 6.11 cycles

-----VPMOVM2WZ128rk-----
	VPMOVM2WZ128rk(1(Class<VK8>) -> 0(Class<VR128X>))  [0.971;2.99]
		Dependencies:
			VPCMPGTWZ128rr(1(Class<VR128X>) -> 0(Class<VK8>)) 
			VPMOVM2WZ128rk(1(Class<VK8>) -> 0(Class<VR128X>)) 
		Combined result: 4.03 cycles

-----VPMOVM2WZ256rk-----
	VPMOVM2WZ256rk(1(Class<VK16>) -> 0(Class<VR256X>))  [1;4.03]
		Dependencies:
			VPCMPEQWZ256rr(2(Class<VR256X>) -> 0(Class<VK16>)) 
			VPMOVM2WZ256rk(1(Class<VK16>) -> 0(Class<VR256X>)) 
		Combined result: 5.06 cycles

-----VPMOVM2WZrk-----
	VPMOVM2WZrk(1(Class<VK32>) -> 0(Class<VR512>))  [0.979;5.12]
		Dependencies:
			VPCMPUWZrrik(3(Class<VR512>) -> 0(Class<VK32>)) 
			VPMOVM2WZrk(1(Class<VK32>) -> 0(Class<VR512>)) 
		Combined result: 6.15 cycles

-----VPMOVMSKBrr-----
	VPMOVMSKBrr(1(Class<VR128>) -> 0(Class<GR32>))  [1.04;5.08]
		Dependencies:
			MOVMSKPSrr(1(Class<VR128>) -> 0(Class<GR32>)) 
			VMOVDI2PDIrr(1(Class<GR32>) -> 0(Class<VR128>)) 
		Combined result: 6.08 cycles

-----VPMOVQ2MZ128kr-----
	VPMOVQ2MZ128kr(1(Class<VR128X>) -> 0(Class<VK2>))  [1.02;3.04]
		Dependencies:
			VPCMPQZ128rri(2(Class<VR128X>) -> 0(Class<VK2>)) 
			VPMOVM2QZ128rk(1(Class<VK2>) -> 0(Class<VR128X>)) 
		Combined result: 4.04 cycles

-----VPMOVQ2MZ256kr-----
	VPMOVQ2MZ256kr(1(Class<VR256X>) -> 0(Class<VK4>))  [1.04;4.07]
		Dependencies:
			VPTESTNMQZ256rrk(2(Class<VR256X>) -> 0(Class<VK4>)) 
			VPMOVM2QZ256rk(1(Class<VK4>) -> 0(Class<VR256X>)) 
		Combined result: 5.07 cycles

-----VPMOVQ2MZkr-----
	VPMOVQ2MZkr(1(Class<VR512>) -> 0(Class<VK8>))  [1.08;5.18]
		Dependencies:
			VPCMPQZrrik(2(Class<VR512>) -> 0(Class<VK8>)) 
			VPMOVM2QZrk(1(Class<VK8>) -> 0(Class<VR512>)) 
		Combined result: 6.18 cycles

-----VPMOVQBZ128rr-----
	VPMOVQBZ128rr(1(Class<VR128X>) -> 0(Class<VR128X>))  [2.03;2.03]
		 Successful, latency: 2.03

-----VPMOVQBZ128rrk-----
	VPMOVQBZ128rrk(1(Class<VR128X>) -> 0(Class<VR128X>))  [2.01;2.01]
		 Successful, latency: 2.01
	VPMOVQBZ128rrk(3(Class<VR128X>) -> 0(Class<VR128X>))  [2.02;2.02]
		 Successful, latency: 2.02

-----VPMOVQBZ128rrkz-----
	VPMOVQBZ128rrkz(2(Class<VR128X>) -> 0(Class<VR128X>))  [2.01;2.01]
		 Successful, latency: 2.01

-----VPMOVQBZ256rr-----
	VPMOVQBZ256rr(1(Class<VR256X>) -> 0(Class<VR128X>))  [2.01;4.04]
		Dependencies:
			VEXTRACTI32X4Z256rrik(3(Class<VR256X>) -> 0(Class<VR128X>)) 
			VBROADCASTF32X2Z256rr(1(Class<VR128X>) -> 0(Class<VR256X>)) 
		Combined result: 5.04 cycles

-----VPMOVQBZ256rrk-----
	VPMOVQBZ256rrk(1(Class<VR128X>) -> 0(Class<VR128X>))  [4.03;4.03]
		 Successful, latency: 4.03
	VPMOVQBZ256rrk(3(Class<VR256X>) -> 0(Class<VR128X>))  [2.03;4.05]
		Dependencies:
			VEXTRACTI32X4Z256rrik(3(Class<VR256X>) -> 0(Class<VR128X>)) 
			VBROADCASTF32X2Z256rr(1(Class<VR128X>) -> 0(Class<VR256X>)) 
		Combined result: 5.05 cycles

-----VPMOVQBZ256rrkz-----
	VPMOVQBZ256rrkz(2(Class<VR256X>) -> 0(Class<VR128X>))  [2.06;4.08]
		Dependencies:
			VEXTRACTI32X4Z256rrik(3(Class<VR256X>) -> 0(Class<VR128X>)) 
			VBROADCASTF32X2Z256rr(1(Class<VR128X>) -> 0(Class<VR256X>)) 
		Combined result: 5.08 cycles

-----VPMOVQBZrr-----
	VPMOVQBZrr(1(Class<VR512>) -> 0(Class<VR128X>))  [2.05;5.07]
		Dependencies:
			VEXTRACTF64X2Zrri(1(Class<VR512>) -> 0(Class<VR128X>)) 
			VINSERTF32X4Zrri(2(Class<VR128X>) -> 0(Class<VR512>)) 
		Combined result: 6.07 cycles

-----VPMOVQBZrrk-----
	VPMOVQBZrrk(1(Class<VR128X>) -> 0(Class<VR128X>))  [5.05;5.05]
		 Successful, latency: 5.05
	VPMOVQBZrrk(3(Class<VR512>) -> 0(Class<VR128X>))  [2.08;5.11]
		Dependencies:
			VEXTRACTF64X2Zrri(1(Class<VR512>) -> 0(Class<VR128X>)) 
			VINSERTF32X4Zrri(2(Class<VR128X>) -> 0(Class<VR512>)) 
		Combined result: 6.11 cycles

-----VPMOVQBZrrkz-----
	VPMOVQBZrrkz(2(Class<VR512>) -> 0(Class<VR128X>))  [2.01;5.03]
		Dependencies:
			VEXTRACTF64X2Zrri(1(Class<VR512>) -> 0(Class<VR128X>)) 
			VINSERTF32X4Zrri(2(Class<VR128X>) -> 0(Class<VR512>)) 
		Combined result: 6.03 cycles

-----VPMOVQDZ128rr-----
	VPMOVQDZ128rr(1(Class<VR128X>) -> 0(Class<VR128X>))  [2.02;2.02]
		 Successful, latency: 2.02

-----VPMOVQDZ128rrk-----
	VPMOVQDZ128rrk(1(Class<VR128X>) -> 0(Class<VR128X>))  [2.02;2.02]
		 Successful, latency: 2.02
	VPMOVQDZ128rrk(3(Class<VR128X>) -> 0(Class<VR128X>))  [2.02;2.02]
		 Successful, latency: 2.02

-----VPMOVQDZ128rrkz-----
	VPMOVQDZ128rrkz(2(Class<VR128X>) -> 0(Class<VR128X>))  [2.02;2.02]
		 Successful, latency: 2.02

-----VPMOVQDZ256rr-----
	VPMOVQDZ256rr(1(Class<VR256X>) -> 0(Class<VR128X>))  [2.02;4.04]
		Dependencies:
			VEXTRACTI32X4Z256rrik(3(Class<VR256X>) -> 0(Class<VR128X>)) 
			VBROADCASTF32X2Z256rr(1(Class<VR128X>) -> 0(Class<VR256X>)) 
		Combined result: 5.04 cycles

-----VPMOVQDZ256rrk-----
	VPMOVQDZ256rrk(1(Class<VR128X>) -> 0(Class<VR128X>))  [4.03;4.03]
		 Successful, latency: 4.03
	VPMOVQDZ256rrk(3(Class<VR256X>) -> 0(Class<VR128X>))  [2.02;4.05]
		Dependencies:
			VEXTRACTI32X4Z256rrik(3(Class<VR256X>) -> 0(Class<VR128X>)) 
			VBROADCASTF32X2Z256rr(1(Class<VR128X>) -> 0(Class<VR256X>)) 
		Combined result: 5.05 cycles

-----VPMOVQDZ256rrkz-----
	VPMOVQDZ256rrkz(2(Class<VR256X>) -> 0(Class<VR128X>))  [2.02;4.04]
		Dependencies:
			VEXTRACTI32X4Z256rrik(3(Class<VR256X>) -> 0(Class<VR128X>)) 
			VBROADCASTF32X2Z256rr(1(Class<VR128X>) -> 0(Class<VR256X>)) 
		Combined result: 5.04 cycles

-----VPMOVQDZrr-----
	VPMOVQDZrr(1(Class<VR512>) -> 0(Class<VR256X>))  [0.995;4.02]
		Dependencies:
			VPMOVDWZrr(1(Class<VR512>) -> 0(Class<VR256X>)) 
			VINSERTF64X4Zrri(2(Class<VR256X>) -> 0(Class<VR512>)) 
		Combined result: 5.02 cycles

-----VPMOVQDZrrk-----
	VPMOVQDZrrk(1(Class<VR256X>) -> 0(Class<VR256X>))  [4.04;4.04]
		 Successful, latency: 4.04
	VPMOVQDZrrk(3(Class<VR512>) -> 0(Class<VR256X>))  [1.01;4.04]
		Dependencies:
			VPMOVDWZrr(1(Class<VR512>) -> 0(Class<VR256X>)) 
			VINSERTF64X4Zrri(2(Class<VR256X>) -> 0(Class<VR512>)) 
		Combined result: 5.04 cycles

-----VPMOVQDZrrkz-----
	VPMOVQDZrrkz(2(Class<VR512>) -> 0(Class<VR256X>))  [1.02;4.04]
		Dependencies:
			VPMOVDWZrr(1(Class<VR512>) -> 0(Class<VR256X>)) 
			VINSERTF64X4Zrri(2(Class<VR256X>) -> 0(Class<VR512>)) 
		Combined result: 5.04 cycles

-----VPMOVQWZ128rr-----
	VPMOVQWZ128rr(1(Class<VR128X>) -> 0(Class<VR128X>))  [2.02;2.02]
		 Successful, latency: 2.02

-----VPMOVQWZ128rrk-----
	VPMOVQWZ128rrk(1(Class<VR128X>) -> 0(Class<VR128X>))  [2.02;2.02]
		 Successful, latency: 2.02
	VPMOVQWZ128rrk(3(Class<VR128X>) -> 0(Class<VR128X>))  [2.02;2.02]
		 Successful, latency: 2.02

-----VPMOVQWZ128rrkz-----
	VPMOVQWZ128rrkz(2(Class<VR128X>) -> 0(Class<VR128X>))  [2.03;2.03]
		 Successful, latency: 2.03

-----VPMOVQWZ256rr-----
	VPMOVQWZ256rr(1(Class<VR256X>) -> 0(Class<VR128X>))  [2.01;4.04]
		Dependencies:
			VEXTRACTI32X4Z256rrik(3(Class<VR256X>) -> 0(Class<VR128X>)) 
			VBROADCASTF32X2Z256rr(1(Class<VR128X>) -> 0(Class<VR256X>)) 
		Combined result: 5.04 cycles

-----VPMOVQWZ256rrk-----
	VPMOVQWZ256rrk(1(Class<VR128X>) -> 0(Class<VR128X>))  [4.05;4.05]
		 Successful, latency: 4.05
	VPMOVQWZ256rrk(3(Class<VR256X>) -> 0(Class<VR128X>))  [2.03;4.05]
		Dependencies:
			VEXTRACTI32X4Z256rrik(3(Class<VR256X>) -> 0(Class<VR128X>)) 
			VBROADCASTF32X2Z256rr(1(Class<VR128X>) -> 0(Class<VR256X>)) 
		Combined result: 5.05 cycles

-----VPMOVQWZ256rrkz-----
	VPMOVQWZ256rrkz(2(Class<VR256X>) -> 0(Class<VR128X>))  [2.03;4.05]
		Dependencies:
			VEXTRACTI32X4Z256rrik(3(Class<VR256X>) -> 0(Class<VR128X>)) 
			VBROADCASTF32X2Z256rr(1(Class<VR128X>) -> 0(Class<VR256X>)) 
		Combined result: 5.05 cycles

-----VPMOVQWZrr-----
	VPMOVQWZrr(1(Class<VR512>) -> 0(Class<VR128X>))  [2.05;5.07]
		Dependencies:
			VEXTRACTF64X2Zrri(1(Class<VR512>) -> 0(Class<VR128X>)) 
			VINSERTF32X4Zrri(2(Class<VR128X>) -> 0(Class<VR512>)) 
		Combined result: 6.07 cycles

-----VPMOVQWZrrk-----
	VPMOVQWZrrk(1(Class<VR128X>) -> 0(Class<VR128X>))  [5.04;5.04]
		 Successful, latency: 5.04
	VPMOVQWZrrk(3(Class<VR512>) -> 0(Class<VR128X>))  [2.07;5.09]
		Dependencies:
			VEXTRACTF64X2Zrri(1(Class<VR512>) -> 0(Class<VR128X>)) 
			VINSERTF32X4Zrri(2(Class<VR128X>) -> 0(Class<VR512>)) 
		Combined result: 6.09 cycles

-----VPMOVQWZrrkz-----
	VPMOVQWZrrkz(2(Class<VR512>) -> 0(Class<VR128X>))  [2.03;5.05]
		Dependencies:
			VEXTRACTF64X2Zrri(1(Class<VR512>) -> 0(Class<VR128X>)) 
			VINSERTF32X4Zrri(2(Class<VR128X>) -> 0(Class<VR512>)) 
		Combined result: 6.05 cycles

-----VPMOVSDBZ128rr-----
	VPMOVSDBZ128rr(1(Class<VR128X>) -> 0(Class<VR128X>))  [2.02;2.02]
		 Successful, latency: 2.02

-----VPMOVSDBZ128rrk-----
	VPMOVSDBZ128rrk(1(Class<VR128X>) -> 0(Class<VR128X>))  [2.03;2.03]
		 Successful, latency: 2.03
	VPMOVSDBZ128rrk(3(Class<VR128X>) -> 0(Class<VR128X>))  [2.01;2.01]
		 Successful, latency: 2.01

-----VPMOVSDBZ128rrkz-----
	VPMOVSDBZ128rrkz(2(Class<VR128X>) -> 0(Class<VR128X>))  [2.04;2.04]
		 Successful, latency: 2.04

-----VPMOVSDBZ256rr-----
	VPMOVSDBZ256rr(1(Class<VR256X>) -> 0(Class<VR128X>))  [2.01;4.03]
		Dependencies:
			VEXTRACTI32X4Z256rrik(3(Class<VR256X>) -> 0(Class<VR128X>)) 
			VBROADCASTF32X2Z256rr(1(Class<VR128X>) -> 0(Class<VR256X>)) 
		Combined result: 5.03 cycles

-----VPMOVSDBZ256rrk-----
	VPMOVSDBZ256rrk(1(Class<VR128X>) -> 0(Class<VR128X>))  [4.04;4.04]
		 Successful, latency: 4.04
	VPMOVSDBZ256rrk(3(Class<VR256X>) -> 0(Class<VR128X>))  [2.01;4.03]
		Dependencies:
			VEXTRACTI32X4Z256rrik(3(Class<VR256X>) -> 0(Class<VR128X>)) 
			VBROADCASTF32X2Z256rr(1(Class<VR128X>) -> 0(Class<VR256X>)) 
		Combined result: 5.03 cycles

-----VPMOVSDBZ256rrkz-----
	VPMOVSDBZ256rrkz(2(Class<VR256X>) -> 0(Class<VR128X>))  [2.04;4.06]
		Dependencies:
			VEXTRACTI32X4Z256rrik(3(Class<VR256X>) -> 0(Class<VR128X>)) 
			VBROADCASTF32X2Z256rr(1(Class<VR128X>) -> 0(Class<VR256X>)) 
		Combined result: 5.06 cycles

-----VPMOVSDBZrr-----
	VPMOVSDBZrr(1(Class<VR512>) -> 0(Class<VR128X>))  [2.02;5.04]
		Dependencies:
			VEXTRACTF64X2Zrri(1(Class<VR512>) -> 0(Class<VR128X>)) 
			VINSERTF32X4Zrri(2(Class<VR128X>) -> 0(Class<VR512>)) 
		Combined result: 6.04 cycles

-----VPMOVSDBZrrk-----
	VPMOVSDBZrrk(1(Class<VR128X>) -> 0(Class<VR128X>))  [5.15;5.15]
		 Successful, latency: 5.15
	VPMOVSDBZrrk(3(Class<VR512>) -> 0(Class<VR128X>))  [2.02;5.04]
		Dependencies:
			VEXTRACTF64X2Zrri(1(Class<VR512>) -> 0(Class<VR128X>)) 
			VINSERTF32X4Zrri(2(Class<VR128X>) -> 0(Class<VR512>)) 
		Combined result: 6.04 cycles

-----VPMOVSDBZrrkz-----
	VPMOVSDBZrrkz(2(Class<VR512>) -> 0(Class<VR128X>))  [2.06;5.08]
		Dependencies:
			VEXTRACTF64X2Zrri(1(Class<VR512>) -> 0(Class<VR128X>)) 
			VINSERTF32X4Zrri(2(Class<VR128X>) -> 0(Class<VR512>)) 
		Combined result: 6.08 cycles

-----VPMOVSDWZ128rr-----
	VPMOVSDWZ128rr(1(Class<VR128X>) -> 0(Class<VR128X>))  [2.02;2.02]
		 Successful, latency: 2.02

-----VPMOVSDWZ128rrk-----
	VPMOVSDWZ128rrk(1(Class<VR128X>) -> 0(Class<VR128X>))  [2.02;2.02]
		 Successful, latency: 2.02
	VPMOVSDWZ128rrk(3(Class<VR128X>) -> 0(Class<VR128X>))  [2.02;2.02]
		 Successful, latency: 2.02

-----VPMOVSDWZ128rrkz-----
	VPMOVSDWZ128rrkz(2(Class<VR128X>) -> 0(Class<VR128X>))  [2.02;2.02]
		 Successful, latency: 2.02

-----VPMOVSDWZ256rr-----
	VPMOVSDWZ256rr(1(Class<VR256X>) -> 0(Class<VR128X>))  [2.02;4.04]
		Dependencies:
			VEXTRACTI32X4Z256rrik(3(Class<VR256X>) -> 0(Class<VR128X>)) 
			VBROADCASTF32X2Z256rr(1(Class<VR128X>) -> 0(Class<VR256X>)) 
		Combined result: 5.04 cycles

-----VPMOVSDWZ256rrk-----
	VPMOVSDWZ256rrk(1(Class<VR128X>) -> 0(Class<VR128X>))  [4.04;4.04]
		 Successful, latency: 4.04
	VPMOVSDWZ256rrk(3(Class<VR256X>) -> 0(Class<VR128X>))  [2.01;4.03]
		Dependencies:
			VEXTRACTI32X4Z256rrik(3(Class<VR256X>) -> 0(Class<VR128X>)) 
			VBROADCASTF32X2Z256rr(1(Class<VR128X>) -> 0(Class<VR256X>)) 
		Combined result: 5.03 cycles

-----VPMOVSDWZ256rrkz-----
	VPMOVSDWZ256rrkz(2(Class<VR256X>) -> 0(Class<VR128X>))  [2.03;4.05]
		Dependencies:
			VEXTRACTI32X4Z256rrik(3(Class<VR256X>) -> 0(Class<VR128X>)) 
			VBROADCASTF32X2Z256rr(1(Class<VR128X>) -> 0(Class<VR256X>)) 
		Combined result: 5.05 cycles

-----VPMOVSDWZrr-----
	VPMOVSDWZrr(1(Class<VR512>) -> 0(Class<VR256X>))  [1.04;4.07]
		Dependencies:
			VPMOVDWZrr(1(Class<VR512>) -> 0(Class<VR256X>)) 
			VINSERTF64X4Zrri(2(Class<VR256X>) -> 0(Class<VR512>)) 
		Combined result: 5.07 cycles

-----VPMOVSDWZrrk-----
	VPMOVSDWZrrk(1(Class<VR256X>) -> 0(Class<VR256X>))  [4.02;4.02]
		 Successful, latency: 4.02
	VPMOVSDWZrrk(3(Class<VR512>) -> 0(Class<VR256X>))  [1.02;4.05]
		Dependencies:
			VPMOVDWZrr(1(Class<VR512>) -> 0(Class<VR256X>)) 
			VINSERTF64X4Zrri(2(Class<VR256X>) -> 0(Class<VR512>)) 
		Combined result: 5.05 cycles

-----VPMOVSDWZrrkz-----
	VPMOVSDWZrrkz(2(Class<VR512>) -> 0(Class<VR256X>))  [1.05;4.08]
		Dependencies:
			VPMOVDWZrr(1(Class<VR512>) -> 0(Class<VR256X>)) 
			VINSERTF64X4Zrri(2(Class<VR256X>) -> 0(Class<VR512>)) 
		Combined result: 5.08 cycles

-----VPMOVSQBZ128rr-----
	VPMOVSQBZ128rr(1(Class<VR128X>) -> 0(Class<VR128X>))  [2.02;2.02]
		 Successful, latency: 2.02

-----VPMOVSQBZ128rrk-----
	VPMOVSQBZ128rrk(1(Class<VR128X>) -> 0(Class<VR128X>))  [2.02;2.02]
		 Successful, latency: 2.02
	VPMOVSQBZ128rrk(3(Class<VR128X>) -> 0(Class<VR128X>))  [2.02;2.02]
		 Successful, latency: 2.02

-----VPMOVSQBZ128rrkz-----
	VPMOVSQBZ128rrkz(2(Class<VR128X>) -> 0(Class<VR128X>))  [2.02;2.02]
		 Successful, latency: 2.02

-----VPMOVSQBZ256rr-----
	VPMOVSQBZ256rr(1(Class<VR256X>) -> 0(Class<VR128X>))  [2.01;4.04]
		Dependencies:
			VEXTRACTI32X4Z256rrik(3(Class<VR256X>) -> 0(Class<VR128X>)) 
			VBROADCASTF32X2Z256rr(1(Class<VR128X>) -> 0(Class<VR256X>)) 
		Combined result: 5.04 cycles

-----VPMOVSQBZ256rrk-----
	VPMOVSQBZ256rrk(1(Class<VR128X>) -> 0(Class<VR128X>))  [4.05;4.05]
		 Successful, latency: 4.05
	VPMOVSQBZ256rrk(3(Class<VR256X>) -> 0(Class<VR128X>))  [2.02;4.04]
		Dependencies:
			VEXTRACTI32X4Z256rrik(3(Class<VR256X>) -> 0(Class<VR128X>)) 
			VBROADCASTF32X2Z256rr(1(Class<VR128X>) -> 0(Class<VR256X>)) 
		Combined result: 5.04 cycles

-----VPMOVSQBZ256rrkz-----
	VPMOVSQBZ256rrkz(2(Class<VR256X>) -> 0(Class<VR128X>))  [2.04;4.06]
		Dependencies:
			VEXTRACTI32X4Z256rrik(3(Class<VR256X>) -> 0(Class<VR128X>)) 
			VBROADCASTF32X2Z256rr(1(Class<VR128X>) -> 0(Class<VR256X>)) 
		Combined result: 5.06 cycles

-----VPMOVSQBZrr-----
	VPMOVSQBZrr(1(Class<VR512>) -> 0(Class<VR128X>))  [2.05;5.07]
		Dependencies:
			VEXTRACTF64X2Zrri(1(Class<VR512>) -> 0(Class<VR128X>)) 
			VINSERTF32X4Zrri(2(Class<VR128X>) -> 0(Class<VR512>)) 
		Combined result: 6.07 cycles

-----VPMOVSQBZrrk-----
	VPMOVSQBZrrk(1(Class<VR128X>) -> 0(Class<VR128X>))  [5.04;5.04]
		 Successful, latency: 5.04
	VPMOVSQBZrrk(3(Class<VR512>) -> 0(Class<VR128X>))  [2.03;5.05]
		Dependencies:
			VEXTRACTF64X2Zrri(1(Class<VR512>) -> 0(Class<VR128X>)) 
			VINSERTF32X4Zrri(2(Class<VR128X>) -> 0(Class<VR512>)) 
		Combined result: 6.05 cycles

-----VPMOVSQBZrrkz-----
	VPMOVSQBZrrkz(2(Class<VR512>) -> 0(Class<VR128X>))  [2.05;5.07]
		Dependencies:
			VEXTRACTF64X2Zrri(1(Class<VR512>) -> 0(Class<VR128X>)) 
			VINSERTF32X4Zrri(2(Class<VR128X>) -> 0(Class<VR512>)) 
		Combined result: 6.07 cycles

-----VPMOVSQDZ128rr-----
	VPMOVSQDZ128rr(1(Class<VR128X>) -> 0(Class<VR128X>))  [2.01;2.01]
		 Successful, latency: 2.01

-----VPMOVSQDZ128rrk-----
	VPMOVSQDZ128rrk(1(Class<VR128X>) -> 0(Class<VR128X>))  [2.01;2.01]
		 Successful, latency: 2.01
	VPMOVSQDZ128rrk(3(Class<VR128X>) -> 0(Class<VR128X>))  [2.02;2.02]
		 Successful, latency: 2.02

-----VPMOVSQDZ128rrkz-----
	VPMOVSQDZ128rrkz(2(Class<VR128X>) -> 0(Class<VR128X>))  [2.03;2.03]
		 Successful, latency: 2.03

-----VPMOVSQDZ256rr-----
	VPMOVSQDZ256rr(1(Class<VR256X>) -> 0(Class<VR128X>))  [2.01;4.04]
		Dependencies:
			VEXTRACTI32X4Z256rrik(3(Class<VR256X>) -> 0(Class<VR128X>)) 
			VBROADCASTF32X2Z256rr(1(Class<VR128X>) -> 0(Class<VR256X>)) 
		Combined result: 5.04 cycles

-----VPMOVSQDZ256rrk-----
	VPMOVSQDZ256rrk(1(Class<VR128X>) -> 0(Class<VR128X>))  [4.06;4.06]
		 Successful, latency: 4.06
	VPMOVSQDZ256rrk(3(Class<VR256X>) -> 0(Class<VR128X>))  [2.01;4.03]
		Dependencies:
			VEXTRACTI32X4Z256rrik(3(Class<VR256X>) -> 0(Class<VR128X>)) 
			VBROADCASTF32X2Z256rr(1(Class<VR128X>) -> 0(Class<VR256X>)) 
		Combined result: 5.03 cycles

-----VPMOVSQDZ256rrkz-----
	VPMOVSQDZ256rrkz(2(Class<VR256X>) -> 0(Class<VR128X>))  [2.04;4.07]
		Dependencies:
			VEXTRACTI32X4Z256rrik(3(Class<VR256X>) -> 0(Class<VR128X>)) 
			VBROADCASTF32X2Z256rr(1(Class<VR128X>) -> 0(Class<VR256X>)) 
		Combined result: 5.07 cycles

-----VPMOVSQDZrr-----
	VPMOVSQDZrr(1(Class<VR512>) -> 0(Class<VR256X>))  [1;4.03]
		Dependencies:
			VPMOVDWZrr(1(Class<VR512>) -> 0(Class<VR256X>)) 
			VINSERTF64X4Zrri(2(Class<VR256X>) -> 0(Class<VR512>)) 
		Combined result: 5.03 cycles

-----VPMOVSQDZrrk-----
	VPMOVSQDZrrk(1(Class<VR256X>) -> 0(Class<VR256X>))  [4.03;4.03]
		 Successful, latency: 4.03
	VPMOVSQDZrrk(3(Class<VR512>) -> 0(Class<VR256X>))  [1.03;4.05]
		Dependencies:
			VPMOVDWZrr(1(Class<VR512>) -> 0(Class<VR256X>)) 
			VINSERTF64X4Zrri(2(Class<VR256X>) -> 0(Class<VR512>)) 
		Combined result: 5.05 cycles

-----VPMOVSQDZrrkz-----
	VPMOVSQDZrrkz(2(Class<VR512>) -> 0(Class<VR256X>))  [1.03;4.05]
		Dependencies:
			VPMOVDWZrr(1(Class<VR512>) -> 0(Class<VR256X>)) 
			VINSERTF64X4Zrri(2(Class<VR256X>) -> 0(Class<VR512>)) 
		Combined result: 5.05 cycles

-----VPMOVSQWZ128rr-----
	VPMOVSQWZ128rr(1(Class<VR128X>) -> 0(Class<VR128X>))  [2.03;2.03]
		 Successful, latency: 2.03

-----VPMOVSQWZ128rrk-----
	VPMOVSQWZ128rrk(1(Class<VR128X>) -> 0(Class<VR128X>))  [2.02;2.02]
		 Successful, latency: 2.02
	VPMOVSQWZ128rrk(3(Class<VR128X>) -> 0(Class<VR128X>))  [2.02;2.02]
		 Successful, latency: 2.02

-----VPMOVSQWZ128rrkz-----
	VPMOVSQWZ128rrkz(2(Class<VR128X>) -> 0(Class<VR128X>))  [2.02;2.02]
		 Successful, latency: 2.02

-----VPMOVSQWZ256rr-----
	VPMOVSQWZ256rr(1(Class<VR256X>) -> 0(Class<VR128X>))  [2.01;4.03]
		Dependencies:
			VEXTRACTI32X4Z256rrik(3(Class<VR256X>) -> 0(Class<VR128X>)) 
			VBROADCASTF32X2Z256rr(1(Class<VR128X>) -> 0(Class<VR256X>)) 
		Combined result: 5.03 cycles

-----VPMOVSQWZ256rrk-----
	VPMOVSQWZ256rrk(1(Class<VR128X>) -> 0(Class<VR128X>))  [4.02;4.02]
		 Successful, latency: 4.02
	VPMOVSQWZ256rrk(3(Class<VR256X>) -> 0(Class<VR128X>))  [2.02;4.04]
		Dependencies:
			VEXTRACTI32X4Z256rrik(3(Class<VR256X>) -> 0(Class<VR128X>)) 
			VBROADCASTF32X2Z256rr(1(Class<VR128X>) -> 0(Class<VR256X>)) 
		Combined result: 5.04 cycles

-----VPMOVSQWZ256rrkz-----
	VPMOVSQWZ256rrkz(2(Class<VR256X>) -> 0(Class<VR128X>))  [2.05;4.07]
		Dependencies:
			VEXTRACTI32X4Z256rrik(3(Class<VR256X>) -> 0(Class<VR128X>)) 
			VBROADCASTF32X2Z256rr(1(Class<VR128X>) -> 0(Class<VR256X>)) 
		Combined result: 5.07 cycles

-----VPMOVSQWZrr-----
	VPMOVSQWZrr(1(Class<VR512>) -> 0(Class<VR128X>))  [2.05;5.07]
		Dependencies:
			VEXTRACTF64X2Zrri(1(Class<VR512>) -> 0(Class<VR128X>)) 
			VINSERTF32X4Zrri(2(Class<VR128X>) -> 0(Class<VR512>)) 
		Combined result: 6.07 cycles

-----VPMOVSQWZrrk-----
	VPMOVSQWZrrk(1(Class<VR128X>) -> 0(Class<VR128X>))  [5.03;5.03]
		 Successful, latency: 5.03
	VPMOVSQWZrrk(3(Class<VR512>) -> 0(Class<VR128X>))  [2.04;5.06]
		Dependencies:
			VEXTRACTF64X2Zrri(1(Class<VR512>) -> 0(Class<VR128X>)) 
			VINSERTF32X4Zrri(2(Class<VR128X>) -> 0(Class<VR512>)) 
		Combined result: 6.06 cycles

-----VPMOVSQWZrrkz-----
	VPMOVSQWZrrkz(2(Class<VR512>) -> 0(Class<VR128X>))  [2.03;5.05]
		Dependencies:
			VEXTRACTF64X2Zrri(1(Class<VR512>) -> 0(Class<VR128X>)) 
			VINSERTF32X4Zrri(2(Class<VR128X>) -> 0(Class<VR512>)) 
		Combined result: 6.05 cycles

-----VPMOVSWBZ128rr-----
	VPMOVSWBZ128rr(1(Class<VR128X>) -> 0(Class<VR128X>))  [2.03;2.03]
		 Successful, latency: 2.03

-----VPMOVSWBZ128rrk-----
	VPMOVSWBZ128rrk(1(Class<VR128X>) -> 0(Class<VR128X>))  [2.02;2.02]
		 Successful, latency: 2.02
	VPMOVSWBZ128rrk(3(Class<VR128X>) -> 0(Class<VR128X>))  [2.02;2.02]
		 Successful, latency: 2.02

-----VPMOVSWBZ128rrkz-----
	VPMOVSWBZ128rrkz(2(Class<VR128X>) -> 0(Class<VR128X>))  [2.01;2.01]
		 Successful, latency: 2.01

-----VPMOVSWBZ256rr-----
	VPMOVSWBZ256rr(1(Class<VR256X>) -> 0(Class<VR128X>))  [2.01;4.03]
		Dependencies:
			VEXTRACTI32X4Z256rrik(3(Class<VR256X>) -> 0(Class<VR128X>)) 
			VBROADCASTF32X2Z256rr(1(Class<VR128X>) -> 0(Class<VR256X>)) 
		Combined result: 5.03 cycles

-----VPMOVSWBZ256rrk-----
	VPMOVSWBZ256rrk(1(Class<VR128X>) -> 0(Class<VR128X>))  [4.03;4.03]
		 Successful, latency: 4.03
	VPMOVSWBZ256rrk(3(Class<VR256X>) -> 0(Class<VR128X>))  [2.02;4.04]
		Dependencies:
			VEXTRACTI32X4Z256rrik(3(Class<VR256X>) -> 0(Class<VR128X>)) 
			VBROADCASTF32X2Z256rr(1(Class<VR128X>) -> 0(Class<VR256X>)) 
		Combined result: 5.04 cycles

-----VPMOVSWBZ256rrkz-----
	VPMOVSWBZ256rrkz(2(Class<VR256X>) -> 0(Class<VR128X>))  [2.01;4.04]
		Dependencies:
			VEXTRACTI32X4Z256rrik(3(Class<VR256X>) -> 0(Class<VR128X>)) 
			VBROADCASTF32X2Z256rr(1(Class<VR128X>) -> 0(Class<VR256X>)) 
		Combined result: 5.04 cycles

-----VPMOVSWBZrr-----
	VPMOVSWBZrr(1(Class<VR512>) -> 0(Class<VR256X>))  [1.01;4.03]
		Dependencies:
			VPMOVDWZrr(1(Class<VR512>) -> 0(Class<VR256X>)) 
			VINSERTF64X4Zrri(2(Class<VR256X>) -> 0(Class<VR512>)) 
		Combined result: 5.03 cycles

-----VPMOVSWBZrrk-----
	VPMOVSWBZrrk(1(Class<VR256X>) -> 0(Class<VR256X>))  [4.04;4.04]
		 Successful, latency: 4.04
	VPMOVSWBZrrk(3(Class<VR512>) -> 0(Class<VR256X>))  [1.04;4.06]
		Dependencies:
			VPMOVDWZrr(1(Class<VR512>) -> 0(Class<VR256X>)) 
			VINSERTF64X4Zrri(2(Class<VR256X>) -> 0(Class<VR512>)) 
		Combined result: 5.06 cycles

-----VPMOVSWBZrrkz-----
	VPMOVSWBZrrkz(2(Class<VR512>) -> 0(Class<VR256X>))  [1.03;4.05]
		Dependencies:
			VPMOVDWZrr(1(Class<VR512>) -> 0(Class<VR256X>)) 
			VINSERTF64X4Zrri(2(Class<VR256X>) -> 0(Class<VR512>)) 
		Combined result: 5.05 cycles

-----VPMOVSXBDYrr-----
	VPMOVSXBDYrr(1(Class<VR128>) -> 0(Class<VR256>))  [2.01;4.05]
		Dependencies:
			VEXTRACTF128rri(1(Class<VR256>) -> 0(Class<VR128>)) 
			VPBROADCASTWYrr(1(Class<VR128>) -> 0(Class<VR256>)) 
		Combined result: 5.06 cycles

-----VPMOVSXBDZ128rr-----
	VPMOVSXBDZ128rr(1(Class<VR128X>) -> 0(Class<VR128X>))  [2.01;2.01]
		 Successful, latency: 2.01

-----VPMOVSXBDZ128rrk-----
	VPMOVSXBDZ128rrk(1(Class<VR128X>) -> 0(Class<VR128X>))  [2.02;2.02]
		 Successful, latency: 2.02
	VPMOVSXBDZ128rrk(3(Class<VR128X>) -> 0(Class<VR128X>))  [2.01;2.01]
		 Successful, latency: 2.01

-----VPMOVSXBDZ128rrkz-----
	VPMOVSXBDZ128rrkz(2(Class<VR128X>) -> 0(Class<VR128X>))  [2.01;2.01]
		 Successful, latency: 2.01

-----VPMOVSXBDZ256rr-----
	VPMOVSXBDZ256rr(1(Class<VR128X>) -> 0(Class<VR256X>))  [2;4.02]
		Dependencies:
			VEXTRACTI32X4Z256rrik(3(Class<VR256X>) -> 0(Class<VR128X>)) 
			VBROADCASTF32X2Z256rr(1(Class<VR128X>) -> 0(Class<VR256X>)) 
		Combined result: 5.04 cycles

-----VPMOVSXBDZ256rrk-----
	VPMOVSXBDZ256rrk(1(Class<VR256X>) -> 0(Class<VR256X>))  [2.02;2.02]
		 Successful, latency: 2.02
	VPMOVSXBDZ256rrk(3(Class<VR128X>) -> 0(Class<VR256X>))  [2.01;4.03]
		Dependencies:
			VEXTRACTI32X4Z256rrik(3(Class<VR256X>) -> 0(Class<VR128X>)) 
			VBROADCASTF32X2Z256rr(1(Class<VR128X>) -> 0(Class<VR256X>)) 
		Combined result: 5.05 cycles

-----VPMOVSXBDZ256rrkz-----
	VPMOVSXBDZ256rrkz(2(Class<VR128X>) -> 0(Class<VR256X>))  [1.99;4.01]
		Dependencies:
			VEXTRACTI32X4Z256rrik(3(Class<VR256X>) -> 0(Class<VR128X>)) 
			VBROADCASTF32X2Z256rr(1(Class<VR128X>) -> 0(Class<VR256X>)) 
		Combined result: 5.03 cycles

-----VPMOVSXBDZrr-----
	VPMOVSXBDZrr(1(Class<VR128X>) -> 0(Class<VR512>))  [4.01;7.04]
		Dependencies:
			VEXTRACTF64X2Zrri(1(Class<VR512>) -> 0(Class<VR128X>)) 
			VINSERTF32X4Zrri(2(Class<VR128X>) -> 0(Class<VR512>)) 
		Combined result: 8.06 cycles

-----VPMOVSXBDZrrk-----
	VPMOVSXBDZrrk(1(Class<VR512>) -> 0(Class<VR512>))  [4.02;4.02]
		 Successful, latency: 4.02
	VPMOVSXBDZrrk(3(Class<VR128X>) -> 0(Class<VR512>))  [4.01;7.03]
		Dependencies:
			VEXTRACTF64X2Zrri(1(Class<VR512>) -> 0(Class<VR128X>)) 
			VINSERTF32X4Zrri(2(Class<VR128X>) -> 0(Class<VR512>)) 
		Combined result: 8.06 cycles

-----VPMOVSXBDZrrkz-----
	VPMOVSXBDZrrkz(2(Class<VR128X>) -> 0(Class<VR512>))  [4;7.03]
		Dependencies:
			VEXTRACTF64X2Zrri(1(Class<VR512>) -> 0(Class<VR128X>)) 
			VINSERTF32X4Zrri(2(Class<VR128X>) -> 0(Class<VR512>)) 
		Combined result: 8.05 cycles

-----VPMOVSXBDrr-----
	VPMOVSXBDrr(1(Class<VR128>) -> 0(Class<VR128>))  [2.05;2.05]
		 Successful, latency: 2.05

-----VPMOVSXBQYrr-----
	VPMOVSXBQYrr(1(Class<VR128>) -> 0(Class<VR256>))  [1.99;4.02]
		Dependencies:
			VEXTRACTF128rri(1(Class<VR256>) -> 0(Class<VR128>)) 
			VPBROADCASTWYrr(1(Class<VR128>) -> 0(Class<VR256>)) 
		Combined result: 5.03 cycles

-----VPMOVSXBQZ128rr-----
	VPMOVSXBQZ128rr(1(Class<VR128X>) -> 0(Class<VR128X>))  [2.02;2.02]
		 Successful, latency: 2.02

-----VPMOVSXBQZ128rrk-----
	VPMOVSXBQZ128rrk(1(Class<VR128X>) -> 0(Class<VR128X>))  [2.03;2.03]
		 Successful, latency: 2.03
	VPMOVSXBQZ128rrk(3(Class<VR128X>) -> 0(Class<VR128X>))  [2.03;2.03]
		 Successful, latency: 2.03

-----VPMOVSXBQZ128rrkz-----
	VPMOVSXBQZ128rrkz(2(Class<VR128X>) -> 0(Class<VR128X>))  [2.03;2.03]
		 Successful, latency: 2.03

-----VPMOVSXBQZ256rr-----
	VPMOVSXBQZ256rr(1(Class<VR128X>) -> 0(Class<VR256X>))  [2;4.02]
		Dependencies:
			VEXTRACTI32X4Z256rrik(3(Class<VR256X>) -> 0(Class<VR128X>)) 
			VBROADCASTF32X2Z256rr(1(Class<VR128X>) -> 0(Class<VR256X>)) 
		Combined result: 5.04 cycles

-----VPMOVSXBQZ256rrk-----
	VPMOVSXBQZ256rrk(1(Class<VR256X>) -> 0(Class<VR256X>))  [2.02;2.02]
		 Successful, latency: 2.02
	VPMOVSXBQZ256rrk(3(Class<VR128X>) -> 0(Class<VR256X>))  [1.99;4.01]
		Dependencies:
			VEXTRACTI32X4Z256rrik(3(Class<VR256X>) -> 0(Class<VR128X>)) 
			VBROADCASTF32X2Z256rr(1(Class<VR128X>) -> 0(Class<VR256X>)) 
		Combined result: 5.04 cycles

-----VPMOVSXBQZ256rrkz-----
	VPMOVSXBQZ256rrkz(2(Class<VR128X>) -> 0(Class<VR256X>))  [2;4.02]
		Dependencies:
			VEXTRACTI32X4Z256rrik(3(Class<VR256X>) -> 0(Class<VR128X>)) 
			VBROADCASTF32X2Z256rr(1(Class<VR128X>) -> 0(Class<VR256X>)) 
		Combined result: 5.04 cycles

-----VPMOVSXBQZrr-----
	VPMOVSXBQZrr(1(Class<VR128X>) -> 0(Class<VR512>))  [4.01;7.03]
		Dependencies:
			VEXTRACTF64X2Zrri(1(Class<VR512>) -> 0(Class<VR128X>)) 
			VINSERTF32X4Zrri(2(Class<VR128X>) -> 0(Class<VR512>)) 
		Combined result: 8.06 cycles

-----VPMOVSXBQZrrk-----
	VPMOVSXBQZrrk(1(Class<VR512>) -> 0(Class<VR512>))  [4.02;4.02]
		 Successful, latency: 4.02
	VPMOVSXBQZrrk(3(Class<VR128X>) -> 0(Class<VR512>))  [4.02;7.04]
		Dependencies:
			VEXTRACTF64X2Zrri(1(Class<VR512>) -> 0(Class<VR128X>)) 
			VINSERTF32X4Zrri(2(Class<VR128X>) -> 0(Class<VR512>)) 
		Combined result: 8.07 cycles

-----VPMOVSXBQZrrkz-----
	VPMOVSXBQZrrkz(2(Class<VR128X>) -> 0(Class<VR512>))  [4.02;7.04]
		Dependencies:
			VEXTRACTF64X2Zrri(1(Class<VR512>) -> 0(Class<VR128X>)) 
			VINSERTF32X4Zrri(2(Class<VR128X>) -> 0(Class<VR512>)) 
		Combined result: 8.07 cycles

-----VPMOVSXBQrr-----
	VPMOVSXBQrr(1(Class<VR128>) -> 0(Class<VR128>))  [2.02;2.02]
		 Successful, latency: 2.02

-----VPMOVSXBWYrr-----
	VPMOVSXBWYrr(1(Class<VR128>) -> 0(Class<VR256>))  [2;4.03]
		Dependencies:
			VEXTRACTF128rri(1(Class<VR256>) -> 0(Class<VR128>)) 
			VPBROADCASTWYrr(1(Class<VR128>) -> 0(Class<VR256>)) 
		Combined result: 5.04 cycles

-----VPMOVSXBWZ128rr-----
	VPMOVSXBWZ128rr(1(Class<VR128X>) -> 0(Class<VR128X>))  [2.02;2.02]
		 Successful, latency: 2.02

-----VPMOVSXBWZ128rrk-----
	VPMOVSXBWZ128rrk(1(Class<VR128X>) -> 0(Class<VR128X>))  [2.02;2.02]
		 Successful, latency: 2.02
	VPMOVSXBWZ128rrk(3(Class<VR128X>) -> 0(Class<VR128X>))  [2.02;2.02]
		 Successful, latency: 2.02

-----VPMOVSXBWZ128rrkz-----
	VPMOVSXBWZ128rrkz(2(Class<VR128X>) -> 0(Class<VR128X>))  [2.02;2.02]
		 Successful, latency: 2.02

-----VPMOVSXBWZ256rr-----
	VPMOVSXBWZ256rr(1(Class<VR128X>) -> 0(Class<VR256X>))  [2;4.02]
		Dependencies:
			VEXTRACTI32X4Z256rrik(3(Class<VR256X>) -> 0(Class<VR128X>)) 
			VBROADCASTF32X2Z256rr(1(Class<VR128X>) -> 0(Class<VR256X>)) 
		Combined result: 5.05 cycles

-----VPMOVSXBWZ256rrk-----
	VPMOVSXBWZ256rrk(1(Class<VR256X>) -> 0(Class<VR256X>))  [2.02;2.02]
		 Successful, latency: 2.02
	VPMOVSXBWZ256rrk(3(Class<VR128X>) -> 0(Class<VR256X>))  [2;4.02]
		Dependencies:
			VEXTRACTI32X4Z256rrik(3(Class<VR256X>) -> 0(Class<VR128X>)) 
			VBROADCASTF32X2Z256rr(1(Class<VR128X>) -> 0(Class<VR256X>)) 
		Combined result: 5.04 cycles

-----VPMOVSXBWZ256rrkz-----
	VPMOVSXBWZ256rrkz(2(Class<VR128X>) -> 0(Class<VR256X>))  [1.99;4.02]
		Dependencies:
			VEXTRACTI32X4Z256rrik(3(Class<VR256X>) -> 0(Class<VR128X>)) 
			VBROADCASTF32X2Z256rr(1(Class<VR128X>) -> 0(Class<VR256X>)) 
		Combined result: 5.04 cycles

-----VPMOVSXBWZrr-----
	VPMOVSXBWZrr(1(Class<VR256X>) -> 0(Class<VR512>))  [3.99;7.02]
		Dependencies:
			VPMOVDWZrr(1(Class<VR512>) -> 0(Class<VR256X>)) 
			VINSERTF64X4Zrri(2(Class<VR256X>) -> 0(Class<VR512>)) 
		Combined result: 8.06 cycles

-----VPMOVSXBWZrrk-----
	VPMOVSXBWZrrk(1(Class<VR512>) -> 0(Class<VR512>))  [4.04;4.04]
		 Successful, latency: 4.04
	VPMOVSXBWZrrk(3(Class<VR256X>) -> 0(Class<VR512>))  [4.03;7.06]
		Dependencies:
			VPMOVDWZrr(1(Class<VR512>) -> 0(Class<VR256X>)) 
			VINSERTF64X4Zrri(2(Class<VR256X>) -> 0(Class<VR512>)) 
		Combined result: 8.09 cycles

-----VPMOVSXBWZrrkz-----
	VPMOVSXBWZrrkz(2(Class<VR256X>) -> 0(Class<VR512>))  [3.99;7.02]
		Dependencies:
			VPMOVDWZrr(1(Class<VR512>) -> 0(Class<VR256X>)) 
			VINSERTF64X4Zrri(2(Class<VR256X>) -> 0(Class<VR512>)) 
		Combined result: 8.05 cycles

-----VPMOVSXBWrr-----
	VPMOVSXBWrr(1(Class<VR128>) -> 0(Class<VR128>))  [2.04;2.04]
		 Successful, latency: 2.04

-----VPMOVSXDQYrr-----
	VPMOVSXDQYrr(1(Class<VR128>) -> 0(Class<VR256>))  [2;4.04]
		Dependencies:
			VEXTRACTF128rri(1(Class<VR256>) -> 0(Class<VR128>)) 
			VPBROADCASTWYrr(1(Class<VR128>) -> 0(Class<VR256>)) 
		Combined result: 5.05 cycles

-----VPMOVSXDQZ128rr-----
	VPMOVSXDQZ128rr(1(Class<VR128X>) -> 0(Class<VR128X>))  [2.02;2.02]
		 Successful, latency: 2.02

-----VPMOVSXDQZ128rrk-----
	VPMOVSXDQZ128rrk(1(Class<VR128X>) -> 0(Class<VR128X>))  [2.02;2.02]
		 Successful, latency: 2.02
	VPMOVSXDQZ128rrk(3(Class<VR128X>) -> 0(Class<VR128X>))  [2.02;2.02]
		 Successful, latency: 2.02

-----VPMOVSXDQZ128rrkz-----
	VPMOVSXDQZ128rrkz(2(Class<VR128X>) -> 0(Class<VR128X>))  [2.02;2.02]
		 Successful, latency: 2.02

-----VPMOVSXDQZ256rr-----
	VPMOVSXDQZ256rr(1(Class<VR128X>) -> 0(Class<VR256X>))  [1.99;4.01]
		Dependencies:
			VEXTRACTI32X4Z256rrik(3(Class<VR256X>) -> 0(Class<VR128X>)) 
			VBROADCASTF32X2Z256rr(1(Class<VR128X>) -> 0(Class<VR256X>)) 
		Combined result: 5.03 cycles

-----VPMOVSXDQZ256rrk-----
	VPMOVSXDQZ256rrk(1(Class<VR256X>) -> 0(Class<VR256X>))  [2.01;2.01]
		 Successful, latency: 2.01
	VPMOVSXDQZ256rrk(3(Class<VR128X>) -> 0(Class<VR256X>))  [1.99;4.01]
		Dependencies:
			VEXTRACTI32X4Z256rrik(3(Class<VR256X>) -> 0(Class<VR128X>)) 
			VBROADCASTF32X2Z256rr(1(Class<VR128X>) -> 0(Class<VR256X>)) 
		Combined result: 5.03 cycles

-----VPMOVSXDQZ256rrkz-----
	VPMOVSXDQZ256rrkz(2(Class<VR128X>) -> 0(Class<VR256X>))  [1.98;4]
		Dependencies:
			VEXTRACTI32X4Z256rrik(3(Class<VR256X>) -> 0(Class<VR128X>)) 
			VBROADCASTF32X2Z256rr(1(Class<VR128X>) -> 0(Class<VR256X>)) 
		Combined result: 5.02 cycles

-----VPMOVSXDQZrr-----
	VPMOVSXDQZrr(1(Class<VR256X>) -> 0(Class<VR512>))  [4.03;7.05]
		Dependencies:
			VPMOVDWZrr(1(Class<VR512>) -> 0(Class<VR256X>)) 
			VINSERTF64X4Zrri(2(Class<VR256X>) -> 0(Class<VR512>)) 
		Combined result: 8.09 cycles

-----VPMOVSXDQZrrk-----
	VPMOVSXDQZrrk(1(Class<VR512>) -> 0(Class<VR512>))  [4.04;4.04]
		 Successful, latency: 4.04
	VPMOVSXDQZrrk(3(Class<VR256X>) -> 0(Class<VR512>))  [4.01;7.04]
		Dependencies:
			VPMOVDWZrr(1(Class<VR512>) -> 0(Class<VR256X>)) 
			VINSERTF64X4Zrri(2(Class<VR256X>) -> 0(Class<VR512>)) 
		Combined result: 8.08 cycles

-----VPMOVSXDQZrrkz-----
	VPMOVSXDQZrrkz(2(Class<VR256X>) -> 0(Class<VR512>))  [3.99;7.02]
		Dependencies:
			VPMOVDWZrr(1(Class<VR512>) -> 0(Class<VR256X>)) 
			VINSERTF64X4Zrri(2(Class<VR256X>) -> 0(Class<VR512>)) 
		Combined result: 8.05 cycles

-----VPMOVSXDQrr-----
	VPMOVSXDQrr(1(Class<VR128>) -> 0(Class<VR128>))  [2.03;2.03]
		 Successful, latency: 2.03

-----VPMOVSXWDYrr-----
	VPMOVSXWDYrr(1(Class<VR128>) -> 0(Class<VR256>))  [1.99;4.03]
		Dependencies:
			VEXTRACTF128rri(1(Class<VR256>) -> 0(Class<VR128>)) 
			VPBROADCASTWYrr(1(Class<VR128>) -> 0(Class<VR256>)) 
		Combined result: 5.04 cycles

-----VPMOVSXWDZ128rr-----
	VPMOVSXWDZ128rr(1(Class<VR128X>) -> 0(Class<VR128X>))  [2.02;2.02]
		 Successful, latency: 2.02

-----VPMOVSXWDZ128rrk-----
	VPMOVSXWDZ128rrk(1(Class<VR128X>) -> 0(Class<VR128X>))  [2.03;2.03]
		 Successful, latency: 2.03
	VPMOVSXWDZ128rrk(3(Class<VR128X>) -> 0(Class<VR128X>))  [2.01;2.01]
		 Successful, latency: 2.01

-----VPMOVSXWDZ128rrkz-----
	VPMOVSXWDZ128rrkz(2(Class<VR128X>) -> 0(Class<VR128X>))  [2.01;2.01]
		 Successful, latency: 2.01

-----VPMOVSXWDZ256rr-----
	VPMOVSXWDZ256rr(1(Class<VR128X>) -> 0(Class<VR256X>))  [2;4.03]
		Dependencies:
			VEXTRACTI32X4Z256rrik(3(Class<VR256X>) -> 0(Class<VR128X>)) 
			VBROADCASTF32X2Z256rr(1(Class<VR128X>) -> 0(Class<VR256X>)) 
		Combined result: 5.05 cycles

-----VPMOVSXWDZ256rrk-----
	VPMOVSXWDZ256rrk(1(Class<VR256X>) -> 0(Class<VR256X>))  [2.02;2.02]
		 Successful, latency: 2.02
	VPMOVSXWDZ256rrk(3(Class<VR128X>) -> 0(Class<VR256X>))  [1.99;4.01]
		Dependencies:
			VEXTRACTI32X4Z256rrik(3(Class<VR256X>) -> 0(Class<VR128X>)) 
			VBROADCASTF32X2Z256rr(1(Class<VR128X>) -> 0(Class<VR256X>)) 
		Combined result: 5.03 cycles

-----VPMOVSXWDZ256rrkz-----
	VPMOVSXWDZ256rrkz(2(Class<VR128X>) -> 0(Class<VR256X>))  [2.01;4.04]
		Dependencies:
			VEXTRACTI32X4Z256rrik(3(Class<VR256X>) -> 0(Class<VR128X>)) 
			VBROADCASTF32X2Z256rr(1(Class<VR128X>) -> 0(Class<VR256X>)) 
		Combined result: 5.06 cycles

-----VPMOVSXWDZrr-----
	VPMOVSXWDZrr(1(Class<VR256X>) -> 0(Class<VR512>))  [3.98;7.01]
		Dependencies:
			VPMOVDWZrr(1(Class<VR512>) -> 0(Class<VR256X>)) 
			VINSERTF64X4Zrri(2(Class<VR256X>) -> 0(Class<VR512>)) 
		Combined result: 8.05 cycles

-----VPMOVSXWDZrrk-----
	VPMOVSXWDZrrk(1(Class<VR512>) -> 0(Class<VR512>))  [4.06;4.06]
		 Successful, latency: 4.06
	VPMOVSXWDZrrk(3(Class<VR256X>) -> 0(Class<VR512>))  [3.99;7.02]
		Dependencies:
			VPMOVDWZrr(1(Class<VR512>) -> 0(Class<VR256X>)) 
			VINSERTF64X4Zrri(2(Class<VR256X>) -> 0(Class<VR512>)) 
		Combined result: 8.06 cycles

-----VPMOVSXWDZrrkz-----
	VPMOVSXWDZrrkz(2(Class<VR256X>) -> 0(Class<VR512>))  [4.01;7.04]
		Dependencies:
			VPMOVDWZrr(1(Class<VR512>) -> 0(Class<VR256X>)) 
			VINSERTF64X4Zrri(2(Class<VR256X>) -> 0(Class<VR512>)) 
		Combined result: 8.07 cycles

-----VPMOVSXWDrr-----
	VPMOVSXWDrr(1(Class<VR128>) -> 0(Class<VR128>))  [2.01;2.01]
		 Successful, latency: 2.01

-----VPMOVSXWQYrr-----
	VPMOVSXWQYrr(1(Class<VR128>) -> 0(Class<VR256>))  [2;4.03]
		Dependencies:
			VEXTRACTF128rri(1(Class<VR256>) -> 0(Class<VR128>)) 
			VPBROADCASTWYrr(1(Class<VR128>) -> 0(Class<VR256>)) 
		Combined result: 5.04 cycles

-----VPMOVSXWQZ128rr-----
	VPMOVSXWQZ128rr(1(Class<VR128X>) -> 0(Class<VR128X>))  [2.02;2.02]
		 Successful, latency: 2.02

-----VPMOVSXWQZ128rrk-----
	VPMOVSXWQZ128rrk(1(Class<VR128X>) -> 0(Class<VR128X>))  [2.02;2.02]
		 Successful, latency: 2.02
	VPMOVSXWQZ128rrk(3(Class<VR128X>) -> 0(Class<VR128X>))  [2.02;2.02]
		 Successful, latency: 2.02

-----VPMOVSXWQZ128rrkz-----
	VPMOVSXWQZ128rrkz(2(Class<VR128X>) -> 0(Class<VR128X>))  [2.03;2.03]
		 Successful, latency: 2.03

-----VPMOVSXWQZ256rr-----
	VPMOVSXWQZ256rr(1(Class<VR128X>) -> 0(Class<VR256X>))  [2;4.02]
		Dependencies:
			VEXTRACTI32X4Z256rrik(3(Class<VR256X>) -> 0(Class<VR128X>)) 
			VBROADCASTF32X2Z256rr(1(Class<VR128X>) -> 0(Class<VR256X>)) 
		Combined result: 5.04 cycles

-----VPMOVSXWQZ256rrk-----
	VPMOVSXWQZ256rrk(1(Class<VR256X>) -> 0(Class<VR256X>))  [2.04;2.04]
		 Successful, latency: 2.04
	VPMOVSXWQZ256rrk(3(Class<VR128X>) -> 0(Class<VR256X>))  [1.99;4.01]
		Dependencies:
			VEXTRACTI32X4Z256rrik(3(Class<VR256X>) -> 0(Class<VR128X>)) 
			VBROADCASTF32X2Z256rr(1(Class<VR128X>) -> 0(Class<VR256X>)) 
		Combined result: 5.04 cycles

-----VPMOVSXWQZ256rrkz-----
	VPMOVSXWQZ256rrkz(2(Class<VR128X>) -> 0(Class<VR256X>))  [2;4.02]
		Dependencies:
			VEXTRACTI32X4Z256rrik(3(Class<VR256X>) -> 0(Class<VR128X>)) 
			VBROADCASTF32X2Z256rr(1(Class<VR128X>) -> 0(Class<VR256X>)) 
		Combined result: 5.05 cycles

-----VPMOVSXWQZrr-----
	VPMOVSXWQZrr(1(Class<VR128X>) -> 0(Class<VR512>))  [4.03;7.06]
		Dependencies:
			VEXTRACTF64X2Zrri(1(Class<VR512>) -> 0(Class<VR128X>)) 
			VINSERTF32X4Zrri(2(Class<VR128X>) -> 0(Class<VR512>)) 
		Combined result: 8.08 cycles

-----VPMOVSXWQZrrk-----
	VPMOVSXWQZrrk(1(Class<VR512>) -> 0(Class<VR512>))  [4.05;4.05]
		 Successful, latency: 4.05
	VPMOVSXWQZrrk(3(Class<VR128X>) -> 0(Class<VR512>))  [4.03;7.05]
		Dependencies:
			VEXTRACTF64X2Zrri(1(Class<VR512>) -> 0(Class<VR128X>)) 
			VINSERTF32X4Zrri(2(Class<VR128X>) -> 0(Class<VR512>)) 
		Combined result: 8.08 cycles

-----VPMOVSXWQZrrkz-----
	VPMOVSXWQZrrkz(2(Class<VR128X>) -> 0(Class<VR512>))  [3.99;7.02]
		Dependencies:
			VEXTRACTF64X2Zrri(1(Class<VR512>) -> 0(Class<VR128X>)) 
			VINSERTF32X4Zrri(2(Class<VR128X>) -> 0(Class<VR512>)) 
		Combined result: 8.04 cycles

-----VPMOVSXWQrr-----
	VPMOVSXWQrr(1(Class<VR128>) -> 0(Class<VR128>))  [2.02;2.02]
		 Successful, latency: 2.02

-----VPMOVUSDBZ128rr-----
	VPMOVUSDBZ128rr(1(Class<VR128X>) -> 0(Class<VR128X>))  [2.02;2.02]
		 Successful, latency: 2.02

-----VPMOVUSDBZ128rrk-----
	VPMOVUSDBZ128rrk(1(Class<VR128X>) -> 0(Class<VR128X>))  [2.03;2.03]
		 Successful, latency: 2.03
	VPMOVUSDBZ128rrk(3(Class<VR128X>) -> 0(Class<VR128X>))  [2.02;2.02]
		 Successful, latency: 2.02

-----VPMOVUSDBZ128rrkz-----
	VPMOVUSDBZ128rrkz(2(Class<VR128X>) -> 0(Class<VR128X>))  [2.02;2.02]
		 Successful, latency: 2.02

-----VPMOVUSDBZ256rr-----
	VPMOVUSDBZ256rr(1(Class<VR256X>) -> 0(Class<VR128X>))  [2.01;4.04]
		Dependencies:
			VEXTRACTI32X4Z256rrik(3(Class<VR256X>) -> 0(Class<VR128X>)) 
			VBROADCASTF32X2Z256rr(1(Class<VR128X>) -> 0(Class<VR256X>)) 
		Combined result: 5.04 cycles

-----VPMOVUSDBZ256rrk-----
	VPMOVUSDBZ256rrk(1(Class<VR128X>) -> 0(Class<VR128X>))  [4.04;4.04]
		 Successful, latency: 4.04
	VPMOVUSDBZ256rrk(3(Class<VR256X>) -> 0(Class<VR128X>))  [2.01;4.03]
		Dependencies:
			VEXTRACTI32X4Z256rrik(3(Class<VR256X>) -> 0(Class<VR128X>)) 
			VBROADCASTF32X2Z256rr(1(Class<VR128X>) -> 0(Class<VR256X>)) 
		Combined result: 5.03 cycles

-----VPMOVUSDBZ256rrkz-----
	VPMOVUSDBZ256rrkz(2(Class<VR256X>) -> 0(Class<VR128X>))  [2.03;4.05]
		Dependencies:
			VEXTRACTI32X4Z256rrik(3(Class<VR256X>) -> 0(Class<VR128X>)) 
			VBROADCASTF32X2Z256rr(1(Class<VR128X>) -> 0(Class<VR256X>)) 
		Combined result: 5.05 cycles

-----VPMOVUSDBZrr-----
	VPMOVUSDBZrr(1(Class<VR512>) -> 0(Class<VR128X>))  [2.02;5.04]
		Dependencies:
			VEXTRACTF64X2Zrri(1(Class<VR512>) -> 0(Class<VR128X>)) 
			VINSERTF32X4Zrri(2(Class<VR128X>) -> 0(Class<VR512>)) 
		Combined result: 6.04 cycles

-----VPMOVUSDBZrrk-----
	VPMOVUSDBZrrk(1(Class<VR128X>) -> 0(Class<VR128X>))  [5.06;5.06]
		 Successful, latency: 5.06
	VPMOVUSDBZrrk(3(Class<VR512>) -> 0(Class<VR128X>))  [2.06;5.08]
		Dependencies:
			VEXTRACTF64X2Zrri(1(Class<VR512>) -> 0(Class<VR128X>)) 
			VINSERTF32X4Zrri(2(Class<VR128X>) -> 0(Class<VR512>)) 
		Combined result: 6.08 cycles

-----VPMOVUSDBZrrkz-----
	VPMOVUSDBZrrkz(2(Class<VR512>) -> 0(Class<VR128X>))  [2.06;5.08]
		Dependencies:
			VEXTRACTF64X2Zrri(1(Class<VR512>) -> 0(Class<VR128X>)) 
			VINSERTF32X4Zrri(2(Class<VR128X>) -> 0(Class<VR512>)) 
		Combined result: 6.08 cycles

-----VPMOVUSDWZ128rr-----
	VPMOVUSDWZ128rr(1(Class<VR128X>) -> 0(Class<VR128X>))  [2.02;2.02]
		 Successful, latency: 2.02

-----VPMOVUSDWZ128rrk-----
	VPMOVUSDWZ128rrk(1(Class<VR128X>) -> 0(Class<VR128X>))  [2.02;2.02]
		 Successful, latency: 2.02
	VPMOVUSDWZ128rrk(3(Class<VR128X>) -> 0(Class<VR128X>))  [2.06;2.06]
		 Successful, latency: 2.06

-----VPMOVUSDWZ128rrkz-----
	VPMOVUSDWZ128rrkz(2(Class<VR128X>) -> 0(Class<VR128X>))  [2.02;2.02]
		 Successful, latency: 2.02

-----VPMOVUSDWZ256rr-----
	VPMOVUSDWZ256rr(1(Class<VR256X>) -> 0(Class<VR128X>))  [2.01;4.04]
		Dependencies:
			VEXTRACTI32X4Z256rrik(3(Class<VR256X>) -> 0(Class<VR128X>)) 
			VBROADCASTF32X2Z256rr(1(Class<VR128X>) -> 0(Class<VR256X>)) 
		Combined result: 5.04 cycles

-----VPMOVUSDWZ256rrk-----
	VPMOVUSDWZ256rrk(1(Class<VR128X>) -> 0(Class<VR128X>))  [4.03;4.03]
		 Successful, latency: 4.03
	VPMOVUSDWZ256rrk(3(Class<VR256X>) -> 0(Class<VR128X>))  [2;4.02]
		Dependencies:
			VEXTRACTI32X4Z256rrik(3(Class<VR256X>) -> 0(Class<VR128X>)) 
			VBROADCASTF32X2Z256rr(1(Class<VR128X>) -> 0(Class<VR256X>)) 
		Combined result: 5.02 cycles

-----VPMOVUSDWZ256rrkz-----
	VPMOVUSDWZ256rrkz(2(Class<VR256X>) -> 0(Class<VR128X>))  [2.02;4.04]
		Dependencies:
			VEXTRACTI32X4Z256rrik(3(Class<VR256X>) -> 0(Class<VR128X>)) 
			VBROADCASTF32X2Z256rr(1(Class<VR128X>) -> 0(Class<VR256X>)) 
		Combined result: 5.04 cycles

-----VPMOVUSDWZrr-----
	VPMOVUSDWZrr(1(Class<VR512>) -> 0(Class<VR256X>))  [1.02;4.04]
		Dependencies:
			VPMOVDWZrr(1(Class<VR512>) -> 0(Class<VR256X>)) 
			VINSERTF64X4Zrri(2(Class<VR256X>) -> 0(Class<VR512>)) 
		Combined result: 5.04 cycles

-----VPMOVUSDWZrrk-----
	VPMOVUSDWZrrk(1(Class<VR256X>) -> 0(Class<VR256X>))  [4.03;4.03]
		 Successful, latency: 4.03
	VPMOVUSDWZrrk(3(Class<VR512>) -> 0(Class<VR256X>))  [1.03;4.05]
		Dependencies:
			VPMOVDWZrr(1(Class<VR512>) -> 0(Class<VR256X>)) 
			VINSERTF64X4Zrri(2(Class<VR256X>) -> 0(Class<VR512>)) 
		Combined result: 5.05 cycles

-----VPMOVUSDWZrrkz-----
	VPMOVUSDWZrrkz(2(Class<VR512>) -> 0(Class<VR256X>))  [1.02;4.04]
		Dependencies:
			VPMOVDWZrr(1(Class<VR512>) -> 0(Class<VR256X>)) 
			VINSERTF64X4Zrri(2(Class<VR256X>) -> 0(Class<VR512>)) 
		Combined result: 5.04 cycles

-----VPMOVUSQBZ128rr-----
	VPMOVUSQBZ128rr(1(Class<VR128X>) -> 0(Class<VR128X>))  [2.02;2.02]
		 Successful, latency: 2.02

-----VPMOVUSQBZ128rrk-----
	VPMOVUSQBZ128rrk(1(Class<VR128X>) -> 0(Class<VR128X>))  [2.03;2.03]
		 Successful, latency: 2.03
	VPMOVUSQBZ128rrk(3(Class<VR128X>) -> 0(Class<VR128X>))  [2.02;2.02]
		 Successful, latency: 2.02

-----VPMOVUSQBZ128rrkz-----
	VPMOVUSQBZ128rrkz(2(Class<VR128X>) -> 0(Class<VR128X>))  [2.02;2.02]
		 Successful, latency: 2.02

-----VPMOVUSQBZ256rr-----
	VPMOVUSQBZ256rr(1(Class<VR256X>) -> 0(Class<VR128X>))  [2.01;4.04]
		Dependencies:
			VEXTRACTI32X4Z256rrik(3(Class<VR256X>) -> 0(Class<VR128X>)) 
			VBROADCASTF32X2Z256rr(1(Class<VR128X>) -> 0(Class<VR256X>)) 
		Combined result: 5.04 cycles

-----VPMOVUSQBZ256rrk-----
	VPMOVUSQBZ256rrk(1(Class<VR128X>) -> 0(Class<VR128X>))  [4.03;4.03]
		 Successful, latency: 4.03
	VPMOVUSQBZ256rrk(3(Class<VR256X>) -> 0(Class<VR128X>))  [2.03;4.05]
		Dependencies:
			VEXTRACTI32X4Z256rrik(3(Class<VR256X>) -> 0(Class<VR128X>)) 
			VBROADCASTF32X2Z256rr(1(Class<VR128X>) -> 0(Class<VR256X>)) 
		Combined result: 5.05 cycles

-----VPMOVUSQBZ256rrkz-----
	VPMOVUSQBZ256rrkz(2(Class<VR256X>) -> 0(Class<VR128X>))  [2.01;4.04]
		Dependencies:
			VEXTRACTI32X4Z256rrik(3(Class<VR256X>) -> 0(Class<VR128X>)) 
			VBROADCASTF32X2Z256rr(1(Class<VR128X>) -> 0(Class<VR256X>)) 
		Combined result: 5.04 cycles

-----VPMOVUSQBZrr-----
	VPMOVUSQBZrr(1(Class<VR512>) -> 0(Class<VR128X>))  [2.04;5.06]
		Dependencies:
			VEXTRACTF64X2Zrri(1(Class<VR512>) -> 0(Class<VR128X>)) 
			VINSERTF32X4Zrri(2(Class<VR128X>) -> 0(Class<VR512>)) 
		Combined result: 6.06 cycles

-----VPMOVUSQBZrrk-----
	VPMOVUSQBZrrk(1(Class<VR128X>) -> 0(Class<VR128X>))  [5.04;5.04]
		 Successful, latency: 5.04
	VPMOVUSQBZrrk(3(Class<VR512>) -> 0(Class<VR128X>))  [2.03;5.06]
		Dependencies:
			VEXTRACTF64X2Zrri(1(Class<VR512>) -> 0(Class<VR128X>)) 
			VINSERTF32X4Zrri(2(Class<VR128X>) -> 0(Class<VR512>)) 
		Combined result: 6.06 cycles

-----VPMOVUSQBZrrkz-----
	VPMOVUSQBZrrkz(2(Class<VR512>) -> 0(Class<VR128X>))  [2;5.02]
		Dependencies:
			VEXTRACTF64X2Zrri(1(Class<VR512>) -> 0(Class<VR128X>)) 
			VINSERTF32X4Zrri(2(Class<VR128X>) -> 0(Class<VR512>)) 
		Combined result: 6.02 cycles

-----VPMOVUSQDZ128rr-----
	VPMOVUSQDZ128rr(1(Class<VR128X>) -> 0(Class<VR128X>))  [2.02;2.02]
		 Successful, latency: 2.02

-----VPMOVUSQDZ128rrk-----
	VPMOVUSQDZ128rrk(1(Class<VR128X>) -> 0(Class<VR128X>))  [2.02;2.02]
		 Successful, latency: 2.02
	VPMOVUSQDZ128rrk(3(Class<VR128X>) -> 0(Class<VR128X>))  [2.01;2.01]
		 Successful, latency: 2.01

-----VPMOVUSQDZ128rrkz-----
	VPMOVUSQDZ128rrkz(2(Class<VR128X>) -> 0(Class<VR128X>))  [2.02;2.02]
		 Successful, latency: 2.02

-----VPMOVUSQDZ256rr-----
	VPMOVUSQDZ256rr(1(Class<VR256X>) -> 0(Class<VR128X>))  [2;4.03]
		Dependencies:
			VEXTRACTI32X4Z256rrik(3(Class<VR256X>) -> 0(Class<VR128X>)) 
			VBROADCASTF32X2Z256rr(1(Class<VR128X>) -> 0(Class<VR256X>)) 
		Combined result: 5.03 cycles

-----VPMOVUSQDZ256rrk-----
	VPMOVUSQDZ256rrk(1(Class<VR128X>) -> 0(Class<VR128X>))  [4.04;4.04]
		 Successful, latency: 4.04
	VPMOVUSQDZ256rrk(3(Class<VR256X>) -> 0(Class<VR128X>))  [2.03;4.05]
		Dependencies:
			VEXTRACTI32X4Z256rrik(3(Class<VR256X>) -> 0(Class<VR128X>)) 
			VBROADCASTF32X2Z256rr(1(Class<VR128X>) -> 0(Class<VR256X>)) 
		Combined result: 5.05 cycles

-----VPMOVUSQDZ256rrkz-----
	VPMOVUSQDZ256rrkz(2(Class<VR256X>) -> 0(Class<VR128X>))  [2.02;4.04]
		Dependencies:
			VEXTRACTI32X4Z256rrik(3(Class<VR256X>) -> 0(Class<VR128X>)) 
			VBROADCASTF32X2Z256rr(1(Class<VR128X>) -> 0(Class<VR256X>)) 
		Combined result: 5.04 cycles

-----VPMOVUSQDZrr-----
	VPMOVUSQDZrr(1(Class<VR512>) -> 0(Class<VR256X>))  [1.01;4.04]
		Dependencies:
			VPMOVDWZrr(1(Class<VR512>) -> 0(Class<VR256X>)) 
			VINSERTF64X4Zrri(2(Class<VR256X>) -> 0(Class<VR512>)) 
		Combined result: 5.04 cycles

-----VPMOVUSQDZrrk-----
	VPMOVUSQDZrrk(1(Class<VR256X>) -> 0(Class<VR256X>))  [4.05;4.05]
		 Successful, latency: 4.05
	VPMOVUSQDZrrk(3(Class<VR512>) -> 0(Class<VR256X>))  [1.02;4.05]
		Dependencies:
			VPMOVDWZrr(1(Class<VR512>) -> 0(Class<VR256X>)) 
			VINSERTF64X4Zrri(2(Class<VR256X>) -> 0(Class<VR512>)) 
		Combined result: 5.05 cycles

-----VPMOVUSQDZrrkz-----
	VPMOVUSQDZrrkz(2(Class<VR512>) -> 0(Class<VR256X>))  [1.04;4.06]
		Dependencies:
			VPMOVDWZrr(1(Class<VR512>) -> 0(Class<VR256X>)) 
			VINSERTF64X4Zrri(2(Class<VR256X>) -> 0(Class<VR512>)) 
		Combined result: 5.06 cycles

-----VPMOVUSQWZ128rr-----
	VPMOVUSQWZ128rr(1(Class<VR128X>) -> 0(Class<VR128X>))  [2.02;2.02]
		 Successful, latency: 2.02

-----VPMOVUSQWZ128rrk-----
	VPMOVUSQWZ128rrk(1(Class<VR128X>) -> 0(Class<VR128X>))  [2.02;2.02]
		 Successful, latency: 2.02
	VPMOVUSQWZ128rrk(3(Class<VR128X>) -> 0(Class<VR128X>))  [2.02;2.02]
		 Successful, latency: 2.02

-----VPMOVUSQWZ128rrkz-----
	VPMOVUSQWZ128rrkz(2(Class<VR128X>) -> 0(Class<VR128X>))  [2.02;2.02]
		 Successful, latency: 2.02

-----VPMOVUSQWZ256rr-----
	VPMOVUSQWZ256rr(1(Class<VR256X>) -> 0(Class<VR128X>))  [2.01;4.03]
		Dependencies:
			VEXTRACTI32X4Z256rrik(3(Class<VR256X>) -> 0(Class<VR128X>)) 
			VBROADCASTF32X2Z256rr(1(Class<VR128X>) -> 0(Class<VR256X>)) 
		Combined result: 5.03 cycles

-----VPMOVUSQWZ256rrk-----
	VPMOVUSQWZ256rrk(1(Class<VR128X>) -> 0(Class<VR128X>))  [4.03;4.03]
		 Successful, latency: 4.03
	VPMOVUSQWZ256rrk(3(Class<VR256X>) -> 0(Class<VR128X>))  [2.04;4.06]
		Dependencies:
			VEXTRACTI32X4Z256rrik(3(Class<VR256X>) -> 0(Class<VR128X>)) 
			VBROADCASTF32X2Z256rr(1(Class<VR128X>) -> 0(Class<VR256X>)) 
		Combined result: 5.06 cycles

-----VPMOVUSQWZ256rrkz-----
	VPMOVUSQWZ256rrkz(2(Class<VR256X>) -> 0(Class<VR128X>))  [2.02;4.04]
		Dependencies:
			VEXTRACTI32X4Z256rrik(3(Class<VR256X>) -> 0(Class<VR128X>)) 
			VBROADCASTF32X2Z256rr(1(Class<VR128X>) -> 0(Class<VR256X>)) 
		Combined result: 5.04 cycles

-----VPMOVUSQWZrr-----
	VPMOVUSQWZrr(1(Class<VR512>) -> 0(Class<VR128X>))  [2.03;5.06]
		Dependencies:
			VEXTRACTF64X2Zrri(1(Class<VR512>) -> 0(Class<VR128X>)) 
			VINSERTF32X4Zrri(2(Class<VR128X>) -> 0(Class<VR512>)) 
		Combined result: 6.06 cycles

-----VPMOVUSQWZrrk-----
	VPMOVUSQWZrrk(1(Class<VR128X>) -> 0(Class<VR128X>))  [5.05;5.05]
		 Successful, latency: 5.05
	VPMOVUSQWZrrk(3(Class<VR512>) -> 0(Class<VR128X>))  [2.07;5.09]
		Dependencies:
			VEXTRACTF64X2Zrri(1(Class<VR512>) -> 0(Class<VR128X>)) 
			VINSERTF32X4Zrri(2(Class<VR128X>) -> 0(Class<VR512>)) 
		Combined result: 6.09 cycles

-----VPMOVUSQWZrrkz-----
	VPMOVUSQWZrrkz(2(Class<VR512>) -> 0(Class<VR128X>))  [2.04;5.06]
		Dependencies:
			VEXTRACTF64X2Zrri(1(Class<VR512>) -> 0(Class<VR128X>)) 
			VINSERTF32X4Zrri(2(Class<VR128X>) -> 0(Class<VR512>)) 
		Combined result: 6.06 cycles

-----VPMOVUSWBZ128rr-----
	VPMOVUSWBZ128rr(1(Class<VR128X>) -> 0(Class<VR128X>))  [2.01;2.01]
		 Successful, latency: 2.01

-----VPMOVUSWBZ128rrk-----
	VPMOVUSWBZ128rrk(1(Class<VR128X>) -> 0(Class<VR128X>))  [2.02;2.02]
		 Successful, latency: 2.02
	VPMOVUSWBZ128rrk(3(Class<VR128X>) -> 0(Class<VR128X>))  [2.02;2.02]
		 Successful, latency: 2.02

-----VPMOVUSWBZ128rrkz-----
	VPMOVUSWBZ128rrkz(2(Class<VR128X>) -> 0(Class<VR128X>))  [2.01;2.01]
		 Successful, latency: 2.01

-----VPMOVUSWBZ256rr-----
	VPMOVUSWBZ256rr(1(Class<VR256X>) -> 0(Class<VR128X>))  [2.02;4.04]
		Dependencies:
			VEXTRACTI32X4Z256rrik(3(Class<VR256X>) -> 0(Class<VR128X>)) 
			VBROADCASTF32X2Z256rr(1(Class<VR128X>) -> 0(Class<VR256X>)) 
		Combined result: 5.04 cycles

-----VPMOVUSWBZ256rrk-----
	VPMOVUSWBZ256rrk(1(Class<VR128X>) -> 0(Class<VR128X>))  [4.05;4.05]
		 Successful, latency: 4.05
	VPMOVUSWBZ256rrk(3(Class<VR256X>) -> 0(Class<VR128X>))  [2.03;4.05]
		Dependencies:
			VEXTRACTI32X4Z256rrik(3(Class<VR256X>) -> 0(Class<VR128X>)) 
			VBROADCASTF32X2Z256rr(1(Class<VR128X>) -> 0(Class<VR256X>)) 
		Combined result: 5.05 cycles

-----VPMOVUSWBZ256rrkz-----
	VPMOVUSWBZ256rrkz(2(Class<VR256X>) -> 0(Class<VR128X>))  [2.01;4.03]
		Dependencies:
			VEXTRACTI32X4Z256rrik(3(Class<VR256X>) -> 0(Class<VR128X>)) 
			VBROADCASTF32X2Z256rr(1(Class<VR128X>) -> 0(Class<VR256X>)) 
		Combined result: 5.03 cycles

-----VPMOVUSWBZrr-----
	VPMOVUSWBZrr(1(Class<VR512>) -> 0(Class<VR256X>))  [1.03;4.05]
		Dependencies:
			VPMOVDWZrr(1(Class<VR512>) -> 0(Class<VR256X>)) 
			VINSERTF64X4Zrri(2(Class<VR256X>) -> 0(Class<VR512>)) 
		Combined result: 5.05 cycles

-----VPMOVUSWBZrrk-----
	VPMOVUSWBZrrk(1(Class<VR256X>) -> 0(Class<VR256X>))  [4.04;4.04]
		 Successful, latency: 4.04
	VPMOVUSWBZrrk(3(Class<VR512>) -> 0(Class<VR256X>))  [1.05;4.07]
		Dependencies:
			VPMOVDWZrr(1(Class<VR512>) -> 0(Class<VR256X>)) 
			VINSERTF64X4Zrri(2(Class<VR256X>) -> 0(Class<VR512>)) 
		Combined result: 5.07 cycles

-----VPMOVUSWBZrrkz-----
	VPMOVUSWBZrrkz(2(Class<VR512>) -> 0(Class<VR256X>))  [1.03;4.05]
		Dependencies:
			VPMOVDWZrr(1(Class<VR512>) -> 0(Class<VR256X>)) 
			VINSERTF64X4Zrri(2(Class<VR256X>) -> 0(Class<VR512>)) 
		Combined result: 5.05 cycles

-----VPMOVW2MZ128kr-----
	VPMOVW2MZ128kr(1(Class<VR128X>) -> 0(Class<VK8>))  [1.04;3.06]
		Dependencies:
			VPCMPGTWZ128rr(1(Class<VR128X>) -> 0(Class<VK8>)) 
			VPMOVM2WZ128rk(1(Class<VK8>) -> 0(Class<VR128X>)) 
		Combined result: 4.06 cycles

-----VPMOVW2MZ256kr-----
	VPMOVW2MZ256kr(1(Class<VR256X>) -> 0(Class<VK16>))  [1.02;4.05]
		Dependencies:
			VPCMPEQWZ256rr(2(Class<VR256X>) -> 0(Class<VK16>)) 
			VPMOVM2WZ256rk(1(Class<VK16>) -> 0(Class<VR256X>)) 
		Combined result: 5.05 cycles

-----VPMOVW2MZkr-----
	VPMOVW2MZkr(1(Class<VR512>) -> 0(Class<VK32>))  [1.06;5.2]
		Dependencies:
			VPCMPUWZrrik(3(Class<VR512>) -> 0(Class<VK32>)) 
			VPMOVM2WZrk(1(Class<VK32>) -> 0(Class<VR512>)) 
		Combined result: 6.2 cycles

-----VPMOVWBZ128rr-----
	VPMOVWBZ128rr(1(Class<VR128X>) -> 0(Class<VR128X>))  [2.02;2.02]
		 Successful, latency: 2.02

-----VPMOVWBZ128rrk-----
	VPMOVWBZ128rrk(1(Class<VR128X>) -> 0(Class<VR128X>))  [2.02;2.02]
		 Successful, latency: 2.02
	VPMOVWBZ128rrk(3(Class<VR128X>) -> 0(Class<VR128X>))  [2.02;2.02]
		 Successful, latency: 2.02

-----VPMOVWBZ128rrkz-----
	VPMOVWBZ128rrkz(2(Class<VR128X>) -> 0(Class<VR128X>))  [2.02;2.02]
		 Successful, latency: 2.02

-----VPMOVWBZ256rr-----
	VPMOVWBZ256rr(1(Class<VR256X>) -> 0(Class<VR128X>))  [2.02;4.04]
		Dependencies:
			VEXTRACTI32X4Z256rrik(3(Class<VR256X>) -> 0(Class<VR128X>)) 
			VBROADCASTF32X2Z256rr(1(Class<VR128X>) -> 0(Class<VR256X>)) 
		Combined result: 5.04 cycles

-----VPMOVWBZ256rrk-----
	VPMOVWBZ256rrk(1(Class<VR128X>) -> 0(Class<VR128X>))  [4.04;4.04]
		 Successful, latency: 4.04
	VPMOVWBZ256rrk(3(Class<VR256X>) -> 0(Class<VR128X>))  [2.02;4.04]
		Dependencies:
			VEXTRACTI32X4Z256rrik(3(Class<VR256X>) -> 0(Class<VR128X>)) 
			VBROADCASTF32X2Z256rr(1(Class<VR128X>) -> 0(Class<VR256X>)) 
		Combined result: 5.04 cycles

-----VPMOVWBZ256rrkz-----
	VPMOVWBZ256rrkz(2(Class<VR256X>) -> 0(Class<VR128X>))  [2.02;4.04]
		Dependencies:
			VEXTRACTI32X4Z256rrik(3(Class<VR256X>) -> 0(Class<VR128X>)) 
			VBROADCASTF32X2Z256rr(1(Class<VR128X>) -> 0(Class<VR256X>)) 
		Combined result: 5.04 cycles

-----VPMOVWBZrr-----
	VPMOVWBZrr(1(Class<VR512>) -> 0(Class<VR256X>))  [1.02;4.04]
		Dependencies:
			VPMOVDWZrr(1(Class<VR512>) -> 0(Class<VR256X>)) 
			VINSERTF64X4Zrri(2(Class<VR256X>) -> 0(Class<VR512>)) 
		Combined result: 5.04 cycles

-----VPMOVWBZrrk-----
	VPMOVWBZrrk(1(Class<VR256X>) -> 0(Class<VR256X>))  [4.07;4.07]
		 Successful, latency: 4.07
	VPMOVWBZrrk(3(Class<VR512>) -> 0(Class<VR256X>))  [1.02;4.04]
		Dependencies:
			VPMOVDWZrr(1(Class<VR512>) -> 0(Class<VR256X>)) 
			VINSERTF64X4Zrri(2(Class<VR256X>) -> 0(Class<VR512>)) 
		Combined result: 5.04 cycles

-----VPMOVWBZrrkz-----
	VPMOVWBZrrkz(2(Class<VR512>) -> 0(Class<VR256X>))  [1;4.03]
		Dependencies:
			VPMOVDWZrr(1(Class<VR512>) -> 0(Class<VR256X>)) 
			VINSERTF64X4Zrri(2(Class<VR256X>) -> 0(Class<VR512>)) 
		Combined result: 5.03 cycles

-----VPMOVZXBDYrr-----
	VPMOVZXBDYrr(1(Class<VR128>) -> 0(Class<VR256>))  [1.99;4.03]
		Dependencies:
			VEXTRACTF128rri(1(Class<VR256>) -> 0(Class<VR128>)) 
			VPBROADCASTWYrr(1(Class<VR128>) -> 0(Class<VR256>)) 
		Combined result: 5.04 cycles

-----VPMOVZXBDZ128rr-----
	VPMOVZXBDZ128rr(1(Class<VR128X>) -> 0(Class<VR128X>))  [2.02;2.02]
		 Successful, latency: 2.02

-----VPMOVZXBDZ128rrk-----
	VPMOVZXBDZ128rrk(1(Class<VR128X>) -> 0(Class<VR128X>))  [2.02;2.02]
		 Successful, latency: 2.02
	VPMOVZXBDZ128rrk(3(Class<VR128X>) -> 0(Class<VR128X>))  [2.02;2.02]
		 Successful, latency: 2.02

-----VPMOVZXBDZ128rrkz-----
	VPMOVZXBDZ128rrkz(2(Class<VR128X>) -> 0(Class<VR128X>))  [2.04;2.04]
		 Successful, latency: 2.04

-----VPMOVZXBDZ256rr-----
	VPMOVZXBDZ256rr(1(Class<VR128X>) -> 0(Class<VR256X>))  [2;4.02]
		Dependencies:
			VEXTRACTI32X4Z256rrik(3(Class<VR256X>) -> 0(Class<VR128X>)) 
			VBROADCASTF32X2Z256rr(1(Class<VR128X>) -> 0(Class<VR256X>)) 
		Combined result: 5.04 cycles

-----VPMOVZXBDZ256rrk-----
	VPMOVZXBDZ256rrk(1(Class<VR256X>) -> 0(Class<VR256X>))  [2.02;2.02]
		 Successful, latency: 2.02
	VPMOVZXBDZ256rrk(3(Class<VR128X>) -> 0(Class<VR256X>))  [2;4.02]
		Dependencies:
			VEXTRACTI32X4Z256rrik(3(Class<VR256X>) -> 0(Class<VR128X>)) 
			VBROADCASTF32X2Z256rr(1(Class<VR128X>) -> 0(Class<VR256X>)) 
		Combined result: 5.04 cycles

-----VPMOVZXBDZ256rrkz-----
	VPMOVZXBDZ256rrkz(2(Class<VR128X>) -> 0(Class<VR256X>))  [2.01;4.03]
		Dependencies:
			VEXTRACTI32X4Z256rrik(3(Class<VR256X>) -> 0(Class<VR128X>)) 
			VBROADCASTF32X2Z256rr(1(Class<VR128X>) -> 0(Class<VR256X>)) 
		Combined result: 5.05 cycles

-----VPMOVZXBDZrr-----
	VPMOVZXBDZrr(1(Class<VR128X>) -> 0(Class<VR512>))  [4.02;7.05]
		Dependencies:
			VEXTRACTF64X2Zrri(1(Class<VR512>) -> 0(Class<VR128X>)) 
			VINSERTF32X4Zrri(2(Class<VR128X>) -> 0(Class<VR512>)) 
		Combined result: 8.07 cycles

-----VPMOVZXBDZrrk-----
	VPMOVZXBDZrrk(1(Class<VR512>) -> 0(Class<VR512>))  [4.04;4.04]
		 Successful, latency: 4.04
	VPMOVZXBDZrrk(3(Class<VR128X>) -> 0(Class<VR512>))  [4.02;7.04]
		Dependencies:
			VEXTRACTF64X2Zrri(1(Class<VR512>) -> 0(Class<VR128X>)) 
			VINSERTF32X4Zrri(2(Class<VR128X>) -> 0(Class<VR512>)) 
		Combined result: 8.07 cycles

-----VPMOVZXBDZrrkz-----
	VPMOVZXBDZrrkz(2(Class<VR128X>) -> 0(Class<VR512>))  [3.98;7.01]
		Dependencies:
			VEXTRACTF64X2Zrri(1(Class<VR512>) -> 0(Class<VR128X>)) 
			VINSERTF32X4Zrri(2(Class<VR128X>) -> 0(Class<VR512>)) 
		Combined result: 8.03 cycles

-----VPMOVZXBDrr-----
	VPMOVZXBDrr(1(Class<VR128>) -> 0(Class<VR128>))  [2.02;2.02]
		 Successful, latency: 2.02

-----VPMOVZXBQYrr-----
	VPMOVZXBQYrr(1(Class<VR128>) -> 0(Class<VR256>))  [2;4.03]
		Dependencies:
			VEXTRACTF128rri(1(Class<VR256>) -> 0(Class<VR128>)) 
			VPBROADCASTWYrr(1(Class<VR128>) -> 0(Class<VR256>)) 
		Combined result: 5.04 cycles

-----VPMOVZXBQZ128rr-----
	VPMOVZXBQZ128rr(1(Class<VR128X>) -> 0(Class<VR128X>))  [2.02;2.02]
		 Successful, latency: 2.02

-----VPMOVZXBQZ128rrk-----
	VPMOVZXBQZ128rrk(1(Class<VR128X>) -> 0(Class<VR128X>))  [2.02;2.02]
		 Successful, latency: 2.02
	VPMOVZXBQZ128rrk(3(Class<VR128X>) -> 0(Class<VR128X>))  [2.02;2.02]
		 Successful, latency: 2.02

-----VPMOVZXBQZ128rrkz-----
	VPMOVZXBQZ128rrkz(2(Class<VR128X>) -> 0(Class<VR128X>))  [2.01;2.01]
		 Successful, latency: 2.01

-----VPMOVZXBQZ256rr-----
	VPMOVZXBQZ256rr(1(Class<VR128X>) -> 0(Class<VR256X>))  [2;4.02]
		Dependencies:
			VEXTRACTI32X4Z256rrik(3(Class<VR256X>) -> 0(Class<VR128X>)) 
			VBROADCASTF32X2Z256rr(1(Class<VR128X>) -> 0(Class<VR256X>)) 
		Combined result: 5.04 cycles

-----VPMOVZXBQZ256rrk-----
	VPMOVZXBQZ256rrk(1(Class<VR256X>) -> 0(Class<VR256X>))  [2.02;2.02]
		 Successful, latency: 2.02
	VPMOVZXBQZ256rrk(3(Class<VR128X>) -> 0(Class<VR256X>))  [2;4.02]
		Dependencies:
			VEXTRACTI32X4Z256rrik(3(Class<VR256X>) -> 0(Class<VR128X>)) 
			VBROADCASTF32X2Z256rr(1(Class<VR128X>) -> 0(Class<VR256X>)) 
		Combined result: 5.04 cycles

-----VPMOVZXBQZ256rrkz-----
	VPMOVZXBQZ256rrkz(2(Class<VR128X>) -> 0(Class<VR256X>))  [2.01;4.04]
		Dependencies:
			VEXTRACTI32X4Z256rrik(3(Class<VR256X>) -> 0(Class<VR128X>)) 
			VBROADCASTF32X2Z256rr(1(Class<VR128X>) -> 0(Class<VR256X>)) 
		Combined result: 5.06 cycles

-----VPMOVZXBQZrr-----
	VPMOVZXBQZrr(1(Class<VR128X>) -> 0(Class<VR512>))  [4;7.02]
		Dependencies:
			VEXTRACTF64X2Zrri(1(Class<VR512>) -> 0(Class<VR128X>)) 
			VINSERTF32X4Zrri(2(Class<VR128X>) -> 0(Class<VR512>)) 
		Combined result: 8.04 cycles

-----VPMOVZXBQZrrk-----
	VPMOVZXBQZrrk(1(Class<VR512>) -> 0(Class<VR512>))  [4.04;4.04]
		 Successful, latency: 4.04
	VPMOVZXBQZrrk(3(Class<VR128X>) -> 0(Class<VR512>))  [4.01;7.03]
		Dependencies:
			VEXTRACTF64X2Zrri(1(Class<VR512>) -> 0(Class<VR128X>)) 
			VINSERTF32X4Zrri(2(Class<VR128X>) -> 0(Class<VR512>)) 
		Combined result: 8.06 cycles

-----VPMOVZXBQZrrkz-----
	VPMOVZXBQZrrkz(2(Class<VR128X>) -> 0(Class<VR512>))  [4.01;7.04]
		Dependencies:
			VEXTRACTF64X2Zrri(1(Class<VR512>) -> 0(Class<VR128X>)) 
			VINSERTF32X4Zrri(2(Class<VR128X>) -> 0(Class<VR512>)) 
		Combined result: 8.06 cycles

-----VPMOVZXBQrr-----
	VPMOVZXBQrr(1(Class<VR128>) -> 0(Class<VR128>))  [2.03;2.03]
		 Successful, latency: 2.03

-----VPMOVZXBWYrr-----
	VPMOVZXBWYrr(1(Class<VR128>) -> 0(Class<VR256>))  [2.01;4.04]
		Dependencies:
			VEXTRACTF128rri(1(Class<VR256>) -> 0(Class<VR128>)) 
			VPBROADCASTWYrr(1(Class<VR128>) -> 0(Class<VR256>)) 
		Combined result: 5.05 cycles

-----VPMOVZXBWZ128rr-----
	VPMOVZXBWZ128rr(1(Class<VR128X>) -> 0(Class<VR128X>))  [2.02;2.02]
		 Successful, latency: 2.02

-----VPMOVZXBWZ128rrk-----
	VPMOVZXBWZ128rrk(1(Class<VR128X>) -> 0(Class<VR128X>))  [2.02;2.02]
		 Successful, latency: 2.02
	VPMOVZXBWZ128rrk(3(Class<VR128X>) -> 0(Class<VR128X>))  [2.01;2.01]
		 Successful, latency: 2.01

-----VPMOVZXBWZ128rrkz-----
	VPMOVZXBWZ128rrkz(2(Class<VR128X>) -> 0(Class<VR128X>))  [2.03;2.03]
		 Successful, latency: 2.03

-----VPMOVZXBWZ256rr-----
	VPMOVZXBWZ256rr(1(Class<VR128X>) -> 0(Class<VR256X>))  [1.99;4.01]
		Dependencies:
			VEXTRACTI32X4Z256rrik(3(Class<VR256X>) -> 0(Class<VR128X>)) 
			VBROADCASTF32X2Z256rr(1(Class<VR128X>) -> 0(Class<VR256X>)) 
		Combined result: 5.04 cycles

-----VPMOVZXBWZ256rrk-----
	VPMOVZXBWZ256rrk(1(Class<VR256X>) -> 0(Class<VR256X>))  [2.01;2.01]
		 Successful, latency: 2.01
	VPMOVZXBWZ256rrk(3(Class<VR128X>) -> 0(Class<VR256X>))  [2;4.02]
		Dependencies:
			VEXTRACTI32X4Z256rrik(3(Class<VR256X>) -> 0(Class<VR128X>)) 
			VBROADCASTF32X2Z256rr(1(Class<VR128X>) -> 0(Class<VR256X>)) 
		Combined result: 5.04 cycles

-----VPMOVZXBWZ256rrkz-----
	VPMOVZXBWZ256rrkz(2(Class<VR128X>) -> 0(Class<VR256X>))  [2.02;4.04]
		Dependencies:
			VEXTRACTI32X4Z256rrik(3(Class<VR256X>) -> 0(Class<VR128X>)) 
			VBROADCASTF32X2Z256rr(1(Class<VR128X>) -> 0(Class<VR256X>)) 
		Combined result: 5.07 cycles

-----VPMOVZXBWZrr-----
	VPMOVZXBWZrr(1(Class<VR256X>) -> 0(Class<VR512>))  [3.99;7.02]
		Dependencies:
			VPMOVDWZrr(1(Class<VR512>) -> 0(Class<VR256X>)) 
			VINSERTF64X4Zrri(2(Class<VR256X>) -> 0(Class<VR512>)) 
		Combined result: 8.05 cycles

-----VPMOVZXBWZrrk-----
	VPMOVZXBWZrrk(1(Class<VR512>) -> 0(Class<VR512>))  [4.02;4.02]
		 Successful, latency: 4.02
	VPMOVZXBWZrrk(3(Class<VR256X>) -> 0(Class<VR512>))  [3.99;7.02]
		Dependencies:
			VPMOVDWZrr(1(Class<VR512>) -> 0(Class<VR256X>)) 
			VINSERTF64X4Zrri(2(Class<VR256X>) -> 0(Class<VR512>)) 
		Combined result: 8.06 cycles

-----VPMOVZXBWZrrkz-----
	VPMOVZXBWZrrkz(2(Class<VR256X>) -> 0(Class<VR512>))  [3.99;7.02]
		Dependencies:
			VPMOVDWZrr(1(Class<VR512>) -> 0(Class<VR256X>)) 
			VINSERTF64X4Zrri(2(Class<VR256X>) -> 0(Class<VR512>)) 
		Combined result: 8.05 cycles

-----VPMOVZXBWrr-----
	VPMOVZXBWrr(1(Class<VR128>) -> 0(Class<VR128>))  [2.01;2.01]
		 Successful, latency: 2.01

-----VPMOVZXDQYrr-----
	VPMOVZXDQYrr(1(Class<VR128>) -> 0(Class<VR256>))  [2;4.03]
		Dependencies:
			VEXTRACTF128rri(1(Class<VR256>) -> 0(Class<VR128>)) 
			VPBROADCASTWYrr(1(Class<VR128>) -> 0(Class<VR256>)) 
		Combined result: 5.04 cycles

-----VPMOVZXDQZ128rr-----
	VPMOVZXDQZ128rr(1(Class<VR128X>) -> 0(Class<VR128X>))  [2.04;2.04]
		 Successful, latency: 2.04

-----VPMOVZXDQZ128rrk-----
	VPMOVZXDQZ128rrk(1(Class<VR128X>) -> 0(Class<VR128X>))  [2.02;2.02]
		 Successful, latency: 2.02
	VPMOVZXDQZ128rrk(3(Class<VR128X>) -> 0(Class<VR128X>))  [2.02;2.02]
		 Successful, latency: 2.02

-----VPMOVZXDQZ128rrkz-----
	VPMOVZXDQZ128rrkz(2(Class<VR128X>) -> 0(Class<VR128X>))  [2.03;2.03]
		 Successful, latency: 2.03

-----VPMOVZXDQZ256rr-----
	VPMOVZXDQZ256rr(1(Class<VR128X>) -> 0(Class<VR256X>))  [2.01;4.03]
		Dependencies:
			VEXTRACTI32X4Z256rrik(3(Class<VR256X>) -> 0(Class<VR128X>)) 
			VBROADCASTF32X2Z256rr(1(Class<VR128X>) -> 0(Class<VR256X>)) 
		Combined result: 5.05 cycles

-----VPMOVZXDQZ256rrk-----
	VPMOVZXDQZ256rrk(1(Class<VR256X>) -> 0(Class<VR256X>))  [2.02;2.02]
		 Successful, latency: 2.02
	VPMOVZXDQZ256rrk(3(Class<VR128X>) -> 0(Class<VR256X>))  [2.01;4.03]
		Dependencies:
			VEXTRACTI32X4Z256rrik(3(Class<VR256X>) -> 0(Class<VR128X>)) 
			VBROADCASTF32X2Z256rr(1(Class<VR128X>) -> 0(Class<VR256X>)) 
		Combined result: 5.05 cycles

-----VPMOVZXDQZ256rrkz-----
	VPMOVZXDQZ256rrkz(2(Class<VR128X>) -> 0(Class<VR256X>))  [2.01;4.03]
		Dependencies:
			VEXTRACTI32X4Z256rrik(3(Class<VR256X>) -> 0(Class<VR128X>)) 
			VBROADCASTF32X2Z256rr(1(Class<VR128X>) -> 0(Class<VR256X>)) 
		Combined result: 5.05 cycles

-----VPMOVZXDQZrr-----
	VPMOVZXDQZrr(1(Class<VR256X>) -> 0(Class<VR512>))  [4;7.02]
		Dependencies:
			VPMOVDWZrr(1(Class<VR512>) -> 0(Class<VR256X>)) 
			VINSERTF64X4Zrri(2(Class<VR256X>) -> 0(Class<VR512>)) 
		Combined result: 8.06 cycles

-----VPMOVZXDQZrrk-----
	VPMOVZXDQZrrk(1(Class<VR512>) -> 0(Class<VR512>))  [4.05;4.05]
		 Successful, latency: 4.05
	VPMOVZXDQZrrk(3(Class<VR256X>) -> 0(Class<VR512>))  [4.02;7.04]
		Dependencies:
			VPMOVDWZrr(1(Class<VR512>) -> 0(Class<VR256X>)) 
			VINSERTF64X4Zrri(2(Class<VR256X>) -> 0(Class<VR512>)) 
		Combined result: 8.08 cycles

-----VPMOVZXDQZrrkz-----
	VPMOVZXDQZrrkz(2(Class<VR256X>) -> 0(Class<VR512>))  [3.99;7.02]
		Dependencies:
			VPMOVDWZrr(1(Class<VR512>) -> 0(Class<VR256X>)) 
			VINSERTF64X4Zrri(2(Class<VR256X>) -> 0(Class<VR512>)) 
		Combined result: 8.06 cycles

-----VPMOVZXDQrr-----
	VPMOVZXDQrr(1(Class<VR128>) -> 0(Class<VR128>))  [2.02;2.02]
		 Successful, latency: 2.02

-----VPMOVZXWDYrr-----
	VPMOVZXWDYrr(1(Class<VR128>) -> 0(Class<VR256>))  [1.99;4.02]
		Dependencies:
			VEXTRACTF128rri(1(Class<VR256>) -> 0(Class<VR128>)) 
			VPBROADCASTWYrr(1(Class<VR128>) -> 0(Class<VR256>)) 
		Combined result: 5.03 cycles

-----VPMOVZXWDZ128rr-----
	VPMOVZXWDZ128rr(1(Class<VR128X>) -> 0(Class<VR128X>))  [2.01;2.01]
		 Successful, latency: 2.01

-----VPMOVZXWDZ128rrk-----
	VPMOVZXWDZ128rrk(1(Class<VR128X>) -> 0(Class<VR128X>))  [2.02;2.02]
		 Successful, latency: 2.02
	VPMOVZXWDZ128rrk(3(Class<VR128X>) -> 0(Class<VR128X>))  [2.01;2.01]
		 Successful, latency: 2.01

-----VPMOVZXWDZ128rrkz-----
	VPMOVZXWDZ128rrkz(2(Class<VR128X>) -> 0(Class<VR128X>))  [1.99;1.99]
		 Successful, latency: 1.99

-----VPMOVZXWDZ256rr-----
	VPMOVZXWDZ256rr(1(Class<VR128X>) -> 0(Class<VR256X>))  [2;4.02]
		Dependencies:
			VEXTRACTI32X4Z256rrik(3(Class<VR256X>) -> 0(Class<VR128X>)) 
			VBROADCASTF32X2Z256rr(1(Class<VR128X>) -> 0(Class<VR256X>)) 
		Combined result: 5.04 cycles

-----VPMOVZXWDZ256rrk-----
	VPMOVZXWDZ256rrk(1(Class<VR256X>) -> 0(Class<VR256X>))  [2.02;2.02]
		 Successful, latency: 2.02
	VPMOVZXWDZ256rrk(3(Class<VR128X>) -> 0(Class<VR256X>))  [1.99;4.02]
		Dependencies:
			VEXTRACTI32X4Z256rrik(3(Class<VR256X>) -> 0(Class<VR128X>)) 
			VBROADCASTF32X2Z256rr(1(Class<VR128X>) -> 0(Class<VR256X>)) 
		Combined result: 5.04 cycles

-----VPMOVZXWDZ256rrkz-----
	VPMOVZXWDZ256rrkz(2(Class<VR128X>) -> 0(Class<VR256X>))  [2;4.02]
		Dependencies:
			VEXTRACTI32X4Z256rrik(3(Class<VR256X>) -> 0(Class<VR128X>)) 
			VBROADCASTF32X2Z256rr(1(Class<VR128X>) -> 0(Class<VR256X>)) 
		Combined result: 5.04 cycles

-----VPMOVZXWDZrr-----
	VPMOVZXWDZrr(1(Class<VR256X>) -> 0(Class<VR512>))  [4.01;7.04]
		Dependencies:
			VPMOVDWZrr(1(Class<VR512>) -> 0(Class<VR256X>)) 
			VINSERTF64X4Zrri(2(Class<VR256X>) -> 0(Class<VR512>)) 
		Combined result: 8.07 cycles

-----VPMOVZXWDZrrk-----
	VPMOVZXWDZrrk(1(Class<VR512>) -> 0(Class<VR512>))  [4.02;4.02]
		 Successful, latency: 4.02
	VPMOVZXWDZrrk(3(Class<VR256X>) -> 0(Class<VR512>))  [4.02;7.04]
		Dependencies:
			VPMOVDWZrr(1(Class<VR512>) -> 0(Class<VR256X>)) 
			VINSERTF64X4Zrri(2(Class<VR256X>) -> 0(Class<VR512>)) 
		Combined result: 8.08 cycles

-----VPMOVZXWDZrrkz-----
	VPMOVZXWDZrrkz(2(Class<VR256X>) -> 0(Class<VR512>))  [4.01;7.03]
		Dependencies:
			VPMOVDWZrr(1(Class<VR512>) -> 0(Class<VR256X>)) 
			VINSERTF64X4Zrri(2(Class<VR256X>) -> 0(Class<VR512>)) 
		Combined result: 8.07 cycles

-----VPMOVZXWDrr-----
	VPMOVZXWDrr(1(Class<VR128>) -> 0(Class<VR128>))  [2.02;2.02]
		 Successful, latency: 2.02

-----VPMOVZXWQYrr-----
	VPMOVZXWQYrr(1(Class<VR128>) -> 0(Class<VR256>))  [2;4.03]
		Dependencies:
			VEXTRACTF128rri(1(Class<VR256>) -> 0(Class<VR128>)) 
			VPBROADCASTWYrr(1(Class<VR128>) -> 0(Class<VR256>)) 
		Combined result: 5.04 cycles

-----VPMOVZXWQZ128rr-----
	VPMOVZXWQZ128rr(1(Class<VR128X>) -> 0(Class<VR128X>))  [2;2]
		 Successful, latency: 2

-----VPMOVZXWQZ128rrk-----
	VPMOVZXWQZ128rrk(1(Class<VR128X>) -> 0(Class<VR128X>))  [2;2]
		 Successful, latency: 2
	VPMOVZXWQZ128rrk(3(Class<VR128X>) -> 0(Class<VR128X>))  [2.02;2.02]
		 Successful, latency: 2.02

-----VPMOVZXWQZ128rrkz-----
	VPMOVZXWQZ128rrkz(2(Class<VR128X>) -> 0(Class<VR128X>))  [2.03;2.03]
		 Successful, latency: 2.03

-----VPMOVZXWQZ256rr-----
	VPMOVZXWQZ256rr(1(Class<VR128X>) -> 0(Class<VR256X>))  [2.01;4.03]
		Dependencies:
			VEXTRACTI32X4Z256rrik(3(Class<VR256X>) -> 0(Class<VR128X>)) 
			VBROADCASTF32X2Z256rr(1(Class<VR128X>) -> 0(Class<VR256X>)) 
		Combined result: 5.05 cycles

-----VPMOVZXWQZ256rrk-----
	VPMOVZXWQZ256rrk(1(Class<VR256X>) -> 0(Class<VR256X>))  [2.04;2.04]
		 Successful, latency: 2.04
	VPMOVZXWQZ256rrk(3(Class<VR128X>) -> 0(Class<VR256X>))  [2;4.02]
		Dependencies:
			VEXTRACTI32X4Z256rrik(3(Class<VR256X>) -> 0(Class<VR128X>)) 
			VBROADCASTF32X2Z256rr(1(Class<VR128X>) -> 0(Class<VR256X>)) 
		Combined result: 5.04 cycles

-----VPMOVZXWQZ256rrkz-----
	VPMOVZXWQZ256rrkz(2(Class<VR128X>) -> 0(Class<VR256X>))  [2.03;4.05]
		Dependencies:
			VEXTRACTI32X4Z256rrik(3(Class<VR256X>) -> 0(Class<VR128X>)) 
			VBROADCASTF32X2Z256rr(1(Class<VR128X>) -> 0(Class<VR256X>)) 
		Combined result: 5.07 cycles

-----VPMOVZXWQZrr-----
	VPMOVZXWQZrr(1(Class<VR128X>) -> 0(Class<VR512>))  [4.01;7.04]
		Dependencies:
			VEXTRACTF64X2Zrri(1(Class<VR512>) -> 0(Class<VR128X>)) 
			VINSERTF32X4Zrri(2(Class<VR128X>) -> 0(Class<VR512>)) 
		Combined result: 8.06 cycles

-----VPMOVZXWQZrrk-----
	VPMOVZXWQZrrk(1(Class<VR512>) -> 0(Class<VR512>))  [4.06;4.06]
		 Successful, latency: 4.06
	VPMOVZXWQZrrk(3(Class<VR128X>) -> 0(Class<VR512>))  [4;7.03]
		Dependencies:
			VEXTRACTF64X2Zrri(1(Class<VR512>) -> 0(Class<VR128X>)) 
			VINSERTF32X4Zrri(2(Class<VR128X>) -> 0(Class<VR512>)) 
		Combined result: 8.05 cycles

-----VPMOVZXWQZrrkz-----
	VPMOVZXWQZrrkz(2(Class<VR128X>) -> 0(Class<VR512>))  [4;7.02]
		Dependencies:
			VEXTRACTF64X2Zrri(1(Class<VR512>) -> 0(Class<VR128X>)) 
			VINSERTF32X4Zrri(2(Class<VR128X>) -> 0(Class<VR512>)) 
		Combined result: 8.05 cycles

-----VPMOVZXWQrr-----
	VPMOVZXWQrr(1(Class<VR128>) -> 0(Class<VR128>))  [2.01;2.01]
		 Successful, latency: 2.01

-----VPMULDQYrr-----
	VPMULDQYrr(1(Class<VR256>) -> 0(Class<VR256>))  [3.03;3.03]
		 Successful, latency: 3.03
	VPMULDQYrr(2(Class<VR256>) -> 0(Class<VR256>))  [3.05;3.05]
		 Successful, latency: 3.05

-----VPMULDQZ128rr-----
	VPMULDQZ128rr(1(Class<VR128X>) -> 0(Class<VR128X>))  [3.02;3.02]
		 Successful, latency: 3.02
	VPMULDQZ128rr(2(Class<VR128X>) -> 0(Class<VR128X>))  [3.04;3.04]
		 Successful, latency: 3.04

-----VPMULDQZ128rrk-----
	VPMULDQZ128rrk(1(Class<VR128X>) -> 0(Class<VR128X>))  [3.02;3.02]
		 Successful, latency: 3.02
	VPMULDQZ128rrk(3(Class<VR128X>) -> 0(Class<VR128X>))  [3.04;3.04]
		 Successful, latency: 3.04
	VPMULDQZ128rrk(4(Class<VR128X>) -> 0(Class<VR128X>))  [3.02;3.02]
		 Successful, latency: 3.02

-----VPMULDQZ128rrkz-----
	VPMULDQZ128rrkz(2(Class<VR128X>) -> 0(Class<VR128X>))  [3.04;3.04]
		 Successful, latency: 3.04
	VPMULDQZ128rrkz(3(Class<VR128X>) -> 0(Class<VR128X>))  [3.03;3.03]
		 Successful, latency: 3.03

-----VPMULDQZ256rr-----
	VPMULDQZ256rr(1(Class<VR256X>) -> 0(Class<VR256X>))  [3.09;3.09]
		 Successful, latency: 3.09
	VPMULDQZ256rr(2(Class<VR256X>) -> 0(Class<VR256X>))  [3.04;3.04]
		 Successful, latency: 3.04

-----VPMULDQZ256rrk-----
	VPMULDQZ256rrk(1(Class<VR256X>) -> 0(Class<VR256X>))  [3.04;3.04]
		 Successful, latency: 3.04
	VPMULDQZ256rrk(3(Class<VR256X>) -> 0(Class<VR256X>))  [3.03;3.03]
		 Successful, latency: 3.03
	VPMULDQZ256rrk(4(Class<VR256X>) -> 0(Class<VR256X>))  [3.03;3.03]
		 Successful, latency: 3.03

-----VPMULDQZ256rrkz-----
	VPMULDQZ256rrkz(2(Class<VR256X>) -> 0(Class<VR256X>))  [3.04;3.04]
		 Successful, latency: 3.04
	VPMULDQZ256rrkz(3(Class<VR256X>) -> 0(Class<VR256X>))  [3.02;3.02]
		 Successful, latency: 3.02

-----VPMULDQZrr-----
	VPMULDQZrr(1(Class<VR512>) -> 0(Class<VR512>))  [3.05;3.05]
		 Successful, latency: 3.05
	VPMULDQZrr(2(Class<VR512>) -> 0(Class<VR512>))  [3.05;3.05]
		 Successful, latency: 3.05

-----VPMULDQZrrk-----
	VPMULDQZrrk(1(Class<VR512>) -> 0(Class<VR512>))  [3.06;3.06]
		 Successful, latency: 3.06
	VPMULDQZrrk(3(Class<VR512>) -> 0(Class<VR512>))  [3.04;3.04]
		 Successful, latency: 3.04
	VPMULDQZrrk(4(Class<VR512>) -> 0(Class<VR512>))  [3.05;3.05]
		 Successful, latency: 3.05

-----VPMULDQZrrkz-----
	VPMULDQZrrkz(2(Class<VR512>) -> 0(Class<VR512>))  [3.03;3.03]
		 Successful, latency: 3.03
	VPMULDQZrrkz(3(Class<VR512>) -> 0(Class<VR512>))  [3.04;3.04]
		 Successful, latency: 3.04

-----VPMULDQrr-----
	VPMULDQrr(1(Class<VR128>) -> 0(Class<VR128>))  [3.03;3.03]
		 Successful, latency: 3.03
	VPMULDQrr(2(Class<VR128>) -> 0(Class<VR128>))  [3.02;3.02]
		 Successful, latency: 3.02

-----VPMULHRSWYrr-----
	VPMULHRSWYrr(1(Class<VR256>) -> 0(Class<VR256>))  [3.03;3.03]
		 Successful, latency: 3.03
	VPMULHRSWYrr(2(Class<VR256>) -> 0(Class<VR256>))  [3.04;3.04]
		 Successful, latency: 3.04

-----VPMULHRSWZ128rr-----
	VPMULHRSWZ128rr(1(Class<VR128X>) -> 0(Class<VR128X>))  [3.05;3.05]
		 Successful, latency: 3.05
	VPMULHRSWZ128rr(2(Class<VR128X>) -> 0(Class<VR128X>))  [3.02;3.02]
		 Successful, latency: 3.02

-----VPMULHRSWZ128rrk-----
	VPMULHRSWZ128rrk(1(Class<VR128X>) -> 0(Class<VR128X>))  [3.05;3.05]
		 Successful, latency: 3.05
	VPMULHRSWZ128rrk(3(Class<VR128X>) -> 0(Class<VR128X>))  [3.04;3.04]
		 Successful, latency: 3.04
	VPMULHRSWZ128rrk(4(Class<VR128X>) -> 0(Class<VR128X>))  [3.03;3.03]
		 Successful, latency: 3.03

-----VPMULHRSWZ128rrkz-----
	VPMULHRSWZ128rrkz(2(Class<VR128X>) -> 0(Class<VR128X>))  [3.03;3.03]
		 Successful, latency: 3.03
	VPMULHRSWZ128rrkz(3(Class<VR128X>) -> 0(Class<VR128X>))  [3.03;3.03]
		 Successful, latency: 3.03

-----VPMULHRSWZ256rr-----
	VPMULHRSWZ256rr(1(Class<VR256X>) -> 0(Class<VR256X>))  [3.05;3.05]
		 Successful, latency: 3.05
	VPMULHRSWZ256rr(2(Class<VR256X>) -> 0(Class<VR256X>))  [3.04;3.04]
		 Successful, latency: 3.04

-----VPMULHRSWZ256rrk-----
	VPMULHRSWZ256rrk(1(Class<VR256X>) -> 0(Class<VR256X>))  [3.04;3.04]
		 Successful, latency: 3.04
	VPMULHRSWZ256rrk(3(Class<VR256X>) -> 0(Class<VR256X>))  [3.02;3.02]
		 Successful, latency: 3.02
	VPMULHRSWZ256rrk(4(Class<VR256X>) -> 0(Class<VR256X>))  [3.05;3.05]
		 Successful, latency: 3.05

-----VPMULHRSWZ256rrkz-----
	VPMULHRSWZ256rrkz(2(Class<VR256X>) -> 0(Class<VR256X>))  [3.08;3.08]
		 Successful, latency: 3.08
	VPMULHRSWZ256rrkz(3(Class<VR256X>) -> 0(Class<VR256X>))  [3.05;3.05]
		 Successful, latency: 3.05

-----VPMULHRSWZrr-----
	VPMULHRSWZrr(1(Class<VR512>) -> 0(Class<VR512>))  [3.03;3.03]
		 Successful, latency: 3.03
	VPMULHRSWZrr(2(Class<VR512>) -> 0(Class<VR512>))  [3.02;3.02]
		 Successful, latency: 3.02

-----VPMULHRSWZrrk-----
	VPMULHRSWZrrk(1(Class<VR512>) -> 0(Class<VR512>))  [3.03;3.03]
		 Successful, latency: 3.03
	VPMULHRSWZrrk(3(Class<VR512>) -> 0(Class<VR512>))  [3.04;3.04]
		 Successful, latency: 3.04
	VPMULHRSWZrrk(4(Class<VR512>) -> 0(Class<VR512>))  [3.02;3.02]
		 Successful, latency: 3.02

-----VPMULHRSWZrrkz-----
	VPMULHRSWZrrkz(2(Class<VR512>) -> 0(Class<VR512>))  [3.05;3.05]
		 Successful, latency: 3.05
	VPMULHRSWZrrkz(3(Class<VR512>) -> 0(Class<VR512>))  [3.02;3.02]
		 Successful, latency: 3.02

-----VPMULHRSWrr-----
	VPMULHRSWrr(1(Class<VR128>) -> 0(Class<VR128>))  [3.04;3.04]
		 Successful, latency: 3.04
	VPMULHRSWrr(2(Class<VR128>) -> 0(Class<VR128>))  [3.02;3.02]
		 Successful, latency: 3.02

-----VPMULHUWYrr-----
	VPMULHUWYrr(1(Class<VR256>) -> 0(Class<VR256>))  [3.03;3.03]
		 Successful, latency: 3.03
	VPMULHUWYrr(2(Class<VR256>) -> 0(Class<VR256>))  [3.04;3.04]
		 Successful, latency: 3.04

-----VPMULHUWZ128rr-----
	VPMULHUWZ128rr(1(Class<VR128X>) -> 0(Class<VR128X>))  [3.03;3.03]
		 Successful, latency: 3.03
	VPMULHUWZ128rr(2(Class<VR128X>) -> 0(Class<VR128X>))  [3.03;3.03]
		 Successful, latency: 3.03

-----VPMULHUWZ128rrk-----
	VPMULHUWZ128rrk(1(Class<VR128X>) -> 0(Class<VR128X>))  [3.04;3.04]
		 Successful, latency: 3.04
	VPMULHUWZ128rrk(3(Class<VR128X>) -> 0(Class<VR128X>))  [3.06;3.06]
		 Successful, latency: 3.06
	VPMULHUWZ128rrk(4(Class<VR128X>) -> 0(Class<VR128X>))  [3.03;3.03]
		 Successful, latency: 3.03

-----VPMULHUWZ128rrkz-----
	VPMULHUWZ128rrkz(2(Class<VR128X>) -> 0(Class<VR128X>))  [3.03;3.03]
		 Successful, latency: 3.03
	VPMULHUWZ128rrkz(3(Class<VR128X>) -> 0(Class<VR128X>))  [3.03;3.03]
		 Successful, latency: 3.03

-----VPMULHUWZ256rr-----
	VPMULHUWZ256rr(1(Class<VR256X>) -> 0(Class<VR256X>))  [3.04;3.04]
		 Successful, latency: 3.04
	VPMULHUWZ256rr(2(Class<VR256X>) -> 0(Class<VR256X>))  [3.03;3.03]
		 Successful, latency: 3.03

-----VPMULHUWZ256rrk-----
	VPMULHUWZ256rrk(1(Class<VR256X>) -> 0(Class<VR256X>))  [3.04;3.04]
		 Successful, latency: 3.04
	VPMULHUWZ256rrk(3(Class<VR256X>) -> 0(Class<VR256X>))  [3.05;3.05]
		 Successful, latency: 3.05
	VPMULHUWZ256rrk(4(Class<VR256X>) -> 0(Class<VR256X>))  [3.04;3.04]
		 Successful, latency: 3.04

-----VPMULHUWZ256rrkz-----
	VPMULHUWZ256rrkz(2(Class<VR256X>) -> 0(Class<VR256X>))  [3.06;3.06]
		 Successful, latency: 3.06
	VPMULHUWZ256rrkz(3(Class<VR256X>) -> 0(Class<VR256X>))  [3.04;3.04]
		 Successful, latency: 3.04

-----VPMULHUWZrr-----
	VPMULHUWZrr(1(Class<VR512>) -> 0(Class<VR512>))  [3.03;3.03]
		 Successful, latency: 3.03
	VPMULHUWZrr(2(Class<VR512>) -> 0(Class<VR512>))  [3.06;3.06]
		 Successful, latency: 3.06

-----VPMULHUWZrrk-----
	VPMULHUWZrrk(1(Class<VR512>) -> 0(Class<VR512>))  [3.04;3.04]
		 Successful, latency: 3.04
	VPMULHUWZrrk(3(Class<VR512>) -> 0(Class<VR512>))  [3.02;3.02]
		 Successful, latency: 3.02
	VPMULHUWZrrk(4(Class<VR512>) -> 0(Class<VR512>))  [3.04;3.04]
		 Successful, latency: 3.04

-----VPMULHUWZrrkz-----
	VPMULHUWZrrkz(2(Class<VR512>) -> 0(Class<VR512>))  [3.04;3.04]
		 Successful, latency: 3.04
	VPMULHUWZrrkz(3(Class<VR512>) -> 0(Class<VR512>))  [3.02;3.02]
		 Successful, latency: 3.02

-----VPMULHUWrr-----
	VPMULHUWrr(1(Class<VR128>) -> 0(Class<VR128>))  [3.01;3.01]
		 Successful, latency: 3.01
	VPMULHUWrr(2(Class<VR128>) -> 0(Class<VR128>))  [3.03;3.03]
		 Successful, latency: 3.03

-----VPMULHWYrr-----
	VPMULHWYrr(1(Class<VR256>) -> 0(Class<VR256>))  [3.02;3.02]
		 Successful, latency: 3.02
	VPMULHWYrr(2(Class<VR256>) -> 0(Class<VR256>))  [3.03;3.03]
		 Successful, latency: 3.03

-----VPMULHWZ128rr-----
	VPMULHWZ128rr(1(Class<VR128X>) -> 0(Class<VR128X>))  [3.02;3.02]
		 Successful, latency: 3.02
	VPMULHWZ128rr(2(Class<VR128X>) -> 0(Class<VR128X>))  [3.04;3.04]
		 Successful, latency: 3.04

-----VPMULHWZ128rrk-----
	VPMULHWZ128rrk(1(Class<VR128X>) -> 0(Class<VR128X>))  [3.01;3.01]
		 Successful, latency: 3.01
	VPMULHWZ128rrk(3(Class<VR128X>) -> 0(Class<VR128X>))  [3.03;3.03]
		 Successful, latency: 3.03
	VPMULHWZ128rrk(4(Class<VR128X>) -> 0(Class<VR128X>))  [3.06;3.06]
		 Successful, latency: 3.06

-----VPMULHWZ128rrkz-----
	VPMULHWZ128rrkz(2(Class<VR128X>) -> 0(Class<VR128X>))  [3.04;3.04]
		 Successful, latency: 3.04
	VPMULHWZ128rrkz(3(Class<VR128X>) -> 0(Class<VR128X>))  [3.04;3.04]
		 Successful, latency: 3.04

-----VPMULHWZ256rr-----
	VPMULHWZ256rr(1(Class<VR256X>) -> 0(Class<VR256X>))  [3.02;3.02]
		 Successful, latency: 3.02
	VPMULHWZ256rr(2(Class<VR256X>) -> 0(Class<VR256X>))  [3.06;3.06]
		 Successful, latency: 3.06

-----VPMULHWZ256rrk-----
	VPMULHWZ256rrk(1(Class<VR256X>) -> 0(Class<VR256X>))  [3.03;3.03]
		 Successful, latency: 3.03
	VPMULHWZ256rrk(3(Class<VR256X>) -> 0(Class<VR256X>))  [3.06;3.06]
		 Successful, latency: 3.06
	VPMULHWZ256rrk(4(Class<VR256X>) -> 0(Class<VR256X>))  [3.04;3.04]
		 Successful, latency: 3.04

-----VPMULHWZ256rrkz-----
	VPMULHWZ256rrkz(2(Class<VR256X>) -> 0(Class<VR256X>))  [3.02;3.02]
		 Successful, latency: 3.02
	VPMULHWZ256rrkz(3(Class<VR256X>) -> 0(Class<VR256X>))  [3.03;3.03]
		 Successful, latency: 3.03

-----VPMULHWZrr-----
	VPMULHWZrr(1(Class<VR512>) -> 0(Class<VR512>))  [3.03;3.03]
		 Successful, latency: 3.03
	VPMULHWZrr(2(Class<VR512>) -> 0(Class<VR512>))  [3.03;3.03]
		 Successful, latency: 3.03

-----VPMULHWZrrk-----
	VPMULHWZrrk(1(Class<VR512>) -> 0(Class<VR512>))  [3.03;3.03]
		 Successful, latency: 3.03
	VPMULHWZrrk(3(Class<VR512>) -> 0(Class<VR512>))  [3.04;3.04]
		 Successful, latency: 3.04
	VPMULHWZrrk(4(Class<VR512>) -> 0(Class<VR512>))  [3.03;3.03]
		 Successful, latency: 3.03

-----VPMULHWZrrkz-----
	VPMULHWZrrkz(2(Class<VR512>) -> 0(Class<VR512>))  [3.04;3.04]
		 Successful, latency: 3.04
	VPMULHWZrrkz(3(Class<VR512>) -> 0(Class<VR512>))  [3.02;3.02]
		 Successful, latency: 3.02

-----VPMULHWrr-----
	VPMULHWrr(1(Class<VR128>) -> 0(Class<VR128>))  [3.08;3.08]
		 Successful, latency: 3.08
	VPMULHWrr(2(Class<VR128>) -> 0(Class<VR128>))  [3.05;3.05]
		 Successful, latency: 3.05

-----VPMULLDYrr-----
	VPMULLDYrr(1(Class<VR256>) -> 0(Class<VR256>))  [3.03;3.03]
		 Successful, latency: 3.03
	VPMULLDYrr(2(Class<VR256>) -> 0(Class<VR256>))  [3.04;3.04]
		 Successful, latency: 3.04

-----VPMULLDZ128rr-----
	VPMULLDZ128rr(1(Class<VR128X>) -> 0(Class<VR128X>))  [3.02;3.02]
		 Successful, latency: 3.02
	VPMULLDZ128rr(2(Class<VR128X>) -> 0(Class<VR128X>))  [3.02;3.02]
		 Successful, latency: 3.02

-----VPMULLDZ128rrk-----
	VPMULLDZ128rrk(1(Class<VR128X>) -> 0(Class<VR128X>))  [3.02;3.02]
		 Successful, latency: 3.02
	VPMULLDZ128rrk(3(Class<VR128X>) -> 0(Class<VR128X>))  [3.02;3.02]
		 Successful, latency: 3.02
	VPMULLDZ128rrk(4(Class<VR128X>) -> 0(Class<VR128X>))  [3.03;3.03]
		 Successful, latency: 3.03

-----VPMULLDZ128rrkz-----
	VPMULLDZ128rrkz(2(Class<VR128X>) -> 0(Class<VR128X>))  [3.02;3.02]
		 Successful, latency: 3.02
	VPMULLDZ128rrkz(3(Class<VR128X>) -> 0(Class<VR128X>))  [3.03;3.03]
		 Successful, latency: 3.03

-----VPMULLDZ256rr-----
	VPMULLDZ256rr(1(Class<VR256X>) -> 0(Class<VR256X>))  [3.02;3.02]
		 Successful, latency: 3.02
	VPMULLDZ256rr(2(Class<VR256X>) -> 0(Class<VR256X>))  [3.02;3.02]
		 Successful, latency: 3.02

-----VPMULLDZ256rrk-----
	VPMULLDZ256rrk(1(Class<VR256X>) -> 0(Class<VR256X>))  [3.05;3.05]
		 Successful, latency: 3.05
	VPMULLDZ256rrk(3(Class<VR256X>) -> 0(Class<VR256X>))  [3.04;3.04]
		 Successful, latency: 3.04
	VPMULLDZ256rrk(4(Class<VR256X>) -> 0(Class<VR256X>))  [3.05;3.05]
		 Successful, latency: 3.05

-----VPMULLDZ256rrkz-----
	VPMULLDZ256rrkz(2(Class<VR256X>) -> 0(Class<VR256X>))  [3.04;3.04]
		 Successful, latency: 3.04
	VPMULLDZ256rrkz(3(Class<VR256X>) -> 0(Class<VR256X>))  [3.01;3.01]
		 Successful, latency: 3.01

-----VPMULLDZrr-----
	VPMULLDZrr(1(Class<VR512>) -> 0(Class<VR512>))  [3.02;3.02]
		 Successful, latency: 3.02
	VPMULLDZrr(2(Class<VR512>) -> 0(Class<VR512>))  [3.04;3.04]
		 Successful, latency: 3.04

-----VPMULLDZrrk-----
	VPMULLDZrrk(1(Class<VR512>) -> 0(Class<VR512>))  [3.05;3.05]
		 Successful, latency: 3.05
	VPMULLDZrrk(3(Class<VR512>) -> 0(Class<VR512>))  [3.04;3.04]
		 Successful, latency: 3.04
	VPMULLDZrrk(4(Class<VR512>) -> 0(Class<VR512>))  [3.03;3.03]
		 Successful, latency: 3.03

-----VPMULLDZrrkz-----
	VPMULLDZrrkz(2(Class<VR512>) -> 0(Class<VR512>))  [3.03;3.03]
		 Successful, latency: 3.03
	VPMULLDZrrkz(3(Class<VR512>) -> 0(Class<VR512>))  [3.05;3.05]
		 Successful, latency: 3.05

-----VPMULLDrr-----
	VPMULLDrr(1(Class<VR128>) -> 0(Class<VR128>))  [3.02;3.02]
		 Successful, latency: 3.02
	VPMULLDrr(2(Class<VR128>) -> 0(Class<VR128>))  [3.03;3.03]
		 Successful, latency: 3.03

-----VPMULLQZ128rr-----
	VPMULLQZ128rr(1(Class<VR128X>) -> 0(Class<VR128X>))  [3.04;3.04]
		 Successful, latency: 3.04
	VPMULLQZ128rr(2(Class<VR128X>) -> 0(Class<VR128X>))  [3.06;3.06]
		 Successful, latency: 3.06

-----VPMULLQZ128rrk-----
	VPMULLQZ128rrk(1(Class<VR128X>) -> 0(Class<VR128X>))  [3.03;3.03]
		 Successful, latency: 3.03
	VPMULLQZ128rrk(3(Class<VR128X>) -> 0(Class<VR128X>))  [3.02;3.02]
		 Successful, latency: 3.02
	VPMULLQZ128rrk(4(Class<VR128X>) -> 0(Class<VR128X>))  [3.05;3.05]
		 Successful, latency: 3.05

-----VPMULLQZ128rrkz-----
	VPMULLQZ128rrkz(2(Class<VR128X>) -> 0(Class<VR128X>))  [3.04;3.04]
		 Successful, latency: 3.04
	VPMULLQZ128rrkz(3(Class<VR128X>) -> 0(Class<VR128X>))  [3.01;3.01]
		 Successful, latency: 3.01

-----VPMULLQZ256rr-----
	VPMULLQZ256rr(1(Class<VR256X>) -> 0(Class<VR256X>))  [3.03;3.03]
		 Successful, latency: 3.03
	VPMULLQZ256rr(2(Class<VR256X>) -> 0(Class<VR256X>))  [3.03;3.03]
		 Successful, latency: 3.03

-----VPMULLQZ256rrk-----
	VPMULLQZ256rrk(1(Class<VR256X>) -> 0(Class<VR256X>))  [3.01;3.01]
		 Successful, latency: 3.01
	VPMULLQZ256rrk(3(Class<VR256X>) -> 0(Class<VR256X>))  [3.01;3.01]
		 Successful, latency: 3.01
	VPMULLQZ256rrk(4(Class<VR256X>) -> 0(Class<VR256X>))  [3.02;3.02]
		 Successful, latency: 3.02

-----VPMULLQZ256rrkz-----
	VPMULLQZ256rrkz(2(Class<VR256X>) -> 0(Class<VR256X>))  [3.01;3.01]
		 Successful, latency: 3.01
	VPMULLQZ256rrkz(3(Class<VR256X>) -> 0(Class<VR256X>))  [3.03;3.03]
		 Successful, latency: 3.03

-----VPMULLQZrr-----
	VPMULLQZrr(1(Class<VR512>) -> 0(Class<VR512>))  [3.03;3.03]
		 Successful, latency: 3.03
	VPMULLQZrr(2(Class<VR512>) -> 0(Class<VR512>))  [3.05;3.05]
		 Successful, latency: 3.05

-----VPMULLQZrrk-----
	VPMULLQZrrk(1(Class<VR512>) -> 0(Class<VR512>))  [3.05;3.05]
		 Successful, latency: 3.05
	VPMULLQZrrk(3(Class<VR512>) -> 0(Class<VR512>))  [3.05;3.05]
		 Successful, latency: 3.05
	VPMULLQZrrk(4(Class<VR512>) -> 0(Class<VR512>))  [3.04;3.04]
		 Successful, latency: 3.04

-----VPMULLQZrrkz-----
	VPMULLQZrrkz(2(Class<VR512>) -> 0(Class<VR512>))  [3.03;3.03]
		 Successful, latency: 3.03
	VPMULLQZrrkz(3(Class<VR512>) -> 0(Class<VR512>))  [3.03;3.03]
		 Successful, latency: 3.03

-----VPMULLWYrr-----
	VPMULLWYrr(1(Class<VR256>) -> 0(Class<VR256>))  [3.03;3.03]
		 Successful, latency: 3.03
	VPMULLWYrr(2(Class<VR256>) -> 0(Class<VR256>))  [3.04;3.04]
		 Successful, latency: 3.04

-----VPMULLWZ128rr-----
	VPMULLWZ128rr(1(Class<VR128X>) -> 0(Class<VR128X>))  [3.03;3.03]
		 Successful, latency: 3.03
	VPMULLWZ128rr(2(Class<VR128X>) -> 0(Class<VR128X>))  [3.02;3.02]
		 Successful, latency: 3.02

-----VPMULLWZ128rrk-----
	VPMULLWZ128rrk(1(Class<VR128X>) -> 0(Class<VR128X>))  [3.03;3.03]
		 Successful, latency: 3.03
	VPMULLWZ128rrk(3(Class<VR128X>) -> 0(Class<VR128X>))  [3.04;3.04]
		 Successful, latency: 3.04
	VPMULLWZ128rrk(4(Class<VR128X>) -> 0(Class<VR128X>))  [3.03;3.03]
		 Successful, latency: 3.03

-----VPMULLWZ128rrkz-----
	VPMULLWZ128rrkz(2(Class<VR128X>) -> 0(Class<VR128X>))  [3.03;3.03]
		 Successful, latency: 3.03
	VPMULLWZ128rrkz(3(Class<VR128X>) -> 0(Class<VR128X>))  [3.07;3.07]
		 Successful, latency: 3.07

-----VPMULLWZ256rr-----
	VPMULLWZ256rr(1(Class<VR256X>) -> 0(Class<VR256X>))  [3.04;3.04]
		 Successful, latency: 3.04
	VPMULLWZ256rr(2(Class<VR256X>) -> 0(Class<VR256X>))  [3.03;3.03]
		 Successful, latency: 3.03

-----VPMULLWZ256rrk-----
	VPMULLWZ256rrk(1(Class<VR256X>) -> 0(Class<VR256X>))  [3.03;3.03]
		 Successful, latency: 3.03
	VPMULLWZ256rrk(3(Class<VR256X>) -> 0(Class<VR256X>))  [3.05;3.05]
		 Successful, latency: 3.05
	VPMULLWZ256rrk(4(Class<VR256X>) -> 0(Class<VR256X>))  [3.03;3.03]
		 Successful, latency: 3.03

-----VPMULLWZ256rrkz-----
	VPMULLWZ256rrkz(2(Class<VR256X>) -> 0(Class<VR256X>))  [3.03;3.03]
		 Successful, latency: 3.03
	VPMULLWZ256rrkz(3(Class<VR256X>) -> 0(Class<VR256X>))  [3.03;3.03]
		 Successful, latency: 3.03

-----VPMULLWZrr-----
	VPMULLWZrr(1(Class<VR512>) -> 0(Class<VR512>))  [3.02;3.02]
		 Successful, latency: 3.02
	VPMULLWZrr(2(Class<VR512>) -> 0(Class<VR512>))  [3.03;3.03]
		 Successful, latency: 3.03

-----VPMULLWZrrk-----
	VPMULLWZrrk(1(Class<VR512>) -> 0(Class<VR512>))  [3.02;3.02]
		 Successful, latency: 3.02
	VPMULLWZrrk(3(Class<VR512>) -> 0(Class<VR512>))  [3.02;3.02]
		 Successful, latency: 3.02
	VPMULLWZrrk(4(Class<VR512>) -> 0(Class<VR512>))  [3.02;3.02]
		 Successful, latency: 3.02

-----VPMULLWZrrkz-----
	VPMULLWZrrkz(2(Class<VR512>) -> 0(Class<VR512>))  [3.06;3.06]
		 Successful, latency: 3.06
	VPMULLWZrrkz(3(Class<VR512>) -> 0(Class<VR512>))  [3.04;3.04]
		 Successful, latency: 3.04

-----VPMULLWrr-----
	VPMULLWrr(1(Class<VR128>) -> 0(Class<VR128>))  [3.03;3.03]
		 Successful, latency: 3.03
	VPMULLWrr(2(Class<VR128>) -> 0(Class<VR128>))  [3.02;3.02]
		 Successful, latency: 3.02

-----VPMULTISHIFTQBZ128rr-----
	VPMULTISHIFTQBZ128rr(1(Class<VR128X>) -> 0(Class<VR128X>))  [3.05;3.05]
		 Successful, latency: 3.05
	VPMULTISHIFTQBZ128rr(2(Class<VR128X>) -> 0(Class<VR128X>))  [3.03;3.03]
		 Successful, latency: 3.03

-----VPMULTISHIFTQBZ128rrk-----
	VPMULTISHIFTQBZ128rrk(1(Class<VR128X>) -> 0(Class<VR128X>))  [3.07;3.07]
		 Successful, latency: 3.07
	VPMULTISHIFTQBZ128rrk(3(Class<VR128X>) -> 0(Class<VR128X>))  [3.02;3.02]
		 Successful, latency: 3.02
	VPMULTISHIFTQBZ128rrk(4(Class<VR128X>) -> 0(Class<VR128X>))  [3.02;3.02]
		 Successful, latency: 3.02

-----VPMULTISHIFTQBZ128rrkz-----
	VPMULTISHIFTQBZ128rrkz(2(Class<VR128X>) -> 0(Class<VR128X>))  [3.04;3.04]
		 Successful, latency: 3.04
	VPMULTISHIFTQBZ128rrkz(3(Class<VR128X>) -> 0(Class<VR128X>))  [3.04;3.04]
		 Successful, latency: 3.04

-----VPMULTISHIFTQBZ256rr-----
	VPMULTISHIFTQBZ256rr(1(Class<VR256X>) -> 0(Class<VR256X>))  [3.02;3.02]
		 Successful, latency: 3.02
	VPMULTISHIFTQBZ256rr(2(Class<VR256X>) -> 0(Class<VR256X>))  [3.04;3.04]
		 Successful, latency: 3.04

-----VPMULTISHIFTQBZ256rrk-----
	VPMULTISHIFTQBZ256rrk(1(Class<VR256X>) -> 0(Class<VR256X>))  [3.03;3.03]
		 Successful, latency: 3.03
	VPMULTISHIFTQBZ256rrk(3(Class<VR256X>) -> 0(Class<VR256X>))  [3.04;3.04]
		 Successful, latency: 3.04
	VPMULTISHIFTQBZ256rrk(4(Class<VR256X>) -> 0(Class<VR256X>))  [3.04;3.04]
		 Successful, latency: 3.04

-----VPMULTISHIFTQBZ256rrkz-----
	VPMULTISHIFTQBZ256rrkz(2(Class<VR256X>) -> 0(Class<VR256X>))  [3.02;3.02]
		 Successful, latency: 3.02
	VPMULTISHIFTQBZ256rrkz(3(Class<VR256X>) -> 0(Class<VR256X>))  [3.03;3.03]
		 Successful, latency: 3.03

-----VPMULTISHIFTQBZrr-----
	VPMULTISHIFTQBZrr(1(Class<VR512>) -> 0(Class<VR512>))  [3.02;3.02]
		 Successful, latency: 3.02
	VPMULTISHIFTQBZrr(2(Class<VR512>) -> 0(Class<VR512>))  [3.05;3.05]
		 Successful, latency: 3.05

-----VPMULTISHIFTQBZrrk-----
	VPMULTISHIFTQBZrrk(1(Class<VR512>) -> 0(Class<VR512>))  [3.03;3.03]
		 Successful, latency: 3.03
	VPMULTISHIFTQBZrrk(3(Class<VR512>) -> 0(Class<VR512>))  [3.03;3.03]
		 Successful, latency: 3.03
	VPMULTISHIFTQBZrrk(4(Class<VR512>) -> 0(Class<VR512>))  [3.02;3.02]
		 Successful, latency: 3.02

-----VPMULTISHIFTQBZrrkz-----
	VPMULTISHIFTQBZrrkz(2(Class<VR512>) -> 0(Class<VR512>))  [3.03;3.03]
		 Successful, latency: 3.03
	VPMULTISHIFTQBZrrkz(3(Class<VR512>) -> 0(Class<VR512>))  [3.02;3.02]
		 Successful, latency: 3.02

-----VPMULUDQYrr-----
	VPMULUDQYrr(1(Class<VR256>) -> 0(Class<VR256>))  [3;3]
		 Successful, latency: 3
	VPMULUDQYrr(2(Class<VR256>) -> 0(Class<VR256>))  [3.04;3.04]
		 Successful, latency: 3.04

-----VPMULUDQZ128rr-----
	VPMULUDQZ128rr(1(Class<VR128X>) -> 0(Class<VR128X>))  [3.04;3.04]
		 Successful, latency: 3.04
	VPMULUDQZ128rr(2(Class<VR128X>) -> 0(Class<VR128X>))  [3.02;3.02]
		 Successful, latency: 3.02

-----VPMULUDQZ128rrk-----
	VPMULUDQZ128rrk(1(Class<VR128X>) -> 0(Class<VR128X>))  [3.02;3.02]
		 Successful, latency: 3.02
	VPMULUDQZ128rrk(3(Class<VR128X>) -> 0(Class<VR128X>))  [3.03;3.03]
		 Successful, latency: 3.03
	VPMULUDQZ128rrk(4(Class<VR128X>) -> 0(Class<VR128X>))  [3.05;3.05]
		 Successful, latency: 3.05

-----VPMULUDQZ128rrkz-----
	VPMULUDQZ128rrkz(2(Class<VR128X>) -> 0(Class<VR128X>))  [3.03;3.03]
		 Successful, latency: 3.03
	VPMULUDQZ128rrkz(3(Class<VR128X>) -> 0(Class<VR128X>))  [3.03;3.03]
		 Successful, latency: 3.03

-----VPMULUDQZ256rr-----
	VPMULUDQZ256rr(1(Class<VR256X>) -> 0(Class<VR256X>))  [3.03;3.03]
		 Successful, latency: 3.03
	VPMULUDQZ256rr(2(Class<VR256X>) -> 0(Class<VR256X>))  [3.03;3.03]
		 Successful, latency: 3.03

-----VPMULUDQZ256rrk-----
	VPMULUDQZ256rrk(1(Class<VR256X>) -> 0(Class<VR256X>))  [3.06;3.06]
		 Successful, latency: 3.06
	VPMULUDQZ256rrk(3(Class<VR256X>) -> 0(Class<VR256X>))  [3.04;3.04]
		 Successful, latency: 3.04
	VPMULUDQZ256rrk(4(Class<VR256X>) -> 0(Class<VR256X>))  [3.03;3.03]
		 Successful, latency: 3.03

-----VPMULUDQZ256rrkz-----
	VPMULUDQZ256rrkz(2(Class<VR256X>) -> 0(Class<VR256X>))  [3.04;3.04]
		 Successful, latency: 3.04
	VPMULUDQZ256rrkz(3(Class<VR256X>) -> 0(Class<VR256X>))  [3.02;3.02]
		 Successful, latency: 3.02

-----VPMULUDQZrr-----
	VPMULUDQZrr(1(Class<VR512>) -> 0(Class<VR512>))  [3.05;3.05]
		 Successful, latency: 3.05
	VPMULUDQZrr(2(Class<VR512>) -> 0(Class<VR512>))  [3.04;3.04]
		 Successful, latency: 3.04

-----VPMULUDQZrrk-----
	VPMULUDQZrrk(1(Class<VR512>) -> 0(Class<VR512>))  [3.03;3.03]
		 Successful, latency: 3.03
	VPMULUDQZrrk(3(Class<VR512>) -> 0(Class<VR512>))  [3.02;3.02]
		 Successful, latency: 3.02
	VPMULUDQZrrk(4(Class<VR512>) -> 0(Class<VR512>))  [3.05;3.05]
		 Successful, latency: 3.05

-----VPMULUDQZrrkz-----
	VPMULUDQZrrkz(2(Class<VR512>) -> 0(Class<VR512>))  [3.02;3.02]
		 Successful, latency: 3.02
	VPMULUDQZrrkz(3(Class<VR512>) -> 0(Class<VR512>))  [3.04;3.04]
		 Successful, latency: 3.04

-----VPMULUDQrr-----
	VPMULUDQrr(1(Class<VR128>) -> 0(Class<VR128>))  [3.02;3.02]
		 Successful, latency: 3.02
	VPMULUDQrr(2(Class<VR128>) -> 0(Class<VR128>))  [3.05;3.05]
		 Successful, latency: 3.05

-----VPOPCNTBZ128rr-----
	VPOPCNTBZ128rr(1(Class<VR128X>) -> 0(Class<VR128X>))  [2.02;2.02]
		 Successful, latency: 2.02

-----VPOPCNTBZ128rrk-----
	VPOPCNTBZ128rrk(1(Class<VR128X>) -> 0(Class<VR128X>))  [2.02;2.02]
		 Successful, latency: 2.02
	VPOPCNTBZ128rrk(3(Class<VR128X>) -> 0(Class<VR128X>))  [2.02;2.02]
		 Successful, latency: 2.02

-----VPOPCNTBZ128rrkz-----
	VPOPCNTBZ128rrkz(2(Class<VR128X>) -> 0(Class<VR128X>))  [2.02;2.02]
		 Successful, latency: 2.02

-----VPOPCNTBZ256rr-----
	VPOPCNTBZ256rr(1(Class<VR256X>) -> 0(Class<VR256X>))  [2.02;2.02]
		 Successful, latency: 2.02

-----VPOPCNTBZ256rrk-----
	VPOPCNTBZ256rrk(1(Class<VR256X>) -> 0(Class<VR256X>))  [2.02;2.02]
		 Successful, latency: 2.02
	VPOPCNTBZ256rrk(3(Class<VR256X>) -> 0(Class<VR256X>))  [2.02;2.02]
		 Successful, latency: 2.02

-----VPOPCNTBZ256rrkz-----
	VPOPCNTBZ256rrkz(2(Class<VR256X>) -> 0(Class<VR256X>))  [2.03;2.03]
		 Successful, latency: 2.03

-----VPOPCNTBZrr-----
	VPOPCNTBZrr(1(Class<VR512>) -> 0(Class<VR512>))  [2.02;2.02]
		 Successful, latency: 2.02

-----VPOPCNTBZrrk-----
	VPOPCNTBZrrk(1(Class<VR512>) -> 0(Class<VR512>))  [2.03;2.03]
		 Successful, latency: 2.03
	VPOPCNTBZrrk(3(Class<VR512>) -> 0(Class<VR512>))  [2.01;2.01]
		 Successful, latency: 2.01

-----VPOPCNTBZrrkz-----
	VPOPCNTBZrrkz(2(Class<VR512>) -> 0(Class<VR512>))  [2.02;2.02]
		 Successful, latency: 2.02

-----VPOPCNTDZ128rr-----
	VPOPCNTDZ128rr(1(Class<VR128X>) -> 0(Class<VR128X>))  [2.02;2.02]
		 Successful, latency: 2.02

-----VPOPCNTDZ128rrk-----
	VPOPCNTDZ128rrk(1(Class<VR128X>) -> 0(Class<VR128X>))  [2.02;2.02]
		 Successful, latency: 2.02
	VPOPCNTDZ128rrk(3(Class<VR128X>) -> 0(Class<VR128X>))  [2.01;2.01]
		 Successful, latency: 2.01

-----VPOPCNTDZ128rrkz-----
	VPOPCNTDZ128rrkz(2(Class<VR128X>) -> 0(Class<VR128X>))  [2.04;2.04]
		 Successful, latency: 2.04

-----VPOPCNTDZ256rr-----
	VPOPCNTDZ256rr(1(Class<VR256X>) -> 0(Class<VR256X>))  [2.02;2.02]
		 Successful, latency: 2.02

-----VPOPCNTDZ256rrk-----
	VPOPCNTDZ256rrk(1(Class<VR256X>) -> 0(Class<VR256X>))  [2.02;2.02]
		 Successful, latency: 2.02
	VPOPCNTDZ256rrk(3(Class<VR256X>) -> 0(Class<VR256X>))  [2.02;2.02]
		 Successful, latency: 2.02

-----VPOPCNTDZ256rrkz-----
	VPOPCNTDZ256rrkz(2(Class<VR256X>) -> 0(Class<VR256X>))  [2.02;2.02]
		 Successful, latency: 2.02

-----VPOPCNTDZrr-----
	VPOPCNTDZrr(1(Class<VR512>) -> 0(Class<VR512>))  [2.02;2.02]
		 Successful, latency: 2.02

-----VPOPCNTDZrrk-----
	VPOPCNTDZrrk(1(Class<VR512>) -> 0(Class<VR512>))  [2.02;2.02]
		 Successful, latency: 2.02
	VPOPCNTDZrrk(3(Class<VR512>) -> 0(Class<VR512>))  [2.02;2.02]
		 Successful, latency: 2.02

-----VPOPCNTDZrrkz-----
	VPOPCNTDZrrkz(2(Class<VR512>) -> 0(Class<VR512>))  [2.03;2.03]
		 Successful, latency: 2.03

-----VPOPCNTQZ128rr-----
	VPOPCNTQZ128rr(1(Class<VR128X>) -> 0(Class<VR128X>))  [2.03;2.03]
		 Successful, latency: 2.03

-----VPOPCNTQZ128rrk-----
	VPOPCNTQZ128rrk(1(Class<VR128X>) -> 0(Class<VR128X>))  [2.01;2.01]
		 Successful, latency: 2.01
	VPOPCNTQZ128rrk(3(Class<VR128X>) -> 0(Class<VR128X>))  [2.02;2.02]
		 Successful, latency: 2.02

-----VPOPCNTQZ128rrkz-----
	VPOPCNTQZ128rrkz(2(Class<VR128X>) -> 0(Class<VR128X>))  [2.02;2.02]
		 Successful, latency: 2.02

-----VPOPCNTQZ256rr-----
	VPOPCNTQZ256rr(1(Class<VR256X>) -> 0(Class<VR256X>))  [2.03;2.03]
		 Successful, latency: 2.03

-----VPOPCNTQZ256rrk-----
	VPOPCNTQZ256rrk(1(Class<VR256X>) -> 0(Class<VR256X>))  [2.02;2.02]
		 Successful, latency: 2.02
	VPOPCNTQZ256rrk(3(Class<VR256X>) -> 0(Class<VR256X>))  [2.03;2.03]
		 Successful, latency: 2.03

-----VPOPCNTQZ256rrkz-----
	VPOPCNTQZ256rrkz(2(Class<VR256X>) -> 0(Class<VR256X>))  [2.03;2.03]
		 Successful, latency: 2.03

-----VPOPCNTQZrr-----
	VPOPCNTQZrr(1(Class<VR512>) -> 0(Class<VR512>))  [2.02;2.02]
		 Successful, latency: 2.02

-----VPOPCNTQZrrk-----
	VPOPCNTQZrrk(1(Class<VR512>) -> 0(Class<VR512>))  [2;2]
		 Successful, latency: 2
	VPOPCNTQZrrk(3(Class<VR512>) -> 0(Class<VR512>))  [2.02;2.02]
		 Successful, latency: 2.02

-----VPOPCNTQZrrkz-----
	VPOPCNTQZrrkz(2(Class<VR512>) -> 0(Class<VR512>))  [2.03;2.03]
		 Successful, latency: 2.03

-----VPOPCNTWZ128rr-----
	VPOPCNTWZ128rr(1(Class<VR128X>) -> 0(Class<VR128X>))  [2.03;2.03]
		 Successful, latency: 2.03

-----VPOPCNTWZ128rrk-----
	VPOPCNTWZ128rrk(1(Class<VR128X>) -> 0(Class<VR128X>))  [2.03;2.03]
		 Successful, latency: 2.03
	VPOPCNTWZ128rrk(3(Class<VR128X>) -> 0(Class<VR128X>))  [2.02;2.02]
		 Successful, latency: 2.02

-----VPOPCNTWZ128rrkz-----
	VPOPCNTWZ128rrkz(2(Class<VR128X>) -> 0(Class<VR128X>))  [2.02;2.02]
		 Successful, latency: 2.02

-----VPOPCNTWZ256rr-----
	VPOPCNTWZ256rr(1(Class<VR256X>) -> 0(Class<VR256X>))  [2.02;2.02]
		 Successful, latency: 2.02

-----VPOPCNTWZ256rrk-----
	VPOPCNTWZ256rrk(1(Class<VR256X>) -> 0(Class<VR256X>))  [2.02;2.02]
		 Successful, latency: 2.02
	VPOPCNTWZ256rrk(3(Class<VR256X>) -> 0(Class<VR256X>))  [2.01;2.01]
		 Successful, latency: 2.01

-----VPOPCNTWZ256rrkz-----
	VPOPCNTWZ256rrkz(2(Class<VR256X>) -> 0(Class<VR256X>))  [2.01;2.01]
		 Successful, latency: 2.01

-----VPOPCNTWZrr-----
	VPOPCNTWZrr(1(Class<VR512>) -> 0(Class<VR512>))  [2.01;2.01]
		 Successful, latency: 2.01

-----VPOPCNTWZrrk-----
	VPOPCNTWZrrk(1(Class<VR512>) -> 0(Class<VR512>))  [2.02;2.02]
		 Successful, latency: 2.02
	VPOPCNTWZrrk(3(Class<VR512>) -> 0(Class<VR512>))  [2.02;2.02]
		 Successful, latency: 2.02

-----VPOPCNTWZrrkz-----
	VPOPCNTWZrrkz(2(Class<VR512>) -> 0(Class<VR512>))  [2.01;2.01]
		 Successful, latency: 2.01

-----VPORDZ128rr-----
	VPORDZ128rr(1(Class<VR128X>) -> 0(Class<VR128X>))  [1.01;1.01]
		 Successful, latency: 1.01
	VPORDZ128rr(2(Class<VR128X>) -> 0(Class<VR128X>))  [1;1]
		 Successful, latency: 1

-----VPORDZ128rrk-----
	VPORDZ128rrk(1(Class<VR128X>) -> 0(Class<VR128X>))  [1.01;1.01]
		 Successful, latency: 1.01
	VPORDZ128rrk(3(Class<VR128X>) -> 0(Class<VR128X>))  [1;1]
		 Successful, latency: 1
	VPORDZ128rrk(4(Class<VR128X>) -> 0(Class<VR128X>))  [1;1]
		 Successful, latency: 1

-----VPORDZ128rrkz-----
	VPORDZ128rrkz(2(Class<VR128X>) -> 0(Class<VR128X>))  [1;1]
		 Successful, latency: 1
	VPORDZ128rrkz(3(Class<VR128X>) -> 0(Class<VR128X>))  [1.01;1.01]
		 Successful, latency: 1.01

-----VPORDZ256rr-----
	VPORDZ256rr(1(Class<VR256X>) -> 0(Class<VR256X>))  [1;1]
		 Successful, latency: 1
	VPORDZ256rr(2(Class<VR256X>) -> 0(Class<VR256X>))  [1;1]
		 Successful, latency: 1

-----VPORDZ256rrk-----
	VPORDZ256rrk(1(Class<VR256X>) -> 0(Class<VR256X>))  [1.01;1.01]
		 Successful, latency: 1.01
	VPORDZ256rrk(3(Class<VR256X>) -> 0(Class<VR256X>))  [1.02;1.02]
		 Successful, latency: 1.02
	VPORDZ256rrk(4(Class<VR256X>) -> 0(Class<VR256X>))  [1.03;1.03]
		 Successful, latency: 1.03

-----VPORDZ256rrkz-----
	VPORDZ256rrkz(2(Class<VR256X>) -> 0(Class<VR256X>))  [1;1]
		 Successful, latency: 1
	VPORDZ256rrkz(3(Class<VR256X>) -> 0(Class<VR256X>))  [1;1]
		 Successful, latency: 1

-----VPORDZrr-----
	VPORDZrr(1(Class<VR512>) -> 0(Class<VR512>))  [1.01;1.01]
		 Successful, latency: 1.01
	VPORDZrr(2(Class<VR512>) -> 0(Class<VR512>))  [1.01;1.01]
		 Successful, latency: 1.01

-----VPORDZrrk-----
	VPORDZrrk(1(Class<VR512>) -> 0(Class<VR512>))  [1;1]
		 Successful, latency: 1
	VPORDZrrk(3(Class<VR512>) -> 0(Class<VR512>))  [1.02;1.02]
		 Successful, latency: 1.02
	VPORDZrrk(4(Class<VR512>) -> 0(Class<VR512>))  [1;1]
		 Successful, latency: 1

-----VPORDZrrkz-----
	VPORDZrrkz(2(Class<VR512>) -> 0(Class<VR512>))  [1.01;1.01]
		 Successful, latency: 1.01
	VPORDZrrkz(3(Class<VR512>) -> 0(Class<VR512>))  [1.01;1.01]
		 Successful, latency: 1.01

-----VPORQZ128rr-----
	VPORQZ128rr(1(Class<VR128X>) -> 0(Class<VR128X>))  [1.02;1.02]
		 Successful, latency: 1.02
	VPORQZ128rr(2(Class<VR128X>) -> 0(Class<VR128X>))  [1.01;1.01]
		 Successful, latency: 1.01

-----VPORQZ128rrk-----
	VPORQZ128rrk(1(Class<VR128X>) -> 0(Class<VR128X>))  [1.01;1.01]
		 Successful, latency: 1.01
	VPORQZ128rrk(3(Class<VR128X>) -> 0(Class<VR128X>))  [1.01;1.01]
		 Successful, latency: 1.01
	VPORQZ128rrk(4(Class<VR128X>) -> 0(Class<VR128X>))  [1.01;1.01]
		 Successful, latency: 1.01

-----VPORQZ128rrkz-----
	VPORQZ128rrkz(2(Class<VR128X>) -> 0(Class<VR128X>))  [1.03;1.03]
		 Successful, latency: 1.03
	VPORQZ128rrkz(3(Class<VR128X>) -> 0(Class<VR128X>))  [1.01;1.01]
		 Successful, latency: 1.01

-----VPORQZ256rr-----
	VPORQZ256rr(1(Class<VR256X>) -> 0(Class<VR256X>))  [1;1]
		 Successful, latency: 1
	VPORQZ256rr(2(Class<VR256X>) -> 0(Class<VR256X>))  [1;1]
		 Successful, latency: 1

-----VPORQZ256rrk-----
	VPORQZ256rrk(1(Class<VR256X>) -> 0(Class<VR256X>))  [1.01;1.01]
		 Successful, latency: 1.01
	VPORQZ256rrk(3(Class<VR256X>) -> 0(Class<VR256X>))  [1;1]
		 Successful, latency: 1
	VPORQZ256rrk(4(Class<VR256X>) -> 0(Class<VR256X>))  [1.01;1.01]
		 Successful, latency: 1.01

-----VPORQZ256rrkz-----
	VPORQZ256rrkz(2(Class<VR256X>) -> 0(Class<VR256X>))  [1;1]
		 Successful, latency: 1
	VPORQZ256rrkz(3(Class<VR256X>) -> 0(Class<VR256X>))  [0.999;0.999]
		 Successful, latency: 0.999

-----VPORQZrr-----
	VPORQZrr(1(Class<VR512>) -> 0(Class<VR512>))  [1.01;1.01]
		 Successful, latency: 1.01
	VPORQZrr(2(Class<VR512>) -> 0(Class<VR512>))  [1.02;1.02]
		 Successful, latency: 1.02

-----VPORQZrrk-----
	VPORQZrrk(1(Class<VR512>) -> 0(Class<VR512>))  [1.01;1.01]
		 Successful, latency: 1.01
	VPORQZrrk(3(Class<VR512>) -> 0(Class<VR512>))  [1.01;1.01]
		 Successful, latency: 1.01
	VPORQZrrk(4(Class<VR512>) -> 0(Class<VR512>))  [1.01;1.01]
		 Successful, latency: 1.01

-----VPORQZrrkz-----
	VPORQZrrkz(2(Class<VR512>) -> 0(Class<VR512>))  [1.01;1.01]
		 Successful, latency: 1.01
	VPORQZrrkz(3(Class<VR512>) -> 0(Class<VR512>))  [1;1]
		 Successful, latency: 1

-----VPORYrr-----
	VPORYrr(1(Class<VR256>) -> 0(Class<VR256>))  [1.02;1.02]
		 Successful, latency: 1.02
	VPORYrr(2(Class<VR256>) -> 0(Class<VR256>))  [1.01;1.01]
		 Successful, latency: 1.01

-----VPORrr-----
	VPORrr(1(Class<VR128>) -> 0(Class<VR128>))  [1;1]
		 Successful, latency: 1
	VPORrr(2(Class<VR128>) -> 0(Class<VR128>))  [1.01;1.01]
		 Successful, latency: 1.01

-----VPPERMrrr-----
	VPPERMrrr(1(Class<VR128>) -> 0(Class<VR128>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VPPERMrrr(2(Class<VR128>) -> 0(Class<VR128>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VPPERMrrr(3(Class<VR128>) -> 0(Class<VR128>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VPPERMrrr_REV-----
	VPPERMrrr_REV(1(Class<VR128>) -> 0(Class<VR128>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VPPERMrrr_REV(2(Class<VR128>) -> 0(Class<VR128>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VPPERMrrr_REV(3(Class<VR128>) -> 0(Class<VR128>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VPROLDZ128ri-----
	VPROLDZ128ri(1(Class<VR128X>) -> 0(Class<VR128X>))  [2.01;2.01]
		 Successful, latency: 2.01

-----VPROLDZ128rik-----
	VPROLDZ128rik(1(Class<VR128X>) -> 0(Class<VR128X>))  [2;2]
		 Successful, latency: 2
	VPROLDZ128rik(3(Class<VR128X>) -> 0(Class<VR128X>))  [2.02;2.02]
		 Successful, latency: 2.02

-----VPROLDZ128rikz-----
	VPROLDZ128rikz(2(Class<VR128X>) -> 0(Class<VR128X>))  [2.03;2.03]
		 Successful, latency: 2.03

-----VPROLDZ256ri-----
	VPROLDZ256ri(1(Class<VR256X>) -> 0(Class<VR256X>))  [2.03;2.03]
		 Successful, latency: 2.03

-----VPROLDZ256rik-----
	VPROLDZ256rik(1(Class<VR256X>) -> 0(Class<VR256X>))  [2.02;2.02]
		 Successful, latency: 2.02
	VPROLDZ256rik(3(Class<VR256X>) -> 0(Class<VR256X>))  [2.03;2.03]
		 Successful, latency: 2.03

-----VPROLDZ256rikz-----
	VPROLDZ256rikz(2(Class<VR256X>) -> 0(Class<VR256X>))  [2.02;2.02]
		 Successful, latency: 2.02

-----VPROLDZri-----
	VPROLDZri(1(Class<VR512>) -> 0(Class<VR512>))  [2.02;2.02]
		 Successful, latency: 2.02

-----VPROLDZrik-----
	VPROLDZrik(1(Class<VR512>) -> 0(Class<VR512>))  [2.01;2.01]
		 Successful, latency: 2.01
	VPROLDZrik(3(Class<VR512>) -> 0(Class<VR512>))  [2.02;2.02]
		 Successful, latency: 2.02

-----VPROLDZrikz-----
	VPROLDZrikz(2(Class<VR512>) -> 0(Class<VR512>))  [2.02;2.02]
		 Successful, latency: 2.02

-----VPROLQZ128ri-----
	VPROLQZ128ri(1(Class<VR128X>) -> 0(Class<VR128X>))  [2.02;2.02]
		 Successful, latency: 2.02

-----VPROLQZ128rik-----
	VPROLQZ128rik(1(Class<VR128X>) -> 0(Class<VR128X>))  [2.02;2.02]
		 Successful, latency: 2.02
	VPROLQZ128rik(3(Class<VR128X>) -> 0(Class<VR128X>))  [2.02;2.02]
		 Successful, latency: 2.02

-----VPROLQZ128rikz-----
	VPROLQZ128rikz(2(Class<VR128X>) -> 0(Class<VR128X>))  [2.03;2.03]
		 Successful, latency: 2.03

-----VPROLQZ256ri-----
	VPROLQZ256ri(1(Class<VR256X>) -> 0(Class<VR256X>))  [2.02;2.02]
		 Successful, latency: 2.02

-----VPROLQZ256rik-----
	VPROLQZ256rik(1(Class<VR256X>) -> 0(Class<VR256X>))  [2.01;2.01]
		 Successful, latency: 2.01
	VPROLQZ256rik(3(Class<VR256X>) -> 0(Class<VR256X>))  [2.01;2.01]
		 Successful, latency: 2.01

-----VPROLQZ256rikz-----
	VPROLQZ256rikz(2(Class<VR256X>) -> 0(Class<VR256X>))  [2.01;2.01]
		 Successful, latency: 2.01

-----VPROLQZri-----
	VPROLQZri(1(Class<VR512>) -> 0(Class<VR512>))  [2.01;2.01]
		 Successful, latency: 2.01

-----VPROLQZrik-----
	VPROLQZrik(1(Class<VR512>) -> 0(Class<VR512>))  [2.02;2.02]
		 Successful, latency: 2.02
	VPROLQZrik(3(Class<VR512>) -> 0(Class<VR512>))  [2.02;2.02]
		 Successful, latency: 2.02

-----VPROLQZrikz-----
	VPROLQZrikz(2(Class<VR512>) -> 0(Class<VR512>))  [2.02;2.02]
		 Successful, latency: 2.02

-----VPROLVDZ128rr-----
	VPROLVDZ128rr(1(Class<VR128X>) -> 0(Class<VR128X>))  [2.02;2.02]
		 Successful, latency: 2.02
	VPROLVDZ128rr(2(Class<VR128X>) -> 0(Class<VR128X>))  [2.03;2.03]
		 Successful, latency: 2.03

-----VPROLVDZ128rrk-----
	VPROLVDZ128rrk(1(Class<VR128X>) -> 0(Class<VR128X>))  [2.01;2.01]
		 Successful, latency: 2.01
	VPROLVDZ128rrk(3(Class<VR128X>) -> 0(Class<VR128X>))  [2.02;2.02]
		 Successful, latency: 2.02
	VPROLVDZ128rrk(4(Class<VR128X>) -> 0(Class<VR128X>))  [2.01;2.01]
		 Successful, latency: 2.01

-----VPROLVDZ128rrkz-----
	VPROLVDZ128rrkz(2(Class<VR128X>) -> 0(Class<VR128X>))  [2.02;2.02]
		 Successful, latency: 2.02
	VPROLVDZ128rrkz(3(Class<VR128X>) -> 0(Class<VR128X>))  [2.01;2.01]
		 Successful, latency: 2.01

-----VPROLVDZ256rr-----
	VPROLVDZ256rr(1(Class<VR256X>) -> 0(Class<VR256X>))  [2.02;2.02]
		 Successful, latency: 2.02
	VPROLVDZ256rr(2(Class<VR256X>) -> 0(Class<VR256X>))  [2.03;2.03]
		 Successful, latency: 2.03

-----VPROLVDZ256rrk-----
	VPROLVDZ256rrk(1(Class<VR256X>) -> 0(Class<VR256X>))  [2.01;2.01]
		 Successful, latency: 2.01
	VPROLVDZ256rrk(3(Class<VR256X>) -> 0(Class<VR256X>))  [2.01;2.01]
		 Successful, latency: 2.01
	VPROLVDZ256rrk(4(Class<VR256X>) -> 0(Class<VR256X>))  [2.03;2.03]
		 Successful, latency: 2.03

-----VPROLVDZ256rrkz-----
	VPROLVDZ256rrkz(2(Class<VR256X>) -> 0(Class<VR256X>))  [2.01;2.01]
		 Successful, latency: 2.01
	VPROLVDZ256rrkz(3(Class<VR256X>) -> 0(Class<VR256X>))  [2.02;2.02]
		 Successful, latency: 2.02

-----VPROLVDZrr-----
	VPROLVDZrr(1(Class<VR512>) -> 0(Class<VR512>))  [2.02;2.02]
		 Successful, latency: 2.02
	VPROLVDZrr(2(Class<VR512>) -> 0(Class<VR512>))  [2.01;2.01]
		 Successful, latency: 2.01

-----VPROLVDZrrk-----
	VPROLVDZrrk(1(Class<VR512>) -> 0(Class<VR512>))  [2.02;2.02]
		 Successful, latency: 2.02
	VPROLVDZrrk(3(Class<VR512>) -> 0(Class<VR512>))  [2.02;2.02]
		 Successful, latency: 2.02
	VPROLVDZrrk(4(Class<VR512>) -> 0(Class<VR512>))  [2.02;2.02]
		 Successful, latency: 2.02

-----VPROLVDZrrkz-----
	VPROLVDZrrkz(2(Class<VR512>) -> 0(Class<VR512>))  [2.03;2.03]
		 Successful, latency: 2.03
	VPROLVDZrrkz(3(Class<VR512>) -> 0(Class<VR512>))  [2.02;2.02]
		 Successful, latency: 2.02

-----VPROLVQZ128rr-----
	VPROLVQZ128rr(1(Class<VR128X>) -> 0(Class<VR128X>))  [2.01;2.01]
		 Successful, latency: 2.01
	VPROLVQZ128rr(2(Class<VR128X>) -> 0(Class<VR128X>))  [2.02;2.02]
		 Successful, latency: 2.02

-----VPROLVQZ128rrk-----
	VPROLVQZ128rrk(1(Class<VR128X>) -> 0(Class<VR128X>))  [2.01;2.01]
		 Successful, latency: 2.01
	VPROLVQZ128rrk(3(Class<VR128X>) -> 0(Class<VR128X>))  [2.02;2.02]
		 Successful, latency: 2.02
	VPROLVQZ128rrk(4(Class<VR128X>) -> 0(Class<VR128X>))  [2.01;2.01]
		 Successful, latency: 2.01

-----VPROLVQZ128rrkz-----
	VPROLVQZ128rrkz(2(Class<VR128X>) -> 0(Class<VR128X>))  [2.02;2.02]
		 Successful, latency: 2.02
	VPROLVQZ128rrkz(3(Class<VR128X>) -> 0(Class<VR128X>))  [2.01;2.01]
		 Successful, latency: 2.01

-----VPROLVQZ256rr-----
	VPROLVQZ256rr(1(Class<VR256X>) -> 0(Class<VR256X>))  [2.01;2.01]
		 Successful, latency: 2.01
	VPROLVQZ256rr(2(Class<VR256X>) -> 0(Class<VR256X>))  [2.02;2.02]
		 Successful, latency: 2.02

-----VPROLVQZ256rrk-----
	VPROLVQZ256rrk(1(Class<VR256X>) -> 0(Class<VR256X>))  [2.02;2.02]
		 Successful, latency: 2.02
	VPROLVQZ256rrk(3(Class<VR256X>) -> 0(Class<VR256X>))  [2.02;2.02]
		 Successful, latency: 2.02
	VPROLVQZ256rrk(4(Class<VR256X>) -> 0(Class<VR256X>))  [2.03;2.03]
		 Successful, latency: 2.03

-----VPROLVQZ256rrkz-----
	VPROLVQZ256rrkz(2(Class<VR256X>) -> 0(Class<VR256X>))  [2.03;2.03]
		 Successful, latency: 2.03
	VPROLVQZ256rrkz(3(Class<VR256X>) -> 0(Class<VR256X>))  [2.02;2.02]
		 Successful, latency: 2.02

-----VPROLVQZrr-----
	VPROLVQZrr(1(Class<VR512>) -> 0(Class<VR512>))  [2.01;2.01]
		 Successful, latency: 2.01
	VPROLVQZrr(2(Class<VR512>) -> 0(Class<VR512>))  [2.02;2.02]
		 Successful, latency: 2.02

-----VPROLVQZrrk-----
	VPROLVQZrrk(1(Class<VR512>) -> 0(Class<VR512>))  [2.02;2.02]
		 Successful, latency: 2.02
	VPROLVQZrrk(3(Class<VR512>) -> 0(Class<VR512>))  [1.99;1.99]
		 Successful, latency: 1.99
	VPROLVQZrrk(4(Class<VR512>) -> 0(Class<VR512>))  [2.02;2.02]
		 Successful, latency: 2.02

-----VPROLVQZrrkz-----
	VPROLVQZrrkz(2(Class<VR512>) -> 0(Class<VR512>))  [2.02;2.02]
		 Successful, latency: 2.02
	VPROLVQZrrkz(3(Class<VR512>) -> 0(Class<VR512>))  [2.01;2.01]
		 Successful, latency: 2.01

-----VPRORDZ128ri-----
	VPRORDZ128ri(1(Class<VR128X>) -> 0(Class<VR128X>))  [2.02;2.02]
		 Successful, latency: 2.02

-----VPRORDZ128rik-----
	VPRORDZ128rik(1(Class<VR128X>) -> 0(Class<VR128X>))  [2.02;2.02]
		 Successful, latency: 2.02
	VPRORDZ128rik(3(Class<VR128X>) -> 0(Class<VR128X>))  [2.01;2.01]
		 Successful, latency: 2.01

-----VPRORDZ128rikz-----
	VPRORDZ128rikz(2(Class<VR128X>) -> 0(Class<VR128X>))  [2.02;2.02]
		 Successful, latency: 2.02

-----VPRORDZ256ri-----
	VPRORDZ256ri(1(Class<VR256X>) -> 0(Class<VR256X>))  [2.02;2.02]
		 Successful, latency: 2.02

-----VPRORDZ256rik-----
	VPRORDZ256rik(1(Class<VR256X>) -> 0(Class<VR256X>))  [2.01;2.01]
		 Successful, latency: 2.01
	VPRORDZ256rik(3(Class<VR256X>) -> 0(Class<VR256X>))  [2.01;2.01]
		 Successful, latency: 2.01

-----VPRORDZ256rikz-----
	VPRORDZ256rikz(2(Class<VR256X>) -> 0(Class<VR256X>))  [2.02;2.02]
		 Successful, latency: 2.02

-----VPRORDZri-----
	VPRORDZri(1(Class<VR512>) -> 0(Class<VR512>))  [2.02;2.02]
		 Successful, latency: 2.02

-----VPRORDZrik-----
	VPRORDZrik(1(Class<VR512>) -> 0(Class<VR512>))  [2.02;2.02]
		 Successful, latency: 2.02
	VPRORDZrik(3(Class<VR512>) -> 0(Class<VR512>))  [2.03;2.03]
		 Successful, latency: 2.03

-----VPRORDZrikz-----
	VPRORDZrikz(2(Class<VR512>) -> 0(Class<VR512>))  [2.02;2.02]
		 Successful, latency: 2.02

-----VPRORQZ128ri-----
	VPRORQZ128ri(1(Class<VR128X>) -> 0(Class<VR128X>))  [2.01;2.01]
		 Successful, latency: 2.01

-----VPRORQZ128rik-----
	VPRORQZ128rik(1(Class<VR128X>) -> 0(Class<VR128X>))  [2.04;2.04]
		 Successful, latency: 2.04
	VPRORQZ128rik(3(Class<VR128X>) -> 0(Class<VR128X>))  [2.02;2.02]
		 Successful, latency: 2.02

-----VPRORQZ128rikz-----
	VPRORQZ128rikz(2(Class<VR128X>) -> 0(Class<VR128X>))  [2.02;2.02]
		 Successful, latency: 2.02

-----VPRORQZ256ri-----
	VPRORQZ256ri(1(Class<VR256X>) -> 0(Class<VR256X>))  [2.02;2.02]
		 Successful, latency: 2.02

-----VPRORQZ256rik-----
	VPRORQZ256rik(1(Class<VR256X>) -> 0(Class<VR256X>))  [2.01;2.01]
		 Successful, latency: 2.01
	VPRORQZ256rik(3(Class<VR256X>) -> 0(Class<VR256X>))  [2.01;2.01]
		 Successful, latency: 2.01

-----VPRORQZ256rikz-----
	VPRORQZ256rikz(2(Class<VR256X>) -> 0(Class<VR256X>))  [2.02;2.02]
		 Successful, latency: 2.02

-----VPRORQZri-----
	VPRORQZri(1(Class<VR512>) -> 0(Class<VR512>))  [2.02;2.02]
		 Successful, latency: 2.02

-----VPRORQZrik-----
	VPRORQZrik(1(Class<VR512>) -> 0(Class<VR512>))  [2.02;2.02]
		 Successful, latency: 2.02
	VPRORQZrik(3(Class<VR512>) -> 0(Class<VR512>))  [2.02;2.02]
		 Successful, latency: 2.02

-----VPRORQZrikz-----
	VPRORQZrikz(2(Class<VR512>) -> 0(Class<VR512>))  [2.02;2.02]
		 Successful, latency: 2.02

-----VPRORVDZ128rr-----
	VPRORVDZ128rr(1(Class<VR128X>) -> 0(Class<VR128X>))  [2.04;2.04]
		 Successful, latency: 2.04
	VPRORVDZ128rr(2(Class<VR128X>) -> 0(Class<VR128X>))  [2.02;2.02]
		 Successful, latency: 2.02

-----VPRORVDZ128rrk-----
	VPRORVDZ128rrk(1(Class<VR128X>) -> 0(Class<VR128X>))  [2.02;2.02]
		 Successful, latency: 2.02
	VPRORVDZ128rrk(3(Class<VR128X>) -> 0(Class<VR128X>))  [2.02;2.02]
		 Successful, latency: 2.02
	VPRORVDZ128rrk(4(Class<VR128X>) -> 0(Class<VR128X>))  [2.01;2.01]
		 Successful, latency: 2.01

-----VPRORVDZ128rrkz-----
	VPRORVDZ128rrkz(2(Class<VR128X>) -> 0(Class<VR128X>))  [2.02;2.02]
		 Successful, latency: 2.02
	VPRORVDZ128rrkz(3(Class<VR128X>) -> 0(Class<VR128X>))  [2.02;2.02]
		 Successful, latency: 2.02

-----VPRORVDZ256rr-----
	VPRORVDZ256rr(1(Class<VR256X>) -> 0(Class<VR256X>))  [2.03;2.03]
		 Successful, latency: 2.03
	VPRORVDZ256rr(2(Class<VR256X>) -> 0(Class<VR256X>))  [2.02;2.02]
		 Successful, latency: 2.02

-----VPRORVDZ256rrk-----
	VPRORVDZ256rrk(1(Class<VR256X>) -> 0(Class<VR256X>))  [2.02;2.02]
		 Successful, latency: 2.02
	VPRORVDZ256rrk(3(Class<VR256X>) -> 0(Class<VR256X>))  [2.02;2.02]
		 Successful, latency: 2.02
	VPRORVDZ256rrk(4(Class<VR256X>) -> 0(Class<VR256X>))  [2.03;2.03]
		 Successful, latency: 2.03

-----VPRORVDZ256rrkz-----
	VPRORVDZ256rrkz(2(Class<VR256X>) -> 0(Class<VR256X>))  [2.02;2.02]
		 Successful, latency: 2.02
	VPRORVDZ256rrkz(3(Class<VR256X>) -> 0(Class<VR256X>))  [2.02;2.02]
		 Successful, latency: 2.02

-----VPRORVDZrr-----
	VPRORVDZrr(1(Class<VR512>) -> 0(Class<VR512>))  [2.02;2.02]
		 Successful, latency: 2.02
	VPRORVDZrr(2(Class<VR512>) -> 0(Class<VR512>))  [2.02;2.02]
		 Successful, latency: 2.02

-----VPRORVDZrrk-----
	VPRORVDZrrk(1(Class<VR512>) -> 0(Class<VR512>))  [2.02;2.02]
		 Successful, latency: 2.02
	VPRORVDZrrk(3(Class<VR512>) -> 0(Class<VR512>))  [2.02;2.02]
		 Successful, latency: 2.02
	VPRORVDZrrk(4(Class<VR512>) -> 0(Class<VR512>))  [2.02;2.02]
		 Successful, latency: 2.02

-----VPRORVDZrrkz-----
	VPRORVDZrrkz(2(Class<VR512>) -> 0(Class<VR512>))  [2.02;2.02]
		 Successful, latency: 2.02
	VPRORVDZrrkz(3(Class<VR512>) -> 0(Class<VR512>))  [2.02;2.02]
		 Successful, latency: 2.02

-----VPRORVQZ128rr-----
	VPRORVQZ128rr(1(Class<VR128X>) -> 0(Class<VR128X>))  [2.02;2.02]
		 Successful, latency: 2.02
	VPRORVQZ128rr(2(Class<VR128X>) -> 0(Class<VR128X>))  [2.01;2.01]
		 Successful, latency: 2.01

-----VPRORVQZ128rrk-----
	VPRORVQZ128rrk(1(Class<VR128X>) -> 0(Class<VR128X>))  [2.03;2.03]
		 Successful, latency: 2.03
	VPRORVQZ128rrk(3(Class<VR128X>) -> 0(Class<VR128X>))  [2.02;2.02]
		 Successful, latency: 2.02
	VPRORVQZ128rrk(4(Class<VR128X>) -> 0(Class<VR128X>))  [2.02;2.02]
		 Successful, latency: 2.02

-----VPRORVQZ128rrkz-----
	VPRORVQZ128rrkz(2(Class<VR128X>) -> 0(Class<VR128X>))  [2.03;2.03]
		 Successful, latency: 2.03
	VPRORVQZ128rrkz(3(Class<VR128X>) -> 0(Class<VR128X>))  [2.02;2.02]
		 Successful, latency: 2.02

-----VPRORVQZ256rr-----
	VPRORVQZ256rr(1(Class<VR256X>) -> 0(Class<VR256X>))  [2.02;2.02]
		 Successful, latency: 2.02
	VPRORVQZ256rr(2(Class<VR256X>) -> 0(Class<VR256X>))  [2.02;2.02]
		 Successful, latency: 2.02

-----VPRORVQZ256rrk-----
	VPRORVQZ256rrk(1(Class<VR256X>) -> 0(Class<VR256X>))  [2.02;2.02]
		 Successful, latency: 2.02
	VPRORVQZ256rrk(3(Class<VR256X>) -> 0(Class<VR256X>))  [2.02;2.02]
		 Successful, latency: 2.02
	VPRORVQZ256rrk(4(Class<VR256X>) -> 0(Class<VR256X>))  [2.01;2.01]
		 Successful, latency: 2.01

-----VPRORVQZ256rrkz-----
	VPRORVQZ256rrkz(2(Class<VR256X>) -> 0(Class<VR256X>))  [2.02;2.02]
		 Successful, latency: 2.02
	VPRORVQZ256rrkz(3(Class<VR256X>) -> 0(Class<VR256X>))  [2.02;2.02]
		 Successful, latency: 2.02

-----VPRORVQZrr-----
	VPRORVQZrr(1(Class<VR512>) -> 0(Class<VR512>))  [2.02;2.02]
		 Successful, latency: 2.02
	VPRORVQZrr(2(Class<VR512>) -> 0(Class<VR512>))  [2.03;2.03]
		 Successful, latency: 2.03

-----VPRORVQZrrk-----
	VPRORVQZrrk(1(Class<VR512>) -> 0(Class<VR512>))  [2.02;2.02]
		 Successful, latency: 2.02
	VPRORVQZrrk(3(Class<VR512>) -> 0(Class<VR512>))  [2.02;2.02]
		 Successful, latency: 2.02
	VPRORVQZrrk(4(Class<VR512>) -> 0(Class<VR512>))  [2.03;2.03]
		 Successful, latency: 2.03

-----VPRORVQZrrkz-----
	VPRORVQZrrkz(2(Class<VR512>) -> 0(Class<VR512>))  [2.02;2.02]
		 Successful, latency: 2.02
	VPRORVQZrrkz(3(Class<VR512>) -> 0(Class<VR512>))  [2.03;2.03]
		 Successful, latency: 2.03

-----VPROTBri-----
	VPROTBri(1(Class<VR128>) -> 0(Class<VR128>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VPROTBrr-----
	VPROTBrr(1(Class<VR128>) -> 0(Class<VR128>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VPROTBrr(2(Class<VR128>) -> 0(Class<VR128>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VPROTBrr_REV-----
	VPROTBrr_REV(1(Class<VR128>) -> 0(Class<VR128>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VPROTBrr_REV(2(Class<VR128>) -> 0(Class<VR128>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VPROTDri-----
	VPROTDri(1(Class<VR128>) -> 0(Class<VR128>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VPROTDrr-----
	VPROTDrr(1(Class<VR128>) -> 0(Class<VR128>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VPROTDrr(2(Class<VR128>) -> 0(Class<VR128>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VPROTDrr_REV-----
	VPROTDrr_REV(1(Class<VR128>) -> 0(Class<VR128>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VPROTDrr_REV(2(Class<VR128>) -> 0(Class<VR128>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VPROTQri-----
	VPROTQri(1(Class<VR128>) -> 0(Class<VR128>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VPROTQrr-----
	VPROTQrr(1(Class<VR128>) -> 0(Class<VR128>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VPROTQrr(2(Class<VR128>) -> 0(Class<VR128>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VPROTQrr_REV-----
	VPROTQrr_REV(1(Class<VR128>) -> 0(Class<VR128>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VPROTQrr_REV(2(Class<VR128>) -> 0(Class<VR128>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VPROTWri-----
	VPROTWri(1(Class<VR128>) -> 0(Class<VR128>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VPROTWrr-----
	VPROTWrr(1(Class<VR128>) -> 0(Class<VR128>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VPROTWrr(2(Class<VR128>) -> 0(Class<VR128>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VPROTWrr_REV-----
	VPROTWrr_REV(1(Class<VR128>) -> 0(Class<VR128>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VPROTWrr_REV(2(Class<VR128>) -> 0(Class<VR128>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VPSADBWYrr-----
	VPSADBWYrr(1(Class<VR256>) -> 0(Class<VR256>))  [3.03;3.03]
		 Successful, latency: 3.03
	VPSADBWYrr(2(Class<VR256>) -> 0(Class<VR256>))  [3.04;3.04]
		 Successful, latency: 3.04

-----VPSADBWZ128rr-----
	VPSADBWZ128rr(1(Class<VR128X>) -> 0(Class<VR128X>))  [3.03;3.03]
		 Successful, latency: 3.03
	VPSADBWZ128rr(2(Class<VR128X>) -> 0(Class<VR128X>))  [3.02;3.02]
		 Successful, latency: 3.02

-----VPSADBWZ256rr-----
	VPSADBWZ256rr(1(Class<VR256X>) -> 0(Class<VR256X>))  [3.04;3.04]
		 Successful, latency: 3.04
	VPSADBWZ256rr(2(Class<VR256X>) -> 0(Class<VR256X>))  [3.02;3.02]
		 Successful, latency: 3.02

-----VPSADBWZrr-----
	VPSADBWZrr(1(Class<VR512>) -> 0(Class<VR512>))  [3.04;3.04]
		 Successful, latency: 3.04
	VPSADBWZrr(2(Class<VR512>) -> 0(Class<VR512>))  [3.04;3.04]
		 Successful, latency: 3.04

-----VPSADBWrr-----
	VPSADBWrr(1(Class<VR128>) -> 0(Class<VR128>))  [3.04;3.04]
		 Successful, latency: 3.04
	VPSADBWrr(2(Class<VR128>) -> 0(Class<VR128>))  [3.07;3.07]
		 Successful, latency: 3.07

-----VPSHABrr-----
	VPSHABrr(1(Class<VR128>) -> 0(Class<VR128>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VPSHABrr(2(Class<VR128>) -> 0(Class<VR128>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VPSHABrr_REV-----
	VPSHABrr_REV(1(Class<VR128>) -> 0(Class<VR128>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VPSHABrr_REV(2(Class<VR128>) -> 0(Class<VR128>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VPSHADrr-----
	VPSHADrr(1(Class<VR128>) -> 0(Class<VR128>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VPSHADrr(2(Class<VR128>) -> 0(Class<VR128>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VPSHADrr_REV-----
	VPSHADrr_REV(1(Class<VR128>) -> 0(Class<VR128>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VPSHADrr_REV(2(Class<VR128>) -> 0(Class<VR128>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VPSHAQrr-----
	VPSHAQrr(1(Class<VR128>) -> 0(Class<VR128>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VPSHAQrr(2(Class<VR128>) -> 0(Class<VR128>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VPSHAQrr_REV-----
	VPSHAQrr_REV(1(Class<VR128>) -> 0(Class<VR128>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VPSHAQrr_REV(2(Class<VR128>) -> 0(Class<VR128>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VPSHAWrr-----
	VPSHAWrr(1(Class<VR128>) -> 0(Class<VR128>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VPSHAWrr(2(Class<VR128>) -> 0(Class<VR128>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VPSHAWrr_REV-----
	VPSHAWrr_REV(1(Class<VR128>) -> 0(Class<VR128>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VPSHAWrr_REV(2(Class<VR128>) -> 0(Class<VR128>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VPSHLBrr-----
	VPSHLBrr(1(Class<VR128>) -> 0(Class<VR128>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VPSHLBrr(2(Class<VR128>) -> 0(Class<VR128>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VPSHLBrr_REV-----
	VPSHLBrr_REV(1(Class<VR128>) -> 0(Class<VR128>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VPSHLBrr_REV(2(Class<VR128>) -> 0(Class<VR128>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VPSHLDDZ128rri-----
	VPSHLDDZ128rri(1(Class<VR128X>) -> 0(Class<VR128X>))  [2.04;2.04]
		 Successful, latency: 2.04
	VPSHLDDZ128rri(2(Class<VR128X>) -> 0(Class<VR128X>))  [2.02;2.02]
		 Successful, latency: 2.02

-----VPSHLDDZ128rrik-----
	VPSHLDDZ128rrik(1(Class<VR128X>) -> 0(Class<VR128X>))  [2.02;2.02]
		 Successful, latency: 2.02
	VPSHLDDZ128rrik(3(Class<VR128X>) -> 0(Class<VR128X>))  [2.01;2.01]
		 Successful, latency: 2.01
	VPSHLDDZ128rrik(4(Class<VR128X>) -> 0(Class<VR128X>))  [2.01;2.01]
		 Successful, latency: 2.01

-----VPSHLDDZ128rrikz-----
	VPSHLDDZ128rrikz(2(Class<VR128X>) -> 0(Class<VR128X>))  [2.01;2.01]
		 Successful, latency: 2.01
	VPSHLDDZ128rrikz(3(Class<VR128X>) -> 0(Class<VR128X>))  [2.03;2.03]
		 Successful, latency: 2.03

-----VPSHLDDZ256rri-----
	VPSHLDDZ256rri(1(Class<VR256X>) -> 0(Class<VR256X>))  [2.02;2.02]
		 Successful, latency: 2.02
	VPSHLDDZ256rri(2(Class<VR256X>) -> 0(Class<VR256X>))  [2.02;2.02]
		 Successful, latency: 2.02

-----VPSHLDDZ256rrik-----
	VPSHLDDZ256rrik(1(Class<VR256X>) -> 0(Class<VR256X>))  [2.03;2.03]
		 Successful, latency: 2.03
	VPSHLDDZ256rrik(3(Class<VR256X>) -> 0(Class<VR256X>))  [2.02;2.02]
		 Successful, latency: 2.02
	VPSHLDDZ256rrik(4(Class<VR256X>) -> 0(Class<VR256X>))  [2.02;2.02]
		 Successful, latency: 2.02

-----VPSHLDDZ256rrikz-----
	VPSHLDDZ256rrikz(2(Class<VR256X>) -> 0(Class<VR256X>))  [2.02;2.02]
		 Successful, latency: 2.02
	VPSHLDDZ256rrikz(3(Class<VR256X>) -> 0(Class<VR256X>))  [2;2]
		 Successful, latency: 2

-----VPSHLDDZrri-----
	VPSHLDDZrri(1(Class<VR512>) -> 0(Class<VR512>))  [2;2]
		 Successful, latency: 2
	VPSHLDDZrri(2(Class<VR512>) -> 0(Class<VR512>))  [2.01;2.01]
		 Successful, latency: 2.01

-----VPSHLDDZrrik-----
	VPSHLDDZrrik(1(Class<VR512>) -> 0(Class<VR512>))  [2.02;2.02]
		 Successful, latency: 2.02
	VPSHLDDZrrik(3(Class<VR512>) -> 0(Class<VR512>))  [2.01;2.01]
		 Successful, latency: 2.01
	VPSHLDDZrrik(4(Class<VR512>) -> 0(Class<VR512>))  [2.01;2.01]
		 Successful, latency: 2.01

-----VPSHLDDZrrikz-----
	VPSHLDDZrrikz(2(Class<VR512>) -> 0(Class<VR512>))  [2.02;2.02]
		 Successful, latency: 2.02
	VPSHLDDZrrikz(3(Class<VR512>) -> 0(Class<VR512>))  [2.02;2.02]
		 Successful, latency: 2.02

-----VPSHLDQZ128rri-----
	VPSHLDQZ128rri(1(Class<VR128X>) -> 0(Class<VR128X>))  [2.01;2.01]
		 Successful, latency: 2.01
	VPSHLDQZ128rri(2(Class<VR128X>) -> 0(Class<VR128X>))  [2.02;2.02]
		 Successful, latency: 2.02

-----VPSHLDQZ128rrik-----
	VPSHLDQZ128rrik(1(Class<VR128X>) -> 0(Class<VR128X>))  [2.02;2.02]
		 Successful, latency: 2.02
	VPSHLDQZ128rrik(3(Class<VR128X>) -> 0(Class<VR128X>))  [2.02;2.02]
		 Successful, latency: 2.02
	VPSHLDQZ128rrik(4(Class<VR128X>) -> 0(Class<VR128X>))  [2.01;2.01]
		 Successful, latency: 2.01

-----VPSHLDQZ128rrikz-----
	VPSHLDQZ128rrikz(2(Class<VR128X>) -> 0(Class<VR128X>))  [2.02;2.02]
		 Successful, latency: 2.02
	VPSHLDQZ128rrikz(3(Class<VR128X>) -> 0(Class<VR128X>))  [2.02;2.02]
		 Successful, latency: 2.02

-----VPSHLDQZ256rri-----
	VPSHLDQZ256rri(1(Class<VR256X>) -> 0(Class<VR256X>))  [2.02;2.02]
		 Successful, latency: 2.02
	VPSHLDQZ256rri(2(Class<VR256X>) -> 0(Class<VR256X>))  [2.02;2.02]
		 Successful, latency: 2.02

-----VPSHLDQZ256rrik-----
	VPSHLDQZ256rrik(1(Class<VR256X>) -> 0(Class<VR256X>))  [2.02;2.02]
		 Successful, latency: 2.02
	VPSHLDQZ256rrik(3(Class<VR256X>) -> 0(Class<VR256X>))  [2.02;2.02]
		 Successful, latency: 2.02
	VPSHLDQZ256rrik(4(Class<VR256X>) -> 0(Class<VR256X>))  [2.02;2.02]
		 Successful, latency: 2.02

-----VPSHLDQZ256rrikz-----
	VPSHLDQZ256rrikz(2(Class<VR256X>) -> 0(Class<VR256X>))  [2.01;2.01]
		 Successful, latency: 2.01
	VPSHLDQZ256rrikz(3(Class<VR256X>) -> 0(Class<VR256X>))  [2.01;2.01]
		 Successful, latency: 2.01

-----VPSHLDQZrri-----
	VPSHLDQZrri(1(Class<VR512>) -> 0(Class<VR512>))  [2.02;2.02]
		 Successful, latency: 2.02
	VPSHLDQZrri(2(Class<VR512>) -> 0(Class<VR512>))  [1.97;1.97]
		 Successful, latency: 1.97

-----VPSHLDQZrrik-----
	VPSHLDQZrrik(1(Class<VR512>) -> 0(Class<VR512>))  [2.01;2.01]
		 Successful, latency: 2.01
	VPSHLDQZrrik(3(Class<VR512>) -> 0(Class<VR512>))  [2.02;2.02]
		 Successful, latency: 2.02
	VPSHLDQZrrik(4(Class<VR512>) -> 0(Class<VR512>))  [2.03;2.03]
		 Successful, latency: 2.03

-----VPSHLDQZrrikz-----
	VPSHLDQZrrikz(2(Class<VR512>) -> 0(Class<VR512>))  [2.01;2.01]
		 Successful, latency: 2.01
	VPSHLDQZrrikz(3(Class<VR512>) -> 0(Class<VR512>))  [2.01;2.01]
		 Successful, latency: 2.01

-----VPSHLDVDZ128r-----
	VPSHLDVDZ128r(1(Class<VR128X>) -> 0(Class<VR128X>))  [2.03;2.03]
		 Successful, latency: 2.03
	VPSHLDVDZ128r(2(Class<VR128X>) -> 0(Class<VR128X>))  [2.01;2.01]
		 Successful, latency: 2.01
	VPSHLDVDZ128r(3(Class<VR128X>) -> 0(Class<VR128X>))  [2.01;2.01]
		 Successful, latency: 2.01

-----VPSHLDVDZ128rk-----
	VPSHLDVDZ128rk(1(Class<VR128X>) -> 0(Class<VR128X>))  [2.02;2.02]
		 Successful, latency: 2.02
	VPSHLDVDZ128rk(3(Class<VR128X>) -> 0(Class<VR128X>))  [2.02;2.02]
		 Successful, latency: 2.02
	VPSHLDVDZ128rk(4(Class<VR128X>) -> 0(Class<VR128X>))  [2.02;2.02]
		 Successful, latency: 2.02

-----VPSHLDVDZ128rkz-----
	VPSHLDVDZ128rkz(1(Class<VR128X>) -> 0(Class<VR128X>))  [2.01;2.01]
		 Successful, latency: 2.01
	VPSHLDVDZ128rkz(3(Class<VR128X>) -> 0(Class<VR128X>))  [2.02;2.02]
		 Successful, latency: 2.02
	VPSHLDVDZ128rkz(4(Class<VR128X>) -> 0(Class<VR128X>))  [2.02;2.02]
		 Successful, latency: 2.02

-----VPSHLDVDZ256r-----
	VPSHLDVDZ256r(1(Class<VR256X>) -> 0(Class<VR256X>))  [2.02;2.02]
		 Successful, latency: 2.02
	VPSHLDVDZ256r(2(Class<VR256X>) -> 0(Class<VR256X>))  [2.03;2.03]
		 Successful, latency: 2.03
	VPSHLDVDZ256r(3(Class<VR256X>) -> 0(Class<VR256X>))  [2.01;2.01]
		 Successful, latency: 2.01

-----VPSHLDVDZ256rk-----
	VPSHLDVDZ256rk(1(Class<VR256X>) -> 0(Class<VR256X>))  [2.01;2.01]
		 Successful, latency: 2.01
	VPSHLDVDZ256rk(3(Class<VR256X>) -> 0(Class<VR256X>))  [2.02;2.02]
		 Successful, latency: 2.02
	VPSHLDVDZ256rk(4(Class<VR256X>) -> 0(Class<VR256X>))  [2.02;2.02]
		 Successful, latency: 2.02

-----VPSHLDVDZ256rkz-----
	VPSHLDVDZ256rkz(1(Class<VR256X>) -> 0(Class<VR256X>))  [2.02;2.02]
		 Successful, latency: 2.02
	VPSHLDVDZ256rkz(3(Class<VR256X>) -> 0(Class<VR256X>))  [2.02;2.02]
		 Successful, latency: 2.02
	VPSHLDVDZ256rkz(4(Class<VR256X>) -> 0(Class<VR256X>))  [2.02;2.02]
		 Successful, latency: 2.02

-----VPSHLDVDZr-----
	VPSHLDVDZr(1(Class<VR512>) -> 0(Class<VR512>))  [2.02;2.02]
		 Successful, latency: 2.02
	VPSHLDVDZr(2(Class<VR512>) -> 0(Class<VR512>))  [2.02;2.02]
		 Successful, latency: 2.02
	VPSHLDVDZr(3(Class<VR512>) -> 0(Class<VR512>))  [2.01;2.01]
		 Successful, latency: 2.01

-----VPSHLDVDZrk-----
	VPSHLDVDZrk(1(Class<VR512>) -> 0(Class<VR512>))  [2.01;2.01]
		 Successful, latency: 2.01
	VPSHLDVDZrk(3(Class<VR512>) -> 0(Class<VR512>))  [2.03;2.03]
		 Successful, latency: 2.03
	VPSHLDVDZrk(4(Class<VR512>) -> 0(Class<VR512>))  [2.02;2.02]
		 Successful, latency: 2.02

-----VPSHLDVDZrkz-----
	VPSHLDVDZrkz(1(Class<VR512>) -> 0(Class<VR512>))  [2.01;2.01]
		 Successful, latency: 2.01
	VPSHLDVDZrkz(3(Class<VR512>) -> 0(Class<VR512>))  [2.02;2.02]
		 Successful, latency: 2.02
	VPSHLDVDZrkz(4(Class<VR512>) -> 0(Class<VR512>))  [2.02;2.02]
		 Successful, latency: 2.02

-----VPSHLDVQZ128r-----
	VPSHLDVQZ128r(1(Class<VR128X>) -> 0(Class<VR128X>))  [2.02;2.02]
		 Successful, latency: 2.02
	VPSHLDVQZ128r(2(Class<VR128X>) -> 0(Class<VR128X>))  [2.02;2.02]
		 Successful, latency: 2.02
	VPSHLDVQZ128r(3(Class<VR128X>) -> 0(Class<VR128X>))  [2.01;2.01]
		 Successful, latency: 2.01

-----VPSHLDVQZ128rk-----
	VPSHLDVQZ128rk(1(Class<VR128X>) -> 0(Class<VR128X>))  [2;2]
		 Successful, latency: 2
	VPSHLDVQZ128rk(3(Class<VR128X>) -> 0(Class<VR128X>))  [2.02;2.02]
		 Successful, latency: 2.02
	VPSHLDVQZ128rk(4(Class<VR128X>) -> 0(Class<VR128X>))  [2.01;2.01]
		 Successful, latency: 2.01

-----VPSHLDVQZ128rkz-----
	VPSHLDVQZ128rkz(1(Class<VR128X>) -> 0(Class<VR128X>))  [2.01;2.01]
		 Successful, latency: 2.01
	VPSHLDVQZ128rkz(3(Class<VR128X>) -> 0(Class<VR128X>))  [2.02;2.02]
		 Successful, latency: 2.02
	VPSHLDVQZ128rkz(4(Class<VR128X>) -> 0(Class<VR128X>))  [2;2]
		 Successful, latency: 2

-----VPSHLDVQZ256r-----
	VPSHLDVQZ256r(1(Class<VR256X>) -> 0(Class<VR256X>))  [2.04;2.04]
		 Successful, latency: 2.04
	VPSHLDVQZ256r(2(Class<VR256X>) -> 0(Class<VR256X>))  [2.02;2.02]
		 Successful, latency: 2.02
	VPSHLDVQZ256r(3(Class<VR256X>) -> 0(Class<VR256X>))  [2.02;2.02]
		 Successful, latency: 2.02

-----VPSHLDVQZ256rk-----
	VPSHLDVQZ256rk(1(Class<VR256X>) -> 0(Class<VR256X>))  [2.02;2.02]
		 Successful, latency: 2.02
	VPSHLDVQZ256rk(3(Class<VR256X>) -> 0(Class<VR256X>))  [2.02;2.02]
		 Successful, latency: 2.02
	VPSHLDVQZ256rk(4(Class<VR256X>) -> 0(Class<VR256X>))  [2.03;2.03]
		 Successful, latency: 2.03

-----VPSHLDVQZ256rkz-----
	VPSHLDVQZ256rkz(1(Class<VR256X>) -> 0(Class<VR256X>))  [2.03;2.03]
		 Successful, latency: 2.03
	VPSHLDVQZ256rkz(3(Class<VR256X>) -> 0(Class<VR256X>))  [2.02;2.02]
		 Successful, latency: 2.02
	VPSHLDVQZ256rkz(4(Class<VR256X>) -> 0(Class<VR256X>))  [2.03;2.03]
		 Successful, latency: 2.03

-----VPSHLDVQZr-----
	VPSHLDVQZr(1(Class<VR512>) -> 0(Class<VR512>))  [2.02;2.02]
		 Successful, latency: 2.02
	VPSHLDVQZr(2(Class<VR512>) -> 0(Class<VR512>))  [2.02;2.02]
		 Successful, latency: 2.02
	VPSHLDVQZr(3(Class<VR512>) -> 0(Class<VR512>))  [2.02;2.02]
		 Successful, latency: 2.02

-----VPSHLDVQZrk-----
	VPSHLDVQZrk(1(Class<VR512>) -> 0(Class<VR512>))  [2.02;2.02]
		 Successful, latency: 2.02
	VPSHLDVQZrk(3(Class<VR512>) -> 0(Class<VR512>))  [2.01;2.01]
		 Successful, latency: 2.01
	VPSHLDVQZrk(4(Class<VR512>) -> 0(Class<VR512>))  [2.01;2.01]
		 Successful, latency: 2.01

-----VPSHLDVQZrkz-----
	VPSHLDVQZrkz(1(Class<VR512>) -> 0(Class<VR512>))  [2.02;2.02]
		 Successful, latency: 2.02
	VPSHLDVQZrkz(3(Class<VR512>) -> 0(Class<VR512>))  [2.01;2.01]
		 Successful, latency: 2.01
	VPSHLDVQZrkz(4(Class<VR512>) -> 0(Class<VR512>))  [2.02;2.02]
		 Successful, latency: 2.02

-----VPSHLDVWZ128r-----
	VPSHLDVWZ128r(1(Class<VR128X>) -> 0(Class<VR128X>))  [2.02;2.02]
		 Successful, latency: 2.02
	VPSHLDVWZ128r(2(Class<VR128X>) -> 0(Class<VR128X>))  [2.02;2.02]
		 Successful, latency: 2.02
	VPSHLDVWZ128r(3(Class<VR128X>) -> 0(Class<VR128X>))  [2.02;2.02]
		 Successful, latency: 2.02

-----VPSHLDVWZ128rk-----
	VPSHLDVWZ128rk(1(Class<VR128X>) -> 0(Class<VR128X>))  [2.02;2.02]
		 Successful, latency: 2.02
	VPSHLDVWZ128rk(3(Class<VR128X>) -> 0(Class<VR128X>))  [2.02;2.02]
		 Successful, latency: 2.02
	VPSHLDVWZ128rk(4(Class<VR128X>) -> 0(Class<VR128X>))  [2.02;2.02]
		 Successful, latency: 2.02

-----VPSHLDVWZ128rkz-----
	VPSHLDVWZ128rkz(1(Class<VR128X>) -> 0(Class<VR128X>))  [2.02;2.02]
		 Successful, latency: 2.02
	VPSHLDVWZ128rkz(3(Class<VR128X>) -> 0(Class<VR128X>))  [2.02;2.02]
		 Successful, latency: 2.02
	VPSHLDVWZ128rkz(4(Class<VR128X>) -> 0(Class<VR128X>))  [2.02;2.02]
		 Successful, latency: 2.02

-----VPSHLDVWZ256r-----
	VPSHLDVWZ256r(1(Class<VR256X>) -> 0(Class<VR256X>))  [2.03;2.03]
		 Successful, latency: 2.03
	VPSHLDVWZ256r(2(Class<VR256X>) -> 0(Class<VR256X>))  [2.02;2.02]
		 Successful, latency: 2.02
	VPSHLDVWZ256r(3(Class<VR256X>) -> 0(Class<VR256X>))  [2;2]
		 Successful, latency: 2

-----VPSHLDVWZ256rk-----
	VPSHLDVWZ256rk(1(Class<VR256X>) -> 0(Class<VR256X>))  [2.02;2.02]
		 Successful, latency: 2.02
	VPSHLDVWZ256rk(3(Class<VR256X>) -> 0(Class<VR256X>))  [2.01;2.01]
		 Successful, latency: 2.01
	VPSHLDVWZ256rk(4(Class<VR256X>) -> 0(Class<VR256X>))  [2.02;2.02]
		 Successful, latency: 2.02

-----VPSHLDVWZ256rkz-----
	VPSHLDVWZ256rkz(1(Class<VR256X>) -> 0(Class<VR256X>))  [2.01;2.01]
		 Successful, latency: 2.01
	VPSHLDVWZ256rkz(3(Class<VR256X>) -> 0(Class<VR256X>))  [2.02;2.02]
		 Successful, latency: 2.02
	VPSHLDVWZ256rkz(4(Class<VR256X>) -> 0(Class<VR256X>))  [2.01;2.01]
		 Successful, latency: 2.01

-----VPSHLDVWZr-----
	VPSHLDVWZr(1(Class<VR512>) -> 0(Class<VR512>))  [2.01;2.01]
		 Successful, latency: 2.01
	VPSHLDVWZr(2(Class<VR512>) -> 0(Class<VR512>))  [2.01;2.01]
		 Successful, latency: 2.01
	VPSHLDVWZr(3(Class<VR512>) -> 0(Class<VR512>))  [2.01;2.01]
		 Successful, latency: 2.01

-----VPSHLDVWZrk-----
	VPSHLDVWZrk(1(Class<VR512>) -> 0(Class<VR512>))  [2.02;2.02]
		 Successful, latency: 2.02
	VPSHLDVWZrk(3(Class<VR512>) -> 0(Class<VR512>))  [2.02;2.02]
		 Successful, latency: 2.02
	VPSHLDVWZrk(4(Class<VR512>) -> 0(Class<VR512>))  [2.02;2.02]
		 Successful, latency: 2.02

-----VPSHLDVWZrkz-----
	VPSHLDVWZrkz(1(Class<VR512>) -> 0(Class<VR512>))  [2;2]
		 Successful, latency: 2
	VPSHLDVWZrkz(3(Class<VR512>) -> 0(Class<VR512>))  [2.02;2.02]
		 Successful, latency: 2.02
	VPSHLDVWZrkz(4(Class<VR512>) -> 0(Class<VR512>))  [2.01;2.01]
		 Successful, latency: 2.01

-----VPSHLDWZ128rri-----
	VPSHLDWZ128rri(1(Class<VR128X>) -> 0(Class<VR128X>))  [2.02;2.02]
		 Successful, latency: 2.02
	VPSHLDWZ128rri(2(Class<VR128X>) -> 0(Class<VR128X>))  [2.02;2.02]
		 Successful, latency: 2.02

-----VPSHLDWZ128rrik-----
	VPSHLDWZ128rrik(1(Class<VR128X>) -> 0(Class<VR128X>))  [2.02;2.02]
		 Successful, latency: 2.02
	VPSHLDWZ128rrik(3(Class<VR128X>) -> 0(Class<VR128X>))  [2.02;2.02]
		 Successful, latency: 2.02
	VPSHLDWZ128rrik(4(Class<VR128X>) -> 0(Class<VR128X>))  [2.02;2.02]
		 Successful, latency: 2.02

-----VPSHLDWZ128rrikz-----
	VPSHLDWZ128rrikz(2(Class<VR128X>) -> 0(Class<VR128X>))  [2.02;2.02]
		 Successful, latency: 2.02
	VPSHLDWZ128rrikz(3(Class<VR128X>) -> 0(Class<VR128X>))  [2.03;2.03]
		 Successful, latency: 2.03

-----VPSHLDWZ256rri-----
	VPSHLDWZ256rri(1(Class<VR256X>) -> 0(Class<VR256X>))  [2.01;2.01]
		 Successful, latency: 2.01
	VPSHLDWZ256rri(2(Class<VR256X>) -> 0(Class<VR256X>))  [2;2]
		 Successful, latency: 2

-----VPSHLDWZ256rrik-----
	VPSHLDWZ256rrik(1(Class<VR256X>) -> 0(Class<VR256X>))  [2.01;2.01]
		 Successful, latency: 2.01
	VPSHLDWZ256rrik(3(Class<VR256X>) -> 0(Class<VR256X>))  [2.02;2.02]
		 Successful, latency: 2.02
	VPSHLDWZ256rrik(4(Class<VR256X>) -> 0(Class<VR256X>))  [2.01;2.01]
		 Successful, latency: 2.01

-----VPSHLDWZ256rrikz-----
	VPSHLDWZ256rrikz(2(Class<VR256X>) -> 0(Class<VR256X>))  [2.01;2.01]
		 Successful, latency: 2.01
	VPSHLDWZ256rrikz(3(Class<VR256X>) -> 0(Class<VR256X>))  [2.03;2.03]
		 Successful, latency: 2.03

-----VPSHLDWZrri-----
	VPSHLDWZrri(1(Class<VR512>) -> 0(Class<VR512>))  [2.01;2.01]
		 Successful, latency: 2.01
	VPSHLDWZrri(2(Class<VR512>) -> 0(Class<VR512>))  [2.03;2.03]
		 Successful, latency: 2.03

-----VPSHLDWZrrik-----
	VPSHLDWZrrik(1(Class<VR512>) -> 0(Class<VR512>))  [2.02;2.02]
		 Successful, latency: 2.02
	VPSHLDWZrrik(3(Class<VR512>) -> 0(Class<VR512>))  [2.02;2.02]
		 Successful, latency: 2.02
	VPSHLDWZrrik(4(Class<VR512>) -> 0(Class<VR512>))  [2.03;2.03]
		 Successful, latency: 2.03

-----VPSHLDWZrrikz-----
	VPSHLDWZrrikz(2(Class<VR512>) -> 0(Class<VR512>))  [2.02;2.02]
		 Successful, latency: 2.02
	VPSHLDWZrrikz(3(Class<VR512>) -> 0(Class<VR512>))  [2.02;2.02]
		 Successful, latency: 2.02

-----VPSHLDrr-----
	VPSHLDrr(1(Class<VR128>) -> 0(Class<VR128>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VPSHLDrr(2(Class<VR128>) -> 0(Class<VR128>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VPSHLDrr_REV-----
	VPSHLDrr_REV(1(Class<VR128>) -> 0(Class<VR128>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VPSHLDrr_REV(2(Class<VR128>) -> 0(Class<VR128>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VPSHLQrr-----
	VPSHLQrr(1(Class<VR128>) -> 0(Class<VR128>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VPSHLQrr(2(Class<VR128>) -> 0(Class<VR128>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VPSHLQrr_REV-----
	VPSHLQrr_REV(1(Class<VR128>) -> 0(Class<VR128>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VPSHLQrr_REV(2(Class<VR128>) -> 0(Class<VR128>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VPSHLWrr-----
	VPSHLWrr(1(Class<VR128>) -> 0(Class<VR128>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VPSHLWrr(2(Class<VR128>) -> 0(Class<VR128>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VPSHLWrr_REV-----
	VPSHLWrr_REV(1(Class<VR128>) -> 0(Class<VR128>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VPSHLWrr_REV(2(Class<VR128>) -> 0(Class<VR128>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VPSHRDDZ128rri-----
	VPSHRDDZ128rri(1(Class<VR128X>) -> 0(Class<VR128X>))  [2.02;2.02]
		 Successful, latency: 2.02
	VPSHRDDZ128rri(2(Class<VR128X>) -> 0(Class<VR128X>))  [2.02;2.02]
		 Successful, latency: 2.02

-----VPSHRDDZ128rrik-----
	VPSHRDDZ128rrik(1(Class<VR128X>) -> 0(Class<VR128X>))  [2.01;2.01]
		 Successful, latency: 2.01
	VPSHRDDZ128rrik(3(Class<VR128X>) -> 0(Class<VR128X>))  [2.01;2.01]
		 Successful, latency: 2.01
	VPSHRDDZ128rrik(4(Class<VR128X>) -> 0(Class<VR128X>))  [2.01;2.01]
		 Successful, latency: 2.01

-----VPSHRDDZ128rrikz-----
	VPSHRDDZ128rrikz(2(Class<VR128X>) -> 0(Class<VR128X>))  [2.02;2.02]
		 Successful, latency: 2.02
	VPSHRDDZ128rrikz(3(Class<VR128X>) -> 0(Class<VR128X>))  [2.04;2.04]
		 Successful, latency: 2.04

-----VPSHRDDZ256rri-----
	VPSHRDDZ256rri(1(Class<VR256X>) -> 0(Class<VR256X>))  [2.03;2.03]
		 Successful, latency: 2.03
	VPSHRDDZ256rri(2(Class<VR256X>) -> 0(Class<VR256X>))  [2.02;2.02]
		 Successful, latency: 2.02

-----VPSHRDDZ256rrik-----
	VPSHRDDZ256rrik(1(Class<VR256X>) -> 0(Class<VR256X>))  [2.02;2.02]
		 Successful, latency: 2.02
	VPSHRDDZ256rrik(3(Class<VR256X>) -> 0(Class<VR256X>))  [2.02;2.02]
		 Successful, latency: 2.02
	VPSHRDDZ256rrik(4(Class<VR256X>) -> 0(Class<VR256X>))  [2.01;2.01]
		 Successful, latency: 2.01

-----VPSHRDDZ256rrikz-----
	VPSHRDDZ256rrikz(2(Class<VR256X>) -> 0(Class<VR256X>))  [2.01;2.01]
		 Successful, latency: 2.01
	VPSHRDDZ256rrikz(3(Class<VR256X>) -> 0(Class<VR256X>))  [2.02;2.02]
		 Successful, latency: 2.02

-----VPSHRDDZrri-----
	VPSHRDDZrri(1(Class<VR512>) -> 0(Class<VR512>))  [2.02;2.02]
		 Successful, latency: 2.02
	VPSHRDDZrri(2(Class<VR512>) -> 0(Class<VR512>))  [2.02;2.02]
		 Successful, latency: 2.02

-----VPSHRDDZrrik-----
	VPSHRDDZrrik(1(Class<VR512>) -> 0(Class<VR512>))  [2.01;2.01]
		 Successful, latency: 2.01
	VPSHRDDZrrik(3(Class<VR512>) -> 0(Class<VR512>))  [2.01;2.01]
		 Successful, latency: 2.01
	VPSHRDDZrrik(4(Class<VR512>) -> 0(Class<VR512>))  [2.04;2.04]
		 Successful, latency: 2.04

-----VPSHRDDZrrikz-----
	VPSHRDDZrrikz(2(Class<VR512>) -> 0(Class<VR512>))  [2.02;2.02]
		 Successful, latency: 2.02
	VPSHRDDZrrikz(3(Class<VR512>) -> 0(Class<VR512>))  [2.02;2.02]
		 Successful, latency: 2.02

-----VPSHRDQZ128rri-----
	VPSHRDQZ128rri(1(Class<VR128X>) -> 0(Class<VR128X>))  [2.03;2.03]
		 Successful, latency: 2.03
	VPSHRDQZ128rri(2(Class<VR128X>) -> 0(Class<VR128X>))  [2.03;2.03]
		 Successful, latency: 2.03

-----VPSHRDQZ128rrik-----
	VPSHRDQZ128rrik(1(Class<VR128X>) -> 0(Class<VR128X>))  [2.01;2.01]
		 Successful, latency: 2.01
	VPSHRDQZ128rrik(3(Class<VR128X>) -> 0(Class<VR128X>))  [2.02;2.02]
		 Successful, latency: 2.02
	VPSHRDQZ128rrik(4(Class<VR128X>) -> 0(Class<VR128X>))  [2.01;2.01]
		 Successful, latency: 2.01

-----VPSHRDQZ128rrikz-----
	VPSHRDQZ128rrikz(2(Class<VR128X>) -> 0(Class<VR128X>))  [2.05;2.05]
		 Successful, latency: 2.05
	VPSHRDQZ128rrikz(3(Class<VR128X>) -> 0(Class<VR128X>))  [2.02;2.02]
		 Successful, latency: 2.02

-----VPSHRDQZ256rri-----
	VPSHRDQZ256rri(1(Class<VR256X>) -> 0(Class<VR256X>))  [2.02;2.02]
		 Successful, latency: 2.02
	VPSHRDQZ256rri(2(Class<VR256X>) -> 0(Class<VR256X>))  [2.02;2.02]
		 Successful, latency: 2.02

-----VPSHRDQZ256rrik-----
	VPSHRDQZ256rrik(1(Class<VR256X>) -> 0(Class<VR256X>))  [2.02;2.02]
		 Successful, latency: 2.02
	VPSHRDQZ256rrik(3(Class<VR256X>) -> 0(Class<VR256X>))  [2.01;2.01]
		 Successful, latency: 2.01
	VPSHRDQZ256rrik(4(Class<VR256X>) -> 0(Class<VR256X>))  [2.01;2.01]
		 Successful, latency: 2.01

-----VPSHRDQZ256rrikz-----
	VPSHRDQZ256rrikz(2(Class<VR256X>) -> 0(Class<VR256X>))  [2.03;2.03]
		 Successful, latency: 2.03
	VPSHRDQZ256rrikz(3(Class<VR256X>) -> 0(Class<VR256X>))  [2;2]
		 Successful, latency: 2

-----VPSHRDQZrri-----
	VPSHRDQZrri(1(Class<VR512>) -> 0(Class<VR512>))  [2.02;2.02]
		 Successful, latency: 2.02
	VPSHRDQZrri(2(Class<VR512>) -> 0(Class<VR512>))  [2.03;2.03]
		 Successful, latency: 2.03

-----VPSHRDQZrrik-----
	VPSHRDQZrrik(1(Class<VR512>) -> 0(Class<VR512>))  [2.02;2.02]
		 Successful, latency: 2.02
	VPSHRDQZrrik(3(Class<VR512>) -> 0(Class<VR512>))  [2.02;2.02]
		 Successful, latency: 2.02
	VPSHRDQZrrik(4(Class<VR512>) -> 0(Class<VR512>))  [2.02;2.02]
		 Successful, latency: 2.02

-----VPSHRDQZrrikz-----
	VPSHRDQZrrikz(2(Class<VR512>) -> 0(Class<VR512>))  [2.02;2.02]
		 Successful, latency: 2.02
	VPSHRDQZrrikz(3(Class<VR512>) -> 0(Class<VR512>))  [2.03;2.03]
		 Successful, latency: 2.03

-----VPSHRDVDZ128r-----
	VPSHRDVDZ128r(1(Class<VR128X>) -> 0(Class<VR128X>))  [2.02;2.02]
		 Successful, latency: 2.02
	VPSHRDVDZ128r(2(Class<VR128X>) -> 0(Class<VR128X>))  [2.02;2.02]
		 Successful, latency: 2.02
	VPSHRDVDZ128r(3(Class<VR128X>) -> 0(Class<VR128X>))  [2.01;2.01]
		 Successful, latency: 2.01

-----VPSHRDVDZ128rk-----
	VPSHRDVDZ128rk(1(Class<VR128X>) -> 0(Class<VR128X>))  [2;2]
		 Successful, latency: 2
	VPSHRDVDZ128rk(3(Class<VR128X>) -> 0(Class<VR128X>))  [2.02;2.02]
		 Successful, latency: 2.02
	VPSHRDVDZ128rk(4(Class<VR128X>) -> 0(Class<VR128X>))  [2.02;2.02]
		 Successful, latency: 2.02

-----VPSHRDVDZ128rkz-----
	VPSHRDVDZ128rkz(1(Class<VR128X>) -> 0(Class<VR128X>))  [2.02;2.02]
		 Successful, latency: 2.02
	VPSHRDVDZ128rkz(3(Class<VR128X>) -> 0(Class<VR128X>))  [2.01;2.01]
		 Successful, latency: 2.01
	VPSHRDVDZ128rkz(4(Class<VR128X>) -> 0(Class<VR128X>))  [2.01;2.01]
		 Successful, latency: 2.01

-----VPSHRDVDZ256r-----
	VPSHRDVDZ256r(1(Class<VR256X>) -> 0(Class<VR256X>))  [2.04;2.04]
		 Successful, latency: 2.04
	VPSHRDVDZ256r(2(Class<VR256X>) -> 0(Class<VR256X>))  [2.01;2.01]
		 Successful, latency: 2.01
	VPSHRDVDZ256r(3(Class<VR256X>) -> 0(Class<VR256X>))  [2.02;2.02]
		 Successful, latency: 2.02

-----VPSHRDVDZ256rk-----
	VPSHRDVDZ256rk(1(Class<VR256X>) -> 0(Class<VR256X>))  [2.02;2.02]
		 Successful, latency: 2.02
	VPSHRDVDZ256rk(3(Class<VR256X>) -> 0(Class<VR256X>))  [2.04;2.04]
		 Successful, latency: 2.04
	VPSHRDVDZ256rk(4(Class<VR256X>) -> 0(Class<VR256X>))  [2.02;2.02]
		 Successful, latency: 2.02

-----VPSHRDVDZ256rkz-----
	VPSHRDVDZ256rkz(1(Class<VR256X>) -> 0(Class<VR256X>))  [2.01;2.01]
		 Successful, latency: 2.01
	VPSHRDVDZ256rkz(3(Class<VR256X>) -> 0(Class<VR256X>))  [2.02;2.02]
		 Successful, latency: 2.02
	VPSHRDVDZ256rkz(4(Class<VR256X>) -> 0(Class<VR256X>))  [2.02;2.02]
		 Successful, latency: 2.02

-----VPSHRDVDZr-----
	VPSHRDVDZr(1(Class<VR512>) -> 0(Class<VR512>))  [2.02;2.02]
		 Successful, latency: 2.02
	VPSHRDVDZr(2(Class<VR512>) -> 0(Class<VR512>))  [2.03;2.03]
		 Successful, latency: 2.03
	VPSHRDVDZr(3(Class<VR512>) -> 0(Class<VR512>))  [2.02;2.02]
		 Successful, latency: 2.02

-----VPSHRDVDZrk-----
	VPSHRDVDZrk(1(Class<VR512>) -> 0(Class<VR512>))  [2.03;2.03]
		 Successful, latency: 2.03
	VPSHRDVDZrk(3(Class<VR512>) -> 0(Class<VR512>))  [2.01;2.01]
		 Successful, latency: 2.01
	VPSHRDVDZrk(4(Class<VR512>) -> 0(Class<VR512>))  [2.02;2.02]
		 Successful, latency: 2.02

-----VPSHRDVDZrkz-----
	VPSHRDVDZrkz(1(Class<VR512>) -> 0(Class<VR512>))  [2.01;2.01]
		 Successful, latency: 2.01
	VPSHRDVDZrkz(3(Class<VR512>) -> 0(Class<VR512>))  [2.01;2.01]
		 Successful, latency: 2.01
	VPSHRDVDZrkz(4(Class<VR512>) -> 0(Class<VR512>))  [2.02;2.02]
		 Successful, latency: 2.02

-----VPSHRDVQZ128r-----
	VPSHRDVQZ128r(1(Class<VR128X>) -> 0(Class<VR128X>))  [2.02;2.02]
		 Successful, latency: 2.02
	VPSHRDVQZ128r(2(Class<VR128X>) -> 0(Class<VR128X>))  [2.02;2.02]
		 Successful, latency: 2.02
	VPSHRDVQZ128r(3(Class<VR128X>) -> 0(Class<VR128X>))  [2.02;2.02]
		 Successful, latency: 2.02

-----VPSHRDVQZ128rk-----
	VPSHRDVQZ128rk(1(Class<VR128X>) -> 0(Class<VR128X>))  [2.01;2.01]
		 Successful, latency: 2.01
	VPSHRDVQZ128rk(3(Class<VR128X>) -> 0(Class<VR128X>))  [2.03;2.03]
		 Successful, latency: 2.03
	VPSHRDVQZ128rk(4(Class<VR128X>) -> 0(Class<VR128X>))  [2.01;2.01]
		 Successful, latency: 2.01

-----VPSHRDVQZ128rkz-----
	VPSHRDVQZ128rkz(1(Class<VR128X>) -> 0(Class<VR128X>))  [2.02;2.02]
		 Successful, latency: 2.02
	VPSHRDVQZ128rkz(3(Class<VR128X>) -> 0(Class<VR128X>))  [2.02;2.02]
		 Successful, latency: 2.02
	VPSHRDVQZ128rkz(4(Class<VR128X>) -> 0(Class<VR128X>))  [2.02;2.02]
		 Successful, latency: 2.02

-----VPSHRDVQZ256r-----
	VPSHRDVQZ256r(1(Class<VR256X>) -> 0(Class<VR256X>))  [2.02;2.02]
		 Successful, latency: 2.02
	VPSHRDVQZ256r(2(Class<VR256X>) -> 0(Class<VR256X>))  [2.02;2.02]
		 Successful, latency: 2.02
	VPSHRDVQZ256r(3(Class<VR256X>) -> 0(Class<VR256X>))  [2.02;2.02]
		 Successful, latency: 2.02

-----VPSHRDVQZ256rk-----
	VPSHRDVQZ256rk(1(Class<VR256X>) -> 0(Class<VR256X>))  [2.03;2.03]
		 Successful, latency: 2.03
	VPSHRDVQZ256rk(3(Class<VR256X>) -> 0(Class<VR256X>))  [2.02;2.02]
		 Successful, latency: 2.02
	VPSHRDVQZ256rk(4(Class<VR256X>) -> 0(Class<VR256X>))  [2.02;2.02]
		 Successful, latency: 2.02

-----VPSHRDVQZ256rkz-----
	VPSHRDVQZ256rkz(1(Class<VR256X>) -> 0(Class<VR256X>))  [2.02;2.02]
		 Successful, latency: 2.02
	VPSHRDVQZ256rkz(3(Class<VR256X>) -> 0(Class<VR256X>))  [2.01;2.01]
		 Successful, latency: 2.01
	VPSHRDVQZ256rkz(4(Class<VR256X>) -> 0(Class<VR256X>))  [2.02;2.02]
		 Successful, latency: 2.02

-----VPSHRDVQZr-----
	VPSHRDVQZr(1(Class<VR512>) -> 0(Class<VR512>))  [2.03;2.03]
		 Successful, latency: 2.03
	VPSHRDVQZr(2(Class<VR512>) -> 0(Class<VR512>))  [2.03;2.03]
		 Successful, latency: 2.03
	VPSHRDVQZr(3(Class<VR512>) -> 0(Class<VR512>))  [2.02;2.02]
		 Successful, latency: 2.02

-----VPSHRDVQZrk-----
	VPSHRDVQZrk(1(Class<VR512>) -> 0(Class<VR512>))  [2.02;2.02]
		 Successful, latency: 2.02
	VPSHRDVQZrk(3(Class<VR512>) -> 0(Class<VR512>))  [2.02;2.02]
		 Successful, latency: 2.02
	VPSHRDVQZrk(4(Class<VR512>) -> 0(Class<VR512>))  [2.02;2.02]
		 Successful, latency: 2.02

-----VPSHRDVQZrkz-----
	VPSHRDVQZrkz(1(Class<VR512>) -> 0(Class<VR512>))  [2.02;2.02]
		 Successful, latency: 2.02
	VPSHRDVQZrkz(3(Class<VR512>) -> 0(Class<VR512>))  [2.02;2.02]
		 Successful, latency: 2.02
	VPSHRDVQZrkz(4(Class<VR512>) -> 0(Class<VR512>))  [2.02;2.02]
		 Successful, latency: 2.02

-----VPSHRDVWZ128r-----
	VPSHRDVWZ128r(1(Class<VR128X>) -> 0(Class<VR128X>))  [2.02;2.02]
		 Successful, latency: 2.02
	VPSHRDVWZ128r(2(Class<VR128X>) -> 0(Class<VR128X>))  [2.02;2.02]
		 Successful, latency: 2.02
	VPSHRDVWZ128r(3(Class<VR128X>) -> 0(Class<VR128X>))  [2.02;2.02]
		 Successful, latency: 2.02

-----VPSHRDVWZ128rk-----
	VPSHRDVWZ128rk(1(Class<VR128X>) -> 0(Class<VR128X>))  [2.02;2.02]
		 Successful, latency: 2.02
	VPSHRDVWZ128rk(3(Class<VR128X>) -> 0(Class<VR128X>))  [2.02;2.02]
		 Successful, latency: 2.02
	VPSHRDVWZ128rk(4(Class<VR128X>) -> 0(Class<VR128X>))  [2.02;2.02]
		 Successful, latency: 2.02

-----VPSHRDVWZ128rkz-----
	VPSHRDVWZ128rkz(1(Class<VR128X>) -> 0(Class<VR128X>))  [2.01;2.01]
		 Successful, latency: 2.01
	VPSHRDVWZ128rkz(3(Class<VR128X>) -> 0(Class<VR128X>))  [2.02;2.02]
		 Successful, latency: 2.02
	VPSHRDVWZ128rkz(4(Class<VR128X>) -> 0(Class<VR128X>))  [2.01;2.01]
		 Successful, latency: 2.01

-----VPSHRDVWZ256r-----
	VPSHRDVWZ256r(1(Class<VR256X>) -> 0(Class<VR256X>))  [2.02;2.02]
		 Successful, latency: 2.02
	VPSHRDVWZ256r(2(Class<VR256X>) -> 0(Class<VR256X>))  [2.03;2.03]
		 Successful, latency: 2.03
	VPSHRDVWZ256r(3(Class<VR256X>) -> 0(Class<VR256X>))  [2.03;2.03]
		 Successful, latency: 2.03

-----VPSHRDVWZ256rk-----
	VPSHRDVWZ256rk(1(Class<VR256X>) -> 0(Class<VR256X>))  [2.01;2.01]
		 Successful, latency: 2.01
	VPSHRDVWZ256rk(3(Class<VR256X>) -> 0(Class<VR256X>))  [2.01;2.01]
		 Successful, latency: 2.01
	VPSHRDVWZ256rk(4(Class<VR256X>) -> 0(Class<VR256X>))  [2.02;2.02]
		 Successful, latency: 2.02

-----VPSHRDVWZ256rkz-----
	VPSHRDVWZ256rkz(1(Class<VR256X>) -> 0(Class<VR256X>))  [2.02;2.02]
		 Successful, latency: 2.02
	VPSHRDVWZ256rkz(3(Class<VR256X>) -> 0(Class<VR256X>))  [2.02;2.02]
		 Successful, latency: 2.02
	VPSHRDVWZ256rkz(4(Class<VR256X>) -> 0(Class<VR256X>))  [2.02;2.02]
		 Successful, latency: 2.02

-----VPSHRDVWZr-----
	VPSHRDVWZr(1(Class<VR512>) -> 0(Class<VR512>))  [2.01;2.01]
		 Successful, latency: 2.01
	VPSHRDVWZr(2(Class<VR512>) -> 0(Class<VR512>))  [2.02;2.02]
		 Successful, latency: 2.02
	VPSHRDVWZr(3(Class<VR512>) -> 0(Class<VR512>))  [2.02;2.02]
		 Successful, latency: 2.02

-----VPSHRDVWZrk-----
	VPSHRDVWZrk(1(Class<VR512>) -> 0(Class<VR512>))  [2.01;2.01]
		 Successful, latency: 2.01
	VPSHRDVWZrk(3(Class<VR512>) -> 0(Class<VR512>))  [2.02;2.02]
		 Successful, latency: 2.02
	VPSHRDVWZrk(4(Class<VR512>) -> 0(Class<VR512>))  [2.02;2.02]
		 Successful, latency: 2.02

-----VPSHRDVWZrkz-----
	VPSHRDVWZrkz(1(Class<VR512>) -> 0(Class<VR512>))  [2.01;2.01]
		 Successful, latency: 2.01
	VPSHRDVWZrkz(3(Class<VR512>) -> 0(Class<VR512>))  [2.02;2.02]
		 Successful, latency: 2.02
	VPSHRDVWZrkz(4(Class<VR512>) -> 0(Class<VR512>))  [2.01;2.01]
		 Successful, latency: 2.01

-----VPSHRDWZ128rri-----
	VPSHRDWZ128rri(1(Class<VR128X>) -> 0(Class<VR128X>))  [2.02;2.02]
		 Successful, latency: 2.02
	VPSHRDWZ128rri(2(Class<VR128X>) -> 0(Class<VR128X>))  [2.01;2.01]
		 Successful, latency: 2.01

-----VPSHRDWZ128rrik-----
	VPSHRDWZ128rrik(1(Class<VR128X>) -> 0(Class<VR128X>))  [2.02;2.02]
		 Successful, latency: 2.02
	VPSHRDWZ128rrik(3(Class<VR128X>) -> 0(Class<VR128X>))  [2.02;2.02]
		 Successful, latency: 2.02
	VPSHRDWZ128rrik(4(Class<VR128X>) -> 0(Class<VR128X>))  [2.01;2.01]
		 Successful, latency: 2.01

-----VPSHRDWZ128rrikz-----
	VPSHRDWZ128rrikz(2(Class<VR128X>) -> 0(Class<VR128X>))  [2.03;2.03]
		 Successful, latency: 2.03
	VPSHRDWZ128rrikz(3(Class<VR128X>) -> 0(Class<VR128X>))  [2.02;2.02]
		 Successful, latency: 2.02

-----VPSHRDWZ256rri-----
	VPSHRDWZ256rri(1(Class<VR256X>) -> 0(Class<VR256X>))  [2.02;2.02]
		 Successful, latency: 2.02
	VPSHRDWZ256rri(2(Class<VR256X>) -> 0(Class<VR256X>))  [2.02;2.02]
		 Successful, latency: 2.02

-----VPSHRDWZ256rrik-----
	VPSHRDWZ256rrik(1(Class<VR256X>) -> 0(Class<VR256X>))  [2.01;2.01]
		 Successful, latency: 2.01
	VPSHRDWZ256rrik(3(Class<VR256X>) -> 0(Class<VR256X>))  [2.02;2.02]
		 Successful, latency: 2.02
	VPSHRDWZ256rrik(4(Class<VR256X>) -> 0(Class<VR256X>))  [2.02;2.02]
		 Successful, latency: 2.02

-----VPSHRDWZ256rrikz-----
	VPSHRDWZ256rrikz(2(Class<VR256X>) -> 0(Class<VR256X>))  [2.02;2.02]
		 Successful, latency: 2.02
	VPSHRDWZ256rrikz(3(Class<VR256X>) -> 0(Class<VR256X>))  [2.02;2.02]
		 Successful, latency: 2.02

-----VPSHRDWZrri-----
	VPSHRDWZrri(1(Class<VR512>) -> 0(Class<VR512>))  [2.02;2.02]
		 Successful, latency: 2.02
	VPSHRDWZrri(2(Class<VR512>) -> 0(Class<VR512>))  [2.02;2.02]
		 Successful, latency: 2.02

-----VPSHRDWZrrik-----
	VPSHRDWZrrik(1(Class<VR512>) -> 0(Class<VR512>))  [2.02;2.02]
		 Successful, latency: 2.02
	VPSHRDWZrrik(3(Class<VR512>) -> 0(Class<VR512>))  [2.02;2.02]
		 Successful, latency: 2.02
	VPSHRDWZrrik(4(Class<VR512>) -> 0(Class<VR512>))  [2.02;2.02]
		 Successful, latency: 2.02

-----VPSHRDWZrrikz-----
	VPSHRDWZrrikz(2(Class<VR512>) -> 0(Class<VR512>))  [2.03;2.03]
		 Successful, latency: 2.03
	VPSHRDWZrrikz(3(Class<VR512>) -> 0(Class<VR512>))  [2.02;2.02]
		 Successful, latency: 2.02

-----VPSHUFBITQMBZ128rr-----
	VPSHUFBITQMBZ128rr(1(Class<VR128X>) -> 0(Class<VK16>))  [1.01;3.03]
		Dependencies:
			VPMOVB2MZ128kr(1(Class<VR128X>) -> 0(Class<VK16>)) 
			VPMOVM2BZ128rk(1(Class<VK16>) -> 0(Class<VR128X>)) 
		Combined result: 4.03 cycles
	VPSHUFBITQMBZ128rr(2(Class<VR128X>) -> 0(Class<VK16>))  [1.01;3.03]
		Dependencies:
			VPMOVB2MZ128kr(1(Class<VR128X>) -> 0(Class<VK16>)) 
			VPMOVM2BZ128rk(1(Class<VK16>) -> 0(Class<VR128X>)) 
		Combined result: 4.03 cycles

-----VPSHUFBITQMBZ128rrk-----
	VPSHUFBITQMBZ128rrk(2(Class<VR128X>) -> 0(Class<VK16>))  [1.04;3.05]
		Dependencies:
			VPMOVB2MZ128kr(1(Class<VR128X>) -> 0(Class<VK16>)) 
			VPMOVM2BZ128rk(1(Class<VK16>) -> 0(Class<VR128X>)) 
		Combined result: 4.05 cycles
	VPSHUFBITQMBZ128rrk(3(Class<VR128X>) -> 0(Class<VK16>))  [1.01;3.03]
		Dependencies:
			VPMOVB2MZ128kr(1(Class<VR128X>) -> 0(Class<VK16>)) 
			VPMOVM2BZ128rk(1(Class<VK16>) -> 0(Class<VR128X>)) 
		Combined result: 4.03 cycles

-----VPSHUFBITQMBZ256rr-----
	VPSHUFBITQMBZ256rr(1(Class<VR256X>) -> 0(Class<VK32>))  [1.03;4.05]
		Dependencies:
			VPSHUFBITQMBZ256rr(1(Class<VR256X>) -> 0(Class<VK32>)) 
			VPMOVM2BZ256rk(1(Class<VK32>) -> 0(Class<VR256X>)) 
		Combined result: 5.05 cycles
	VPSHUFBITQMBZ256rr(2(Class<VR256X>) -> 0(Class<VK32>))  [1.01;4.03]
		Dependencies:
			VPSHUFBITQMBZ256rr(1(Class<VR256X>) -> 0(Class<VK32>)) 
			VPMOVM2BZ256rk(1(Class<VK32>) -> 0(Class<VR256X>)) 
		Combined result: 5.03 cycles

-----VPSHUFBITQMBZ256rrk-----
	VPSHUFBITQMBZ256rrk(2(Class<VR256X>) -> 0(Class<VK32>))  [1.01;4.03]
		Dependencies:
			VPSHUFBITQMBZ256rr(1(Class<VR256X>) -> 0(Class<VK32>)) 
			VPMOVM2BZ256rk(1(Class<VK32>) -> 0(Class<VR256X>)) 
		Combined result: 5.03 cycles
	VPSHUFBITQMBZ256rrk(3(Class<VR256X>) -> 0(Class<VK32>))  [1.03;4.05]
		Dependencies:
			VPSHUFBITQMBZ256rr(1(Class<VR256X>) -> 0(Class<VK32>)) 
			VPMOVM2BZ256rk(1(Class<VK32>) -> 0(Class<VR256X>)) 
		Combined result: 5.05 cycles

-----VPSHUFBITQMBZrr-----
	VPSHUFBITQMBZrr(1(Class<VR512>) -> 0(Class<VK64>))  [0.99;4.14]
		Dependencies:
			VPTESTNMBZrr(1(Class<VR512>) -> 0(Class<VK64>)) 
			VPMOVM2BZrk(1(Class<VK64>) -> 0(Class<VR512>)) 
		Combined result: 5.14 cycles
	VPSHUFBITQMBZrr(2(Class<VR512>) -> 0(Class<VK64>))  [0.995;4.15]
		Dependencies:
			VPTESTNMBZrr(1(Class<VR512>) -> 0(Class<VK64>)) 
			VPMOVM2BZrk(1(Class<VK64>) -> 0(Class<VR512>)) 
		Combined result: 5.15 cycles

-----VPSHUFBITQMBZrrk-----
	VPSHUFBITQMBZrrk(2(Class<VR512>) -> 0(Class<VK64>))  [1.06;4.21]
		Dependencies:
			VPTESTNMBZrr(1(Class<VR512>) -> 0(Class<VK64>)) 
			VPMOVM2BZrk(1(Class<VK64>) -> 0(Class<VR512>)) 
		Combined result: 5.21 cycles
	VPSHUFBITQMBZrrk(3(Class<VR512>) -> 0(Class<VK64>))  [1;4.16]
		Dependencies:
			VPTESTNMBZrr(1(Class<VR512>) -> 0(Class<VK64>)) 
			VPMOVM2BZrk(1(Class<VK64>) -> 0(Class<VR512>)) 
		Combined result: 5.16 cycles

-----VPSHUFBYrr-----
	VPSHUFBYrr(1(Class<VR256>) -> 0(Class<VR256>))  [2.03;2.03]
		 Successful, latency: 2.03
	VPSHUFBYrr(2(Class<VR256>) -> 0(Class<VR256>))  [2.03;2.03]
		 Successful, latency: 2.03

-----VPSHUFBZ128rr-----
	VPSHUFBZ128rr(1(Class<VR128X>) -> 0(Class<VR128X>))  [2.02;2.02]
		 Successful, latency: 2.02
	VPSHUFBZ128rr(2(Class<VR128X>) -> 0(Class<VR128X>))  [2.02;2.02]
		 Successful, latency: 2.02

-----VPSHUFBZ128rrk-----
	VPSHUFBZ128rrk(1(Class<VR128X>) -> 0(Class<VR128X>))  [2.02;2.02]
		 Successful, latency: 2.02
	VPSHUFBZ128rrk(3(Class<VR128X>) -> 0(Class<VR128X>))  [2.02;2.02]
		 Successful, latency: 2.02
	VPSHUFBZ128rrk(4(Class<VR128X>) -> 0(Class<VR128X>))  [2.02;2.02]
		 Successful, latency: 2.02

-----VPSHUFBZ128rrkz-----
	VPSHUFBZ128rrkz(2(Class<VR128X>) -> 0(Class<VR128X>))  [2.02;2.02]
		 Successful, latency: 2.02
	VPSHUFBZ128rrkz(3(Class<VR128X>) -> 0(Class<VR128X>))  [2.01;2.01]
		 Successful, latency: 2.01

-----VPSHUFBZ256rr-----
	VPSHUFBZ256rr(1(Class<VR256X>) -> 0(Class<VR256X>))  [2.04;2.04]
		 Successful, latency: 2.04
	VPSHUFBZ256rr(2(Class<VR256X>) -> 0(Class<VR256X>))  [2.01;2.01]
		 Successful, latency: 2.01

-----VPSHUFBZ256rrk-----
	VPSHUFBZ256rrk(1(Class<VR256X>) -> 0(Class<VR256X>))  [2.01;2.01]
		 Successful, latency: 2.01
	VPSHUFBZ256rrk(3(Class<VR256X>) -> 0(Class<VR256X>))  [2.02;2.02]
		 Successful, latency: 2.02
	VPSHUFBZ256rrk(4(Class<VR256X>) -> 0(Class<VR256X>))  [2.02;2.02]
		 Successful, latency: 2.02

-----VPSHUFBZ256rrkz-----
	VPSHUFBZ256rrkz(2(Class<VR256X>) -> 0(Class<VR256X>))  [2;2]
		 Successful, latency: 2
	VPSHUFBZ256rrkz(3(Class<VR256X>) -> 0(Class<VR256X>))  [2.01;2.01]
		 Successful, latency: 2.01

-----VPSHUFBZrr-----
	VPSHUFBZrr(1(Class<VR512>) -> 0(Class<VR512>))  [2.02;2.02]
		 Successful, latency: 2.02
	VPSHUFBZrr(2(Class<VR512>) -> 0(Class<VR512>))  [2.02;2.02]
		 Successful, latency: 2.02

-----VPSHUFBZrrk-----
	VPSHUFBZrrk(1(Class<VR512>) -> 0(Class<VR512>))  [2.02;2.02]
		 Successful, latency: 2.02
	VPSHUFBZrrk(3(Class<VR512>) -> 0(Class<VR512>))  [2.02;2.02]
		 Successful, latency: 2.02
	VPSHUFBZrrk(4(Class<VR512>) -> 0(Class<VR512>))  [2.02;2.02]
		 Successful, latency: 2.02

-----VPSHUFBZrrkz-----
	VPSHUFBZrrkz(2(Class<VR512>) -> 0(Class<VR512>))  [2.02;2.02]
		 Successful, latency: 2.02
	VPSHUFBZrrkz(3(Class<VR512>) -> 0(Class<VR512>))  [2.02;2.02]
		 Successful, latency: 2.02

-----VPSHUFBrr-----
	VPSHUFBrr(1(Class<VR128>) -> 0(Class<VR128>))  [2.02;2.02]
		 Successful, latency: 2.02
	VPSHUFBrr(2(Class<VR128>) -> 0(Class<VR128>))  [2.01;2.01]
		 Successful, latency: 2.01

-----VPSHUFDYri-----
	VPSHUFDYri(1(Class<VR256>) -> 0(Class<VR256>))  [1.02;1.02]
		 Successful, latency: 1.02

-----VPSHUFDZ128ri-----
	VPSHUFDZ128ri(1(Class<VR128X>) -> 0(Class<VR128X>))  [1;1]
		 Successful, latency: 1

-----VPSHUFDZ128rik-----
	VPSHUFDZ128rik(1(Class<VR128X>) -> 0(Class<VR128X>))  [1;1]
		 Successful, latency: 1
	VPSHUFDZ128rik(3(Class<VR128X>) -> 0(Class<VR128X>))  [1.02;1.02]
		 Successful, latency: 1.02

-----VPSHUFDZ128rikz-----
	VPSHUFDZ128rikz(2(Class<VR128X>) -> 0(Class<VR128X>))  [1.01;1.01]
		 Successful, latency: 1.01

-----VPSHUFDZ256ri-----
	VPSHUFDZ256ri(1(Class<VR256X>) -> 0(Class<VR256X>))  [1;1]
		 Successful, latency: 1

-----VPSHUFDZ256rik-----
	VPSHUFDZ256rik(1(Class<VR256X>) -> 0(Class<VR256X>))  [1.01;1.01]
		 Successful, latency: 1.01
	VPSHUFDZ256rik(3(Class<VR256X>) -> 0(Class<VR256X>))  [1.01;1.01]
		 Successful, latency: 1.01

-----VPSHUFDZ256rikz-----
	VPSHUFDZ256rikz(2(Class<VR256X>) -> 0(Class<VR256X>))  [1;1]
		 Successful, latency: 1

-----VPSHUFDZri-----
	VPSHUFDZri(1(Class<VR512>) -> 0(Class<VR512>))  [1.15;1.15]
		 Successful, latency: 1.15

-----VPSHUFDZrik-----
	VPSHUFDZrik(1(Class<VR512>) -> 0(Class<VR512>))  [1.14;1.14]
		 Successful, latency: 1.14
	VPSHUFDZrik(3(Class<VR512>) -> 0(Class<VR512>))  [1.14;1.14]
		 Successful, latency: 1.14

-----VPSHUFDZrikz-----
	VPSHUFDZrikz(2(Class<VR512>) -> 0(Class<VR512>))  [1.14;1.14]
		 Successful, latency: 1.14

-----VPSHUFDri-----
	VPSHUFDri(1(Class<VR128>) -> 0(Class<VR128>))  [1;1]
		 Successful, latency: 1

-----VPSHUFHWYri-----
	VPSHUFHWYri(1(Class<VR256>) -> 0(Class<VR256>))  [1;1]
		 Successful, latency: 1

-----VPSHUFHWZ128ri-----
	VPSHUFHWZ128ri(1(Class<VR128X>) -> 0(Class<VR128X>))  [1.01;1.01]
		 Successful, latency: 1.01

-----VPSHUFHWZ128rik-----
	VPSHUFHWZ128rik(1(Class<VR128X>) -> 0(Class<VR128X>))  [1;1]
		 Successful, latency: 1
	VPSHUFHWZ128rik(3(Class<VR128X>) -> 0(Class<VR128X>))  [1;1]
		 Successful, latency: 1

-----VPSHUFHWZ128rikz-----
	VPSHUFHWZ128rikz(2(Class<VR128X>) -> 0(Class<VR128X>))  [1.01;1.01]
		 Successful, latency: 1.01

-----VPSHUFHWZ256ri-----
	VPSHUFHWZ256ri(1(Class<VR256X>) -> 0(Class<VR256X>))  [0.999;0.999]
		 Successful, latency: 0.999

-----VPSHUFHWZ256rik-----
	VPSHUFHWZ256rik(1(Class<VR256X>) -> 0(Class<VR256X>))  [1;1]
		 Successful, latency: 1
	VPSHUFHWZ256rik(3(Class<VR256X>) -> 0(Class<VR256X>))  [1;1]
		 Successful, latency: 1

-----VPSHUFHWZ256rikz-----
	VPSHUFHWZ256rikz(2(Class<VR256X>) -> 0(Class<VR256X>))  [1.03;1.03]
		 Successful, latency: 1.03

-----VPSHUFHWZri-----
	VPSHUFHWZri(1(Class<VR512>) -> 0(Class<VR512>))  [1.15;1.15]
		 Successful, latency: 1.15

-----VPSHUFHWZrik-----
	VPSHUFHWZrik(1(Class<VR512>) -> 0(Class<VR512>))  [1.15;1.15]
		 Successful, latency: 1.15
	VPSHUFHWZrik(3(Class<VR512>) -> 0(Class<VR512>))  [1.15;1.15]
		 Successful, latency: 1.15

-----VPSHUFHWZrikz-----
	VPSHUFHWZrikz(2(Class<VR512>) -> 0(Class<VR512>))  [1.16;1.16]
		 Successful, latency: 1.16

-----VPSHUFHWri-----
	VPSHUFHWri(1(Class<VR128>) -> 0(Class<VR128>))  [1;1]
		 Successful, latency: 1

-----VPSHUFLWYri-----
	VPSHUFLWYri(1(Class<VR256>) -> 0(Class<VR256>))  [1;1]
		 Successful, latency: 1

-----VPSHUFLWZ128ri-----
	VPSHUFLWZ128ri(1(Class<VR128X>) -> 0(Class<VR128X>))  [1;1]
		 Successful, latency: 1

-----VPSHUFLWZ128rik-----
	VPSHUFLWZ128rik(1(Class<VR128X>) -> 0(Class<VR128X>))  [1.01;1.01]
		 Successful, latency: 1.01
	VPSHUFLWZ128rik(3(Class<VR128X>) -> 0(Class<VR128X>))  [1;1]
		 Successful, latency: 1

-----VPSHUFLWZ128rikz-----
	VPSHUFLWZ128rikz(2(Class<VR128X>) -> 0(Class<VR128X>))  [1;1]
		 Successful, latency: 1

-----VPSHUFLWZ256ri-----
	VPSHUFLWZ256ri(1(Class<VR256X>) -> 0(Class<VR256X>))  [1.01;1.01]
		 Successful, latency: 1.01

-----VPSHUFLWZ256rik-----
	VPSHUFLWZ256rik(1(Class<VR256X>) -> 0(Class<VR256X>))  [1;1]
		 Successful, latency: 1
	VPSHUFLWZ256rik(3(Class<VR256X>) -> 0(Class<VR256X>))  [1.03;1.03]
		 Successful, latency: 1.03

-----VPSHUFLWZ256rikz-----
	VPSHUFLWZ256rikz(2(Class<VR256X>) -> 0(Class<VR256X>))  [1.02;1.02]
		 Successful, latency: 1.02

-----VPSHUFLWZri-----
	VPSHUFLWZri(1(Class<VR512>) -> 0(Class<VR512>))  [1.17;1.17]
		 Successful, latency: 1.17

-----VPSHUFLWZrik-----
	VPSHUFLWZrik(1(Class<VR512>) -> 0(Class<VR512>))  [1.13;1.13]
		 Successful, latency: 1.13
	VPSHUFLWZrik(3(Class<VR512>) -> 0(Class<VR512>))  [1.15;1.15]
		 Successful, latency: 1.15

-----VPSHUFLWZrikz-----
	VPSHUFLWZrikz(2(Class<VR512>) -> 0(Class<VR512>))  [1.14;1.14]
		 Successful, latency: 1.14

-----VPSHUFLWri-----
	VPSHUFLWri(1(Class<VR128>) -> 0(Class<VR128>))  [1.02;1.02]
		 Successful, latency: 1.02

-----VPSIGNBYrr-----
	VPSIGNBYrr(1(Class<VR256>) -> 0(Class<VR256>))  [2.02;2.02]
		 Successful, latency: 2.02
	VPSIGNBYrr(2(Class<VR256>) -> 0(Class<VR256>))  [2.02;2.02]
		 Successful, latency: 2.02

-----VPSIGNBrr-----
	VPSIGNBrr(1(Class<VR128>) -> 0(Class<VR128>))  [2.02;2.02]
		 Successful, latency: 2.02
	VPSIGNBrr(2(Class<VR128>) -> 0(Class<VR128>))  [2.01;2.01]
		 Successful, latency: 2.01

-----VPSIGNDYrr-----
	VPSIGNDYrr(1(Class<VR256>) -> 0(Class<VR256>))  [2.03;2.03]
		 Successful, latency: 2.03
	VPSIGNDYrr(2(Class<VR256>) -> 0(Class<VR256>))  [2.02;2.02]
		 Successful, latency: 2.02

-----VPSIGNDrr-----
	VPSIGNDrr(1(Class<VR128>) -> 0(Class<VR128>))  [2.02;2.02]
		 Successful, latency: 2.02
	VPSIGNDrr(2(Class<VR128>) -> 0(Class<VR128>))  [2.02;2.02]
		 Successful, latency: 2.02

-----VPSIGNWYrr-----
	VPSIGNWYrr(1(Class<VR256>) -> 0(Class<VR256>))  [2.03;2.03]
		 Successful, latency: 2.03
	VPSIGNWYrr(2(Class<VR256>) -> 0(Class<VR256>))  [2.02;2.02]
		 Successful, latency: 2.02

-----VPSIGNWrr-----
	VPSIGNWrr(1(Class<VR128>) -> 0(Class<VR128>))  [2.02;2.02]
		 Successful, latency: 2.02
	VPSIGNWrr(2(Class<VR128>) -> 0(Class<VR128>))  [2.02;2.02]
		 Successful, latency: 2.02

-----VPSLLDQYri-----
	VPSLLDQYri(1(Class<VR256>) -> 0(Class<VR256>))  [2.03;2.03]
		 Successful, latency: 2.03

-----VPSLLDQZ128ri-----
	VPSLLDQZ128ri(1(Class<VR128X>) -> 0(Class<VR128X>))  [2.02;2.02]
		 Successful, latency: 2.02

-----VPSLLDQZ256ri-----
	VPSLLDQZ256ri(1(Class<VR256X>) -> 0(Class<VR256X>))  [2.04;2.04]
		 Successful, latency: 2.04

-----VPSLLDQZri-----
	VPSLLDQZri(1(Class<VR512>) -> 0(Class<VR512>))  [2.02;2.02]
		 Successful, latency: 2.02

-----VPSLLDQri-----
	VPSLLDQri(1(Class<VR128>) -> 0(Class<VR128>))  [2.01;2.01]
		 Successful, latency: 2.01

-----VPSLLDYri-----
	VPSLLDYri(1(Class<VR256>) -> 0(Class<VR256>))  [1;1]
		 Successful, latency: 1

-----VPSLLDYrr-----
	VPSLLDYrr(1(Class<VR256>) -> 0(Class<VR256>))  [2.02;2.02]
		 Successful, latency: 2.02
	VPSLLDYrr(2(Class<VR128>) -> 0(Class<VR256>))  [2.03;4.06]
		Dependencies:
			VEXTRACTF128rri(1(Class<VR256>) -> 0(Class<VR128>)) 
			VPBROADCASTWYrr(1(Class<VR128>) -> 0(Class<VR256>)) 
		Combined result: 5.07 cycles

-----VPSLLDZ128ri-----
	VPSLLDZ128ri(1(Class<VR128X>) -> 0(Class<VR128X>))  [1;1]
		 Successful, latency: 1

-----VPSLLDZ128rik-----
	VPSLLDZ128rik(1(Class<VR128X>) -> 0(Class<VR128X>))  [1.01;1.01]
		 Successful, latency: 1.01
	VPSLLDZ128rik(3(Class<VR128X>) -> 0(Class<VR128X>))  [1.02;1.02]
		 Successful, latency: 1.02

-----VPSLLDZ128rikz-----
	VPSLLDZ128rikz(2(Class<VR128X>) -> 0(Class<VR128X>))  [1.02;1.02]
		 Successful, latency: 1.02

-----VPSLLDZ128rr-----
	VPSLLDZ128rr(1(Class<VR128X>) -> 0(Class<VR128X>))  [2.02;2.02]
		 Successful, latency: 2.02
	VPSLLDZ128rr(2(Class<VR128X>) -> 0(Class<VR128X>))  [2.02;2.02]
		 Successful, latency: 2.02

-----VPSLLDZ128rrk-----
	VPSLLDZ128rrk(1(Class<VR128X>) -> 0(Class<VR128X>))  [2.01;2.01]
		 Successful, latency: 2.01
	VPSLLDZ128rrk(3(Class<VR128X>) -> 0(Class<VR128X>))  [2.04;2.04]
		 Successful, latency: 2.04
	VPSLLDZ128rrk(4(Class<VR128X>) -> 0(Class<VR128X>))  [2.02;2.02]
		 Successful, latency: 2.02

-----VPSLLDZ128rrkz-----
	VPSLLDZ128rrkz(2(Class<VR128X>) -> 0(Class<VR128X>))  [2.02;2.02]
		 Successful, latency: 2.02
	VPSLLDZ128rrkz(3(Class<VR128X>) -> 0(Class<VR128X>))  [2.02;2.02]
		 Successful, latency: 2.02

-----VPSLLDZ256ri-----
	VPSLLDZ256ri(1(Class<VR256X>) -> 0(Class<VR256X>))  [1.01;1.01]
		 Successful, latency: 1.01

-----VPSLLDZ256rik-----
	VPSLLDZ256rik(1(Class<VR256X>) -> 0(Class<VR256X>))  [1;1]
		 Successful, latency: 1
	VPSLLDZ256rik(3(Class<VR256X>) -> 0(Class<VR256X>))  [1.02;1.02]
		 Successful, latency: 1.02

-----VPSLLDZ256rikz-----
	VPSLLDZ256rikz(2(Class<VR256X>) -> 0(Class<VR256X>))  [1;1]
		 Successful, latency: 1

-----VPSLLDZ256rr-----
	VPSLLDZ256rr(1(Class<VR256X>) -> 0(Class<VR256X>))  [2.02;2.02]
		 Successful, latency: 2.02
	VPSLLDZ256rr(2(Class<VR128X>) -> 0(Class<VR256X>))  [1.99;4.02]
		Dependencies:
			VEXTRACTI32X4Z256rrik(3(Class<VR256X>) -> 0(Class<VR128X>)) 
			VBROADCASTF32X2Z256rr(1(Class<VR128X>) -> 0(Class<VR256X>)) 
		Combined result: 5.04 cycles

-----VPSLLDZ256rrk-----
	VPSLLDZ256rrk(1(Class<VR256X>) -> 0(Class<VR256X>))  [2.02;2.02]
		 Successful, latency: 2.02
	VPSLLDZ256rrk(3(Class<VR256X>) -> 0(Class<VR256X>))  [2.01;2.01]
		 Successful, latency: 2.01
	VPSLLDZ256rrk(4(Class<VR128X>) -> 0(Class<VR256X>))  [2;4.02]
		Dependencies:
			VEXTRACTI32X4Z256rrik(3(Class<VR256X>) -> 0(Class<VR128X>)) 
			VBROADCASTF32X2Z256rr(1(Class<VR128X>) -> 0(Class<VR256X>)) 
		Combined result: 5.04 cycles

-----VPSLLDZ256rrkz-----
	VPSLLDZ256rrkz(2(Class<VR256X>) -> 0(Class<VR256X>))  [2.03;2.03]
		 Successful, latency: 2.03
	VPSLLDZ256rrkz(3(Class<VR128X>) -> 0(Class<VR256X>))  [2.01;4.03]
		Dependencies:
			VEXTRACTI32X4Z256rrik(3(Class<VR256X>) -> 0(Class<VR128X>)) 
			VBROADCASTF32X2Z256rr(1(Class<VR128X>) -> 0(Class<VR256X>)) 
		Combined result: 5.05 cycles

-----VPSLLDZri-----
	VPSLLDZri(1(Class<VR512>) -> 0(Class<VR512>))  [1.01;1.01]
		 Successful, latency: 1.01

-----VPSLLDZrik-----
	VPSLLDZrik(1(Class<VR512>) -> 0(Class<VR512>))  [1;1]
		 Successful, latency: 1
	VPSLLDZrik(3(Class<VR512>) -> 0(Class<VR512>))  [1.01;1.01]
		 Successful, latency: 1.01

-----VPSLLDZrikz-----
	VPSLLDZrikz(2(Class<VR512>) -> 0(Class<VR512>))  [1.02;1.02]
		 Successful, latency: 1.02

-----VPSLLDZrr-----
	VPSLLDZrr(1(Class<VR512>) -> 0(Class<VR512>))  [2.02;2.02]
		 Successful, latency: 2.02
	VPSLLDZrr(2(Class<VR128X>) -> 0(Class<VR512>))  [2;5.03]
		Dependencies:
			VEXTRACTF64X2Zrri(1(Class<VR512>) -> 0(Class<VR128X>)) 
			VINSERTF32X4Zrri(2(Class<VR128X>) -> 0(Class<VR512>)) 
		Combined result: 6.05 cycles

-----VPSLLDZrrk-----
	VPSLLDZrrk(1(Class<VR512>) -> 0(Class<VR512>))  [2.02;2.02]
		 Successful, latency: 2.02
	VPSLLDZrrk(3(Class<VR512>) -> 0(Class<VR512>))  [2.02;2.02]
		 Successful, latency: 2.02
	VPSLLDZrrk(4(Class<VR128X>) -> 0(Class<VR512>))  [2.02;5.04]
		Dependencies:
			VEXTRACTF64X2Zrri(1(Class<VR512>) -> 0(Class<VR128X>)) 
			VINSERTF32X4Zrri(2(Class<VR128X>) -> 0(Class<VR512>)) 
		Combined result: 6.07 cycles

-----VPSLLDZrrkz-----
	VPSLLDZrrkz(2(Class<VR512>) -> 0(Class<VR512>))  [2.02;2.02]
		 Successful, latency: 2.02
	VPSLLDZrrkz(3(Class<VR128X>) -> 0(Class<VR512>))  [1.99;5.01]
		Dependencies:
			VEXTRACTF64X2Zrri(1(Class<VR512>) -> 0(Class<VR128X>)) 
			VINSERTF32X4Zrri(2(Class<VR128X>) -> 0(Class<VR512>)) 
		Combined result: 6.04 cycles

-----VPSLLDri-----
	VPSLLDri(1(Class<VR128>) -> 0(Class<VR128>))  [1.01;1.01]
		 Successful, latency: 1.01

-----VPSLLDrr-----
	VPSLLDrr(1(Class<VR128>) -> 0(Class<VR128>))  [2.02;2.02]
		 Successful, latency: 2.02
	VPSLLDrr(2(Class<VR128>) -> 0(Class<VR128>))  [2.02;2.02]
		 Successful, latency: 2.02

-----VPSLLQYri-----
	VPSLLQYri(1(Class<VR256>) -> 0(Class<VR256>))  [1;1]
		 Successful, latency: 1

-----VPSLLQYrr-----
	VPSLLQYrr(1(Class<VR256>) -> 0(Class<VR256>))  [2.02;2.02]
		 Successful, latency: 2.02
	VPSLLQYrr(2(Class<VR128>) -> 0(Class<VR256>))  [1.98;4.01]
		Dependencies:
			VEXTRACTF128rri(1(Class<VR256>) -> 0(Class<VR128>)) 
			VPBROADCASTWYrr(1(Class<VR128>) -> 0(Class<VR256>)) 
		Combined result: 5.03 cycles

-----VPSLLQZ128ri-----
	VPSLLQZ128ri(1(Class<VR128X>) -> 0(Class<VR128X>))  [1.02;1.02]
		 Successful, latency: 1.02

-----VPSLLQZ128rik-----
	VPSLLQZ128rik(1(Class<VR128X>) -> 0(Class<VR128X>))  [1.01;1.01]
		 Successful, latency: 1.01
	VPSLLQZ128rik(3(Class<VR128X>) -> 0(Class<VR128X>))  [1.01;1.01]
		 Successful, latency: 1.01

-----VPSLLQZ128rikz-----
	VPSLLQZ128rikz(2(Class<VR128X>) -> 0(Class<VR128X>))  [1;1]
		 Successful, latency: 1

-----VPSLLQZ128rr-----
	VPSLLQZ128rr(1(Class<VR128X>) -> 0(Class<VR128X>))  [2.01;2.01]
		 Successful, latency: 2.01
	VPSLLQZ128rr(2(Class<VR128X>) -> 0(Class<VR128X>))  [2.02;2.02]
		 Successful, latency: 2.02

-----VPSLLQZ128rrk-----
	VPSLLQZ128rrk(1(Class<VR128X>) -> 0(Class<VR128X>))  [2.01;2.01]
		 Successful, latency: 2.01
	VPSLLQZ128rrk(3(Class<VR128X>) -> 0(Class<VR128X>))  [2.04;2.04]
		 Successful, latency: 2.04
	VPSLLQZ128rrk(4(Class<VR128X>) -> 0(Class<VR128X>))  [2.03;2.03]
		 Successful, latency: 2.03

-----VPSLLQZ128rrkz-----
	VPSLLQZ128rrkz(2(Class<VR128X>) -> 0(Class<VR128X>))  [2.02;2.02]
		 Successful, latency: 2.02
	VPSLLQZ128rrkz(3(Class<VR128X>) -> 0(Class<VR128X>))  [2.02;2.02]
		 Successful, latency: 2.02

-----VPSLLQZ256ri-----
	VPSLLQZ256ri(1(Class<VR256X>) -> 0(Class<VR256X>))  [1;1]
		 Successful, latency: 1

-----VPSLLQZ256rik-----
	VPSLLQZ256rik(1(Class<VR256X>) -> 0(Class<VR256X>))  [1.01;1.01]
		 Successful, latency: 1.01
	VPSLLQZ256rik(3(Class<VR256X>) -> 0(Class<VR256X>))  [1.01;1.01]
		 Successful, latency: 1.01

-----VPSLLQZ256rikz-----
	VPSLLQZ256rikz(2(Class<VR256X>) -> 0(Class<VR256X>))  [1;1]
		 Successful, latency: 1

-----VPSLLQZ256rr-----
	VPSLLQZ256rr(1(Class<VR256X>) -> 0(Class<VR256X>))  [2.02;2.02]
		 Successful, latency: 2.02
	VPSLLQZ256rr(2(Class<VR128X>) -> 0(Class<VR256X>))  [1.99;4.01]
		Dependencies:
			VEXTRACTI32X4Z256rrik(3(Class<VR256X>) -> 0(Class<VR128X>)) 
			VBROADCASTF32X2Z256rr(1(Class<VR128X>) -> 0(Class<VR256X>)) 
		Combined result: 5.03 cycles

-----VPSLLQZ256rrk-----
	VPSLLQZ256rrk(1(Class<VR256X>) -> 0(Class<VR256X>))  [2.02;2.02]
		 Successful, latency: 2.02
	VPSLLQZ256rrk(3(Class<VR256X>) -> 0(Class<VR256X>))  [2.01;2.01]
		 Successful, latency: 2.01
	VPSLLQZ256rrk(4(Class<VR128X>) -> 0(Class<VR256X>))  [2;4.02]
		Dependencies:
			VEXTRACTI32X4Z256rrik(3(Class<VR256X>) -> 0(Class<VR128X>)) 
			VBROADCASTF32X2Z256rr(1(Class<VR128X>) -> 0(Class<VR256X>)) 
		Combined result: 5.04 cycles

-----VPSLLQZ256rrkz-----
	VPSLLQZ256rrkz(2(Class<VR256X>) -> 0(Class<VR256X>))  [2.02;2.02]
		 Successful, latency: 2.02
	VPSLLQZ256rrkz(3(Class<VR128X>) -> 0(Class<VR256X>))  [2.01;4.03]
		Dependencies:
			VEXTRACTI32X4Z256rrik(3(Class<VR256X>) -> 0(Class<VR128X>)) 
			VBROADCASTF32X2Z256rr(1(Class<VR128X>) -> 0(Class<VR256X>)) 
		Combined result: 5.05 cycles

-----VPSLLQZri-----
	VPSLLQZri(1(Class<VR512>) -> 0(Class<VR512>))  [1;1]
		 Successful, latency: 1

-----VPSLLQZrik-----
	VPSLLQZrik(1(Class<VR512>) -> 0(Class<VR512>))  [0.996;0.996]
		 Successful, latency: 0.996
	VPSLLQZrik(3(Class<VR512>) -> 0(Class<VR512>))  [1;1]
		 Successful, latency: 1

-----VPSLLQZrikz-----
	VPSLLQZrikz(2(Class<VR512>) -> 0(Class<VR512>))  [1.02;1.02]
		 Successful, latency: 1.02

-----VPSLLQZrr-----
	VPSLLQZrr(1(Class<VR512>) -> 0(Class<VR512>))  [2.02;2.02]
		 Successful, latency: 2.02
	VPSLLQZrr(2(Class<VR128X>) -> 0(Class<VR512>))  [2;5.02]
		Dependencies:
			VEXTRACTF64X2Zrri(1(Class<VR512>) -> 0(Class<VR128X>)) 
			VINSERTF32X4Zrri(2(Class<VR128X>) -> 0(Class<VR512>)) 
		Combined result: 6.05 cycles

-----VPSLLQZrrk-----
	VPSLLQZrrk(1(Class<VR512>) -> 0(Class<VR512>))  [2.02;2.02]
		 Successful, latency: 2.02
	VPSLLQZrrk(3(Class<VR512>) -> 0(Class<VR512>))  [2.02;2.02]
		 Successful, latency: 2.02
	VPSLLQZrrk(4(Class<VR128X>) -> 0(Class<VR512>))  [2.02;5.05]
		Dependencies:
			VEXTRACTF64X2Zrri(1(Class<VR512>) -> 0(Class<VR128X>)) 
			VINSERTF32X4Zrri(2(Class<VR128X>) -> 0(Class<VR512>)) 
		Combined result: 6.07 cycles

-----VPSLLQZrrkz-----
	VPSLLQZrrkz(2(Class<VR512>) -> 0(Class<VR512>))  [2.02;2.02]
		 Successful, latency: 2.02
	VPSLLQZrrkz(3(Class<VR128X>) -> 0(Class<VR512>))  [2;5.02]
		Dependencies:
			VEXTRACTF64X2Zrri(1(Class<VR512>) -> 0(Class<VR128X>)) 
			VINSERTF32X4Zrri(2(Class<VR128X>) -> 0(Class<VR512>)) 
		Combined result: 6.05 cycles

-----VPSLLQri-----
	VPSLLQri(1(Class<VR128>) -> 0(Class<VR128>))  [1.01;1.01]
		 Successful, latency: 1.01

-----VPSLLQrr-----
	VPSLLQrr(1(Class<VR128>) -> 0(Class<VR128>))  [2.02;2.02]
		 Successful, latency: 2.02
	VPSLLQrr(2(Class<VR128>) -> 0(Class<VR128>))  [2.02;2.02]
		 Successful, latency: 2.02

-----VPSLLVDYrr-----
	VPSLLVDYrr(1(Class<VR256>) -> 0(Class<VR256>))  [1.02;1.02]
		 Successful, latency: 1.02
	VPSLLVDYrr(2(Class<VR256>) -> 0(Class<VR256>))  [1.01;1.01]
		 Successful, latency: 1.01

-----VPSLLVDZ128rr-----
	VPSLLVDZ128rr(1(Class<VR128X>) -> 0(Class<VR128X>))  [1;1]
		 Successful, latency: 1
	VPSLLVDZ128rr(2(Class<VR128X>) -> 0(Class<VR128X>))  [1.02;1.02]
		 Successful, latency: 1.02

-----VPSLLVDZ128rrk-----
	VPSLLVDZ128rrk(1(Class<VR128X>) -> 0(Class<VR128X>))  [1.01;1.01]
		 Successful, latency: 1.01
	VPSLLVDZ128rrk(3(Class<VR128X>) -> 0(Class<VR128X>))  [1.01;1.01]
		 Successful, latency: 1.01
	VPSLLVDZ128rrk(4(Class<VR128X>) -> 0(Class<VR128X>))  [0.998;0.998]
		 Successful, latency: 0.998

-----VPSLLVDZ128rrkz-----
	VPSLLVDZ128rrkz(2(Class<VR128X>) -> 0(Class<VR128X>))  [1.01;1.01]
		 Successful, latency: 1.01
	VPSLLVDZ128rrkz(3(Class<VR128X>) -> 0(Class<VR128X>))  [1.01;1.01]
		 Successful, latency: 1.01

-----VPSLLVDZ256rr-----
	VPSLLVDZ256rr(1(Class<VR256X>) -> 0(Class<VR256X>))  [1;1]
		 Successful, latency: 1
	VPSLLVDZ256rr(2(Class<VR256X>) -> 0(Class<VR256X>))  [1.01;1.01]
		 Successful, latency: 1.01

-----VPSLLVDZ256rrk-----
	VPSLLVDZ256rrk(1(Class<VR256X>) -> 0(Class<VR256X>))  [1.01;1.01]
		 Successful, latency: 1.01
	VPSLLVDZ256rrk(3(Class<VR256X>) -> 0(Class<VR256X>))  [1.01;1.01]
		 Successful, latency: 1.01
	VPSLLVDZ256rrk(4(Class<VR256X>) -> 0(Class<VR256X>))  [0.999;0.999]
		 Successful, latency: 0.999

-----VPSLLVDZ256rrkz-----
	VPSLLVDZ256rrkz(2(Class<VR256X>) -> 0(Class<VR256X>))  [1.01;1.01]
		 Successful, latency: 1.01
	VPSLLVDZ256rrkz(3(Class<VR256X>) -> 0(Class<VR256X>))  [1.01;1.01]
		 Successful, latency: 1.01

-----VPSLLVDZrr-----
	VPSLLVDZrr(1(Class<VR512>) -> 0(Class<VR512>))  [1.02;1.02]
		 Successful, latency: 1.02
	VPSLLVDZrr(2(Class<VR512>) -> 0(Class<VR512>))  [1.01;1.01]
		 Successful, latency: 1.01

-----VPSLLVDZrrk-----
	VPSLLVDZrrk(1(Class<VR512>) -> 0(Class<VR512>))  [1.01;1.01]
		 Successful, latency: 1.01
	VPSLLVDZrrk(3(Class<VR512>) -> 0(Class<VR512>))  [1.02;1.02]
		 Successful, latency: 1.02
	VPSLLVDZrrk(4(Class<VR512>) -> 0(Class<VR512>))  [1;1]
		 Successful, latency: 1

-----VPSLLVDZrrkz-----
	VPSLLVDZrrkz(2(Class<VR512>) -> 0(Class<VR512>))  [1.01;1.01]
		 Successful, latency: 1.01
	VPSLLVDZrrkz(3(Class<VR512>) -> 0(Class<VR512>))  [1.01;1.01]
		 Successful, latency: 1.01

-----VPSLLVDrr-----
	VPSLLVDrr(1(Class<VR128>) -> 0(Class<VR128>))  [1.01;1.01]
		 Successful, latency: 1.01
	VPSLLVDrr(2(Class<VR128>) -> 0(Class<VR128>))  [1.02;1.02]
		 Successful, latency: 1.02

-----VPSLLVQYrr-----
	VPSLLVQYrr(1(Class<VR256>) -> 0(Class<VR256>))  [1;1]
		 Successful, latency: 1
	VPSLLVQYrr(2(Class<VR256>) -> 0(Class<VR256>))  [1.01;1.01]
		 Successful, latency: 1.01

-----VPSLLVQZ128rr-----
	VPSLLVQZ128rr(1(Class<VR128X>) -> 0(Class<VR128X>))  [1;1]
		 Successful, latency: 1
	VPSLLVQZ128rr(2(Class<VR128X>) -> 0(Class<VR128X>))  [1;1]
		 Successful, latency: 1

-----VPSLLVQZ128rrk-----
	VPSLLVQZ128rrk(1(Class<VR128X>) -> 0(Class<VR128X>))  [1.01;1.01]
		 Successful, latency: 1.01
	VPSLLVQZ128rrk(3(Class<VR128X>) -> 0(Class<VR128X>))  [1;1]
		 Successful, latency: 1
	VPSLLVQZ128rrk(4(Class<VR128X>) -> 0(Class<VR128X>))  [1.02;1.02]
		 Successful, latency: 1.02

-----VPSLLVQZ128rrkz-----
	VPSLLVQZ128rrkz(2(Class<VR128X>) -> 0(Class<VR128X>))  [1;1]
		 Successful, latency: 1
	VPSLLVQZ128rrkz(3(Class<VR128X>) -> 0(Class<VR128X>))  [1.01;1.01]
		 Successful, latency: 1.01

-----VPSLLVQZ256rr-----
	VPSLLVQZ256rr(1(Class<VR256X>) -> 0(Class<VR256X>))  [1.01;1.01]
		 Successful, latency: 1.01
	VPSLLVQZ256rr(2(Class<VR256X>) -> 0(Class<VR256X>))  [1.01;1.01]
		 Successful, latency: 1.01

-----VPSLLVQZ256rrk-----
	VPSLLVQZ256rrk(1(Class<VR256X>) -> 0(Class<VR256X>))  [1;1]
		 Successful, latency: 1
	VPSLLVQZ256rrk(3(Class<VR256X>) -> 0(Class<VR256X>))  [0.996;0.996]
		 Successful, latency: 0.996
	VPSLLVQZ256rrk(4(Class<VR256X>) -> 0(Class<VR256X>))  [1.01;1.01]
		 Successful, latency: 1.01

-----VPSLLVQZ256rrkz-----
	VPSLLVQZ256rrkz(2(Class<VR256X>) -> 0(Class<VR256X>))  [1.02;1.02]
		 Successful, latency: 1.02
	VPSLLVQZ256rrkz(3(Class<VR256X>) -> 0(Class<VR256X>))  [1.02;1.02]
		 Successful, latency: 1.02

-----VPSLLVQZrr-----
	VPSLLVQZrr(1(Class<VR512>) -> 0(Class<VR512>))  [1;1]
		 Successful, latency: 1
	VPSLLVQZrr(2(Class<VR512>) -> 0(Class<VR512>))  [1;1]
		 Successful, latency: 1

-----VPSLLVQZrrk-----
	VPSLLVQZrrk(1(Class<VR512>) -> 0(Class<VR512>))  [1;1]
		 Successful, latency: 1
	VPSLLVQZrrk(3(Class<VR512>) -> 0(Class<VR512>))  [1.01;1.01]
		 Successful, latency: 1.01
	VPSLLVQZrrk(4(Class<VR512>) -> 0(Class<VR512>))  [1.01;1.01]
		 Successful, latency: 1.01

-----VPSLLVQZrrkz-----
	VPSLLVQZrrkz(2(Class<VR512>) -> 0(Class<VR512>))  [1.01;1.01]
		 Successful, latency: 1.01
	VPSLLVQZrrkz(3(Class<VR512>) -> 0(Class<VR512>))  [1.01;1.01]
		 Successful, latency: 1.01

-----VPSLLVQrr-----
	VPSLLVQrr(1(Class<VR128>) -> 0(Class<VR128>))  [1;1]
		 Successful, latency: 1
	VPSLLVQrr(2(Class<VR128>) -> 0(Class<VR128>))  [1.02;1.02]
		 Successful, latency: 1.02

-----VPSLLVWZ128rr-----
	VPSLLVWZ128rr(1(Class<VR128X>) -> 0(Class<VR128X>))  [0.998;0.998]
		 Successful, latency: 0.998
	VPSLLVWZ128rr(2(Class<VR128X>) -> 0(Class<VR128X>))  [1;1]
		 Successful, latency: 1

-----VPSLLVWZ128rrk-----
	VPSLLVWZ128rrk(1(Class<VR128X>) -> 0(Class<VR128X>))  [1.02;1.02]
		 Successful, latency: 1.02
	VPSLLVWZ128rrk(3(Class<VR128X>) -> 0(Class<VR128X>))  [1;1]
		 Successful, latency: 1
	VPSLLVWZ128rrk(4(Class<VR128X>) -> 0(Class<VR128X>))  [1;1]
		 Successful, latency: 1

-----VPSLLVWZ128rrkz-----
	VPSLLVWZ128rrkz(2(Class<VR128X>) -> 0(Class<VR128X>))  [1.02;1.02]
		 Successful, latency: 1.02
	VPSLLVWZ128rrkz(3(Class<VR128X>) -> 0(Class<VR128X>))  [1;1]
		 Successful, latency: 1

-----VPSLLVWZ256rr-----
	VPSLLVWZ256rr(1(Class<VR256X>) -> 0(Class<VR256X>))  [1.01;1.01]
		 Successful, latency: 1.01
	VPSLLVWZ256rr(2(Class<VR256X>) -> 0(Class<VR256X>))  [1.01;1.01]
		 Successful, latency: 1.01

-----VPSLLVWZ256rrk-----
	VPSLLVWZ256rrk(1(Class<VR256X>) -> 0(Class<VR256X>))  [1;1]
		 Successful, latency: 1
	VPSLLVWZ256rrk(3(Class<VR256X>) -> 0(Class<VR256X>))  [1;1]
		 Successful, latency: 1
	VPSLLVWZ256rrk(4(Class<VR256X>) -> 0(Class<VR256X>))  [1.01;1.01]
		 Successful, latency: 1.01

-----VPSLLVWZ256rrkz-----
	VPSLLVWZ256rrkz(2(Class<VR256X>) -> 0(Class<VR256X>))  [1;1]
		 Successful, latency: 1
	VPSLLVWZ256rrkz(3(Class<VR256X>) -> 0(Class<VR256X>))  [1.01;1.01]
		 Successful, latency: 1.01

-----VPSLLVWZrr-----
	VPSLLVWZrr(1(Class<VR512>) -> 0(Class<VR512>))  [1.02;1.02]
		 Successful, latency: 1.02
	VPSLLVWZrr(2(Class<VR512>) -> 0(Class<VR512>))  [1.01;1.01]
		 Successful, latency: 1.01

-----VPSLLVWZrrk-----
	VPSLLVWZrrk(1(Class<VR512>) -> 0(Class<VR512>))  [0.996;0.996]
		 Successful, latency: 0.996
	VPSLLVWZrrk(3(Class<VR512>) -> 0(Class<VR512>))  [1.01;1.01]
		 Successful, latency: 1.01
	VPSLLVWZrrk(4(Class<VR512>) -> 0(Class<VR512>))  [1;1]
		 Successful, latency: 1

-----VPSLLVWZrrkz-----
	VPSLLVWZrrkz(2(Class<VR512>) -> 0(Class<VR512>))  [1;1]
		 Successful, latency: 1
	VPSLLVWZrrkz(3(Class<VR512>) -> 0(Class<VR512>))  [1.02;1.02]
		 Successful, latency: 1.02

-----VPSLLWYri-----
	VPSLLWYri(1(Class<VR256>) -> 0(Class<VR256>))  [1.01;1.01]
		 Successful, latency: 1.01

-----VPSLLWYrr-----
	VPSLLWYrr(1(Class<VR256>) -> 0(Class<VR256>))  [2.01;2.01]
		 Successful, latency: 2.01
	VPSLLWYrr(2(Class<VR128>) -> 0(Class<VR256>))  [1.99;4.02]
		Dependencies:
			VEXTRACTF128rri(1(Class<VR256>) -> 0(Class<VR128>)) 
			VPBROADCASTWYrr(1(Class<VR128>) -> 0(Class<VR256>)) 
		Combined result: 5.03 cycles

-----VPSLLWZ128ri-----
	VPSLLWZ128ri(1(Class<VR128X>) -> 0(Class<VR128X>))  [1.01;1.01]
		 Successful, latency: 1.01

-----VPSLLWZ128rik-----
	VPSLLWZ128rik(1(Class<VR128X>) -> 0(Class<VR128X>))  [1.01;1.01]
		 Successful, latency: 1.01
	VPSLLWZ128rik(3(Class<VR128X>) -> 0(Class<VR128X>))  [1;1]
		 Successful, latency: 1

-----VPSLLWZ128rikz-----
	VPSLLWZ128rikz(2(Class<VR128X>) -> 0(Class<VR128X>))  [1.01;1.01]
		 Successful, latency: 1.01

-----VPSLLWZ128rr-----
	VPSLLWZ128rr(1(Class<VR128X>) -> 0(Class<VR128X>))  [2.03;2.03]
		 Successful, latency: 2.03
	VPSLLWZ128rr(2(Class<VR128X>) -> 0(Class<VR128X>))  [2.02;2.02]
		 Successful, latency: 2.02

-----VPSLLWZ128rrk-----
	VPSLLWZ128rrk(1(Class<VR128X>) -> 0(Class<VR128X>))  [2.02;2.02]
		 Successful, latency: 2.02
	VPSLLWZ128rrk(3(Class<VR128X>) -> 0(Class<VR128X>))  [2.01;2.01]
		 Successful, latency: 2.01
	VPSLLWZ128rrk(4(Class<VR128X>) -> 0(Class<VR128X>))  [2.01;2.01]
		 Successful, latency: 2.01

-----VPSLLWZ128rrkz-----
	VPSLLWZ128rrkz(2(Class<VR128X>) -> 0(Class<VR128X>))  [2.02;2.02]
		 Successful, latency: 2.02
	VPSLLWZ128rrkz(3(Class<VR128X>) -> 0(Class<VR128X>))  [2.02;2.02]
		 Successful, latency: 2.02

-----VPSLLWZ256ri-----
	VPSLLWZ256ri(1(Class<VR256X>) -> 0(Class<VR256X>))  [1.01;1.01]
		 Successful, latency: 1.01

-----VPSLLWZ256rik-----
	VPSLLWZ256rik(1(Class<VR256X>) -> 0(Class<VR256X>))  [1.01;1.01]
		 Successful, latency: 1.01
	VPSLLWZ256rik(3(Class<VR256X>) -> 0(Class<VR256X>))  [1.01;1.01]
		 Successful, latency: 1.01

-----VPSLLWZ256rikz-----
	VPSLLWZ256rikz(2(Class<VR256X>) -> 0(Class<VR256X>))  [1;1]
		 Successful, latency: 1

-----VPSLLWZ256rr-----
	VPSLLWZ256rr(1(Class<VR256X>) -> 0(Class<VR256X>))  [2.02;2.02]
		 Successful, latency: 2.02
	VPSLLWZ256rr(2(Class<VR128X>) -> 0(Class<VR256X>))  [1.99;4.01]
		Dependencies:
			VEXTRACTI32X4Z256rrik(3(Class<VR256X>) -> 0(Class<VR128X>)) 
			VBROADCASTF32X2Z256rr(1(Class<VR128X>) -> 0(Class<VR256X>)) 
		Combined result: 5.04 cycles

-----VPSLLWZ256rrk-----
	VPSLLWZ256rrk(1(Class<VR256X>) -> 0(Class<VR256X>))  [2.02;2.02]
		 Successful, latency: 2.02
	VPSLLWZ256rrk(3(Class<VR256X>) -> 0(Class<VR256X>))  [2.02;2.02]
		 Successful, latency: 2.02
	VPSLLWZ256rrk(4(Class<VR128X>) -> 0(Class<VR256X>))  [1.99;4.01]
		Dependencies:
			VEXTRACTI32X4Z256rrik(3(Class<VR256X>) -> 0(Class<VR128X>)) 
			VBROADCASTF32X2Z256rr(1(Class<VR128X>) -> 0(Class<VR256X>)) 
		Combined result: 5.03 cycles

-----VPSLLWZ256rrkz-----
	VPSLLWZ256rrkz(2(Class<VR256X>) -> 0(Class<VR256X>))  [2.02;2.02]
		 Successful, latency: 2.02
	VPSLLWZ256rrkz(3(Class<VR128X>) -> 0(Class<VR256X>))  [2.01;4.03]
		Dependencies:
			VEXTRACTI32X4Z256rrik(3(Class<VR256X>) -> 0(Class<VR128X>)) 
			VBROADCASTF32X2Z256rr(1(Class<VR128X>) -> 0(Class<VR256X>)) 
		Combined result: 5.05 cycles

-----VPSLLWZri-----
	VPSLLWZri(1(Class<VR512>) -> 0(Class<VR512>))  [1.02;1.02]
		 Successful, latency: 1.02

-----VPSLLWZrik-----
	VPSLLWZrik(1(Class<VR512>) -> 0(Class<VR512>))  [1.01;1.01]
		 Successful, latency: 1.01
	VPSLLWZrik(3(Class<VR512>) -> 0(Class<VR512>))  [0.998;0.998]
		 Successful, latency: 0.998

-----VPSLLWZrikz-----
	VPSLLWZrikz(2(Class<VR512>) -> 0(Class<VR512>))  [1;1]
		 Successful, latency: 1

-----VPSLLWZrr-----
	VPSLLWZrr(1(Class<VR512>) -> 0(Class<VR512>))  [2.02;2.02]
		 Successful, latency: 2.02
	VPSLLWZrr(2(Class<VR128X>) -> 0(Class<VR512>))  [2;5.02]
		Dependencies:
			VEXTRACTF64X2Zrri(1(Class<VR512>) -> 0(Class<VR128X>)) 
			VINSERTF32X4Zrri(2(Class<VR128X>) -> 0(Class<VR512>)) 
		Combined result: 6.04 cycles

-----VPSLLWZrrk-----
	VPSLLWZrrk(1(Class<VR512>) -> 0(Class<VR512>))  [2.02;2.02]
		 Successful, latency: 2.02
	VPSLLWZrrk(3(Class<VR512>) -> 0(Class<VR512>))  [2.02;2.02]
		 Successful, latency: 2.02
	VPSLLWZrrk(4(Class<VR128X>) -> 0(Class<VR512>))  [2;5.03]
		Dependencies:
			VEXTRACTF64X2Zrri(1(Class<VR512>) -> 0(Class<VR128X>)) 
			VINSERTF32X4Zrri(2(Class<VR128X>) -> 0(Class<VR512>)) 
		Combined result: 6.05 cycles

-----VPSLLWZrrkz-----
	VPSLLWZrrkz(2(Class<VR512>) -> 0(Class<VR512>))  [2.03;2.03]
		 Successful, latency: 2.03
	VPSLLWZrrkz(3(Class<VR128X>) -> 0(Class<VR512>))  [2;5.03]
		Dependencies:
			VEXTRACTF64X2Zrri(1(Class<VR512>) -> 0(Class<VR128X>)) 
			VINSERTF32X4Zrri(2(Class<VR128X>) -> 0(Class<VR512>)) 
		Combined result: 6.05 cycles

-----VPSLLWri-----
	VPSLLWri(1(Class<VR128>) -> 0(Class<VR128>))  [1;1]
		 Successful, latency: 1

-----VPSLLWrr-----
	VPSLLWrr(1(Class<VR128>) -> 0(Class<VR128>))  [2.02;2.02]
		 Successful, latency: 2.02
	VPSLLWrr(2(Class<VR128>) -> 0(Class<VR128>))  [2.02;2.02]
		 Successful, latency: 2.02

-----VPSRADYri-----
	VPSRADYri(1(Class<VR256>) -> 0(Class<VR256>))  [1;1]
		 Successful, latency: 1

-----VPSRADYrr-----
	VPSRADYrr(1(Class<VR256>) -> 0(Class<VR256>))  [2.01;2.01]
		 Successful, latency: 2.01
	VPSRADYrr(2(Class<VR128>) -> 0(Class<VR256>))  [2;4.04]
		Dependencies:
			VEXTRACTF128rri(1(Class<VR256>) -> 0(Class<VR128>)) 
			VPBROADCASTWYrr(1(Class<VR128>) -> 0(Class<VR256>)) 
		Combined result: 5.05 cycles

-----VPSRADZ128ri-----
	VPSRADZ128ri(1(Class<VR128X>) -> 0(Class<VR128X>))  [1.01;1.01]
		 Successful, latency: 1.01

-----VPSRADZ128rik-----
	VPSRADZ128rik(1(Class<VR128X>) -> 0(Class<VR128X>))  [1;1]
		 Successful, latency: 1
	VPSRADZ128rik(3(Class<VR128X>) -> 0(Class<VR128X>))  [1;1]
		 Successful, latency: 1

-----VPSRADZ128rikz-----
	VPSRADZ128rikz(2(Class<VR128X>) -> 0(Class<VR128X>))  [1.01;1.01]
		 Successful, latency: 1.01

-----VPSRADZ128rr-----
	VPSRADZ128rr(1(Class<VR128X>) -> 0(Class<VR128X>))  [2.02;2.02]
		 Successful, latency: 2.02
	VPSRADZ128rr(2(Class<VR128X>) -> 0(Class<VR128X>))  [2.01;2.01]
		 Successful, latency: 2.01

-----VPSRADZ128rrk-----
	VPSRADZ128rrk(1(Class<VR128X>) -> 0(Class<VR128X>))  [2.02;2.02]
		 Successful, latency: 2.02
	VPSRADZ128rrk(3(Class<VR128X>) -> 0(Class<VR128X>))  [2.02;2.02]
		 Successful, latency: 2.02
	VPSRADZ128rrk(4(Class<VR128X>) -> 0(Class<VR128X>))  [2.02;2.02]
		 Successful, latency: 2.02

-----VPSRADZ128rrkz-----
	VPSRADZ128rrkz(2(Class<VR128X>) -> 0(Class<VR128X>))  [2.03;2.03]
		 Successful, latency: 2.03
	VPSRADZ128rrkz(3(Class<VR128X>) -> 0(Class<VR128X>))  [2.02;2.02]
		 Successful, latency: 2.02

-----VPSRADZ256ri-----
	VPSRADZ256ri(1(Class<VR256X>) -> 0(Class<VR256X>))  [1.02;1.02]
		 Successful, latency: 1.02

-----VPSRADZ256rik-----
	VPSRADZ256rik(1(Class<VR256X>) -> 0(Class<VR256X>))  [1.01;1.01]
		 Successful, latency: 1.01
	VPSRADZ256rik(3(Class<VR256X>) -> 0(Class<VR256X>))  [1;1]
		 Successful, latency: 1

-----VPSRADZ256rikz-----
	VPSRADZ256rikz(2(Class<VR256X>) -> 0(Class<VR256X>))  [1.01;1.01]
		 Successful, latency: 1.01

-----VPSRADZ256rr-----
	VPSRADZ256rr(1(Class<VR256X>) -> 0(Class<VR256X>))  [2.02;2.02]
		 Successful, latency: 2.02
	VPSRADZ256rr(2(Class<VR128X>) -> 0(Class<VR256X>))  [2.04;4.06]
		Dependencies:
			VEXTRACTI32X4Z256rrik(3(Class<VR256X>) -> 0(Class<VR128X>)) 
			VBROADCASTF32X2Z256rr(1(Class<VR128X>) -> 0(Class<VR256X>)) 
		Combined result: 5.08 cycles

-----VPSRADZ256rrk-----
	VPSRADZ256rrk(1(Class<VR256X>) -> 0(Class<VR256X>))  [2.02;2.02]
		 Successful, latency: 2.02
	VPSRADZ256rrk(3(Class<VR256X>) -> 0(Class<VR256X>))  [2.02;2.02]
		 Successful, latency: 2.02
	VPSRADZ256rrk(4(Class<VR128X>) -> 0(Class<VR256X>))  [1.99;4.02]
		Dependencies:
			VEXTRACTI32X4Z256rrik(3(Class<VR256X>) -> 0(Class<VR128X>)) 
			VBROADCASTF32X2Z256rr(1(Class<VR128X>) -> 0(Class<VR256X>)) 
		Combined result: 5.04 cycles

-----VPSRADZ256rrkz-----
	VPSRADZ256rrkz(2(Class<VR256X>) -> 0(Class<VR256X>))  [2.02;2.02]
		 Successful, latency: 2.02
	VPSRADZ256rrkz(3(Class<VR128X>) -> 0(Class<VR256X>))  [1.99;4.01]
		Dependencies:
			VEXTRACTI32X4Z256rrik(3(Class<VR256X>) -> 0(Class<VR128X>)) 
			VBROADCASTF32X2Z256rr(1(Class<VR128X>) -> 0(Class<VR256X>)) 
		Combined result: 5.03 cycles

-----VPSRADZri-----
	VPSRADZri(1(Class<VR512>) -> 0(Class<VR512>))  [1.01;1.01]
		 Successful, latency: 1.01

-----VPSRADZrik-----
	VPSRADZrik(1(Class<VR512>) -> 0(Class<VR512>))  [1.01;1.01]
		 Successful, latency: 1.01
	VPSRADZrik(3(Class<VR512>) -> 0(Class<VR512>))  [1;1]
		 Successful, latency: 1

-----VPSRADZrikz-----
	VPSRADZrikz(2(Class<VR512>) -> 0(Class<VR512>))  [1.01;1.01]
		 Successful, latency: 1.01

-----VPSRADZrr-----
	VPSRADZrr(1(Class<VR512>) -> 0(Class<VR512>))  [2.01;2.01]
		 Successful, latency: 2.01
	VPSRADZrr(2(Class<VR128X>) -> 0(Class<VR512>))  [2.01;5.03]
		Dependencies:
			VEXTRACTF64X2Zrri(1(Class<VR512>) -> 0(Class<VR128X>)) 
			VINSERTF32X4Zrri(2(Class<VR128X>) -> 0(Class<VR512>)) 
		Combined result: 6.06 cycles

-----VPSRADZrrk-----
	VPSRADZrrk(1(Class<VR512>) -> 0(Class<VR512>))  [2.02;2.02]
		 Successful, latency: 2.02
	VPSRADZrrk(3(Class<VR512>) -> 0(Class<VR512>))  [2.02;2.02]
		 Successful, latency: 2.02
	VPSRADZrrk(4(Class<VR128X>) -> 0(Class<VR512>))  [1.98;5]
		Dependencies:
			VEXTRACTF64X2Zrri(1(Class<VR512>) -> 0(Class<VR128X>)) 
			VINSERTF32X4Zrri(2(Class<VR128X>) -> 0(Class<VR512>)) 
		Combined result: 6.03 cycles

-----VPSRADZrrkz-----
	VPSRADZrrkz(2(Class<VR512>) -> 0(Class<VR512>))  [2.02;2.02]
		 Successful, latency: 2.02
	VPSRADZrrkz(3(Class<VR128X>) -> 0(Class<VR512>))  [1.99;5.01]
		Dependencies:
			VEXTRACTF64X2Zrri(1(Class<VR512>) -> 0(Class<VR128X>)) 
			VINSERTF32X4Zrri(2(Class<VR128X>) -> 0(Class<VR512>)) 
		Combined result: 6.04 cycles

-----VPSRADri-----
	VPSRADri(1(Class<VR128>) -> 0(Class<VR128>))  [1.02;1.02]
		 Successful, latency: 1.02

-----VPSRADrr-----
	VPSRADrr(1(Class<VR128>) -> 0(Class<VR128>))  [2.02;2.02]
		 Successful, latency: 2.02
	VPSRADrr(2(Class<VR128>) -> 0(Class<VR128>))  [2.02;2.02]
		 Successful, latency: 2.02

-----VPSRAQZ128ri-----
	VPSRAQZ128ri(1(Class<VR128X>) -> 0(Class<VR128X>))  [1;1]
		 Successful, latency: 1

-----VPSRAQZ128rik-----
	VPSRAQZ128rik(1(Class<VR128X>) -> 0(Class<VR128X>))  [1;1]
		 Successful, latency: 1
	VPSRAQZ128rik(3(Class<VR128X>) -> 0(Class<VR128X>))  [1.02;1.02]
		 Successful, latency: 1.02

-----VPSRAQZ128rikz-----
	VPSRAQZ128rikz(2(Class<VR128X>) -> 0(Class<VR128X>))  [1.02;1.02]
		 Successful, latency: 1.02

-----VPSRAQZ128rr-----
	VPSRAQZ128rr(1(Class<VR128X>) -> 0(Class<VR128X>))  [2.02;2.02]
		 Successful, latency: 2.02
	VPSRAQZ128rr(2(Class<VR128X>) -> 0(Class<VR128X>))  [2.02;2.02]
		 Successful, latency: 2.02

-----VPSRAQZ128rrk-----
	VPSRAQZ128rrk(1(Class<VR128X>) -> 0(Class<VR128X>))  [2.02;2.02]
		 Successful, latency: 2.02
	VPSRAQZ128rrk(3(Class<VR128X>) -> 0(Class<VR128X>))  [2.03;2.03]
		 Successful, latency: 2.03
	VPSRAQZ128rrk(4(Class<VR128X>) -> 0(Class<VR128X>))  [2.03;2.03]
		 Successful, latency: 2.03

-----VPSRAQZ128rrkz-----
	VPSRAQZ128rrkz(2(Class<VR128X>) -> 0(Class<VR128X>))  [2.02;2.02]
		 Successful, latency: 2.02
	VPSRAQZ128rrkz(3(Class<VR128X>) -> 0(Class<VR128X>))  [2;2]
		 Successful, latency: 2

-----VPSRAQZ256ri-----
	VPSRAQZ256ri(1(Class<VR256X>) -> 0(Class<VR256X>))  [1.01;1.01]
		 Successful, latency: 1.01

-----VPSRAQZ256rik-----
	VPSRAQZ256rik(1(Class<VR256X>) -> 0(Class<VR256X>))  [1.01;1.01]
		 Successful, latency: 1.01
	VPSRAQZ256rik(3(Class<VR256X>) -> 0(Class<VR256X>))  [1;1]
		 Successful, latency: 1

-----VPSRAQZ256rikz-----
	VPSRAQZ256rikz(2(Class<VR256X>) -> 0(Class<VR256X>))  [1.02;1.02]
		 Successful, latency: 1.02

-----VPSRAQZ256rr-----
	VPSRAQZ256rr(1(Class<VR256X>) -> 0(Class<VR256X>))  [2.02;2.02]
		 Successful, latency: 2.02
	VPSRAQZ256rr(2(Class<VR128X>) -> 0(Class<VR256X>))  [1.98;4]
		Dependencies:
			VEXTRACTI32X4Z256rrik(3(Class<VR256X>) -> 0(Class<VR128X>)) 
			VBROADCASTF32X2Z256rr(1(Class<VR128X>) -> 0(Class<VR256X>)) 
		Combined result: 5.03 cycles

-----VPSRAQZ256rrk-----
	VPSRAQZ256rrk(1(Class<VR256X>) -> 0(Class<VR256X>))  [2.02;2.02]
		 Successful, latency: 2.02
	VPSRAQZ256rrk(3(Class<VR256X>) -> 0(Class<VR256X>))  [2.02;2.02]
		 Successful, latency: 2.02
	VPSRAQZ256rrk(4(Class<VR128X>) -> 0(Class<VR256X>))  [1.98;4]
		Dependencies:
			VEXTRACTI32X4Z256rrik(3(Class<VR256X>) -> 0(Class<VR128X>)) 
			VBROADCASTF32X2Z256rr(1(Class<VR128X>) -> 0(Class<VR256X>)) 
		Combined result: 5.03 cycles

-----VPSRAQZ256rrkz-----
	VPSRAQZ256rrkz(2(Class<VR256X>) -> 0(Class<VR256X>))  [2.02;2.02]
		 Successful, latency: 2.02
	VPSRAQZ256rrkz(3(Class<VR128X>) -> 0(Class<VR256X>))  [2.01;4.03]
		Dependencies:
			VEXTRACTI32X4Z256rrik(3(Class<VR256X>) -> 0(Class<VR128X>)) 
			VBROADCASTF32X2Z256rr(1(Class<VR128X>) -> 0(Class<VR256X>)) 
		Combined result: 5.05 cycles

-----VPSRAQZri-----
	VPSRAQZri(1(Class<VR512>) -> 0(Class<VR512>))  [1.01;1.01]
		 Successful, latency: 1.01

-----VPSRAQZrik-----
	VPSRAQZrik(1(Class<VR512>) -> 0(Class<VR512>))  [1.01;1.01]
		 Successful, latency: 1.01
	VPSRAQZrik(3(Class<VR512>) -> 0(Class<VR512>))  [1;1]
		 Successful, latency: 1

-----VPSRAQZrikz-----
	VPSRAQZrikz(2(Class<VR512>) -> 0(Class<VR512>))  [1;1]
		 Successful, latency: 1

-----VPSRAQZrr-----
	VPSRAQZrr(1(Class<VR512>) -> 0(Class<VR512>))  [2.03;2.03]
		 Successful, latency: 2.03
	VPSRAQZrr(2(Class<VR128X>) -> 0(Class<VR512>))  [1.99;5.01]
		Dependencies:
			VEXTRACTF64X2Zrri(1(Class<VR512>) -> 0(Class<VR128X>)) 
			VINSERTF32X4Zrri(2(Class<VR128X>) -> 0(Class<VR512>)) 
		Combined result: 6.04 cycles

-----VPSRAQZrrk-----
	VPSRAQZrrk(1(Class<VR512>) -> 0(Class<VR512>))  [2.02;2.02]
		 Successful, latency: 2.02
	VPSRAQZrrk(3(Class<VR512>) -> 0(Class<VR512>))  [2.01;2.01]
		 Successful, latency: 2.01
	VPSRAQZrrk(4(Class<VR128X>) -> 0(Class<VR512>))  [1.99;5.01]
		Dependencies:
			VEXTRACTF64X2Zrri(1(Class<VR512>) -> 0(Class<VR128X>)) 
			VINSERTF32X4Zrri(2(Class<VR128X>) -> 0(Class<VR512>)) 
		Combined result: 6.04 cycles

-----VPSRAQZrrkz-----
	VPSRAQZrrkz(2(Class<VR512>) -> 0(Class<VR512>))  [2.02;2.02]
		 Successful, latency: 2.02
	VPSRAQZrrkz(3(Class<VR128X>) -> 0(Class<VR512>))  [1.99;5.01]
		Dependencies:
			VEXTRACTF64X2Zrri(1(Class<VR512>) -> 0(Class<VR128X>)) 
			VINSERTF32X4Zrri(2(Class<VR128X>) -> 0(Class<VR512>)) 
		Combined result: 6.04 cycles

-----VPSRAVDYrr-----
	VPSRAVDYrr(1(Class<VR256>) -> 0(Class<VR256>))  [1.01;1.01]
		 Successful, latency: 1.01
	VPSRAVDYrr(2(Class<VR256>) -> 0(Class<VR256>))  [1.01;1.01]
		 Successful, latency: 1.01

-----VPSRAVDZ128rr-----
	VPSRAVDZ128rr(1(Class<VR128X>) -> 0(Class<VR128X>))  [1.01;1.01]
		 Successful, latency: 1.01
	VPSRAVDZ128rr(2(Class<VR128X>) -> 0(Class<VR128X>))  [1;1]
		 Successful, latency: 1

-----VPSRAVDZ128rrk-----
	VPSRAVDZ128rrk(1(Class<VR128X>) -> 0(Class<VR128X>))  [1;1]
		 Successful, latency: 1
	VPSRAVDZ128rrk(3(Class<VR128X>) -> 0(Class<VR128X>))  [1.01;1.01]
		 Successful, latency: 1.01
	VPSRAVDZ128rrk(4(Class<VR128X>) -> 0(Class<VR128X>))  [1;1]
		 Successful, latency: 1

-----VPSRAVDZ128rrkz-----
	VPSRAVDZ128rrkz(2(Class<VR128X>) -> 0(Class<VR128X>))  [1;1]
		 Successful, latency: 1
	VPSRAVDZ128rrkz(3(Class<VR128X>) -> 0(Class<VR128X>))  [1.01;1.01]
		 Successful, latency: 1.01

-----VPSRAVDZ256rr-----
	VPSRAVDZ256rr(1(Class<VR256X>) -> 0(Class<VR256X>))  [1.02;1.02]
		 Successful, latency: 1.02
	VPSRAVDZ256rr(2(Class<VR256X>) -> 0(Class<VR256X>))  [1.01;1.01]
		 Successful, latency: 1.01

-----VPSRAVDZ256rrk-----
	VPSRAVDZ256rrk(1(Class<VR256X>) -> 0(Class<VR256X>))  [1.01;1.01]
		 Successful, latency: 1.01
	VPSRAVDZ256rrk(3(Class<VR256X>) -> 0(Class<VR256X>))  [1;1]
		 Successful, latency: 1
	VPSRAVDZ256rrk(4(Class<VR256X>) -> 0(Class<VR256X>))  [1;1]
		 Successful, latency: 1

-----VPSRAVDZ256rrkz-----
	VPSRAVDZ256rrkz(2(Class<VR256X>) -> 0(Class<VR256X>))  [1.01;1.01]
		 Successful, latency: 1.01
	VPSRAVDZ256rrkz(3(Class<VR256X>) -> 0(Class<VR256X>))  [1.01;1.01]
		 Successful, latency: 1.01

-----VPSRAVDZrr-----
	VPSRAVDZrr(1(Class<VR512>) -> 0(Class<VR512>))  [1.02;1.02]
		 Successful, latency: 1.02
	VPSRAVDZrr(2(Class<VR512>) -> 0(Class<VR512>))  [1.02;1.02]
		 Successful, latency: 1.02

-----VPSRAVDZrrk-----
	VPSRAVDZrrk(1(Class<VR512>) -> 0(Class<VR512>))  [1.01;1.01]
		 Successful, latency: 1.01
	VPSRAVDZrrk(3(Class<VR512>) -> 0(Class<VR512>))  [1.01;1.01]
		 Successful, latency: 1.01
	VPSRAVDZrrk(4(Class<VR512>) -> 0(Class<VR512>))  [1.01;1.01]
		 Successful, latency: 1.01

-----VPSRAVDZrrkz-----
	VPSRAVDZrrkz(2(Class<VR512>) -> 0(Class<VR512>))  [1;1]
		 Successful, latency: 1
	VPSRAVDZrrkz(3(Class<VR512>) -> 0(Class<VR512>))  [1.01;1.01]
		 Successful, latency: 1.01

-----VPSRAVDrr-----
	VPSRAVDrr(1(Class<VR128>) -> 0(Class<VR128>))  [1;1]
		 Successful, latency: 1
	VPSRAVDrr(2(Class<VR128>) -> 0(Class<VR128>))  [1.02;1.02]
		 Successful, latency: 1.02

-----VPSRAVQZ128rr-----
	VPSRAVQZ128rr(1(Class<VR128X>) -> 0(Class<VR128X>))  [1.01;1.01]
		 Successful, latency: 1.01
	VPSRAVQZ128rr(2(Class<VR128X>) -> 0(Class<VR128X>))  [1.01;1.01]
		 Successful, latency: 1.01

-----VPSRAVQZ128rrk-----
	VPSRAVQZ128rrk(1(Class<VR128X>) -> 0(Class<VR128X>))  [1.01;1.01]
		 Successful, latency: 1.01
	VPSRAVQZ128rrk(3(Class<VR128X>) -> 0(Class<VR128X>))  [1.01;1.01]
		 Successful, latency: 1.01
	VPSRAVQZ128rrk(4(Class<VR128X>) -> 0(Class<VR128X>))  [1.01;1.01]
		 Successful, latency: 1.01

-----VPSRAVQZ128rrkz-----
	VPSRAVQZ128rrkz(2(Class<VR128X>) -> 0(Class<VR128X>))  [1.01;1.01]
		 Successful, latency: 1.01
	VPSRAVQZ128rrkz(3(Class<VR128X>) -> 0(Class<VR128X>))  [1;1]
		 Successful, latency: 1

-----VPSRAVQZ256rr-----
	VPSRAVQZ256rr(1(Class<VR256X>) -> 0(Class<VR256X>))  [1.01;1.01]
		 Successful, latency: 1.01
	VPSRAVQZ256rr(2(Class<VR256X>) -> 0(Class<VR256X>))  [1.01;1.01]
		 Successful, latency: 1.01

-----VPSRAVQZ256rrk-----
	VPSRAVQZ256rrk(1(Class<VR256X>) -> 0(Class<VR256X>))  [1.01;1.01]
		 Successful, latency: 1.01
	VPSRAVQZ256rrk(3(Class<VR256X>) -> 0(Class<VR256X>))  [1.01;1.01]
		 Successful, latency: 1.01
	VPSRAVQZ256rrk(4(Class<VR256X>) -> 0(Class<VR256X>))  [1.01;1.01]
		 Successful, latency: 1.01

-----VPSRAVQZ256rrkz-----
	VPSRAVQZ256rrkz(2(Class<VR256X>) -> 0(Class<VR256X>))  [1.01;1.01]
		 Successful, latency: 1.01
	VPSRAVQZ256rrkz(3(Class<VR256X>) -> 0(Class<VR256X>))  [1.01;1.01]
		 Successful, latency: 1.01

-----VPSRAVQZrr-----
	VPSRAVQZrr(1(Class<VR512>) -> 0(Class<VR512>))  [1;1]
		 Successful, latency: 1
	VPSRAVQZrr(2(Class<VR512>) -> 0(Class<VR512>))  [1;1]
		 Successful, latency: 1

-----VPSRAVQZrrk-----
	VPSRAVQZrrk(1(Class<VR512>) -> 0(Class<VR512>))  [0.998;0.998]
		 Successful, latency: 0.998
	VPSRAVQZrrk(3(Class<VR512>) -> 0(Class<VR512>))  [1;1]
		 Successful, latency: 1
	VPSRAVQZrrk(4(Class<VR512>) -> 0(Class<VR512>))  [1.01;1.01]
		 Successful, latency: 1.01

-----VPSRAVQZrrkz-----
	VPSRAVQZrrkz(2(Class<VR512>) -> 0(Class<VR512>))  [1.02;1.02]
		 Successful, latency: 1.02
	VPSRAVQZrrkz(3(Class<VR512>) -> 0(Class<VR512>))  [1.01;1.01]
		 Successful, latency: 1.01

-----VPSRAVWZ128rr-----
	VPSRAVWZ128rr(1(Class<VR128X>) -> 0(Class<VR128X>))  [1.01;1.01]
		 Successful, latency: 1.01
	VPSRAVWZ128rr(2(Class<VR128X>) -> 0(Class<VR128X>))  [1.02;1.02]
		 Successful, latency: 1.02

-----VPSRAVWZ128rrk-----
	VPSRAVWZ128rrk(1(Class<VR128X>) -> 0(Class<VR128X>))  [1.01;1.01]
		 Successful, latency: 1.01
	VPSRAVWZ128rrk(3(Class<VR128X>) -> 0(Class<VR128X>))  [1.01;1.01]
		 Successful, latency: 1.01
	VPSRAVWZ128rrk(4(Class<VR128X>) -> 0(Class<VR128X>))  [1.01;1.01]
		 Successful, latency: 1.01

-----VPSRAVWZ128rrkz-----
	VPSRAVWZ128rrkz(2(Class<VR128X>) -> 0(Class<VR128X>))  [0.999;0.999]
		 Successful, latency: 0.999
	VPSRAVWZ128rrkz(3(Class<VR128X>) -> 0(Class<VR128X>))  [1;1]
		 Successful, latency: 1

-----VPSRAVWZ256rr-----
	VPSRAVWZ256rr(1(Class<VR256X>) -> 0(Class<VR256X>))  [1.01;1.01]
		 Successful, latency: 1.01
	VPSRAVWZ256rr(2(Class<VR256X>) -> 0(Class<VR256X>))  [1.01;1.01]
		 Successful, latency: 1.01

-----VPSRAVWZ256rrk-----
	VPSRAVWZ256rrk(1(Class<VR256X>) -> 0(Class<VR256X>))  [1.01;1.01]
		 Successful, latency: 1.01
	VPSRAVWZ256rrk(3(Class<VR256X>) -> 0(Class<VR256X>))  [1;1]
		 Successful, latency: 1
	VPSRAVWZ256rrk(4(Class<VR256X>) -> 0(Class<VR256X>))  [1.01;1.01]
		 Successful, latency: 1.01

-----VPSRAVWZ256rrkz-----
	VPSRAVWZ256rrkz(2(Class<VR256X>) -> 0(Class<VR256X>))  [1.01;1.01]
		 Successful, latency: 1.01
	VPSRAVWZ256rrkz(3(Class<VR256X>) -> 0(Class<VR256X>))  [1.01;1.01]
		 Successful, latency: 1.01

-----VPSRAVWZrr-----
	VPSRAVWZrr(1(Class<VR512>) -> 0(Class<VR512>))  [1.01;1.01]
		 Successful, latency: 1.01
	VPSRAVWZrr(2(Class<VR512>) -> 0(Class<VR512>))  [1.01;1.01]
		 Successful, latency: 1.01

-----VPSRAVWZrrk-----
	VPSRAVWZrrk(1(Class<VR512>) -> 0(Class<VR512>))  [1.01;1.01]
		 Successful, latency: 1.01
	VPSRAVWZrrk(3(Class<VR512>) -> 0(Class<VR512>))  [1.01;1.01]
		 Successful, latency: 1.01
	VPSRAVWZrrk(4(Class<VR512>) -> 0(Class<VR512>))  [1;1]
		 Successful, latency: 1

-----VPSRAVWZrrkz-----
	VPSRAVWZrrkz(2(Class<VR512>) -> 0(Class<VR512>))  [1.01;1.01]
		 Successful, latency: 1.01
	VPSRAVWZrrkz(3(Class<VR512>) -> 0(Class<VR512>))  [1.01;1.01]
		 Successful, latency: 1.01

-----VPSRAWYri-----
	VPSRAWYri(1(Class<VR256>) -> 0(Class<VR256>))  [1.01;1.01]
		 Successful, latency: 1.01

-----VPSRAWYrr-----
	VPSRAWYrr(1(Class<VR256>) -> 0(Class<VR256>))  [2.02;2.02]
		 Successful, latency: 2.02
	VPSRAWYrr(2(Class<VR128>) -> 0(Class<VR256>))  [2;4.03]
		Dependencies:
			VEXTRACTF128rri(1(Class<VR256>) -> 0(Class<VR128>)) 
			VPBROADCASTWYrr(1(Class<VR128>) -> 0(Class<VR256>)) 
		Combined result: 5.04 cycles

-----VPSRAWZ128ri-----
	VPSRAWZ128ri(1(Class<VR128X>) -> 0(Class<VR128X>))  [1;1]
		 Successful, latency: 1

-----VPSRAWZ128rik-----
	VPSRAWZ128rik(1(Class<VR128X>) -> 0(Class<VR128X>))  [1.01;1.01]
		 Successful, latency: 1.01
	VPSRAWZ128rik(3(Class<VR128X>) -> 0(Class<VR128X>))  [1.02;1.02]
		 Successful, latency: 1.02

-----VPSRAWZ128rikz-----
	VPSRAWZ128rikz(2(Class<VR128X>) -> 0(Class<VR128X>))  [1.02;1.02]
		 Successful, latency: 1.02

-----VPSRAWZ128rr-----
	VPSRAWZ128rr(1(Class<VR128X>) -> 0(Class<VR128X>))  [2;2]
		 Successful, latency: 2
	VPSRAWZ128rr(2(Class<VR128X>) -> 0(Class<VR128X>))  [2.01;2.01]
		 Successful, latency: 2.01

-----VPSRAWZ128rrk-----
	VPSRAWZ128rrk(1(Class<VR128X>) -> 0(Class<VR128X>))  [2.02;2.02]
		 Successful, latency: 2.02
	VPSRAWZ128rrk(3(Class<VR128X>) -> 0(Class<VR128X>))  [2.02;2.02]
		 Successful, latency: 2.02
	VPSRAWZ128rrk(4(Class<VR128X>) -> 0(Class<VR128X>))  [2.02;2.02]
		 Successful, latency: 2.02

-----VPSRAWZ128rrkz-----
	VPSRAWZ128rrkz(2(Class<VR128X>) -> 0(Class<VR128X>))  [2.02;2.02]
		 Successful, latency: 2.02
	VPSRAWZ128rrkz(3(Class<VR128X>) -> 0(Class<VR128X>))  [2.02;2.02]
		 Successful, latency: 2.02

-----VPSRAWZ256ri-----
	VPSRAWZ256ri(1(Class<VR256X>) -> 0(Class<VR256X>))  [1.01;1.01]
		 Successful, latency: 1.01

-----VPSRAWZ256rik-----
	VPSRAWZ256rik(1(Class<VR256X>) -> 0(Class<VR256X>))  [1.01;1.01]
		 Successful, latency: 1.01
	VPSRAWZ256rik(3(Class<VR256X>) -> 0(Class<VR256X>))  [1.02;1.02]
		 Successful, latency: 1.02

-----VPSRAWZ256rikz-----
	VPSRAWZ256rikz(2(Class<VR256X>) -> 0(Class<VR256X>))  [1.01;1.01]
		 Successful, latency: 1.01

-----VPSRAWZ256rr-----
	VPSRAWZ256rr(1(Class<VR256X>) -> 0(Class<VR256X>))  [2.02;2.02]
		 Successful, latency: 2.02
	VPSRAWZ256rr(2(Class<VR128X>) -> 0(Class<VR256X>))  [2.02;4.04]
		Dependencies:
			VEXTRACTI32X4Z256rrik(3(Class<VR256X>) -> 0(Class<VR128X>)) 
			VBROADCASTF32X2Z256rr(1(Class<VR128X>) -> 0(Class<VR256X>)) 
		Combined result: 5.07 cycles

-----VPSRAWZ256rrk-----
	VPSRAWZ256rrk(1(Class<VR256X>) -> 0(Class<VR256X>))  [2.02;2.02]
		 Successful, latency: 2.02
	VPSRAWZ256rrk(3(Class<VR256X>) -> 0(Class<VR256X>))  [2.02;2.02]
		 Successful, latency: 2.02
	VPSRAWZ256rrk(4(Class<VR128X>) -> 0(Class<VR256X>))  [2;4.02]
		Dependencies:
			VEXTRACTI32X4Z256rrik(3(Class<VR256X>) -> 0(Class<VR128X>)) 
			VBROADCASTF32X2Z256rr(1(Class<VR128X>) -> 0(Class<VR256X>)) 
		Combined result: 5.04 cycles

-----VPSRAWZ256rrkz-----
	VPSRAWZ256rrkz(2(Class<VR256X>) -> 0(Class<VR256X>))  [2.02;2.02]
		 Successful, latency: 2.02
	VPSRAWZ256rrkz(3(Class<VR128X>) -> 0(Class<VR256X>))  [1.99;4.01]
		Dependencies:
			VEXTRACTI32X4Z256rrik(3(Class<VR256X>) -> 0(Class<VR128X>)) 
			VBROADCASTF32X2Z256rr(1(Class<VR128X>) -> 0(Class<VR256X>)) 
		Combined result: 5.03 cycles

-----VPSRAWZri-----
	VPSRAWZri(1(Class<VR512>) -> 0(Class<VR512>))  [1.01;1.01]
		 Successful, latency: 1.01

-----VPSRAWZrik-----
	VPSRAWZrik(1(Class<VR512>) -> 0(Class<VR512>))  [1;1]
		 Successful, latency: 1
	VPSRAWZrik(3(Class<VR512>) -> 0(Class<VR512>))  [1.01;1.01]
		 Successful, latency: 1.01

-----VPSRAWZrikz-----
	VPSRAWZrikz(2(Class<VR512>) -> 0(Class<VR512>))  [1.02;1.02]
		 Successful, latency: 1.02

-----VPSRAWZrr-----
	VPSRAWZrr(1(Class<VR512>) -> 0(Class<VR512>))  [2.02;2.02]
		 Successful, latency: 2.02
	VPSRAWZrr(2(Class<VR128X>) -> 0(Class<VR512>))  [2;5.02]
		Dependencies:
			VEXTRACTF64X2Zrri(1(Class<VR512>) -> 0(Class<VR128X>)) 
			VINSERTF32X4Zrri(2(Class<VR128X>) -> 0(Class<VR512>)) 
		Combined result: 6.05 cycles

-----VPSRAWZrrk-----
	VPSRAWZrrk(1(Class<VR512>) -> 0(Class<VR512>))  [2.02;2.02]
		 Successful, latency: 2.02
	VPSRAWZrrk(3(Class<VR512>) -> 0(Class<VR512>))  [2.02;2.02]
		 Successful, latency: 2.02
	VPSRAWZrrk(4(Class<VR128X>) -> 0(Class<VR512>))  [2;5.02]
		Dependencies:
			VEXTRACTF64X2Zrri(1(Class<VR512>) -> 0(Class<VR128X>)) 
			VINSERTF32X4Zrri(2(Class<VR128X>) -> 0(Class<VR512>)) 
		Combined result: 6.05 cycles

-----VPSRAWZrrkz-----
	VPSRAWZrrkz(2(Class<VR512>) -> 0(Class<VR512>))  [2.02;2.02]
		 Successful, latency: 2.02
	VPSRAWZrrkz(3(Class<VR128X>) -> 0(Class<VR512>))  [2.01;5.04]
		Dependencies:
			VEXTRACTF64X2Zrri(1(Class<VR512>) -> 0(Class<VR128X>)) 
			VINSERTF32X4Zrri(2(Class<VR128X>) -> 0(Class<VR512>)) 
		Combined result: 6.06 cycles

-----VPSRAWri-----
	VPSRAWri(1(Class<VR128>) -> 0(Class<VR128>))  [1.02;1.02]
		 Successful, latency: 1.02

-----VPSRAWrr-----
	VPSRAWrr(1(Class<VR128>) -> 0(Class<VR128>))  [2.01;2.01]
		 Successful, latency: 2.01
	VPSRAWrr(2(Class<VR128>) -> 0(Class<VR128>))  [2.03;2.03]
		 Successful, latency: 2.03

-----VPSRLDQYri-----
	VPSRLDQYri(1(Class<VR256>) -> 0(Class<VR256>))  [2.02;2.02]
		 Successful, latency: 2.02

-----VPSRLDQZ128ri-----
	VPSRLDQZ128ri(1(Class<VR128X>) -> 0(Class<VR128X>))  [2.02;2.02]
		 Successful, latency: 2.02

-----VPSRLDQZ256ri-----
	VPSRLDQZ256ri(1(Class<VR256X>) -> 0(Class<VR256X>))  [2.02;2.02]
		 Successful, latency: 2.02

-----VPSRLDQZri-----
	VPSRLDQZri(1(Class<VR512>) -> 0(Class<VR512>))  [2.03;2.03]
		 Successful, latency: 2.03

-----VPSRLDQri-----
	VPSRLDQri(1(Class<VR128>) -> 0(Class<VR128>))  [2;2]
		 Successful, latency: 2

-----VPSRLDYri-----
	VPSRLDYri(1(Class<VR256>) -> 0(Class<VR256>))  [1.01;1.01]
		 Successful, latency: 1.01

-----VPSRLDYrr-----
	VPSRLDYrr(1(Class<VR256>) -> 0(Class<VR256>))  [2.01;2.01]
		 Successful, latency: 2.01
	VPSRLDYrr(2(Class<VR128>) -> 0(Class<VR256>))  [2;4.04]
		Dependencies:
			VEXTRACTF128rri(1(Class<VR256>) -> 0(Class<VR128>)) 
			VPBROADCASTWYrr(1(Class<VR128>) -> 0(Class<VR256>)) 
		Combined result: 5.05 cycles

-----VPSRLDZ128ri-----
	VPSRLDZ128ri(1(Class<VR128X>) -> 0(Class<VR128X>))  [1;1]
		 Successful, latency: 1

-----VPSRLDZ128rik-----
	VPSRLDZ128rik(1(Class<VR128X>) -> 0(Class<VR128X>))  [1.01;1.01]
		 Successful, latency: 1.01
	VPSRLDZ128rik(3(Class<VR128X>) -> 0(Class<VR128X>))  [1.01;1.01]
		 Successful, latency: 1.01

-----VPSRLDZ128rikz-----
	VPSRLDZ128rikz(2(Class<VR128X>) -> 0(Class<VR128X>))  [1.01;1.01]
		 Successful, latency: 1.01

-----VPSRLDZ128rr-----
	VPSRLDZ128rr(1(Class<VR128X>) -> 0(Class<VR128X>))  [2.02;2.02]
		 Successful, latency: 2.02
	VPSRLDZ128rr(2(Class<VR128X>) -> 0(Class<VR128X>))  [2.02;2.02]
		 Successful, latency: 2.02

-----VPSRLDZ128rrk-----
	VPSRLDZ128rrk(1(Class<VR128X>) -> 0(Class<VR128X>))  [2.02;2.02]
		 Successful, latency: 2.02
	VPSRLDZ128rrk(3(Class<VR128X>) -> 0(Class<VR128X>))  [2.01;2.01]
		 Successful, latency: 2.01
	VPSRLDZ128rrk(4(Class<VR128X>) -> 0(Class<VR128X>))  [2.03;2.03]
		 Successful, latency: 2.03

-----VPSRLDZ128rrkz-----
	VPSRLDZ128rrkz(2(Class<VR128X>) -> 0(Class<VR128X>))  [2.02;2.02]
		 Successful, latency: 2.02
	VPSRLDZ128rrkz(3(Class<VR128X>) -> 0(Class<VR128X>))  [2.02;2.02]
		 Successful, latency: 2.02

-----VPSRLDZ256ri-----
	VPSRLDZ256ri(1(Class<VR256X>) -> 0(Class<VR256X>))  [1.02;1.02]
		 Successful, latency: 1.02

-----VPSRLDZ256rik-----
	VPSRLDZ256rik(1(Class<VR256X>) -> 0(Class<VR256X>))  [1.01;1.01]
		 Successful, latency: 1.01
	VPSRLDZ256rik(3(Class<VR256X>) -> 0(Class<VR256X>))  [1.01;1.01]
		 Successful, latency: 1.01

-----VPSRLDZ256rikz-----
	VPSRLDZ256rikz(2(Class<VR256X>) -> 0(Class<VR256X>))  [0.995;0.995]
		 Successful, latency: 0.995

-----VPSRLDZ256rr-----
	VPSRLDZ256rr(1(Class<VR256X>) -> 0(Class<VR256X>))  [2.02;2.02]
		 Successful, latency: 2.02
	VPSRLDZ256rr(2(Class<VR128X>) -> 0(Class<VR256X>))  [2.02;4.04]
		Dependencies:
			VEXTRACTI32X4Z256rrik(3(Class<VR256X>) -> 0(Class<VR128X>)) 
			VBROADCASTF32X2Z256rr(1(Class<VR128X>) -> 0(Class<VR256X>)) 
		Combined result: 5.06 cycles

-----VPSRLDZ256rrk-----
	VPSRLDZ256rrk(1(Class<VR256X>) -> 0(Class<VR256X>))  [2.03;2.03]
		 Successful, latency: 2.03
	VPSRLDZ256rrk(3(Class<VR256X>) -> 0(Class<VR256X>))  [2.02;2.02]
		 Successful, latency: 2.02
	VPSRLDZ256rrk(4(Class<VR128X>) -> 0(Class<VR256X>))  [2;4.02]
		Dependencies:
			VEXTRACTI32X4Z256rrik(3(Class<VR256X>) -> 0(Class<VR128X>)) 
			VBROADCASTF32X2Z256rr(1(Class<VR128X>) -> 0(Class<VR256X>)) 
		Combined result: 5.04 cycles

-----VPSRLDZ256rrkz-----
	VPSRLDZ256rrkz(2(Class<VR256X>) -> 0(Class<VR256X>))  [2.02;2.02]
		 Successful, latency: 2.02
	VPSRLDZ256rrkz(3(Class<VR128X>) -> 0(Class<VR256X>))  [2;4.02]
		Dependencies:
			VEXTRACTI32X4Z256rrik(3(Class<VR256X>) -> 0(Class<VR128X>)) 
			VBROADCASTF32X2Z256rr(1(Class<VR128X>) -> 0(Class<VR256X>)) 
		Combined result: 5.04 cycles

-----VPSRLDZri-----
	VPSRLDZri(1(Class<VR512>) -> 0(Class<VR512>))  [1.01;1.01]
		 Successful, latency: 1.01

-----VPSRLDZrik-----
	VPSRLDZrik(1(Class<VR512>) -> 0(Class<VR512>))  [1.01;1.01]
		 Successful, latency: 1.01
	VPSRLDZrik(3(Class<VR512>) -> 0(Class<VR512>))  [1.01;1.01]
		 Successful, latency: 1.01

-----VPSRLDZrikz-----
	VPSRLDZrikz(2(Class<VR512>) -> 0(Class<VR512>))  [1;1]
		 Successful, latency: 1

-----VPSRLDZrr-----
	VPSRLDZrr(1(Class<VR512>) -> 0(Class<VR512>))  [2.02;2.02]
		 Successful, latency: 2.02
	VPSRLDZrr(2(Class<VR128X>) -> 0(Class<VR512>))  [2;5.03]
		Dependencies:
			VEXTRACTF64X2Zrri(1(Class<VR512>) -> 0(Class<VR128X>)) 
			VINSERTF32X4Zrri(2(Class<VR128X>) -> 0(Class<VR512>)) 
		Combined result: 6.05 cycles

-----VPSRLDZrrk-----
	VPSRLDZrrk(1(Class<VR512>) -> 0(Class<VR512>))  [2.02;2.02]
		 Successful, latency: 2.02
	VPSRLDZrrk(3(Class<VR512>) -> 0(Class<VR512>))  [2.02;2.02]
		 Successful, latency: 2.02
	VPSRLDZrrk(4(Class<VR128X>) -> 0(Class<VR512>))  [1.99;5.01]
		Dependencies:
			VEXTRACTF64X2Zrri(1(Class<VR512>) -> 0(Class<VR128X>)) 
			VINSERTF32X4Zrri(2(Class<VR128X>) -> 0(Class<VR512>)) 
		Combined result: 6.04 cycles

-----VPSRLDZrrkz-----
	VPSRLDZrrkz(2(Class<VR512>) -> 0(Class<VR512>))  [2.02;2.02]
		 Successful, latency: 2.02
	VPSRLDZrrkz(3(Class<VR128X>) -> 0(Class<VR512>))  [2.02;5.04]
		Dependencies:
			VEXTRACTF64X2Zrri(1(Class<VR512>) -> 0(Class<VR128X>)) 
			VINSERTF32X4Zrri(2(Class<VR128X>) -> 0(Class<VR512>)) 
		Combined result: 6.07 cycles

-----VPSRLDri-----
	VPSRLDri(1(Class<VR128>) -> 0(Class<VR128>))  [1.01;1.01]
		 Successful, latency: 1.01

-----VPSRLDrr-----
	VPSRLDrr(1(Class<VR128>) -> 0(Class<VR128>))  [2.02;2.02]
		 Successful, latency: 2.02
	VPSRLDrr(2(Class<VR128>) -> 0(Class<VR128>))  [2.02;2.02]
		 Successful, latency: 2.02

-----VPSRLQYri-----
	VPSRLQYri(1(Class<VR256>) -> 0(Class<VR256>))  [1.01;1.01]
		 Successful, latency: 1.01

-----VPSRLQYrr-----
	VPSRLQYrr(1(Class<VR256>) -> 0(Class<VR256>))  [2.02;2.02]
		 Successful, latency: 2.02
	VPSRLQYrr(2(Class<VR128>) -> 0(Class<VR256>))  [2.01;4.04]
		Dependencies:
			VEXTRACTF128rri(1(Class<VR256>) -> 0(Class<VR128>)) 
			VPBROADCASTWYrr(1(Class<VR128>) -> 0(Class<VR256>)) 
		Combined result: 5.05 cycles

-----VPSRLQZ128ri-----
	VPSRLQZ128ri(1(Class<VR128X>) -> 0(Class<VR128X>))  [1;1]
		 Successful, latency: 1

-----VPSRLQZ128rik-----
	VPSRLQZ128rik(1(Class<VR128X>) -> 0(Class<VR128X>))  [1;1]
		 Successful, latency: 1
	VPSRLQZ128rik(3(Class<VR128X>) -> 0(Class<VR128X>))  [1;1]
		 Successful, latency: 1

-----VPSRLQZ128rikz-----
	VPSRLQZ128rikz(2(Class<VR128X>) -> 0(Class<VR128X>))  [0.999;0.999]
		 Successful, latency: 0.999

-----VPSRLQZ128rr-----
	VPSRLQZ128rr(1(Class<VR128X>) -> 0(Class<VR128X>))  [2.02;2.02]
		 Successful, latency: 2.02
	VPSRLQZ128rr(2(Class<VR128X>) -> 0(Class<VR128X>))  [2.02;2.02]
		 Successful, latency: 2.02

-----VPSRLQZ128rrk-----
	VPSRLQZ128rrk(1(Class<VR128X>) -> 0(Class<VR128X>))  [2.02;2.02]
		 Successful, latency: 2.02
	VPSRLQZ128rrk(3(Class<VR128X>) -> 0(Class<VR128X>))  [2.02;2.02]
		 Successful, latency: 2.02
	VPSRLQZ128rrk(4(Class<VR128X>) -> 0(Class<VR128X>))  [2.02;2.02]
		 Successful, latency: 2.02

-----VPSRLQZ128rrkz-----
	VPSRLQZ128rrkz(2(Class<VR128X>) -> 0(Class<VR128X>))  [2.02;2.02]
		 Successful, latency: 2.02
	VPSRLQZ128rrkz(3(Class<VR128X>) -> 0(Class<VR128X>))  [2.02;2.02]
		 Successful, latency: 2.02

-----VPSRLQZ256ri-----
	VPSRLQZ256ri(1(Class<VR256X>) -> 0(Class<VR256X>))  [1.01;1.01]
		 Successful, latency: 1.01

-----VPSRLQZ256rik-----
	VPSRLQZ256rik(1(Class<VR256X>) -> 0(Class<VR256X>))  [1;1]
		 Successful, latency: 1
	VPSRLQZ256rik(3(Class<VR256X>) -> 0(Class<VR256X>))  [1.01;1.01]
		 Successful, latency: 1.01

-----VPSRLQZ256rikz-----
	VPSRLQZ256rikz(2(Class<VR256X>) -> 0(Class<VR256X>))  [1.02;1.02]
		 Successful, latency: 1.02

-----VPSRLQZ256rr-----
	VPSRLQZ256rr(1(Class<VR256X>) -> 0(Class<VR256X>))  [2.02;2.02]
		 Successful, latency: 2.02
	VPSRLQZ256rr(2(Class<VR128X>) -> 0(Class<VR256X>))  [2.03;4.05]
		Dependencies:
			VEXTRACTI32X4Z256rrik(3(Class<VR256X>) -> 0(Class<VR128X>)) 
			VBROADCASTF32X2Z256rr(1(Class<VR128X>) -> 0(Class<VR256X>)) 
		Combined result: 5.07 cycles

-----VPSRLQZ256rrk-----
	VPSRLQZ256rrk(1(Class<VR256X>) -> 0(Class<VR256X>))  [2.03;2.03]
		 Successful, latency: 2.03
	VPSRLQZ256rrk(3(Class<VR256X>) -> 0(Class<VR256X>))  [2.05;2.05]
		 Successful, latency: 2.05
	VPSRLQZ256rrk(4(Class<VR128X>) -> 0(Class<VR256X>))  [2;4.02]
		Dependencies:
			VEXTRACTI32X4Z256rrik(3(Class<VR256X>) -> 0(Class<VR128X>)) 
			VBROADCASTF32X2Z256rr(1(Class<VR128X>) -> 0(Class<VR256X>)) 
		Combined result: 5.04 cycles

-----VPSRLQZ256rrkz-----
	VPSRLQZ256rrkz(2(Class<VR256X>) -> 0(Class<VR256X>))  [2.01;2.01]
		 Successful, latency: 2.01
	VPSRLQZ256rrkz(3(Class<VR128X>) -> 0(Class<VR256X>))  [2;4.02]
		Dependencies:
			VEXTRACTI32X4Z256rrik(3(Class<VR256X>) -> 0(Class<VR128X>)) 
			VBROADCASTF32X2Z256rr(1(Class<VR128X>) -> 0(Class<VR256X>)) 
		Combined result: 5.04 cycles

-----VPSRLQZri-----
	VPSRLQZri(1(Class<VR512>) -> 0(Class<VR512>))  [1.01;1.01]
		 Successful, latency: 1.01

-----VPSRLQZrik-----
	VPSRLQZrik(1(Class<VR512>) -> 0(Class<VR512>))  [0.998;0.998]
		 Successful, latency: 0.998
	VPSRLQZrik(3(Class<VR512>) -> 0(Class<VR512>))  [1.01;1.01]
		 Successful, latency: 1.01

-----VPSRLQZrikz-----
	VPSRLQZrikz(2(Class<VR512>) -> 0(Class<VR512>))  [1;1]
		 Successful, latency: 1

-----VPSRLQZrr-----
	VPSRLQZrr(1(Class<VR512>) -> 0(Class<VR512>))  [2.03;2.03]
		 Successful, latency: 2.03
	VPSRLQZrr(2(Class<VR128X>) -> 0(Class<VR512>))  [2;5.03]
		Dependencies:
			VEXTRACTF64X2Zrri(1(Class<VR512>) -> 0(Class<VR128X>)) 
			VINSERTF32X4Zrri(2(Class<VR128X>) -> 0(Class<VR512>)) 
		Combined result: 6.05 cycles

-----VPSRLQZrrk-----
	VPSRLQZrrk(1(Class<VR512>) -> 0(Class<VR512>))  [2.01;2.01]
		 Successful, latency: 2.01
	VPSRLQZrrk(3(Class<VR512>) -> 0(Class<VR512>))  [2.01;2.01]
		 Successful, latency: 2.01
	VPSRLQZrrk(4(Class<VR128X>) -> 0(Class<VR512>))  [2.01;5.04]
		Dependencies:
			VEXTRACTF64X2Zrri(1(Class<VR512>) -> 0(Class<VR128X>)) 
			VINSERTF32X4Zrri(2(Class<VR128X>) -> 0(Class<VR512>)) 
		Combined result: 6.06 cycles

-----VPSRLQZrrkz-----
	VPSRLQZrrkz(2(Class<VR512>) -> 0(Class<VR512>))  [2.02;2.02]
		 Successful, latency: 2.02
	VPSRLQZrrkz(3(Class<VR128X>) -> 0(Class<VR512>))  [2.01;5.03]
		Dependencies:
			VEXTRACTF64X2Zrri(1(Class<VR512>) -> 0(Class<VR128X>)) 
			VINSERTF32X4Zrri(2(Class<VR128X>) -> 0(Class<VR512>)) 
		Combined result: 6.06 cycles

-----VPSRLQri-----
	VPSRLQri(1(Class<VR128>) -> 0(Class<VR128>))  [1;1]
		 Successful, latency: 1

-----VPSRLQrr-----
	VPSRLQrr(1(Class<VR128>) -> 0(Class<VR128>))  [2.02;2.02]
		 Successful, latency: 2.02
	VPSRLQrr(2(Class<VR128>) -> 0(Class<VR128>))  [2.02;2.02]
		 Successful, latency: 2.02

-----VPSRLVDYrr-----
	VPSRLVDYrr(1(Class<VR256>) -> 0(Class<VR256>))  [1.01;1.01]
		 Successful, latency: 1.01
	VPSRLVDYrr(2(Class<VR256>) -> 0(Class<VR256>))  [1.01;1.01]
		 Successful, latency: 1.01

-----VPSRLVDZ128rr-----
	VPSRLVDZ128rr(1(Class<VR128X>) -> 0(Class<VR128X>))  [1.01;1.01]
		 Successful, latency: 1.01
	VPSRLVDZ128rr(2(Class<VR128X>) -> 0(Class<VR128X>))  [1;1]
		 Successful, latency: 1

-----VPSRLVDZ128rrk-----
	VPSRLVDZ128rrk(1(Class<VR128X>) -> 0(Class<VR128X>))  [1.01;1.01]
		 Successful, latency: 1.01
	VPSRLVDZ128rrk(3(Class<VR128X>) -> 0(Class<VR128X>))  [1.01;1.01]
		 Successful, latency: 1.01
	VPSRLVDZ128rrk(4(Class<VR128X>) -> 0(Class<VR128X>))  [1;1]
		 Successful, latency: 1

-----VPSRLVDZ128rrkz-----
	VPSRLVDZ128rrkz(2(Class<VR128X>) -> 0(Class<VR128X>))  [1.01;1.01]
		 Successful, latency: 1.01
	VPSRLVDZ128rrkz(3(Class<VR128X>) -> 0(Class<VR128X>))  [1.01;1.01]
		 Successful, latency: 1.01

-----VPSRLVDZ256rr-----
	VPSRLVDZ256rr(1(Class<VR256X>) -> 0(Class<VR256X>))  [1.01;1.01]
		 Successful, latency: 1.01
	VPSRLVDZ256rr(2(Class<VR256X>) -> 0(Class<VR256X>))  [1.01;1.01]
		 Successful, latency: 1.01

-----VPSRLVDZ256rrk-----
	VPSRLVDZ256rrk(1(Class<VR256X>) -> 0(Class<VR256X>))  [1;1]
		 Successful, latency: 1
	VPSRLVDZ256rrk(3(Class<VR256X>) -> 0(Class<VR256X>))  [1.01;1.01]
		 Successful, latency: 1.01
	VPSRLVDZ256rrk(4(Class<VR256X>) -> 0(Class<VR256X>))  [1;1]
		 Successful, latency: 1

-----VPSRLVDZ256rrkz-----
	VPSRLVDZ256rrkz(2(Class<VR256X>) -> 0(Class<VR256X>))  [1.01;1.01]
		 Successful, latency: 1.01
	VPSRLVDZ256rrkz(3(Class<VR256X>) -> 0(Class<VR256X>))  [1.01;1.01]
		 Successful, latency: 1.01

-----VPSRLVDZrr-----
	VPSRLVDZrr(1(Class<VR512>) -> 0(Class<VR512>))  [1.01;1.01]
		 Successful, latency: 1.01
	VPSRLVDZrr(2(Class<VR512>) -> 0(Class<VR512>))  [1.02;1.02]
		 Successful, latency: 1.02

-----VPSRLVDZrrk-----
	VPSRLVDZrrk(1(Class<VR512>) -> 0(Class<VR512>))  [1;1]
		 Successful, latency: 1
	VPSRLVDZrrk(3(Class<VR512>) -> 0(Class<VR512>))  [1;1]
		 Successful, latency: 1
	VPSRLVDZrrk(4(Class<VR512>) -> 0(Class<VR512>))  [1.02;1.02]
		 Successful, latency: 1.02

-----VPSRLVDZrrkz-----
	VPSRLVDZrrkz(2(Class<VR512>) -> 0(Class<VR512>))  [1.01;1.01]
		 Successful, latency: 1.01
	VPSRLVDZrrkz(3(Class<VR512>) -> 0(Class<VR512>))  [0.998;0.998]
		 Successful, latency: 0.998

-----VPSRLVDrr-----
	VPSRLVDrr(1(Class<VR128>) -> 0(Class<VR128>))  [1.01;1.01]
		 Successful, latency: 1.01
	VPSRLVDrr(2(Class<VR128>) -> 0(Class<VR128>))  [1.01;1.01]
		 Successful, latency: 1.01

-----VPSRLVQYrr-----
	VPSRLVQYrr(1(Class<VR256>) -> 0(Class<VR256>))  [1;1]
		 Successful, latency: 1
	VPSRLVQYrr(2(Class<VR256>) -> 0(Class<VR256>))  [1.01;1.01]
		 Successful, latency: 1.01

-----VPSRLVQZ128rr-----
	VPSRLVQZ128rr(1(Class<VR128X>) -> 0(Class<VR128X>))  [1.01;1.01]
		 Successful, latency: 1.01
	VPSRLVQZ128rr(2(Class<VR128X>) -> 0(Class<VR128X>))  [0.999;0.999]
		 Successful, latency: 0.999

-----VPSRLVQZ128rrk-----
	VPSRLVQZ128rrk(1(Class<VR128X>) -> 0(Class<VR128X>))  [0.999;0.999]
		 Successful, latency: 0.999
	VPSRLVQZ128rrk(3(Class<VR128X>) -> 0(Class<VR128X>))  [1.01;1.01]
		 Successful, latency: 1.01
	VPSRLVQZ128rrk(4(Class<VR128X>) -> 0(Class<VR128X>))  [1.01;1.01]
		 Successful, latency: 1.01

-----VPSRLVQZ128rrkz-----
	VPSRLVQZ128rrkz(2(Class<VR128X>) -> 0(Class<VR128X>))  [1.01;1.01]
		 Successful, latency: 1.01
	VPSRLVQZ128rrkz(3(Class<VR128X>) -> 0(Class<VR128X>))  [1;1]
		 Successful, latency: 1

-----VPSRLVQZ256rr-----
	VPSRLVQZ256rr(1(Class<VR256X>) -> 0(Class<VR256X>))  [1;1]
		 Successful, latency: 1
	VPSRLVQZ256rr(2(Class<VR256X>) -> 0(Class<VR256X>))  [1;1]
		 Successful, latency: 1

-----VPSRLVQZ256rrk-----
	VPSRLVQZ256rrk(1(Class<VR256X>) -> 0(Class<VR256X>))  [1.01;1.01]
		 Successful, latency: 1.01
	VPSRLVQZ256rrk(3(Class<VR256X>) -> 0(Class<VR256X>))  [1.01;1.01]
		 Successful, latency: 1.01
	VPSRLVQZ256rrk(4(Class<VR256X>) -> 0(Class<VR256X>))  [1.01;1.01]
		 Successful, latency: 1.01

-----VPSRLVQZ256rrkz-----
	VPSRLVQZ256rrkz(2(Class<VR256X>) -> 0(Class<VR256X>))  [1.02;1.02]
		 Successful, latency: 1.02
	VPSRLVQZ256rrkz(3(Class<VR256X>) -> 0(Class<VR256X>))  [1;1]
		 Successful, latency: 1

-----VPSRLVQZrr-----
	VPSRLVQZrr(1(Class<VR512>) -> 0(Class<VR512>))  [1;1]
		 Successful, latency: 1
	VPSRLVQZrr(2(Class<VR512>) -> 0(Class<VR512>))  [1;1]
		 Successful, latency: 1

-----VPSRLVQZrrk-----
	VPSRLVQZrrk(1(Class<VR512>) -> 0(Class<VR512>))  [1.01;1.01]
		 Successful, latency: 1.01
	VPSRLVQZrrk(3(Class<VR512>) -> 0(Class<VR512>))  [1.01;1.01]
		 Successful, latency: 1.01
	VPSRLVQZrrk(4(Class<VR512>) -> 0(Class<VR512>))  [1.02;1.02]
		 Successful, latency: 1.02

-----VPSRLVQZrrkz-----
	VPSRLVQZrrkz(2(Class<VR512>) -> 0(Class<VR512>))  [1.02;1.02]
		 Successful, latency: 1.02
	VPSRLVQZrrkz(3(Class<VR512>) -> 0(Class<VR512>))  [1.02;1.02]
		 Successful, latency: 1.02

-----VPSRLVQrr-----
	VPSRLVQrr(1(Class<VR128>) -> 0(Class<VR128>))  [1.02;1.02]
		 Successful, latency: 1.02
	VPSRLVQrr(2(Class<VR128>) -> 0(Class<VR128>))  [1.02;1.02]
		 Successful, latency: 1.02

-----VPSRLVWZ128rr-----
	VPSRLVWZ128rr(1(Class<VR128X>) -> 0(Class<VR128X>))  [1.02;1.02]
		 Successful, latency: 1.02
	VPSRLVWZ128rr(2(Class<VR128X>) -> 0(Class<VR128X>))  [1.01;1.01]
		 Successful, latency: 1.01

-----VPSRLVWZ128rrk-----
	VPSRLVWZ128rrk(1(Class<VR128X>) -> 0(Class<VR128X>))  [1;1]
		 Successful, latency: 1
	VPSRLVWZ128rrk(3(Class<VR128X>) -> 0(Class<VR128X>))  [1.01;1.01]
		 Successful, latency: 1.01
	VPSRLVWZ128rrk(4(Class<VR128X>) -> 0(Class<VR128X>))  [1;1]
		 Successful, latency: 1

-----VPSRLVWZ128rrkz-----
	VPSRLVWZ128rrkz(2(Class<VR128X>) -> 0(Class<VR128X>))  [1.01;1.01]
		 Successful, latency: 1.01
	VPSRLVWZ128rrkz(3(Class<VR128X>) -> 0(Class<VR128X>))  [1.01;1.01]
		 Successful, latency: 1.01

-----VPSRLVWZ256rr-----
	VPSRLVWZ256rr(1(Class<VR256X>) -> 0(Class<VR256X>))  [1.01;1.01]
		 Successful, latency: 1.01
	VPSRLVWZ256rr(2(Class<VR256X>) -> 0(Class<VR256X>))  [1;1]
		 Successful, latency: 1

-----VPSRLVWZ256rrk-----
	VPSRLVWZ256rrk(1(Class<VR256X>) -> 0(Class<VR256X>))  [1;1]
		 Successful, latency: 1
	VPSRLVWZ256rrk(3(Class<VR256X>) -> 0(Class<VR256X>))  [1.01;1.01]
		 Successful, latency: 1.01
	VPSRLVWZ256rrk(4(Class<VR256X>) -> 0(Class<VR256X>))  [1.01;1.01]
		 Successful, latency: 1.01

-----VPSRLVWZ256rrkz-----
	VPSRLVWZ256rrkz(2(Class<VR256X>) -> 0(Class<VR256X>))  [1.01;1.01]
		 Successful, latency: 1.01
	VPSRLVWZ256rrkz(3(Class<VR256X>) -> 0(Class<VR256X>))  [1.01;1.01]
		 Successful, latency: 1.01

-----VPSRLVWZrr-----
	VPSRLVWZrr(1(Class<VR512>) -> 0(Class<VR512>))  [1.01;1.01]
		 Successful, latency: 1.01
	VPSRLVWZrr(2(Class<VR512>) -> 0(Class<VR512>))  [1;1]
		 Successful, latency: 1

-----VPSRLVWZrrk-----
	VPSRLVWZrrk(1(Class<VR512>) -> 0(Class<VR512>))  [1.01;1.01]
		 Successful, latency: 1.01
	VPSRLVWZrrk(3(Class<VR512>) -> 0(Class<VR512>))  [1;1]
		 Successful, latency: 1
	VPSRLVWZrrk(4(Class<VR512>) -> 0(Class<VR512>))  [1;1]
		 Successful, latency: 1

-----VPSRLVWZrrkz-----
	VPSRLVWZrrkz(2(Class<VR512>) -> 0(Class<VR512>))  [1;1]
		 Successful, latency: 1
	VPSRLVWZrrkz(3(Class<VR512>) -> 0(Class<VR512>))  [1.02;1.02]
		 Successful, latency: 1.02

-----VPSRLWYri-----
	VPSRLWYri(1(Class<VR256>) -> 0(Class<VR256>))  [1.02;1.02]
		 Successful, latency: 1.02

-----VPSRLWYrr-----
	VPSRLWYrr(1(Class<VR256>) -> 0(Class<VR256>))  [2.03;2.03]
		 Successful, latency: 2.03
	VPSRLWYrr(2(Class<VR128>) -> 0(Class<VR256>))  [1.99;4.02]
		Dependencies:
			VEXTRACTF128rri(1(Class<VR256>) -> 0(Class<VR128>)) 
			VPBROADCASTWYrr(1(Class<VR128>) -> 0(Class<VR256>)) 
		Combined result: 5.03 cycles

-----VPSRLWZ128ri-----
	VPSRLWZ128ri(1(Class<VR128X>) -> 0(Class<VR128X>))  [1.01;1.01]
		 Successful, latency: 1.01

-----VPSRLWZ128rik-----
	VPSRLWZ128rik(1(Class<VR128X>) -> 0(Class<VR128X>))  [1.01;1.01]
		 Successful, latency: 1.01
	VPSRLWZ128rik(3(Class<VR128X>) -> 0(Class<VR128X>))  [1.01;1.01]
		 Successful, latency: 1.01

-----VPSRLWZ128rikz-----
	VPSRLWZ128rikz(2(Class<VR128X>) -> 0(Class<VR128X>))  [1.01;1.01]
		 Successful, latency: 1.01

-----VPSRLWZ128rr-----
	VPSRLWZ128rr(1(Class<VR128X>) -> 0(Class<VR128X>))  [2.01;2.01]
		 Successful, latency: 2.01
	VPSRLWZ128rr(2(Class<VR128X>) -> 0(Class<VR128X>))  [2.05;2.05]
		 Successful, latency: 2.05

-----VPSRLWZ128rrk-----
	VPSRLWZ128rrk(1(Class<VR128X>) -> 0(Class<VR128X>))  [2.03;2.03]
		 Successful, latency: 2.03
	VPSRLWZ128rrk(3(Class<VR128X>) -> 0(Class<VR128X>))  [2.01;2.01]
		 Successful, latency: 2.01
	VPSRLWZ128rrk(4(Class<VR128X>) -> 0(Class<VR128X>))  [2.01;2.01]
		 Successful, latency: 2.01

-----VPSRLWZ128rrkz-----
	VPSRLWZ128rrkz(2(Class<VR128X>) -> 0(Class<VR128X>))  [2.02;2.02]
		 Successful, latency: 2.02
	VPSRLWZ128rrkz(3(Class<VR128X>) -> 0(Class<VR128X>))  [2.02;2.02]
		 Successful, latency: 2.02

-----VPSRLWZ256ri-----
	VPSRLWZ256ri(1(Class<VR256X>) -> 0(Class<VR256X>))  [0.999;0.999]
		 Successful, latency: 0.999

-----VPSRLWZ256rik-----
	VPSRLWZ256rik(1(Class<VR256X>) -> 0(Class<VR256X>))  [1.01;1.01]
		 Successful, latency: 1.01
	VPSRLWZ256rik(3(Class<VR256X>) -> 0(Class<VR256X>))  [1;1]
		 Successful, latency: 1

-----VPSRLWZ256rikz-----
	VPSRLWZ256rikz(2(Class<VR256X>) -> 0(Class<VR256X>))  [1.01;1.01]
		 Successful, latency: 1.01

-----VPSRLWZ256rr-----
	VPSRLWZ256rr(1(Class<VR256X>) -> 0(Class<VR256X>))  [2.02;2.02]
		 Successful, latency: 2.02
	VPSRLWZ256rr(2(Class<VR128X>) -> 0(Class<VR256X>))  [2.01;4.03]
		Dependencies:
			VEXTRACTI32X4Z256rrik(3(Class<VR256X>) -> 0(Class<VR128X>)) 
			VBROADCASTF32X2Z256rr(1(Class<VR128X>) -> 0(Class<VR256X>)) 
		Combined result: 5.05 cycles

-----VPSRLWZ256rrk-----
	VPSRLWZ256rrk(1(Class<VR256X>) -> 0(Class<VR256X>))  [2.02;2.02]
		 Successful, latency: 2.02
	VPSRLWZ256rrk(3(Class<VR256X>) -> 0(Class<VR256X>))  [2.02;2.02]
		 Successful, latency: 2.02
	VPSRLWZ256rrk(4(Class<VR128X>) -> 0(Class<VR256X>))  [1.99;4.01]
		Dependencies:
			VEXTRACTI32X4Z256rrik(3(Class<VR256X>) -> 0(Class<VR128X>)) 
			VBROADCASTF32X2Z256rr(1(Class<VR128X>) -> 0(Class<VR256X>)) 
		Combined result: 5.03 cycles

-----VPSRLWZ256rrkz-----
	VPSRLWZ256rrkz(2(Class<VR256X>) -> 0(Class<VR256X>))  [2.02;2.02]
		 Successful, latency: 2.02
	VPSRLWZ256rrkz(3(Class<VR128X>) -> 0(Class<VR256X>))  [2;4.02]
		Dependencies:
			VEXTRACTI32X4Z256rrik(3(Class<VR256X>) -> 0(Class<VR128X>)) 
			VBROADCASTF32X2Z256rr(1(Class<VR128X>) -> 0(Class<VR256X>)) 
		Combined result: 5.04 cycles

-----VPSRLWZri-----
	VPSRLWZri(1(Class<VR512>) -> 0(Class<VR512>))  [1.01;1.01]
		 Successful, latency: 1.01

-----VPSRLWZrik-----
	VPSRLWZrik(1(Class<VR512>) -> 0(Class<VR512>))  [1;1]
		 Successful, latency: 1
	VPSRLWZrik(3(Class<VR512>) -> 0(Class<VR512>))  [1.01;1.01]
		 Successful, latency: 1.01

-----VPSRLWZrikz-----
	VPSRLWZrikz(2(Class<VR512>) -> 0(Class<VR512>))  [1.01;1.01]
		 Successful, latency: 1.01

-----VPSRLWZrr-----
	VPSRLWZrr(1(Class<VR512>) -> 0(Class<VR512>))  [2.03;2.03]
		 Successful, latency: 2.03
	VPSRLWZrr(2(Class<VR128X>) -> 0(Class<VR512>))  [2;5.02]
		Dependencies:
			VEXTRACTF64X2Zrri(1(Class<VR512>) -> 0(Class<VR128X>)) 
			VINSERTF32X4Zrri(2(Class<VR128X>) -> 0(Class<VR512>)) 
		Combined result: 6.05 cycles

-----VPSRLWZrrk-----
	VPSRLWZrrk(1(Class<VR512>) -> 0(Class<VR512>))  [2.01;2.01]
		 Successful, latency: 2.01
	VPSRLWZrrk(3(Class<VR512>) -> 0(Class<VR512>))  [2.02;2.02]
		 Successful, latency: 2.02
	VPSRLWZrrk(4(Class<VR128X>) -> 0(Class<VR512>))  [1.99;5.02]
		Dependencies:
			VEXTRACTF64X2Zrri(1(Class<VR512>) -> 0(Class<VR128X>)) 
			VINSERTF32X4Zrri(2(Class<VR128X>) -> 0(Class<VR512>)) 
		Combined result: 6.04 cycles

-----VPSRLWZrrkz-----
	VPSRLWZrrkz(2(Class<VR512>) -> 0(Class<VR512>))  [2.02;2.02]
		 Successful, latency: 2.02
	VPSRLWZrrkz(3(Class<VR128X>) -> 0(Class<VR512>))  [2;5.02]
		Dependencies:
			VEXTRACTF64X2Zrri(1(Class<VR512>) -> 0(Class<VR128X>)) 
			VINSERTF32X4Zrri(2(Class<VR128X>) -> 0(Class<VR512>)) 
		Combined result: 6.05 cycles

-----VPSRLWri-----
	VPSRLWri(1(Class<VR128>) -> 0(Class<VR128>))  [1.01;1.01]
		 Successful, latency: 1.01

-----VPSRLWrr-----
	VPSRLWrr(1(Class<VR128>) -> 0(Class<VR128>))  [2.02;2.02]
		 Successful, latency: 2.02
	VPSRLWrr(2(Class<VR128>) -> 0(Class<VR128>))  [2.02;2.02]
		 Successful, latency: 2.02

-----VPSUBBYrr-----
	VPSUBBYrr(1(Class<VR256>) -> 0(Class<VR256>))  [0.999;0.999]
		 Successful, latency: 0.999
	VPSUBBYrr(2(Class<VR256>) -> 0(Class<VR256>))  [1;1]
		 Successful, latency: 1

-----VPSUBBZ128rr-----
	VPSUBBZ128rr(1(Class<VR128X>) -> 0(Class<VR128X>))  [1.01;1.01]
		 Successful, latency: 1.01
	VPSUBBZ128rr(2(Class<VR128X>) -> 0(Class<VR128X>))  [1;1]
		 Successful, latency: 1

-----VPSUBBZ128rrk-----
	VPSUBBZ128rrk(1(Class<VR128X>) -> 0(Class<VR128X>))  [1.01;1.01]
		 Successful, latency: 1.01
	VPSUBBZ128rrk(3(Class<VR128X>) -> 0(Class<VR128X>))  [1;1]
		 Successful, latency: 1
	VPSUBBZ128rrk(4(Class<VR128X>) -> 0(Class<VR128X>))  [1.02;1.02]
		 Successful, latency: 1.02

-----VPSUBBZ128rrkz-----
	VPSUBBZ128rrkz(2(Class<VR128X>) -> 0(Class<VR128X>))  [0.999;0.999]
		 Successful, latency: 0.999
	VPSUBBZ128rrkz(3(Class<VR128X>) -> 0(Class<VR128X>))  [0.998;0.998]
		 Successful, latency: 0.998

-----VPSUBBZ256rr-----
	VPSUBBZ256rr(1(Class<VR256X>) -> 0(Class<VR256X>))  [1;1]
		 Successful, latency: 1
	VPSUBBZ256rr(2(Class<VR256X>) -> 0(Class<VR256X>))  [1;1]
		 Successful, latency: 1

-----VPSUBBZ256rrk-----
	VPSUBBZ256rrk(1(Class<VR256X>) -> 0(Class<VR256X>))  [1;1]
		 Successful, latency: 1
	VPSUBBZ256rrk(3(Class<VR256X>) -> 0(Class<VR256X>))  [1;1]
		 Successful, latency: 1
	VPSUBBZ256rrk(4(Class<VR256X>) -> 0(Class<VR256X>))  [1.01;1.01]
		 Successful, latency: 1.01

-----VPSUBBZ256rrkz-----
	VPSUBBZ256rrkz(2(Class<VR256X>) -> 0(Class<VR256X>))  [1.01;1.01]
		 Successful, latency: 1.01
	VPSUBBZ256rrkz(3(Class<VR256X>) -> 0(Class<VR256X>))  [1;1]
		 Successful, latency: 1

-----VPSUBBZrr-----
	VPSUBBZrr(1(Class<VR512>) -> 0(Class<VR512>))  [1.01;1.01]
		 Successful, latency: 1.01
	VPSUBBZrr(2(Class<VR512>) -> 0(Class<VR512>))  [1.01;1.01]
		 Successful, latency: 1.01

-----VPSUBBZrrk-----
	VPSUBBZrrk(1(Class<VR512>) -> 0(Class<VR512>))  [1.02;1.02]
		 Successful, latency: 1.02
	VPSUBBZrrk(3(Class<VR512>) -> 0(Class<VR512>))  [1.01;1.01]
		 Successful, latency: 1.01
	VPSUBBZrrk(4(Class<VR512>) -> 0(Class<VR512>))  [1.01;1.01]
		 Successful, latency: 1.01

-----VPSUBBZrrkz-----
	VPSUBBZrrkz(2(Class<VR512>) -> 0(Class<VR512>))  [1.01;1.01]
		 Successful, latency: 1.01
	VPSUBBZrrkz(3(Class<VR512>) -> 0(Class<VR512>))  [1.01;1.01]
		 Successful, latency: 1.01

-----VPSUBBrr-----
	VPSUBBrr(1(Class<VR128>) -> 0(Class<VR128>))  [1;1]
		 Successful, latency: 1
	VPSUBBrr(2(Class<VR128>) -> 0(Class<VR128>))  [1;1]
		 Successful, latency: 1

-----VPSUBDYrr-----
	VPSUBDYrr(1(Class<VR256>) -> 0(Class<VR256>))  [1.01;1.01]
		 Successful, latency: 1.01
	VPSUBDYrr(2(Class<VR256>) -> 0(Class<VR256>))  [1.01;1.01]
		 Successful, latency: 1.01

-----VPSUBDZ128rr-----
	VPSUBDZ128rr(1(Class<VR128X>) -> 0(Class<VR128X>))  [1.01;1.01]
		 Successful, latency: 1.01
	VPSUBDZ128rr(2(Class<VR128X>) -> 0(Class<VR128X>))  [1.01;1.01]
		 Successful, latency: 1.01

-----VPSUBDZ128rrk-----
	VPSUBDZ128rrk(1(Class<VR128X>) -> 0(Class<VR128X>))  [1.02;1.02]
		 Successful, latency: 1.02
	VPSUBDZ128rrk(3(Class<VR128X>) -> 0(Class<VR128X>))  [1.01;1.01]
		 Successful, latency: 1.01
	VPSUBDZ128rrk(4(Class<VR128X>) -> 0(Class<VR128X>))  [1.01;1.01]
		 Successful, latency: 1.01

-----VPSUBDZ128rrkz-----
	VPSUBDZ128rrkz(2(Class<VR128X>) -> 0(Class<VR128X>))  [0.998;0.998]
		 Successful, latency: 0.998
	VPSUBDZ128rrkz(3(Class<VR128X>) -> 0(Class<VR128X>))  [1.01;1.01]
		 Successful, latency: 1.01

-----VPSUBDZ256rr-----
	VPSUBDZ256rr(1(Class<VR256X>) -> 0(Class<VR256X>))  [1.01;1.01]
		 Successful, latency: 1.01
	VPSUBDZ256rr(2(Class<VR256X>) -> 0(Class<VR256X>))  [1;1]
		 Successful, latency: 1

-----VPSUBDZ256rrk-----
	VPSUBDZ256rrk(1(Class<VR256X>) -> 0(Class<VR256X>))  [0.999;0.999]
		 Successful, latency: 0.999
	VPSUBDZ256rrk(3(Class<VR256X>) -> 0(Class<VR256X>))  [0.998;0.998]
		 Successful, latency: 0.998
	VPSUBDZ256rrk(4(Class<VR256X>) -> 0(Class<VR256X>))  [1.01;1.01]
		 Successful, latency: 1.01

-----VPSUBDZ256rrkz-----
	VPSUBDZ256rrkz(2(Class<VR256X>) -> 0(Class<VR256X>))  [1.01;1.01]
		 Successful, latency: 1.01
	VPSUBDZ256rrkz(3(Class<VR256X>) -> 0(Class<VR256X>))  [1;1]
		 Successful, latency: 1

-----VPSUBDZrr-----
	VPSUBDZrr(1(Class<VR512>) -> 0(Class<VR512>))  [1.02;1.02]
		 Successful, latency: 1.02
	VPSUBDZrr(2(Class<VR512>) -> 0(Class<VR512>))  [1.01;1.01]
		 Successful, latency: 1.01

-----VPSUBDZrrk-----
	VPSUBDZrrk(1(Class<VR512>) -> 0(Class<VR512>))  [1.01;1.01]
		 Successful, latency: 1.01
	VPSUBDZrrk(3(Class<VR512>) -> 0(Class<VR512>))  [1.01;1.01]
		 Successful, latency: 1.01
	VPSUBDZrrk(4(Class<VR512>) -> 0(Class<VR512>))  [1;1]
		 Successful, latency: 1

-----VPSUBDZrrkz-----
	VPSUBDZrrkz(2(Class<VR512>) -> 0(Class<VR512>))  [1;1]
		 Successful, latency: 1
	VPSUBDZrrkz(3(Class<VR512>) -> 0(Class<VR512>))  [1.01;1.01]
		 Successful, latency: 1.01

-----VPSUBDrr-----
	VPSUBDrr(1(Class<VR128>) -> 0(Class<VR128>))  [1;1]
		 Successful, latency: 1
	VPSUBDrr(2(Class<VR128>) -> 0(Class<VR128>))  [1.01;1.01]
		 Successful, latency: 1.01

-----VPSUBQYrr-----
	VPSUBQYrr(1(Class<VR256>) -> 0(Class<VR256>))  [1;1]
		 Successful, latency: 1
	VPSUBQYrr(2(Class<VR256>) -> 0(Class<VR256>))  [1.01;1.01]
		 Successful, latency: 1.01

-----VPSUBQZ128rr-----
	VPSUBQZ128rr(1(Class<VR128X>) -> 0(Class<VR128X>))  [1.01;1.01]
		 Successful, latency: 1.01
	VPSUBQZ128rr(2(Class<VR128X>) -> 0(Class<VR128X>))  [1.01;1.01]
		 Successful, latency: 1.01

-----VPSUBQZ128rrk-----
	VPSUBQZ128rrk(1(Class<VR128X>) -> 0(Class<VR128X>))  [1.01;1.01]
		 Successful, latency: 1.01
	VPSUBQZ128rrk(3(Class<VR128X>) -> 0(Class<VR128X>))  [1.01;1.01]
		 Successful, latency: 1.01
	VPSUBQZ128rrk(4(Class<VR128X>) -> 0(Class<VR128X>))  [1.02;1.02]
		 Successful, latency: 1.02

-----VPSUBQZ128rrkz-----
	VPSUBQZ128rrkz(2(Class<VR128X>) -> 0(Class<VR128X>))  [1.01;1.01]
		 Successful, latency: 1.01
	VPSUBQZ128rrkz(3(Class<VR128X>) -> 0(Class<VR128X>))  [1.01;1.01]
		 Successful, latency: 1.01

-----VPSUBQZ256rr-----
	VPSUBQZ256rr(1(Class<VR256X>) -> 0(Class<VR256X>))  [1.02;1.02]
		 Successful, latency: 1.02
	VPSUBQZ256rr(2(Class<VR256X>) -> 0(Class<VR256X>))  [0.999;0.999]
		 Successful, latency: 0.999

-----VPSUBQZ256rrk-----
	VPSUBQZ256rrk(1(Class<VR256X>) -> 0(Class<VR256X>))  [1.01;1.01]
		 Successful, latency: 1.01
	VPSUBQZ256rrk(3(Class<VR256X>) -> 0(Class<VR256X>))  [1.01;1.01]
		 Successful, latency: 1.01
	VPSUBQZ256rrk(4(Class<VR256X>) -> 0(Class<VR256X>))  [1.01;1.01]
		 Successful, latency: 1.01

-----VPSUBQZ256rrkz-----
	VPSUBQZ256rrkz(2(Class<VR256X>) -> 0(Class<VR256X>))  [1.02;1.02]
		 Successful, latency: 1.02
	VPSUBQZ256rrkz(3(Class<VR256X>) -> 0(Class<VR256X>))  [1.01;1.01]
		 Successful, latency: 1.01

-----VPSUBQZrr-----
	VPSUBQZrr(1(Class<VR512>) -> 0(Class<VR512>))  [1.01;1.01]
		 Successful, latency: 1.01
	VPSUBQZrr(2(Class<VR512>) -> 0(Class<VR512>))  [1.01;1.01]
		 Successful, latency: 1.01

-----VPSUBQZrrk-----
	VPSUBQZrrk(1(Class<VR512>) -> 0(Class<VR512>))  [1;1]
		 Successful, latency: 1
	VPSUBQZrrk(3(Class<VR512>) -> 0(Class<VR512>))  [1;1]
		 Successful, latency: 1
	VPSUBQZrrk(4(Class<VR512>) -> 0(Class<VR512>))  [1.01;1.01]
		 Successful, latency: 1.01

-----VPSUBQZrrkz-----
	VPSUBQZrrkz(2(Class<VR512>) -> 0(Class<VR512>))  [1.01;1.01]
		 Successful, latency: 1.01
	VPSUBQZrrkz(3(Class<VR512>) -> 0(Class<VR512>))  [1.01;1.01]
		 Successful, latency: 1.01

-----VPSUBQrr-----
	VPSUBQrr(1(Class<VR128>) -> 0(Class<VR128>))  [1.01;1.01]
		 Successful, latency: 1.01
	VPSUBQrr(2(Class<VR128>) -> 0(Class<VR128>))  [1.01;1.01]
		 Successful, latency: 1.01

-----VPSUBSBYrr-----
	VPSUBSBYrr(1(Class<VR256>) -> 0(Class<VR256>))  [2.02;2.02]
		 Successful, latency: 2.02
	VPSUBSBYrr(2(Class<VR256>) -> 0(Class<VR256>))  [2.02;2.02]
		 Successful, latency: 2.02

-----VPSUBSBZ128rr-----
	VPSUBSBZ128rr(1(Class<VR128X>) -> 0(Class<VR128X>))  [2.02;2.02]
		 Successful, latency: 2.02
	VPSUBSBZ128rr(2(Class<VR128X>) -> 0(Class<VR128X>))  [2.02;2.02]
		 Successful, latency: 2.02

-----VPSUBSBZ128rrk-----
	VPSUBSBZ128rrk(1(Class<VR128X>) -> 0(Class<VR128X>))  [2.03;2.03]
		 Successful, latency: 2.03
	VPSUBSBZ128rrk(3(Class<VR128X>) -> 0(Class<VR128X>))  [2.02;2.02]
		 Successful, latency: 2.02
	VPSUBSBZ128rrk(4(Class<VR128X>) -> 0(Class<VR128X>))  [2.01;2.01]
		 Successful, latency: 2.01

-----VPSUBSBZ128rrkz-----
	VPSUBSBZ128rrkz(2(Class<VR128X>) -> 0(Class<VR128X>))  [2.03;2.03]
		 Successful, latency: 2.03
	VPSUBSBZ128rrkz(3(Class<VR128X>) -> 0(Class<VR128X>))  [2.02;2.02]
		 Successful, latency: 2.02

-----VPSUBSBZ256rr-----
	VPSUBSBZ256rr(1(Class<VR256X>) -> 0(Class<VR256X>))  [2.02;2.02]
		 Successful, latency: 2.02
	VPSUBSBZ256rr(2(Class<VR256X>) -> 0(Class<VR256X>))  [2.03;2.03]
		 Successful, latency: 2.03

-----VPSUBSBZ256rrk-----
	VPSUBSBZ256rrk(1(Class<VR256X>) -> 0(Class<VR256X>))  [2.02;2.02]
		 Successful, latency: 2.02
	VPSUBSBZ256rrk(3(Class<VR256X>) -> 0(Class<VR256X>))  [2.02;2.02]
		 Successful, latency: 2.02
	VPSUBSBZ256rrk(4(Class<VR256X>) -> 0(Class<VR256X>))  [2.02;2.02]
		 Successful, latency: 2.02

-----VPSUBSBZ256rrkz-----
	VPSUBSBZ256rrkz(2(Class<VR256X>) -> 0(Class<VR256X>))  [2.02;2.02]
		 Successful, latency: 2.02
	VPSUBSBZ256rrkz(3(Class<VR256X>) -> 0(Class<VR256X>))  [2.02;2.02]
		 Successful, latency: 2.02

-----VPSUBSBZrr-----
	VPSUBSBZrr(1(Class<VR512>) -> 0(Class<VR512>))  [2.01;2.01]
		 Successful, latency: 2.01
	VPSUBSBZrr(2(Class<VR512>) -> 0(Class<VR512>))  [2.01;2.01]
		 Successful, latency: 2.01

-----VPSUBSBZrrk-----
	VPSUBSBZrrk(1(Class<VR512>) -> 0(Class<VR512>))  [2.02;2.02]
		 Successful, latency: 2.02
	VPSUBSBZrrk(3(Class<VR512>) -> 0(Class<VR512>))  [2.02;2.02]
		 Successful, latency: 2.02
	VPSUBSBZrrk(4(Class<VR512>) -> 0(Class<VR512>))  [2.02;2.02]
		 Successful, latency: 2.02

-----VPSUBSBZrrkz-----
	VPSUBSBZrrkz(2(Class<VR512>) -> 0(Class<VR512>))  [2.02;2.02]
		 Successful, latency: 2.02
	VPSUBSBZrrkz(3(Class<VR512>) -> 0(Class<VR512>))  [2.01;2.01]
		 Successful, latency: 2.01

-----VPSUBSBrr-----
	VPSUBSBrr(1(Class<VR128>) -> 0(Class<VR128>))  [1.99;1.99]
		 Successful, latency: 1.99
	VPSUBSBrr(2(Class<VR128>) -> 0(Class<VR128>))  [2.01;2.01]
		 Successful, latency: 2.01

-----VPSUBSWYrr-----
	VPSUBSWYrr(1(Class<VR256>) -> 0(Class<VR256>))  [2.02;2.02]
		 Successful, latency: 2.02
	VPSUBSWYrr(2(Class<VR256>) -> 0(Class<VR256>))  [2.02;2.02]
		 Successful, latency: 2.02

-----VPSUBSWZ128rr-----
	VPSUBSWZ128rr(1(Class<VR128X>) -> 0(Class<VR128X>))  [2.03;2.03]
		 Successful, latency: 2.03
	VPSUBSWZ128rr(2(Class<VR128X>) -> 0(Class<VR128X>))  [2.02;2.02]
		 Successful, latency: 2.02

-----VPSUBSWZ128rrk-----
	VPSUBSWZ128rrk(1(Class<VR128X>) -> 0(Class<VR128X>))  [2.02;2.02]
		 Successful, latency: 2.02
	VPSUBSWZ128rrk(3(Class<VR128X>) -> 0(Class<VR128X>))  [2.01;2.01]
		 Successful, latency: 2.01
	VPSUBSWZ128rrk(4(Class<VR128X>) -> 0(Class<VR128X>))  [2.01;2.01]
		 Successful, latency: 2.01

-----VPSUBSWZ128rrkz-----
	VPSUBSWZ128rrkz(2(Class<VR128X>) -> 0(Class<VR128X>))  [2.01;2.01]
		 Successful, latency: 2.01
	VPSUBSWZ128rrkz(3(Class<VR128X>) -> 0(Class<VR128X>))  [2.02;2.02]
		 Successful, latency: 2.02

-----VPSUBSWZ256rr-----
	VPSUBSWZ256rr(1(Class<VR256X>) -> 0(Class<VR256X>))  [2.01;2.01]
		 Successful, latency: 2.01
	VPSUBSWZ256rr(2(Class<VR256X>) -> 0(Class<VR256X>))  [2.02;2.02]
		 Successful, latency: 2.02

-----VPSUBSWZ256rrk-----
	VPSUBSWZ256rrk(1(Class<VR256X>) -> 0(Class<VR256X>))  [2.02;2.02]
		 Successful, latency: 2.02
	VPSUBSWZ256rrk(3(Class<VR256X>) -> 0(Class<VR256X>))  [2.02;2.02]
		 Successful, latency: 2.02
	VPSUBSWZ256rrk(4(Class<VR256X>) -> 0(Class<VR256X>))  [2.02;2.02]
		 Successful, latency: 2.02

-----VPSUBSWZ256rrkz-----
	VPSUBSWZ256rrkz(2(Class<VR256X>) -> 0(Class<VR256X>))  [2.01;2.01]
		 Successful, latency: 2.01
	VPSUBSWZ256rrkz(3(Class<VR256X>) -> 0(Class<VR256X>))  [2.02;2.02]
		 Successful, latency: 2.02

-----VPSUBSWZrr-----
	VPSUBSWZrr(1(Class<VR512>) -> 0(Class<VR512>))  [2.01;2.01]
		 Successful, latency: 2.01
	VPSUBSWZrr(2(Class<VR512>) -> 0(Class<VR512>))  [2.02;2.02]
		 Successful, latency: 2.02

-----VPSUBSWZrrk-----
	VPSUBSWZrrk(1(Class<VR512>) -> 0(Class<VR512>))  [2.02;2.02]
		 Successful, latency: 2.02
	VPSUBSWZrrk(3(Class<VR512>) -> 0(Class<VR512>))  [2.02;2.02]
		 Successful, latency: 2.02
	VPSUBSWZrrk(4(Class<VR512>) -> 0(Class<VR512>))  [2.03;2.03]
		 Successful, latency: 2.03

-----VPSUBSWZrrkz-----
	VPSUBSWZrrkz(2(Class<VR512>) -> 0(Class<VR512>))  [2.02;2.02]
		 Successful, latency: 2.02
	VPSUBSWZrrkz(3(Class<VR512>) -> 0(Class<VR512>))  [2.03;2.03]
		 Successful, latency: 2.03

-----VPSUBSWrr-----
	VPSUBSWrr(1(Class<VR128>) -> 0(Class<VR128>))  [2.04;2.04]
		 Successful, latency: 2.04
	VPSUBSWrr(2(Class<VR128>) -> 0(Class<VR128>))  [2.01;2.01]
		 Successful, latency: 2.01

-----VPSUBUSBYrr-----
	VPSUBUSBYrr(1(Class<VR256>) -> 0(Class<VR256>))  [2.02;2.02]
		 Successful, latency: 2.02
	VPSUBUSBYrr(2(Class<VR256>) -> 0(Class<VR256>))  [2.01;2.01]
		 Successful, latency: 2.01

-----VPSUBUSBZ128rr-----
	VPSUBUSBZ128rr(1(Class<VR128X>) -> 0(Class<VR128X>))  [2.02;2.02]
		 Successful, latency: 2.02
	VPSUBUSBZ128rr(2(Class<VR128X>) -> 0(Class<VR128X>))  [2.02;2.02]
		 Successful, latency: 2.02

-----VPSUBUSBZ128rrk-----
	VPSUBUSBZ128rrk(1(Class<VR128X>) -> 0(Class<VR128X>))  [2.01;2.01]
		 Successful, latency: 2.01
	VPSUBUSBZ128rrk(3(Class<VR128X>) -> 0(Class<VR128X>))  [2.01;2.01]
		 Successful, latency: 2.01
	VPSUBUSBZ128rrk(4(Class<VR128X>) -> 0(Class<VR128X>))  [2.02;2.02]
		 Successful, latency: 2.02

-----VPSUBUSBZ128rrkz-----
	VPSUBUSBZ128rrkz(2(Class<VR128X>) -> 0(Class<VR128X>))  [2.02;2.02]
		 Successful, latency: 2.02
	VPSUBUSBZ128rrkz(3(Class<VR128X>) -> 0(Class<VR128X>))  [2.02;2.02]
		 Successful, latency: 2.02

-----VPSUBUSBZ256rr-----
	VPSUBUSBZ256rr(1(Class<VR256X>) -> 0(Class<VR256X>))  [2.04;2.04]
		 Successful, latency: 2.04
	VPSUBUSBZ256rr(2(Class<VR256X>) -> 0(Class<VR256X>))  [2.02;2.02]
		 Successful, latency: 2.02

-----VPSUBUSBZ256rrk-----
	VPSUBUSBZ256rrk(1(Class<VR256X>) -> 0(Class<VR256X>))  [2.02;2.02]
		 Successful, latency: 2.02
	VPSUBUSBZ256rrk(3(Class<VR256X>) -> 0(Class<VR256X>))  [2.01;2.01]
		 Successful, latency: 2.01
	VPSUBUSBZ256rrk(4(Class<VR256X>) -> 0(Class<VR256X>))  [2.02;2.02]
		 Successful, latency: 2.02

-----VPSUBUSBZ256rrkz-----
	VPSUBUSBZ256rrkz(2(Class<VR256X>) -> 0(Class<VR256X>))  [2.01;2.01]
		 Successful, latency: 2.01
	VPSUBUSBZ256rrkz(3(Class<VR256X>) -> 0(Class<VR256X>))  [2.02;2.02]
		 Successful, latency: 2.02

-----VPSUBUSBZrr-----
	VPSUBUSBZrr(1(Class<VR512>) -> 0(Class<VR512>))  [2.02;2.02]
		 Successful, latency: 2.02
	VPSUBUSBZrr(2(Class<VR512>) -> 0(Class<VR512>))  [2.04;2.04]
		 Successful, latency: 2.04

-----VPSUBUSBZrrk-----
	VPSUBUSBZrrk(1(Class<VR512>) -> 0(Class<VR512>))  [2.01;2.01]
		 Successful, latency: 2.01
	VPSUBUSBZrrk(3(Class<VR512>) -> 0(Class<VR512>))  [2.02;2.02]
		 Successful, latency: 2.02
	VPSUBUSBZrrk(4(Class<VR512>) -> 0(Class<VR512>))  [2.02;2.02]
		 Successful, latency: 2.02

-----VPSUBUSBZrrkz-----
	VPSUBUSBZrrkz(2(Class<VR512>) -> 0(Class<VR512>))  [2.02;2.02]
		 Successful, latency: 2.02
	VPSUBUSBZrrkz(3(Class<VR512>) -> 0(Class<VR512>))  [2.01;2.01]
		 Successful, latency: 2.01

-----VPSUBUSBrr-----
	VPSUBUSBrr(1(Class<VR128>) -> 0(Class<VR128>))  [2.02;2.02]
		 Successful, latency: 2.02
	VPSUBUSBrr(2(Class<VR128>) -> 0(Class<VR128>))  [2.01;2.01]
		 Successful, latency: 2.01

-----VPSUBUSWYrr-----
	VPSUBUSWYrr(1(Class<VR256>) -> 0(Class<VR256>))  [2.02;2.02]
		 Successful, latency: 2.02
	VPSUBUSWYrr(2(Class<VR256>) -> 0(Class<VR256>))  [2.02;2.02]
		 Successful, latency: 2.02

-----VPSUBUSWZ128rr-----
	VPSUBUSWZ128rr(1(Class<VR128X>) -> 0(Class<VR128X>))  [2.01;2.01]
		 Successful, latency: 2.01
	VPSUBUSWZ128rr(2(Class<VR128X>) -> 0(Class<VR128X>))  [2.03;2.03]
		 Successful, latency: 2.03

-----VPSUBUSWZ128rrk-----
	VPSUBUSWZ128rrk(1(Class<VR128X>) -> 0(Class<VR128X>))  [2.02;2.02]
		 Successful, latency: 2.02
	VPSUBUSWZ128rrk(3(Class<VR128X>) -> 0(Class<VR128X>))  [2.03;2.03]
		 Successful, latency: 2.03
	VPSUBUSWZ128rrk(4(Class<VR128X>) -> 0(Class<VR128X>))  [2.02;2.02]
		 Successful, latency: 2.02

-----VPSUBUSWZ128rrkz-----
	VPSUBUSWZ128rrkz(2(Class<VR128X>) -> 0(Class<VR128X>))  [2.02;2.02]
		 Successful, latency: 2.02
	VPSUBUSWZ128rrkz(3(Class<VR128X>) -> 0(Class<VR128X>))  [2.02;2.02]
		 Successful, latency: 2.02

-----VPSUBUSWZ256rr-----
	VPSUBUSWZ256rr(1(Class<VR256X>) -> 0(Class<VR256X>))  [2.03;2.03]
		 Successful, latency: 2.03
	VPSUBUSWZ256rr(2(Class<VR256X>) -> 0(Class<VR256X>))  [2.01;2.01]
		 Successful, latency: 2.01

-----VPSUBUSWZ256rrk-----
	VPSUBUSWZ256rrk(1(Class<VR256X>) -> 0(Class<VR256X>))  [2.03;2.03]
		 Successful, latency: 2.03
	VPSUBUSWZ256rrk(3(Class<VR256X>) -> 0(Class<VR256X>))  [2.02;2.02]
		 Successful, latency: 2.02
	VPSUBUSWZ256rrk(4(Class<VR256X>) -> 0(Class<VR256X>))  [2.02;2.02]
		 Successful, latency: 2.02

-----VPSUBUSWZ256rrkz-----
	VPSUBUSWZ256rrkz(2(Class<VR256X>) -> 0(Class<VR256X>))  [2.02;2.02]
		 Successful, latency: 2.02
	VPSUBUSWZ256rrkz(3(Class<VR256X>) -> 0(Class<VR256X>))  [2.02;2.02]
		 Successful, latency: 2.02

-----VPSUBUSWZrr-----
	VPSUBUSWZrr(1(Class<VR512>) -> 0(Class<VR512>))  [2.02;2.02]
		 Successful, latency: 2.02
	VPSUBUSWZrr(2(Class<VR512>) -> 0(Class<VR512>))  [2.02;2.02]
		 Successful, latency: 2.02

-----VPSUBUSWZrrk-----
	VPSUBUSWZrrk(1(Class<VR512>) -> 0(Class<VR512>))  [2.02;2.02]
		 Successful, latency: 2.02
	VPSUBUSWZrrk(3(Class<VR512>) -> 0(Class<VR512>))  [2.02;2.02]
		 Successful, latency: 2.02
	VPSUBUSWZrrk(4(Class<VR512>) -> 0(Class<VR512>))  [2.02;2.02]
		 Successful, latency: 2.02

-----VPSUBUSWZrrkz-----
	VPSUBUSWZrrkz(2(Class<VR512>) -> 0(Class<VR512>))  [2.04;2.04]
		 Successful, latency: 2.04
	VPSUBUSWZrrkz(3(Class<VR512>) -> 0(Class<VR512>))  [2.02;2.02]
		 Successful, latency: 2.02

-----VPSUBUSWrr-----
	VPSUBUSWrr(1(Class<VR128>) -> 0(Class<VR128>))  [2.03;2.03]
		 Successful, latency: 2.03
	VPSUBUSWrr(2(Class<VR128>) -> 0(Class<VR128>))  [2.02;2.02]
		 Successful, latency: 2.02

-----VPSUBWYrr-----
	VPSUBWYrr(1(Class<VR256>) -> 0(Class<VR256>))  [1.02;1.02]
		 Successful, latency: 1.02
	VPSUBWYrr(2(Class<VR256>) -> 0(Class<VR256>))  [1.01;1.01]
		 Successful, latency: 1.01

-----VPSUBWZ128rr-----
	VPSUBWZ128rr(1(Class<VR128X>) -> 0(Class<VR128X>))  [1.01;1.01]
		 Successful, latency: 1.01
	VPSUBWZ128rr(2(Class<VR128X>) -> 0(Class<VR128X>))  [1;1]
		 Successful, latency: 1

-----VPSUBWZ128rrk-----
	VPSUBWZ128rrk(1(Class<VR128X>) -> 0(Class<VR128X>))  [1.01;1.01]
		 Successful, latency: 1.01
	VPSUBWZ128rrk(3(Class<VR128X>) -> 0(Class<VR128X>))  [1.01;1.01]
		 Successful, latency: 1.01
	VPSUBWZ128rrk(4(Class<VR128X>) -> 0(Class<VR128X>))  [1;1]
		 Successful, latency: 1

-----VPSUBWZ128rrkz-----
	VPSUBWZ128rrkz(2(Class<VR128X>) -> 0(Class<VR128X>))  [1.02;1.02]
		 Successful, latency: 1.02
	VPSUBWZ128rrkz(3(Class<VR128X>) -> 0(Class<VR128X>))  [1.01;1.01]
		 Successful, latency: 1.01

-----VPSUBWZ256rr-----
	VPSUBWZ256rr(1(Class<VR256X>) -> 0(Class<VR256X>))  [1;1]
		 Successful, latency: 1
	VPSUBWZ256rr(2(Class<VR256X>) -> 0(Class<VR256X>))  [1;1]
		 Successful, latency: 1

-----VPSUBWZ256rrk-----
	VPSUBWZ256rrk(1(Class<VR256X>) -> 0(Class<VR256X>))  [1;1]
		 Successful, latency: 1
	VPSUBWZ256rrk(3(Class<VR256X>) -> 0(Class<VR256X>))  [1.01;1.01]
		 Successful, latency: 1.01
	VPSUBWZ256rrk(4(Class<VR256X>) -> 0(Class<VR256X>))  [1;1]
		 Successful, latency: 1

-----VPSUBWZ256rrkz-----
	VPSUBWZ256rrkz(2(Class<VR256X>) -> 0(Class<VR256X>))  [1;1]
		 Successful, latency: 1
	VPSUBWZ256rrkz(3(Class<VR256X>) -> 0(Class<VR256X>))  [1.01;1.01]
		 Successful, latency: 1.01

-----VPSUBWZrr-----
	VPSUBWZrr(1(Class<VR512>) -> 0(Class<VR512>))  [1;1]
		 Successful, latency: 1
	VPSUBWZrr(2(Class<VR512>) -> 0(Class<VR512>))  [1;1]
		 Successful, latency: 1

-----VPSUBWZrrk-----
	VPSUBWZrrk(1(Class<VR512>) -> 0(Class<VR512>))  [1;1]
		 Successful, latency: 1
	VPSUBWZrrk(3(Class<VR512>) -> 0(Class<VR512>))  [1.02;1.02]
		 Successful, latency: 1.02
	VPSUBWZrrk(4(Class<VR512>) -> 0(Class<VR512>))  [1.01;1.01]
		 Successful, latency: 1.01

-----VPSUBWZrrkz-----
	VPSUBWZrrkz(2(Class<VR512>) -> 0(Class<VR512>))  [1.01;1.01]
		 Successful, latency: 1.01
	VPSUBWZrrkz(3(Class<VR512>) -> 0(Class<VR512>))  [1.01;1.01]
		 Successful, latency: 1.01

-----VPSUBWrr-----
	VPSUBWrr(1(Class<VR128>) -> 0(Class<VR128>))  [1;1]
		 Successful, latency: 1
	VPSUBWrr(2(Class<VR128>) -> 0(Class<VR128>))  [1;1]
		 Successful, latency: 1

-----VPTERNLOGDZ128rri-----
	VPTERNLOGDZ128rri(1(Class<VR128X>) -> 0(Class<VR128X>))  [1.01;1.01]
		 Successful, latency: 1.01
	VPTERNLOGDZ128rri(2(Class<VR128X>) -> 0(Class<VR128X>))  [1.02;1.02]
		 Successful, latency: 1.02
	VPTERNLOGDZ128rri(3(Class<VR128X>) -> 0(Class<VR128X>))  [1;1]
		 Successful, latency: 1

-----VPTERNLOGDZ128rrik-----
	VPTERNLOGDZ128rrik(1(Class<VR128X>) -> 0(Class<VR128X>))  [1.01;1.01]
		 Successful, latency: 1.01
	VPTERNLOGDZ128rrik(3(Class<VR128X>) -> 0(Class<VR128X>))  [1;1]
		 Successful, latency: 1
	VPTERNLOGDZ128rrik(4(Class<VR128X>) -> 0(Class<VR128X>))  [1.01;1.01]
		 Successful, latency: 1.01

-----VPTERNLOGDZ128rrikz-----
	VPTERNLOGDZ128rrikz(1(Class<VR128X>) -> 0(Class<VR128X>))  [1.02;1.02]
		 Successful, latency: 1.02
	VPTERNLOGDZ128rrikz(3(Class<VR128X>) -> 0(Class<VR128X>))  [1.01;1.01]
		 Successful, latency: 1.01
	VPTERNLOGDZ128rrikz(4(Class<VR128X>) -> 0(Class<VR128X>))  [1;1]
		 Successful, latency: 1

-----VPTERNLOGDZ256rri-----
	VPTERNLOGDZ256rri(1(Class<VR256X>) -> 0(Class<VR256X>))  [0.998;0.998]
		 Successful, latency: 0.998
	VPTERNLOGDZ256rri(2(Class<VR256X>) -> 0(Class<VR256X>))  [1;1]
		 Successful, latency: 1
	VPTERNLOGDZ256rri(3(Class<VR256X>) -> 0(Class<VR256X>))  [1.02;1.02]
		 Successful, latency: 1.02

-----VPTERNLOGDZ256rrik-----
	VPTERNLOGDZ256rrik(1(Class<VR256X>) -> 0(Class<VR256X>))  [1.01;1.01]
		 Successful, latency: 1.01
	VPTERNLOGDZ256rrik(3(Class<VR256X>) -> 0(Class<VR256X>))  [1.01;1.01]
		 Successful, latency: 1.01
	VPTERNLOGDZ256rrik(4(Class<VR256X>) -> 0(Class<VR256X>))  [1.01;1.01]
		 Successful, latency: 1.01

-----VPTERNLOGDZ256rrikz-----
	VPTERNLOGDZ256rrikz(1(Class<VR256X>) -> 0(Class<VR256X>))  [1.01;1.01]
		 Successful, latency: 1.01
	VPTERNLOGDZ256rrikz(3(Class<VR256X>) -> 0(Class<VR256X>))  [1;1]
		 Successful, latency: 1
	VPTERNLOGDZ256rrikz(4(Class<VR256X>) -> 0(Class<VR256X>))  [1.02;1.02]
		 Successful, latency: 1.02

-----VPTERNLOGDZrri-----
	VPTERNLOGDZrri(1(Class<VR512>) -> 0(Class<VR512>))  [1.01;1.01]
		 Successful, latency: 1.01
	VPTERNLOGDZrri(2(Class<VR512>) -> 0(Class<VR512>))  [1.02;1.02]
		 Successful, latency: 1.02
	VPTERNLOGDZrri(3(Class<VR512>) -> 0(Class<VR512>))  [1;1]
		 Successful, latency: 1

-----VPTERNLOGDZrrik-----
	VPTERNLOGDZrrik(1(Class<VR512>) -> 0(Class<VR512>))  [1.01;1.01]
		 Successful, latency: 1.01
	VPTERNLOGDZrrik(3(Class<VR512>) -> 0(Class<VR512>))  [1.01;1.01]
		 Successful, latency: 1.01
	VPTERNLOGDZrrik(4(Class<VR512>) -> 0(Class<VR512>))  [1;1]
		 Successful, latency: 1

-----VPTERNLOGDZrrikz-----
	VPTERNLOGDZrrikz(1(Class<VR512>) -> 0(Class<VR512>))  [1;1]
		 Successful, latency: 1
	VPTERNLOGDZrrikz(3(Class<VR512>) -> 0(Class<VR512>))  [1;1]
		 Successful, latency: 1
	VPTERNLOGDZrrikz(4(Class<VR512>) -> 0(Class<VR512>))  [1.01;1.01]
		 Successful, latency: 1.01

-----VPTERNLOGQZ128rri-----
	VPTERNLOGQZ128rri(1(Class<VR128X>) -> 0(Class<VR128X>))  [1.01;1.01]
		 Successful, latency: 1.01
	VPTERNLOGQZ128rri(2(Class<VR128X>) -> 0(Class<VR128X>))  [1.01;1.01]
		 Successful, latency: 1.01
	VPTERNLOGQZ128rri(3(Class<VR128X>) -> 0(Class<VR128X>))  [1;1]
		 Successful, latency: 1

-----VPTERNLOGQZ128rrik-----
	VPTERNLOGQZ128rrik(1(Class<VR128X>) -> 0(Class<VR128X>))  [1.01;1.01]
		 Successful, latency: 1.01
	VPTERNLOGQZ128rrik(3(Class<VR128X>) -> 0(Class<VR128X>))  [1.01;1.01]
		 Successful, latency: 1.01
	VPTERNLOGQZ128rrik(4(Class<VR128X>) -> 0(Class<VR128X>))  [1.01;1.01]
		 Successful, latency: 1.01

-----VPTERNLOGQZ128rrikz-----
	VPTERNLOGQZ128rrikz(1(Class<VR128X>) -> 0(Class<VR128X>))  [1.01;1.01]
		 Successful, latency: 1.01
	VPTERNLOGQZ128rrikz(3(Class<VR128X>) -> 0(Class<VR128X>))  [1;1]
		 Successful, latency: 1
	VPTERNLOGQZ128rrikz(4(Class<VR128X>) -> 0(Class<VR128X>))  [1.01;1.01]
		 Successful, latency: 1.01

-----VPTERNLOGQZ256rri-----
	VPTERNLOGQZ256rri(1(Class<VR256X>) -> 0(Class<VR256X>))  [1.02;1.02]
		 Successful, latency: 1.02
	VPTERNLOGQZ256rri(2(Class<VR256X>) -> 0(Class<VR256X>))  [1;1]
		 Successful, latency: 1
	VPTERNLOGQZ256rri(3(Class<VR256X>) -> 0(Class<VR256X>))  [1;1]
		 Successful, latency: 1

-----VPTERNLOGQZ256rrik-----
	VPTERNLOGQZ256rrik(1(Class<VR256X>) -> 0(Class<VR256X>))  [1;1]
		 Successful, latency: 1
	VPTERNLOGQZ256rrik(3(Class<VR256X>) -> 0(Class<VR256X>))  [1;1]
		 Successful, latency: 1
	VPTERNLOGQZ256rrik(4(Class<VR256X>) -> 0(Class<VR256X>))  [1.01;1.01]
		 Successful, latency: 1.01

-----VPTERNLOGQZ256rrikz-----
	VPTERNLOGQZ256rrikz(1(Class<VR256X>) -> 0(Class<VR256X>))  [1.01;1.01]
		 Successful, latency: 1.01
	VPTERNLOGQZ256rrikz(3(Class<VR256X>) -> 0(Class<VR256X>))  [1.01;1.01]
		 Successful, latency: 1.01
	VPTERNLOGQZ256rrikz(4(Class<VR256X>) -> 0(Class<VR256X>))  [1.02;1.02]
		 Successful, latency: 1.02

-----VPTERNLOGQZrri-----
	VPTERNLOGQZrri(1(Class<VR512>) -> 0(Class<VR512>))  [1;1]
		 Successful, latency: 1
	VPTERNLOGQZrri(2(Class<VR512>) -> 0(Class<VR512>))  [1.02;1.02]
		 Successful, latency: 1.02
	VPTERNLOGQZrri(3(Class<VR512>) -> 0(Class<VR512>))  [1.01;1.01]
		 Successful, latency: 1.01

-----VPTERNLOGQZrrik-----
	VPTERNLOGQZrrik(1(Class<VR512>) -> 0(Class<VR512>))  [1.01;1.01]
		 Successful, latency: 1.01
	VPTERNLOGQZrrik(3(Class<VR512>) -> 0(Class<VR512>))  [1.01;1.01]
		 Successful, latency: 1.01
	VPTERNLOGQZrrik(4(Class<VR512>) -> 0(Class<VR512>))  [1;1]
		 Successful, latency: 1

-----VPTERNLOGQZrrikz-----
	VPTERNLOGQZrrikz(1(Class<VR512>) -> 0(Class<VR512>))  [1;1]
		 Successful, latency: 1
	VPTERNLOGQZrrikz(3(Class<VR512>) -> 0(Class<VR512>))  [1;1]
		 Successful, latency: 1
	VPTERNLOGQZrrikz(4(Class<VR512>) -> 0(Class<VR512>))  [1;1]
		 Successful, latency: 1

-----VPTESTMBZ128rr-----
	VPTESTMBZ128rr(1(Class<VR128X>) -> 0(Class<VK16>))  [1.01;3.03]
		Dependencies:
			VPMOVB2MZ128kr(1(Class<VR128X>) -> 0(Class<VK16>)) 
			VPMOVM2BZ128rk(1(Class<VK16>) -> 0(Class<VR128X>)) 
		Combined result: 4.03 cycles
	VPTESTMBZ128rr(2(Class<VR128X>) -> 0(Class<VK16>))  [1.03;3.05]
		Dependencies:
			VPMOVB2MZ128kr(1(Class<VR128X>) -> 0(Class<VK16>)) 
			VPMOVM2BZ128rk(1(Class<VK16>) -> 0(Class<VR128X>)) 
		Combined result: 4.05 cycles

-----VPTESTMBZ128rrk-----
	VPTESTMBZ128rrk(2(Class<VR128X>) -> 0(Class<VK16>))  [1.03;3.05]
		Dependencies:
			VPMOVB2MZ128kr(1(Class<VR128X>) -> 0(Class<VK16>)) 
			VPMOVM2BZ128rk(1(Class<VK16>) -> 0(Class<VR128X>)) 
		Combined result: 4.05 cycles
	VPTESTMBZ128rrk(3(Class<VR128X>) -> 0(Class<VK16>))  [1.02;3.04]
		Dependencies:
			VPMOVB2MZ128kr(1(Class<VR128X>) -> 0(Class<VK16>)) 
			VPMOVM2BZ128rk(1(Class<VK16>) -> 0(Class<VR128X>)) 
		Combined result: 4.04 cycles

-----VPTESTMBZ256rr-----
	VPTESTMBZ256rr(1(Class<VR256X>) -> 0(Class<VK32>))  [1.02;4.04]
		Dependencies:
			VPSHUFBITQMBZ256rr(1(Class<VR256X>) -> 0(Class<VK32>)) 
			VPMOVM2BZ256rk(1(Class<VK32>) -> 0(Class<VR256X>)) 
		Combined result: 5.04 cycles
	VPTESTMBZ256rr(2(Class<VR256X>) -> 0(Class<VK32>))  [1.01;4.04]
		Dependencies:
			VPSHUFBITQMBZ256rr(1(Class<VR256X>) -> 0(Class<VK32>)) 
			VPMOVM2BZ256rk(1(Class<VK32>) -> 0(Class<VR256X>)) 
		Combined result: 5.04 cycles

-----VPTESTMBZ256rrk-----
	VPTESTMBZ256rrk(2(Class<VR256X>) -> 0(Class<VK32>))  [1.02;4.04]
		Dependencies:
			VPSHUFBITQMBZ256rr(1(Class<VR256X>) -> 0(Class<VK32>)) 
			VPMOVM2BZ256rk(1(Class<VK32>) -> 0(Class<VR256X>)) 
		Combined result: 5.04 cycles
	VPTESTMBZ256rrk(3(Class<VR256X>) -> 0(Class<VK32>))  [1.02;4.04]
		Dependencies:
			VPSHUFBITQMBZ256rr(1(Class<VR256X>) -> 0(Class<VK32>)) 
			VPMOVM2BZ256rk(1(Class<VK32>) -> 0(Class<VR256X>)) 
		Combined result: 5.04 cycles

-----VPTESTMBZrr-----
	VPTESTMBZrr(1(Class<VR512>) -> 0(Class<VK64>))  [1.01;4.17]
		Dependencies:
			VPTESTNMBZrr(1(Class<VR512>) -> 0(Class<VK64>)) 
			VPMOVM2BZrk(1(Class<VK64>) -> 0(Class<VR512>)) 
		Combined result: 5.17 cycles
	VPTESTMBZrr(2(Class<VR512>) -> 0(Class<VK64>))  [1.01;4.17]
		Dependencies:
			VPTESTNMBZrr(1(Class<VR512>) -> 0(Class<VK64>)) 
			VPMOVM2BZrk(1(Class<VK64>) -> 0(Class<VR512>)) 
		Combined result: 5.17 cycles

-----VPTESTMBZrrk-----
	VPTESTMBZrrk(2(Class<VR512>) -> 0(Class<VK64>))  [1;4.16]
		Dependencies:
			VPTESTNMBZrr(1(Class<VR512>) -> 0(Class<VK64>)) 
			VPMOVM2BZrk(1(Class<VK64>) -> 0(Class<VR512>)) 
		Combined result: 5.16 cycles
	VPTESTMBZrrk(3(Class<VR512>) -> 0(Class<VK64>))  [1.02;4.17]
		Dependencies:
			VPTESTNMBZrr(1(Class<VR512>) -> 0(Class<VK64>)) 
			VPMOVM2BZrk(1(Class<VK64>) -> 0(Class<VR512>)) 
		Combined result: 5.17 cycles

-----VPTESTMDZ128rr-----
	VPTESTMDZ128rr(1(Class<VR128X>) -> 0(Class<VK4>))  [1;3.03]
		Dependencies:
			VPCMPEQDZ128rr(2(Class<VR128X>) -> 0(Class<VK4>)) 
			VPMOVM2DZ128rk(1(Class<VK4>) -> 0(Class<VR128X>)) 
		Combined result: 4.03 cycles
	VPTESTMDZ128rr(2(Class<VR128X>) -> 0(Class<VK4>))  [1.02;3.05]
		Dependencies:
			VPCMPEQDZ128rr(2(Class<VR128X>) -> 0(Class<VK4>)) 
			VPMOVM2DZ128rk(1(Class<VK4>) -> 0(Class<VR128X>)) 
		Combined result: 4.05 cycles

-----VPTESTMDZ128rrk-----
	VPTESTMDZ128rrk(2(Class<VR128X>) -> 0(Class<VK4>))  [1.02;3.05]
		Dependencies:
			VPCMPEQDZ128rr(2(Class<VR128X>) -> 0(Class<VK4>)) 
			VPMOVM2DZ128rk(1(Class<VK4>) -> 0(Class<VR128X>)) 
		Combined result: 4.05 cycles
	VPTESTMDZ128rrk(3(Class<VR128X>) -> 0(Class<VK4>))  [1.03;3.06]
		Dependencies:
			VPCMPEQDZ128rr(2(Class<VR128X>) -> 0(Class<VK4>)) 
			VPMOVM2DZ128rk(1(Class<VK4>) -> 0(Class<VR128X>)) 
		Combined result: 4.06 cycles

-----VPTESTMDZ256rr-----
	VPTESTMDZ256rr(1(Class<VR256X>) -> 0(Class<VK8>))  [1.01;4.05]
		Dependencies:
			VCMPPSZ256rri(1(Class<VR256X>) -> 0(Class<VK8>)) 
			VPMOVM2DZ256rk(1(Class<VK8>) -> 0(Class<VR256X>)) 
		Combined result: 5.05 cycles
	VPTESTMDZ256rr(2(Class<VR256X>) -> 0(Class<VK8>))  [1.04;4.08]
		Dependencies:
			VCMPPSZ256rri(1(Class<VR256X>) -> 0(Class<VK8>)) 
			VPMOVM2DZ256rk(1(Class<VK8>) -> 0(Class<VR256X>)) 
		Combined result: 5.08 cycles

-----VPTESTMDZ256rrk-----
	VPTESTMDZ256rrk(2(Class<VR256X>) -> 0(Class<VK8>))  [1;4.04]
		Dependencies:
			VCMPPSZ256rri(1(Class<VR256X>) -> 0(Class<VK8>)) 
			VPMOVM2DZ256rk(1(Class<VK8>) -> 0(Class<VR256X>)) 
		Combined result: 5.04 cycles
	VPTESTMDZ256rrk(3(Class<VR256X>) -> 0(Class<VK8>))  [1;4.04]
		Dependencies:
			VCMPPSZ256rri(1(Class<VR256X>) -> 0(Class<VK8>)) 
			VPMOVM2DZ256rk(1(Class<VK8>) -> 0(Class<VR256X>)) 
		Combined result: 5.04 cycles

-----VPTESTMDZrr-----
	VPTESTMDZrr(1(Class<VR512>) -> 0(Class<VK16>))  [1.04;5.17]
		Dependencies:
			VPTESTNMDZrr(2(Class<VR512>) -> 0(Class<VK16>)) 
			VPMOVM2DZrk(1(Class<VK16>) -> 0(Class<VR512>)) 
		Combined result: 6.17 cycles
	VPTESTMDZrr(2(Class<VR512>) -> 0(Class<VK16>))  [1.01;5.14]
		Dependencies:
			VPTESTNMDZrr(2(Class<VR512>) -> 0(Class<VK16>)) 
			VPMOVM2DZrk(1(Class<VK16>) -> 0(Class<VR512>)) 
		Combined result: 6.14 cycles

-----VPTESTMDZrrk-----
	VPTESTMDZrrk(2(Class<VR512>) -> 0(Class<VK16>))  [1.03;5.16]
		Dependencies:
			VPTESTNMDZrr(2(Class<VR512>) -> 0(Class<VK16>)) 
			VPMOVM2DZrk(1(Class<VK16>) -> 0(Class<VR512>)) 
		Combined result: 6.16 cycles
	VPTESTMDZrrk(3(Class<VR512>) -> 0(Class<VK16>))  [1.03;5.16]
		Dependencies:
			VPTESTNMDZrr(2(Class<VR512>) -> 0(Class<VK16>)) 
			VPMOVM2DZrk(1(Class<VK16>) -> 0(Class<VR512>)) 
		Combined result: 6.16 cycles

-----VPTESTMQZ128rr-----
	VPTESTMQZ128rr(1(Class<VR128X>) -> 0(Class<VK2>))  [1.03;3.04]
		Dependencies:
			VPCMPQZ128rri(2(Class<VR128X>) -> 0(Class<VK2>)) 
			VPMOVM2QZ128rk(1(Class<VK2>) -> 0(Class<VR128X>)) 
		Combined result: 4.04 cycles
	VPTESTMQZ128rr(2(Class<VR128X>) -> 0(Class<VK2>))  [1.02;3.03]
		Dependencies:
			VPCMPQZ128rri(2(Class<VR128X>) -> 0(Class<VK2>)) 
			VPMOVM2QZ128rk(1(Class<VK2>) -> 0(Class<VR128X>)) 
		Combined result: 4.03 cycles

-----VPTESTMQZ128rrk-----
	VPTESTMQZ128rrk(2(Class<VR128X>) -> 0(Class<VK2>))  [1.04;3.06]
		Dependencies:
			VPCMPQZ128rri(2(Class<VR128X>) -> 0(Class<VK2>)) 
			VPMOVM2QZ128rk(1(Class<VK2>) -> 0(Class<VR128X>)) 
		Combined result: 4.06 cycles
	VPTESTMQZ128rrk(3(Class<VR128X>) -> 0(Class<VK2>))  [1.02;3.03]
		Dependencies:
			VPCMPQZ128rri(2(Class<VR128X>) -> 0(Class<VK2>)) 
			VPMOVM2QZ128rk(1(Class<VK2>) -> 0(Class<VR128X>)) 
		Combined result: 4.03 cycles

-----VPTESTMQZ256rr-----
	VPTESTMQZ256rr(1(Class<VR256X>) -> 0(Class<VK4>))  [1.01;4.04]
		Dependencies:
			VPTESTNMQZ256rrk(2(Class<VR256X>) -> 0(Class<VK4>)) 
			VPMOVM2QZ256rk(1(Class<VK4>) -> 0(Class<VR256X>)) 
		Combined result: 5.04 cycles
	VPTESTMQZ256rr(2(Class<VR256X>) -> 0(Class<VK4>))  [1.02;4.05]
		Dependencies:
			VPTESTNMQZ256rrk(2(Class<VR256X>) -> 0(Class<VK4>)) 
			VPMOVM2QZ256rk(1(Class<VK4>) -> 0(Class<VR256X>)) 
		Combined result: 5.05 cycles

-----VPTESTMQZ256rrk-----
	VPTESTMQZ256rrk(2(Class<VR256X>) -> 0(Class<VK4>))  [1.03;4.06]
		Dependencies:
			VPTESTNMQZ256rrk(2(Class<VR256X>) -> 0(Class<VK4>)) 
			VPMOVM2QZ256rk(1(Class<VK4>) -> 0(Class<VR256X>)) 
		Combined result: 5.06 cycles
	VPTESTMQZ256rrk(3(Class<VR256X>) -> 0(Class<VK4>))  [1.01;4.04]
		Dependencies:
			VPTESTNMQZ256rrk(2(Class<VR256X>) -> 0(Class<VK4>)) 
			VPMOVM2QZ256rk(1(Class<VK4>) -> 0(Class<VR256X>)) 
		Combined result: 5.04 cycles

-----VPTESTMQZrr-----
	VPTESTMQZrr(1(Class<VR512>) -> 0(Class<VK8>))  [1.04;5.15]
		Dependencies:
			VPCMPQZrrik(2(Class<VR512>) -> 0(Class<VK8>)) 
			VPMOVM2QZrk(1(Class<VK8>) -> 0(Class<VR512>)) 
		Combined result: 6.15 cycles
	VPTESTMQZrr(2(Class<VR512>) -> 0(Class<VK8>))  [1.03;5.14]
		Dependencies:
			VPCMPQZrrik(2(Class<VR512>) -> 0(Class<VK8>)) 
			VPMOVM2QZrk(1(Class<VK8>) -> 0(Class<VR512>)) 
		Combined result: 6.14 cycles

-----VPTESTMQZrrk-----
	VPTESTMQZrrk(2(Class<VR512>) -> 0(Class<VK8>))  [1.05;5.16]
		Dependencies:
			VPCMPQZrrik(2(Class<VR512>) -> 0(Class<VK8>)) 
			VPMOVM2QZrk(1(Class<VK8>) -> 0(Class<VR512>)) 
		Combined result: 6.16 cycles
	VPTESTMQZrrk(3(Class<VR512>) -> 0(Class<VK8>))  [1.06;5.17]
		Dependencies:
			VPCMPQZrrik(2(Class<VR512>) -> 0(Class<VK8>)) 
			VPMOVM2QZrk(1(Class<VK8>) -> 0(Class<VR512>)) 
		Combined result: 6.17 cycles

-----VPTESTMWZ128rr-----
	VPTESTMWZ128rr(1(Class<VR128X>) -> 0(Class<VK8>))  [1;3.02]
		Dependencies:
			VPCMPGTWZ128rr(1(Class<VR128X>) -> 0(Class<VK8>)) 
			VPMOVM2WZ128rk(1(Class<VK8>) -> 0(Class<VR128X>)) 
		Combined result: 4.02 cycles
	VPTESTMWZ128rr(2(Class<VR128X>) -> 0(Class<VK8>))  [1.02;3.04]
		Dependencies:
			VPCMPGTWZ128rr(1(Class<VR128X>) -> 0(Class<VK8>)) 
			VPMOVM2WZ128rk(1(Class<VK8>) -> 0(Class<VR128X>)) 
		Combined result: 4.04 cycles

-----VPTESTMWZ128rrk-----
	VPTESTMWZ128rrk(2(Class<VR128X>) -> 0(Class<VK8>))  [0.998;3.02]
		Dependencies:
			VPCMPGTWZ128rr(1(Class<VR128X>) -> 0(Class<VK8>)) 
			VPMOVM2WZ128rk(1(Class<VK8>) -> 0(Class<VR128X>)) 
		Combined result: 4.02 cycles
	VPTESTMWZ128rrk(3(Class<VR128X>) -> 0(Class<VK8>))  [1.01;3.03]
		Dependencies:
			VPCMPGTWZ128rr(1(Class<VR128X>) -> 0(Class<VK8>)) 
			VPMOVM2WZ128rk(1(Class<VK8>) -> 0(Class<VR128X>)) 
		Combined result: 4.03 cycles

-----VPTESTMWZ256rr-----
	VPTESTMWZ256rr(1(Class<VR256X>) -> 0(Class<VK16>))  [1;4.03]
		Dependencies:
			VPCMPEQWZ256rr(2(Class<VR256X>) -> 0(Class<VK16>)) 
			VPMOVM2WZ256rk(1(Class<VK16>) -> 0(Class<VR256X>)) 
		Combined result: 5.03 cycles
	VPTESTMWZ256rr(2(Class<VR256X>) -> 0(Class<VK16>))  [1;4.03]
		Dependencies:
			VPCMPEQWZ256rr(2(Class<VR256X>) -> 0(Class<VK16>)) 
			VPMOVM2WZ256rk(1(Class<VK16>) -> 0(Class<VR256X>)) 
		Combined result: 5.03 cycles

-----VPTESTMWZ256rrk-----
	VPTESTMWZ256rrk(2(Class<VR256X>) -> 0(Class<VK16>))  [1;4.03]
		Dependencies:
			VPCMPEQWZ256rr(2(Class<VR256X>) -> 0(Class<VK16>)) 
			VPMOVM2WZ256rk(1(Class<VK16>) -> 0(Class<VR256X>)) 
		Combined result: 5.03 cycles
	VPTESTMWZ256rrk(3(Class<VR256X>) -> 0(Class<VK16>))  [1.03;4.06]
		Dependencies:
			VPCMPEQWZ256rr(2(Class<VR256X>) -> 0(Class<VK16>)) 
			VPMOVM2WZ256rk(1(Class<VK16>) -> 0(Class<VR256X>)) 
		Combined result: 5.06 cycles

-----VPTESTMWZrr-----
	VPTESTMWZrr(1(Class<VR512>) -> 0(Class<VK32>))  [1.08;5.22]
		Dependencies:
			VPCMPUWZrrik(3(Class<VR512>) -> 0(Class<VK32>)) 
			VPMOVM2WZrk(1(Class<VK32>) -> 0(Class<VR512>)) 
		Combined result: 6.22 cycles
	VPTESTMWZrr(2(Class<VR512>) -> 0(Class<VK32>))  [1.01;5.16]
		Dependencies:
			VPCMPUWZrrik(3(Class<VR512>) -> 0(Class<VK32>)) 
			VPMOVM2WZrk(1(Class<VK32>) -> 0(Class<VR512>)) 
		Combined result: 6.16 cycles

-----VPTESTMWZrrk-----
	VPTESTMWZrrk(2(Class<VR512>) -> 0(Class<VK32>))  [1;5.14]
		Dependencies:
			VPCMPUWZrrik(3(Class<VR512>) -> 0(Class<VK32>)) 
			VPMOVM2WZrk(1(Class<VK32>) -> 0(Class<VR512>)) 
		Combined result: 6.14 cycles
	VPTESTMWZrrk(3(Class<VR512>) -> 0(Class<VK32>))  [1.04;5.18]
		Dependencies:
			VPCMPUWZrrik(3(Class<VR512>) -> 0(Class<VK32>)) 
			VPMOVM2WZrk(1(Class<VK32>) -> 0(Class<VR512>)) 
		Combined result: 6.18 cycles

-----VPTESTNMBZ128rr-----
	VPTESTNMBZ128rr(1(Class<VR128X>) -> 0(Class<VK16>))  [1.01;3.03]
		Dependencies:
			VPMOVB2MZ128kr(1(Class<VR128X>) -> 0(Class<VK16>)) 
			VPMOVM2BZ128rk(1(Class<VK16>) -> 0(Class<VR128X>)) 
		Combined result: 4.03 cycles
	VPTESTNMBZ128rr(2(Class<VR128X>) -> 0(Class<VK16>))  [1.02;3.04]
		Dependencies:
			VPMOVB2MZ128kr(1(Class<VR128X>) -> 0(Class<VK16>)) 
			VPMOVM2BZ128rk(1(Class<VK16>) -> 0(Class<VR128X>)) 
		Combined result: 4.04 cycles

-----VPTESTNMBZ128rrk-----
	VPTESTNMBZ128rrk(2(Class<VR128X>) -> 0(Class<VK16>))  [1.01;3.03]
		Dependencies:
			VPMOVB2MZ128kr(1(Class<VR128X>) -> 0(Class<VK16>)) 
			VPMOVM2BZ128rk(1(Class<VK16>) -> 0(Class<VR128X>)) 
		Combined result: 4.03 cycles
	VPTESTNMBZ128rrk(3(Class<VR128X>) -> 0(Class<VK16>))  [1.03;3.04]
		Dependencies:
			VPMOVB2MZ128kr(1(Class<VR128X>) -> 0(Class<VK16>)) 
			VPMOVM2BZ128rk(1(Class<VK16>) -> 0(Class<VR128X>)) 
		Combined result: 4.04 cycles

-----VPTESTNMBZ256rr-----
	VPTESTNMBZ256rr(1(Class<VR256X>) -> 0(Class<VK32>))  [1.03;4.05]
		Dependencies:
			VPSHUFBITQMBZ256rr(1(Class<VR256X>) -> 0(Class<VK32>)) 
			VPMOVM2BZ256rk(1(Class<VK32>) -> 0(Class<VR256X>)) 
		Combined result: 5.05 cycles
	VPTESTNMBZ256rr(2(Class<VR256X>) -> 0(Class<VK32>))  [1.05;4.07]
		Dependencies:
			VPSHUFBITQMBZ256rr(1(Class<VR256X>) -> 0(Class<VK32>)) 
			VPMOVM2BZ256rk(1(Class<VK32>) -> 0(Class<VR256X>)) 
		Combined result: 5.07 cycles

-----VPTESTNMBZ256rrk-----
	VPTESTNMBZ256rrk(2(Class<VR256X>) -> 0(Class<VK32>))  [1.02;4.04]
		Dependencies:
			VPSHUFBITQMBZ256rr(1(Class<VR256X>) -> 0(Class<VK32>)) 
			VPMOVM2BZ256rk(1(Class<VK32>) -> 0(Class<VR256X>)) 
		Combined result: 5.04 cycles
	VPTESTNMBZ256rrk(3(Class<VR256X>) -> 0(Class<VK32>))  [1.02;4.04]
		Dependencies:
			VPSHUFBITQMBZ256rr(1(Class<VR256X>) -> 0(Class<VK32>)) 
			VPMOVM2BZ256rk(1(Class<VK32>) -> 0(Class<VR256X>)) 
		Combined result: 5.04 cycles

-----VPTESTNMBZrr-----
	VPTESTNMBZrr(1(Class<VR512>) -> 0(Class<VK64>))  [0.986;4.14]
		Dependencies:
			VPTESTNMBZrr(1(Class<VR512>) -> 0(Class<VK64>)) 
			VPMOVM2BZrk(1(Class<VK64>) -> 0(Class<VR512>)) 
		Combined result: 5.14 cycles
	VPTESTNMBZrr(2(Class<VR512>) -> 0(Class<VK64>))  [1.01;4.16]
		Dependencies:
			VPTESTNMBZrr(1(Class<VR512>) -> 0(Class<VK64>)) 
			VPMOVM2BZrk(1(Class<VK64>) -> 0(Class<VR512>)) 
		Combined result: 5.16 cycles

-----VPTESTNMBZrrk-----
	VPTESTNMBZrrk(2(Class<VR512>) -> 0(Class<VK64>))  [0.992;4.15]
		Dependencies:
			VPTESTNMBZrr(1(Class<VR512>) -> 0(Class<VK64>)) 
			VPMOVM2BZrk(1(Class<VK64>) -> 0(Class<VR512>)) 
		Combined result: 5.15 cycles
	VPTESTNMBZrrk(3(Class<VR512>) -> 0(Class<VK64>))  [1;4.16]
		Dependencies:
			VPTESTNMBZrr(1(Class<VR512>) -> 0(Class<VK64>)) 
			VPMOVM2BZrk(1(Class<VK64>) -> 0(Class<VR512>)) 
		Combined result: 5.16 cycles

-----VPTESTNMDZ128rr-----
	VPTESTNMDZ128rr(1(Class<VR128X>) -> 0(Class<VK4>))  [1.04;3.07]
		Dependencies:
			VPCMPEQDZ128rr(2(Class<VR128X>) -> 0(Class<VK4>)) 
			VPMOVM2DZ128rk(1(Class<VK4>) -> 0(Class<VR128X>)) 
		Combined result: 4.07 cycles
	VPTESTNMDZ128rr(2(Class<VR128X>) -> 0(Class<VK4>))  [1;3.03]
		Dependencies:
			VPCMPEQDZ128rr(2(Class<VR128X>) -> 0(Class<VK4>)) 
			VPMOVM2DZ128rk(1(Class<VK4>) -> 0(Class<VR128X>)) 
		Combined result: 4.03 cycles

-----VPTESTNMDZ128rrk-----
	VPTESTNMDZ128rrk(2(Class<VR128X>) -> 0(Class<VK4>))  [1.04;3.07]
		Dependencies:
			VPCMPEQDZ128rr(2(Class<VR128X>) -> 0(Class<VK4>)) 
			VPMOVM2DZ128rk(1(Class<VK4>) -> 0(Class<VR128X>)) 
		Combined result: 4.07 cycles
	VPTESTNMDZ128rrk(3(Class<VR128X>) -> 0(Class<VK4>))  [0.991;3.02]
		Dependencies:
			VPCMPEQDZ128rr(2(Class<VR128X>) -> 0(Class<VK4>)) 
			VPMOVM2DZ128rk(1(Class<VK4>) -> 0(Class<VR128X>)) 
		Combined result: 4.02 cycles

-----VPTESTNMDZ256rr-----
	VPTESTNMDZ256rr(1(Class<VR256X>) -> 0(Class<VK8>))  [1.01;4.05]
		Dependencies:
			VCMPPSZ256rri(1(Class<VR256X>) -> 0(Class<VK8>)) 
			VPMOVM2DZ256rk(1(Class<VK8>) -> 0(Class<VR256X>)) 
		Combined result: 5.05 cycles
	VPTESTNMDZ256rr(2(Class<VR256X>) -> 0(Class<VK8>))  [1.01;4.04]
		Dependencies:
			VCMPPSZ256rri(1(Class<VR256X>) -> 0(Class<VK8>)) 
			VPMOVM2DZ256rk(1(Class<VK8>) -> 0(Class<VR256X>)) 
		Combined result: 5.04 cycles

-----VPTESTNMDZ256rrk-----
	VPTESTNMDZ256rrk(2(Class<VR256X>) -> 0(Class<VK8>))  [0.996;4.04]
		Dependencies:
			VCMPPSZ256rri(1(Class<VR256X>) -> 0(Class<VK8>)) 
			VPMOVM2DZ256rk(1(Class<VK8>) -> 0(Class<VR256X>)) 
		Combined result: 5.04 cycles
	VPTESTNMDZ256rrk(3(Class<VR256X>) -> 0(Class<VK8>))  [1;4.04]
		Dependencies:
			VCMPPSZ256rri(1(Class<VR256X>) -> 0(Class<VK8>)) 
			VPMOVM2DZ256rk(1(Class<VK8>) -> 0(Class<VR256X>)) 
		Combined result: 5.04 cycles

-----VPTESTNMDZrr-----
	VPTESTNMDZrr(1(Class<VR512>) -> 0(Class<VK16>))  [1.01;5.14]
		Dependencies:
			VPTESTNMDZrr(2(Class<VR512>) -> 0(Class<VK16>)) 
			VPMOVM2DZrk(1(Class<VK16>) -> 0(Class<VR512>)) 
		Combined result: 6.14 cycles
	VPTESTNMDZrr(2(Class<VR512>) -> 0(Class<VK16>))  [1.05;5.18]
		Dependencies:
			VPTESTNMDZrr(2(Class<VR512>) -> 0(Class<VK16>)) 
			VPMOVM2DZrk(1(Class<VK16>) -> 0(Class<VR512>)) 
		Combined result: 6.18 cycles

-----VPTESTNMDZrrk-----
	VPTESTNMDZrrk(2(Class<VR512>) -> 0(Class<VK16>))  [0.989;5.12]
		Dependencies:
			VPTESTNMDZrr(2(Class<VR512>) -> 0(Class<VK16>)) 
			VPMOVM2DZrk(1(Class<VK16>) -> 0(Class<VR512>)) 
		Combined result: 6.12 cycles
	VPTESTNMDZrrk(3(Class<VR512>) -> 0(Class<VK16>))  [1;5.13]
		Dependencies:
			VPTESTNMDZrr(2(Class<VR512>) -> 0(Class<VK16>)) 
			VPMOVM2DZrk(1(Class<VK16>) -> 0(Class<VR512>)) 
		Combined result: 6.13 cycles

-----VPTESTNMQZ128rr-----
	VPTESTNMQZ128rr(1(Class<VR128X>) -> 0(Class<VK2>))  [1.01;3.03]
		Dependencies:
			VPCMPQZ128rri(2(Class<VR128X>) -> 0(Class<VK2>)) 
			VPMOVM2QZ128rk(1(Class<VK2>) -> 0(Class<VR128X>)) 
		Combined result: 4.03 cycles
	VPTESTNMQZ128rr(2(Class<VR128X>) -> 0(Class<VK2>))  [1.02;3.04]
		Dependencies:
			VPCMPQZ128rri(2(Class<VR128X>) -> 0(Class<VK2>)) 
			VPMOVM2QZ128rk(1(Class<VK2>) -> 0(Class<VR128X>)) 
		Combined result: 4.04 cycles

-----VPTESTNMQZ128rrk-----
	VPTESTNMQZ128rrk(2(Class<VR128X>) -> 0(Class<VK2>))  [1.01;3.03]
		Dependencies:
			VPCMPQZ128rri(2(Class<VR128X>) -> 0(Class<VK2>)) 
			VPMOVM2QZ128rk(1(Class<VK2>) -> 0(Class<VR128X>)) 
		Combined result: 4.03 cycles
	VPTESTNMQZ128rrk(3(Class<VR128X>) -> 0(Class<VK2>))  [1.01;3.03]
		Dependencies:
			VPCMPQZ128rri(2(Class<VR128X>) -> 0(Class<VK2>)) 
			VPMOVM2QZ128rk(1(Class<VK2>) -> 0(Class<VR128X>)) 
		Combined result: 4.03 cycles

-----VPTESTNMQZ256rr-----
	VPTESTNMQZ256rr(1(Class<VR256X>) -> 0(Class<VK4>))  [1.02;4.04]
		Dependencies:
			VPTESTNMQZ256rrk(2(Class<VR256X>) -> 0(Class<VK4>)) 
			VPMOVM2QZ256rk(1(Class<VK4>) -> 0(Class<VR256X>)) 
		Combined result: 5.04 cycles
	VPTESTNMQZ256rr(2(Class<VR256X>) -> 0(Class<VK4>))  [1.02;4.05]
		Dependencies:
			VPTESTNMQZ256rrk(2(Class<VR256X>) -> 0(Class<VK4>)) 
			VPMOVM2QZ256rk(1(Class<VK4>) -> 0(Class<VR256X>)) 
		Combined result: 5.05 cycles

-----VPTESTNMQZ256rrk-----
	VPTESTNMQZ256rrk(2(Class<VR256X>) -> 0(Class<VK4>))  [1.01;4.04]
		Dependencies:
			VPTESTNMQZ256rrk(2(Class<VR256X>) -> 0(Class<VK4>)) 
			VPMOVM2QZ256rk(1(Class<VK4>) -> 0(Class<VR256X>)) 
		Combined result: 5.04 cycles
	VPTESTNMQZ256rrk(3(Class<VR256X>) -> 0(Class<VK4>))  [1;4.03]
		Dependencies:
			VPTESTNMQZ256rrk(2(Class<VR256X>) -> 0(Class<VK4>)) 
			VPMOVM2QZ256rk(1(Class<VK4>) -> 0(Class<VR256X>)) 
		Combined result: 5.03 cycles

-----VPTESTNMQZrr-----
	VPTESTNMQZrr(1(Class<VR512>) -> 0(Class<VK8>))  [1.11;5.21]
		Dependencies:
			VPCMPQZrrik(2(Class<VR512>) -> 0(Class<VK8>)) 
			VPMOVM2QZrk(1(Class<VK8>) -> 0(Class<VR512>)) 
		Combined result: 6.21 cycles
	VPTESTNMQZrr(2(Class<VR512>) -> 0(Class<VK8>))  [1.05;5.16]
		Dependencies:
			VPCMPQZrrik(2(Class<VR512>) -> 0(Class<VK8>)) 
			VPMOVM2QZrk(1(Class<VK8>) -> 0(Class<VR512>)) 
		Combined result: 6.16 cycles

-----VPTESTNMQZrrk-----
	VPTESTNMQZrrk(2(Class<VR512>) -> 0(Class<VK8>))  [1.05;5.16]
		Dependencies:
			VPCMPQZrrik(2(Class<VR512>) -> 0(Class<VK8>)) 
			VPMOVM2QZrk(1(Class<VK8>) -> 0(Class<VR512>)) 
		Combined result: 6.16 cycles
	VPTESTNMQZrrk(3(Class<VR512>) -> 0(Class<VK8>))  [1.09;5.2]
		Dependencies:
			VPCMPQZrrik(2(Class<VR512>) -> 0(Class<VK8>)) 
			VPMOVM2QZrk(1(Class<VK8>) -> 0(Class<VR512>)) 
		Combined result: 6.2 cycles

-----VPTESTNMWZ128rr-----
	VPTESTNMWZ128rr(1(Class<VR128X>) -> 0(Class<VK8>))  [1.02;3.04]
		Dependencies:
			VPCMPGTWZ128rr(1(Class<VR128X>) -> 0(Class<VK8>)) 
			VPMOVM2WZ128rk(1(Class<VK8>) -> 0(Class<VR128X>)) 
		Combined result: 4.04 cycles
	VPTESTNMWZ128rr(2(Class<VR128X>) -> 0(Class<VK8>))  [1.01;3.03]
		Dependencies:
			VPCMPGTWZ128rr(1(Class<VR128X>) -> 0(Class<VK8>)) 
			VPMOVM2WZ128rk(1(Class<VK8>) -> 0(Class<VR128X>)) 
		Combined result: 4.03 cycles

-----VPTESTNMWZ128rrk-----
	VPTESTNMWZ128rrk(2(Class<VR128X>) -> 0(Class<VK8>))  [1.04;3.05]
		Dependencies:
			VPCMPGTWZ128rr(1(Class<VR128X>) -> 0(Class<VK8>)) 
			VPMOVM2WZ128rk(1(Class<VK8>) -> 0(Class<VR128X>)) 
		Combined result: 4.05 cycles
	VPTESTNMWZ128rrk(3(Class<VR128X>) -> 0(Class<VK8>))  [1.01;3.03]
		Dependencies:
			VPCMPGTWZ128rr(1(Class<VR128X>) -> 0(Class<VK8>)) 
			VPMOVM2WZ128rk(1(Class<VK8>) -> 0(Class<VR128X>)) 
		Combined result: 4.03 cycles

-----VPTESTNMWZ256rr-----
	VPTESTNMWZ256rr(1(Class<VR256X>) -> 0(Class<VK16>))  [1.03;4.06]
		Dependencies:
			VPCMPEQWZ256rr(2(Class<VR256X>) -> 0(Class<VK16>)) 
			VPMOVM2WZ256rk(1(Class<VK16>) -> 0(Class<VR256X>)) 
		Combined result: 5.06 cycles
	VPTESTNMWZ256rr(2(Class<VR256X>) -> 0(Class<VK16>))  [1.01;4.04]
		Dependencies:
			VPCMPEQWZ256rr(2(Class<VR256X>) -> 0(Class<VK16>)) 
			VPMOVM2WZ256rk(1(Class<VK16>) -> 0(Class<VR256X>)) 
		Combined result: 5.04 cycles

-----VPTESTNMWZ256rrk-----
	VPTESTNMWZ256rrk(2(Class<VR256X>) -> 0(Class<VK16>))  [1.01;4.04]
		Dependencies:
			VPCMPEQWZ256rr(2(Class<VR256X>) -> 0(Class<VK16>)) 
			VPMOVM2WZ256rk(1(Class<VK16>) -> 0(Class<VR256X>)) 
		Combined result: 5.04 cycles
	VPTESTNMWZ256rrk(3(Class<VR256X>) -> 0(Class<VK16>))  [1.03;4.05]
		Dependencies:
			VPCMPEQWZ256rr(2(Class<VR256X>) -> 0(Class<VK16>)) 
			VPMOVM2WZ256rk(1(Class<VK16>) -> 0(Class<VR256X>)) 
		Combined result: 5.05 cycles

-----VPTESTNMWZrr-----
	VPTESTNMWZrr(1(Class<VR512>) -> 0(Class<VK32>))  [1.03;5.17]
		Dependencies:
			VPCMPUWZrrik(3(Class<VR512>) -> 0(Class<VK32>)) 
			VPMOVM2WZrk(1(Class<VK32>) -> 0(Class<VR512>)) 
		Combined result: 6.17 cycles
	VPTESTNMWZrr(2(Class<VR512>) -> 0(Class<VK32>))  [1;5.14]
		Dependencies:
			VPCMPUWZrrik(3(Class<VR512>) -> 0(Class<VK32>)) 
			VPMOVM2WZrk(1(Class<VK32>) -> 0(Class<VR512>)) 
		Combined result: 6.14 cycles

-----VPTESTNMWZrrk-----
	VPTESTNMWZrrk(2(Class<VR512>) -> 0(Class<VK32>))  [1.05;5.19]
		Dependencies:
			VPCMPUWZrrik(3(Class<VR512>) -> 0(Class<VK32>)) 
			VPMOVM2WZrk(1(Class<VK32>) -> 0(Class<VR512>)) 
		Combined result: 6.19 cycles
	VPTESTNMWZrrk(3(Class<VR512>) -> 0(Class<VK32>))  [1.02;5.17]
		Dependencies:
			VPCMPUWZrrik(3(Class<VR512>) -> 0(Class<VK32>)) 
			VPMOVM2WZrk(1(Class<VK32>) -> 0(Class<VR512>)) 
		Combined result: 6.17 cycles

-----VPTESTYrr-----
	VPTESTYrr(0(Class<VR256>) -> impl(Reg<EFLAGS>))  [0.994;-0.00625]
		Dependencies:
			CMOV_VR256(impl(Reg<EFLAGS>) -> 0(Class<VR256>)) 
			VPTESTYrr(0(Class<VR256>) -> impl(Reg<EFLAGS>)) 
		Combined result: 1.01 cycles
	VPTESTYrr(1(Class<VR256>) -> impl(Reg<EFLAGS>))  [0.984;-0.0163]
		Dependencies:
			CMOV_VR256(impl(Reg<EFLAGS>) -> 0(Class<VR256>)) 
			VPTESTYrr(0(Class<VR256>) -> impl(Reg<EFLAGS>)) 
		Combined result: 1 cycles

-----VPTESTrr-----
	VPTESTrr(0(Class<VR128>) -> impl(Reg<EFLAGS>))  [0.982;-0.0112]
		Dependencies:
			CMOV_VR128(impl(Reg<EFLAGS>) -> 0(Class<VR128>)) 
			COMISDrr_Int(0(Class<VR128>) -> impl(Reg<EFLAGS>)) 
		Combined result: 1 cycles
	VPTESTrr(1(Class<VR128>) -> impl(Reg<EFLAGS>))  [0.984;-0.01]
		Dependencies:
			CMOV_VR128(impl(Reg<EFLAGS>) -> 0(Class<VR128>)) 
			COMISDrr_Int(0(Class<VR128>) -> impl(Reg<EFLAGS>)) 
		Combined result: 1 cycles

-----VPUNPCKHBWYrr-----
	VPUNPCKHBWYrr(1(Class<VR256>) -> 0(Class<VR256>))  [1;1]
		 Successful, latency: 1
	VPUNPCKHBWYrr(2(Class<VR256>) -> 0(Class<VR256>))  [1;1]
		 Successful, latency: 1

-----VPUNPCKHBWZ128rr-----
	VPUNPCKHBWZ128rr(1(Class<VR128X>) -> 0(Class<VR128X>))  [1.01;1.01]
		 Successful, latency: 1.01
	VPUNPCKHBWZ128rr(2(Class<VR128X>) -> 0(Class<VR128X>))  [1;1]
		 Successful, latency: 1

-----VPUNPCKHBWZ128rrk-----
	VPUNPCKHBWZ128rrk(1(Class<VR128X>) -> 0(Class<VR128X>))  [1.01;1.01]
		 Successful, latency: 1.01
	VPUNPCKHBWZ128rrk(3(Class<VR128X>) -> 0(Class<VR128X>))  [1.01;1.01]
		 Successful, latency: 1.01
	VPUNPCKHBWZ128rrk(4(Class<VR128X>) -> 0(Class<VR128X>))  [1;1]
		 Successful, latency: 1

-----VPUNPCKHBWZ128rrkz-----
	VPUNPCKHBWZ128rrkz(2(Class<VR128X>) -> 0(Class<VR128X>))  [1.02;1.02]
		 Successful, latency: 1.02
	VPUNPCKHBWZ128rrkz(3(Class<VR128X>) -> 0(Class<VR128X>))  [1.01;1.01]
		 Successful, latency: 1.01

-----VPUNPCKHBWZ256rr-----
	VPUNPCKHBWZ256rr(1(Class<VR256X>) -> 0(Class<VR256X>))  [1.02;1.02]
		 Successful, latency: 1.02
	VPUNPCKHBWZ256rr(2(Class<VR256X>) -> 0(Class<VR256X>))  [1.02;1.02]
		 Successful, latency: 1.02

-----VPUNPCKHBWZ256rrk-----
	VPUNPCKHBWZ256rrk(1(Class<VR256X>) -> 0(Class<VR256X>))  [1.02;1.02]
		 Successful, latency: 1.02
	VPUNPCKHBWZ256rrk(3(Class<VR256X>) -> 0(Class<VR256X>))  [1.01;1.01]
		 Successful, latency: 1.01
	VPUNPCKHBWZ256rrk(4(Class<VR256X>) -> 0(Class<VR256X>))  [1.02;1.02]
		 Successful, latency: 1.02

-----VPUNPCKHBWZ256rrkz-----
	VPUNPCKHBWZ256rrkz(2(Class<VR256X>) -> 0(Class<VR256X>))  [1;1]
		 Successful, latency: 1
	VPUNPCKHBWZ256rrkz(3(Class<VR256X>) -> 0(Class<VR256X>))  [1.02;1.02]
		 Successful, latency: 1.02

-----VPUNPCKHBWZrr-----
	VPUNPCKHBWZrr(1(Class<VR512>) -> 0(Class<VR512>))  [1.15;1.15]
		 Successful, latency: 1.15
	VPUNPCKHBWZrr(2(Class<VR512>) -> 0(Class<VR512>))  [1.13;1.13]
		 Successful, latency: 1.13

-----VPUNPCKHBWZrrk-----
	VPUNPCKHBWZrrk(1(Class<VR512>) -> 0(Class<VR512>))  [1.14;1.14]
		 Successful, latency: 1.14
	VPUNPCKHBWZrrk(3(Class<VR512>) -> 0(Class<VR512>))  [1.19;1.19]
		 Successful, latency: 1.19
	VPUNPCKHBWZrrk(4(Class<VR512>) -> 0(Class<VR512>))  [1.14;1.14]
		 Successful, latency: 1.14

-----VPUNPCKHBWZrrkz-----
	VPUNPCKHBWZrrkz(2(Class<VR512>) -> 0(Class<VR512>))  [1.14;1.14]
		 Successful, latency: 1.14
	VPUNPCKHBWZrrkz(3(Class<VR512>) -> 0(Class<VR512>))  [1.06;1.06]
		 Successful, latency: 1.06

-----VPUNPCKHBWrr-----
	VPUNPCKHBWrr(1(Class<VR128>) -> 0(Class<VR128>))  [1.01;1.01]
		 Successful, latency: 1.01
	VPUNPCKHBWrr(2(Class<VR128>) -> 0(Class<VR128>))  [1;1]
		 Successful, latency: 1

-----VPUNPCKHDQYrr-----
	VPUNPCKHDQYrr(1(Class<VR256>) -> 0(Class<VR256>))  [1;1]
		 Successful, latency: 1
	VPUNPCKHDQYrr(2(Class<VR256>) -> 0(Class<VR256>))  [1.01;1.01]
		 Successful, latency: 1.01

-----VPUNPCKHDQZ128rr-----
	VPUNPCKHDQZ128rr(1(Class<VR128X>) -> 0(Class<VR128X>))  [1;1]
		 Successful, latency: 1
	VPUNPCKHDQZ128rr(2(Class<VR128X>) -> 0(Class<VR128X>))  [1;1]
		 Successful, latency: 1

-----VPUNPCKHDQZ128rrk-----
	VPUNPCKHDQZ128rrk(1(Class<VR128X>) -> 0(Class<VR128X>))  [1.01;1.01]
		 Successful, latency: 1.01
	VPUNPCKHDQZ128rrk(3(Class<VR128X>) -> 0(Class<VR128X>))  [1;1]
		 Successful, latency: 1
	VPUNPCKHDQZ128rrk(4(Class<VR128X>) -> 0(Class<VR128X>))  [1;1]
		 Successful, latency: 1

-----VPUNPCKHDQZ128rrkz-----
	VPUNPCKHDQZ128rrkz(2(Class<VR128X>) -> 0(Class<VR128X>))  [1;1]
		 Successful, latency: 1
	VPUNPCKHDQZ128rrkz(3(Class<VR128X>) -> 0(Class<VR128X>))  [1.01;1.01]
		 Successful, latency: 1.01

-----VPUNPCKHDQZ256rr-----
	VPUNPCKHDQZ256rr(1(Class<VR256X>) -> 0(Class<VR256X>))  [1;1]
		 Successful, latency: 1
	VPUNPCKHDQZ256rr(2(Class<VR256X>) -> 0(Class<VR256X>))  [1.01;1.01]
		 Successful, latency: 1.01

-----VPUNPCKHDQZ256rrk-----
	VPUNPCKHDQZ256rrk(1(Class<VR256X>) -> 0(Class<VR256X>))  [1.01;1.01]
		 Successful, latency: 1.01
	VPUNPCKHDQZ256rrk(3(Class<VR256X>) -> 0(Class<VR256X>))  [1.01;1.01]
		 Successful, latency: 1.01
	VPUNPCKHDQZ256rrk(4(Class<VR256X>) -> 0(Class<VR256X>))  [1;1]
		 Successful, latency: 1

-----VPUNPCKHDQZ256rrkz-----
	VPUNPCKHDQZ256rrkz(2(Class<VR256X>) -> 0(Class<VR256X>))  [1;1]
		 Successful, latency: 1
	VPUNPCKHDQZ256rrkz(3(Class<VR256X>) -> 0(Class<VR256X>))  [1.01;1.01]
		 Successful, latency: 1.01

-----VPUNPCKHDQZrr-----
	VPUNPCKHDQZrr(1(Class<VR512>) -> 0(Class<VR512>))  [1.16;1.16]
		 Successful, latency: 1.16
	VPUNPCKHDQZrr(2(Class<VR512>) -> 0(Class<VR512>))  [1.29;1.29]
		 Successful, latency: 1.29

-----VPUNPCKHDQZrrk-----
	VPUNPCKHDQZrrk(1(Class<VR512>) -> 0(Class<VR512>))  [1.16;1.16]
		 Successful, latency: 1.16
	VPUNPCKHDQZrrk(3(Class<VR512>) -> 0(Class<VR512>))  [1.14;1.14]
		 Successful, latency: 1.14
	VPUNPCKHDQZrrk(4(Class<VR512>) -> 0(Class<VR512>))  [1.09;1.09]
		 Successful, latency: 1.09

-----VPUNPCKHDQZrrkz-----
	VPUNPCKHDQZrrkz(2(Class<VR512>) -> 0(Class<VR512>))  [1.19;1.19]
		 Successful, latency: 1.19
	VPUNPCKHDQZrrkz(3(Class<VR512>) -> 0(Class<VR512>))  [1.15;1.15]
		 Successful, latency: 1.15

-----VPUNPCKHDQrr-----
	VPUNPCKHDQrr(1(Class<VR128>) -> 0(Class<VR128>))  [1.02;1.02]
		 Successful, latency: 1.02
	VPUNPCKHDQrr(2(Class<VR128>) -> 0(Class<VR128>))  [1.01;1.01]
		 Successful, latency: 1.01

-----VPUNPCKHQDQYrr-----
	VPUNPCKHQDQYrr(1(Class<VR256>) -> 0(Class<VR256>))  [1.01;1.01]
		 Successful, latency: 1.01
	VPUNPCKHQDQYrr(2(Class<VR256>) -> 0(Class<VR256>))  [1;1]
		 Successful, latency: 1

-----VPUNPCKHQDQZ128rr-----
	VPUNPCKHQDQZ128rr(1(Class<VR128X>) -> 0(Class<VR128X>))  [1;1]
		 Successful, latency: 1
	VPUNPCKHQDQZ128rr(2(Class<VR128X>) -> 0(Class<VR128X>))  [1;1]
		 Successful, latency: 1

-----VPUNPCKHQDQZ128rrk-----
	VPUNPCKHQDQZ128rrk(1(Class<VR128X>) -> 0(Class<VR128X>))  [1;1]
		 Successful, latency: 1
	VPUNPCKHQDQZ128rrk(3(Class<VR128X>) -> 0(Class<VR128X>))  [1.01;1.01]
		 Successful, latency: 1.01
	VPUNPCKHQDQZ128rrk(4(Class<VR128X>) -> 0(Class<VR128X>))  [1.01;1.01]
		 Successful, latency: 1.01

-----VPUNPCKHQDQZ128rrkz-----
	VPUNPCKHQDQZ128rrkz(2(Class<VR128X>) -> 0(Class<VR128X>))  [1.01;1.01]
		 Successful, latency: 1.01
	VPUNPCKHQDQZ128rrkz(3(Class<VR128X>) -> 0(Class<VR128X>))  [1;1]
		 Successful, latency: 1

-----VPUNPCKHQDQZ256rr-----
	VPUNPCKHQDQZ256rr(1(Class<VR256X>) -> 0(Class<VR256X>))  [1.01;1.01]
		 Successful, latency: 1.01
	VPUNPCKHQDQZ256rr(2(Class<VR256X>) -> 0(Class<VR256X>))  [1;1]
		 Successful, latency: 1

-----VPUNPCKHQDQZ256rrk-----
	VPUNPCKHQDQZ256rrk(1(Class<VR256X>) -> 0(Class<VR256X>))  [1;1]
		 Successful, latency: 1
	VPUNPCKHQDQZ256rrk(3(Class<VR256X>) -> 0(Class<VR256X>))  [1.01;1.01]
		 Successful, latency: 1.01
	VPUNPCKHQDQZ256rrk(4(Class<VR256X>) -> 0(Class<VR256X>))  [1;1]
		 Successful, latency: 1

-----VPUNPCKHQDQZ256rrkz-----
	VPUNPCKHQDQZ256rrkz(2(Class<VR256X>) -> 0(Class<VR256X>))  [1.01;1.01]
		 Successful, latency: 1.01
	VPUNPCKHQDQZ256rrkz(3(Class<VR256X>) -> 0(Class<VR256X>))  [0.999;0.999]
		 Successful, latency: 0.999

-----VPUNPCKHQDQZrr-----
	VPUNPCKHQDQZrr(1(Class<VR512>) -> 0(Class<VR512>))  [1.07;1.07]
		 Successful, latency: 1.07
	VPUNPCKHQDQZrr(2(Class<VR512>) -> 0(Class<VR512>))  [1.07;1.07]
		 Successful, latency: 1.07

-----VPUNPCKHQDQZrrk-----
	VPUNPCKHQDQZrrk(1(Class<VR512>) -> 0(Class<VR512>))  [1.14;1.14]
		 Successful, latency: 1.14
	VPUNPCKHQDQZrrk(3(Class<VR512>) -> 0(Class<VR512>))  [1.15;1.15]
		 Successful, latency: 1.15
	VPUNPCKHQDQZrrk(4(Class<VR512>) -> 0(Class<VR512>))  [1.16;1.16]
		 Successful, latency: 1.16

-----VPUNPCKHQDQZrrkz-----
	VPUNPCKHQDQZrrkz(2(Class<VR512>) -> 0(Class<VR512>))  [1.17;1.17]
		 Successful, latency: 1.17
	VPUNPCKHQDQZrrkz(3(Class<VR512>) -> 0(Class<VR512>))  [1.09;1.09]
		 Successful, latency: 1.09

-----VPUNPCKHQDQrr-----
	VPUNPCKHQDQrr(1(Class<VR128>) -> 0(Class<VR128>))  [1.01;1.01]
		 Successful, latency: 1.01
	VPUNPCKHQDQrr(2(Class<VR128>) -> 0(Class<VR128>))  [1;1]
		 Successful, latency: 1

-----VPUNPCKHWDYrr-----
	VPUNPCKHWDYrr(1(Class<VR256>) -> 0(Class<VR256>))  [0.999;0.999]
		 Successful, latency: 0.999
	VPUNPCKHWDYrr(2(Class<VR256>) -> 0(Class<VR256>))  [1.01;1.01]
		 Successful, latency: 1.01

-----VPUNPCKHWDZ128rr-----
	VPUNPCKHWDZ128rr(1(Class<VR128X>) -> 0(Class<VR128X>))  [1.01;1.01]
		 Successful, latency: 1.01
	VPUNPCKHWDZ128rr(2(Class<VR128X>) -> 0(Class<VR128X>))  [1.02;1.02]
		 Successful, latency: 1.02

-----VPUNPCKHWDZ128rrk-----
	VPUNPCKHWDZ128rrk(1(Class<VR128X>) -> 0(Class<VR128X>))  [1.01;1.01]
		 Successful, latency: 1.01
	VPUNPCKHWDZ128rrk(3(Class<VR128X>) -> 0(Class<VR128X>))  [1.01;1.01]
		 Successful, latency: 1.01
	VPUNPCKHWDZ128rrk(4(Class<VR128X>) -> 0(Class<VR128X>))  [1;1]
		 Successful, latency: 1

-----VPUNPCKHWDZ128rrkz-----
	VPUNPCKHWDZ128rrkz(2(Class<VR128X>) -> 0(Class<VR128X>))  [1.01;1.01]
		 Successful, latency: 1.01
	VPUNPCKHWDZ128rrkz(3(Class<VR128X>) -> 0(Class<VR128X>))  [1.01;1.01]
		 Successful, latency: 1.01

-----VPUNPCKHWDZ256rr-----
	VPUNPCKHWDZ256rr(1(Class<VR256X>) -> 0(Class<VR256X>))  [1.01;1.01]
		 Successful, latency: 1.01
	VPUNPCKHWDZ256rr(2(Class<VR256X>) -> 0(Class<VR256X>))  [1.01;1.01]
		 Successful, latency: 1.01

-----VPUNPCKHWDZ256rrk-----
	VPUNPCKHWDZ256rrk(1(Class<VR256X>) -> 0(Class<VR256X>))  [1;1]
		 Successful, latency: 1
	VPUNPCKHWDZ256rrk(3(Class<VR256X>) -> 0(Class<VR256X>))  [1.01;1.01]
		 Successful, latency: 1.01
	VPUNPCKHWDZ256rrk(4(Class<VR256X>) -> 0(Class<VR256X>))  [1;1]
		 Successful, latency: 1

-----VPUNPCKHWDZ256rrkz-----
	VPUNPCKHWDZ256rrkz(2(Class<VR256X>) -> 0(Class<VR256X>))  [1.01;1.01]
		 Successful, latency: 1.01
	VPUNPCKHWDZ256rrkz(3(Class<VR256X>) -> 0(Class<VR256X>))  [1;1]
		 Successful, latency: 1

-----VPUNPCKHWDZrr-----
	VPUNPCKHWDZrr(1(Class<VR512>) -> 0(Class<VR512>))  [1.15;1.15]
		 Successful, latency: 1.15
	VPUNPCKHWDZrr(2(Class<VR512>) -> 0(Class<VR512>))  [1.16;1.16]
		 Successful, latency: 1.16

-----VPUNPCKHWDZrrk-----
	VPUNPCKHWDZrrk(1(Class<VR512>) -> 0(Class<VR512>))  [1.15;1.15]
		 Successful, latency: 1.15
	VPUNPCKHWDZrrk(3(Class<VR512>) -> 0(Class<VR512>))  [1.17;1.17]
		 Successful, latency: 1.17
	VPUNPCKHWDZrrk(4(Class<VR512>) -> 0(Class<VR512>))  [1.16;1.16]
		 Successful, latency: 1.16

-----VPUNPCKHWDZrrkz-----
	VPUNPCKHWDZrrkz(2(Class<VR512>) -> 0(Class<VR512>))  [1.16;1.16]
		 Successful, latency: 1.16
	VPUNPCKHWDZrrkz(3(Class<VR512>) -> 0(Class<VR512>))  [1.23;1.23]
		 Successful, latency: 1.23

-----VPUNPCKHWDrr-----
	VPUNPCKHWDrr(1(Class<VR128>) -> 0(Class<VR128>))  [1;1]
		 Successful, latency: 1
	VPUNPCKHWDrr(2(Class<VR128>) -> 0(Class<VR128>))  [1.01;1.01]
		 Successful, latency: 1.01

-----VPUNPCKLBWYrr-----
	VPUNPCKLBWYrr(1(Class<VR256>) -> 0(Class<VR256>))  [1;1]
		 Successful, latency: 1
	VPUNPCKLBWYrr(2(Class<VR256>) -> 0(Class<VR256>))  [1;1]
		 Successful, latency: 1

-----VPUNPCKLBWZ128rr-----
	VPUNPCKLBWZ128rr(1(Class<VR128X>) -> 0(Class<VR128X>))  [1.02;1.02]
		 Successful, latency: 1.02
	VPUNPCKLBWZ128rr(2(Class<VR128X>) -> 0(Class<VR128X>))  [1;1]
		 Successful, latency: 1

-----VPUNPCKLBWZ128rrk-----
	VPUNPCKLBWZ128rrk(1(Class<VR128X>) -> 0(Class<VR128X>))  [1.01;1.01]
		 Successful, latency: 1.01
	VPUNPCKLBWZ128rrk(3(Class<VR128X>) -> 0(Class<VR128X>))  [1.01;1.01]
		 Successful, latency: 1.01
	VPUNPCKLBWZ128rrk(4(Class<VR128X>) -> 0(Class<VR128X>))  [1.02;1.02]
		 Successful, latency: 1.02

-----VPUNPCKLBWZ128rrkz-----
	VPUNPCKLBWZ128rrkz(2(Class<VR128X>) -> 0(Class<VR128X>))  [1;1]
		 Successful, latency: 1
	VPUNPCKLBWZ128rrkz(3(Class<VR128X>) -> 0(Class<VR128X>))  [1;1]
		 Successful, latency: 1

-----VPUNPCKLBWZ256rr-----
	VPUNPCKLBWZ256rr(1(Class<VR256X>) -> 0(Class<VR256X>))  [1.01;1.01]
		 Successful, latency: 1.01
	VPUNPCKLBWZ256rr(2(Class<VR256X>) -> 0(Class<VR256X>))  [1;1]
		 Successful, latency: 1

-----VPUNPCKLBWZ256rrk-----
	VPUNPCKLBWZ256rrk(1(Class<VR256X>) -> 0(Class<VR256X>))  [1.01;1.01]
		 Successful, latency: 1.01
	VPUNPCKLBWZ256rrk(3(Class<VR256X>) -> 0(Class<VR256X>))  [1.01;1.01]
		 Successful, latency: 1.01
	VPUNPCKLBWZ256rrk(4(Class<VR256X>) -> 0(Class<VR256X>))  [1.01;1.01]
		 Successful, latency: 1.01

-----VPUNPCKLBWZ256rrkz-----
	VPUNPCKLBWZ256rrkz(2(Class<VR256X>) -> 0(Class<VR256X>))  [1;1]
		 Successful, latency: 1
	VPUNPCKLBWZ256rrkz(3(Class<VR256X>) -> 0(Class<VR256X>))  [1;1]
		 Successful, latency: 1

-----VPUNPCKLBWZrr-----
	VPUNPCKLBWZrr(1(Class<VR512>) -> 0(Class<VR512>))  [1.14;1.14]
		 Successful, latency: 1.14
	VPUNPCKLBWZrr(2(Class<VR512>) -> 0(Class<VR512>))  [1.15;1.15]
		 Successful, latency: 1.15

-----VPUNPCKLBWZrrk-----
	VPUNPCKLBWZrrk(1(Class<VR512>) -> 0(Class<VR512>))  [1.15;1.15]
		 Successful, latency: 1.15
	VPUNPCKLBWZrrk(3(Class<VR512>) -> 0(Class<VR512>))  [1.14;1.14]
		 Successful, latency: 1.14
	VPUNPCKLBWZrrk(4(Class<VR512>) -> 0(Class<VR512>))  [1.27;1.27]
		 Successful, latency: 1.27

-----VPUNPCKLBWZrrkz-----
	VPUNPCKLBWZrrkz(2(Class<VR512>) -> 0(Class<VR512>))  [1.14;1.14]
		 Successful, latency: 1.14
	VPUNPCKLBWZrrkz(3(Class<VR512>) -> 0(Class<VR512>))  [1.06;1.06]
		 Successful, latency: 1.06

-----VPUNPCKLBWrr-----
	VPUNPCKLBWrr(1(Class<VR128>) -> 0(Class<VR128>))  [1;1]
		 Successful, latency: 1
	VPUNPCKLBWrr(2(Class<VR128>) -> 0(Class<VR128>))  [1.02;1.02]
		 Successful, latency: 1.02

-----VPUNPCKLDQYrr-----
	VPUNPCKLDQYrr(1(Class<VR256>) -> 0(Class<VR256>))  [1.01;1.01]
		 Successful, latency: 1.01
	VPUNPCKLDQYrr(2(Class<VR256>) -> 0(Class<VR256>))  [1.01;1.01]
		 Successful, latency: 1.01

-----VPUNPCKLDQZ128rr-----
	VPUNPCKLDQZ128rr(1(Class<VR128X>) -> 0(Class<VR128X>))  [1.01;1.01]
		 Successful, latency: 1.01
	VPUNPCKLDQZ128rr(2(Class<VR128X>) -> 0(Class<VR128X>))  [1;1]
		 Successful, latency: 1

-----VPUNPCKLDQZ128rrk-----
	VPUNPCKLDQZ128rrk(1(Class<VR128X>) -> 0(Class<VR128X>))  [1.01;1.01]
		 Successful, latency: 1.01
	VPUNPCKLDQZ128rrk(3(Class<VR128X>) -> 0(Class<VR128X>))  [1.01;1.01]
		 Successful, latency: 1.01
	VPUNPCKLDQZ128rrk(4(Class<VR128X>) -> 0(Class<VR128X>))  [1;1]
		 Successful, latency: 1

-----VPUNPCKLDQZ128rrkz-----
	VPUNPCKLDQZ128rrkz(2(Class<VR128X>) -> 0(Class<VR128X>))  [1.01;1.01]
		 Successful, latency: 1.01
	VPUNPCKLDQZ128rrkz(3(Class<VR128X>) -> 0(Class<VR128X>))  [1;1]
		 Successful, latency: 1

-----VPUNPCKLDQZ256rr-----
	VPUNPCKLDQZ256rr(1(Class<VR256X>) -> 0(Class<VR256X>))  [1.01;1.01]
		 Successful, latency: 1.01
	VPUNPCKLDQZ256rr(2(Class<VR256X>) -> 0(Class<VR256X>))  [1.01;1.01]
		 Successful, latency: 1.01

-----VPUNPCKLDQZ256rrk-----
	VPUNPCKLDQZ256rrk(1(Class<VR256X>) -> 0(Class<VR256X>))  [1;1]
		 Successful, latency: 1
	VPUNPCKLDQZ256rrk(3(Class<VR256X>) -> 0(Class<VR256X>))  [1.01;1.01]
		 Successful, latency: 1.01
	VPUNPCKLDQZ256rrk(4(Class<VR256X>) -> 0(Class<VR256X>))  [1.01;1.01]
		 Successful, latency: 1.01

-----VPUNPCKLDQZ256rrkz-----
	VPUNPCKLDQZ256rrkz(2(Class<VR256X>) -> 0(Class<VR256X>))  [1.01;1.01]
		 Successful, latency: 1.01
	VPUNPCKLDQZ256rrkz(3(Class<VR256X>) -> 0(Class<VR256X>))  [1.01;1.01]
		 Successful, latency: 1.01

-----VPUNPCKLDQZrr-----
	VPUNPCKLDQZrr(1(Class<VR512>) -> 0(Class<VR512>))  [1.16;1.16]
		 Successful, latency: 1.16
	VPUNPCKLDQZrr(2(Class<VR512>) -> 0(Class<VR512>))  [1.11;1.11]
		 Successful, latency: 1.11

-----VPUNPCKLDQZrrk-----
	VPUNPCKLDQZrrk(1(Class<VR512>) -> 0(Class<VR512>))  [1.17;1.17]
		 Successful, latency: 1.17
	VPUNPCKLDQZrrk(3(Class<VR512>) -> 0(Class<VR512>))  [1.14;1.14]
		 Successful, latency: 1.14
	VPUNPCKLDQZrrk(4(Class<VR512>) -> 0(Class<VR512>))  [1.13;1.13]
		 Successful, latency: 1.13

-----VPUNPCKLDQZrrkz-----
	VPUNPCKLDQZrrkz(2(Class<VR512>) -> 0(Class<VR512>))  [1.18;1.18]
		 Successful, latency: 1.18
	VPUNPCKLDQZrrkz(3(Class<VR512>) -> 0(Class<VR512>))  [1.15;1.15]
		 Successful, latency: 1.15

-----VPUNPCKLDQrr-----
	VPUNPCKLDQrr(1(Class<VR128>) -> 0(Class<VR128>))  [1;1]
		 Successful, latency: 1
	VPUNPCKLDQrr(2(Class<VR128>) -> 0(Class<VR128>))  [1.01;1.01]
		 Successful, latency: 1.01

-----VPUNPCKLQDQYrr-----
	VPUNPCKLQDQYrr(1(Class<VR256>) -> 0(Class<VR256>))  [1.01;1.01]
		 Successful, latency: 1.01
	VPUNPCKLQDQYrr(2(Class<VR256>) -> 0(Class<VR256>))  [1;1]
		 Successful, latency: 1

-----VPUNPCKLQDQZ128rr-----
	VPUNPCKLQDQZ128rr(1(Class<VR128X>) -> 0(Class<VR128X>))  [1;1]
		 Successful, latency: 1
	VPUNPCKLQDQZ128rr(2(Class<VR128X>) -> 0(Class<VR128X>))  [0.999;0.999]
		 Successful, latency: 0.999

-----VPUNPCKLQDQZ128rrk-----
	VPUNPCKLQDQZ128rrk(1(Class<VR128X>) -> 0(Class<VR128X>))  [1.02;1.02]
		 Successful, latency: 1.02
	VPUNPCKLQDQZ128rrk(3(Class<VR128X>) -> 0(Class<VR128X>))  [1;1]
		 Successful, latency: 1
	VPUNPCKLQDQZ128rrk(4(Class<VR128X>) -> 0(Class<VR128X>))  [1.01;1.01]
		 Successful, latency: 1.01

-----VPUNPCKLQDQZ128rrkz-----
	VPUNPCKLQDQZ128rrkz(2(Class<VR128X>) -> 0(Class<VR128X>))  [1.01;1.01]
		 Successful, latency: 1.01
	VPUNPCKLQDQZ128rrkz(3(Class<VR128X>) -> 0(Class<VR128X>))  [1;1]
		 Successful, latency: 1

-----VPUNPCKLQDQZ256rr-----
	VPUNPCKLQDQZ256rr(1(Class<VR256X>) -> 0(Class<VR256X>))  [1;1]
		 Successful, latency: 1
	VPUNPCKLQDQZ256rr(2(Class<VR256X>) -> 0(Class<VR256X>))  [1.01;1.01]
		 Successful, latency: 1.01

-----VPUNPCKLQDQZ256rrk-----
	VPUNPCKLQDQZ256rrk(1(Class<VR256X>) -> 0(Class<VR256X>))  [1;1]
		 Successful, latency: 1
	VPUNPCKLQDQZ256rrk(3(Class<VR256X>) -> 0(Class<VR256X>))  [1.01;1.01]
		 Successful, latency: 1.01
	VPUNPCKLQDQZ256rrk(4(Class<VR256X>) -> 0(Class<VR256X>))  [1.01;1.01]
		 Successful, latency: 1.01

-----VPUNPCKLQDQZ256rrkz-----
	VPUNPCKLQDQZ256rrkz(2(Class<VR256X>) -> 0(Class<VR256X>))  [1;1]
		 Successful, latency: 1
	VPUNPCKLQDQZ256rrkz(3(Class<VR256X>) -> 0(Class<VR256X>))  [1.02;1.02]
		 Successful, latency: 1.02

-----VPUNPCKLQDQZrr-----
	VPUNPCKLQDQZrr(1(Class<VR512>) -> 0(Class<VR512>))  [1.14;1.14]
		 Successful, latency: 1.14
	VPUNPCKLQDQZrr(2(Class<VR512>) -> 0(Class<VR512>))  [1.14;1.14]
		 Successful, latency: 1.14

-----VPUNPCKLQDQZrrk-----
	VPUNPCKLQDQZrrk(1(Class<VR512>) -> 0(Class<VR512>))  [1.14;1.14]
		 Successful, latency: 1.14
	VPUNPCKLQDQZrrk(3(Class<VR512>) -> 0(Class<VR512>))  [1.15;1.15]
		 Successful, latency: 1.15
	VPUNPCKLQDQZrrk(4(Class<VR512>) -> 0(Class<VR512>))  [1.14;1.14]
		 Successful, latency: 1.14

-----VPUNPCKLQDQZrrkz-----
	VPUNPCKLQDQZrrkz(2(Class<VR512>) -> 0(Class<VR512>))  [1.09;1.09]
		 Successful, latency: 1.09
	VPUNPCKLQDQZrrkz(3(Class<VR512>) -> 0(Class<VR512>))  [1.14;1.14]
		 Successful, latency: 1.14

-----VPUNPCKLQDQrr-----
	VPUNPCKLQDQrr(1(Class<VR128>) -> 0(Class<VR128>))  [1.01;1.01]
		 Successful, latency: 1.01
	VPUNPCKLQDQrr(2(Class<VR128>) -> 0(Class<VR128>))  [0.999;0.999]
		 Successful, latency: 0.999

-----VPUNPCKLWDYrr-----
	VPUNPCKLWDYrr(1(Class<VR256>) -> 0(Class<VR256>))  [1;1]
		 Successful, latency: 1
	VPUNPCKLWDYrr(2(Class<VR256>) -> 0(Class<VR256>))  [1.01;1.01]
		 Successful, latency: 1.01

-----VPUNPCKLWDZ128rr-----
	VPUNPCKLWDZ128rr(1(Class<VR128X>) -> 0(Class<VR128X>))  [1;1]
		 Successful, latency: 1
	VPUNPCKLWDZ128rr(2(Class<VR128X>) -> 0(Class<VR128X>))  [1.01;1.01]
		 Successful, latency: 1.01

-----VPUNPCKLWDZ128rrk-----
	VPUNPCKLWDZ128rrk(1(Class<VR128X>) -> 0(Class<VR128X>))  [1;1]
		 Successful, latency: 1
	VPUNPCKLWDZ128rrk(3(Class<VR128X>) -> 0(Class<VR128X>))  [1.01;1.01]
		 Successful, latency: 1.01
	VPUNPCKLWDZ128rrk(4(Class<VR128X>) -> 0(Class<VR128X>))  [1.01;1.01]
		 Successful, latency: 1.01

-----VPUNPCKLWDZ128rrkz-----
	VPUNPCKLWDZ128rrkz(2(Class<VR128X>) -> 0(Class<VR128X>))  [1.02;1.02]
		 Successful, latency: 1.02
	VPUNPCKLWDZ128rrkz(3(Class<VR128X>) -> 0(Class<VR128X>))  [1;1]
		 Successful, latency: 1

-----VPUNPCKLWDZ256rr-----
	VPUNPCKLWDZ256rr(1(Class<VR256X>) -> 0(Class<VR256X>))  [0.996;0.996]
		 Successful, latency: 0.996
	VPUNPCKLWDZ256rr(2(Class<VR256X>) -> 0(Class<VR256X>))  [1;1]
		 Successful, latency: 1

-----VPUNPCKLWDZ256rrk-----
	VPUNPCKLWDZ256rrk(1(Class<VR256X>) -> 0(Class<VR256X>))  [1.01;1.01]
		 Successful, latency: 1.01
	VPUNPCKLWDZ256rrk(3(Class<VR256X>) -> 0(Class<VR256X>))  [1;1]
		 Successful, latency: 1
	VPUNPCKLWDZ256rrk(4(Class<VR256X>) -> 0(Class<VR256X>))  [1.01;1.01]
		 Successful, latency: 1.01

-----VPUNPCKLWDZ256rrkz-----
	VPUNPCKLWDZ256rrkz(2(Class<VR256X>) -> 0(Class<VR256X>))  [1;1]
		 Successful, latency: 1
	VPUNPCKLWDZ256rrkz(3(Class<VR256X>) -> 0(Class<VR256X>))  [1;1]
		 Successful, latency: 1

-----VPUNPCKLWDZrr-----
	VPUNPCKLWDZrr(1(Class<VR512>) -> 0(Class<VR512>))  [1.16;1.16]
		 Successful, latency: 1.16
	VPUNPCKLWDZrr(2(Class<VR512>) -> 0(Class<VR512>))  [1.15;1.15]
		 Successful, latency: 1.15

-----VPUNPCKLWDZrrk-----
	VPUNPCKLWDZrrk(1(Class<VR512>) -> 0(Class<VR512>))  [1.14;1.14]
		 Successful, latency: 1.14
	VPUNPCKLWDZrrk(3(Class<VR512>) -> 0(Class<VR512>))  [1.16;1.16]
		 Successful, latency: 1.16
	VPUNPCKLWDZrrk(4(Class<VR512>) -> 0(Class<VR512>))  [1.11;1.11]
		 Successful, latency: 1.11

-----VPUNPCKLWDZrrkz-----
	VPUNPCKLWDZrrkz(2(Class<VR512>) -> 0(Class<VR512>))  [1.14;1.14]
		 Successful, latency: 1.14
	VPUNPCKLWDZrrkz(3(Class<VR512>) -> 0(Class<VR512>))  [1.08;1.08]
		 Successful, latency: 1.08

-----VPUNPCKLWDrr-----
	VPUNPCKLWDrr(1(Class<VR128>) -> 0(Class<VR128>))  [1;1]
		 Successful, latency: 1
	VPUNPCKLWDrr(2(Class<VR128>) -> 0(Class<VR128>))  [1;1]
		 Successful, latency: 1

-----VPXORDZ128rr-----
	VPXORDZ128rr(1(Class<VR128X>) -> 0(Class<VR128X>))  [1.01;1.01]
		 Successful, latency: 1.01
	VPXORDZ128rr(2(Class<VR128X>) -> 0(Class<VR128X>))  [1;1]
		 Successful, latency: 1

-----VPXORDZ128rrk-----
	VPXORDZ128rrk(1(Class<VR128X>) -> 0(Class<VR128X>))  [1;1]
		 Successful, latency: 1
	VPXORDZ128rrk(3(Class<VR128X>) -> 0(Class<VR128X>))  [1.01;1.01]
		 Successful, latency: 1.01
	VPXORDZ128rrk(4(Class<VR128X>) -> 0(Class<VR128X>))  [1.02;1.02]
		 Successful, latency: 1.02

-----VPXORDZ128rrkz-----
	VPXORDZ128rrkz(2(Class<VR128X>) -> 0(Class<VR128X>))  [1.01;1.01]
		 Successful, latency: 1.01
	VPXORDZ128rrkz(3(Class<VR128X>) -> 0(Class<VR128X>))  [1.01;1.01]
		 Successful, latency: 1.01

-----VPXORDZ256rr-----
	VPXORDZ256rr(1(Class<VR256X>) -> 0(Class<VR256X>))  [1.01;1.01]
		 Successful, latency: 1.01
	VPXORDZ256rr(2(Class<VR256X>) -> 0(Class<VR256X>))  [1.01;1.01]
		 Successful, latency: 1.01

-----VPXORDZ256rrk-----
	VPXORDZ256rrk(1(Class<VR256X>) -> 0(Class<VR256X>))  [1.01;1.01]
		 Successful, latency: 1.01
	VPXORDZ256rrk(3(Class<VR256X>) -> 0(Class<VR256X>))  [1;1]
		 Successful, latency: 1
	VPXORDZ256rrk(4(Class<VR256X>) -> 0(Class<VR256X>))  [1;1]
		 Successful, latency: 1

-----VPXORDZ256rrkz-----
	VPXORDZ256rrkz(2(Class<VR256X>) -> 0(Class<VR256X>))  [1;1]
		 Successful, latency: 1
	VPXORDZ256rrkz(3(Class<VR256X>) -> 0(Class<VR256X>))  [1;1]
		 Successful, latency: 1

-----VPXORDZrr-----
	VPXORDZrr(1(Class<VR512>) -> 0(Class<VR512>))  [1.01;1.01]
		 Successful, latency: 1.01
	VPXORDZrr(2(Class<VR512>) -> 0(Class<VR512>))  [1;1]
		 Successful, latency: 1

-----VPXORDZrrk-----
	VPXORDZrrk(1(Class<VR512>) -> 0(Class<VR512>))  [1.01;1.01]
		 Successful, latency: 1.01
	VPXORDZrrk(3(Class<VR512>) -> 0(Class<VR512>))  [1.01;1.01]
		 Successful, latency: 1.01
	VPXORDZrrk(4(Class<VR512>) -> 0(Class<VR512>))  [1.02;1.02]
		 Successful, latency: 1.02

-----VPXORDZrrkz-----
	VPXORDZrrkz(2(Class<VR512>) -> 0(Class<VR512>))  [1;1]
		 Successful, latency: 1
	VPXORDZrrkz(3(Class<VR512>) -> 0(Class<VR512>))  [1.01;1.01]
		 Successful, latency: 1.01

-----VPXORQZ128rr-----
	VPXORQZ128rr(1(Class<VR128X>) -> 0(Class<VR128X>))  [1;1]
		 Successful, latency: 1
	VPXORQZ128rr(2(Class<VR128X>) -> 0(Class<VR128X>))  [1;1]
		 Successful, latency: 1

-----VPXORQZ128rrk-----
	VPXORQZ128rrk(1(Class<VR128X>) -> 0(Class<VR128X>))  [1;1]
		 Successful, latency: 1
	VPXORQZ128rrk(3(Class<VR128X>) -> 0(Class<VR128X>))  [0.998;0.998]
		 Successful, latency: 0.998
	VPXORQZ128rrk(4(Class<VR128X>) -> 0(Class<VR128X>))  [1.01;1.01]
		 Successful, latency: 1.01

-----VPXORQZ128rrkz-----
	VPXORQZ128rrkz(2(Class<VR128X>) -> 0(Class<VR128X>))  [1.01;1.01]
		 Successful, latency: 1.01
	VPXORQZ128rrkz(3(Class<VR128X>) -> 0(Class<VR128X>))  [1.01;1.01]
		 Successful, latency: 1.01

-----VPXORQZ256rr-----
	VPXORQZ256rr(1(Class<VR256X>) -> 0(Class<VR256X>))  [1;1]
		 Successful, latency: 1
	VPXORQZ256rr(2(Class<VR256X>) -> 0(Class<VR256X>))  [1.01;1.01]
		 Successful, latency: 1.01

-----VPXORQZ256rrk-----
	VPXORQZ256rrk(1(Class<VR256X>) -> 0(Class<VR256X>))  [1;1]
		 Successful, latency: 1
	VPXORQZ256rrk(3(Class<VR256X>) -> 0(Class<VR256X>))  [1.03;1.03]
		 Successful, latency: 1.03
	VPXORQZ256rrk(4(Class<VR256X>) -> 0(Class<VR256X>))  [1;1]
		 Successful, latency: 1

-----VPXORQZ256rrkz-----
	VPXORQZ256rrkz(2(Class<VR256X>) -> 0(Class<VR256X>))  [1.01;1.01]
		 Successful, latency: 1.01
	VPXORQZ256rrkz(3(Class<VR256X>) -> 0(Class<VR256X>))  [1.01;1.01]
		 Successful, latency: 1.01

-----VPXORQZrr-----
	VPXORQZrr(1(Class<VR512>) -> 0(Class<VR512>))  [1.01;1.01]
		 Successful, latency: 1.01
	VPXORQZrr(2(Class<VR512>) -> 0(Class<VR512>))  [1.01;1.01]
		 Successful, latency: 1.01

-----VPXORQZrrk-----
	VPXORQZrrk(1(Class<VR512>) -> 0(Class<VR512>))  [1.01;1.01]
		 Successful, latency: 1.01
	VPXORQZrrk(3(Class<VR512>) -> 0(Class<VR512>))  [1.01;1.01]
		 Successful, latency: 1.01
	VPXORQZrrk(4(Class<VR512>) -> 0(Class<VR512>))  [1;1]
		 Successful, latency: 1

-----VPXORQZrrkz-----
	VPXORQZrrkz(2(Class<VR512>) -> 0(Class<VR512>))  [1.01;1.01]
		 Successful, latency: 1.01
	VPXORQZrrkz(3(Class<VR512>) -> 0(Class<VR512>))  [1;1]
		 Successful, latency: 1

-----VPXORYrr-----
	VPXORYrr(1(Class<VR256>) -> 0(Class<VR256>))  [1.02;1.02]
		 Successful, latency: 1.02
	VPXORYrr(2(Class<VR256>) -> 0(Class<VR256>))  [1.01;1.01]
		 Successful, latency: 1.01

-----VPXORrr-----
	VPXORrr(1(Class<VR128>) -> 0(Class<VR128>))  [1;1]
		 Successful, latency: 1
	VPXORrr(2(Class<VR128>) -> 0(Class<VR128>))  [1.02;1.02]
		 Successful, latency: 1.02

-----VRANGEPDZ128rri-----
	VRANGEPDZ128rri(1(Class<VR128X>) -> 0(Class<VR128X>))  [2.02;2.02]
		 Successful, latency: 2.02
	VRANGEPDZ128rri(2(Class<VR128X>) -> 0(Class<VR128X>))  [2.02;2.02]
		 Successful, latency: 2.02

-----VRANGEPDZ128rrik-----
	VRANGEPDZ128rrik(1(Class<VR128X>) -> 0(Class<VR128X>))  [2.02;2.02]
		 Successful, latency: 2.02
	VRANGEPDZ128rrik(3(Class<VR128X>) -> 0(Class<VR128X>))  [2.02;2.02]
		 Successful, latency: 2.02
	VRANGEPDZ128rrik(4(Class<VR128X>) -> 0(Class<VR128X>))  [2.02;2.02]
		 Successful, latency: 2.02

-----VRANGEPDZ128rrikz-----
	VRANGEPDZ128rrikz(2(Class<VR128X>) -> 0(Class<VR128X>))  [2.04;2.04]
		 Successful, latency: 2.04
	VRANGEPDZ128rrikz(3(Class<VR128X>) -> 0(Class<VR128X>))  [2.02;2.02]
		 Successful, latency: 2.02

-----VRANGEPDZ256rri-----
	VRANGEPDZ256rri(1(Class<VR256X>) -> 0(Class<VR256X>))  [2.02;2.02]
		 Successful, latency: 2.02
	VRANGEPDZ256rri(2(Class<VR256X>) -> 0(Class<VR256X>))  [2.03;2.03]
		 Successful, latency: 2.03

-----VRANGEPDZ256rrib-----
	VRANGEPDZ256rrib(1(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VRANGEPDZ256rrib(2(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VRANGEPDZ256rribk-----
	VRANGEPDZ256rribk(1(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VRANGEPDZ256rribk(3(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VRANGEPDZ256rribk(4(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VRANGEPDZ256rribkz-----
	VRANGEPDZ256rribkz(2(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VRANGEPDZ256rribkz(3(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VRANGEPDZ256rrik-----
	VRANGEPDZ256rrik(1(Class<VR256X>) -> 0(Class<VR256X>))  [2.02;2.02]
		 Successful, latency: 2.02
	VRANGEPDZ256rrik(3(Class<VR256X>) -> 0(Class<VR256X>))  [2.03;2.03]
		 Successful, latency: 2.03
	VRANGEPDZ256rrik(4(Class<VR256X>) -> 0(Class<VR256X>))  [2.06;2.06]
		 Successful, latency: 2.06

-----VRANGEPDZ256rrikz-----
	VRANGEPDZ256rrikz(2(Class<VR256X>) -> 0(Class<VR256X>))  [2.02;2.02]
		 Successful, latency: 2.02
	VRANGEPDZ256rrikz(3(Class<VR256X>) -> 0(Class<VR256X>))  [2.02;2.02]
		 Successful, latency: 2.02

-----VRANGEPDZrri-----
	VRANGEPDZrri(1(Class<VR512>) -> 0(Class<VR512>))  [2.02;2.02]
		 Successful, latency: 2.02
	VRANGEPDZrri(2(Class<VR512>) -> 0(Class<VR512>))  [2.02;2.02]
		 Successful, latency: 2.02

-----VRANGEPDZrrib-----
	VRANGEPDZrrib(1(Class<VR512>) -> 0(Class<VR512>))  [2.02;2.02]
		 Successful, latency: 2.02
	VRANGEPDZrrib(2(Class<VR512>) -> 0(Class<VR512>))  [2.02;2.02]
		 Successful, latency: 2.02

-----VRANGEPDZrribk-----
	VRANGEPDZrribk(1(Class<VR512>) -> 0(Class<VR512>))  [2.04;2.04]
		 Successful, latency: 2.04
	VRANGEPDZrribk(3(Class<VR512>) -> 0(Class<VR512>))  [2.02;2.02]
		 Successful, latency: 2.02
	VRANGEPDZrribk(4(Class<VR512>) -> 0(Class<VR512>))  [2.04;2.04]
		 Successful, latency: 2.04

-----VRANGEPDZrribkz-----
	VRANGEPDZrribkz(2(Class<VR512>) -> 0(Class<VR512>))  [2.03;2.03]
		 Successful, latency: 2.03
	VRANGEPDZrribkz(3(Class<VR512>) -> 0(Class<VR512>))  [2.03;2.03]
		 Successful, latency: 2.03

-----VRANGEPDZrrik-----
	VRANGEPDZrrik(1(Class<VR512>) -> 0(Class<VR512>))  [2.02;2.02]
		 Successful, latency: 2.02
	VRANGEPDZrrik(3(Class<VR512>) -> 0(Class<VR512>))  [2.02;2.02]
		 Successful, latency: 2.02
	VRANGEPDZrrik(4(Class<VR512>) -> 0(Class<VR512>))  [2.02;2.02]
		 Successful, latency: 2.02

-----VRANGEPDZrrikz-----
	VRANGEPDZrrikz(2(Class<VR512>) -> 0(Class<VR512>))  [2.02;2.02]
		 Successful, latency: 2.02
	VRANGEPDZrrikz(3(Class<VR512>) -> 0(Class<VR512>))  [2.03;2.03]
		 Successful, latency: 2.03

-----VRANGEPSZ128rri-----
	VRANGEPSZ128rri(1(Class<VR128X>) -> 0(Class<VR128X>))  [2.04;2.04]
		 Successful, latency: 2.04
	VRANGEPSZ128rri(2(Class<VR128X>) -> 0(Class<VR128X>))  [2.02;2.02]
		 Successful, latency: 2.02

-----VRANGEPSZ128rrik-----
	VRANGEPSZ128rrik(1(Class<VR128X>) -> 0(Class<VR128X>))  [2.02;2.02]
		 Successful, latency: 2.02
	VRANGEPSZ128rrik(3(Class<VR128X>) -> 0(Class<VR128X>))  [2.02;2.02]
		 Successful, latency: 2.02
	VRANGEPSZ128rrik(4(Class<VR128X>) -> 0(Class<VR128X>))  [2.02;2.02]
		 Successful, latency: 2.02

-----VRANGEPSZ128rrikz-----
	VRANGEPSZ128rrikz(2(Class<VR128X>) -> 0(Class<VR128X>))  [2.03;2.03]
		 Successful, latency: 2.03
	VRANGEPSZ128rrikz(3(Class<VR128X>) -> 0(Class<VR128X>))  [2.03;2.03]
		 Successful, latency: 2.03

-----VRANGEPSZ256rri-----
	VRANGEPSZ256rri(1(Class<VR256X>) -> 0(Class<VR256X>))  [2.02;2.02]
		 Successful, latency: 2.02
	VRANGEPSZ256rri(2(Class<VR256X>) -> 0(Class<VR256X>))  [2.02;2.02]
		 Successful, latency: 2.02

-----VRANGEPSZ256rrib-----
	VRANGEPSZ256rrib(1(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VRANGEPSZ256rrib(2(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VRANGEPSZ256rribk-----
	VRANGEPSZ256rribk(1(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VRANGEPSZ256rribk(3(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VRANGEPSZ256rribk(4(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VRANGEPSZ256rribkz-----
	VRANGEPSZ256rribkz(2(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VRANGEPSZ256rribkz(3(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VRANGEPSZ256rrik-----
	VRANGEPSZ256rrik(1(Class<VR256X>) -> 0(Class<VR256X>))  [2.01;2.01]
		 Successful, latency: 2.01
	VRANGEPSZ256rrik(3(Class<VR256X>) -> 0(Class<VR256X>))  [2.02;2.02]
		 Successful, latency: 2.02
	VRANGEPSZ256rrik(4(Class<VR256X>) -> 0(Class<VR256X>))  [2.02;2.02]
		 Successful, latency: 2.02

-----VRANGEPSZ256rrikz-----
	VRANGEPSZ256rrikz(2(Class<VR256X>) -> 0(Class<VR256X>))  [2.03;2.03]
		 Successful, latency: 2.03
	VRANGEPSZ256rrikz(3(Class<VR256X>) -> 0(Class<VR256X>))  [2.02;2.02]
		 Successful, latency: 2.02

-----VRANGEPSZrri-----
	VRANGEPSZrri(1(Class<VR512>) -> 0(Class<VR512>))  [2.02;2.02]
		 Successful, latency: 2.02
	VRANGEPSZrri(2(Class<VR512>) -> 0(Class<VR512>))  [2.02;2.02]
		 Successful, latency: 2.02

-----VRANGEPSZrrib-----
	VRANGEPSZrrib(1(Class<VR512>) -> 0(Class<VR512>))  [2.02;2.02]
		 Successful, latency: 2.02
	VRANGEPSZrrib(2(Class<VR512>) -> 0(Class<VR512>))  [2.02;2.02]
		 Successful, latency: 2.02

-----VRANGEPSZrribk-----
	VRANGEPSZrribk(1(Class<VR512>) -> 0(Class<VR512>))  [2.02;2.02]
		 Successful, latency: 2.02
	VRANGEPSZrribk(3(Class<VR512>) -> 0(Class<VR512>))  [2.04;2.04]
		 Successful, latency: 2.04
	VRANGEPSZrribk(4(Class<VR512>) -> 0(Class<VR512>))  [2.02;2.02]
		 Successful, latency: 2.02

-----VRANGEPSZrribkz-----
	VRANGEPSZrribkz(2(Class<VR512>) -> 0(Class<VR512>))  [2.02;2.02]
		 Successful, latency: 2.02
	VRANGEPSZrribkz(3(Class<VR512>) -> 0(Class<VR512>))  [2.02;2.02]
		 Successful, latency: 2.02

-----VRANGEPSZrrik-----
	VRANGEPSZrrik(1(Class<VR512>) -> 0(Class<VR512>))  [2.02;2.02]
		 Successful, latency: 2.02
	VRANGEPSZrrik(3(Class<VR512>) -> 0(Class<VR512>))  [2.01;2.01]
		 Successful, latency: 2.01
	VRANGEPSZrrik(4(Class<VR512>) -> 0(Class<VR512>))  [2.02;2.02]
		 Successful, latency: 2.02

-----VRANGEPSZrrikz-----
	VRANGEPSZrrikz(2(Class<VR512>) -> 0(Class<VR512>))  [2.01;2.01]
		 Successful, latency: 2.01
	VRANGEPSZrrikz(3(Class<VR512>) -> 0(Class<VR512>))  [2.01;2.01]
		 Successful, latency: 2.01

-----VRANGESDZrri-----
	VRANGESDZrri(1(Class<VR128X>) -> 0(Class<VR128X>))  [2.02;2.02]
		 Successful, latency: 2.02
	VRANGESDZrri(2(Class<VR128X>) -> 0(Class<VR128X>))  [2.02;2.02]
		 Successful, latency: 2.02

-----VRANGESDZrrib-----
	VRANGESDZrrib(1(Class<VR128X>) -> 0(Class<VR128X>))  [2.02;2.02]
		 Successful, latency: 2.02
	VRANGESDZrrib(2(Class<VR128X>) -> 0(Class<VR128X>))  [2.02;2.02]
		 Successful, latency: 2.02

-----VRANGESDZrribk-----
	VRANGESDZrribk(1(Class<VR128X>) -> 0(Class<VR128X>))  [2.03;2.03]
		 Successful, latency: 2.03
	VRANGESDZrribk(3(Class<VR128X>) -> 0(Class<VR128X>))  [2.02;2.02]
		 Successful, latency: 2.02
	VRANGESDZrribk(4(Class<VR128X>) -> 0(Class<VR128X>))  [2.02;2.02]
		 Successful, latency: 2.02

-----VRANGESDZrribkz-----
	VRANGESDZrribkz(2(Class<VR128X>) -> 0(Class<VR128X>))  [2.03;2.03]
		 Successful, latency: 2.03
	VRANGESDZrribkz(3(Class<VR128X>) -> 0(Class<VR128X>))  [2.02;2.02]
		 Successful, latency: 2.02

-----VRANGESDZrrik-----
	VRANGESDZrrik(1(Class<VR128X>) -> 0(Class<VR128X>))  [2.03;2.03]
		 Successful, latency: 2.03
	VRANGESDZrrik(3(Class<VR128X>) -> 0(Class<VR128X>))  [2.02;2.02]
		 Successful, latency: 2.02
	VRANGESDZrrik(4(Class<VR128X>) -> 0(Class<VR128X>))  [2.03;2.03]
		 Successful, latency: 2.03

-----VRANGESDZrrikz-----
	VRANGESDZrrikz(2(Class<VR128X>) -> 0(Class<VR128X>))  [2.02;2.02]
		 Successful, latency: 2.02
	VRANGESDZrrikz(3(Class<VR128X>) -> 0(Class<VR128X>))  [2.02;2.02]
		 Successful, latency: 2.02

-----VRANGESSZrri-----
	VRANGESSZrri(1(Class<VR128X>) -> 0(Class<VR128X>))  [2.04;2.04]
		 Successful, latency: 2.04
	VRANGESSZrri(2(Class<VR128X>) -> 0(Class<VR128X>))  [2.03;2.03]
		 Successful, latency: 2.03

-----VRANGESSZrrib-----
	VRANGESSZrrib(1(Class<VR128X>) -> 0(Class<VR128X>))  [2.01;2.01]
		 Successful, latency: 2.01
	VRANGESSZrrib(2(Class<VR128X>) -> 0(Class<VR128X>))  [2.02;2.02]
		 Successful, latency: 2.02

-----VRANGESSZrribk-----
	VRANGESSZrribk(1(Class<VR128X>) -> 0(Class<VR128X>))  [2.03;2.03]
		 Successful, latency: 2.03
	VRANGESSZrribk(3(Class<VR128X>) -> 0(Class<VR128X>))  [2.01;2.01]
		 Successful, latency: 2.01
	VRANGESSZrribk(4(Class<VR128X>) -> 0(Class<VR128X>))  [2.02;2.02]
		 Successful, latency: 2.02

-----VRANGESSZrribkz-----
	VRANGESSZrribkz(2(Class<VR128X>) -> 0(Class<VR128X>))  [2.02;2.02]
		 Successful, latency: 2.02
	VRANGESSZrribkz(3(Class<VR128X>) -> 0(Class<VR128X>))  [2.02;2.02]
		 Successful, latency: 2.02

-----VRANGESSZrrik-----
	VRANGESSZrrik(1(Class<VR128X>) -> 0(Class<VR128X>))  [2.02;2.02]
		 Successful, latency: 2.02
	VRANGESSZrrik(3(Class<VR128X>) -> 0(Class<VR128X>))  [2;2]
		 Successful, latency: 2
	VRANGESSZrrik(4(Class<VR128X>) -> 0(Class<VR128X>))  [2.02;2.02]
		 Successful, latency: 2.02

-----VRANGESSZrrikz-----
	VRANGESSZrrikz(2(Class<VR128X>) -> 0(Class<VR128X>))  [2.01;2.01]
		 Successful, latency: 2.01
	VRANGESSZrrikz(3(Class<VR128X>) -> 0(Class<VR128X>))  [2.02;2.02]
		 Successful, latency: 2.02

-----VRCP14PDZ128r-----
	VRCP14PDZ128r(1(Class<VR128X>) -> 0(Class<VR128X>))  [5.05;5.05]
		 Successful, latency: 5.05

-----VRCP14PDZ128rk-----
	VRCP14PDZ128rk(1(Class<VR128X>) -> 0(Class<VR128X>))  [5.04;5.04]
		 Successful, latency: 5.04
	VRCP14PDZ128rk(3(Class<VR128X>) -> 0(Class<VR128X>))  [5.03;5.03]
		 Successful, latency: 5.03

-----VRCP14PDZ128rkz-----
	VRCP14PDZ128rkz(2(Class<VR128X>) -> 0(Class<VR128X>))  [5.05;5.05]
		 Successful, latency: 5.05

-----VRCP14PDZ256r-----
	VRCP14PDZ256r(1(Class<VR256X>) -> 0(Class<VR256X>))  [5.05;5.05]
		 Successful, latency: 5.05

-----VRCP14PDZ256rk-----
	VRCP14PDZ256rk(1(Class<VR256X>) -> 0(Class<VR256X>))  [5.03;5.03]
		 Successful, latency: 5.03
	VRCP14PDZ256rk(3(Class<VR256X>) -> 0(Class<VR256X>))  [5.06;5.06]
		 Successful, latency: 5.06

-----VRCP14PDZ256rkz-----
	VRCP14PDZ256rkz(2(Class<VR256X>) -> 0(Class<VR256X>))  [5.06;5.06]
		 Successful, latency: 5.06

-----VRCP14PDZr-----
	VRCP14PDZr(1(Class<VR512>) -> 0(Class<VR512>))  [5.04;5.04]
		 Successful, latency: 5.04

-----VRCP14PDZrk-----
	VRCP14PDZrk(1(Class<VR512>) -> 0(Class<VR512>))  [5.03;5.03]
		 Successful, latency: 5.03
	VRCP14PDZrk(3(Class<VR512>) -> 0(Class<VR512>))  [5.08;5.08]
		 Successful, latency: 5.08

-----VRCP14PDZrkz-----
	VRCP14PDZrkz(2(Class<VR512>) -> 0(Class<VR512>))  [5.04;5.04]
		 Successful, latency: 5.04

-----VRCP14PSZ128r-----
	VRCP14PSZ128r(1(Class<VR128X>) -> 0(Class<VR128X>))  [5.03;5.03]
		 Successful, latency: 5.03

-----VRCP14PSZ128rk-----
	VRCP14PSZ128rk(1(Class<VR128X>) -> 0(Class<VR128X>))  [5.04;5.04]
		 Successful, latency: 5.04
	VRCP14PSZ128rk(3(Class<VR128X>) -> 0(Class<VR128X>))  [5.05;5.05]
		 Successful, latency: 5.05

-----VRCP14PSZ128rkz-----
	VRCP14PSZ128rkz(2(Class<VR128X>) -> 0(Class<VR128X>))  [5.05;5.05]
		 Successful, latency: 5.05

-----VRCP14PSZ256r-----
	VRCP14PSZ256r(1(Class<VR256X>) -> 0(Class<VR256X>))  [5.05;5.05]
		 Successful, latency: 5.05

-----VRCP14PSZ256rk-----
	VRCP14PSZ256rk(1(Class<VR256X>) -> 0(Class<VR256X>))  [5.05;5.05]
		 Successful, latency: 5.05
	VRCP14PSZ256rk(3(Class<VR256X>) -> 0(Class<VR256X>))  [5.04;5.04]
		 Successful, latency: 5.04

-----VRCP14PSZ256rkz-----
	VRCP14PSZ256rkz(2(Class<VR256X>) -> 0(Class<VR256X>))  [5.04;5.04]
		 Successful, latency: 5.04

-----VRCP14PSZr-----
	VRCP14PSZr(1(Class<VR512>) -> 0(Class<VR512>))  [5.06;5.06]
		 Successful, latency: 5.06

-----VRCP14PSZrk-----
	VRCP14PSZrk(1(Class<VR512>) -> 0(Class<VR512>))  [5.04;5.04]
		 Successful, latency: 5.04
	VRCP14PSZrk(3(Class<VR512>) -> 0(Class<VR512>))  [5.04;5.04]
		 Successful, latency: 5.04

-----VRCP14PSZrkz-----
	VRCP14PSZrkz(2(Class<VR512>) -> 0(Class<VR512>))  [5.03;5.03]
		 Successful, latency: 5.03

-----VRCP14SDZrr-----
	VRCP14SDZrr(1(Class<VR128X>) -> 0(Class<VR128X>))  [5.08;5.08]
		 Successful, latency: 5.08
	VRCP14SDZrr(2(Class<VR128X>) -> 0(Class<VR128X>))  [5.03;5.03]
		 Successful, latency: 5.03

-----VRCP14SDZrrk-----
	VRCP14SDZrrk(1(Class<VR128X>) -> 0(Class<VR128X>))  [5.04;5.04]
		 Successful, latency: 5.04
	VRCP14SDZrrk(3(Class<VR128X>) -> 0(Class<VR128X>))  [5.08;5.08]
		 Successful, latency: 5.08
	VRCP14SDZrrk(4(Class<VR128X>) -> 0(Class<VR128X>))  [5.04;5.04]
		 Successful, latency: 5.04

-----VRCP14SDZrrkz-----
	VRCP14SDZrrkz(2(Class<VR128X>) -> 0(Class<VR128X>))  [5.04;5.04]
		 Successful, latency: 5.04
	VRCP14SDZrrkz(3(Class<VR128X>) -> 0(Class<VR128X>))  [5.06;5.06]
		 Successful, latency: 5.06

-----VRCP14SSZrr-----
	VRCP14SSZrr(1(Class<VR128X>) -> 0(Class<VR128X>))  [5.04;5.04]
		 Successful, latency: 5.04
	VRCP14SSZrr(2(Class<VR128X>) -> 0(Class<VR128X>))  [5.04;5.04]
		 Successful, latency: 5.04

-----VRCP14SSZrrk-----
	VRCP14SSZrrk(1(Class<VR128X>) -> 0(Class<VR128X>))  [5.03;5.03]
		 Successful, latency: 5.03
	VRCP14SSZrrk(3(Class<VR128X>) -> 0(Class<VR128X>))  [5.04;5.04]
		 Successful, latency: 5.04
	VRCP14SSZrrk(4(Class<VR128X>) -> 0(Class<VR128X>))  [5.05;5.05]
		 Successful, latency: 5.05

-----VRCP14SSZrrkz-----
	VRCP14SSZrrkz(2(Class<VR128X>) -> 0(Class<VR128X>))  [5.04;5.04]
		 Successful, latency: 5.04
	VRCP14SSZrrkz(3(Class<VR128X>) -> 0(Class<VR128X>))  [5.03;5.03]
		 Successful, latency: 5.03

-----VRCP28PDZr-----
	VRCP28PDZr(1(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VRCP28PDZrb-----
	VRCP28PDZrb(1(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VRCP28PDZrbk-----
	VRCP28PDZrbk(1(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VRCP28PDZrbk(3(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VRCP28PDZrbkz-----
	VRCP28PDZrbkz(2(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VRCP28PDZrk-----
	VRCP28PDZrk(1(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VRCP28PDZrk(3(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VRCP28PDZrkz-----
	VRCP28PDZrkz(2(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VRCP28PSZr-----
	VRCP28PSZr(1(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VRCP28PSZrb-----
	VRCP28PSZrb(1(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VRCP28PSZrbk-----
	VRCP28PSZrbk(1(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VRCP28PSZrbk(3(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VRCP28PSZrbkz-----
	VRCP28PSZrbkz(2(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VRCP28PSZrk-----
	VRCP28PSZrk(1(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VRCP28PSZrk(3(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VRCP28PSZrkz-----
	VRCP28PSZrkz(2(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VRCP28SDZr-----
	VRCP28SDZr(1(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VRCP28SDZr(2(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VRCP28SDZrb-----
	VRCP28SDZrb(1(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VRCP28SDZrb(2(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VRCP28SDZrbk-----
	VRCP28SDZrbk(1(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VRCP28SDZrbk(3(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VRCP28SDZrbk(4(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VRCP28SDZrbkz-----
	VRCP28SDZrbkz(2(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VRCP28SDZrbkz(3(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VRCP28SDZrk-----
	VRCP28SDZrk(1(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VRCP28SDZrk(3(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VRCP28SDZrk(4(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VRCP28SDZrkz-----
	VRCP28SDZrkz(2(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VRCP28SDZrkz(3(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VRCP28SSZr-----
	VRCP28SSZr(1(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VRCP28SSZr(2(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VRCP28SSZrb-----
	VRCP28SSZrb(1(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VRCP28SSZrb(2(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VRCP28SSZrbk-----
	VRCP28SSZrbk(1(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VRCP28SSZrbk(3(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VRCP28SSZrbk(4(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VRCP28SSZrbkz-----
	VRCP28SSZrbkz(2(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VRCP28SSZrbkz(3(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VRCP28SSZrk-----
	VRCP28SSZrk(1(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VRCP28SSZrk(3(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VRCP28SSZrk(4(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VRCP28SSZrkz-----
	VRCP28SSZrkz(2(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VRCP28SSZrkz(3(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VRCPBF16Z128r-----
	VRCPBF16Z128r(1(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VRCPBF16Z128rk-----
	VRCPBF16Z128rk(1(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VRCPBF16Z128rk(3(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VRCPBF16Z128rkz-----
	VRCPBF16Z128rkz(2(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VRCPBF16Z256r-----
	VRCPBF16Z256r(1(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VRCPBF16Z256rk-----
	VRCPBF16Z256rk(1(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VRCPBF16Z256rk(3(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VRCPBF16Z256rkz-----
	VRCPBF16Z256rkz(2(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VRCPBF16Zr-----
	VRCPBF16Zr(1(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VRCPBF16Zrk-----
	VRCPBF16Zrk(1(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VRCPBF16Zrk(3(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VRCPBF16Zrkz-----
	VRCPBF16Zrkz(2(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VRCPPHZ128r-----
	VRCPPHZ128r(1(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VRCPPHZ128rk-----
	VRCPPHZ128rk(1(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VRCPPHZ128rk(3(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VRCPPHZ128rkz-----
	VRCPPHZ128rkz(2(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VRCPPHZ256r-----
	VRCPPHZ256r(1(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VRCPPHZ256rk-----
	VRCPPHZ256rk(1(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VRCPPHZ256rk(3(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VRCPPHZ256rkz-----
	VRCPPHZ256rkz(2(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VRCPPHZr-----
	VRCPPHZr(1(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VRCPPHZrk-----
	VRCPPHZrk(1(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VRCPPHZrk(3(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VRCPPHZrkz-----
	VRCPPHZrkz(2(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VRCPPSYr-----
	VRCPPSYr(1(Class<VR256>) -> 0(Class<VR256>))  [4.04;4.04]
		 Successful, latency: 4.04

-----VRCPPSr-----
	VRCPPSr(1(Class<VR128>) -> 0(Class<VR128>))  [4.03;4.03]
		 Successful, latency: 4.03

-----VRCPSHZrr-----
	VRCPSHZrr(1(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VRCPSHZrr(2(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VRCPSHZrrk-----
	VRCPSHZrrk(1(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VRCPSHZrrk(3(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VRCPSHZrrk(4(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VRCPSHZrrkz-----
	VRCPSHZrrkz(2(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VRCPSHZrrkz(3(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VRCPSSr-----
	VRCPSSr(1(Class<FR32>) -> 0(Class<FR32>))  [4.02;4.02]
		 Successful, latency: 4.02
	VRCPSSr(2(Class<FR32>) -> 0(Class<FR32>))  [4.03;4.03]
		 Successful, latency: 4.03

-----VRCPSSr_Int-----
	VRCPSSr_Int(1(Class<VR128>) -> 0(Class<VR128>))  [4.04;4.04]
		 Successful, latency: 4.04
	VRCPSSr_Int(2(Class<VR128>) -> 0(Class<VR128>))  [4.03;4.03]
		 Successful, latency: 4.03

-----VREDUCEBF16Z128rri-----
	VREDUCEBF16Z128rri(1(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VREDUCEBF16Z128rrik-----
	VREDUCEBF16Z128rrik(1(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VREDUCEBF16Z128rrik(3(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VREDUCEBF16Z128rrikz-----
	VREDUCEBF16Z128rrikz(2(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VREDUCEBF16Z256rri-----
	VREDUCEBF16Z256rri(1(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VREDUCEBF16Z256rrik-----
	VREDUCEBF16Z256rrik(1(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VREDUCEBF16Z256rrik(3(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VREDUCEBF16Z256rrikz-----
	VREDUCEBF16Z256rrikz(2(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VREDUCEBF16Zrri-----
	VREDUCEBF16Zrri(1(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VREDUCEBF16Zrrik-----
	VREDUCEBF16Zrrik(1(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VREDUCEBF16Zrrik(3(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VREDUCEBF16Zrrikz-----
	VREDUCEBF16Zrrikz(2(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VREDUCEPDZ128rri-----
	VREDUCEPDZ128rri(1(Class<VR128X>) -> 0(Class<VR128X>))  [6.05;6.05]
		 Successful, latency: 6.05

-----VREDUCEPDZ128rrik-----
	VREDUCEPDZ128rrik(1(Class<VR128X>) -> 0(Class<VR128X>))  [3.06;3.06]
		 Successful, latency: 3.06
	VREDUCEPDZ128rrik(3(Class<VR128X>) -> 0(Class<VR128X>))  [6.04;6.04]
		 Successful, latency: 6.04

-----VREDUCEPDZ128rrikz-----
	VREDUCEPDZ128rrikz(2(Class<VR128X>) -> 0(Class<VR128X>))  [6.07;6.07]
		 Successful, latency: 6.07

-----VREDUCEPDZ256rri-----
	VREDUCEPDZ256rri(1(Class<VR256X>) -> 0(Class<VR256X>))  [6.04;6.04]
		 Successful, latency: 6.04

-----VREDUCEPDZ256rrib-----
	VREDUCEPDZ256rrib(1(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VREDUCEPDZ256rribk-----
	VREDUCEPDZ256rribk(1(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VREDUCEPDZ256rribk(3(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VREDUCEPDZ256rribkz-----
	VREDUCEPDZ256rribkz(2(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VREDUCEPDZ256rrik-----
	VREDUCEPDZ256rrik(1(Class<VR256X>) -> 0(Class<VR256X>))  [3.02;3.02]
		 Successful, latency: 3.02
	VREDUCEPDZ256rrik(3(Class<VR256X>) -> 0(Class<VR256X>))  [6.06;6.06]
		 Successful, latency: 6.06

-----VREDUCEPDZ256rrikz-----
	VREDUCEPDZ256rrikz(2(Class<VR256X>) -> 0(Class<VR256X>))  [6.06;6.06]
		 Successful, latency: 6.06

-----VREDUCEPDZrri-----
	VREDUCEPDZrri(1(Class<VR512>) -> 0(Class<VR512>))  [6.04;6.04]
		 Successful, latency: 6.04

-----VREDUCEPDZrrib-----
	VREDUCEPDZrrib(1(Class<VR512>) -> 0(Class<VR512>))  [6.05;6.05]
		 Successful, latency: 6.05

-----VREDUCEPDZrribk-----
	VREDUCEPDZrribk(1(Class<VR512>) -> 0(Class<VR512>))  [3.38;3.38]
		 Successful, latency: 3.38
	VREDUCEPDZrribk(3(Class<VR512>) -> 0(Class<VR512>))  [6.01;6.01]
		 Successful, latency: 6.01

-----VREDUCEPDZrribkz-----
	VREDUCEPDZrribkz(2(Class<VR512>) -> 0(Class<VR512>))  [6.06;6.06]
		 Successful, latency: 6.06

-----VREDUCEPDZrrik-----
	VREDUCEPDZrrik(1(Class<VR512>) -> 0(Class<VR512>))  [3.36;3.36]
		 Successful, latency: 3.36
	VREDUCEPDZrrik(3(Class<VR512>) -> 0(Class<VR512>))  [6.04;6.04]
		 Successful, latency: 6.04

-----VREDUCEPDZrrikz-----
	VREDUCEPDZrrikz(2(Class<VR512>) -> 0(Class<VR512>))  [6.05;6.05]
		 Successful, latency: 6.05

-----VREDUCEPHZ128rri-----
	VREDUCEPHZ128rri(1(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VREDUCEPHZ128rrik-----
	VREDUCEPHZ128rrik(1(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VREDUCEPHZ128rrik(3(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VREDUCEPHZ128rrikz-----
	VREDUCEPHZ128rrikz(2(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VREDUCEPHZ256rri-----
	VREDUCEPHZ256rri(1(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VREDUCEPHZ256rrib-----
	VREDUCEPHZ256rrib(1(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VREDUCEPHZ256rribk-----
	VREDUCEPHZ256rribk(1(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VREDUCEPHZ256rribk(3(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VREDUCEPHZ256rribkz-----
	VREDUCEPHZ256rribkz(2(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VREDUCEPHZ256rrik-----
	VREDUCEPHZ256rrik(1(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VREDUCEPHZ256rrik(3(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VREDUCEPHZ256rrikz-----
	VREDUCEPHZ256rrikz(2(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VREDUCEPHZrri-----
	VREDUCEPHZrri(1(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VREDUCEPHZrrib-----
	VREDUCEPHZrrib(1(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VREDUCEPHZrribk-----
	VREDUCEPHZrribk(1(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VREDUCEPHZrribk(3(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VREDUCEPHZrribkz-----
	VREDUCEPHZrribkz(2(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VREDUCEPHZrrik-----
	VREDUCEPHZrrik(1(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VREDUCEPHZrrik(3(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VREDUCEPHZrrikz-----
	VREDUCEPHZrrikz(2(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VREDUCEPSZ128rri-----
	VREDUCEPSZ128rri(1(Class<VR128X>) -> 0(Class<VR128X>))  [6.07;6.07]
		 Successful, latency: 6.07

-----VREDUCEPSZ128rrik-----
	VREDUCEPSZ128rrik(1(Class<VR128X>) -> 0(Class<VR128X>))  [3.03;3.03]
		 Successful, latency: 3.03
	VREDUCEPSZ128rrik(3(Class<VR128X>) -> 0(Class<VR128X>))  [6.05;6.05]
		 Successful, latency: 6.05

-----VREDUCEPSZ128rrikz-----
	VREDUCEPSZ128rrikz(2(Class<VR128X>) -> 0(Class<VR128X>))  [6.07;6.07]
		 Successful, latency: 6.07

-----VREDUCEPSZ256rri-----
	VREDUCEPSZ256rri(1(Class<VR256X>) -> 0(Class<VR256X>))  [6.04;6.04]
		 Successful, latency: 6.04

-----VREDUCEPSZ256rrib-----
	VREDUCEPSZ256rrib(1(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VREDUCEPSZ256rribk-----
	VREDUCEPSZ256rribk(1(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VREDUCEPSZ256rribk(3(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VREDUCEPSZ256rribkz-----
	VREDUCEPSZ256rribkz(2(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VREDUCEPSZ256rrik-----
	VREDUCEPSZ256rrik(1(Class<VR256X>) -> 0(Class<VR256X>))  [3.03;3.03]
		 Successful, latency: 3.03
	VREDUCEPSZ256rrik(3(Class<VR256X>) -> 0(Class<VR256X>))  [6.06;6.06]
		 Successful, latency: 6.06

-----VREDUCEPSZ256rrikz-----
	VREDUCEPSZ256rrikz(2(Class<VR256X>) -> 0(Class<VR256X>))  [6.05;6.05]
		 Successful, latency: 6.05

-----VREDUCEPSZrri-----
	VREDUCEPSZrri(1(Class<VR512>) -> 0(Class<VR512>))  [6.07;6.07]
		 Successful, latency: 6.07

-----VREDUCEPSZrrib-----
	VREDUCEPSZrrib(1(Class<VR512>) -> 0(Class<VR512>))  [6.04;6.04]
		 Successful, latency: 6.04

-----VREDUCEPSZrribk-----
	VREDUCEPSZrribk(1(Class<VR512>) -> 0(Class<VR512>))  [3.33;3.33]
		 Successful, latency: 3.33
	VREDUCEPSZrribk(3(Class<VR512>) -> 0(Class<VR512>))  [6.07;6.07]
		 Successful, latency: 6.07

-----VREDUCEPSZrribkz-----
	VREDUCEPSZrribkz(2(Class<VR512>) -> 0(Class<VR512>))  [6.04;6.04]
		 Successful, latency: 6.04

-----VREDUCEPSZrrik-----
	VREDUCEPSZrrik(1(Class<VR512>) -> 0(Class<VR512>))  [3.33;3.33]
		 Successful, latency: 3.33
	VREDUCEPSZrrik(3(Class<VR512>) -> 0(Class<VR512>))  [6.07;6.07]
		 Successful, latency: 6.07

-----VREDUCEPSZrrikz-----
	VREDUCEPSZrrikz(2(Class<VR512>) -> 0(Class<VR512>))  [6.05;6.05]
		 Successful, latency: 6.05

-----VREDUCESDZrri-----
	VREDUCESDZrri(1(Class<VR128X>) -> 0(Class<VR128X>))  [6.03;6.03]
		 Successful, latency: 6.03
	VREDUCESDZrri(2(Class<VR128X>) -> 0(Class<VR128X>))  [6.05;6.05]
		 Successful, latency: 6.05

-----VREDUCESDZrrib-----
	VREDUCESDZrrib(1(Class<VR128X>) -> 0(Class<VR128X>))  [6.05;6.05]
		 Successful, latency: 6.05
	VREDUCESDZrrib(2(Class<VR128X>) -> 0(Class<VR128X>))  [6.04;6.04]
		 Successful, latency: 6.04

-----VREDUCESDZrribk-----
	VREDUCESDZrribk(1(Class<VR128X>) -> 0(Class<VR128X>))  [3.03;3.03]
		 Successful, latency: 3.03
	VREDUCESDZrribk(3(Class<VR128X>) -> 0(Class<VR128X>))  [6.04;6.04]
		 Successful, latency: 6.04
	VREDUCESDZrribk(4(Class<VR128X>) -> 0(Class<VR128X>))  [6.05;6.05]
		 Successful, latency: 6.05

-----VREDUCESDZrribkz-----
	VREDUCESDZrribkz(2(Class<VR128X>) -> 0(Class<VR128X>))  [6.05;6.05]
		 Successful, latency: 6.05
	VREDUCESDZrribkz(3(Class<VR128X>) -> 0(Class<VR128X>))  [6.06;6.06]
		 Successful, latency: 6.06

-----VREDUCESDZrrik-----
	VREDUCESDZrrik(1(Class<VR128X>) -> 0(Class<VR128X>))  [3.05;3.05]
		 Successful, latency: 3.05
	VREDUCESDZrrik(3(Class<VR128X>) -> 0(Class<VR128X>))  [6.04;6.04]
		 Successful, latency: 6.04
	VREDUCESDZrrik(4(Class<VR128X>) -> 0(Class<VR128X>))  [6.04;6.04]
		 Successful, latency: 6.04

-----VREDUCESDZrrikz-----
	VREDUCESDZrrikz(2(Class<VR128X>) -> 0(Class<VR128X>))  [6.04;6.04]
		 Successful, latency: 6.04
	VREDUCESDZrrikz(3(Class<VR128X>) -> 0(Class<VR128X>))  [6.04;6.04]
		 Successful, latency: 6.04

-----VREDUCESHZrri-----
	VREDUCESHZrri(1(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VREDUCESHZrri(2(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VREDUCESHZrrib-----
	VREDUCESHZrrib(1(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VREDUCESHZrrib(2(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VREDUCESHZrribk-----
	VREDUCESHZrribk(1(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VREDUCESHZrribk(3(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VREDUCESHZrribk(4(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VREDUCESHZrribkz-----
	VREDUCESHZrribkz(2(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VREDUCESHZrribkz(3(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VREDUCESHZrrik-----
	VREDUCESHZrrik(1(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VREDUCESHZrrik(3(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VREDUCESHZrrik(4(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VREDUCESHZrrikz-----
	VREDUCESHZrrikz(2(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VREDUCESHZrrikz(3(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VREDUCESSZrri-----
	VREDUCESSZrri(1(Class<VR128X>) -> 0(Class<VR128X>))  [6.06;6.06]
		 Successful, latency: 6.06
	VREDUCESSZrri(2(Class<VR128X>) -> 0(Class<VR128X>))  [6.05;6.05]
		 Successful, latency: 6.05

-----VREDUCESSZrrib-----
	VREDUCESSZrrib(1(Class<VR128X>) -> 0(Class<VR128X>))  [6.05;6.05]
		 Successful, latency: 6.05
	VREDUCESSZrrib(2(Class<VR128X>) -> 0(Class<VR128X>))  [6.05;6.05]
		 Successful, latency: 6.05

-----VREDUCESSZrribk-----
	VREDUCESSZrribk(1(Class<VR128X>) -> 0(Class<VR128X>))  [3.02;3.02]
		 Successful, latency: 3.02
	VREDUCESSZrribk(3(Class<VR128X>) -> 0(Class<VR128X>))  [6.06;6.06]
		 Successful, latency: 6.06
	VREDUCESSZrribk(4(Class<VR128X>) -> 0(Class<VR128X>))  [6.05;6.05]
		 Successful, latency: 6.05

-----VREDUCESSZrribkz-----
	VREDUCESSZrribkz(2(Class<VR128X>) -> 0(Class<VR128X>))  [6.05;6.05]
		 Successful, latency: 6.05
	VREDUCESSZrribkz(3(Class<VR128X>) -> 0(Class<VR128X>))  [6.05;6.05]
		 Successful, latency: 6.05

-----VREDUCESSZrrik-----
	VREDUCESSZrrik(1(Class<VR128X>) -> 0(Class<VR128X>))  [3.06;3.06]
		 Successful, latency: 3.06
	VREDUCESSZrrik(3(Class<VR128X>) -> 0(Class<VR128X>))  [6.05;6.05]
		 Successful, latency: 6.05
	VREDUCESSZrrik(4(Class<VR128X>) -> 0(Class<VR128X>))  [6.05;6.05]
		 Successful, latency: 6.05

-----VREDUCESSZrrikz-----
	VREDUCESSZrrikz(2(Class<VR128X>) -> 0(Class<VR128X>))  [6.03;6.03]
		 Successful, latency: 6.03
	VREDUCESSZrrikz(3(Class<VR128X>) -> 0(Class<VR128X>))  [6.07;6.07]
		 Successful, latency: 6.07

-----VRNDSCALEBF16Z128rri-----
	VRNDSCALEBF16Z128rri(1(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VRNDSCALEBF16Z128rrik-----
	VRNDSCALEBF16Z128rrik(1(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VRNDSCALEBF16Z128rrik(3(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VRNDSCALEBF16Z128rrikz-----
	VRNDSCALEBF16Z128rrikz(2(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VRNDSCALEBF16Z256rri-----
	VRNDSCALEBF16Z256rri(1(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VRNDSCALEBF16Z256rrik-----
	VRNDSCALEBF16Z256rrik(1(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VRNDSCALEBF16Z256rrik(3(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VRNDSCALEBF16Z256rrikz-----
	VRNDSCALEBF16Z256rrikz(2(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VRNDSCALEBF16Zrri-----
	VRNDSCALEBF16Zrri(1(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VRNDSCALEBF16Zrrik-----
	VRNDSCALEBF16Zrrik(1(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VRNDSCALEBF16Zrrik(3(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VRNDSCALEBF16Zrrikz-----
	VRNDSCALEBF16Zrrikz(2(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VRNDSCALEPDZ128rri-----
	VRNDSCALEPDZ128rri(1(Class<VR128X>) -> 0(Class<VR128X>))  [3.05;3.05]
		 Successful, latency: 3.05

-----VRNDSCALEPDZ128rrik-----
	VRNDSCALEPDZ128rrik(1(Class<VR128X>) -> 0(Class<VR128X>))  [3.02;3.02]
		 Successful, latency: 3.02
	VRNDSCALEPDZ128rrik(3(Class<VR128X>) -> 0(Class<VR128X>))  [3.05;3.05]
		 Successful, latency: 3.05

-----VRNDSCALEPDZ128rrikz-----
	VRNDSCALEPDZ128rrikz(2(Class<VR128X>) -> 0(Class<VR128X>))  [3.03;3.03]
		 Successful, latency: 3.03

-----VRNDSCALEPDZ256rri-----
	VRNDSCALEPDZ256rri(1(Class<VR256X>) -> 0(Class<VR256X>))  [3.06;3.06]
		 Successful, latency: 3.06

-----VRNDSCALEPDZ256rrib-----
	VRNDSCALEPDZ256rrib(1(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VRNDSCALEPDZ256rribk-----
	VRNDSCALEPDZ256rribk(1(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VRNDSCALEPDZ256rribk(3(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VRNDSCALEPDZ256rribkz-----
	VRNDSCALEPDZ256rribkz(2(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VRNDSCALEPDZ256rrik-----
	VRNDSCALEPDZ256rrik(1(Class<VR256X>) -> 0(Class<VR256X>))  [3.02;3.02]
		 Successful, latency: 3.02
	VRNDSCALEPDZ256rrik(3(Class<VR256X>) -> 0(Class<VR256X>))  [3.04;3.04]
		 Successful, latency: 3.04

-----VRNDSCALEPDZ256rrikz-----
	VRNDSCALEPDZ256rrikz(2(Class<VR256X>) -> 0(Class<VR256X>))  [3.03;3.03]
		 Successful, latency: 3.03

-----VRNDSCALEPDZrri-----
	VRNDSCALEPDZrri(1(Class<VR512>) -> 0(Class<VR512>))  [3.03;3.03]
		 Successful, latency: 3.03

-----VRNDSCALEPDZrrib-----
	VRNDSCALEPDZrrib(1(Class<VR512>) -> 0(Class<VR512>))  [3.05;3.05]
		 Successful, latency: 3.05

-----VRNDSCALEPDZrribk-----
	VRNDSCALEPDZrribk(1(Class<VR512>) -> 0(Class<VR512>))  [3.03;3.03]
		 Successful, latency: 3.03
	VRNDSCALEPDZrribk(3(Class<VR512>) -> 0(Class<VR512>))  [3.02;3.02]
		 Successful, latency: 3.02

-----VRNDSCALEPDZrribkz-----
	VRNDSCALEPDZrribkz(2(Class<VR512>) -> 0(Class<VR512>))  [3.04;3.04]
		 Successful, latency: 3.04

-----VRNDSCALEPDZrrik-----
	VRNDSCALEPDZrrik(1(Class<VR512>) -> 0(Class<VR512>))  [3.03;3.03]
		 Successful, latency: 3.03
	VRNDSCALEPDZrrik(3(Class<VR512>) -> 0(Class<VR512>))  [3.05;3.05]
		 Successful, latency: 3.05

-----VRNDSCALEPDZrrikz-----
	VRNDSCALEPDZrrikz(2(Class<VR512>) -> 0(Class<VR512>))  [3.03;3.03]
		 Successful, latency: 3.03

-----VRNDSCALEPHZ128rri-----
	VRNDSCALEPHZ128rri(1(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VRNDSCALEPHZ128rrik-----
	VRNDSCALEPHZ128rrik(1(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VRNDSCALEPHZ128rrik(3(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VRNDSCALEPHZ128rrikz-----
	VRNDSCALEPHZ128rrikz(2(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VRNDSCALEPHZ256rri-----
	VRNDSCALEPHZ256rri(1(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VRNDSCALEPHZ256rrib-----
	VRNDSCALEPHZ256rrib(1(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VRNDSCALEPHZ256rribk-----
	VRNDSCALEPHZ256rribk(1(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VRNDSCALEPHZ256rribk(3(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VRNDSCALEPHZ256rribkz-----
	VRNDSCALEPHZ256rribkz(2(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VRNDSCALEPHZ256rrik-----
	VRNDSCALEPHZ256rrik(1(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VRNDSCALEPHZ256rrik(3(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VRNDSCALEPHZ256rrikz-----
	VRNDSCALEPHZ256rrikz(2(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VRNDSCALEPHZrri-----
	VRNDSCALEPHZrri(1(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VRNDSCALEPHZrrib-----
	VRNDSCALEPHZrrib(1(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VRNDSCALEPHZrribk-----
	VRNDSCALEPHZrribk(1(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VRNDSCALEPHZrribk(3(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VRNDSCALEPHZrribkz-----
	VRNDSCALEPHZrribkz(2(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VRNDSCALEPHZrrik-----
	VRNDSCALEPHZrrik(1(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VRNDSCALEPHZrrik(3(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VRNDSCALEPHZrrikz-----
	VRNDSCALEPHZrrikz(2(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VRNDSCALEPSZ128rri-----
	VRNDSCALEPSZ128rri(1(Class<VR128X>) -> 0(Class<VR128X>))  [3.02;3.02]
		 Successful, latency: 3.02

-----VRNDSCALEPSZ128rrik-----
	VRNDSCALEPSZ128rrik(1(Class<VR128X>) -> 0(Class<VR128X>))  [3.06;3.06]
		 Successful, latency: 3.06
	VRNDSCALEPSZ128rrik(3(Class<VR128X>) -> 0(Class<VR128X>))  [3.03;3.03]
		 Successful, latency: 3.03

-----VRNDSCALEPSZ128rrikz-----
	VRNDSCALEPSZ128rrikz(2(Class<VR128X>) -> 0(Class<VR128X>))  [3.06;3.06]
		 Successful, latency: 3.06

-----VRNDSCALEPSZ256rri-----
	VRNDSCALEPSZ256rri(1(Class<VR256X>) -> 0(Class<VR256X>))  [3.02;3.02]
		 Successful, latency: 3.02

-----VRNDSCALEPSZ256rrib-----
	VRNDSCALEPSZ256rrib(1(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VRNDSCALEPSZ256rribk-----
	VRNDSCALEPSZ256rribk(1(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VRNDSCALEPSZ256rribk(3(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VRNDSCALEPSZ256rribkz-----
	VRNDSCALEPSZ256rribkz(2(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VRNDSCALEPSZ256rrik-----
	VRNDSCALEPSZ256rrik(1(Class<VR256X>) -> 0(Class<VR256X>))  [3.03;3.03]
		 Successful, latency: 3.03
	VRNDSCALEPSZ256rrik(3(Class<VR256X>) -> 0(Class<VR256X>))  [3.01;3.01]
		 Successful, latency: 3.01

-----VRNDSCALEPSZ256rrikz-----
	VRNDSCALEPSZ256rrikz(2(Class<VR256X>) -> 0(Class<VR256X>))  [3.02;3.02]
		 Successful, latency: 3.02

-----VRNDSCALEPSZrri-----
	VRNDSCALEPSZrri(1(Class<VR512>) -> 0(Class<VR512>))  [3.04;3.04]
		 Successful, latency: 3.04

-----VRNDSCALEPSZrrib-----
	VRNDSCALEPSZrrib(1(Class<VR512>) -> 0(Class<VR512>))  [3.04;3.04]
		 Successful, latency: 3.04

-----VRNDSCALEPSZrribk-----
	VRNDSCALEPSZrribk(1(Class<VR512>) -> 0(Class<VR512>))  [3.04;3.04]
		 Successful, latency: 3.04
	VRNDSCALEPSZrribk(3(Class<VR512>) -> 0(Class<VR512>))  [3.03;3.03]
		 Successful, latency: 3.03

-----VRNDSCALEPSZrribkz-----
	VRNDSCALEPSZrribkz(2(Class<VR512>) -> 0(Class<VR512>))  [3.02;3.02]
		 Successful, latency: 3.02

-----VRNDSCALEPSZrrik-----
	VRNDSCALEPSZrrik(1(Class<VR512>) -> 0(Class<VR512>))  [3.05;3.05]
		 Successful, latency: 3.05
	VRNDSCALEPSZrrik(3(Class<VR512>) -> 0(Class<VR512>))  [3.02;3.02]
		 Successful, latency: 3.02

-----VRNDSCALEPSZrrikz-----
	VRNDSCALEPSZrrikz(2(Class<VR512>) -> 0(Class<VR512>))  [3.03;3.03]
		 Successful, latency: 3.03

-----VRNDSCALESDZrri-----
	VRNDSCALESDZrri(1(Class<FR64X>) -> 0(Class<FR64X>))  [3.02;3.02]
		 Successful, latency: 3.02
	VRNDSCALESDZrri(2(Class<FR64X>) -> 0(Class<FR64X>))  [3.04;3.04]
		 Successful, latency: 3.04

-----VRNDSCALESDZrri_Int-----
	VRNDSCALESDZrri_Int(1(Class<VR128X>) -> 0(Class<VR128X>))  [3.02;3.02]
		 Successful, latency: 3.02
	VRNDSCALESDZrri_Int(2(Class<VR128X>) -> 0(Class<VR128X>))  [3.06;3.06]
		 Successful, latency: 3.06

-----VRNDSCALESDZrrib_Int-----
	VRNDSCALESDZrrib_Int(1(Class<VR128X>) -> 0(Class<VR128X>))  [3.02;3.02]
		 Successful, latency: 3.02
	VRNDSCALESDZrrib_Int(2(Class<VR128X>) -> 0(Class<VR128X>))  [3.04;3.04]
		 Successful, latency: 3.04

-----VRNDSCALESDZrribk_Int-----
	VRNDSCALESDZrribk_Int(1(Class<VR128X>) -> 0(Class<VR128X>))  [3.03;3.03]
		 Successful, latency: 3.03
	VRNDSCALESDZrribk_Int(3(Class<VR128X>) -> 0(Class<VR128X>))  [3.03;3.03]
		 Successful, latency: 3.03
	VRNDSCALESDZrribk_Int(4(Class<VR128X>) -> 0(Class<VR128X>))  [3.03;3.03]
		 Successful, latency: 3.03

-----VRNDSCALESDZrribkz_Int-----
	VRNDSCALESDZrribkz_Int(2(Class<VR128X>) -> 0(Class<VR128X>))  [3.04;3.04]
		 Successful, latency: 3.04
	VRNDSCALESDZrribkz_Int(3(Class<VR128X>) -> 0(Class<VR128X>))  [3.06;3.06]
		 Successful, latency: 3.06

-----VRNDSCALESDZrrik_Int-----
	VRNDSCALESDZrrik_Int(1(Class<VR128X>) -> 0(Class<VR128X>))  [3.02;3.02]
		 Successful, latency: 3.02
	VRNDSCALESDZrrik_Int(3(Class<VR128X>) -> 0(Class<VR128X>))  [3.02;3.02]
		 Successful, latency: 3.02
	VRNDSCALESDZrrik_Int(4(Class<VR128X>) -> 0(Class<VR128X>))  [3.04;3.04]
		 Successful, latency: 3.04

-----VRNDSCALESDZrrikz_Int-----
	VRNDSCALESDZrrikz_Int(2(Class<VR128X>) -> 0(Class<VR128X>))  [3.02;3.02]
		 Successful, latency: 3.02
	VRNDSCALESDZrrikz_Int(3(Class<VR128X>) -> 0(Class<VR128X>))  [3.04;3.04]
		 Successful, latency: 3.04

-----VRNDSCALESHZrri-----
	VRNDSCALESHZrri(1(Class<FR16X>) -> 0(Class<FR16X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VRNDSCALESHZrri(2(Class<FR16X>) -> 0(Class<FR16X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VRNDSCALESHZrri_Int-----
	VRNDSCALESHZrri_Int(1(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VRNDSCALESHZrri_Int(2(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VRNDSCALESHZrrib_Int-----
	VRNDSCALESHZrrib_Int(1(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VRNDSCALESHZrrib_Int(2(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VRNDSCALESHZrribk_Int-----
	VRNDSCALESHZrribk_Int(1(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VRNDSCALESHZrribk_Int(3(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VRNDSCALESHZrribk_Int(4(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VRNDSCALESHZrribkz_Int-----
	VRNDSCALESHZrribkz_Int(2(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VRNDSCALESHZrribkz_Int(3(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VRNDSCALESHZrrik_Int-----
	VRNDSCALESHZrrik_Int(1(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VRNDSCALESHZrrik_Int(3(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VRNDSCALESHZrrik_Int(4(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VRNDSCALESHZrrikz_Int-----
	VRNDSCALESHZrrikz_Int(2(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VRNDSCALESHZrrikz_Int(3(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VRNDSCALESSZrri-----
	VRNDSCALESSZrri(1(Class<FR32X>) -> 0(Class<FR32X>))  [3.04;3.04]
		 Successful, latency: 3.04
	VRNDSCALESSZrri(2(Class<FR32X>) -> 0(Class<FR32X>))  [3.03;3.03]
		 Successful, latency: 3.03

-----VRNDSCALESSZrri_Int-----
	VRNDSCALESSZrri_Int(1(Class<VR128X>) -> 0(Class<VR128X>))  [3.07;3.07]
		 Successful, latency: 3.07
	VRNDSCALESSZrri_Int(2(Class<VR128X>) -> 0(Class<VR128X>))  [3.05;3.05]
		 Successful, latency: 3.05

-----VRNDSCALESSZrrib_Int-----
	VRNDSCALESSZrrib_Int(1(Class<VR128X>) -> 0(Class<VR128X>))  [3.01;3.01]
		 Successful, latency: 3.01
	VRNDSCALESSZrrib_Int(2(Class<VR128X>) -> 0(Class<VR128X>))  [3.06;3.06]
		 Successful, latency: 3.06

-----VRNDSCALESSZrribk_Int-----
	VRNDSCALESSZrribk_Int(1(Class<VR128X>) -> 0(Class<VR128X>))  [3.02;3.02]
		 Successful, latency: 3.02
	VRNDSCALESSZrribk_Int(3(Class<VR128X>) -> 0(Class<VR128X>))  [3.05;3.05]
		 Successful, latency: 3.05
	VRNDSCALESSZrribk_Int(4(Class<VR128X>) -> 0(Class<VR128X>))  [3.04;3.04]
		 Successful, latency: 3.04

-----VRNDSCALESSZrribkz_Int-----
	VRNDSCALESSZrribkz_Int(2(Class<VR128X>) -> 0(Class<VR128X>))  [3.03;3.03]
		 Successful, latency: 3.03
	VRNDSCALESSZrribkz_Int(3(Class<VR128X>) -> 0(Class<VR128X>))  [3.04;3.04]
		 Successful, latency: 3.04

-----VRNDSCALESSZrrik_Int-----
	VRNDSCALESSZrrik_Int(1(Class<VR128X>) -> 0(Class<VR128X>))  [3.03;3.03]
		 Successful, latency: 3.03
	VRNDSCALESSZrrik_Int(3(Class<VR128X>) -> 0(Class<VR128X>))  [3.04;3.04]
		 Successful, latency: 3.04
	VRNDSCALESSZrrik_Int(4(Class<VR128X>) -> 0(Class<VR128X>))  [3.02;3.02]
		 Successful, latency: 3.02

-----VRNDSCALESSZrrikz_Int-----
	VRNDSCALESSZrrikz_Int(2(Class<VR128X>) -> 0(Class<VR128X>))  [3.02;3.02]
		 Successful, latency: 3.02
	VRNDSCALESSZrrikz_Int(3(Class<VR128X>) -> 0(Class<VR128X>))  [3.02;3.02]
		 Successful, latency: 3.02

-----VROUNDPDYri-----
	VROUNDPDYri(1(Class<VR256>) -> 0(Class<VR256>))  [3.04;3.04]
		 Successful, latency: 3.04

-----VROUNDPDri-----
	VROUNDPDri(1(Class<VR128>) -> 0(Class<VR128>))  [3.04;3.04]
		 Successful, latency: 3.04

-----VROUNDPSYri-----
	VROUNDPSYri(1(Class<VR256>) -> 0(Class<VR256>))  [3.03;3.03]
		 Successful, latency: 3.03

-----VROUNDPSri-----
	VROUNDPSri(1(Class<VR128>) -> 0(Class<VR128>))  [3.02;3.02]
		 Successful, latency: 3.02

-----VROUNDSDri-----
	VROUNDSDri(1(Class<FR64>) -> 0(Class<FR64>))  [3.02;3.02]
		 Successful, latency: 3.02
	VROUNDSDri(2(Class<FR64>) -> 0(Class<FR64>))  [3.02;3.02]
		 Successful, latency: 3.02

-----VROUNDSDri_Int-----
	VROUNDSDri_Int(1(Class<VR128>) -> 0(Class<VR128>))  [3.03;3.03]
		 Successful, latency: 3.03
	VROUNDSDri_Int(2(Class<VR128>) -> 0(Class<VR128>))  [3.1;3.1]
		 Successful, latency: 3.1

-----VROUNDSSri-----
	VROUNDSSri(1(Class<FR32>) -> 0(Class<FR32>))  [3.03;3.03]
		 Successful, latency: 3.03
	VROUNDSSri(2(Class<FR32>) -> 0(Class<FR32>))  [3.05;3.05]
		 Successful, latency: 3.05

-----VROUNDSSri_Int-----
	VROUNDSSri_Int(1(Class<VR128>) -> 0(Class<VR128>))  [3.04;3.04]
		 Successful, latency: 3.04
	VROUNDSSri_Int(2(Class<VR128>) -> 0(Class<VR128>))  [3.01;3.01]
		 Successful, latency: 3.01

-----VRSQRT14PDZ128r-----
	VRSQRT14PDZ128r(1(Class<VR128X>) -> 0(Class<VR128X>))  [5.04;5.04]
		 Successful, latency: 5.04

-----VRSQRT14PDZ128rk-----
	VRSQRT14PDZ128rk(1(Class<VR128X>) -> 0(Class<VR128X>))  [5.04;5.04]
		 Successful, latency: 5.04
	VRSQRT14PDZ128rk(3(Class<VR128X>) -> 0(Class<VR128X>))  [5.03;5.03]
		 Successful, latency: 5.03

-----VRSQRT14PDZ128rkz-----
	VRSQRT14PDZ128rkz(2(Class<VR128X>) -> 0(Class<VR128X>))  [5.03;5.03]
		 Successful, latency: 5.03

-----VRSQRT14PDZ256r-----
	VRSQRT14PDZ256r(1(Class<VR256X>) -> 0(Class<VR256X>))  [5.04;5.04]
		 Successful, latency: 5.04

-----VRSQRT14PDZ256rk-----
	VRSQRT14PDZ256rk(1(Class<VR256X>) -> 0(Class<VR256X>))  [5.03;5.03]
		 Successful, latency: 5.03
	VRSQRT14PDZ256rk(3(Class<VR256X>) -> 0(Class<VR256X>))  [5.04;5.04]
		 Successful, latency: 5.04

-----VRSQRT14PDZ256rkz-----
	VRSQRT14PDZ256rkz(2(Class<VR256X>) -> 0(Class<VR256X>))  [5.04;5.04]
		 Successful, latency: 5.04

-----VRSQRT14PDZr-----
	VRSQRT14PDZr(1(Class<VR512>) -> 0(Class<VR512>))  [5.03;5.03]
		 Successful, latency: 5.03

-----VRSQRT14PDZrk-----
	VRSQRT14PDZrk(1(Class<VR512>) -> 0(Class<VR512>))  [5.05;5.05]
		 Successful, latency: 5.05
	VRSQRT14PDZrk(3(Class<VR512>) -> 0(Class<VR512>))  [5.07;5.07]
		 Successful, latency: 5.07

-----VRSQRT14PDZrkz-----
	VRSQRT14PDZrkz(2(Class<VR512>) -> 0(Class<VR512>))  [5.04;5.04]
		 Successful, latency: 5.04

-----VRSQRT14PSZ128r-----
	VRSQRT14PSZ128r(1(Class<VR128X>) -> 0(Class<VR128X>))  [5.04;5.04]
		 Successful, latency: 5.04

-----VRSQRT14PSZ128rk-----
	VRSQRT14PSZ128rk(1(Class<VR128X>) -> 0(Class<VR128X>))  [5.07;5.07]
		 Successful, latency: 5.07
	VRSQRT14PSZ128rk(3(Class<VR128X>) -> 0(Class<VR128X>))  [5.04;5.04]
		 Successful, latency: 5.04

-----VRSQRT14PSZ128rkz-----
	VRSQRT14PSZ128rkz(2(Class<VR128X>) -> 0(Class<VR128X>))  [5.04;5.04]
		 Successful, latency: 5.04

-----VRSQRT14PSZ256r-----
	VRSQRT14PSZ256r(1(Class<VR256X>) -> 0(Class<VR256X>))  [5.06;5.06]
		 Successful, latency: 5.06

-----VRSQRT14PSZ256rk-----
	VRSQRT14PSZ256rk(1(Class<VR256X>) -> 0(Class<VR256X>))  [5.03;5.03]
		 Successful, latency: 5.03
	VRSQRT14PSZ256rk(3(Class<VR256X>) -> 0(Class<VR256X>))  [5.04;5.04]
		 Successful, latency: 5.04

-----VRSQRT14PSZ256rkz-----
	VRSQRT14PSZ256rkz(2(Class<VR256X>) -> 0(Class<VR256X>))  [5.07;5.07]
		 Successful, latency: 5.07

-----VRSQRT14PSZr-----
	VRSQRT14PSZr(1(Class<VR512>) -> 0(Class<VR512>))  [5.05;5.05]
		 Successful, latency: 5.05

-----VRSQRT14PSZrk-----
	VRSQRT14PSZrk(1(Class<VR512>) -> 0(Class<VR512>))  [5.04;5.04]
		 Successful, latency: 5.04
	VRSQRT14PSZrk(3(Class<VR512>) -> 0(Class<VR512>))  [5.06;5.06]
		 Successful, latency: 5.06

-----VRSQRT14PSZrkz-----
	VRSQRT14PSZrkz(2(Class<VR512>) -> 0(Class<VR512>))  [5.05;5.05]
		 Successful, latency: 5.05

-----VRSQRT14SDZrr-----
	VRSQRT14SDZrr(1(Class<VR128X>) -> 0(Class<VR128X>))  [5.04;5.04]
		 Successful, latency: 5.04
	VRSQRT14SDZrr(2(Class<VR128X>) -> 0(Class<VR128X>))  [5.04;5.04]
		 Successful, latency: 5.04

-----VRSQRT14SDZrrk-----
	VRSQRT14SDZrrk(1(Class<VR128X>) -> 0(Class<VR128X>))  [5.05;5.05]
		 Successful, latency: 5.05
	VRSQRT14SDZrrk(3(Class<VR128X>) -> 0(Class<VR128X>))  [5.04;5.04]
		 Successful, latency: 5.04
	VRSQRT14SDZrrk(4(Class<VR128X>) -> 0(Class<VR128X>))  [5.04;5.04]
		 Successful, latency: 5.04

-----VRSQRT14SDZrrkz-----
	VRSQRT14SDZrrkz(2(Class<VR128X>) -> 0(Class<VR128X>))  [5.04;5.04]
		 Successful, latency: 5.04
	VRSQRT14SDZrrkz(3(Class<VR128X>) -> 0(Class<VR128X>))  [5.05;5.05]
		 Successful, latency: 5.05

-----VRSQRT14SSZrr-----
	VRSQRT14SSZrr(1(Class<VR128X>) -> 0(Class<VR128X>))  [5.03;5.03]
		 Successful, latency: 5.03
	VRSQRT14SSZrr(2(Class<VR128X>) -> 0(Class<VR128X>))  [5.04;5.04]
		 Successful, latency: 5.04

-----VRSQRT14SSZrrk-----
	VRSQRT14SSZrrk(1(Class<VR128X>) -> 0(Class<VR128X>))  [5.06;5.06]
		 Successful, latency: 5.06
	VRSQRT14SSZrrk(3(Class<VR128X>) -> 0(Class<VR128X>))  [5.03;5.03]
		 Successful, latency: 5.03
	VRSQRT14SSZrrk(4(Class<VR128X>) -> 0(Class<VR128X>))  [5.04;5.04]
		 Successful, latency: 5.04

-----VRSQRT14SSZrrkz-----
	VRSQRT14SSZrrkz(2(Class<VR128X>) -> 0(Class<VR128X>))  [5.1;5.1]
		 Successful, latency: 5.1
	VRSQRT14SSZrrkz(3(Class<VR128X>) -> 0(Class<VR128X>))  [5.04;5.04]
		 Successful, latency: 5.04

-----VRSQRT28PDZr-----
	VRSQRT28PDZr(1(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VRSQRT28PDZrb-----
	VRSQRT28PDZrb(1(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VRSQRT28PDZrbk-----
	VRSQRT28PDZrbk(1(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VRSQRT28PDZrbk(3(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VRSQRT28PDZrbkz-----
	VRSQRT28PDZrbkz(2(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VRSQRT28PDZrk-----
	VRSQRT28PDZrk(1(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VRSQRT28PDZrk(3(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VRSQRT28PDZrkz-----
	VRSQRT28PDZrkz(2(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VRSQRT28PSZr-----
	VRSQRT28PSZr(1(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VRSQRT28PSZrb-----
	VRSQRT28PSZrb(1(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VRSQRT28PSZrbk-----
	VRSQRT28PSZrbk(1(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VRSQRT28PSZrbk(3(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VRSQRT28PSZrbkz-----
	VRSQRT28PSZrbkz(2(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VRSQRT28PSZrk-----
	VRSQRT28PSZrk(1(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VRSQRT28PSZrk(3(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VRSQRT28PSZrkz-----
	VRSQRT28PSZrkz(2(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VRSQRT28SDZr-----
	VRSQRT28SDZr(1(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VRSQRT28SDZr(2(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VRSQRT28SDZrb-----
	VRSQRT28SDZrb(1(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VRSQRT28SDZrb(2(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VRSQRT28SDZrbk-----
	VRSQRT28SDZrbk(1(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VRSQRT28SDZrbk(3(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VRSQRT28SDZrbk(4(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VRSQRT28SDZrbkz-----
	VRSQRT28SDZrbkz(2(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VRSQRT28SDZrbkz(3(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VRSQRT28SDZrk-----
	VRSQRT28SDZrk(1(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VRSQRT28SDZrk(3(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VRSQRT28SDZrk(4(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VRSQRT28SDZrkz-----
	VRSQRT28SDZrkz(2(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VRSQRT28SDZrkz(3(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VRSQRT28SSZr-----
	VRSQRT28SSZr(1(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VRSQRT28SSZr(2(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VRSQRT28SSZrb-----
	VRSQRT28SSZrb(1(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VRSQRT28SSZrb(2(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VRSQRT28SSZrbk-----
	VRSQRT28SSZrbk(1(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VRSQRT28SSZrbk(3(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VRSQRT28SSZrbk(4(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VRSQRT28SSZrbkz-----
	VRSQRT28SSZrbkz(2(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VRSQRT28SSZrbkz(3(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VRSQRT28SSZrk-----
	VRSQRT28SSZrk(1(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VRSQRT28SSZrk(3(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VRSQRT28SSZrk(4(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VRSQRT28SSZrkz-----
	VRSQRT28SSZrkz(2(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VRSQRT28SSZrkz(3(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VRSQRTBF16Z128r-----
	VRSQRTBF16Z128r(1(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VRSQRTBF16Z128rk-----
	VRSQRTBF16Z128rk(1(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VRSQRTBF16Z128rk(3(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VRSQRTBF16Z128rkz-----
	VRSQRTBF16Z128rkz(2(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VRSQRTBF16Z256r-----
	VRSQRTBF16Z256r(1(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VRSQRTBF16Z256rk-----
	VRSQRTBF16Z256rk(1(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VRSQRTBF16Z256rk(3(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VRSQRTBF16Z256rkz-----
	VRSQRTBF16Z256rkz(2(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VRSQRTBF16Zr-----
	VRSQRTBF16Zr(1(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VRSQRTBF16Zrk-----
	VRSQRTBF16Zrk(1(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VRSQRTBF16Zrk(3(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VRSQRTBF16Zrkz-----
	VRSQRTBF16Zrkz(2(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VRSQRTPHZ128r-----
	VRSQRTPHZ128r(1(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VRSQRTPHZ128rk-----
	VRSQRTPHZ128rk(1(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VRSQRTPHZ128rk(3(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VRSQRTPHZ128rkz-----
	VRSQRTPHZ128rkz(2(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VRSQRTPHZ256r-----
	VRSQRTPHZ256r(1(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VRSQRTPHZ256rk-----
	VRSQRTPHZ256rk(1(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VRSQRTPHZ256rk(3(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VRSQRTPHZ256rkz-----
	VRSQRTPHZ256rkz(2(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VRSQRTPHZr-----
	VRSQRTPHZr(1(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VRSQRTPHZrk-----
	VRSQRTPHZrk(1(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VRSQRTPHZrk(3(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VRSQRTPHZrkz-----
	VRSQRTPHZrkz(2(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VRSQRTPSYr-----
	VRSQRTPSYr(1(Class<VR256>) -> 0(Class<VR256>))  [4.03;4.03]
		 Successful, latency: 4.03

-----VRSQRTPSr-----
	VRSQRTPSr(1(Class<VR128>) -> 0(Class<VR128>))  [4.03;4.03]
		 Successful, latency: 4.03

-----VRSQRTSHZrr-----
	VRSQRTSHZrr(1(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VRSQRTSHZrr(2(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VRSQRTSHZrrk-----
	VRSQRTSHZrrk(1(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VRSQRTSHZrrk(3(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VRSQRTSHZrrk(4(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VRSQRTSHZrrkz-----
	VRSQRTSHZrrkz(2(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VRSQRTSHZrrkz(3(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VRSQRTSSr-----
	VRSQRTSSr(1(Class<FR32>) -> 0(Class<FR32>))  [4.03;4.03]
		 Successful, latency: 4.03
	VRSQRTSSr(2(Class<FR32>) -> 0(Class<FR32>))  [4.06;4.06]
		 Successful, latency: 4.06

-----VRSQRTSSr_Int-----
	VRSQRTSSr_Int(1(Class<VR128>) -> 0(Class<VR128>))  [4.05;4.05]
		 Successful, latency: 4.05
	VRSQRTSSr_Int(2(Class<VR128>) -> 0(Class<VR128>))  [4.03;4.03]
		 Successful, latency: 4.03

-----VSCALEFBF16Z128rr-----
	VSCALEFBF16Z128rr(1(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VSCALEFBF16Z128rr(2(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VSCALEFBF16Z128rrk-----
	VSCALEFBF16Z128rrk(1(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VSCALEFBF16Z128rrk(3(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VSCALEFBF16Z128rrk(4(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VSCALEFBF16Z128rrkz-----
	VSCALEFBF16Z128rrkz(2(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VSCALEFBF16Z128rrkz(3(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VSCALEFBF16Z256rr-----
	VSCALEFBF16Z256rr(1(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VSCALEFBF16Z256rr(2(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VSCALEFBF16Z256rrk-----
	VSCALEFBF16Z256rrk(1(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VSCALEFBF16Z256rrk(3(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VSCALEFBF16Z256rrk(4(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VSCALEFBF16Z256rrkz-----
	VSCALEFBF16Z256rrkz(2(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VSCALEFBF16Z256rrkz(3(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VSCALEFBF16Zrr-----
	VSCALEFBF16Zrr(1(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VSCALEFBF16Zrr(2(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VSCALEFBF16Zrrk-----
	VSCALEFBF16Zrrk(1(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VSCALEFBF16Zrrk(3(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VSCALEFBF16Zrrk(4(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VSCALEFBF16Zrrkz-----
	VSCALEFBF16Zrrkz(2(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VSCALEFBF16Zrrkz(3(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VSCALEFPDZ128rr-----
	VSCALEFPDZ128rr(1(Class<VR128X>) -> 0(Class<VR128X>))  [3.04;3.04]
		 Successful, latency: 3.04
	VSCALEFPDZ128rr(2(Class<VR128X>) -> 0(Class<VR128X>))  [6.06;6.06]
		 Successful, latency: 6.06

-----VSCALEFPDZ128rrk-----
	VSCALEFPDZ128rrk(1(Class<VR128X>) -> 0(Class<VR128X>))  [3.03;3.03]
		 Successful, latency: 3.03
	VSCALEFPDZ128rrk(3(Class<VR128X>) -> 0(Class<VR128X>))  [3.02;3.02]
		 Successful, latency: 3.02
	VSCALEFPDZ128rrk(4(Class<VR128X>) -> 0(Class<VR128X>))  [6.05;6.05]
		 Successful, latency: 6.05

-----VSCALEFPDZ128rrkz-----
	VSCALEFPDZ128rrkz(2(Class<VR128X>) -> 0(Class<VR128X>))  [3.03;3.03]
		 Successful, latency: 3.03
	VSCALEFPDZ128rrkz(3(Class<VR128X>) -> 0(Class<VR128X>))  [6.06;6.06]
		 Successful, latency: 6.06

-----VSCALEFPDZ256rr-----
	VSCALEFPDZ256rr(1(Class<VR256X>) -> 0(Class<VR256X>))  [3.03;3.03]
		 Successful, latency: 3.03
	VSCALEFPDZ256rr(2(Class<VR256X>) -> 0(Class<VR256X>))  [6.04;6.04]
		 Successful, latency: 6.04

-----VSCALEFPDZ256rrb-----
	VSCALEFPDZ256rrb(1(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VSCALEFPDZ256rrb(2(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VSCALEFPDZ256rrbk-----
	VSCALEFPDZ256rrbk(1(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VSCALEFPDZ256rrbk(3(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VSCALEFPDZ256rrbk(4(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VSCALEFPDZ256rrbkz-----
	VSCALEFPDZ256rrbkz(2(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VSCALEFPDZ256rrbkz(3(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VSCALEFPDZ256rrk-----
	VSCALEFPDZ256rrk(1(Class<VR256X>) -> 0(Class<VR256X>))  [3.04;3.04]
		 Successful, latency: 3.04
	VSCALEFPDZ256rrk(3(Class<VR256X>) -> 0(Class<VR256X>))  [3.02;3.02]
		 Successful, latency: 3.02
	VSCALEFPDZ256rrk(4(Class<VR256X>) -> 0(Class<VR256X>))  [6.06;6.06]
		 Successful, latency: 6.06

-----VSCALEFPDZ256rrkz-----
	VSCALEFPDZ256rrkz(2(Class<VR256X>) -> 0(Class<VR256X>))  [3.03;3.03]
		 Successful, latency: 3.03
	VSCALEFPDZ256rrkz(3(Class<VR256X>) -> 0(Class<VR256X>))  [6.04;6.04]
		 Successful, latency: 6.04

-----VSCALEFPDZrr-----
	VSCALEFPDZrr(1(Class<VR512>) -> 0(Class<VR512>))  [3.33;3.33]
		 Successful, latency: 3.33
	VSCALEFPDZrr(2(Class<VR512>) -> 0(Class<VR512>))  [6.05;6.05]
		 Successful, latency: 6.05

-----VSCALEFPDZrrb-----
	VSCALEFPDZrrb(1(Class<VR512>) -> 0(Class<VR512>))  [3.35;3.35]
		 Successful, latency: 3.35
	VSCALEFPDZrrb(2(Class<VR512>) -> 0(Class<VR512>))  [6.05;6.05]
		 Successful, latency: 6.05

-----VSCALEFPDZrrbk-----
	VSCALEFPDZrrbk(1(Class<VR512>) -> 0(Class<VR512>))  [3.36;3.36]
		 Successful, latency: 3.36
	VSCALEFPDZrrbk(3(Class<VR512>) -> 0(Class<VR512>))  [3.35;3.35]
		 Successful, latency: 3.35
	VSCALEFPDZrrbk(4(Class<VR512>) -> 0(Class<VR512>))  [6.07;6.07]
		 Successful, latency: 6.07

-----VSCALEFPDZrrbkz-----
	VSCALEFPDZrrbkz(2(Class<VR512>) -> 0(Class<VR512>))  [3.37;3.37]
		 Successful, latency: 3.37
	VSCALEFPDZrrbkz(3(Class<VR512>) -> 0(Class<VR512>))  [6.05;6.05]
		 Successful, latency: 6.05

-----VSCALEFPDZrrk-----
	VSCALEFPDZrrk(1(Class<VR512>) -> 0(Class<VR512>))  [3.34;3.34]
		 Successful, latency: 3.34
	VSCALEFPDZrrk(3(Class<VR512>) -> 0(Class<VR512>))  [3.36;3.36]
		 Successful, latency: 3.36
	VSCALEFPDZrrk(4(Class<VR512>) -> 0(Class<VR512>))  [6.04;6.04]
		 Successful, latency: 6.04

-----VSCALEFPDZrrkz-----
	VSCALEFPDZrrkz(2(Class<VR512>) -> 0(Class<VR512>))  [3.33;3.33]
		 Successful, latency: 3.33
	VSCALEFPDZrrkz(3(Class<VR512>) -> 0(Class<VR512>))  [6.05;6.05]
		 Successful, latency: 6.05

-----VSCALEFPHZ128rr-----
	VSCALEFPHZ128rr(1(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VSCALEFPHZ128rr(2(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VSCALEFPHZ128rrk-----
	VSCALEFPHZ128rrk(1(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VSCALEFPHZ128rrk(3(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VSCALEFPHZ128rrk(4(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VSCALEFPHZ128rrkz-----
	VSCALEFPHZ128rrkz(2(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VSCALEFPHZ128rrkz(3(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VSCALEFPHZ256rr-----
	VSCALEFPHZ256rr(1(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VSCALEFPHZ256rr(2(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VSCALEFPHZ256rrb-----
	VSCALEFPHZ256rrb(1(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VSCALEFPHZ256rrb(2(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VSCALEFPHZ256rrbk-----
	VSCALEFPHZ256rrbk(1(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VSCALEFPHZ256rrbk(3(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VSCALEFPHZ256rrbk(4(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VSCALEFPHZ256rrbkz-----
	VSCALEFPHZ256rrbkz(2(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VSCALEFPHZ256rrbkz(3(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VSCALEFPHZ256rrk-----
	VSCALEFPHZ256rrk(1(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VSCALEFPHZ256rrk(3(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VSCALEFPHZ256rrk(4(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VSCALEFPHZ256rrkz-----
	VSCALEFPHZ256rrkz(2(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VSCALEFPHZ256rrkz(3(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VSCALEFPHZrr-----
	VSCALEFPHZrr(1(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VSCALEFPHZrr(2(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VSCALEFPHZrrb-----
	VSCALEFPHZrrb(1(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VSCALEFPHZrrb(2(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VSCALEFPHZrrbk-----
	VSCALEFPHZrrbk(1(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VSCALEFPHZrrbk(3(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VSCALEFPHZrrbk(4(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VSCALEFPHZrrbkz-----
	VSCALEFPHZrrbkz(2(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VSCALEFPHZrrbkz(3(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VSCALEFPHZrrk-----
	VSCALEFPHZrrk(1(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VSCALEFPHZrrk(3(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VSCALEFPHZrrk(4(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VSCALEFPHZrrkz-----
	VSCALEFPHZrrkz(2(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VSCALEFPHZrrkz(3(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VSCALEFPSZ128rr-----
	VSCALEFPSZ128rr(1(Class<VR128X>) -> 0(Class<VR128X>))  [3.05;3.05]
		 Successful, latency: 3.05
	VSCALEFPSZ128rr(2(Class<VR128X>) -> 0(Class<VR128X>))  [6.04;6.04]
		 Successful, latency: 6.04

-----VSCALEFPSZ128rrk-----
	VSCALEFPSZ128rrk(1(Class<VR128X>) -> 0(Class<VR128X>))  [3.04;3.04]
		 Successful, latency: 3.04
	VSCALEFPSZ128rrk(3(Class<VR128X>) -> 0(Class<VR128X>))  [3.04;3.04]
		 Successful, latency: 3.04
	VSCALEFPSZ128rrk(4(Class<VR128X>) -> 0(Class<VR128X>))  [6.07;6.07]
		 Successful, latency: 6.07

-----VSCALEFPSZ128rrkz-----
	VSCALEFPSZ128rrkz(2(Class<VR128X>) -> 0(Class<VR128X>))  [3.04;3.04]
		 Successful, latency: 3.04
	VSCALEFPSZ128rrkz(3(Class<VR128X>) -> 0(Class<VR128X>))  [6.05;6.05]
		 Successful, latency: 6.05

-----VSCALEFPSZ256rr-----
	VSCALEFPSZ256rr(1(Class<VR256X>) -> 0(Class<VR256X>))  [3.04;3.04]
		 Successful, latency: 3.04
	VSCALEFPSZ256rr(2(Class<VR256X>) -> 0(Class<VR256X>))  [6.04;6.04]
		 Successful, latency: 6.04

-----VSCALEFPSZ256rrb-----
	VSCALEFPSZ256rrb(1(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VSCALEFPSZ256rrb(2(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VSCALEFPSZ256rrbk-----
	VSCALEFPSZ256rrbk(1(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VSCALEFPSZ256rrbk(3(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VSCALEFPSZ256rrbk(4(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VSCALEFPSZ256rrbkz-----
	VSCALEFPSZ256rrbkz(2(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VSCALEFPSZ256rrbkz(3(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VSCALEFPSZ256rrk-----
	VSCALEFPSZ256rrk(1(Class<VR256X>) -> 0(Class<VR256X>))  [3.06;3.06]
		 Successful, latency: 3.06
	VSCALEFPSZ256rrk(3(Class<VR256X>) -> 0(Class<VR256X>))  [3.04;3.04]
		 Successful, latency: 3.04
	VSCALEFPSZ256rrk(4(Class<VR256X>) -> 0(Class<VR256X>))  [6.04;6.04]
		 Successful, latency: 6.04

-----VSCALEFPSZ256rrkz-----
	VSCALEFPSZ256rrkz(2(Class<VR256X>) -> 0(Class<VR256X>))  [3.04;3.04]
		 Successful, latency: 3.04
	VSCALEFPSZ256rrkz(3(Class<VR256X>) -> 0(Class<VR256X>))  [6.02;6.02]
		 Successful, latency: 6.02

-----VSCALEFPSZrr-----
	VSCALEFPSZrr(1(Class<VR512>) -> 0(Class<VR512>))  [3.33;3.33]
		 Successful, latency: 3.33
	VSCALEFPSZrr(2(Class<VR512>) -> 0(Class<VR512>))  [6.02;6.02]
		 Successful, latency: 6.02

-----VSCALEFPSZrrb-----
	VSCALEFPSZrrb(1(Class<VR512>) -> 0(Class<VR512>))  [3.33;3.33]
		 Successful, latency: 3.33
	VSCALEFPSZrrb(2(Class<VR512>) -> 0(Class<VR512>))  [6.08;6.08]
		 Successful, latency: 6.08

-----VSCALEFPSZrrbk-----
	VSCALEFPSZrrbk(1(Class<VR512>) -> 0(Class<VR512>))  [3.31;3.31]
		 Successful, latency: 3.31
	VSCALEFPSZrrbk(3(Class<VR512>) -> 0(Class<VR512>))  [3.38;3.38]
		 Successful, latency: 3.38
	VSCALEFPSZrrbk(4(Class<VR512>) -> 0(Class<VR512>))  [6.06;6.06]
		 Successful, latency: 6.06

-----VSCALEFPSZrrbkz-----
	VSCALEFPSZrrbkz(2(Class<VR512>) -> 0(Class<VR512>))  [3.36;3.36]
		 Successful, latency: 3.36
	VSCALEFPSZrrbkz(3(Class<VR512>) -> 0(Class<VR512>))  [6.06;6.06]
		 Successful, latency: 6.06

-----VSCALEFPSZrrk-----
	VSCALEFPSZrrk(1(Class<VR512>) -> 0(Class<VR512>))  [3.34;3.34]
		 Successful, latency: 3.34
	VSCALEFPSZrrk(3(Class<VR512>) -> 0(Class<VR512>))  [3.39;3.39]
		 Successful, latency: 3.39
	VSCALEFPSZrrk(4(Class<VR512>) -> 0(Class<VR512>))  [6.05;6.05]
		 Successful, latency: 6.05

-----VSCALEFPSZrrkz-----
	VSCALEFPSZrrkz(2(Class<VR512>) -> 0(Class<VR512>))  [3.35;3.35]
		 Successful, latency: 3.35
	VSCALEFPSZrrkz(3(Class<VR512>) -> 0(Class<VR512>))  [6.03;6.03]
		 Successful, latency: 6.03

-----VSCALEFSDZrr-----
	VSCALEFSDZrr(1(Class<VR128X>) -> 0(Class<VR128X>))  [3.04;3.04]
		 Successful, latency: 3.04
	VSCALEFSDZrr(2(Class<VR128X>) -> 0(Class<VR128X>))  [6.04;6.04]
		 Successful, latency: 6.04

-----VSCALEFSDZrrb_Int-----
	VSCALEFSDZrrb_Int(1(Class<VR128X>) -> 0(Class<VR128X>))  [3.04;3.04]
		 Successful, latency: 3.04
	VSCALEFSDZrrb_Int(2(Class<VR128X>) -> 0(Class<VR128X>))  [6.05;6.05]
		 Successful, latency: 6.05

-----VSCALEFSDZrrbk_Int-----
	VSCALEFSDZrrbk_Int(1(Class<VR128X>) -> 0(Class<VR128X>))  [3.04;3.04]
		 Successful, latency: 3.04
	VSCALEFSDZrrbk_Int(3(Class<VR128X>) -> 0(Class<VR128X>))  [3.05;3.05]
		 Successful, latency: 3.05
	VSCALEFSDZrrbk_Int(4(Class<VR128X>) -> 0(Class<VR128X>))  [6.07;6.07]
		 Successful, latency: 6.07

-----VSCALEFSDZrrbkz_Int-----
	VSCALEFSDZrrbkz_Int(2(Class<VR128X>) -> 0(Class<VR128X>))  [3.04;3.04]
		 Successful, latency: 3.04
	VSCALEFSDZrrbkz_Int(3(Class<VR128X>) -> 0(Class<VR128X>))  [6.05;6.05]
		 Successful, latency: 6.05

-----VSCALEFSDZrrk-----
	VSCALEFSDZrrk(1(Class<VR128X>) -> 0(Class<VR128X>))  [3.04;3.04]
		 Successful, latency: 3.04
	VSCALEFSDZrrk(3(Class<VR128X>) -> 0(Class<VR128X>))  [3.05;3.05]
		 Successful, latency: 3.05
	VSCALEFSDZrrk(4(Class<VR128X>) -> 0(Class<VR128X>))  [6.05;6.05]
		 Successful, latency: 6.05

-----VSCALEFSDZrrkz-----
	VSCALEFSDZrrkz(2(Class<VR128X>) -> 0(Class<VR128X>))  [3.05;3.05]
		 Successful, latency: 3.05
	VSCALEFSDZrrkz(3(Class<VR128X>) -> 0(Class<VR128X>))  [6.07;6.07]
		 Successful, latency: 6.07

-----VSCALEFSHZrr-----
	VSCALEFSHZrr(1(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VSCALEFSHZrr(2(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VSCALEFSHZrrb_Int-----
	VSCALEFSHZrrb_Int(1(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VSCALEFSHZrrb_Int(2(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VSCALEFSHZrrbk_Int-----
	VSCALEFSHZrrbk_Int(1(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VSCALEFSHZrrbk_Int(3(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VSCALEFSHZrrbk_Int(4(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VSCALEFSHZrrbkz_Int-----
	VSCALEFSHZrrbkz_Int(2(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VSCALEFSHZrrbkz_Int(3(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VSCALEFSHZrrk-----
	VSCALEFSHZrrk(1(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VSCALEFSHZrrk(3(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VSCALEFSHZrrk(4(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VSCALEFSHZrrkz-----
	VSCALEFSHZrrkz(2(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VSCALEFSHZrrkz(3(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VSCALEFSSZrr-----
	VSCALEFSSZrr(1(Class<VR128X>) -> 0(Class<VR128X>))  [3.04;3.04]
		 Successful, latency: 3.04
	VSCALEFSSZrr(2(Class<VR128X>) -> 0(Class<VR128X>))  [6.06;6.06]
		 Successful, latency: 6.06

-----VSCALEFSSZrrb_Int-----
	VSCALEFSSZrrb_Int(1(Class<VR128X>) -> 0(Class<VR128X>))  [3.04;3.04]
		 Successful, latency: 3.04
	VSCALEFSSZrrb_Int(2(Class<VR128X>) -> 0(Class<VR128X>))  [6.06;6.06]
		 Successful, latency: 6.06

-----VSCALEFSSZrrbk_Int-----
	VSCALEFSSZrrbk_Int(1(Class<VR128X>) -> 0(Class<VR128X>))  [3.03;3.03]
		 Successful, latency: 3.03
	VSCALEFSSZrrbk_Int(3(Class<VR128X>) -> 0(Class<VR128X>))  [3.01;3.01]
		 Successful, latency: 3.01
	VSCALEFSSZrrbk_Int(4(Class<VR128X>) -> 0(Class<VR128X>))  [6.04;6.04]
		 Successful, latency: 6.04

-----VSCALEFSSZrrbkz_Int-----
	VSCALEFSSZrrbkz_Int(2(Class<VR128X>) -> 0(Class<VR128X>))  [3.06;3.06]
		 Successful, latency: 3.06
	VSCALEFSSZrrbkz_Int(3(Class<VR128X>) -> 0(Class<VR128X>))  [6.05;6.05]
		 Successful, latency: 6.05

-----VSCALEFSSZrrk-----
	VSCALEFSSZrrk(1(Class<VR128X>) -> 0(Class<VR128X>))  [3.02;3.02]
		 Successful, latency: 3.02
	VSCALEFSSZrrk(3(Class<VR128X>) -> 0(Class<VR128X>))  [3.05;3.05]
		 Successful, latency: 3.05
	VSCALEFSSZrrk(4(Class<VR128X>) -> 0(Class<VR128X>))  [6.04;6.04]
		 Successful, latency: 6.04

-----VSCALEFSSZrrkz-----
	VSCALEFSSZrrkz(2(Class<VR128X>) -> 0(Class<VR128X>))  [3.05;3.05]
		 Successful, latency: 3.05
	VSCALEFSSZrrkz(3(Class<VR128X>) -> 0(Class<VR128X>))  [6.06;6.06]
		 Successful, latency: 6.06

-----VSHA512MSG1rr-----
	VSHA512MSG1rr(1(Class<VR256>) -> 0(Class<VR256>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VSHA512MSG2rr-----
	VSHA512MSG2rr(1(Class<VR256>) -> 0(Class<VR256>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VSHA512MSG2rr(2(Class<VR256>) -> 0(Class<VR256>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VSHA512RNDS2rr-----
	VSHA512RNDS2rr(1(Class<VR256>) -> 0(Class<VR256>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VSHA512RNDS2rr(2(Class<VR256>) -> 0(Class<VR256>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VSHUFF32X4Z256rri-----
	VSHUFF32X4Z256rri(1(Class<VR256X>) -> 0(Class<VR256X>))  [3.03;3.03]
		 Successful, latency: 3.03
	VSHUFF32X4Z256rri(2(Class<VR256X>) -> 0(Class<VR256X>))  [3.03;3.03]
		 Successful, latency: 3.03

-----VSHUFF32X4Z256rrik-----
	VSHUFF32X4Z256rrik(1(Class<VR256X>) -> 0(Class<VR256X>))  [3.01;3.01]
		 Successful, latency: 3.01
	VSHUFF32X4Z256rrik(3(Class<VR256X>) -> 0(Class<VR256X>))  [3.03;3.03]
		 Successful, latency: 3.03
	VSHUFF32X4Z256rrik(4(Class<VR256X>) -> 0(Class<VR256X>))  [3.06;3.06]
		 Successful, latency: 3.06

-----VSHUFF32X4Z256rrikz-----
	VSHUFF32X4Z256rrikz(2(Class<VR256X>) -> 0(Class<VR256X>))  [3.04;3.04]
		 Successful, latency: 3.04
	VSHUFF32X4Z256rrikz(3(Class<VR256X>) -> 0(Class<VR256X>))  [3.05;3.05]
		 Successful, latency: 3.05

-----VSHUFF32X4Zrri-----
	VSHUFF32X4Zrri(1(Class<VR512>) -> 0(Class<VR512>))  [4.04;4.04]
		 Successful, latency: 4.04
	VSHUFF32X4Zrri(2(Class<VR512>) -> 0(Class<VR512>))  [4.03;4.03]
		 Successful, latency: 4.03

-----VSHUFF32X4Zrrik-----
	VSHUFF32X4Zrrik(1(Class<VR512>) -> 0(Class<VR512>))  [4.05;4.05]
		 Successful, latency: 4.05
	VSHUFF32X4Zrrik(3(Class<VR512>) -> 0(Class<VR512>))  [4.06;4.06]
		 Successful, latency: 4.06
	VSHUFF32X4Zrrik(4(Class<VR512>) -> 0(Class<VR512>))  [4.04;4.04]
		 Successful, latency: 4.04

-----VSHUFF32X4Zrrikz-----
	VSHUFF32X4Zrrikz(2(Class<VR512>) -> 0(Class<VR512>))  [4.04;4.04]
		 Successful, latency: 4.04
	VSHUFF32X4Zrrikz(3(Class<VR512>) -> 0(Class<VR512>))  [4.02;4.02]
		 Successful, latency: 4.02

-----VSHUFF64X2Z256rri-----
	VSHUFF64X2Z256rri(1(Class<VR256X>) -> 0(Class<VR256X>))  [3.02;3.02]
		 Successful, latency: 3.02
	VSHUFF64X2Z256rri(2(Class<VR256X>) -> 0(Class<VR256X>))  [3.05;3.05]
		 Successful, latency: 3.05

-----VSHUFF64X2Z256rrik-----
	VSHUFF64X2Z256rrik(1(Class<VR256X>) -> 0(Class<VR256X>))  [3.02;3.02]
		 Successful, latency: 3.02
	VSHUFF64X2Z256rrik(3(Class<VR256X>) -> 0(Class<VR256X>))  [3.02;3.02]
		 Successful, latency: 3.02
	VSHUFF64X2Z256rrik(4(Class<VR256X>) -> 0(Class<VR256X>))  [3.02;3.02]
		 Successful, latency: 3.02

-----VSHUFF64X2Z256rrikz-----
	VSHUFF64X2Z256rrikz(2(Class<VR256X>) -> 0(Class<VR256X>))  [3.03;3.03]
		 Successful, latency: 3.03
	VSHUFF64X2Z256rrikz(3(Class<VR256X>) -> 0(Class<VR256X>))  [3.06;3.06]
		 Successful, latency: 3.06

-----VSHUFF64X2Zrri-----
	VSHUFF64X2Zrri(1(Class<VR512>) -> 0(Class<VR512>))  [4.02;4.02]
		 Successful, latency: 4.02
	VSHUFF64X2Zrri(2(Class<VR512>) -> 0(Class<VR512>))  [4.04;4.04]
		 Successful, latency: 4.04

-----VSHUFF64X2Zrrik-----
	VSHUFF64X2Zrrik(1(Class<VR512>) -> 0(Class<VR512>))  [4.04;4.04]
		 Successful, latency: 4.04
	VSHUFF64X2Zrrik(3(Class<VR512>) -> 0(Class<VR512>))  [4.03;4.03]
		 Successful, latency: 4.03
	VSHUFF64X2Zrrik(4(Class<VR512>) -> 0(Class<VR512>))  [4.04;4.04]
		 Successful, latency: 4.04

-----VSHUFF64X2Zrrikz-----
	VSHUFF64X2Zrrikz(2(Class<VR512>) -> 0(Class<VR512>))  [4.06;4.06]
		 Successful, latency: 4.06
	VSHUFF64X2Zrrikz(3(Class<VR512>) -> 0(Class<VR512>))  [4.02;4.02]
		 Successful, latency: 4.02

-----VSHUFI32X4Z256rri-----
	VSHUFI32X4Z256rri(1(Class<VR256X>) -> 0(Class<VR256X>))  [3.02;3.02]
		 Successful, latency: 3.02
	VSHUFI32X4Z256rri(2(Class<VR256X>) -> 0(Class<VR256X>))  [3.03;3.03]
		 Successful, latency: 3.03

-----VSHUFI32X4Z256rrik-----
	VSHUFI32X4Z256rrik(1(Class<VR256X>) -> 0(Class<VR256X>))  [3.04;3.04]
		 Successful, latency: 3.04
	VSHUFI32X4Z256rrik(3(Class<VR256X>) -> 0(Class<VR256X>))  [3.03;3.03]
		 Successful, latency: 3.03
	VSHUFI32X4Z256rrik(4(Class<VR256X>) -> 0(Class<VR256X>))  [3.03;3.03]
		 Successful, latency: 3.03

-----VSHUFI32X4Z256rrikz-----
	VSHUFI32X4Z256rrikz(2(Class<VR256X>) -> 0(Class<VR256X>))  [3.02;3.02]
		 Successful, latency: 3.02
	VSHUFI32X4Z256rrikz(3(Class<VR256X>) -> 0(Class<VR256X>))  [3.05;3.05]
		 Successful, latency: 3.05

-----VSHUFI32X4Zrri-----
	VSHUFI32X4Zrri(1(Class<VR512>) -> 0(Class<VR512>))  [4.04;4.04]
		 Successful, latency: 4.04
	VSHUFI32X4Zrri(2(Class<VR512>) -> 0(Class<VR512>))  [4.03;4.03]
		 Successful, latency: 4.03

-----VSHUFI32X4Zrrik-----
	VSHUFI32X4Zrrik(1(Class<VR512>) -> 0(Class<VR512>))  [4.03;4.03]
		 Successful, latency: 4.03
	VSHUFI32X4Zrrik(3(Class<VR512>) -> 0(Class<VR512>))  [4.03;4.03]
		 Successful, latency: 4.03
	VSHUFI32X4Zrrik(4(Class<VR512>) -> 0(Class<VR512>))  [4.03;4.03]
		 Successful, latency: 4.03

-----VSHUFI32X4Zrrikz-----
	VSHUFI32X4Zrrikz(2(Class<VR512>) -> 0(Class<VR512>))  [4.03;4.03]
		 Successful, latency: 4.03
	VSHUFI32X4Zrrikz(3(Class<VR512>) -> 0(Class<VR512>))  [4.05;4.05]
		 Successful, latency: 4.05

-----VSHUFI64X2Z256rri-----
	VSHUFI64X2Z256rri(1(Class<VR256X>) -> 0(Class<VR256X>))  [3.03;3.03]
		 Successful, latency: 3.03
	VSHUFI64X2Z256rri(2(Class<VR256X>) -> 0(Class<VR256X>))  [3.04;3.04]
		 Successful, latency: 3.04

-----VSHUFI64X2Z256rrik-----
	VSHUFI64X2Z256rrik(1(Class<VR256X>) -> 0(Class<VR256X>))  [3.02;3.02]
		 Successful, latency: 3.02
	VSHUFI64X2Z256rrik(3(Class<VR256X>) -> 0(Class<VR256X>))  [3.02;3.02]
		 Successful, latency: 3.02
	VSHUFI64X2Z256rrik(4(Class<VR256X>) -> 0(Class<VR256X>))  [3.05;3.05]
		 Successful, latency: 3.05

-----VSHUFI64X2Z256rrikz-----
	VSHUFI64X2Z256rrikz(2(Class<VR256X>) -> 0(Class<VR256X>))  [3.04;3.04]
		 Successful, latency: 3.04
	VSHUFI64X2Z256rrikz(3(Class<VR256X>) -> 0(Class<VR256X>))  [3.02;3.02]
		 Successful, latency: 3.02

-----VSHUFI64X2Zrri-----
	VSHUFI64X2Zrri(1(Class<VR512>) -> 0(Class<VR512>))  [4.03;4.03]
		 Successful, latency: 4.03
	VSHUFI64X2Zrri(2(Class<VR512>) -> 0(Class<VR512>))  [4.03;4.03]
		 Successful, latency: 4.03

-----VSHUFI64X2Zrrik-----
	VSHUFI64X2Zrrik(1(Class<VR512>) -> 0(Class<VR512>))  [4.04;4.04]
		 Successful, latency: 4.04
	VSHUFI64X2Zrrik(3(Class<VR512>) -> 0(Class<VR512>))  [4.03;4.03]
		 Successful, latency: 4.03
	VSHUFI64X2Zrrik(4(Class<VR512>) -> 0(Class<VR512>))  [4.08;4.08]
		 Successful, latency: 4.08

-----VSHUFI64X2Zrrikz-----
	VSHUFI64X2Zrrikz(2(Class<VR512>) -> 0(Class<VR512>))  [4.03;4.03]
		 Successful, latency: 4.03
	VSHUFI64X2Zrrikz(3(Class<VR512>) -> 0(Class<VR512>))  [4.03;4.03]
		 Successful, latency: 4.03

-----VSHUFPDYrri-----
	VSHUFPDYrri(1(Class<VR256>) -> 0(Class<VR256>))  [1.01;1.01]
		 Successful, latency: 1.01
	VSHUFPDYrri(2(Class<VR256>) -> 0(Class<VR256>))  [1;1]
		 Successful, latency: 1

-----VSHUFPDZ128rri-----
	VSHUFPDZ128rri(1(Class<VR128X>) -> 0(Class<VR128X>))  [1;1]
		 Successful, latency: 1
	VSHUFPDZ128rri(2(Class<VR128X>) -> 0(Class<VR128X>))  [1.01;1.01]
		 Successful, latency: 1.01

-----VSHUFPDZ128rrik-----
	VSHUFPDZ128rrik(1(Class<VR128X>) -> 0(Class<VR128X>))  [1;1]
		 Successful, latency: 1
	VSHUFPDZ128rrik(3(Class<VR128X>) -> 0(Class<VR128X>))  [1.01;1.01]
		 Successful, latency: 1.01
	VSHUFPDZ128rrik(4(Class<VR128X>) -> 0(Class<VR128X>))  [1;1]
		 Successful, latency: 1

-----VSHUFPDZ128rrikz-----
	VSHUFPDZ128rrikz(2(Class<VR128X>) -> 0(Class<VR128X>))  [1.01;1.01]
		 Successful, latency: 1.01
	VSHUFPDZ128rrikz(3(Class<VR128X>) -> 0(Class<VR128X>))  [1.01;1.01]
		 Successful, latency: 1.01

-----VSHUFPDZ256rri-----
	VSHUFPDZ256rri(1(Class<VR256X>) -> 0(Class<VR256X>))  [1;1]
		 Successful, latency: 1
	VSHUFPDZ256rri(2(Class<VR256X>) -> 0(Class<VR256X>))  [1.01;1.01]
		 Successful, latency: 1.01

-----VSHUFPDZ256rrik-----
	VSHUFPDZ256rrik(1(Class<VR256X>) -> 0(Class<VR256X>))  [1;1]
		 Successful, latency: 1
	VSHUFPDZ256rrik(3(Class<VR256X>) -> 0(Class<VR256X>))  [1;1]
		 Successful, latency: 1
	VSHUFPDZ256rrik(4(Class<VR256X>) -> 0(Class<VR256X>))  [1.01;1.01]
		 Successful, latency: 1.01

-----VSHUFPDZ256rrikz-----
	VSHUFPDZ256rrikz(2(Class<VR256X>) -> 0(Class<VR256X>))  [1.01;1.01]
		 Successful, latency: 1.01
	VSHUFPDZ256rrikz(3(Class<VR256X>) -> 0(Class<VR256X>))  [1.02;1.02]
		 Successful, latency: 1.02

-----VSHUFPDZrri-----
	VSHUFPDZrri(1(Class<VR512>) -> 0(Class<VR512>))  [1.22;1.22]
		 Successful, latency: 1.22
	VSHUFPDZrri(2(Class<VR512>) -> 0(Class<VR512>))  [1.16;1.16]
		 Successful, latency: 1.16

-----VSHUFPDZrrik-----
	VSHUFPDZrrik(1(Class<VR512>) -> 0(Class<VR512>))  [1.15;1.15]
		 Successful, latency: 1.15
	VSHUFPDZrrik(3(Class<VR512>) -> 0(Class<VR512>))  [1.16;1.16]
		 Successful, latency: 1.16
	VSHUFPDZrrik(4(Class<VR512>) -> 0(Class<VR512>))  [1.15;1.15]
		 Successful, latency: 1.15

-----VSHUFPDZrrikz-----
	VSHUFPDZrrikz(2(Class<VR512>) -> 0(Class<VR512>))  [1.14;1.14]
		 Successful, latency: 1.14
	VSHUFPDZrrikz(3(Class<VR512>) -> 0(Class<VR512>))  [1.17;1.17]
		 Successful, latency: 1.17

-----VSHUFPDrri-----
	VSHUFPDrri(1(Class<VR128>) -> 0(Class<VR128>))  [1.01;1.01]
		 Successful, latency: 1.01
	VSHUFPDrri(2(Class<VR128>) -> 0(Class<VR128>))  [1;1]
		 Successful, latency: 1

-----VSHUFPSYrri-----
	VSHUFPSYrri(1(Class<VR256>) -> 0(Class<VR256>))  [1;1]
		 Successful, latency: 1
	VSHUFPSYrri(2(Class<VR256>) -> 0(Class<VR256>))  [1.02;1.02]
		 Successful, latency: 1.02

-----VSHUFPSZ128rri-----
	VSHUFPSZ128rri(1(Class<VR128X>) -> 0(Class<VR128X>))  [1;1]
		 Successful, latency: 1
	VSHUFPSZ128rri(2(Class<VR128X>) -> 0(Class<VR128X>))  [1.02;1.02]
		 Successful, latency: 1.02

-----VSHUFPSZ128rrik-----
	VSHUFPSZ128rrik(1(Class<VR128X>) -> 0(Class<VR128X>))  [1.01;1.01]
		 Successful, latency: 1.01
	VSHUFPSZ128rrik(3(Class<VR128X>) -> 0(Class<VR128X>))  [1.01;1.01]
		 Successful, latency: 1.01
	VSHUFPSZ128rrik(4(Class<VR128X>) -> 0(Class<VR128X>))  [1.01;1.01]
		 Successful, latency: 1.01

-----VSHUFPSZ128rrikz-----
	VSHUFPSZ128rrikz(2(Class<VR128X>) -> 0(Class<VR128X>))  [1;1]
		 Successful, latency: 1
	VSHUFPSZ128rrikz(3(Class<VR128X>) -> 0(Class<VR128X>))  [1.01;1.01]
		 Successful, latency: 1.01

-----VSHUFPSZ256rri-----
	VSHUFPSZ256rri(1(Class<VR256X>) -> 0(Class<VR256X>))  [1;1]
		 Successful, latency: 1
	VSHUFPSZ256rri(2(Class<VR256X>) -> 0(Class<VR256X>))  [1.01;1.01]
		 Successful, latency: 1.01

-----VSHUFPSZ256rrik-----
	VSHUFPSZ256rrik(1(Class<VR256X>) -> 0(Class<VR256X>))  [1.01;1.01]
		 Successful, latency: 1.01
	VSHUFPSZ256rrik(3(Class<VR256X>) -> 0(Class<VR256X>))  [1.01;1.01]
		 Successful, latency: 1.01
	VSHUFPSZ256rrik(4(Class<VR256X>) -> 0(Class<VR256X>))  [1.01;1.01]
		 Successful, latency: 1.01

-----VSHUFPSZ256rrikz-----
	VSHUFPSZ256rrikz(2(Class<VR256X>) -> 0(Class<VR256X>))  [1.01;1.01]
		 Successful, latency: 1.01
	VSHUFPSZ256rrikz(3(Class<VR256X>) -> 0(Class<VR256X>))  [1.01;1.01]
		 Successful, latency: 1.01

-----VSHUFPSZrri-----
	VSHUFPSZrri(1(Class<VR512>) -> 0(Class<VR512>))  [1.2;1.2]
		 Successful, latency: 1.2
	VSHUFPSZrri(2(Class<VR512>) -> 0(Class<VR512>))  [1.15;1.15]
		 Successful, latency: 1.15

-----VSHUFPSZrrik-----
	VSHUFPSZrrik(1(Class<VR512>) -> 0(Class<VR512>))  [1.24;1.24]
		 Successful, latency: 1.24
	VSHUFPSZrrik(3(Class<VR512>) -> 0(Class<VR512>))  [1.14;1.14]
		 Successful, latency: 1.14
	VSHUFPSZrrik(4(Class<VR512>) -> 0(Class<VR512>))  [1.14;1.14]
		 Successful, latency: 1.14

-----VSHUFPSZrrikz-----
	VSHUFPSZrrikz(2(Class<VR512>) -> 0(Class<VR512>))  [1.17;1.17]
		 Successful, latency: 1.17
	VSHUFPSZrrikz(3(Class<VR512>) -> 0(Class<VR512>))  [1.14;1.14]
		 Successful, latency: 1.14

-----VSHUFPSrri-----
	VSHUFPSrri(1(Class<VR128>) -> 0(Class<VR128>))  [1.01;1.01]
		 Successful, latency: 1.01
	VSHUFPSrri(2(Class<VR128>) -> 0(Class<VR128>))  [1.01;1.01]
		 Successful, latency: 1.01

-----VSM3MSG1rr-----
	VSM3MSG1rr(1(Class<VR128>) -> 0(Class<VR128>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VSM3MSG1rr(2(Class<VR128>) -> 0(Class<VR128>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VSM3MSG1rr(3(Class<VR128>) -> 0(Class<VR128>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VSM3MSG2rr-----
	VSM3MSG2rr(1(Class<VR128>) -> 0(Class<VR128>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VSM3MSG2rr(2(Class<VR128>) -> 0(Class<VR128>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VSM3MSG2rr(3(Class<VR128>) -> 0(Class<VR128>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VSM3RNDS2rr-----
	VSM3RNDS2rr(1(Class<VR128>) -> 0(Class<VR128>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VSM3RNDS2rr(2(Class<VR128>) -> 0(Class<VR128>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VSM3RNDS2rr(3(Class<VR128>) -> 0(Class<VR128>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VSM4KEY4Yrr-----
	VSM4KEY4Yrr(1(Class<VR256>) -> 0(Class<VR256>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VSM4KEY4Yrr(2(Class<VR256>) -> 0(Class<VR256>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VSM4KEY4Z128rr-----
	VSM4KEY4Z128rr(1(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VSM4KEY4Z128rr(2(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VSM4KEY4Z256rr-----
	VSM4KEY4Z256rr(1(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VSM4KEY4Z256rr(2(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VSM4KEY4Zrr-----
	VSM4KEY4Zrr(1(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VSM4KEY4Zrr(2(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VSM4KEY4rr-----
	VSM4KEY4rr(1(Class<VR128>) -> 0(Class<VR128>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VSM4KEY4rr(2(Class<VR128>) -> 0(Class<VR128>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VSM4RNDS4Yrr-----
	VSM4RNDS4Yrr(1(Class<VR256>) -> 0(Class<VR256>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VSM4RNDS4Yrr(2(Class<VR256>) -> 0(Class<VR256>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VSM4RNDS4Z128rr-----
	VSM4RNDS4Z128rr(1(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VSM4RNDS4Z128rr(2(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VSM4RNDS4Z256rr-----
	VSM4RNDS4Z256rr(1(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VSM4RNDS4Z256rr(2(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VSM4RNDS4Zrr-----
	VSM4RNDS4Zrr(1(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VSM4RNDS4Zrr(2(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VSM4RNDS4rr-----
	VSM4RNDS4rr(1(Class<VR128>) -> 0(Class<VR128>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VSM4RNDS4rr(2(Class<VR128>) -> 0(Class<VR128>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VSQRTBF16Z128r-----
	VSQRTBF16Z128r(1(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VSQRTBF16Z128rk-----
	VSQRTBF16Z128rk(1(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VSQRTBF16Z128rk(3(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VSQRTBF16Z128rkz-----
	VSQRTBF16Z128rkz(2(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VSQRTBF16Z256r-----
	VSQRTBF16Z256r(1(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VSQRTBF16Z256rk-----
	VSQRTBF16Z256rk(1(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VSQRTBF16Z256rk(3(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VSQRTBF16Z256rkz-----
	VSQRTBF16Z256rkz(2(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VSQRTBF16Zr-----
	VSQRTBF16Zr(1(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VSQRTBF16Zrk-----
	VSQRTBF16Zrk(1(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VSQRTBF16Zrk(3(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VSQRTBF16Zrkz-----
	VSQRTBF16Zrkz(2(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VSQRTPDYr-----
	VSQRTPDYr(1(Class<VR256>) -> 0(Class<VR256>))  [21.1;21.1]
		 Successful, latency: 21.1

-----VSQRTPDZ128r-----
	VSQRTPDZ128r(1(Class<VR128X>) -> 0(Class<VR128X>))  [21.1;21.1]
		 Successful, latency: 21.1

-----VSQRTPDZ128rk-----
	VSQRTPDZ128rk(1(Class<VR128X>) -> 0(Class<VR128X>))  [23.9;23.9]
		 Successful, latency: 23.9
	VSQRTPDZ128rk(3(Class<VR128X>) -> 0(Class<VR128X>))  [23.9;23.9]
		 Successful, latency: 23.9

-----VSQRTPDZ128rkz-----
	VSQRTPDZ128rkz(2(Class<VR128X>) -> 0(Class<VR128X>))  [21.1;21.1]
		 Successful, latency: 21.1

-----VSQRTPDZ256r-----
	VSQRTPDZ256r(1(Class<VR256X>) -> 0(Class<VR256X>))  [21.1;21.1]
		 Successful, latency: 21.1

-----VSQRTPDZ256rb-----
	VSQRTPDZ256rb(1(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VSQRTPDZ256rbk-----
	VSQRTPDZ256rbk(1(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VSQRTPDZ256rbk(3(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VSQRTPDZ256rbkz-----
	VSQRTPDZ256rbkz(2(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VSQRTPDZ256rk-----
	VSQRTPDZ256rk(1(Class<VR256X>) -> 0(Class<VR256X>))  [23.9;23.9]
		 Successful, latency: 23.9
	VSQRTPDZ256rk(3(Class<VR256X>) -> 0(Class<VR256X>))  [23.9;23.9]
		 Successful, latency: 23.9

-----VSQRTPDZ256rkz-----
	VSQRTPDZ256rkz(2(Class<VR256X>) -> 0(Class<VR256X>))  [21.1;21.1]
		 Successful, latency: 21.1

-----VSQRTPDZr-----
	VSQRTPDZr(1(Class<VR512>) -> 0(Class<VR512>))  [21.1;21.1]
		 Successful, latency: 21.1

-----VSQRTPDZrb-----
	VSQRTPDZrb(1(Class<VR512>) -> 0(Class<VR512>))  [21.1;21.1]
		 Successful, latency: 21.1

-----VSQRTPDZrbk-----
	VSQRTPDZrbk(1(Class<VR512>) -> 0(Class<VR512>))  [23.9;23.9]
		 Successful, latency: 23.9
	VSQRTPDZrbk(3(Class<VR512>) -> 0(Class<VR512>))  [23.9;23.9]
		 Successful, latency: 23.9

-----VSQRTPDZrbkz-----
	VSQRTPDZrbkz(2(Class<VR512>) -> 0(Class<VR512>))  [21.1;21.1]
		 Successful, latency: 21.1

-----VSQRTPDZrk-----
	VSQRTPDZrk(1(Class<VR512>) -> 0(Class<VR512>))  [23.9;23.9]
		 Successful, latency: 23.9
	VSQRTPDZrk(3(Class<VR512>) -> 0(Class<VR512>))  [23.9;23.9]
		 Successful, latency: 23.9

-----VSQRTPDZrkz-----
	VSQRTPDZrkz(2(Class<VR512>) -> 0(Class<VR512>))  [21.1;21.1]
		 Successful, latency: 21.1

-----VSQRTPDr-----
	VSQRTPDr(1(Class<VR128>) -> 0(Class<VR128>))  [21.2;21.2]
		 Successful, latency: 21.2

-----VSQRTPHZ128r-----
	VSQRTPHZ128r(1(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VSQRTPHZ128rk-----
	VSQRTPHZ128rk(1(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VSQRTPHZ128rk(3(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VSQRTPHZ128rkz-----
	VSQRTPHZ128rkz(2(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VSQRTPHZ256r-----
	VSQRTPHZ256r(1(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VSQRTPHZ256rb-----
	VSQRTPHZ256rb(1(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VSQRTPHZ256rbk-----
	VSQRTPHZ256rbk(1(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VSQRTPHZ256rbk(3(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VSQRTPHZ256rbkz-----
	VSQRTPHZ256rbkz(2(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VSQRTPHZ256rk-----
	VSQRTPHZ256rk(1(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VSQRTPHZ256rk(3(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VSQRTPHZ256rkz-----
	VSQRTPHZ256rkz(2(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VSQRTPHZr-----
	VSQRTPHZr(1(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VSQRTPHZrb-----
	VSQRTPHZrb(1(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VSQRTPHZrbk-----
	VSQRTPHZrbk(1(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VSQRTPHZrbk(3(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VSQRTPHZrbkz-----
	VSQRTPHZrbkz(2(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VSQRTPHZrk-----
	VSQRTPHZrk(1(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VSQRTPHZrk(3(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VSQRTPHZrkz-----
	VSQRTPHZrkz(2(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VSQRTPSYr-----
	VSQRTPSYr(1(Class<VR256>) -> 0(Class<VR256>))  [15.1;15.1]
		 Successful, latency: 15.1

-----VSQRTPSZ128r-----
	VSQRTPSZ128r(1(Class<VR128X>) -> 0(Class<VR128X>))  [15.1;15.1]
		 Successful, latency: 15.1

-----VSQRTPSZ128rk-----
	VSQRTPSZ128rk(1(Class<VR128X>) -> 0(Class<VR128X>))  [17.8;17.8]
		 Successful, latency: 17.8
	VSQRTPSZ128rk(3(Class<VR128X>) -> 0(Class<VR128X>))  [17.7;17.7]
		 Successful, latency: 17.7

-----VSQRTPSZ128rkz-----
	VSQRTPSZ128rkz(2(Class<VR128X>) -> 0(Class<VR128X>))  [15.1;15.1]
		 Successful, latency: 15.1

-----VSQRTPSZ256r-----
	VSQRTPSZ256r(1(Class<VR256X>) -> 0(Class<VR256X>))  [15.1;15.1]
		 Successful, latency: 15.1

-----VSQRTPSZ256rb-----
	VSQRTPSZ256rb(1(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VSQRTPSZ256rbk-----
	VSQRTPSZ256rbk(1(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VSQRTPSZ256rbk(3(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VSQRTPSZ256rbkz-----
	VSQRTPSZ256rbkz(2(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VSQRTPSZ256rk-----
	VSQRTPSZ256rk(1(Class<VR256X>) -> 0(Class<VR256X>))  [12.5;12.5]
		 Successful, latency: 12.5
	VSQRTPSZ256rk(3(Class<VR256X>) -> 0(Class<VR256X>))  [12.5;12.5]
		 Successful, latency: 12.5

-----VSQRTPSZ256rkz-----
	VSQRTPSZ256rkz(2(Class<VR256X>) -> 0(Class<VR256X>))  [15.1;15.1]
		 Successful, latency: 15.1

-----VSQRTPSZr-----
	VSQRTPSZr(1(Class<VR512>) -> 0(Class<VR512>))  [15.1;15.1]
		 Successful, latency: 15.1

-----VSQRTPSZrb-----
	VSQRTPSZrb(1(Class<VR512>) -> 0(Class<VR512>))  [15.1;15.1]
		 Successful, latency: 15.1

-----VSQRTPSZrbk-----
	VSQRTPSZrbk(1(Class<VR512>) -> 0(Class<VR512>))  [12.5;12.5]
		 Successful, latency: 12.5
	VSQRTPSZrbk(3(Class<VR512>) -> 0(Class<VR512>))  [12.5;12.5]
		 Successful, latency: 12.5

-----VSQRTPSZrbkz-----
	VSQRTPSZrbkz(2(Class<VR512>) -> 0(Class<VR512>))  [15.1;15.1]
		 Successful, latency: 15.1

-----VSQRTPSZrk-----
	VSQRTPSZrk(1(Class<VR512>) -> 0(Class<VR512>))  [12.5;12.5]
		 Successful, latency: 12.5
	VSQRTPSZrk(3(Class<VR512>) -> 0(Class<VR512>))  [12.4;12.4]
		 Successful, latency: 12.4

-----VSQRTPSZrkz-----
	VSQRTPSZrkz(2(Class<VR512>) -> 0(Class<VR512>))  [15.1;15.1]
		 Successful, latency: 15.1

-----VSQRTPSr-----
	VSQRTPSr(1(Class<VR128>) -> 0(Class<VR128>))  [15.1;15.1]
		 Successful, latency: 15.1

-----VSQRTSDZr-----
	VSQRTSDZr(1(Class<FR64X>) -> 0(Class<FR64X>))  [23.9;23.9]
		 Successful, latency: 23.9
	VSQRTSDZr(2(Class<FR64X>) -> 0(Class<FR64X>))  [21.1;21.1]
		 Successful, latency: 21.1

-----VSQRTSDZr_Int-----
	VSQRTSDZr_Int(1(Class<VR128X>) -> 0(Class<VR128X>))  [23.9;23.9]
		 Successful, latency: 23.9
	VSQRTSDZr_Int(2(Class<VR128X>) -> 0(Class<VR128X>))  [21.2;21.2]
		 Successful, latency: 21.2

-----VSQRTSDZrb_Int-----
	VSQRTSDZrb_Int(1(Class<VR128X>) -> 0(Class<VR128X>))  [23.9;23.9]
		 Successful, latency: 23.9
	VSQRTSDZrb_Int(2(Class<VR128X>) -> 0(Class<VR128X>))  [21.2;21.2]
		 Successful, latency: 21.2

-----VSQRTSDZrbk_Int-----
	VSQRTSDZrbk_Int(1(Class<VR128X>) -> 0(Class<VR128X>))  [23.9;23.9]
		 Successful, latency: 23.9
	VSQRTSDZrbk_Int(3(Class<VR128X>) -> 0(Class<VR128X>))  [23.9;23.9]
		 Successful, latency: 23.9
	VSQRTSDZrbk_Int(4(Class<VR128X>) -> 0(Class<VR128X>))  [23.9;23.9]
		 Successful, latency: 23.9

-----VSQRTSDZrbkz_Int-----
	VSQRTSDZrbkz_Int(2(Class<VR128X>) -> 0(Class<VR128X>))  [21.2;21.2]
		 Successful, latency: 21.2
	VSQRTSDZrbkz_Int(3(Class<VR128X>) -> 0(Class<VR128X>))  [21.1;21.1]
		 Successful, latency: 21.1

-----VSQRTSDZrk_Int-----
	VSQRTSDZrk_Int(1(Class<VR128X>) -> 0(Class<VR128X>))  [23.9;23.9]
		 Successful, latency: 23.9
	VSQRTSDZrk_Int(3(Class<VR128X>) -> 0(Class<VR128X>))  [23.9;23.9]
		 Successful, latency: 23.9
	VSQRTSDZrk_Int(4(Class<VR128X>) -> 0(Class<VR128X>))  [23.9;23.9]
		 Successful, latency: 23.9

-----VSQRTSDZrkz_Int-----
	VSQRTSDZrkz_Int(2(Class<VR128X>) -> 0(Class<VR128X>))  [21.1;21.1]
		 Successful, latency: 21.1
	VSQRTSDZrkz_Int(3(Class<VR128X>) -> 0(Class<VR128X>))  [21.1;21.1]
		 Successful, latency: 21.1

-----VSQRTSDr-----
	VSQRTSDr(1(Class<FR64>) -> 0(Class<FR64>))  [23.9;23.9]
		 Successful, latency: 23.9
	VSQRTSDr(2(Class<FR64>) -> 0(Class<FR64>))  [21.1;21.1]
		 Successful, latency: 21.1

-----VSQRTSDr_Int-----
	VSQRTSDr_Int(1(Class<VR128>) -> 0(Class<VR128>))  [23.9;23.9]
		 Successful, latency: 23.9
	VSQRTSDr_Int(2(Class<VR128>) -> 0(Class<VR128>))  [21.1;21.1]
		 Successful, latency: 21.1

-----VSQRTSHZr-----
	VSQRTSHZr(1(Class<FR16X>) -> 0(Class<FR16X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VSQRTSHZr(2(Class<FR16X>) -> 0(Class<FR16X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VSQRTSHZr_Int-----
	VSQRTSHZr_Int(1(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VSQRTSHZr_Int(2(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VSQRTSHZrb_Int-----
	VSQRTSHZrb_Int(1(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VSQRTSHZrb_Int(2(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VSQRTSHZrbk_Int-----
	VSQRTSHZrbk_Int(1(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VSQRTSHZrbk_Int(3(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VSQRTSHZrbk_Int(4(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VSQRTSHZrbkz_Int-----
	VSQRTSHZrbkz_Int(2(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VSQRTSHZrbkz_Int(3(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VSQRTSHZrk_Int-----
	VSQRTSHZrk_Int(1(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VSQRTSHZrk_Int(3(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VSQRTSHZrk_Int(4(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VSQRTSHZrkz_Int-----
	VSQRTSHZrkz_Int(2(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VSQRTSHZrkz_Int(3(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VSQRTSSZr-----
	VSQRTSSZr(1(Class<FR32X>) -> 0(Class<FR32X>))  [17.7;17.7]
		 Successful, latency: 17.7
	VSQRTSSZr(2(Class<FR32X>) -> 0(Class<FR32X>))  [15.1;15.1]
		 Successful, latency: 15.1

-----VSQRTSSZr_Int-----
	VSQRTSSZr_Int(1(Class<VR128X>) -> 0(Class<VR128X>))  [17.7;17.7]
		 Successful, latency: 17.7
	VSQRTSSZr_Int(2(Class<VR128X>) -> 0(Class<VR128X>))  [15.1;15.1]
		 Successful, latency: 15.1

-----VSQRTSSZrb_Int-----
	VSQRTSSZrb_Int(1(Class<VR128X>) -> 0(Class<VR128X>))  [17.8;17.8]
		 Successful, latency: 17.8
	VSQRTSSZrb_Int(2(Class<VR128X>) -> 0(Class<VR128X>))  [15.1;15.1]
		 Successful, latency: 15.1

-----VSQRTSSZrbk_Int-----
	VSQRTSSZrbk_Int(1(Class<VR128X>) -> 0(Class<VR128X>))  [17.7;17.7]
		 Successful, latency: 17.7
	VSQRTSSZrbk_Int(3(Class<VR128X>) -> 0(Class<VR128X>))  [17.7;17.7]
		 Successful, latency: 17.7
	VSQRTSSZrbk_Int(4(Class<VR128X>) -> 0(Class<VR128X>))  [17.8;17.8]
		 Successful, latency: 17.8

-----VSQRTSSZrbkz_Int-----
	VSQRTSSZrbkz_Int(2(Class<VR128X>) -> 0(Class<VR128X>))  [17.7;17.7]
		 Successful, latency: 17.7
	VSQRTSSZrbkz_Int(3(Class<VR128X>) -> 0(Class<VR128X>))  [15.1;15.1]
		 Successful, latency: 15.1

-----VSQRTSSZrk_Int-----
	VSQRTSSZrk_Int(1(Class<VR128X>) -> 0(Class<VR128X>))  [17.8;17.8]
		 Successful, latency: 17.8
	VSQRTSSZrk_Int(3(Class<VR128X>) -> 0(Class<VR128X>))  [17.7;17.7]
		 Successful, latency: 17.7
	VSQRTSSZrk_Int(4(Class<VR128X>) -> 0(Class<VR128X>))  [17.8;17.8]
		 Successful, latency: 17.8

-----VSQRTSSZrkz_Int-----
	VSQRTSSZrkz_Int(2(Class<VR128X>) -> 0(Class<VR128X>))  [17.8;17.8]
		 Successful, latency: 17.8
	VSQRTSSZrkz_Int(3(Class<VR128X>) -> 0(Class<VR128X>))  [15.1;15.1]
		 Successful, latency: 15.1

-----VSQRTSSr-----
	VSQRTSSr(1(Class<FR32>) -> 0(Class<FR32>))  [10.3;10.3]
		 Successful, latency: 10.3
	VSQRTSSr(2(Class<FR32>) -> 0(Class<FR32>))  [15.1;15.1]
		 Successful, latency: 15.1

-----VSQRTSSr_Int-----
	VSQRTSSr_Int(1(Class<VR128>) -> 0(Class<VR128>))  [17.7;17.7]
		 Successful, latency: 17.7
	VSQRTSSr_Int(2(Class<VR128>) -> 0(Class<VR128>))  [15.1;15.1]
		 Successful, latency: 15.1

-----VSUBBF16Z128rr-----
	VSUBBF16Z128rr(1(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VSUBBF16Z128rr(2(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VSUBBF16Z128rrk-----
	VSUBBF16Z128rrk(1(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VSUBBF16Z128rrk(3(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VSUBBF16Z128rrk(4(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VSUBBF16Z128rrkz-----
	VSUBBF16Z128rrkz(2(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VSUBBF16Z128rrkz(3(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VSUBBF16Z256rr-----
	VSUBBF16Z256rr(1(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VSUBBF16Z256rr(2(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VSUBBF16Z256rrk-----
	VSUBBF16Z256rrk(1(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VSUBBF16Z256rrk(3(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VSUBBF16Z256rrk(4(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VSUBBF16Z256rrkz-----
	VSUBBF16Z256rrkz(2(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VSUBBF16Z256rrkz(3(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VSUBBF16Zrr-----
	VSUBBF16Zrr(1(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VSUBBF16Zrr(2(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VSUBBF16Zrrk-----
	VSUBBF16Zrrk(1(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VSUBBF16Zrrk(3(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VSUBBF16Zrrk(4(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VSUBBF16Zrrkz-----
	VSUBBF16Zrrkz(2(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VSUBBF16Zrrkz(3(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VSUBPDYrr-----
	VSUBPDYrr(1(Class<VR256>) -> 0(Class<VR256>))  [3.03;3.03]
		 Successful, latency: 3.03
	VSUBPDYrr(2(Class<VR256>) -> 0(Class<VR256>))  [3.03;3.03]
		 Successful, latency: 3.03

-----VSUBPDZ128rr-----
	VSUBPDZ128rr(1(Class<VR128X>) -> 0(Class<VR128X>))  [3.02;3.02]
		 Successful, latency: 3.02
	VSUBPDZ128rr(2(Class<VR128X>) -> 0(Class<VR128X>))  [3.02;3.02]
		 Successful, latency: 3.02

-----VSUBPDZ128rrk-----
	VSUBPDZ128rrk(1(Class<VR128X>) -> 0(Class<VR128X>))  [3.03;3.03]
		 Successful, latency: 3.03
	VSUBPDZ128rrk(3(Class<VR128X>) -> 0(Class<VR128X>))  [3.02;3.02]
		 Successful, latency: 3.02
	VSUBPDZ128rrk(4(Class<VR128X>) -> 0(Class<VR128X>))  [3.02;3.02]
		 Successful, latency: 3.02

-----VSUBPDZ128rrkz-----
	VSUBPDZ128rrkz(2(Class<VR128X>) -> 0(Class<VR128X>))  [3.01;3.01]
		 Successful, latency: 3.01
	VSUBPDZ128rrkz(3(Class<VR128X>) -> 0(Class<VR128X>))  [3.03;3.03]
		 Successful, latency: 3.03

-----VSUBPDZ256rr-----
	VSUBPDZ256rr(1(Class<VR256X>) -> 0(Class<VR256X>))  [3.04;3.04]
		 Successful, latency: 3.04
	VSUBPDZ256rr(2(Class<VR256X>) -> 0(Class<VR256X>))  [3.04;3.04]
		 Successful, latency: 3.04

-----VSUBPDZ256rrb-----
	VSUBPDZ256rrb(1(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VSUBPDZ256rrb(2(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VSUBPDZ256rrbk-----
	VSUBPDZ256rrbk(1(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VSUBPDZ256rrbk(3(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VSUBPDZ256rrbk(4(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VSUBPDZ256rrbkz-----
	VSUBPDZ256rrbkz(2(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VSUBPDZ256rrbkz(3(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VSUBPDZ256rrk-----
	VSUBPDZ256rrk(1(Class<VR256X>) -> 0(Class<VR256X>))  [3.02;3.02]
		 Successful, latency: 3.02
	VSUBPDZ256rrk(3(Class<VR256X>) -> 0(Class<VR256X>))  [3.04;3.04]
		 Successful, latency: 3.04
	VSUBPDZ256rrk(4(Class<VR256X>) -> 0(Class<VR256X>))  [3.04;3.04]
		 Successful, latency: 3.04

-----VSUBPDZ256rrkz-----
	VSUBPDZ256rrkz(2(Class<VR256X>) -> 0(Class<VR256X>))  [3.03;3.03]
		 Successful, latency: 3.03
	VSUBPDZ256rrkz(3(Class<VR256X>) -> 0(Class<VR256X>))  [3.04;3.04]
		 Successful, latency: 3.04

-----VSUBPDZrr-----
	VSUBPDZrr(1(Class<VR512>) -> 0(Class<VR512>))  [3;3]
		 Successful, latency: 3
	VSUBPDZrr(2(Class<VR512>) -> 0(Class<VR512>))  [3.06;3.06]
		 Successful, latency: 3.06

-----VSUBPDZrrb-----
	VSUBPDZrrb(1(Class<VR512>) -> 0(Class<VR512>))  [3.03;3.03]
		 Successful, latency: 3.03
	VSUBPDZrrb(2(Class<VR512>) -> 0(Class<VR512>))  [3.03;3.03]
		 Successful, latency: 3.03

-----VSUBPDZrrbk-----
	VSUBPDZrrbk(1(Class<VR512>) -> 0(Class<VR512>))  [3.02;3.02]
		 Successful, latency: 3.02
	VSUBPDZrrbk(3(Class<VR512>) -> 0(Class<VR512>))  [3.06;3.06]
		 Successful, latency: 3.06
	VSUBPDZrrbk(4(Class<VR512>) -> 0(Class<VR512>))  [3.03;3.03]
		 Successful, latency: 3.03

-----VSUBPDZrrbkz-----
	VSUBPDZrrbkz(2(Class<VR512>) -> 0(Class<VR512>))  [3.07;3.07]
		 Successful, latency: 3.07
	VSUBPDZrrbkz(3(Class<VR512>) -> 0(Class<VR512>))  [3.03;3.03]
		 Successful, latency: 3.03

-----VSUBPDZrrk-----
	VSUBPDZrrk(1(Class<VR512>) -> 0(Class<VR512>))  [3.06;3.06]
		 Successful, latency: 3.06
	VSUBPDZrrk(3(Class<VR512>) -> 0(Class<VR512>))  [3.06;3.06]
		 Successful, latency: 3.06
	VSUBPDZrrk(4(Class<VR512>) -> 0(Class<VR512>))  [3.04;3.04]
		 Successful, latency: 3.04

-----VSUBPDZrrkz-----
	VSUBPDZrrkz(2(Class<VR512>) -> 0(Class<VR512>))  [3.06;3.06]
		 Successful, latency: 3.06
	VSUBPDZrrkz(3(Class<VR512>) -> 0(Class<VR512>))  [3.02;3.02]
		 Successful, latency: 3.02

-----VSUBPDrr-----
	VSUBPDrr(1(Class<VR128>) -> 0(Class<VR128>))  [3.03;3.03]
		 Successful, latency: 3.03
	VSUBPDrr(2(Class<VR128>) -> 0(Class<VR128>))  [3.03;3.03]
		 Successful, latency: 3.03

-----VSUBPHZ128rr-----
	VSUBPHZ128rr(1(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VSUBPHZ128rr(2(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VSUBPHZ128rrk-----
	VSUBPHZ128rrk(1(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VSUBPHZ128rrk(3(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VSUBPHZ128rrk(4(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VSUBPHZ128rrkz-----
	VSUBPHZ128rrkz(2(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VSUBPHZ128rrkz(3(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VSUBPHZ256rr-----
	VSUBPHZ256rr(1(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VSUBPHZ256rr(2(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VSUBPHZ256rrb-----
	VSUBPHZ256rrb(1(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VSUBPHZ256rrb(2(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VSUBPHZ256rrbk-----
	VSUBPHZ256rrbk(1(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VSUBPHZ256rrbk(3(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VSUBPHZ256rrbk(4(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VSUBPHZ256rrbkz-----
	VSUBPHZ256rrbkz(2(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VSUBPHZ256rrbkz(3(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VSUBPHZ256rrk-----
	VSUBPHZ256rrk(1(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VSUBPHZ256rrk(3(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VSUBPHZ256rrk(4(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VSUBPHZ256rrkz-----
	VSUBPHZ256rrkz(2(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VSUBPHZ256rrkz(3(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VSUBPHZrr-----
	VSUBPHZrr(1(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VSUBPHZrr(2(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VSUBPHZrrb-----
	VSUBPHZrrb(1(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VSUBPHZrrb(2(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VSUBPHZrrbk-----
	VSUBPHZrrbk(1(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VSUBPHZrrbk(3(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VSUBPHZrrbk(4(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VSUBPHZrrbkz-----
	VSUBPHZrrbkz(2(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VSUBPHZrrbkz(3(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VSUBPHZrrk-----
	VSUBPHZrrk(1(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VSUBPHZrrk(3(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VSUBPHZrrk(4(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VSUBPHZrrkz-----
	VSUBPHZrrkz(2(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VSUBPHZrrkz(3(Class<VR512>) -> 0(Class<VR512>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VSUBPSYrr-----
	VSUBPSYrr(1(Class<VR256>) -> 0(Class<VR256>))  [3.06;3.06]
		 Successful, latency: 3.06
	VSUBPSYrr(2(Class<VR256>) -> 0(Class<VR256>))  [3.03;3.03]
		 Successful, latency: 3.03

-----VSUBPSZ128rr-----
	VSUBPSZ128rr(1(Class<VR128X>) -> 0(Class<VR128X>))  [3.02;3.02]
		 Successful, latency: 3.02
	VSUBPSZ128rr(2(Class<VR128X>) -> 0(Class<VR128X>))  [3.05;3.05]
		 Successful, latency: 3.05

-----VSUBPSZ128rrk-----
	VSUBPSZ128rrk(1(Class<VR128X>) -> 0(Class<VR128X>))  [3.04;3.04]
		 Successful, latency: 3.04
	VSUBPSZ128rrk(3(Class<VR128X>) -> 0(Class<VR128X>))  [3.05;3.05]
		 Successful, latency: 3.05
	VSUBPSZ128rrk(4(Class<VR128X>) -> 0(Class<VR128X>))  [3.03;3.03]
		 Successful, latency: 3.03

-----VSUBPSZ128rrkz-----
	VSUBPSZ128rrkz(2(Class<VR128X>) -> 0(Class<VR128X>))  [3.05;3.05]
		 Successful, latency: 3.05
	VSUBPSZ128rrkz(3(Class<VR128X>) -> 0(Class<VR128X>))  [3.04;3.04]
		 Successful, latency: 3.04

-----VSUBPSZ256rr-----
	VSUBPSZ256rr(1(Class<VR256X>) -> 0(Class<VR256X>))  [3.06;3.06]
		 Successful, latency: 3.06
	VSUBPSZ256rr(2(Class<VR256X>) -> 0(Class<VR256X>))  [3.02;3.02]
		 Successful, latency: 3.02

-----VSUBPSZ256rrb-----
	VSUBPSZ256rrb(1(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VSUBPSZ256rrb(2(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VSUBPSZ256rrbk-----
	VSUBPSZ256rrbk(1(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VSUBPSZ256rrbk(3(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VSUBPSZ256rrbk(4(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VSUBPSZ256rrbkz-----
	VSUBPSZ256rrbkz(2(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VSUBPSZ256rrbkz(3(Class<VR256X>) -> 0(Class<VR256X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VSUBPSZ256rrk-----
	VSUBPSZ256rrk(1(Class<VR256X>) -> 0(Class<VR256X>))  [3.03;3.03]
		 Successful, latency: 3.03
	VSUBPSZ256rrk(3(Class<VR256X>) -> 0(Class<VR256X>))  [3.05;3.05]
		 Successful, latency: 3.05
	VSUBPSZ256rrk(4(Class<VR256X>) -> 0(Class<VR256X>))  [3.06;3.06]
		 Successful, latency: 3.06

-----VSUBPSZ256rrkz-----
	VSUBPSZ256rrkz(2(Class<VR256X>) -> 0(Class<VR256X>))  [3.02;3.02]
		 Successful, latency: 3.02
	VSUBPSZ256rrkz(3(Class<VR256X>) -> 0(Class<VR256X>))  [3.04;3.04]
		 Successful, latency: 3.04

-----VSUBPSZrr-----
	VSUBPSZrr(1(Class<VR512>) -> 0(Class<VR512>))  [3.03;3.03]
		 Successful, latency: 3.03
	VSUBPSZrr(2(Class<VR512>) -> 0(Class<VR512>))  [3.04;3.04]
		 Successful, latency: 3.04

-----VSUBPSZrrb-----
	VSUBPSZrrb(1(Class<VR512>) -> 0(Class<VR512>))  [3.03;3.03]
		 Successful, latency: 3.03
	VSUBPSZrrb(2(Class<VR512>) -> 0(Class<VR512>))  [3;3]
		 Successful, latency: 3

-----VSUBPSZrrbk-----
	VSUBPSZrrbk(1(Class<VR512>) -> 0(Class<VR512>))  [3.06;3.06]
		 Successful, latency: 3.06
	VSUBPSZrrbk(3(Class<VR512>) -> 0(Class<VR512>))  [3.04;3.04]
		 Successful, latency: 3.04
	VSUBPSZrrbk(4(Class<VR512>) -> 0(Class<VR512>))  [3.05;3.05]
		 Successful, latency: 3.05

-----VSUBPSZrrbkz-----
	VSUBPSZrrbkz(2(Class<VR512>) -> 0(Class<VR512>))  [3.06;3.06]
		 Successful, latency: 3.06
	VSUBPSZrrbkz(3(Class<VR512>) -> 0(Class<VR512>))  [3.03;3.03]
		 Successful, latency: 3.03

-----VSUBPSZrrk-----
	VSUBPSZrrk(1(Class<VR512>) -> 0(Class<VR512>))  [3.04;3.04]
		 Successful, latency: 3.04
	VSUBPSZrrk(3(Class<VR512>) -> 0(Class<VR512>))  [3.03;3.03]
		 Successful, latency: 3.03
	VSUBPSZrrk(4(Class<VR512>) -> 0(Class<VR512>))  [3.05;3.05]
		 Successful, latency: 3.05

-----VSUBPSZrrkz-----
	VSUBPSZrrkz(2(Class<VR512>) -> 0(Class<VR512>))  [3.04;3.04]
		 Successful, latency: 3.04
	VSUBPSZrrkz(3(Class<VR512>) -> 0(Class<VR512>))  [3.04;3.04]
		 Successful, latency: 3.04

-----VSUBPSrr-----
	VSUBPSrr(1(Class<VR128>) -> 0(Class<VR128>))  [3.04;3.04]
		 Successful, latency: 3.04
	VSUBPSrr(2(Class<VR128>) -> 0(Class<VR128>))  [3.05;3.05]
		 Successful, latency: 3.05

-----VSUBSDZrr-----
	VSUBSDZrr(1(Class<FR64X>) -> 0(Class<FR64X>))  [3.02;3.02]
		 Successful, latency: 3.02
	VSUBSDZrr(2(Class<FR64X>) -> 0(Class<FR64X>))  [3.05;3.05]
		 Successful, latency: 3.05

-----VSUBSDZrr_Int-----
	VSUBSDZrr_Int(1(Class<VR128X>) -> 0(Class<VR128X>))  [3.05;3.05]
		 Successful, latency: 3.05
	VSUBSDZrr_Int(2(Class<VR128X>) -> 0(Class<VR128X>))  [3.01;3.01]
		 Successful, latency: 3.01

-----VSUBSDZrrb_Int-----
	VSUBSDZrrb_Int(1(Class<VR128X>) -> 0(Class<VR128X>))  [3.05;3.05]
		 Successful, latency: 3.05
	VSUBSDZrrb_Int(2(Class<VR128X>) -> 0(Class<VR128X>))  [3.03;3.03]
		 Successful, latency: 3.03

-----VSUBSDZrrbk_Int-----
	VSUBSDZrrbk_Int(1(Class<VR128X>) -> 0(Class<VR128X>))  [3.05;3.05]
		 Successful, latency: 3.05
	VSUBSDZrrbk_Int(3(Class<VR128X>) -> 0(Class<VR128X>))  [3.06;3.06]
		 Successful, latency: 3.06
	VSUBSDZrrbk_Int(4(Class<VR128X>) -> 0(Class<VR128X>))  [3.04;3.04]
		 Successful, latency: 3.04

-----VSUBSDZrrbkz_Int-----
	VSUBSDZrrbkz_Int(2(Class<VR128X>) -> 0(Class<VR128X>))  [3.06;3.06]
		 Successful, latency: 3.06
	VSUBSDZrrbkz_Int(3(Class<VR128X>) -> 0(Class<VR128X>))  [3.03;3.03]
		 Successful, latency: 3.03

-----VSUBSDZrrk_Int-----
	VSUBSDZrrk_Int(1(Class<VR128X>) -> 0(Class<VR128X>))  [3.03;3.03]
		 Successful, latency: 3.03
	VSUBSDZrrk_Int(3(Class<VR128X>) -> 0(Class<VR128X>))  [3.04;3.04]
		 Successful, latency: 3.04
	VSUBSDZrrk_Int(4(Class<VR128X>) -> 0(Class<VR128X>))  [3.04;3.04]
		 Successful, latency: 3.04

-----VSUBSDZrrkz_Int-----
	VSUBSDZrrkz_Int(2(Class<VR128X>) -> 0(Class<VR128X>))  [3.05;3.05]
		 Successful, latency: 3.05
	VSUBSDZrrkz_Int(3(Class<VR128X>) -> 0(Class<VR128X>))  [3.01;3.01]
		 Successful, latency: 3.01

-----VSUBSDrr-----
	VSUBSDrr(1(Class<FR64>) -> 0(Class<FR64>))  [3.02;3.02]
		 Successful, latency: 3.02
	VSUBSDrr(2(Class<FR64>) -> 0(Class<FR64>))  [3.03;3.03]
		 Successful, latency: 3.03

-----VSUBSDrr_Int-----
	VSUBSDrr_Int(1(Class<VR128>) -> 0(Class<VR128>))  [3.06;3.06]
		 Successful, latency: 3.06
	VSUBSDrr_Int(2(Class<VR128>) -> 0(Class<VR128>))  [3.04;3.04]
		 Successful, latency: 3.04

-----VSUBSHZrr-----
	VSUBSHZrr(1(Class<FR16X>) -> 0(Class<FR16X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VSUBSHZrr(2(Class<FR16X>) -> 0(Class<FR16X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VSUBSHZrr_Int-----
	VSUBSHZrr_Int(1(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VSUBSHZrr_Int(2(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VSUBSHZrrb_Int-----
	VSUBSHZrrb_Int(1(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VSUBSHZrrb_Int(2(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VSUBSHZrrbk_Int-----
	VSUBSHZrrbk_Int(1(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VSUBSHZrrbk_Int(3(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VSUBSHZrrbk_Int(4(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VSUBSHZrrbkz_Int-----
	VSUBSHZrrbkz_Int(2(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VSUBSHZrrbkz_Int(3(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VSUBSHZrrk_Int-----
	VSUBSHZrrk_Int(1(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VSUBSHZrrk_Int(3(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VSUBSHZrrk_Int(4(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VSUBSHZrrkz_Int-----
	VSUBSHZrrkz_Int(2(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	VSUBSHZrrkz_Int(3(Class<VR128X>) -> 0(Class<VR128X>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VSUBSSZrr-----
	VSUBSSZrr(1(Class<FR32X>) -> 0(Class<FR32X>))  [3.03;3.03]
		 Successful, latency: 3.03
	VSUBSSZrr(2(Class<FR32X>) -> 0(Class<FR32X>))  [3.04;3.04]
		 Successful, latency: 3.04

-----VSUBSSZrr_Int-----
	VSUBSSZrr_Int(1(Class<VR128X>) -> 0(Class<VR128X>))  [3.03;3.03]
		 Successful, latency: 3.03
	VSUBSSZrr_Int(2(Class<VR128X>) -> 0(Class<VR128X>))  [3.04;3.04]
		 Successful, latency: 3.04

-----VSUBSSZrrb_Int-----
	VSUBSSZrrb_Int(1(Class<VR128X>) -> 0(Class<VR128X>))  [3.04;3.04]
		 Successful, latency: 3.04
	VSUBSSZrrb_Int(2(Class<VR128X>) -> 0(Class<VR128X>))  [3.03;3.03]
		 Successful, latency: 3.03

-----VSUBSSZrrbk_Int-----
	VSUBSSZrrbk_Int(1(Class<VR128X>) -> 0(Class<VR128X>))  [3.03;3.03]
		 Successful, latency: 3.03
	VSUBSSZrrbk_Int(3(Class<VR128X>) -> 0(Class<VR128X>))  [3.04;3.04]
		 Successful, latency: 3.04
	VSUBSSZrrbk_Int(4(Class<VR128X>) -> 0(Class<VR128X>))  [3.03;3.03]
		 Successful, latency: 3.03

-----VSUBSSZrrbkz_Int-----
	VSUBSSZrrbkz_Int(2(Class<VR128X>) -> 0(Class<VR128X>))  [3.04;3.04]
		 Successful, latency: 3.04
	VSUBSSZrrbkz_Int(3(Class<VR128X>) -> 0(Class<VR128X>))  [3.03;3.03]
		 Successful, latency: 3.03

-----VSUBSSZrrk_Int-----
	VSUBSSZrrk_Int(1(Class<VR128X>) -> 0(Class<VR128X>))  [3.04;3.04]
		 Successful, latency: 3.04
	VSUBSSZrrk_Int(3(Class<VR128X>) -> 0(Class<VR128X>))  [3.05;3.05]
		 Successful, latency: 3.05
	VSUBSSZrrk_Int(4(Class<VR128X>) -> 0(Class<VR128X>))  [3.03;3.03]
		 Successful, latency: 3.03

-----VSUBSSZrrkz_Int-----
	VSUBSSZrrkz_Int(2(Class<VR128X>) -> 0(Class<VR128X>))  [3.04;3.04]
		 Successful, latency: 3.04
	VSUBSSZrrkz_Int(3(Class<VR128X>) -> 0(Class<VR128X>))  [3.04;3.04]
		 Successful, latency: 3.04

-----VSUBSSrr-----
	VSUBSSrr(1(Class<FR32>) -> 0(Class<FR32>))  [3.04;3.04]
		 Successful, latency: 3.04
	VSUBSSrr(2(Class<FR32>) -> 0(Class<FR32>))  [3.02;3.02]
		 Successful, latency: 3.02

-----VSUBSSrr_Int-----
	VSUBSSrr_Int(1(Class<VR128>) -> 0(Class<VR128>))  [3.05;3.05]
		 Successful, latency: 3.05
	VSUBSSrr_Int(2(Class<VR128>) -> 0(Class<VR128>))  [3.04;3.04]
		 Successful, latency: 3.04

-----VTESTPDYrr-----
	VTESTPDYrr(0(Class<VR256>) -> impl(Reg<EFLAGS>))  [0.994;-0.00625]
		Dependencies:
			CMOV_VR256(impl(Reg<EFLAGS>) -> 0(Class<VR256>)) 
			VPTESTYrr(0(Class<VR256>) -> impl(Reg<EFLAGS>)) 
		Combined result: 1.01 cycles
	VTESTPDYrr(1(Class<VR256>) -> impl(Reg<EFLAGS>))  [0.984;-0.0163]
		Dependencies:
			CMOV_VR256(impl(Reg<EFLAGS>) -> 0(Class<VR256>)) 
			VPTESTYrr(0(Class<VR256>) -> impl(Reg<EFLAGS>)) 
		Combined result: 1 cycles

-----VTESTPDrr-----
	VTESTPDrr(0(Class<VR128>) -> impl(Reg<EFLAGS>))  [0.996;0.0025]
		Dependencies:
			CMOV_VR128(impl(Reg<EFLAGS>) -> 0(Class<VR128>)) 
			COMISDrr_Int(0(Class<VR128>) -> impl(Reg<EFLAGS>)) 
		Combined result: 1.01 cycles
	VTESTPDrr(1(Class<VR128>) -> impl(Reg<EFLAGS>))  [0.994;0]
		Dependencies:
			CMOV_VR128(impl(Reg<EFLAGS>) -> 0(Class<VR128>)) 
			COMISDrr_Int(0(Class<VR128>) -> impl(Reg<EFLAGS>)) 
		Combined result: 1.01 cycles

-----VTESTPSYrr-----
	VTESTPSYrr(0(Class<VR256>) -> impl(Reg<EFLAGS>))  [0.996;-0.00375]
		Dependencies:
			CMOV_VR256(impl(Reg<EFLAGS>) -> 0(Class<VR256>)) 
			VPTESTYrr(0(Class<VR256>) -> impl(Reg<EFLAGS>)) 
		Combined result: 1.01 cycles
	VTESTPSYrr(1(Class<VR256>) -> impl(Reg<EFLAGS>))  [0.997;-0.0025]
		Dependencies:
			CMOV_VR256(impl(Reg<EFLAGS>) -> 0(Class<VR256>)) 
			VPTESTYrr(0(Class<VR256>) -> impl(Reg<EFLAGS>)) 
		Combined result: 1.01 cycles

-----VTESTPSrr-----
	VTESTPSrr(0(Class<VR128>) -> impl(Reg<EFLAGS>))  [0.996;0.0025]
		Dependencies:
			CMOV_VR128(impl(Reg<EFLAGS>) -> 0(Class<VR128>)) 
			COMISDrr_Int(0(Class<VR128>) -> impl(Reg<EFLAGS>)) 
		Combined result: 1.01 cycles
	VTESTPSrr(1(Class<VR128>) -> impl(Reg<EFLAGS>))  [0.986;-0.0075]
		Dependencies:
			CMOV_VR128(impl(Reg<EFLAGS>) -> 0(Class<VR128>)) 
			COMISDrr_Int(0(Class<VR128>) -> impl(Reg<EFLAGS>)) 
		Combined result: 1 cycles

-----VUCOMISDZrr-----
	VUCOMISDZrr(0(Class<FR64X>) -> impl(Reg<EFLAGS>))  [0.991;0.00625]
		Dependencies:
			CMOV_FR64X(impl(Reg<EFLAGS>) -> 0(Class<FR64X>)) 
			VCOMISDZrr(0(Class<FR64X>) -> impl(Reg<EFLAGS>)) 
		Combined result: 1.01 cycles
	VUCOMISDZrr(1(Class<FR64X>) -> impl(Reg<EFLAGS>))  [0.985;-2.22e-16]
		Dependencies:
			CMOV_FR64X(impl(Reg<EFLAGS>) -> 0(Class<FR64X>)) 
			VCOMISDZrr(0(Class<FR64X>) -> impl(Reg<EFLAGS>)) 
		Combined result: 1 cycles

-----VUCOMISDZrr_Int-----
	VUCOMISDZrr_Int(0(Class<VR128X>) -> impl(Reg<EFLAGS>))  [0.993;-0.00625]
		Dependencies:
			CMOV_VR128X(impl(Reg<EFLAGS>) -> 0(Class<VR128X>)) 
			VCOMISDZrr_Int(0(Class<VR128X>) -> impl(Reg<EFLAGS>)) 
		Combined result: 1.01 cycles
	VUCOMISDZrr_Int(1(Class<VR128X>) -> impl(Reg<EFLAGS>))  [1;0.00125]
		Dependencies:
			CMOV_VR128X(impl(Reg<EFLAGS>) -> 0(Class<VR128X>)) 
			VCOMISDZrr_Int(0(Class<VR128X>) -> impl(Reg<EFLAGS>)) 
		Combined result: 1.01 cycles

-----VUCOMISDZrrb-----
	VUCOMISDZrrb(0(Class<VR128X>) -> impl(Reg<EFLAGS>))  [0.988;-0.0112]
		Dependencies:
			CMOV_VR128X(impl(Reg<EFLAGS>) -> 0(Class<VR128X>)) 
			VCOMISDZrr_Int(0(Class<VR128X>) -> impl(Reg<EFLAGS>)) 
		Combined result: 1 cycles
	VUCOMISDZrrb(1(Class<VR128X>) -> impl(Reg<EFLAGS>))  [0.989;-0.01]
		Dependencies:
			CMOV_VR128X(impl(Reg<EFLAGS>) -> 0(Class<VR128X>)) 
			VCOMISDZrr_Int(0(Class<VR128X>) -> impl(Reg<EFLAGS>)) 
		Combined result: 1 cycles

-----VUCOMISDrr-----
	VUCOMISDrr(0(Class<FR64>) -> impl(Reg<EFLAGS>))  [1.01;0.0138]
		Dependencies:
			CMOV_FR64(impl(Reg<EFLAGS>) -> 0(Class<FR64>)) 
			COMISDrr(0(Class<FR64>) -> impl(Reg<EFLAGS>)) 
		Combined result: 1.01 cycles
	VUCOMISDrr(1(Class<FR64>) -> impl(Reg<EFLAGS>))  [1.01;0.0138]
		Dependencies:
			CMOV_FR64(impl(Reg<EFLAGS>) -> 0(Class<FR64>)) 
			COMISDrr(0(Class<FR64>) -> impl(Reg<EFLAGS>)) 
		Combined result: 1.01 cycles

-----VUCOMISDrr_Int-----
	VUCOMISDrr_Int(0(Class<VR128>) -> impl(Reg<EFLAGS>))  [0.997;0.00375]
		Dependencies:
			CMOV_VR128(impl(Reg<EFLAGS>) -> 0(Class<VR128>)) 
			COMISDrr_Int(0(Class<VR128>) -> impl(Reg<EFLAGS>)) 
		Combined result: 1.01 cycles
	VUCOMISDrr_Int(1(Class<VR128>) -> impl(Reg<EFLAGS>))  [0.981;-0.0125]
		Dependencies:
			CMOV_VR128(impl(Reg<EFLAGS>) -> 0(Class<VR128>)) 
			COMISDrr_Int(0(Class<VR128>) -> impl(Reg<EFLAGS>)) 
		Combined result: 0.999 cycles

-----VUCOMISHZrr-----
	0x138383cf2de8
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VUCOMISSZrr-----
	VUCOMISSZrr(0(Class<FR32X>) -> impl(Reg<EFLAGS>))  [0.996;-0.00375]
		Dependencies:
			CMOV_FR32X(impl(Reg<EFLAGS>) -> 0(Class<FR32X>)) 
			VCOMISSZrr(0(Class<FR32X>) -> impl(Reg<EFLAGS>)) 
		Combined result: 1.01 cycles
	VUCOMISSZrr(1(Class<FR32X>) -> impl(Reg<EFLAGS>))  [0.997;-0.0025]
		Dependencies:
			CMOV_FR32X(impl(Reg<EFLAGS>) -> 0(Class<FR32X>)) 
			VCOMISSZrr(0(Class<FR32X>) -> impl(Reg<EFLAGS>)) 
		Combined result: 1.01 cycles

-----VUCOMISSZrr_Int-----
	VUCOMISSZrr_Int(0(Class<VR128X>) -> impl(Reg<EFLAGS>))  [0.995;-0.00375]
		Dependencies:
			CMOV_VR128X(impl(Reg<EFLAGS>) -> 0(Class<VR128X>)) 
			VCOMISDZrr_Int(0(Class<VR128X>) -> impl(Reg<EFLAGS>)) 
		Combined result: 1.01 cycles
	VUCOMISSZrr_Int(1(Class<VR128X>) -> impl(Reg<EFLAGS>))  [0.995;-0.00375]
		Dependencies:
			CMOV_VR128X(impl(Reg<EFLAGS>) -> 0(Class<VR128X>)) 
			VCOMISDZrr_Int(0(Class<VR128X>) -> impl(Reg<EFLAGS>)) 
		Combined result: 1.01 cycles

-----VUCOMISSZrrb-----
	VUCOMISSZrrb(0(Class<VR128X>) -> impl(Reg<EFLAGS>))  [0.986;-0.0125]
		Dependencies:
			CMOV_VR128X(impl(Reg<EFLAGS>) -> 0(Class<VR128X>)) 
			VCOMISDZrr_Int(0(Class<VR128X>) -> impl(Reg<EFLAGS>)) 
		Combined result: 1 cycles
	VUCOMISSZrrb(1(Class<VR128X>) -> impl(Reg<EFLAGS>))  [0.996;-0.0025]
		Dependencies:
			CMOV_VR128X(impl(Reg<EFLAGS>) -> 0(Class<VR128X>)) 
			VCOMISDZrr_Int(0(Class<VR128X>) -> impl(Reg<EFLAGS>)) 
		Combined result: 1.01 cycles

-----VUCOMISSrr-----
	VUCOMISSrr(0(Class<FR32>) -> impl(Reg<EFLAGS>))  [0.985;-2.22e-16]
		Dependencies:
			CMOV_FR32(impl(Reg<EFLAGS>) -> 0(Class<FR32>)) 
			COMISSrr(0(Class<FR32>) -> impl(Reg<EFLAGS>)) 
		Combined result: 1 cycles
	VUCOMISSrr(1(Class<FR32>) -> impl(Reg<EFLAGS>))  [0.992;0.0075]
		Dependencies:
			CMOV_FR32(impl(Reg<EFLAGS>) -> 0(Class<FR32>)) 
			COMISSrr(0(Class<FR32>) -> impl(Reg<EFLAGS>)) 
		Combined result: 1.01 cycles

-----VUCOMISSrr_Int-----
	VUCOMISSrr_Int(0(Class<VR128>) -> impl(Reg<EFLAGS>))  [1;0.0075]
		Dependencies:
			CMOV_VR128(impl(Reg<EFLAGS>) -> 0(Class<VR128>)) 
			COMISDrr_Int(0(Class<VR128>) -> impl(Reg<EFLAGS>)) 
		Combined result: 1.02 cycles
	VUCOMISSrr_Int(1(Class<VR128>) -> impl(Reg<EFLAGS>))  [0.991;-0.0025]
		Dependencies:
			CMOV_VR128(impl(Reg<EFLAGS>) -> 0(Class<VR128>)) 
			COMISDrr_Int(0(Class<VR128>) -> impl(Reg<EFLAGS>)) 
		Combined result: 1.01 cycles

-----VUCOMXSHZrr-----
	0x138383cf3520
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----VUNPCKHPDYrr-----
	VUNPCKHPDYrr(1(Class<VR256>) -> 0(Class<VR256>))  [1.01;1.01]
		 Successful, latency: 1.01
	VUNPCKHPDYrr(2(Class<VR256>) -> 0(Class<VR256>))  [1;1]
		 Successful, latency: 1

-----VUNPCKHPDZ128rr-----
	VUNPCKHPDZ128rr(1(Class<VR128X>) -> 0(Class<VR128X>))  [1.01;1.01]
		 Successful, latency: 1.01
	VUNPCKHPDZ128rr(2(Class<VR128X>) -> 0(Class<VR128X>))  [1;1]
		 Successful, latency: 1

-----VUNPCKHPDZ128rrk-----
	VUNPCKHPDZ128rrk(1(Class<VR128X>) -> 0(Class<VR128X>))  [1;1]
		 Successful, latency: 1
	VUNPCKHPDZ128rrk(3(Class<VR128X>) -> 0(Class<VR128X>))  [1.01;1.01]
		 Successful, latency: 1.01
	VUNPCKHPDZ128rrk(4(Class<VR128X>) -> 0(Class<VR128X>))  [1.01;1.01]
		 Successful, latency: 1.01

-----VUNPCKHPDZ128rrkz-----
	VUNPCKHPDZ128rrkz(2(Class<VR128X>) -> 0(Class<VR128X>))  [1.01;1.01]
		 Successful, latency: 1.01
	VUNPCKHPDZ128rrkz(3(Class<VR128X>) -> 0(Class<VR128X>))  [1;1]
		 Successful, latency: 1

-----VUNPCKHPDZ256rr-----
	VUNPCKHPDZ256rr(1(Class<VR256X>) -> 0(Class<VR256X>))  [0.999;0.999]
		 Successful, latency: 0.999
	VUNPCKHPDZ256rr(2(Class<VR256X>) -> 0(Class<VR256X>))  [1;1]
		 Successful, latency: 1

-----VUNPCKHPDZ256rrk-----
	VUNPCKHPDZ256rrk(1(Class<VR256X>) -> 0(Class<VR256X>))  [1.01;1.01]
		 Successful, latency: 1.01
	VUNPCKHPDZ256rrk(3(Class<VR256X>) -> 0(Class<VR256X>))  [1.02;1.02]
		 Successful, latency: 1.02
	VUNPCKHPDZ256rrk(4(Class<VR256X>) -> 0(Class<VR256X>))  [1.01;1.01]
		 Successful, latency: 1.01

-----VUNPCKHPDZ256rrkz-----
	VUNPCKHPDZ256rrkz(2(Class<VR256X>) -> 0(Class<VR256X>))  [1.01;1.01]
		 Successful, latency: 1.01
	VUNPCKHPDZ256rrkz(3(Class<VR256X>) -> 0(Class<VR256X>))  [1.01;1.01]
		 Successful, latency: 1.01

-----VUNPCKHPDZrr-----
	VUNPCKHPDZrr(1(Class<VR512>) -> 0(Class<VR512>))  [1.14;1.14]
		 Successful, latency: 1.14
	VUNPCKHPDZrr(2(Class<VR512>) -> 0(Class<VR512>))  [1.08;1.08]
		 Successful, latency: 1.08

-----VUNPCKHPDZrrk-----
	VUNPCKHPDZrrk(1(Class<VR512>) -> 0(Class<VR512>))  [1.07;1.07]
		 Successful, latency: 1.07
	VUNPCKHPDZrrk(3(Class<VR512>) -> 0(Class<VR512>))  [1.15;1.15]
		 Successful, latency: 1.15
	VUNPCKHPDZrrk(4(Class<VR512>) -> 0(Class<VR512>))  [1.1;1.1]
		 Successful, latency: 1.1

-----VUNPCKHPDZrrkz-----
	VUNPCKHPDZrrkz(2(Class<VR512>) -> 0(Class<VR512>))  [1.14;1.14]
		 Successful, latency: 1.14
	VUNPCKHPDZrrkz(3(Class<VR512>) -> 0(Class<VR512>))  [1.15;1.15]
		 Successful, latency: 1.15

-----VUNPCKHPDrr-----
	VUNPCKHPDrr(1(Class<VR128>) -> 0(Class<VR128>))  [1.02;1.02]
		 Successful, latency: 1.02
	VUNPCKHPDrr(2(Class<VR128>) -> 0(Class<VR128>))  [1.01;1.01]
		 Successful, latency: 1.01

-----VUNPCKHPSYrr-----
	VUNPCKHPSYrr(1(Class<VR256>) -> 0(Class<VR256>))  [1.01;1.01]
		 Successful, latency: 1.01
	VUNPCKHPSYrr(2(Class<VR256>) -> 0(Class<VR256>))  [1.01;1.01]
		 Successful, latency: 1.01

-----VUNPCKHPSZ128rr-----
	VUNPCKHPSZ128rr(1(Class<VR128X>) -> 0(Class<VR128X>))  [1.02;1.02]
		 Successful, latency: 1.02
	VUNPCKHPSZ128rr(2(Class<VR128X>) -> 0(Class<VR128X>))  [1.01;1.01]
		 Successful, latency: 1.01

-----VUNPCKHPSZ128rrk-----
	VUNPCKHPSZ128rrk(1(Class<VR128X>) -> 0(Class<VR128X>))  [1.01;1.01]
		 Successful, latency: 1.01
	VUNPCKHPSZ128rrk(3(Class<VR128X>) -> 0(Class<VR128X>))  [1.01;1.01]
		 Successful, latency: 1.01
	VUNPCKHPSZ128rrk(4(Class<VR128X>) -> 0(Class<VR128X>))  [1;1]
		 Successful, latency: 1

-----VUNPCKHPSZ128rrkz-----
	VUNPCKHPSZ128rrkz(2(Class<VR128X>) -> 0(Class<VR128X>))  [1.02;1.02]
		 Successful, latency: 1.02
	VUNPCKHPSZ128rrkz(3(Class<VR128X>) -> 0(Class<VR128X>))  [1.01;1.01]
		 Successful, latency: 1.01

-----VUNPCKHPSZ256rr-----
	VUNPCKHPSZ256rr(1(Class<VR256X>) -> 0(Class<VR256X>))  [1.01;1.01]
		 Successful, latency: 1.01
	VUNPCKHPSZ256rr(2(Class<VR256X>) -> 0(Class<VR256X>))  [1.01;1.01]
		 Successful, latency: 1.01

-----VUNPCKHPSZ256rrk-----
	VUNPCKHPSZ256rrk(1(Class<VR256X>) -> 0(Class<VR256X>))  [1.01;1.01]
		 Successful, latency: 1.01
	VUNPCKHPSZ256rrk(3(Class<VR256X>) -> 0(Class<VR256X>))  [1;1]
		 Successful, latency: 1
	VUNPCKHPSZ256rrk(4(Class<VR256X>) -> 0(Class<VR256X>))  [1.01;1.01]
		 Successful, latency: 1.01

-----VUNPCKHPSZ256rrkz-----
	VUNPCKHPSZ256rrkz(2(Class<VR256X>) -> 0(Class<VR256X>))  [1;1]
		 Successful, latency: 1
	VUNPCKHPSZ256rrkz(3(Class<VR256X>) -> 0(Class<VR256X>))  [1;1]
		 Successful, latency: 1

-----VUNPCKHPSZrr-----
	VUNPCKHPSZrr(1(Class<VR512>) -> 0(Class<VR512>))  [1.09;1.09]
		 Successful, latency: 1.09
	VUNPCKHPSZrr(2(Class<VR512>) -> 0(Class<VR512>))  [1.08;1.08]
		 Successful, latency: 1.08

-----VUNPCKHPSZrrk-----
	VUNPCKHPSZrrk(1(Class<VR512>) -> 0(Class<VR512>))  [1.12;1.12]
		 Successful, latency: 1.12
	VUNPCKHPSZrrk(3(Class<VR512>) -> 0(Class<VR512>))  [1.08;1.08]
		 Successful, latency: 1.08
	VUNPCKHPSZrrk(4(Class<VR512>) -> 0(Class<VR512>))  [1.15;1.15]
		 Successful, latency: 1.15

-----VUNPCKHPSZrrkz-----
	VUNPCKHPSZrrkz(2(Class<VR512>) -> 0(Class<VR512>))  [1.08;1.08]
		 Successful, latency: 1.08
	VUNPCKHPSZrrkz(3(Class<VR512>) -> 0(Class<VR512>))  [1.17;1.17]
		 Successful, latency: 1.17

-----VUNPCKHPSrr-----
	VUNPCKHPSrr(1(Class<VR128>) -> 0(Class<VR128>))  [1.02;1.02]
		 Successful, latency: 1.02
	VUNPCKHPSrr(2(Class<VR128>) -> 0(Class<VR128>))  [1.01;1.01]
		 Successful, latency: 1.01

-----VUNPCKLPDYrr-----
	VUNPCKLPDYrr(1(Class<VR256>) -> 0(Class<VR256>))  [1;1]
		 Successful, latency: 1
	VUNPCKLPDYrr(2(Class<VR256>) -> 0(Class<VR256>))  [1.01;1.01]
		 Successful, latency: 1.01

-----VUNPCKLPDZ128rr-----
	VUNPCKLPDZ128rr(1(Class<VR128X>) -> 0(Class<VR128X>))  [1.02;1.02]
		 Successful, latency: 1.02
	VUNPCKLPDZ128rr(2(Class<VR128X>) -> 0(Class<VR128X>))  [1;1]
		 Successful, latency: 1

-----VUNPCKLPDZ128rrk-----
	VUNPCKLPDZ128rrk(1(Class<VR128X>) -> 0(Class<VR128X>))  [1;1]
		 Successful, latency: 1
	VUNPCKLPDZ128rrk(3(Class<VR128X>) -> 0(Class<VR128X>))  [1.01;1.01]
		 Successful, latency: 1.01
	VUNPCKLPDZ128rrk(4(Class<VR128X>) -> 0(Class<VR128X>))  [1.01;1.01]
		 Successful, latency: 1.01

-----VUNPCKLPDZ128rrkz-----
	VUNPCKLPDZ128rrkz(2(Class<VR128X>) -> 0(Class<VR128X>))  [1.01;1.01]
		 Successful, latency: 1.01
	VUNPCKLPDZ128rrkz(3(Class<VR128X>) -> 0(Class<VR128X>))  [1;1]
		 Successful, latency: 1

-----VUNPCKLPDZ256rr-----
	VUNPCKLPDZ256rr(1(Class<VR256X>) -> 0(Class<VR256X>))  [1.01;1.01]
		 Successful, latency: 1.01
	VUNPCKLPDZ256rr(2(Class<VR256X>) -> 0(Class<VR256X>))  [1;1]
		 Successful, latency: 1

-----VUNPCKLPDZ256rrk-----
	VUNPCKLPDZ256rrk(1(Class<VR256X>) -> 0(Class<VR256X>))  [1.01;1.01]
		 Successful, latency: 1.01
	VUNPCKLPDZ256rrk(3(Class<VR256X>) -> 0(Class<VR256X>))  [1.01;1.01]
		 Successful, latency: 1.01
	VUNPCKLPDZ256rrk(4(Class<VR256X>) -> 0(Class<VR256X>))  [1.01;1.01]
		 Successful, latency: 1.01

-----VUNPCKLPDZ256rrkz-----
	VUNPCKLPDZ256rrkz(2(Class<VR256X>) -> 0(Class<VR256X>))  [1;1]
		 Successful, latency: 1
	VUNPCKLPDZ256rrkz(3(Class<VR256X>) -> 0(Class<VR256X>))  [1.02;1.02]
		 Successful, latency: 1.02

-----VUNPCKLPDZrr-----
	VUNPCKLPDZrr(1(Class<VR512>) -> 0(Class<VR512>))  [1.08;1.08]
		 Successful, latency: 1.08
	VUNPCKLPDZrr(2(Class<VR512>) -> 0(Class<VR512>))  [1.13;1.13]
		 Successful, latency: 1.13

-----VUNPCKLPDZrrk-----
	VUNPCKLPDZrrk(1(Class<VR512>) -> 0(Class<VR512>))  [1.16;1.16]
		 Successful, latency: 1.16
	VUNPCKLPDZrrk(3(Class<VR512>) -> 0(Class<VR512>))  [1.16;1.16]
		 Successful, latency: 1.16
	VUNPCKLPDZrrk(4(Class<VR512>) -> 0(Class<VR512>))  [1.15;1.15]
		 Successful, latency: 1.15

-----VUNPCKLPDZrrkz-----
	VUNPCKLPDZrrkz(2(Class<VR512>) -> 0(Class<VR512>))  [1.25;1.25]
		 Successful, latency: 1.25
	VUNPCKLPDZrrkz(3(Class<VR512>) -> 0(Class<VR512>))  [1.15;1.15]
		 Successful, latency: 1.15

-----VUNPCKLPDrr-----
	VUNPCKLPDrr(1(Class<VR128>) -> 0(Class<VR128>))  [1;1]
		 Successful, latency: 1
	VUNPCKLPDrr(2(Class<VR128>) -> 0(Class<VR128>))  [1;1]
		 Successful, latency: 1

-----VUNPCKLPSYrr-----
	VUNPCKLPSYrr(1(Class<VR256>) -> 0(Class<VR256>))  [1.01;1.01]
		 Successful, latency: 1.01
	VUNPCKLPSYrr(2(Class<VR256>) -> 0(Class<VR256>))  [1.01;1.01]
		 Successful, latency: 1.01

-----VUNPCKLPSZ128rr-----
	VUNPCKLPSZ128rr(1(Class<VR128X>) -> 0(Class<VR128X>))  [1.01;1.01]
		 Successful, latency: 1.01
	VUNPCKLPSZ128rr(2(Class<VR128X>) -> 0(Class<VR128X>))  [1;1]
		 Successful, latency: 1

-----VUNPCKLPSZ128rrk-----
	VUNPCKLPSZ128rrk(1(Class<VR128X>) -> 0(Class<VR128X>))  [1.01;1.01]
		 Successful, latency: 1.01
	VUNPCKLPSZ128rrk(3(Class<VR128X>) -> 0(Class<VR128X>))  [1.01;1.01]
		 Successful, latency: 1.01
	VUNPCKLPSZ128rrk(4(Class<VR128X>) -> 0(Class<VR128X>))  [1.01;1.01]
		 Successful, latency: 1.01

-----VUNPCKLPSZ128rrkz-----
	VUNPCKLPSZ128rrkz(2(Class<VR128X>) -> 0(Class<VR128X>))  [1.01;1.01]
		 Successful, latency: 1.01
	VUNPCKLPSZ128rrkz(3(Class<VR128X>) -> 0(Class<VR128X>))  [1.01;1.01]
		 Successful, latency: 1.01

-----VUNPCKLPSZ256rr-----
	VUNPCKLPSZ256rr(1(Class<VR256X>) -> 0(Class<VR256X>))  [1.01;1.01]
		 Successful, latency: 1.01
	VUNPCKLPSZ256rr(2(Class<VR256X>) -> 0(Class<VR256X>))  [1;1]
		 Successful, latency: 1

-----VUNPCKLPSZ256rrk-----
	VUNPCKLPSZ256rrk(1(Class<VR256X>) -> 0(Class<VR256X>))  [1.01;1.01]
		 Successful, latency: 1.01
	VUNPCKLPSZ256rrk(3(Class<VR256X>) -> 0(Class<VR256X>))  [1;1]
		 Successful, latency: 1
	VUNPCKLPSZ256rrk(4(Class<VR256X>) -> 0(Class<VR256X>))  [1.01;1.01]
		 Successful, latency: 1.01

-----VUNPCKLPSZ256rrkz-----
	VUNPCKLPSZ256rrkz(2(Class<VR256X>) -> 0(Class<VR256X>))  [1.02;1.02]
		 Successful, latency: 1.02
	VUNPCKLPSZ256rrkz(3(Class<VR256X>) -> 0(Class<VR256X>))  [1;1]
		 Successful, latency: 1

-----VUNPCKLPSZrr-----
	VUNPCKLPSZrr(1(Class<VR512>) -> 0(Class<VR512>))  [1.15;1.15]
		 Successful, latency: 1.15
	VUNPCKLPSZrr(2(Class<VR512>) -> 0(Class<VR512>))  [1.15;1.15]
		 Successful, latency: 1.15

-----VUNPCKLPSZrrk-----
	VUNPCKLPSZrrk(1(Class<VR512>) -> 0(Class<VR512>))  [1.13;1.13]
		 Successful, latency: 1.13
	VUNPCKLPSZrrk(3(Class<VR512>) -> 0(Class<VR512>))  [1.14;1.14]
		 Successful, latency: 1.14
	VUNPCKLPSZrrk(4(Class<VR512>) -> 0(Class<VR512>))  [1.15;1.15]
		 Successful, latency: 1.15

-----VUNPCKLPSZrrkz-----
	VUNPCKLPSZrrkz(2(Class<VR512>) -> 0(Class<VR512>))  [1.11;1.11]
		 Successful, latency: 1.11
	VUNPCKLPSZrrkz(3(Class<VR512>) -> 0(Class<VR512>))  [1.08;1.08]
		 Successful, latency: 1.08

-----VUNPCKLPSrr-----
	VUNPCKLPSrr(1(Class<VR128>) -> 0(Class<VR128>))  [1.01;1.01]
		 Successful, latency: 1.01
	VUNPCKLPSrr(2(Class<VR128>) -> 0(Class<VR128>))  [1.02;1.02]
		 Successful, latency: 1.02

-----VXORPDYrr-----
	VXORPDYrr(1(Class<VR256>) -> 0(Class<VR256>))  [1.01;1.01]
		 Successful, latency: 1.01
	VXORPDYrr(2(Class<VR256>) -> 0(Class<VR256>))  [1.02;1.02]
		 Successful, latency: 1.02

-----VXORPDZ128rr-----
	VXORPDZ128rr(1(Class<VR128X>) -> 0(Class<VR128X>))  [1;1]
		 Successful, latency: 1
	VXORPDZ128rr(2(Class<VR128X>) -> 0(Class<VR128X>))  [1;1]
		 Successful, latency: 1

-----VXORPDZ128rrk-----
	VXORPDZ128rrk(1(Class<VR128X>) -> 0(Class<VR128X>))  [1.01;1.01]
		 Successful, latency: 1.01
	VXORPDZ128rrk(3(Class<VR128X>) -> 0(Class<VR128X>))  [1.02;1.02]
		 Successful, latency: 1.02
	VXORPDZ128rrk(4(Class<VR128X>) -> 0(Class<VR128X>))  [1.01;1.01]
		 Successful, latency: 1.01

-----VXORPDZ128rrkz-----
	VXORPDZ128rrkz(2(Class<VR128X>) -> 0(Class<VR128X>))  [1.01;1.01]
		 Successful, latency: 1.01
	VXORPDZ128rrkz(3(Class<VR128X>) -> 0(Class<VR128X>))  [1.01;1.01]
		 Successful, latency: 1.01

-----VXORPDZ256rr-----
	VXORPDZ256rr(1(Class<VR256X>) -> 0(Class<VR256X>))  [1;1]
		 Successful, latency: 1
	VXORPDZ256rr(2(Class<VR256X>) -> 0(Class<VR256X>))  [1.01;1.01]
		 Successful, latency: 1.01

-----VXORPDZ256rrk-----
	VXORPDZ256rrk(1(Class<VR256X>) -> 0(Class<VR256X>))  [1.02;1.02]
		 Successful, latency: 1.02
	VXORPDZ256rrk(3(Class<VR256X>) -> 0(Class<VR256X>))  [1;1]
		 Successful, latency: 1
	VXORPDZ256rrk(4(Class<VR256X>) -> 0(Class<VR256X>))  [1;1]
		 Successful, latency: 1

-----VXORPDZ256rrkz-----
	VXORPDZ256rrkz(2(Class<VR256X>) -> 0(Class<VR256X>))  [1.01;1.01]
		 Successful, latency: 1.01
	VXORPDZ256rrkz(3(Class<VR256X>) -> 0(Class<VR256X>))  [1.01;1.01]
		 Successful, latency: 1.01

-----VXORPDZrr-----
	VXORPDZrr(1(Class<VR512>) -> 0(Class<VR512>))  [1;1]
		 Successful, latency: 1
	VXORPDZrr(2(Class<VR512>) -> 0(Class<VR512>))  [1;1]
		 Successful, latency: 1

-----VXORPDZrrk-----
	VXORPDZrrk(1(Class<VR512>) -> 0(Class<VR512>))  [1.01;1.01]
		 Successful, latency: 1.01
	VXORPDZrrk(3(Class<VR512>) -> 0(Class<VR512>))  [1;1]
		 Successful, latency: 1
	VXORPDZrrk(4(Class<VR512>) -> 0(Class<VR512>))  [1.01;1.01]
		 Successful, latency: 1.01

-----VXORPDZrrkz-----
	VXORPDZrrkz(2(Class<VR512>) -> 0(Class<VR512>))  [1.01;1.01]
		 Successful, latency: 1.01
	VXORPDZrrkz(3(Class<VR512>) -> 0(Class<VR512>))  [1.01;1.01]
		 Successful, latency: 1.01

-----VXORPDrr-----
	VXORPDrr(1(Class<VR128>) -> 0(Class<VR128>))  [1;1]
		 Successful, latency: 1
	VXORPDrr(2(Class<VR128>) -> 0(Class<VR128>))  [1.01;1.01]
		 Successful, latency: 1.01

-----VXORPSYrr-----
	VXORPSYrr(1(Class<VR256>) -> 0(Class<VR256>))  [1;1]
		 Successful, latency: 1
	VXORPSYrr(2(Class<VR256>) -> 0(Class<VR256>))  [1;1]
		 Successful, latency: 1

-----VXORPSZ128rr-----
	VXORPSZ128rr(1(Class<VR128X>) -> 0(Class<VR128X>))  [1.01;1.01]
		 Successful, latency: 1.01
	VXORPSZ128rr(2(Class<VR128X>) -> 0(Class<VR128X>))  [1.01;1.01]
		 Successful, latency: 1.01

-----VXORPSZ128rrk-----
	VXORPSZ128rrk(1(Class<VR128X>) -> 0(Class<VR128X>))  [1;1]
		 Successful, latency: 1
	VXORPSZ128rrk(3(Class<VR128X>) -> 0(Class<VR128X>))  [1;1]
		 Successful, latency: 1
	VXORPSZ128rrk(4(Class<VR128X>) -> 0(Class<VR128X>))  [1.01;1.01]
		 Successful, latency: 1.01

-----VXORPSZ128rrkz-----
	VXORPSZ128rrkz(2(Class<VR128X>) -> 0(Class<VR128X>))  [1.02;1.02]
		 Successful, latency: 1.02
	VXORPSZ128rrkz(3(Class<VR128X>) -> 0(Class<VR128X>))  [1.01;1.01]
		 Successful, latency: 1.01

-----VXORPSZ256rr-----
	VXORPSZ256rr(1(Class<VR256X>) -> 0(Class<VR256X>))  [1;1]
		 Successful, latency: 1
	VXORPSZ256rr(2(Class<VR256X>) -> 0(Class<VR256X>))  [1.01;1.01]
		 Successful, latency: 1.01

-----VXORPSZ256rrk-----
	VXORPSZ256rrk(1(Class<VR256X>) -> 0(Class<VR256X>))  [1.01;1.01]
		 Successful, latency: 1.01
	VXORPSZ256rrk(3(Class<VR256X>) -> 0(Class<VR256X>))  [1.01;1.01]
		 Successful, latency: 1.01
	VXORPSZ256rrk(4(Class<VR256X>) -> 0(Class<VR256X>))  [1.01;1.01]
		 Successful, latency: 1.01

-----VXORPSZ256rrkz-----
	VXORPSZ256rrkz(2(Class<VR256X>) -> 0(Class<VR256X>))  [1.01;1.01]
		 Successful, latency: 1.01
	VXORPSZ256rrkz(3(Class<VR256X>) -> 0(Class<VR256X>))  [1;1]
		 Successful, latency: 1

-----VXORPSZrr-----
	VXORPSZrr(1(Class<VR512>) -> 0(Class<VR512>))  [1.01;1.01]
		 Successful, latency: 1.01
	VXORPSZrr(2(Class<VR512>) -> 0(Class<VR512>))  [1.01;1.01]
		 Successful, latency: 1.01

-----VXORPSZrrk-----
	VXORPSZrrk(1(Class<VR512>) -> 0(Class<VR512>))  [1;1]
		 Successful, latency: 1
	VXORPSZrrk(3(Class<VR512>) -> 0(Class<VR512>))  [1.01;1.01]
		 Successful, latency: 1.01
	VXORPSZrrk(4(Class<VR512>) -> 0(Class<VR512>))  [1;1]
		 Successful, latency: 1

-----VXORPSZrrkz-----
	VXORPSZrrkz(2(Class<VR512>) -> 0(Class<VR512>))  [1.01;1.01]
		 Successful, latency: 1.01
	VXORPSZrrkz(3(Class<VR512>) -> 0(Class<VR512>))  [1;1]
		 Successful, latency: 1

-----VXORPSrr-----
	VXORPSrr(1(Class<VR128>) -> 0(Class<VR128>))  [1.01;1.01]
		 Successful, latency: 1.01
	VXORPSrr(2(Class<VR128>) -> 0(Class<VR128>))  [1;1]
		 Successful, latency: 1

-----XADD16rr-----
	XADD16rr(2(Class<GR16>) -> 0(Class<GR16>))  [1.01;1.01]
		WARNING generated instructions have multiple dependencies. If they have different latencies the lower one will be shadowed
	XADD16rr(3(Class<GR16>) -> 0(Class<GR16>))  [1;1]
		WARNING generated instructions have multiple dependencies. If they have different latencies the lower one will be shadowed
	XADD16rr(2(Class<GR16>) -> 1(Class<GR16>))  [1.01;1.01]
		WARNING generated instructions have multiple dependencies. If they have different latencies the lower one will be shadowed
	XADD16rr(3(Class<GR16>) -> 1(Class<GR16>))  [1.01;1.01]
		WARNING generated instructions have multiple dependencies. If they have different latencies the lower one will be shadowed
	XADD16rr(2(Class<GR16>) -> impl(Reg<EFLAGS>))  [ERROR_UNUSUAL_LATENCY]
		Dependencies:
			ADC16rr(impl(Reg<EFLAGS>) -> 0(Class<GR16>)) 
			ADC16ri(1(Class<GR16>) -> impl(Reg<EFLAGS>)) 
		Combined result: 1 cycles
	XADD16rr(3(Class<GR16>) -> impl(Reg<EFLAGS>))  [ERROR_UNUSUAL_LATENCY]
		Dependencies:
			ADC16rr(impl(Reg<EFLAGS>) -> 0(Class<GR16>)) 
			ADC16ri(1(Class<GR16>) -> impl(Reg<EFLAGS>)) 
		Combined result: 1.03 cycles

-----XADD32rr-----
	XADD32rr(2(Class<GR32>) -> 0(Class<GR32>))  [1;1]
		WARNING generated instructions have multiple dependencies. If they have different latencies the lower one will be shadowed
	XADD32rr(3(Class<GR32>) -> 0(Class<GR32>))  [1.01;1.01]
		WARNING generated instructions have multiple dependencies. If they have different latencies the lower one will be shadowed
	XADD32rr(2(Class<GR32>) -> 1(Class<GR32>))  [1;1]
		WARNING generated instructions have multiple dependencies. If they have different latencies the lower one will be shadowed
	XADD32rr(3(Class<GR32>) -> 1(Class<GR32>))  [1;1]
		WARNING generated instructions have multiple dependencies. If they have different latencies the lower one will be shadowed
	XADD32rr(2(Class<GR32>) -> impl(Reg<EFLAGS>))  [ERROR_UNUSUAL_LATENCY]
		Dependencies:
			ADC32ri8(impl(Reg<EFLAGS>) -> 0(Class<GR32>)) 
			ADC32ri(1(Class<GR32>) -> impl(Reg<EFLAGS>)) 
		Combined result: 1.02 cycles
	XADD32rr(3(Class<GR32>) -> impl(Reg<EFLAGS>))  [ERROR_UNUSUAL_LATENCY]
		Dependencies:
			ADC32ri8(impl(Reg<EFLAGS>) -> 0(Class<GR32>)) 
			ADC32ri(1(Class<GR32>) -> impl(Reg<EFLAGS>)) 
		Combined result: 1.02 cycles

-----XADD64rr-----
	XADD64rr(2(Class<GR64>) -> 0(Class<GR64>))  [1.01;1.01]
		WARNING generated instructions have multiple dependencies. If they have different latencies the lower one will be shadowed
	XADD64rr(3(Class<GR64>) -> 0(Class<GR64>))  [1.01;1.01]
		WARNING generated instructions have multiple dependencies. If they have different latencies the lower one will be shadowed
	XADD64rr(2(Class<GR64>) -> 1(Class<GR64>))  [1.01;1.01]
		WARNING generated instructions have multiple dependencies. If they have different latencies the lower one will be shadowed
	XADD64rr(3(Class<GR64>) -> 1(Class<GR64>))  [1.02;1.02]
		WARNING generated instructions have multiple dependencies. If they have different latencies the lower one will be shadowed
	XADD64rr(2(Class<GR64>) -> impl(Reg<EFLAGS>))  [ERROR_UNUSUAL_LATENCY]
		Dependencies:
			ADC64rr(impl(Reg<EFLAGS>) -> 0(Class<GR64>)) 
			ADC64ri32(1(Class<GR64>) -> impl(Reg<EFLAGS>)) 
		Combined result: 1 cycles
	XADD64rr(3(Class<GR64>) -> impl(Reg<EFLAGS>))  [ERROR_UNUSUAL_LATENCY]
		Dependencies:
			ADC64rr(impl(Reg<EFLAGS>) -> 0(Class<GR64>)) 
			ADC64ri32(1(Class<GR64>) -> impl(Reg<EFLAGS>)) 
		Combined result: 1 cycles

-----XADD8rr-----
	XADD8rr(2(Class<GR8>) -> 0(Class<GR8>))  [1;1]
		WARNING generated instructions have multiple dependencies. If they have different latencies the lower one will be shadowed
	XADD8rr(3(Class<GR8>) -> 0(Class<GR8>))  [1;1]
		WARNING generated instructions have multiple dependencies. If they have different latencies the lower one will be shadowed
	XADD8rr(2(Class<GR8>) -> 1(Class<GR8>))  [1.01;1.01]
		WARNING generated instructions have multiple dependencies. If they have different latencies the lower one will be shadowed
	XADD8rr(3(Class<GR8>) -> 1(Class<GR8>))  [1;1]
		WARNING generated instructions have multiple dependencies. If they have different latencies the lower one will be shadowed
	XADD8rr(2(Class<GR8>) -> impl(Reg<EFLAGS>))  [ERROR_UNUSUAL_LATENCY]
		Dependencies:
			ADC8ri8(impl(Reg<EFLAGS>) -> 0(Class<GR8>)) 
			ADC8ri(1(Class<GR8>) -> impl(Reg<EFLAGS>)) 
		Combined result: 1.01 cycles
	XADD8rr(3(Class<GR8>) -> impl(Reg<EFLAGS>))  [ERROR_UNUSUAL_LATENCY]
		Dependencies:
			ADC8ri8(impl(Reg<EFLAGS>) -> 0(Class<GR8>)) 
			ADC8ri(1(Class<GR8>) -> impl(Reg<EFLAGS>)) 
		Combined result: 1.01 cycles

-----XCHG16ar-----
	XCHG16ar(1(Class<GR16>) -> 0(Class<GR16>))  [0.0825;0.0825]
		 Successful, latency: 0.0825
	XCHG16ar(impl(Reg<AX>) -> impl(Reg<AX>))  [1.01;1.01]
		WARNING generated instructions have multiple dependencies. If they have different latencies the lower one will be shadowed
	XCHG16ar(impl(Reg<AX>) -> 0(Class<GR16>))  [1.02;2.05]
		Dependencies:
			XCHG16ar(impl(Reg<AX>) -> 0(Class<GR16>)) 
			MUL16r(0(Class<GR16>) -> impl(Reg<AX>)) 
		Combined result: 3.05 cycles
	XCHG16ar(1(Class<GR16>) -> impl(Reg<AX>))  [ERROR_UNUSUAL_LATENCY]
		Dependencies:
			XCHG16ar(impl(Reg<AX>) -> 0(Class<GR16>)) 
			MUL16r(0(Class<GR16>) -> impl(Reg<AX>)) 
		Combined result: 1.01 cycles

-----XCHG16rr-----
	XCHG16rr(2(Class<GR16>) -> 0(Class<GR16>))  [1.01;1.01]
		WARNING generated instructions have multiple dependencies. If they have different latencies the lower one will be shadowed
	XCHG16rr(3(Class<GR16>) -> 0(Class<GR16>))  [1;1]
		WARNING generated instructions have multiple dependencies. If they have different latencies the lower one will be shadowed
	XCHG16rr(2(Class<GR16>) -> 1(Class<GR16>))  [1.01;1.01]
		WARNING generated instructions have multiple dependencies. If they have different latencies the lower one will be shadowed
	XCHG16rr(3(Class<GR16>) -> 1(Class<GR16>))  [1;1]
		WARNING generated instructions have multiple dependencies. If they have different latencies the lower one will be shadowed

-----XCHG32ar-----
	XCHG32ar(1(Class<GR32>) -> 0(Class<GR32>))  [0.334;0.334]
		 Successful, latency: 0.334
	XCHG32ar(impl(Reg<EAX>) -> impl(Reg<EAX>))  [0.334;0.334]
		WARNING generated instructions have multiple dependencies. If they have different latencies the lower one will be shadowed
	XCHG32ar(impl(Reg<EAX>) -> 0(Class<GR32>))  [1.04;2.06]
		Dependencies:
			XCHG32ar(impl(Reg<EAX>) -> 0(Class<GR32>)) 
			MUL32r(0(Class<GR32>) -> impl(Reg<EAX>)) 
		Combined result: 3.06 cycles
	XCHG32ar(1(Class<GR32>) -> impl(Reg<EAX>))  [ERROR_UNUSUAL_LATENCY]
		Dependencies:
			XCHG32ar(impl(Reg<EAX>) -> 0(Class<GR32>)) 
			MUL32r(0(Class<GR32>) -> impl(Reg<EAX>)) 
		Combined result: 0.683 cycles

-----XCHG32rr-----
	XCHG32rr(2(Class<GR32>) -> 0(Class<GR32>))  [0.333;0.333]
		WARNING generated instructions have multiple dependencies. If they have different latencies the lower one will be shadowed
	XCHG32rr(3(Class<GR32>) -> 0(Class<GR32>))  [0.333;0.333]
		WARNING generated instructions have multiple dependencies. If they have different latencies the lower one will be shadowed
	XCHG32rr(2(Class<GR32>) -> 1(Class<GR32>))  [0.333;0.333]
		WARNING generated instructions have multiple dependencies. If they have different latencies the lower one will be shadowed
	XCHG32rr(3(Class<GR32>) -> 1(Class<GR32>))  [0.333;0.333]
		WARNING generated instructions have multiple dependencies. If they have different latencies the lower one will be shadowed

-----XCHG64ar-----
	XCHG64ar(1(Class<GR64>) -> 0(Class<GR64>))  [0.0825;0.0825]
		 Successful, latency: 0.0825
	XCHG64ar(impl(Reg<RAX>) -> impl(Reg<RAX>))  [0.333;0.333]
		WARNING generated instructions have multiple dependencies. If they have different latencies the lower one will be shadowed
	XCHG64ar(impl(Reg<RAX>) -> 0(Class<GR64>))  [1;2.03]
		Dependencies:
			XCHG64ar(impl(Reg<RAX>) -> 0(Class<GR64>)) 
			CMPXCHG64rr(1(Class<GR64>) -> impl(Reg<RAX>)) 
		Combined result: 3.03 cycles
	XCHG64ar(1(Class<GR64>) -> impl(Reg<RAX>))  [ERROR_UNUSUAL_LATENCY]
		Dependencies:
			XCHG64ar(impl(Reg<RAX>) -> 0(Class<GR64>)) 
			CMPXCHG64rr(1(Class<GR64>) -> impl(Reg<RAX>)) 
		Combined result: 0.333 cycles

-----XCHG64rr-----
	XCHG64rr(2(Class<GR64>) -> 0(Class<GR64>))  [0.334;0.334]
		WARNING generated instructions have multiple dependencies. If they have different latencies the lower one will be shadowed
	XCHG64rr(3(Class<GR64>) -> 0(Class<GR64>))  [0.333;0.333]
		WARNING generated instructions have multiple dependencies. If they have different latencies the lower one will be shadowed
	XCHG64rr(2(Class<GR64>) -> 1(Class<GR64>))  [0.334;0.334]
		WARNING generated instructions have multiple dependencies. If they have different latencies the lower one will be shadowed
	XCHG64rr(3(Class<GR64>) -> 1(Class<GR64>))  [0.334;0.334]
		WARNING generated instructions have multiple dependencies. If they have different latencies the lower one will be shadowed

-----XCHG8rr-----
	XCHG8rr(2(Class<GR8>) -> 0(Class<GR8>))  [1.01;1.01]
		WARNING generated instructions have multiple dependencies. If they have different latencies the lower one will be shadowed
	XCHG8rr(3(Class<GR8>) -> 0(Class<GR8>))  [1.02;1.02]
		WARNING generated instructions have multiple dependencies. If they have different latencies the lower one will be shadowed
	XCHG8rr(2(Class<GR8>) -> 1(Class<GR8>))  [1;1]
		WARNING generated instructions have multiple dependencies. If they have different latencies the lower one will be shadowed
	XCHG8rr(3(Class<GR8>) -> 1(Class<GR8>))  [1.01;1.01]
		WARNING generated instructions have multiple dependencies. If they have different latencies the lower one will be shadowed

-----XCRYPTCBC-----
	XCRYPTCBC(impl(Reg<RSI>) -> impl(Reg<RSI>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	XCRYPTCBC(impl(Reg<RDI>) -> impl(Reg<RDI>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----XCRYPTCFB-----
	XCRYPTCFB(impl(Reg<RSI>) -> impl(Reg<RSI>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	XCRYPTCFB(impl(Reg<RDI>) -> impl(Reg<RDI>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----XCRYPTCTR-----
	XCRYPTCTR(impl(Reg<RSI>) -> impl(Reg<RSI>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	XCRYPTCTR(impl(Reg<RDI>) -> impl(Reg<RDI>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----XCRYPTECB-----
	XCRYPTECB(impl(Reg<RSI>) -> impl(Reg<RSI>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	XCRYPTECB(impl(Reg<RDI>) -> impl(Reg<RDI>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----XCRYPTOFB-----
	XCRYPTOFB(impl(Reg<RSI>) -> impl(Reg<RSI>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	XCRYPTOFB(impl(Reg<RDI>) -> impl(Reg<RDI>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----XGETBV-----
	0x138383cf7618
		ERROR_SIGSEGV, this instruction cannot be measured on this platform

-----XOR16i16-----
	XOR16i16(impl(Reg<AX>) -> impl(Reg<AX>))  [1.02;1.02]
		 Successful, latency: 1.02
	XOR16i16(impl(Reg<AX>) -> impl(Reg<EFLAGS>))  [0.992;1.01]
		Dependencies:
			ADC16i16(impl(Reg<EFLAGS>) -> impl(Reg<AX>)) 
			ADC16i16(impl(Reg<AX>) -> impl(Reg<EFLAGS>)) 
		Combined result: 2.02 cycles

-----XOR16ri-----
	XOR16ri(1(Class<GR16>) -> 0(Class<GR16>))  [1.01;1.01]
		 Successful, latency: 1.01
	XOR16ri(1(Class<GR16>) -> impl(Reg<EFLAGS>))  [ERROR_UNUSUAL_LATENCY]
		Dependencies:
			ADC16rr(impl(Reg<EFLAGS>) -> 0(Class<GR16>)) 
			ADC16ri(1(Class<GR16>) -> impl(Reg<EFLAGS>)) 
		Combined result: 1 cycles

-----XOR16ri8-----
	XOR16ri8(1(Class<GR16>) -> 0(Class<GR16>))  [1.01;1.01]
		 Successful, latency: 1.01
	XOR16ri8(1(Class<GR16>) -> impl(Reg<EFLAGS>))  [ERROR_UNUSUAL_LATENCY]
		Dependencies:
			ADC16rr(impl(Reg<EFLAGS>) -> 0(Class<GR16>)) 
			ADC16ri(1(Class<GR16>) -> impl(Reg<EFLAGS>)) 
		Combined result: 1.01 cycles

-----XOR16ri8_EVEX-----
	XOR16ri8_EVEX(1(Class<GR16>) -> 0(Class<GR16>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----XOR16ri8_ND-----
	XOR16ri8_ND(1(Class<GR16>) -> 0(Class<GR16>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----XOR16ri8_NF-----
	XOR16ri8_NF(1(Class<GR16>) -> 0(Class<GR16>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----XOR16ri8_NF_ND-----
	XOR16ri8_NF_ND(1(Class<GR16>) -> 0(Class<GR16>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----XOR16ri_EVEX-----
	XOR16ri_EVEX(1(Class<GR16>) -> 0(Class<GR16>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----XOR16ri_ND-----
	XOR16ri_ND(1(Class<GR16>) -> 0(Class<GR16>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----XOR16ri_NF-----
	XOR16ri_NF(1(Class<GR16>) -> 0(Class<GR16>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----XOR16ri_NF_ND-----
	XOR16ri_NF_ND(1(Class<GR16>) -> 0(Class<GR16>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----XOR16rr-----
	XOR16rr(1(Class<GR16>) -> 0(Class<GR16>))  [1.01;1.01]
		 Successful, latency: 1.01
	XOR16rr(2(Class<GR16>) -> 0(Class<GR16>))  [1.01;1.01]
		 Successful, latency: 1.01
	XOR16rr(1(Class<GR16>) -> impl(Reg<EFLAGS>))  [ERROR_UNUSUAL_LATENCY]
		Dependencies:
			ADC16rr(impl(Reg<EFLAGS>) -> 0(Class<GR16>)) 
			ADC16ri(1(Class<GR16>) -> impl(Reg<EFLAGS>)) 
		Combined result: 1.01 cycles
	XOR16rr(2(Class<GR16>) -> impl(Reg<EFLAGS>))  [1;1.02]
		Dependencies:
			ADC16rr(impl(Reg<EFLAGS>) -> 0(Class<GR16>)) 
			ADC16ri(1(Class<GR16>) -> impl(Reg<EFLAGS>)) 
		Combined result: 2.02 cycles

-----XOR16rr_EVEX-----
	XOR16rr_EVEX(1(Class<GR16>) -> 0(Class<GR16>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	XOR16rr_EVEX(2(Class<GR16>) -> 0(Class<GR16>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----XOR16rr_EVEX_REV-----
	XOR16rr_EVEX_REV(1(Class<GR16>) -> 0(Class<GR16>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	XOR16rr_EVEX_REV(2(Class<GR16>) -> 0(Class<GR16>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----XOR16rr_ND-----
	XOR16rr_ND(1(Class<GR16>) -> 0(Class<GR16>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	XOR16rr_ND(2(Class<GR16>) -> 0(Class<GR16>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----XOR16rr_ND_REV-----
	XOR16rr_ND_REV(1(Class<GR16>) -> 0(Class<GR16>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	XOR16rr_ND_REV(2(Class<GR16>) -> 0(Class<GR16>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----XOR16rr_NF-----
	XOR16rr_NF(1(Class<GR16>) -> 0(Class<GR16>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	XOR16rr_NF(2(Class<GR16>) -> 0(Class<GR16>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----XOR16rr_NF_ND-----
	XOR16rr_NF_ND(1(Class<GR16>) -> 0(Class<GR16>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	XOR16rr_NF_ND(2(Class<GR16>) -> 0(Class<GR16>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----XOR16rr_NF_ND_REV-----
	XOR16rr_NF_ND_REV(1(Class<GR16>) -> 0(Class<GR16>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	XOR16rr_NF_ND_REV(2(Class<GR16>) -> 0(Class<GR16>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----XOR16rr_NF_REV-----
	XOR16rr_NF_REV(1(Class<GR16>) -> 0(Class<GR16>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	XOR16rr_NF_REV(2(Class<GR16>) -> 0(Class<GR16>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----XOR16rr_REV-----
	XOR16rr_REV(1(Class<GR16>) -> 0(Class<GR16>))  [1;1]
		 Successful, latency: 1
	XOR16rr_REV(2(Class<GR16>) -> 0(Class<GR16>))  [1.02;1.02]
		 Successful, latency: 1.02
	XOR16rr_REV(1(Class<GR16>) -> impl(Reg<EFLAGS>))  [ERROR_UNUSUAL_LATENCY]
		Dependencies:
			ADC16rr(impl(Reg<EFLAGS>) -> 0(Class<GR16>)) 
			ADC16ri(1(Class<GR16>) -> impl(Reg<EFLAGS>)) 
		Combined result: 1.01 cycles
	XOR16rr_REV(2(Class<GR16>) -> impl(Reg<EFLAGS>))  [1.02;1.03]
		Dependencies:
			ADC16rr(impl(Reg<EFLAGS>) -> 0(Class<GR16>)) 
			ADC16ri(1(Class<GR16>) -> impl(Reg<EFLAGS>)) 
		Combined result: 2.03 cycles

-----XOR32i32-----
	XOR32i32(impl(Reg<EAX>) -> impl(Reg<EAX>))  [1.01;1.01]
		 Successful, latency: 1.01
	XOR32i32(impl(Reg<EAX>) -> impl(Reg<EFLAGS>))  [1;1.02]
		Dependencies:
			ADC32i32(impl(Reg<EFLAGS>) -> impl(Reg<EAX>)) 
			ADC32i32(impl(Reg<EAX>) -> impl(Reg<EFLAGS>)) 
		Combined result: 2.02 cycles

-----XOR32ri-----
	XOR32ri(1(Class<GR32>) -> 0(Class<GR32>))  [1.01;1.01]
		 Successful, latency: 1.01
	XOR32ri(1(Class<GR32>) -> impl(Reg<EFLAGS>))  [ERROR_UNUSUAL_LATENCY]
		Dependencies:
			ADC32ri8(impl(Reg<EFLAGS>) -> 0(Class<GR32>)) 
			ADC32ri(1(Class<GR32>) -> impl(Reg<EFLAGS>)) 
		Combined result: 1.01 cycles

-----XOR32ri8-----
	XOR32ri8(1(Class<GR32>) -> 0(Class<GR32>))  [1.01;1.01]
		 Successful, latency: 1.01
	XOR32ri8(1(Class<GR32>) -> impl(Reg<EFLAGS>))  [ERROR_UNUSUAL_LATENCY]
		Dependencies:
			ADC32ri8(impl(Reg<EFLAGS>) -> 0(Class<GR32>)) 
			ADC32ri(1(Class<GR32>) -> impl(Reg<EFLAGS>)) 
		Combined result: 1.02 cycles

-----XOR32ri8_EVEX-----
	XOR32ri8_EVEX(1(Class<GR32>) -> 0(Class<GR32>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----XOR32ri8_ND-----
	XOR32ri8_ND(1(Class<GR32>) -> 0(Class<GR32>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----XOR32ri8_NF-----
	XOR32ri8_NF(1(Class<GR32>) -> 0(Class<GR32>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----XOR32ri8_NF_ND-----
	XOR32ri8_NF_ND(1(Class<GR32>) -> 0(Class<GR32>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----XOR32ri_EVEX-----
	XOR32ri_EVEX(1(Class<GR32>) -> 0(Class<GR32>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----XOR32ri_ND-----
	XOR32ri_ND(1(Class<GR32>) -> 0(Class<GR32>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----XOR32ri_NF-----
	XOR32ri_NF(1(Class<GR32>) -> 0(Class<GR32>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----XOR32ri_NF_ND-----
	XOR32ri_NF_ND(1(Class<GR32>) -> 0(Class<GR32>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----XOR32rr-----
	XOR32rr(1(Class<GR32>) -> 0(Class<GR32>))  [1;1]
		 Successful, latency: 1
	XOR32rr(2(Class<GR32>) -> 0(Class<GR32>))  [0.168;0.168]
		 Successful, latency: 0.168
	XOR32rr(1(Class<GR32>) -> impl(Reg<EFLAGS>))  [ERROR_UNUSUAL_LATENCY]
		Dependencies:
			ADC32ri8(impl(Reg<EFLAGS>) -> 0(Class<GR32>)) 
			ADC32ri(1(Class<GR32>) -> impl(Reg<EFLAGS>)) 
		Combined result: 1.01 cycles
	XOR32rr(2(Class<GR32>) -> impl(Reg<EFLAGS>))  [0.999;1.02]
		Dependencies:
			ADC32ri8(impl(Reg<EFLAGS>) -> 0(Class<GR32>)) 
			ADC32ri(1(Class<GR32>) -> impl(Reg<EFLAGS>)) 
		Combined result: 2.02 cycles

-----XOR32rr_EVEX-----
	XOR32rr_EVEX(1(Class<GR32>) -> 0(Class<GR32>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	XOR32rr_EVEX(2(Class<GR32>) -> 0(Class<GR32>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----XOR32rr_EVEX_REV-----
	XOR32rr_EVEX_REV(1(Class<GR32>) -> 0(Class<GR32>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	XOR32rr_EVEX_REV(2(Class<GR32>) -> 0(Class<GR32>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----XOR32rr_ND-----
	XOR32rr_ND(1(Class<GR32>) -> 0(Class<GR32>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	XOR32rr_ND(2(Class<GR32>) -> 0(Class<GR32>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----XOR32rr_ND_REV-----
	XOR32rr_ND_REV(1(Class<GR32>) -> 0(Class<GR32>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	XOR32rr_ND_REV(2(Class<GR32>) -> 0(Class<GR32>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----XOR32rr_NF-----
	XOR32rr_NF(1(Class<GR32>) -> 0(Class<GR32>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	XOR32rr_NF(2(Class<GR32>) -> 0(Class<GR32>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----XOR32rr_NF_ND-----
	XOR32rr_NF_ND(1(Class<GR32>) -> 0(Class<GR32>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	XOR32rr_NF_ND(2(Class<GR32>) -> 0(Class<GR32>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----XOR32rr_NF_ND_REV-----
	XOR32rr_NF_ND_REV(1(Class<GR32>) -> 0(Class<GR32>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	XOR32rr_NF_ND_REV(2(Class<GR32>) -> 0(Class<GR32>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----XOR32rr_NF_REV-----
	XOR32rr_NF_REV(1(Class<GR32>) -> 0(Class<GR32>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	XOR32rr_NF_REV(2(Class<GR32>) -> 0(Class<GR32>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----XOR32rr_REV-----
	XOR32rr_REV(1(Class<GR32>) -> 0(Class<GR32>))  [1.01;1.01]
		 Successful, latency: 1.01
	XOR32rr_REV(2(Class<GR32>) -> 0(Class<GR32>))  [0.168;0.168]
		 Successful, latency: 0.168
	XOR32rr_REV(1(Class<GR32>) -> impl(Reg<EFLAGS>))  [ERROR_UNUSUAL_LATENCY]
		Dependencies:
			ADC32ri8(impl(Reg<EFLAGS>) -> 0(Class<GR32>)) 
			ADC32ri(1(Class<GR32>) -> impl(Reg<EFLAGS>)) 
		Combined result: 1.01 cycles
	XOR32rr_REV(2(Class<GR32>) -> impl(Reg<EFLAGS>))  [0.989;1.01]
		Dependencies:
			ADC32ri8(impl(Reg<EFLAGS>) -> 0(Class<GR32>)) 
			ADC32ri(1(Class<GR32>) -> impl(Reg<EFLAGS>)) 
		Combined result: 2.02 cycles

-----XOR64i32-----
	XOR64i32(impl(Reg<RAX>) -> impl(Reg<RAX>))  [1.02;1.02]
		 Successful, latency: 1.02
	XOR64i32(impl(Reg<RAX>) -> impl(Reg<EFLAGS>))  [1;1.02]
		Dependencies:
			CMP64i32(impl(Reg<RAX>) -> impl(Reg<EFLAGS>)) 
			ADC64i32(impl(Reg<EFLAGS>) -> impl(Reg<RAX>)) 
		Combined result: 2.02 cycles

-----XOR64ri32-----
	XOR64ri32(1(Class<GR64>) -> 0(Class<GR64>))  [1.02;1.02]
		 Successful, latency: 1.02
	XOR64ri32(1(Class<GR64>) -> impl(Reg<EFLAGS>))  [ERROR_UNUSUAL_LATENCY]
		Dependencies:
			ADC64rr(impl(Reg<EFLAGS>) -> 0(Class<GR64>)) 
			ADC64ri32(1(Class<GR64>) -> impl(Reg<EFLAGS>)) 
		Combined result: 1 cycles

-----XOR64ri32_EVEX-----
	XOR64ri32_EVEX(1(Class<GR64>) -> 0(Class<GR64>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----XOR64ri32_ND-----
	XOR64ri32_ND(1(Class<GR64>) -> 0(Class<GR64>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----XOR64ri32_NF-----
	XOR64ri32_NF(1(Class<GR64>) -> 0(Class<GR64>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----XOR64ri32_NF_ND-----
	XOR64ri32_NF_ND(1(Class<GR64>) -> 0(Class<GR64>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----XOR64ri8-----
	XOR64ri8(1(Class<GR64>) -> 0(Class<GR64>))  [1;1]
		 Successful, latency: 1
	XOR64ri8(1(Class<GR64>) -> impl(Reg<EFLAGS>))  [ERROR_UNUSUAL_LATENCY]
		Dependencies:
			ADC64rr(impl(Reg<EFLAGS>) -> 0(Class<GR64>)) 
			ADC64ri32(1(Class<GR64>) -> impl(Reg<EFLAGS>)) 
		Combined result: 1 cycles

-----XOR64ri8_EVEX-----
	XOR64ri8_EVEX(1(Class<GR64>) -> 0(Class<GR64>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----XOR64ri8_ND-----
	XOR64ri8_ND(1(Class<GR64>) -> 0(Class<GR64>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----XOR64ri8_NF-----
	XOR64ri8_NF(1(Class<GR64>) -> 0(Class<GR64>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----XOR64ri8_NF_ND-----
	XOR64ri8_NF_ND(1(Class<GR64>) -> 0(Class<GR64>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----XOR64rr-----
	XOR64rr(1(Class<GR64>) -> 0(Class<GR64>))  [1;1]
		 Successful, latency: 1
	XOR64rr(2(Class<GR64>) -> 0(Class<GR64>))  [0.168;0.168]
		 Successful, latency: 0.168
	XOR64rr(1(Class<GR64>) -> impl(Reg<EFLAGS>))  [ERROR_UNUSUAL_LATENCY]
		Dependencies:
			ADC64rr(impl(Reg<EFLAGS>) -> 0(Class<GR64>)) 
			ADC64ri32(1(Class<GR64>) -> impl(Reg<EFLAGS>)) 
		Combined result: 1 cycles
	XOR64rr(2(Class<GR64>) -> impl(Reg<EFLAGS>))  [1.01;1.03]
		Dependencies:
			ADC64rr(impl(Reg<EFLAGS>) -> 0(Class<GR64>)) 
			ADC64ri32(1(Class<GR64>) -> impl(Reg<EFLAGS>)) 
		Combined result: 2.02 cycles

-----XOR64rr_EVEX-----
	XOR64rr_EVEX(1(Class<GR64>) -> 0(Class<GR64>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	XOR64rr_EVEX(2(Class<GR64>) -> 0(Class<GR64>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----XOR64rr_EVEX_REV-----
	XOR64rr_EVEX_REV(1(Class<GR64>) -> 0(Class<GR64>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	XOR64rr_EVEX_REV(2(Class<GR64>) -> 0(Class<GR64>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----XOR64rr_ND-----
	XOR64rr_ND(1(Class<GR64>) -> 0(Class<GR64>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	XOR64rr_ND(2(Class<GR64>) -> 0(Class<GR64>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----XOR64rr_ND_REV-----
	XOR64rr_ND_REV(1(Class<GR64>) -> 0(Class<GR64>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	XOR64rr_ND_REV(2(Class<GR64>) -> 0(Class<GR64>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----XOR64rr_NF-----
	XOR64rr_NF(1(Class<GR64>) -> 0(Class<GR64>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	XOR64rr_NF(2(Class<GR64>) -> 0(Class<GR64>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----XOR64rr_NF_ND-----
	XOR64rr_NF_ND(1(Class<GR64>) -> 0(Class<GR64>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	XOR64rr_NF_ND(2(Class<GR64>) -> 0(Class<GR64>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----XOR64rr_NF_ND_REV-----
	XOR64rr_NF_ND_REV(1(Class<GR64>) -> 0(Class<GR64>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	XOR64rr_NF_ND_REV(2(Class<GR64>) -> 0(Class<GR64>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----XOR64rr_NF_REV-----
	XOR64rr_NF_REV(1(Class<GR64>) -> 0(Class<GR64>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	XOR64rr_NF_REV(2(Class<GR64>) -> 0(Class<GR64>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----XOR64rr_REV-----
	XOR64rr_REV(1(Class<GR64>) -> 0(Class<GR64>))  [1.01;1.01]
		 Successful, latency: 1.01
	XOR64rr_REV(2(Class<GR64>) -> 0(Class<GR64>))  [0.168;0.168]
		 Successful, latency: 0.168
	XOR64rr_REV(1(Class<GR64>) -> impl(Reg<EFLAGS>))  [ERROR_UNUSUAL_LATENCY]
		Dependencies:
			ADC64rr(impl(Reg<EFLAGS>) -> 0(Class<GR64>)) 
			ADC64ri32(1(Class<GR64>) -> impl(Reg<EFLAGS>)) 
		Combined result: 1.01 cycles
	XOR64rr_REV(2(Class<GR64>) -> impl(Reg<EFLAGS>))  [1.01;1.02]
		Dependencies:
			ADC64rr(impl(Reg<EFLAGS>) -> 0(Class<GR64>)) 
			ADC64ri32(1(Class<GR64>) -> impl(Reg<EFLAGS>)) 
		Combined result: 2.02 cycles

-----XOR8i8-----
	XOR8i8(impl(Reg<AL>) -> impl(Reg<AL>))  [1.01;1.01]
		 Successful, latency: 1.01
	XOR8i8(impl(Reg<AL>) -> impl(Reg<EFLAGS>))  [1;1.02]
		Dependencies:
			ADC8i8(impl(Reg<EFLAGS>) -> impl(Reg<AL>)) 
			CMP8i8(impl(Reg<AL>) -> impl(Reg<EFLAGS>)) 
		Combined result: 2.02 cycles

-----XOR8ri-----
	XOR8ri(1(Class<GR8>) -> 0(Class<GR8>))  [1.01;1.01]
		 Successful, latency: 1.01
	XOR8ri(1(Class<GR8>) -> impl(Reg<EFLAGS>))  [ERROR_UNUSUAL_LATENCY]
		Dependencies:
			ADC8ri8(impl(Reg<EFLAGS>) -> 0(Class<GR8>)) 
			ADC8ri(1(Class<GR8>) -> impl(Reg<EFLAGS>)) 
		Combined result: 1.01 cycles

-----XOR8ri8-----
	XOR8ri8(1(Class<GR8>) -> 0(Class<GR8>))  [1.01;1.01]
		 Successful, latency: 1.01
	XOR8ri8(1(Class<GR8>) -> impl(Reg<EFLAGS>))  [ERROR_UNUSUAL_LATENCY]
		Dependencies:
			ADC8ri8(impl(Reg<EFLAGS>) -> 0(Class<GR8>)) 
			ADC8ri(1(Class<GR8>) -> impl(Reg<EFLAGS>)) 
		Combined result: 1.02 cycles

-----XOR8ri_EVEX-----
	XOR8ri_EVEX(1(Class<GR8>) -> 0(Class<GR8>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----XOR8ri_ND-----
	XOR8ri_ND(1(Class<GR8>) -> 0(Class<GR8>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----XOR8ri_NF-----
	XOR8ri_NF(1(Class<GR8>) -> 0(Class<GR8>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----XOR8ri_NF_ND-----
	XOR8ri_NF_ND(1(Class<GR8>) -> 0(Class<GR8>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----XOR8rr-----
	XOR8rr(1(Class<GR8>) -> 0(Class<GR8>))  [1.01;1.01]
		 Successful, latency: 1.01
	XOR8rr(2(Class<GR8>) -> 0(Class<GR8>))  [1;1]
		 Successful, latency: 1
	XOR8rr(1(Class<GR8>) -> impl(Reg<EFLAGS>))  [ERROR_UNUSUAL_LATENCY]
		Dependencies:
			ADC8ri8(impl(Reg<EFLAGS>) -> 0(Class<GR8>)) 
			ADC8ri(1(Class<GR8>) -> impl(Reg<EFLAGS>)) 
		Combined result: 1 cycles
	XOR8rr(2(Class<GR8>) -> impl(Reg<EFLAGS>))  [1.01;1.02]
		Dependencies:
			ADC8ri8(impl(Reg<EFLAGS>) -> 0(Class<GR8>)) 
			ADC8ri(1(Class<GR8>) -> impl(Reg<EFLAGS>)) 
		Combined result: 2.02 cycles

-----XOR8rr_EVEX-----
	XOR8rr_EVEX(1(Class<GR8>) -> 0(Class<GR8>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	XOR8rr_EVEX(2(Class<GR8>) -> 0(Class<GR8>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----XOR8rr_EVEX_REV-----
	XOR8rr_EVEX_REV(1(Class<GR8>) -> 0(Class<GR8>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	XOR8rr_EVEX_REV(2(Class<GR8>) -> 0(Class<GR8>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----XOR8rr_ND-----
	XOR8rr_ND(1(Class<GR8>) -> 0(Class<GR8>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	XOR8rr_ND(2(Class<GR8>) -> 0(Class<GR8>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----XOR8rr_ND_REV-----
	XOR8rr_ND_REV(1(Class<GR8>) -> 0(Class<GR8>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	XOR8rr_ND_REV(2(Class<GR8>) -> 0(Class<GR8>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----XOR8rr_NF-----
	XOR8rr_NF(1(Class<GR8>) -> 0(Class<GR8>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	XOR8rr_NF(2(Class<GR8>) -> 0(Class<GR8>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----XOR8rr_NF_ND-----
	XOR8rr_NF_ND(1(Class<GR8>) -> 0(Class<GR8>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	XOR8rr_NF_ND(2(Class<GR8>) -> 0(Class<GR8>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----XOR8rr_NF_ND_REV-----
	XOR8rr_NF_ND_REV(1(Class<GR8>) -> 0(Class<GR8>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	XOR8rr_NF_ND_REV(2(Class<GR8>) -> 0(Class<GR8>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----XOR8rr_NF_REV-----
	XOR8rr_NF_REV(1(Class<GR8>) -> 0(Class<GR8>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	XOR8rr_NF_REV(2(Class<GR8>) -> 0(Class<GR8>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----XOR8rr_NOREX-----
	XOR8rr_NOREX(1(Class<GR8_NOREX>) -> 0(Class<GR8_NOREX>))  [1.01;1.01]
		 Successful, latency: 1.01
	XOR8rr_NOREX(2(Class<GR8_NOREX>) -> 0(Class<GR8_NOREX>))  [1;1]
		 Successful, latency: 1

-----XOR8rr_REV-----
	XOR8rr_REV(1(Class<GR8>) -> 0(Class<GR8>))  [1;1]
		 Successful, latency: 1
	XOR8rr_REV(2(Class<GR8>) -> 0(Class<GR8>))  [1.01;1.01]
		 Successful, latency: 1.01
	XOR8rr_REV(1(Class<GR8>) -> impl(Reg<EFLAGS>))  [ERROR_UNUSUAL_LATENCY]
		Dependencies:
			ADC8ri8(impl(Reg<EFLAGS>) -> 0(Class<GR8>)) 
			ADC8ri(1(Class<GR8>) -> impl(Reg<EFLAGS>)) 
		Combined result: 1.01 cycles
	XOR8rr_REV(2(Class<GR8>) -> impl(Reg<EFLAGS>))  [1.01;1.03]
		Dependencies:
			ADC8ri8(impl(Reg<EFLAGS>) -> 0(Class<GR8>)) 
			ADC8ri(1(Class<GR8>) -> impl(Reg<EFLAGS>)) 
		Combined result: 2.03 cycles

-----XORPDrr-----
	XORPDrr(1(Class<VR128>) -> 0(Class<VR128>))  [1;1]
		 Successful, latency: 1
	XORPDrr(2(Class<VR128>) -> 0(Class<VR128>))  [0.25;0.25]
		 Successful, latency: 0.25

-----XORPSrr-----
	XORPSrr(1(Class<VR128>) -> 0(Class<VR128>))  [0.996;0.996]
		 Successful, latency: 0.996
	XORPSrr(2(Class<VR128>) -> 0(Class<VR128>))  [0.25;0.25]
		 Successful, latency: 0.25

-----XSHA1-----
	XSHA1(impl(Reg<RAX>) -> impl(Reg<RAX>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	XSHA1(impl(Reg<RSI>) -> impl(Reg<RSI>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	XSHA1(impl(Reg<RDI>) -> impl(Reg<RDI>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----XSHA256-----
	XSHA256(impl(Reg<RAX>) -> impl(Reg<RAX>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	XSHA256(impl(Reg<RSI>) -> impl(Reg<RSI>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform
	XSHA256(impl(Reg<RDI>) -> impl(Reg<RDI>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

-----XSTORE-----
	XSTORE(impl(Reg<RDI>) -> impl(Reg<RDI>))  [ERROR_ILLEGAL_INSTRUCTION]
		ERROR_ILLEGAL_INSTRUCTION, this instruction cannot be measured on this platform

total runtime: 2952.11 (s)
